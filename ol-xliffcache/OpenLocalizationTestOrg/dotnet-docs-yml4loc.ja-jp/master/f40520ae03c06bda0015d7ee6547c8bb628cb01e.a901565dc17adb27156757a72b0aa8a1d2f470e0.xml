{"nodes":[{"content":"Represents an instant in time, typically expressed as a date and time of day.","nodes":[{"pos":[0,77],"content":"Represents an instant in time, typically expressed as a date and time of day.","nodes":[{"content":"Represents an instant in time, typically expressed as a date and time of day.","pos":[0,77]}]}],"pos":[7012,7090],"yaml":true},{"content":"> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D. (C.E.) in the Gregorian calendar.  \n  \n Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar (excluding ticks that would be added by leap seconds). For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight. A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.  \n  \n> [!NOTE]\n>  If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  \n  \n In this section:  \n  \n [Instantiating a DateTime object](#instantiating_datetime)   \n [DateTime values and their string representations](#datetime_values_strings)   \n [Converting strings to DateTime values](#parsing)   \n [Version considerations](#datetime_versions)   \n [DateTime values](#datetime_values)   \n [DateTime operations](#datetime_ops)   \n [DateTime resolution](#Resolution)   \n [DateTime vs. TimeSpan](#datetime_timespan)   \n [DateTime values and calendars](#Calendars)   \n [Persisting DateTime values](#Persisting)   \n [COM interop considerations](#com_interop)  \n  \n<a name=\"instantiating_datetime\"></a>   \n## Instantiating a DateTime object  \n You can create a new <xref:System.DateTime> value in any of the following ways:  \n  \n-   By calling any of the overloads of the <xref:System.DateTime> constructor that allow you to specify specific elements of the date and time value (such as the year, month, and day, or the number of ticks). The following statement illustrates a call to one of the <xref:System.DateTime> constructors to create a date with a specific year, month, day, hour, minute, and second.  \n  \n     [!code-csharp[System.DateTime.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#1)]\n     [!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#1)]  \n  \n-   By using any compiler-specific syntax for declaring date and time values. For example, the following Visual Basic statement initializes a new <xref:System.DateTime> value.  \n  \n     [!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#2)]  \n  \n-   By assigning the <xref:System.DateTime> object a date and time value returned by a property or method. The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.  \n  \n     [!code-csharp[System.DateTime.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#3)]\n     [!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#3)]  \n  \n-   By parsing the string representation of a date and time value. The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value. The following example uses the <xref:System.DateTime.Parse%2A> method to parse a string and convert it to a <xref:System.DateTime> value.  \n  \n     [!code-csharp[System.DateTime.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#4)]\n     [!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#4)]  \n  \n     Note that the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a particular string contains a valid representation of a <xref:System.DateTime> value in addition to performing the conversion.  \n  \n-   By calling the <xref:System.DateTime> structure's implicit default constructor. (For details on the implicit default constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) An approximate equivalent, for compilers that support it, is declaring a <xref:System.DateTime> value without explicitly assigning a date and time to it. The following example illustrates a call to the <xref:System.DateTime> implicit default constructor in C# and Visual Basic, as well as a <xref:System.DateTime> variable declaration with no assignment in Visual Basic.  \n  \n     [!code-csharp[System.DateTime.Instantiation#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#5)]\n     [!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#5)]  \n  \n<a name=\"datetime_values_strings\"></a>   \n## DateTime values and their string representations  \n Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001. The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed in a user interface element or when written to a file. The appearance of a <xref:System.DateTime> value is the result of a formatting operation. Formatting is the process of converting a value to its string representation.  \n  \n Because the appearance of date and time values is dependent on such factors as culture, international standards, application requirements, and personal preference, the <xref:System.DateTime> structure offers a great deal of flexibility in formatting date and time values through the overloads of its <xref:System.DateTime.ToString%2A> method. The default <xref:System.DateTime.ToString?displayProperty=fullName> method returns the string representation of a date and time value using the current culture's short date and long time pattern. The following example uses the default <xref:System.DateTime.ToString?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the en-US culture, the current culture on the computer on which the example was run.  \n  \n [!code-csharp[System.DateTime.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#1)]\n [!code-vb[System.DateTime.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#1)]  \n  \n The <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method returns the string representation of a date and time value using the short date and long time pattern of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the fr-FR culture.  \n  \n [!code-csharp[System.DateTime.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#2)]\n [!code-vb[System.DateTime.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#2)]  \n  \n The <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a standard or custom format specifier and using the formatting conventions of the current culture. The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.  \n  \n [!code-csharp[System.DateTime.Formatting#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#3)]\n [!code-vb[System.DateTime.Formatting#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#3)]  \n  \n The <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a specific format specifier and using the formatting conventions of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method to display the full date and time pattern for the fr-FR culture.  \n  \n [!code-csharp[System.DateTime.Formatting#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#4)]\n [!code-vb[System.DateTime.Formatting#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#4)]  \n  \n For more information about formatting <xref:System.DateTime> values, see  [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n<a name=\"parsing\"></a>   \n## Converting strings to DateTime values  \n Parsing involves converting the string representation of a date and time to a <xref:System.DateTime> value. Typically, date and time strings have two different usages in applications:  \n  \n-   They represent a date and time that can take a variety of forms and that reflect the conventions of either the current culture or a specific culture. For example, an application may allow a user whose current culture is en-US to input a date value as \"12/15/2013\" or \"December 15, 2013\", and allow a user whose current culture is en-GB to input a date value as \"15/12/2013\" or \"15 December 2013\".  \n  \n-   They represent a date and time in a predefined format. For example, an application may serialize a date as \"20130103\" independently of the culture on which the app is running, or it may require that a date be input in the current culture's short date format.  \n  \n You can use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string that might reflect one of the common date and time formats used by a culture to a <xref:System.DateTime> value. The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in a number of different culture-specific formats to a <xref:System.DateTime> value. It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings. It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method. The output from the example shows that the parsing method was able to successfully convert each of the culture-specific date and time strings.  \n  \n [!code-csharp[System.DateTime.Parsing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex1.cs#1)]\n [!code-vb[System.DateTime.Parsing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex1.vb#1)]  \n  \n You can use the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a date and time string that must match a particular format or formats to a <xref:System.DateTime> value. You specify the required format or formats as a parameter to the parsing methodby using one or more  or  date and time format strings. The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a \"yyyyMMdd\" format or a \"HHmmss\" format to <xref:System.DateTime> values.  \n  \n [!code-csharp[System.DateTime.Parsing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex2.cs#2)]\n [!code-vb[System.DateTime.Parsing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex2.vb#2)]  \n  \n The <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception if the string to be converted to a <xref:System.DateTime> value cannot be parsed. The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed. Because the parsing operation for date and time strings, particularly if strings are input by users, tends to have a high failure rate, and because exception handling is expensive, you should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important or conversions are subject to a high rate of failure.  \n  \n For more information about parsing date and time values, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md).  \n  \n<a name=\"datetime_versions\"></a>   \n## Version considerations  \n Prior to the .NET Framework version 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of an unused 2-bit field concatenated with a private `Ticks` field, which is a 62-bit unsigned field that contains the number of ticks that represent the date and time. The value of the `Ticks` field can be obtained with the <xref:System.DateTime.Ticks%2A> property.  \n  \n Starting with the .NET Framework 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field. The Kind field is a 2-bit field that indicates whether the <xref:System.DateTime> structure represents a local time, a Coordinated Universal Time (UTC), or the time in an unspecified time zone. The Kind field is used when performing time conversions between time zones, but not for time comparisons or arithmetic. The value of the Kind field can be obtained with the <xref:System.DateTime.Kind%2A> property.  \n  \n> [!NOTE]\n>  An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure. The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field. This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time. For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).  \n  \n<a name=\"datetime_values\"></a>   \n## DateTime values  \n Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT). Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point. Daylight saving time is not applicable to UTC.  \n  \n Local time is relative to a particular time zone. A time zone is associated with a time zone offset, which is the displacement of the time zone measured in hours from the UTC origin point. In addition, local time is optionally affected by daylight saving time, which adds or subtracts an hour from the length of a day. Consequently, local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary. The time zone offset at the UTC origin point is zero.  \n  \n UTC time is suitable for calculations, comparisons, and storing dates and time in files. Local time is appropriate for display in user interfaces of desktop applications. Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.  \n  \n If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.  \n  \n<a name=\"datetime_ops\"></a>   \n## DateTime operations  \n A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure. Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.  \n  \n Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.  \n  \n The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another. You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC. However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class. Using these methods, you can convert the time in any one of the world's time zones to the time in any other time zone.  \n  \n Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone. You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled. (That is, a <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone other than the <xref:System.DateTime.Kind%2A> property.) For this reason, in a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created. For example, you could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone. For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md).  \n  \n Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation, with the exception of constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName>, that implicitly specifies a calendar.  \n  \n Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month.  \n  \n Two other common operations with <xref:System.DateTime> values involve converting a date and time value to or from its string representation. The process of converting a <xref:System.DateTime> value to its string representation is a formatting operation; for more information about formatting, see [DateTime values and their string representations](#datetime_values_strings). The process of converting the string representation of a date and time to a <xref:System.DateTime> value is a parsing operation; for more information about parsing, see [Converting strings to DateTime values](#parsing).  \n  \n<a name=\"Resolution\"></a>   \n## DateTime resolution  \n  \n> [!NOTE]\n>  As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class.  \n  \n The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second, and the <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value. However, if you are using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=fullName> property to measure elapsed time, and you are concerned with small time intervals less than 100 milliseconds, you should note that values returned by the <xref:System.DateTime.Now%2A?displayProperty=fullName> property are dependent on the system clock, which on Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.  \n  \n The following example illustrates the dependence of current date and time values on the resolution of the system clock. In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop. If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName> method introduces a five millisecond delay. As the output from the example shows, the number of milliseconds in returned by the `DateTime.Now.Milliseconds` property changed only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName>.  \n  \n [!code-cpp[System.DateTime.Now#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/resolution2.cpp#1)]\n [!code-csharp[System.DateTime.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/resolution2.cs#1)]\n [!code-vb[System.DateTime.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/resolution2.vb#1)]  \n  \n<a name=\"datetime_timespan\"></a>   \n## DateTime vs. TimeSpan  \n The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval. This means, for example, that you can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them. Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.  \n  \n You can add or subtract a time interval from a <xref:System.DateTime> object. Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <xref:System.TimeSpan> object.  \n  \n<a name=\"Calendars\"></a>   \n## DateTime values and calendars  \n The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.  They are:  \n  \n-   The <xref:System.Globalization.ChineseLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.EastAsianLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.GregorianCalendar> class.  \n  \n-   The <xref:System.Globalization.HebrewCalendar> class.  \n  \n-   The <xref:System.Globalization.HijriCalendar> class.  \n  \n-   The <xref:System.Globalization.JapaneseCalendar> class.  \n  \n-   The <xref:System.Globalization.JapaneseLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.JulianCalendar> class.  \n  \n-   The <xref:System.Globalization.KoreanCalendar> class.  \n  \n-   The <xref:System.Globalization.KoreanLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.PersianCalendar> class.  \n  \n-   The <xref:System.Globalization.TaiwanCalendar> class.  \n  \n-   The <xref:System.Globalization.TaiwanLunisolarCalendar> class.  \n  \n-   The <xref:System.Globalization.ThaiBuddhistCalendar> class.  \n  \n-   The <xref:System.Globalization.UmAlQuraCalendar> class.  \n  \n Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName> property and supports one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> property. The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property; it must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> array.  \n  \n A culture's current calendar is used in all formatting operations for that culture. For example, the default calendar of the Persian (Iran) culture is the Umm al-Qura calendar, which is represented by the <xref:System.Globalization.UmAlQuraCalendar> class.  When a <xref:System.Globalization.CultureInfo> object that represents the Persian (Iran) culture is used in a date and time formatting operation, the Umm al-Qura calendar is used by default, and the Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property is changed, as the following example shows.  \n  \n [!code-csharp[System.DateTime.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraCalendar1.cs#1)]\n [!code-vb[System.DateTime.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraCalendar1.vb#1)]  \n  \n A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.  \n  \n [!code-csharp[System.DateTime.Calendar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraParse1.cs#2)]\n [!code-vb[System.DateTime.Calendar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraParse1.vb#2)]  \n  \n You can also instantiate a <xref:System.DateTime> value by using the date and time elements (such as the number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](../Topic/DateTime%20Constructor.md) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar. The following example does this by using the date and time elements from the <xref:System.Globalization.UmAlQuraCalendar> calendar.  \n  \n [!code-csharp[System.DateTime.Calendar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Ctor1.cs#3)]\n [!code-vb[System.DateTime.Calendar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Ctor1.vb#3)]  \n  \n <xref:System.DateTime> constructors that do not include a `calendar` parameter assume that the date and time elements are expressed as units in the Gregorian calendar.  \n  \n All other <xref:System.DateTime> properties and methods use the Gregorian calendar. For example, the <xref:System.DateTime.Year%2A?displayProperty=fullName> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=fullName> method assumes that the `year` parameter is a year in the Gregorian calendar.  Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that  uses a specific calendar. For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=fullName> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=fullName> method interprets the `year` parameter as a year number in a specific calendar. The following example use both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.UmAlQuraCalendar> class.  \n  \n [!code-csharp[System.DateTime.Calendar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/DateTimesAndCalendars1.cs#4)]\n [!code-vb[System.DateTime.Calendar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/DateTimesAndCalendars1.vb#4)]  \n  \n Although the <xref:System.DateTime> structure includes <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar, it does not include a member that allows you to retrieve the week number of the year. To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=fullName> method. The following example provides an illustration.  \n  \n [!code-csharp[System.DateTime.Calendar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Weeks1.cs#5)]\n [!code-vb[System.DateTime.Calendar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Weeks1.vb#5)]  \n  \n For more information on dates and calendars, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).  \n  \n<a name=\"Persisting\"></a>   \n## Persisting DateTime values  \n You can persist <xref:System.DateTime> values in four ways:  \n  \n-   You can [convert them to strings](#Strings) and persist the strings.  \n  \n-   You can [convert them to 64-bit integer values](#Integers) (the value of the <xref:System.DateTime.Ticks%2A> property) and persist the integers.  \n  \n-   You can[serialize the DateTime values](#Serialized).  \n  \n-   You can [serialize the DateTime values along with time zone information](#TimeZone).  \n  \n Regardless of which technique you choose, you must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception. <xref:System.DateTime> values should round-trip. That is, the original value and the restored value should be the same. And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.  \n  \n<a name=\"Strings\"></a>   \n### Persisting values as strings  \n To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:  \n  \n-   Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it. To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A>overload to save the string by using the conventions of the invariant culture, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture. Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.  \n  \n-   If the data represents a single moment of time, ensure that it represents the same moment in time when it's restored, even if it's restored on a system that uses a different time zone. To do this, you convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it. You can also serialize the value along with time zone information; for more information about this approach, see [Serializing DateTime and time zone data](#TimeZone).  \n  \n The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture. Problems arise if the current culture is different when saving and restoring the strings. The following example illustrates these problems. It saves five dates using the formatting conventions of the current culture, which in this case is English (United States). It restores the dates using the formatting conventions of the current culture, which in this case is English (Great Britain). Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly. Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.  \n  \n [!code-csharp[System.DateTime.Persist#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist1.cs#1)]\n [!code-vb[System.DateTime.Persist#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist1.vb#1)]  \n  \n To round-trip <xref:System.DateTime> values successfully, follow these steps:  \n  \n1.  If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.  \n  \n2.  Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> overload. Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument. Specify that the value should round-trip by using the \"O\" or \"R\" .  \n  \n3.  When you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.  \n  \n To restore the persisted <xref:System.DateTime> values without data loss, do the following:  \n  \n1.  Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload. Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion. Include the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value in the `styles` argument.  \n  \n2.  If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time.  \n  \n The following example uses the invariant culture and the \"O\" standard format string to ensure that <xref:System.DateTime> values that are saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.  \n  \n [!code-csharp[System.DateTime.Persist#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist2.cs#2)]\n [!code-vb[System.DateTime.Persist#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist2.vb#2)]  \n  \n<a name=\"Integers\"></a>   \n### Persisting values as integers  \n Instead of persisting a <xref:System.DateTime> value as a string, you can persist it as an <xref:System.Int64> value that represents a number of ticks. In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.  \n  \n To persist a <xref:System.DateTime> value as an integer:  \n  \n-   If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.  \n  \n-   Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property.  \n  \n To restore a <xref:System.DateTime> value that has been persisted as an integer:  \n  \n1.  Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor.  \n  \n2.  If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.  \n  \n The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone. It restores it on a system in the UTC zone. The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.  \n  \n [!code-csharp[System.DateTime.Persist#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist4.cs#4)]\n [!code-vb[System.DateTime.Persist#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist4.vb#4)]  \n  \n<a name=\"Serialized\"></a>   \n### Serializing DateTime values  \n Instead of saving <xref:System.DateTime> values as strings or integers, which you then have to convert back to <xref:System.DateTime> values, you can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization. In this case, <xref:System.DateTime>data is serialized in some specified object format, and the objects are restored when they are deserialized. A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization. For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](http://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453).  \n  \n The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values that represent all leap year days in the twenty-first century. The output represents the result if the example is run on a system whose current culture is English (Great Britain). Because we've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.  \n  \n [!code-csharp[System.DateTime.Persist#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist5.cs#5)]\n [!code-vb[System.DateTime.Persist#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist5.vb#5)]  \n  \n The previous example doesn't include time information. However, if a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, you should convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method. After you deserialize it, you should convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method. The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize<xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the UTC zone.  \n  \n [!code-csharp[System.DateTime.Persist#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist3.cs#3)]\n [!code-vb[System.DateTime.Persist#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist3.vb#3)]  \n  \n<a name=\"TimeZone\"></a>   \n### Serializing DateTime and time zone data  \n The previous examples have all assumed that <xref:System.DateTime> values are expressed as local times, and converted the values between UTC and local time so they reflect the same moment in time on the source and target systems. <xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC. In this case, because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime>value and the <xref:System.TimeZoneInfo> object that represents its time zone. To do this, create a type whose fields include both the <xref:System.DateTime> value and its time zone. The following example defines a `DateWithTimeZone` structure that illustrates how this might be done.  \n  \n [!code-csharp[System.DateTime.Persist#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist6.cs#6)]\n [!code-vb[System.DateTime.Persist#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist6.vb#6)]  \n  \n> [!IMPORTANT]\n>  The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects. To run the examples, first create a class library that contains the `DateWithTimeZone` structure, and then add a reference to it when you compile each example.  \n  \n By using the `DateWithTimeZone` structure , you can then persist date and time along with time zone information. The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects.  \n  \n [!code-csharp[System.DateTime.Persist#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist7.cs#7)]\n [!code-vb[System.DateTime.Persist#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist7.vb#7)]  \n  \n The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=fullName> method to deserialize it.  \n  \n [!code-csharp[System.DateTime.Persist#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist8.cs#8)]\n [!code-vb[System.DateTime.Persist#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist8.vb#8)]  \n  \n<a name=\"com_interop\"></a>   \n## COM interop considerations  \n A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip. However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.  \n  \n If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E. at 3:00 P.M., instead of January, 1, 0001 C.E. at 3:00 P.M. This happens because the .NET Framework and COM assume a default date when only a time is specified. However, the COM system assumes a base date of December 30, 1899 C.E. while the .NET Framework assumes a base date of January, 1, 0001 C.E.  \n  \n When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM. When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899. This also means if a date starts its round-trip from COM, the .NET Framework and COM preserve the date.  \n  \n The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object.","nodes":[{"pos":[2,412],"content":"[!NOTE]\n To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","leadings":["","> "],"nodes":[{"content":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","pos":[8,408],"nodes":[{"content":"To view the .NET Framework source code for this type, see the <bpt id=\"p1\">[</bpt>Reference Source<ept id=\"p1\">](http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b)</ept>.","pos":[1,171],"source":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b)."},{"content":"You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id=\"p1\">[</bpt>instructions<ept id=\"p1\">](http://referencesource.microsoft.com/)</ept>.","pos":[172,400],"source":" You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/)."}]}]},{"pos":[419,650],"content":"The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D. (C.E.) in the Gregorian calendar.","nodes":[{"content":"The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D. (C.E.) in the Gregorian calendar.","pos":[0,231],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D.","pos":[0,197],"source":"The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D."},{"content":"(C.E.) in the Gregorian calendar.","pos":[198,231]}]}]},{"pos":[657,1147],"content":"Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar (excluding ticks that would be added by leap seconds). For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight. A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.","nodes":[{"content":"Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar (excluding ticks that would be added by leap seconds). For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight. A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.","pos":[0,490],"nodes":[{"content":"Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D.","pos":[0,150]},{"content":"(C.E.) in the <ph id=\"ph1\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> calendar (excluding ticks that would be added by leap seconds).","pos":[151,274],"source":" (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar (excluding ticks that would be added by leap seconds)."},{"content":"For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight.","pos":[275,388]},{"content":"A <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value is always expressed in the context of an explicit or default calendar.","pos":[389,490],"source":" A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar."}]}]},{"pos":[1155,1912],"content":"[!NOTE]\n If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.","leadings":["","> "],"nodes":[{"content":" If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.","pos":[8,755],"nodes":[{"content":"If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <ph id=\"ph1\">&lt;xref:System.TimeSpan.TicksPerDay?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.TimeSpan.TicksPerHour?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName&gt;</ph> constant to perform the conversion.","pos":[1,497],"source":" If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion."},{"content":"For example, to add the number of seconds represented by a specified number of ticks to the <ph id=\"ph1\">&lt;xref:System.DateTime.Second%2A&gt;</ph> component of a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value, you can use the expression <ph id=\"ph3\">`dateValue.Second + nTicks/Timespan.TicksPerSecond`</ph>.","pos":[498,747],"source":" For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`."}]}]},{"pos":[1919,1935],"content":"In this section:","nodes":[{"content":"In this section:","pos":[0,16]}]},{"pos":[1942,2493],"content":"[Instantiating a DateTime object](#instantiating_datetime)   \n [DateTime values and their string representations](#datetime_values_strings)   \n [Converting strings to DateTime values](#parsing)   \n [Version considerations](#datetime_versions)   \n [DateTime values](#datetime_values)   \n [DateTime operations](#datetime_ops)   \n [DateTime resolution](#Resolution)   \n [DateTime vs. TimeSpan](#datetime_timespan)   \n [DateTime values and calendars](#Calendars)   \n [Persisting DateTime values](#Persisting)   \n [COM interop considerations](#com_interop)","nodes":[{"content":"<bpt id=\"p1\">[</bpt>Instantiating a DateTime object<ept id=\"p1\">](#instantiating_datetime)</ept><ph id=\"ph1\"> </ph>","pos":[0,59],"source":"[Instantiating a DateTime object](#instantiating_datetime) "},{"content":"<bpt id=\"p1\"> [</bpt>DateTime values and their string representations<ept id=\"p1\">](#datetime_values_strings)</ept><ph id=\"ph1\"> </ph>","pos":[62,140],"source":" [DateTime values and their string representations](#datetime_values_strings) "},{"content":"<bpt id=\"p1\"> [</bpt>Converting strings to DateTime values<ept id=\"p1\">](#parsing)</ept><ph id=\"ph1\"> </ph>","pos":[143,194],"source":" [Converting strings to DateTime values](#parsing) "},{"content":"<bpt id=\"p1\"> [</bpt>Version considerations<ept id=\"p1\">](#datetime_versions)</ept><ph id=\"ph1\"> </ph>","pos":[197,243],"source":" [Version considerations](#datetime_versions) "},{"content":"<bpt id=\"p1\"> [</bpt>DateTime values<ept id=\"p1\">](#datetime_values)</ept><ph id=\"ph1\"> </ph>","pos":[246,283],"source":" [DateTime values](#datetime_values) "},{"content":"<bpt id=\"p1\"> [</bpt>DateTime operations<ept id=\"p1\">](#datetime_ops)</ept><ph id=\"ph1\"> </ph>","pos":[286,324],"source":" [DateTime operations](#datetime_ops) "},{"content":"<bpt id=\"p1\"> [</bpt>DateTime resolution<ept id=\"p1\">](#Resolution)</ept><ph id=\"ph1\"> </ph>","pos":[327,363],"source":" [DateTime resolution](#Resolution) "},{"content":"<bpt id=\"p1\"> [</bpt>DateTime vs. TimeSpan<ept id=\"p1\">](#datetime_timespan)</ept><ph id=\"ph1\"> </ph>","pos":[366,411],"source":" [DateTime vs. TimeSpan](#datetime_timespan) "},{"content":"<bpt id=\"p1\"> [</bpt>DateTime values and calendars<ept id=\"p1\">](#Calendars)</ept><ph id=\"ph1\"> </ph>","pos":[414,459],"source":" [DateTime values and calendars](#Calendars) "},{"content":"<bpt id=\"p1\"> [</bpt>Persisting DateTime values<ept id=\"p1\">](#Persisting)</ept><ph id=\"ph1\"> </ph>","pos":[462,505],"source":" [Persisting DateTime values](#Persisting) "},{"content":"<bpt id=\"p1\"> [</bpt>COM interop considerations<ept id=\"p1\">](#com_interop)</ept>","pos":[508,551],"source":" [COM interop considerations](#com_interop)"}]},{"pos":[2543,2574],"content":"Instantiating a DateTime object","linkify":"Instantiating a DateTime object","nodes":[{"content":"Instantiating a DateTime object","pos":[0,31]}]},{"pos":[2578,2657],"content":"You can create a new <xref:System.DateTime> value in any of the following ways:","nodes":[{"content":"You can create a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value in any of the following ways:","pos":[0,79],"source":"You can create a new <xref:System.DateTime> value in any of the following ways:"}]},{"pos":[2667,3041],"content":"By calling any of the overloads of the <xref:System.DateTime> constructor that allow you to specify specific elements of the date and time value (such as the year, month, and day, or the number of ticks). The following statement illustrates a call to one of the <xref:System.DateTime> constructors to create a date with a specific year, month, day, hour, minute, and second.","nodes":[{"content":"By calling any of the overloads of the <xref:System.DateTime> constructor that allow you to specify specific elements of the date and time value (such as the year, month, and day, or the number of ticks). The following statement illustrates a call to one of the <xref:System.DateTime> constructors to create a date with a specific year, month, day, hour, minute, and second.","pos":[0,374],"nodes":[{"content":"By calling any of the overloads of the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> constructor that allow you to specify specific elements of the date and time value (such as the year, month, and day, or the number of ticks).","pos":[0,204],"source":"By calling any of the overloads of the <xref:System.DateTime> constructor that allow you to specify specific elements of the date and time value (such as the year, month, and day, or the number of ticks)."},{"content":"The following statement illustrates a call to one of the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> constructors to create a date with a specific year, month, day, hour, minute, and second.","pos":[205,374],"source":" The following statement illustrates a call to one of the <xref:System.DateTime> constructors to create a date with a specific year, month, day, hour, minute, and second."}]}]},{"pos":[3052,3359],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Instantiation#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Instantiation#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.DateTime.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#1)]\n [!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#1)]"},{"pos":[3369,3540],"content":"By using any compiler-specific syntax for declaring date and time values. For example, the following Visual Basic statement initializes a new <xref:System.DateTime> value.","nodes":[{"content":"By using any compiler-specific syntax for declaring date and time values. For example, the following Visual Basic statement initializes a new <xref:System.DateTime> value.","pos":[0,171],"nodes":[{"content":"By using any compiler-specific syntax for declaring date and time values.","pos":[0,73]},{"content":"For example, the following Visual Basic statement initializes a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[74,171],"source":" For example, the following Visual Basic statement initializes a new <xref:System.DateTime> value."}]}]},{"pos":[3551,3702],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Instantiation#2<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#2)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#2)]"},{"pos":[3712,3999],"content":"By assigning the <xref:System.DateTime> object a date and time value returned by a property or method. The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.","nodes":[{"content":"By assigning the <xref:System.DateTime> object a date and time value returned by a property or method. The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.","pos":[0,287],"nodes":[{"content":"By assigning the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object a date and time value returned by a property or method.","pos":[0,102],"source":"By assigning the <xref:System.DateTime> object a date and time value returned by a property or method."},{"content":"The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> variables.","pos":[103,287],"source":" The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables."}]}]},{"pos":[4010,4317],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Instantiation#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#3)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Instantiation#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#3)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.DateTime.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#3)]\n [!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#3)]"},{"pos":[4327,4750],"content":"By parsing the string representation of a date and time value. The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value. The following example uses the <xref:System.DateTime.Parse%2A> method to parse a string and convert it to a <xref:System.DateTime> value.","nodes":[{"content":"By parsing the string representation of a date and time value. The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value. The following example uses the <xref:System.DateTime.Parse%2A> method to parse a string and convert it to a <xref:System.DateTime> value.","pos":[0,423],"nodes":[{"content":"By parsing the string representation of a date and time value.","pos":[0,62]},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Parse%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods all convert a string to its equivalent date and time value.","pos":[63,285],"source":" The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.DateTime.Parse%2A&gt;</ph> method to parse a string and convert it to a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[286,423],"source":" The following example uses the <xref:System.DateTime.Parse%2A> method to parse a string and convert it to a <xref:System.DateTime> value."}]}]},{"pos":[4761,5068],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Instantiation#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#4)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Instantiation#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.DateTime.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#4)]\n [!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#4)]"},{"pos":[5079,5324],"content":"Note that the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a particular string contains a valid representation of a <xref:System.DateTime> value in addition to performing the conversion.","nodes":[{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods indicate whether a particular string contains a valid representation of a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value in addition to performing the conversion.","pos":[0,245],"source":"Note that the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a particular string contains a valid representation of a <xref:System.DateTime> value in addition to performing the conversion."}]},{"pos":[5334,5928],"content":"By calling the <xref:System.DateTime> structure's implicit default constructor. (For details on the implicit default constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) An approximate equivalent, for compilers that support it, is declaring a <xref:System.DateTime> value without explicitly assigning a date and time to it. The following example illustrates a call to the <xref:System.DateTime> implicit default constructor in C# and Visual Basic, as well as a <xref:System.DateTime> variable declaration with no assignment in Visual Basic.","nodes":[{"content":"By calling the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure's implicit default constructor.","pos":[0,79],"source":"By calling the <xref:System.DateTime> structure's implicit default constructor."},{"content":"(For details on the implicit default constructor of a value type, see <bpt id=\"p1\">[</bpt>Value Types<ept id=\"p1\">](~/docs/csharp/language-reference/keywords/value-types.md)</ept>.) An approximate equivalent, for compilers that support it, is declaring a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value without explicitly assigning a date and time to it.","pos":[80,377],"source":" (For details on the implicit default constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) An approximate equivalent, for compilers that support it, is declaring a <xref:System.DateTime> value without explicitly assigning a date and time to it."},{"content":"The following example illustrates a call to the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> implicit default constructor in C# and Visual Basic, as well as a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> variable declaration with no assignment in Visual Basic.","pos":[378,594],"source":" The following example illustrates a call to the <xref:System.DateTime> implicit default constructor in C# and Visual Basic, as well as a <xref:System.DateTime> variable declaration with no assignment in Visual Basic."}]},{"pos":[5939,6246],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Instantiation#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#5)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Instantiation#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#5)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.DateTime.Instantiation#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#5)]\n [!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#5)]"},{"pos":[6297,6345],"content":"DateTime values and their string representations","linkify":"DateTime values and their string representations","nodes":[{"content":"DateTime values and their string representations","pos":[0,48]}]},{"pos":[6349,6866],"content":"Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001. The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed in a user interface element or when written to a file. The appearance of a <xref:System.DateTime> value is the result of a formatting operation. Formatting is the process of converting a value to its string representation.","nodes":[{"content":"Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001. The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed in a user interface element or when written to a file. The appearance of a <xref:System.DateTime> value is the result of a formatting operation. Formatting is the process of converting a value to its string representation.","pos":[0,517],"nodes":[{"content":"Internally, all <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001.","pos":[0,185],"source":"Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001."},{"content":"The actual <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value is independent of the way in which that value appears when displayed in a user interface element or when written to a file.","pos":[186,349],"source":" The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed in a user interface element or when written to a file."},{"content":"The appearance of a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value is the result of a formatting operation.","pos":[350,439],"source":" The appearance of a <xref:System.DateTime> value is the result of a formatting operation."},{"content":"Formatting is the process of converting a value to its string representation.","pos":[440,517]}]}]},{"pos":[6873,7676],"content":"Because the appearance of date and time values is dependent on such factors as culture, international standards, application requirements, and personal preference, the <xref:System.DateTime> structure offers a great deal of flexibility in formatting date and time values through the overloads of its <xref:System.DateTime.ToString%2A> method. The default <xref:System.DateTime.ToString?displayProperty=fullName> method returns the string representation of a date and time value using the current culture's short date and long time pattern. The following example uses the default <xref:System.DateTime.ToString?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the en-US culture, the current culture on the computer on which the example was run.","nodes":[{"content":"Because the appearance of date and time values is dependent on such factors as culture, international standards, application requirements, and personal preference, the <xref:System.DateTime> structure offers a great deal of flexibility in formatting date and time values through the overloads of its <xref:System.DateTime.ToString%2A> method. The default <xref:System.DateTime.ToString?displayProperty=fullName> method returns the string representation of a date and time value using the current culture's short date and long time pattern. The following example uses the default <xref:System.DateTime.ToString?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the en-US culture, the current culture on the computer on which the example was run.","pos":[0,803],"nodes":[{"content":"Because the appearance of date and time values is dependent on such factors as culture, international standards, application requirements, and personal preference, the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure offers a great deal of flexibility in formatting date and time values through the overloads of its <ph id=\"ph2\">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method.","pos":[0,342],"source":"Because the appearance of date and time values is dependent on such factors as culture, international standards, application requirements, and personal preference, the <xref:System.DateTime> structure offers a great deal of flexibility in formatting date and time values through the overloads of its <xref:System.DateTime.ToString%2A> method."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.DateTime.ToString?displayProperty=fullName&gt;</ph> method returns the string representation of a date and time value using the current culture's short date and long time pattern.","pos":[343,539],"source":" The default <xref:System.DateTime.ToString?displayProperty=fullName> method returns the string representation of a date and time value using the current culture's short date and long time pattern."},{"content":"The following example uses the default <ph id=\"ph1\">&lt;xref:System.DateTime.ToString?displayProperty=fullName&gt;</ph> method to display the date and time using the short date and long time pattern for the en-US culture, the current culture on the computer on which the example was run.","pos":[540,803],"source":" The following example uses the default <xref:System.DateTime.ToString?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the en-US culture, the current culture on the computer on which the example was run."}]}]},{"pos":[7683,7968],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Formatting#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Formatting#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#1)]\n [!code-vb[System.DateTime.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#1)]"},{"pos":[7975,8413],"content":"The <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method returns the string representation of a date and time value using the short date and long time pattern of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the fr-FR culture.","nodes":[{"content":"The <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method returns the string representation of a date and time value using the short date and long time pattern of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the fr-FR culture.","pos":[0,438],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method returns the string representation of a date and time value using the short date and long time pattern of a specific culture.","pos":[0,220],"source":"The <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method returns the string representation of a date and time value using the short date and long time pattern of a specific culture."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method to display the date and time using the short date and long time pattern for the fr-FR culture.","pos":[221,438],"source":" The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the fr-FR culture."}]}]},{"pos":[8420,8705],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Formatting#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Formatting#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#2)]\n [!code-vb[System.DateTime.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#2)]"},{"pos":[8712,9220],"content":"The <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a standard or custom format specifier and using the formatting conventions of the current culture. The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.","nodes":[{"content":"The <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a standard or custom format specifier and using the formatting conventions of the current culture. The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.","pos":[0,508],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> method returns the string representation of the date and time in a format defined by a standard or custom format specifier and using the formatting conventions of the current culture.","pos":[0,263],"source":"The <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a standard or custom format specifier and using the formatting conventions of the current culture."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.","pos":[264,508],"source":" The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run."}]}]},{"pos":[9227,9512],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Formatting#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Formatting#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Formatting#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#3)]\n [!code-vb[System.DateTime.Formatting#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#3)]"},{"pos":[9519,10000],"content":"The <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a specific format specifier and using the formatting conventions of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method to display the full date and time pattern for the fr-FR culture.","nodes":[{"content":"The <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a specific format specifier and using the formatting conventions of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method to display the full date and time pattern for the fr-FR culture.","pos":[0,481],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method returns the string representation of the date and time in a format defined by a specific format specifier and using the formatting conventions of a specific culture.","pos":[0,277],"source":"The <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a specific format specifier and using the formatting conventions of a specific culture."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method to display the full date and time pattern for the fr-FR culture.","pos":[278,481],"source":" The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method to display the full date and time pattern for the fr-FR culture."}]}]},{"pos":[10007,10292],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Formatting#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Formatting#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Formatting#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#4)]\n [!code-vb[System.DateTime.Formatting#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#4)]"},{"pos":[10299,10591],"content":"For more information about formatting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values, see  <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.","source":"For more information about formatting <xref:System.DateTime> values, see  [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)."},{"pos":[10626,10663],"content":"Converting strings to DateTime values","linkify":"Converting strings to DateTime values","nodes":[{"content":"Converting strings to DateTime values","pos":[0,37]}]},{"pos":[10667,10850],"content":"Parsing involves converting the string representation of a date and time to a <xref:System.DateTime> value. Typically, date and time strings have two different usages in applications:","nodes":[{"content":"Parsing involves converting the string representation of a date and time to a <xref:System.DateTime> value. Typically, date and time strings have two different usages in applications:","pos":[0,183],"nodes":[{"content":"Parsing involves converting the string representation of a date and time to a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[0,107],"source":"Parsing involves converting the string representation of a date and time to a <xref:System.DateTime> value."},{"content":"Typically, date and time strings have two different usages in applications:","pos":[108,183]}]}]},{"pos":[10860,11256],"content":"They represent a date and time that can take a variety of forms and that reflect the conventions of either the current culture or a specific culture. For example, an application may allow a user whose current culture is en-US to input a date value as \"12/15/2013\" or \"December 15, 2013\", and allow a user whose current culture is en-GB to input a date value as \"15/12/2013\" or \"15 December 2013\".","nodes":[{"content":"They represent a date and time that can take a variety of forms and that reflect the conventions of either the current culture or a specific culture. For example, an application may allow a user whose current culture is en-US to input a date value as \"12/15/2013\" or \"December 15, 2013\", and allow a user whose current culture is en-GB to input a date value as \"15/12/2013\" or \"15 December 2013\".","pos":[0,396],"nodes":[{"content":"They represent a date and time that can take a variety of forms and that reflect the conventions of either the current culture or a specific culture.","pos":[0,149]},{"content":"For example, an application may allow a user whose current culture is en-US to input a date value as \"12/15/2013\" or \"December 15, 2013\", and allow a user whose current culture is en-GB to input a date value as \"15/12/2013\" or \"15 December 2013\".","pos":[150,396]}]}]},{"pos":[11266,11524],"content":"They represent a date and time in a predefined format. For example, an application may serialize a date as \"20130103\" independently of the culture on which the app is running, or it may require that a date be input in the current culture's short date format.","nodes":[{"content":"They represent a date and time in a predefined format. For example, an application may serialize a date as \"20130103\" independently of the culture on which the app is running, or it may require that a date be input in the current culture's short date format.","pos":[0,258],"nodes":[{"content":"They represent a date and time in a predefined format.","pos":[0,54]},{"content":"For example, an application may serialize a date as \"20130103\" independently of the culture on which the app is running, or it may require that a date be input in the current culture's short date format.","pos":[55,258]}]}]},{"pos":[11531,12345],"content":"You can use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string that might reflect one of the common date and time formats used by a culture to a <xref:System.DateTime> value. The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in a number of different culture-specific formats to a <xref:System.DateTime> value. It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings. It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method. The output from the example shows that the parsing method was able to successfully convert each of the culture-specific date and time strings.","nodes":[{"content":"You can use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string that might reflect one of the common date and time formats used by a culture to a <xref:System.DateTime> value. The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in a number of different culture-specific formats to a <xref:System.DateTime> value. It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings. It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method. The output from the example shows that the parsing method was able to successfully convert each of the culture-specific date and time strings.","pos":[0,814],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.DateTime.Parse%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> method to convert a string that might reflect one of the common date and time formats used by a culture to a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[0,224],"source":"You can use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string that might reflect one of the common date and time formats used by a culture to a <xref:System.DateTime> value."},{"content":"The following example shows how you can use <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> to convert date strings in a number of different culture-specific formats to a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[225,412],"source":" The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in a number of different culture-specific formats to a <xref:System.DateTime> value."},{"content":"It changes the current culture to English (Great Britain) and calls the <ph id=\"ph1\">&lt;xref:System.DateTime.GetDateTimeFormats&gt;</ph> method to generate an array of date and time strings.","pos":[413,580],"source":" It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings."},{"content":"It then passes each element in the array to the <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> method.","pos":[581,671],"source":" It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method."},{"content":"The output from the example shows that the parsing method was able to successfully convert each of the culture-specific date and time strings.","pos":[672,814]}]}]},{"pos":[12352,12623],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Parsing#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Parsing#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Parsing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex1.cs#1)]\n[!code-vb[System.DateTime.Parsing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex1.vb#1)]"},{"pos":[12630,13300],"content":"You can use the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a date and time string that must match a particular format or formats to a <xref:System.DateTime> value. You specify the required format or formats as a parameter to the parsing methodby using one or more  or  date and time format strings. The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a \"yyyyMMdd\" format or a \"HHmmss\" format to <xref:System.DateTime> values.","nodes":[{"content":"You can use the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a date and time string that must match a particular format or formats to a <xref:System.DateTime> value. You specify the required format or formats as a parameter to the parsing methodby using one or more  or  date and time format strings. The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a \"yyyyMMdd\" format or a \"HHmmss\" format to <xref:System.DateTime> values.","pos":[0,670],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods to convert a date and time string that must match a particular format or formats to a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[0,218],"source":"You can use the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a date and time string that must match a particular format or formats to a <xref:System.DateTime> value."},{"content":"You specify the required format or formats as a parameter to the parsing methodby using one or more  or  date and time format strings.","pos":[219,353]},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method to convert strings that must be either in a \"yyyyMMdd\" format or a \"HHmmss\" format to <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values.","pos":[354,670],"source":" The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a \"yyyyMMdd\" format or a \"HHmmss\" format to <xref:System.DateTime> values."}]}]},{"pos":[13307,13578],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Parsing#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Parsing#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex2.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Parsing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex2.cs#2)]\n[!code-vb[System.DateTime.Parsing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex2.vb#2)]"},{"pos":[13585,14341],"content":"The <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception if the string to be converted to a <xref:System.DateTime> value cannot be parsed. The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed. Because the parsing operation for date and time strings, particularly if strings are input by users, tends to have a high failure rate, and because exception handling is expensive, you should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important or conversions are subject to a high rate of failure.","nodes":[{"content":"The <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception if the string to be converted to a <xref:System.DateTime> value cannot be parsed. The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed. Because the parsing operation for date and time strings, particularly if strings are input by users, tends to have a high failure rate, and because exception handling is expensive, you should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important or conversions are subject to a high rate of failure.","pos":[0,756],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Parse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> methods throw an exception if the string to be converted to a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value cannot be parsed.","pos":[0,185],"source":"The <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception if the string to be converted to a <xref:System.DateTime> value cannot be parsed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods return a <ph id=\"ph3\">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.","pos":[186,372],"source":" The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed."},{"content":"Because the parsing operation for date and time strings, particularly if strings are input by users, tends to have a high failure rate, and because exception handling is expensive, you should use the <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods in scenarios where performance is important or conversions are subject to a high rate of failure.","pos":[373,756],"source":" Because the parsing operation for date and time strings, particularly if strings are input by users, tends to have a high failure rate, and because exception handling is expensive, you should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important or conversions are subject to a high rate of failure."}]}]},{"pos":[14348,14489],"content":"For more information about parsing date and time values, see <bpt id=\"p1\">[</bpt>Parsing Date and Time Strings<ept id=\"p1\">](~/docs/standard/base-types/parsing-datetime.md)</ept>.","source":"For more information about parsing date and time values, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md)."},{"pos":[14534,14556],"content":"Version considerations","linkify":"Version considerations","nodes":[{"content":"Version considerations","pos":[0,22]}]},{"pos":[14560,14937],"content":"Prior to the .NET Framework version 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of an unused 2-bit field concatenated with a private `Ticks` field, which is a 62-bit unsigned field that contains the number of ticks that represent the date and time. The value of the `Ticks` field can be obtained with the <xref:System.DateTime.Ticks%2A> property.","nodes":[{"content":"Prior to the .NET Framework version 2.0, the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure contains a 64-bit field composed of an unused 2-bit field concatenated with a private <ph id=\"ph2\">`Ticks`</ph> field, which is a 62-bit unsigned field that contains the number of ticks that represent the date and time.","pos":[0,279],"source":"Prior to the .NET Framework version 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of an unused 2-bit field concatenated with a private `Ticks` field, which is a 62-bit unsigned field that contains the number of ticks that represent the date and time."},{"content":"The value of the <ph id=\"ph1\">`Ticks`</ph> field can be obtained with the <ph id=\"ph2\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property.","pos":[280,377],"source":" The value of the `Ticks` field can be obtained with the <xref:System.DateTime.Ticks%2A> property."}]},{"pos":[14944,15518],"content":"Starting with the .NET Framework 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field. The Kind field is a 2-bit field that indicates whether the <xref:System.DateTime> structure represents a local time, a Coordinated Universal Time (UTC), or the time in an unspecified time zone. The Kind field is used when performing time conversions between time zones, but not for time comparisons or arithmetic. The value of the Kind field can be obtained with the <xref:System.DateTime.Kind%2A> property.","nodes":[{"content":"Starting with the .NET Framework 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field. The Kind field is a 2-bit field that indicates whether the <xref:System.DateTime> structure represents a local time, a Coordinated Universal Time (UTC), or the time in an unspecified time zone. The Kind field is used when performing time conversions between time zones, but not for time comparisons or arithmetic. The value of the Kind field can be obtained with the <xref:System.DateTime.Kind%2A> property.","pos":[0,574],"nodes":[{"content":"Starting with the .NET Framework 2.0, the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field.","pos":[0,166],"source":"Starting with the .NET Framework 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field."},{"content":"The Kind field is a 2-bit field that indicates whether the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure represents a local time, a Coordinated Universal Time (UTC), or the time in an unspecified time zone.","pos":[167,360],"source":" The Kind field is a 2-bit field that indicates whether the <xref:System.DateTime> structure represents a local time, a Coordinated Universal Time (UTC), or the time in an unspecified time zone."},{"content":"The Kind field is used when performing time conversions between time zones, but not for time comparisons or arithmetic.","pos":[361,480]},{"content":"The value of the Kind field can be obtained with the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[481,574],"source":" The value of the Kind field can be obtained with the <xref:System.DateTime.Kind%2A> property."}]}]},{"pos":[15526,16437],"content":"[!NOTE]\n An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure. The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field. This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time. For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).","leadings":["","> "],"nodes":[{"content":" An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure. The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field. This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time. For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).","pos":[8,909],"nodes":[{"content":"An alternative to the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure for working with date and time values in particular time zones is the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> structure.","pos":[1,165],"source":" An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure stores date and time information in a private <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> field and the number of minutes by which that date and time differs from UTC in a private <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph> field.","pos":[166,394],"source":" The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field."},{"content":"This makes it possible for a <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> value to reflect the time in a particular time zone, whereas a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value can unambiguously reflect only UTC and the local time zone's time.","pos":[395,611],"source":" This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time."},{"content":"For a discussion about when to use the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure or the <ph id=\"ph2\">&lt;xref:System.DateTimeOffset&gt;</ph> structure when working with date and time values, see <bpt id=\"p1\">[</bpt>Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo<ept id=\"p1\">](~/docs/standard/datetime/choosing-between-datetime.md)</ept>.","pos":[612,901],"source":" For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md)."}]}]},{"pos":[16480,16495],"content":"DateTime values","linkify":"DateTime values","nodes":[{"content":"DateTime values","pos":[0,15]}]},{"pos":[16499,16857],"content":"Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT). Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point. Daylight saving time is not applicable to UTC.","nodes":[{"content":"Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT). Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point. Daylight saving time is not applicable to UTC.","pos":[0,358],"nodes":[{"content":"Descriptions of time values in the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT).","pos":[0,211],"source":"Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT)."},{"content":"Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point.","pos":[212,311]},{"content":"Daylight saving time is not applicable to UTC.","pos":[312,358]}]}]},{"pos":[16864,17366],"content":"Local time is relative to a particular time zone. A time zone is associated with a time zone offset, which is the displacement of the time zone measured in hours from the UTC origin point. In addition, local time is optionally affected by daylight saving time, which adds or subtracts an hour from the length of a day. Consequently, local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary. The time zone offset at the UTC origin point is zero.","nodes":[{"content":"Local time is relative to a particular time zone. A time zone is associated with a time zone offset, which is the displacement of the time zone measured in hours from the UTC origin point. In addition, local time is optionally affected by daylight saving time, which adds or subtracts an hour from the length of a day. Consequently, local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary. The time zone offset at the UTC origin point is zero.","pos":[0,502],"nodes":[{"content":"Local time is relative to a particular time zone.","pos":[0,49]},{"content":"A time zone is associated with a time zone offset, which is the displacement of the time zone measured in hours from the UTC origin point.","pos":[50,188]},{"content":"In addition, local time is optionally affected by daylight saving time, which adds or subtracts an hour from the length of a day.","pos":[189,318]},{"content":"Consequently, local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary.","pos":[319,448]},{"content":"The time zone offset at the UTC origin point is zero.","pos":[449,502]}]}]},{"pos":[17373,17657],"content":"UTC time is suitable for calculations, comparisons, and storing dates and time in files. Local time is appropriate for display in user interfaces of desktop applications. Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.","nodes":[{"content":"UTC time is suitable for calculations, comparisons, and storing dates and time in files. Local time is appropriate for display in user interfaces of desktop applications. Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.","pos":[0,284],"nodes":[{"content":"UTC time is suitable for calculations, comparisons, and storing dates and time in files.","pos":[0,88]},{"content":"Local time is appropriate for display in user interfaces of desktop applications.","pos":[89,170]},{"content":"Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.","pos":[171,284]}]}]},{"pos":[17664,17908],"content":"If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object is <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.","pos":[0,244],"source":"If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone."}]},{"pos":[17948,17967],"content":"DateTime operations","linkify":"DateTime operations","nodes":[{"content":"DateTime operations","pos":[0,19]}]},{"pos":[17971,18265],"content":"A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure. Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.","nodes":[{"content":"A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure. Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.","pos":[0,294],"nodes":[{"content":"A calculation using a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure, such as <ph id=\"ph2\">&lt;xref:System.DateTime.Add%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.DateTime.Subtract%2A&gt;</ph>, does not modify the value of the structure.","pos":[0,176],"source":"A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure."},{"content":"Instead, the calculation returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure whose value is the result of the calculation.","pos":[177,294],"source":" Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation."}]}]},{"pos":[18272,18476],"content":"Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.","nodes":[{"content":"Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.","pos":[0,204]}]},{"pos":[18483,19014],"content":"The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another. You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC. However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class. Using these methods, you can convert the time in any one of the world's time zones to the time in any other time zone.","nodes":[{"content":"The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another. You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC. However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class. Using these methods, you can convert the time in any one of the world's time zones to the time in any other time zone.","pos":[0,531],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure itself offers limited support for converting from one time zone to another.","pos":[0,112],"source":"The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method to convert UTC to local time, or you can use the <ph id=\"ph2\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method to convert from local time to UTC.","pos":[113,306],"source":" You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC."},{"content":"However, a full set of time zone conversion methods is available in the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> class.","pos":[307,412],"source":" However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class."},{"content":"Using these methods, you can convert the time in any one of the world's time zones to the time in any other time zone.","pos":[413,531]}]}]},{"pos":[19021,20081],"content":"Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone. You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled. (That is, a <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone other than the <xref:System.DateTime.Kind%2A> property.) For this reason, in a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created. For example, you could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone. For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md).","nodes":[{"content":"Calculations and comparisons of <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects are meaningful only if the objects represent times in the same time zone.","pos":[0,136],"source":"Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone."},{"content":"You can use a <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo&gt;</ph> object to represent a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value's time zone, although the two are loosely coupled.","pos":[137,279],"source":" You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled."},{"content":"(That is, a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object does not have a property that returns an object that represents that date and time value's time zone other than the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.) For this reason, in a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object was created.","pos":[280,652],"source":" (That is, a <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone other than the <xref:System.DateTime.Kind%2A> property.) For this reason, in a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created."},{"content":"For example, you could use a structure that wraps both the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value and the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo&gt;</ph> object that represents the <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value's time zone.","pos":[653,844],"source":" For example, you could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone."},{"content":"For details on using UTC in calculations and comparisons with <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values, see <bpt id=\"p1\">[</bpt>Performing Arithmetic Operations with Dates and Times<ept id=\"p1\">](~/docs/standard/datetime/performing-arithmetic-operations.md)</ept>.","pos":[845,1060],"source":" For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md)."}]},{"pos":[20088,20439],"content":"Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation, with the exception of constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName>, that implicitly specifies a calendar.","nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> member implicitly uses the Gregorian calendar to perform its operation, with the exception of constructors that specify a calendar, and methods with a parameter derived from <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph>, such as <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName&gt;</ph>, that implicitly specifies a calendar.","pos":[0,351],"source":"Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation, with the exception of constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName>, that implicitly specifies a calendar."}]},{"pos":[20446,20582],"content":"Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month.","nodes":[{"content":"Operations by members of the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> type take into account details such as leap years and the number of days in a month.","pos":[0,136],"source":"Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month."}]},{"pos":[20589,21184],"content":"Two other common operations with <xref:System.DateTime> values involve converting a date and time value to or from its string representation. The process of converting a <xref:System.DateTime> value to its string representation is a formatting operation; for more information about formatting, see [DateTime values and their string representations](#datetime_values_strings). The process of converting the string representation of a date and time to a <xref:System.DateTime> value is a parsing operation; for more information about parsing, see [Converting strings to DateTime values](#parsing).","nodes":[{"content":"Two other common operations with <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values involve converting a date and time value to or from its string representation.","pos":[0,141],"source":"Two other common operations with <xref:System.DateTime> values involve converting a date and time value to or from its string representation."},{"content":"The process of converting a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value to its string representation is a formatting operation; for more information about formatting, see <bpt id=\"p1\">[</bpt>DateTime values and their string representations<ept id=\"p1\">](#datetime_values_strings)</ept>.","pos":[142,375],"source":" The process of converting a <xref:System.DateTime> value to its string representation is a formatting operation; for more information about formatting, see [DateTime values and their string representations](#datetime_values_strings)."},{"content":"The process of converting the string representation of a date and time to a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value is a parsing operation; for more information about parsing, see <bpt id=\"p1\">[</bpt>Converting strings to DateTime values<ept id=\"p1\">](#parsing)</ept>.","pos":[376,595],"source":" The process of converting the string representation of a date and time to a <xref:System.DateTime> value is a parsing operation; for more information about parsing, see [Converting strings to DateTime values](#parsing)."}]},{"pos":[21222,21241],"content":"DateTime resolution","linkify":"DateTime resolution","nodes":[{"content":"DateTime resolution","pos":[0,19]}]},{"pos":[21249,21433],"content":"[!NOTE]\n As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class.","leadings":["","> "],"nodes":[{"content":"As an alternative to performing date and time arithmetic on <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values to measure elapsed time, you can use the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class.","pos":[9,182],"source":" As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class."}]},{"pos":[21440,22123],"content":"The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second, and the <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value. However, if you are using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=fullName> property to measure elapsed time, and you are concerned with small time intervals less than 100 milliseconds, you should note that values returned by the <xref:System.DateTime.Now%2A?displayProperty=fullName> property are dependent on the system clock, which on Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.","nodes":[{"content":"The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second, and the <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value. However, if you are using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=fullName> property to measure elapsed time, and you are concerned with small time intervals less than 100 milliseconds, you should note that values returned by the <xref:System.DateTime.Now%2A?displayProperty=fullName> property are dependent on the system clock, which on Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.","pos":[0,683],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property expresses date and time values in units of one ten-millionth of a second, and the <ph id=\"ph2\">&lt;xref:System.DateTime.Millisecond%2A&gt;</ph> property returns the thousandths of a second in a date and time value.","pos":[0,235],"source":"The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second, and the <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value."},{"content":"However, if you are using repeated calls to the <ph id=\"ph1\">&lt;xref:System.DateTime.Now%2A?displayProperty=fullName&gt;</ph> property to measure elapsed time, and you are concerned with small time intervals less than 100 milliseconds, you should note that values returned by the <ph id=\"ph2\">&lt;xref:System.DateTime.Now%2A?displayProperty=fullName&gt;</ph> property are dependent on the system clock, which on Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.","pos":[236,683],"source":" However, if you are using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=fullName> property to measure elapsed time, and you are concerned with small time intervals less than 100 milliseconds, you should note that values returned by the <xref:System.DateTime.Now%2A?displayProperty=fullName> property are dependent on the system clock, which on Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds."}]}]},{"pos":[22130,22734],"content":"The following example illustrates the dependence of current date and time values on the resolution of the system clock. In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop. If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName> method introduces a five millisecond delay. As the output from the example shows, the number of milliseconds in returned by the `DateTime.Now.Milliseconds` property changed only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName>.","nodes":[{"content":"The following example illustrates the dependence of current date and time values on the resolution of the system clock.","pos":[0,119]},{"content":"In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop.","pos":[120,217]},{"content":"If the value of the outer loop counter is 10, a call to the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt;</ph> method introduces a five millisecond delay.","pos":[218,386],"source":" If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName> method introduces a five millisecond delay."},{"content":"As the output from the example shows, the number of milliseconds in returned by the <ph id=\"ph1\">`DateTime.Now.Milliseconds`</ph> property changed only after the call to <ph id=\"ph2\">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt;</ph>.","pos":[387,604],"source":" As the output from the example shows, the number of milliseconds in returned by the `DateTime.Now.Milliseconds` property changed only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName>."}]},{"pos":[22741,23123],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Now#1<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/resolution2.cpp#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Now#1<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/resolution2.cs#1)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.DateTime.Now#1<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/resolution2.vb#1)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[System.DateTime.Now#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/resolution2.cpp#1)]\n [!code-csharp[System.DateTime.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/resolution2.cs#1)]\n [!code-vb[System.DateTime.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/resolution2.vb#1)]"},{"pos":[23168,23189],"content":"DateTime vs. TimeSpan","linkify":"DateTime vs. TimeSpan","nodes":[{"content":"DateTime vs. TimeSpan","pos":[0,21]}]},{"pos":[23193,23739],"content":"The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval. This means, for example, that you can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them. Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.","nodes":[{"content":"The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval. This means, for example, that you can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them. Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.","pos":[0,546],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph> value types differ in that a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> represents an instant in time whereas a <ph id=\"ph4\">&lt;xref:System.TimeSpan&gt;</ph> represents a time interval.","pos":[0,196],"source":"The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval."},{"content":"This means, for example, that you can subtract one instance of <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> from another to obtain a <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph> object that represents the time interval between them.","pos":[197,385],"source":" This means, for example, that you can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them."},{"content":"Or you could add a positive <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> to the current <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> to obtain a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value that represents a future date.","pos":[386,546],"source":" Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date."}]}]},{"pos":[23746,23975],"content":"You can add or subtract a time interval from a <xref:System.DateTime> object. Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <xref:System.TimeSpan> object.","nodes":[{"content":"You can add or subtract a time interval from a <xref:System.DateTime> object. Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <xref:System.TimeSpan> object.","pos":[0,229],"nodes":[{"content":"You can add or subtract a time interval from a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[0,77],"source":"You can add or subtract a time interval from a <xref:System.DateTime> object."},{"content":"Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> object.","pos":[78,229],"source":" Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <xref:System.TimeSpan> object."}]}]},{"pos":[24012,24041],"content":"DateTime values and calendars","linkify":"DateTime values and calendars","nodes":[{"content":"DateTime values and calendars","pos":[0,29]}]},{"pos":[24045,24205],"content":"The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.  They are:","nodes":[{"content":"The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.  They are:","pos":[0,160],"nodes":[{"content":"The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar&gt;</ph> class.","pos":[0,149],"source":"The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class."},{"content":"They are:","pos":[151,160]}]}]},{"pos":[24215,24278],"content":"The <xref:System.Globalization.ChineseLunisolarCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.ChineseLunisolarCalendar&gt;</ph> class.","pos":[0,63],"source":"The <xref:System.Globalization.ChineseLunisolarCalendar> class."}]},{"pos":[24288,24353],"content":"The <xref:System.Globalization.EastAsianLunisolarCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.EastAsianLunisolarCalendar&gt;</ph> class.","pos":[0,65],"source":"The <xref:System.Globalization.EastAsianLunisolarCalendar> class."}]},{"pos":[24363,24419],"content":"The <xref:System.Globalization.GregorianCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> class.","pos":[0,56],"source":"The <xref:System.Globalization.GregorianCalendar> class."}]},{"pos":[24429,24482],"content":"The <xref:System.Globalization.HebrewCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.HebrewCalendar&gt;</ph> class.","pos":[0,53],"source":"The <xref:System.Globalization.HebrewCalendar> class."}]},{"pos":[24492,24544],"content":"The <xref:System.Globalization.HijriCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.HijriCalendar&gt;</ph> class.","pos":[0,52],"source":"The <xref:System.Globalization.HijriCalendar> class."}]},{"pos":[24554,24609],"content":"The <xref:System.Globalization.JapaneseCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.JapaneseCalendar&gt;</ph> class.","pos":[0,55],"source":"The <xref:System.Globalization.JapaneseCalendar> class."}]},{"pos":[24619,24683],"content":"The <xref:System.Globalization.JapaneseLunisolarCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.JapaneseLunisolarCalendar&gt;</ph> class.","pos":[0,64],"source":"The <xref:System.Globalization.JapaneseLunisolarCalendar> class."}]},{"pos":[24693,24746],"content":"The <xref:System.Globalization.JulianCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.JulianCalendar&gt;</ph> class.","pos":[0,53],"source":"The <xref:System.Globalization.JulianCalendar> class."}]},{"pos":[24756,24809],"content":"The <xref:System.Globalization.KoreanCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class.","pos":[0,53],"source":"The <xref:System.Globalization.KoreanCalendar> class."}]},{"pos":[24819,24881],"content":"The <xref:System.Globalization.KoreanLunisolarCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanLunisolarCalendar&gt;</ph> class.","pos":[0,62],"source":"The <xref:System.Globalization.KoreanLunisolarCalendar> class."}]},{"pos":[24891,24945],"content":"The <xref:System.Globalization.PersianCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.PersianCalendar&gt;</ph> class.","pos":[0,54],"source":"The <xref:System.Globalization.PersianCalendar> class."}]},{"pos":[24955,25008],"content":"The <xref:System.Globalization.TaiwanCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.TaiwanCalendar&gt;</ph> class.","pos":[0,53],"source":"The <xref:System.Globalization.TaiwanCalendar> class."}]},{"pos":[25018,25080],"content":"The <xref:System.Globalization.TaiwanLunisolarCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.TaiwanLunisolarCalendar&gt;</ph> class.","pos":[0,62],"source":"The <xref:System.Globalization.TaiwanLunisolarCalendar> class."}]},{"pos":[25090,25149],"content":"The <xref:System.Globalization.ThaiBuddhistCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.ThaiBuddhistCalendar&gt;</ph> class.","pos":[0,59],"source":"The <xref:System.Globalization.ThaiBuddhistCalendar> class."}]},{"pos":[25159,25214],"content":"The <xref:System.Globalization.UmAlQuraCalendar> class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph> class.","pos":[0,55],"source":"The <xref:System.Globalization.UmAlQuraCalendar> class."}]},{"pos":[25221,25863],"content":"Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName> property and supports one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> property. The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property; it must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> array.","nodes":[{"content":"Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName> property and supports one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> property. The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property; it must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> array.","pos":[0,642],"nodes":[{"content":"Each culture uses a default calendar defined by its read-only <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName&gt;</ph> property and supports one or more calendars defined by its read-only <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,303],"source":"Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName> property and supports one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> property."},{"content":"The calendar currently used by a specific <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is defined by its <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName&gt;</ph> property; it must be one of the calendars found in the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName&gt;</ph> array.","pos":[304,642],"source":" The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property; it must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> array."}]}]},{"pos":[25870,26512],"content":"A culture's current calendar is used in all formatting operations for that culture. For example, the default calendar of the Persian (Iran) culture is the Umm al-Qura calendar, which is represented by the <xref:System.Globalization.UmAlQuraCalendar> class.  When a <xref:System.Globalization.CultureInfo> object that represents the Persian (Iran) culture is used in a date and time formatting operation, the Umm al-Qura calendar is used by default, and the Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property is changed, as the following example shows.","nodes":[{"content":"A culture's current calendar is used in all formatting operations for that culture. For example, the default calendar of the Persian (Iran) culture is the Umm al-Qura calendar, which is represented by the <xref:System.Globalization.UmAlQuraCalendar> class.  When a <xref:System.Globalization.CultureInfo> object that represents the Persian (Iran) culture is used in a date and time formatting operation, the Umm al-Qura calendar is used by default, and the Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property is changed, as the following example shows.","pos":[0,642],"nodes":[{"content":"A culture's current calendar is used in all formatting operations for that culture.","pos":[0,83]},{"content":"For example, the default calendar of the Persian (Iran) culture is the Umm al-Qura calendar, which is represented by the <ph id=\"ph1\">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph> class.","pos":[84,256],"source":" For example, the default calendar of the Persian (Iran) culture is the Umm al-Qura calendar, which is represented by the <xref:System.Globalization.UmAlQuraCalendar> class."},{"content":"When a <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the Persian (Iran) culture is used in a date and time formatting operation, the Umm al-Qura calendar is used by default, and the Gregorian calendar is used only if the culture's <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName&gt;</ph> property is changed, as the following example shows.","pos":[258,642],"source":"  When a <xref:System.Globalization.CultureInfo> object that represents the Persian (Iran) culture is used in a date and time formatting operation, the Umm al-Qura calendar is used by default, and the Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property is changed, as the following example shows."}]}]},{"pos":[26519,26808],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Calendar#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraCalendar1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Calendar#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraCalendar1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraCalendar1.cs#1)]\n[!code-vb[System.DateTime.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraCalendar1.vb#1)]"},{"pos":[26815,26932],"content":"A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.","nodes":[{"content":"A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.","pos":[0,117]}]},{"pos":[26939,27222],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Calendar#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraParse1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Calendar#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraParse1.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Calendar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraParse1.cs#2)]\n[!code-vb[System.DateTime.Calendar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraParse1.vb#2)]"},{"pos":[27229,27740],"content":"You can also instantiate a <xref:System.DateTime> value by using the date and time elements (such as the number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](../Topic/DateTime%20Constructor.md) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar. The following example does this by using the date and time elements from the <xref:System.Globalization.UmAlQuraCalendar> calendar.","nodes":[{"content":"You can also instantiate a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value by using the date and time elements (such as the number of the year, month, and day) of a specific calendar by calling a <bpt id=\"p1\">[</bpt>DateTime constructor<ept id=\"p1\">](../Topic/DateTime%20Constructor.md)</ept> that includes a <ph id=\"ph2\">`calendar`</ph> parameter and passing it a <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> object that represents that calendar.","pos":[0,379],"source":"You can also instantiate a <xref:System.DateTime> value by using the date and time elements (such as the number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](../Topic/DateTime%20Constructor.md) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar."},{"content":"The following example does this by using the date and time elements from the <ph id=\"ph1\">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph> calendar.","pos":[380,511],"source":" The following example does this by using the date and time elements from the <xref:System.Globalization.UmAlQuraCalendar> calendar."}]},{"pos":[27747,28012],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Calendar#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Ctor1.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Calendar#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Ctor1.vb#3)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Calendar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Ctor1.cs#3)]\n[!code-vb[System.DateTime.Calendar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Ctor1.vb#3)]"},{"pos":[28019,28186],"content":"<ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> constructors that do not include a <ph id=\"ph2\">`calendar`</ph> parameter assume that the date and time elements are expressed as units in the Gregorian calendar.","source":"<xref:System.DateTime> constructors that do not include a `calendar` parameter assume that the date and time elements are expressed as units in the Gregorian calendar."},{"pos":[28193,29208],"content":"All other <xref:System.DateTime> properties and methods use the Gregorian calendar. For example, the <xref:System.DateTime.Year%2A?displayProperty=fullName> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=fullName> method assumes that the `year` parameter is a year in the Gregorian calendar.  Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that  uses a specific calendar. For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=fullName> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=fullName> method interprets the `year` parameter as a year number in a specific calendar. The following example use both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.UmAlQuraCalendar> class.","nodes":[{"content":"All other <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> properties and methods use the Gregorian calendar.","pos":[0,83],"source":"All other <xref:System.DateTime> properties and methods use the Gregorian calendar."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.DateTime.Year%2A?displayProperty=fullName&gt;</ph> property returns the year in the Gregorian calendar, and the <ph id=\"ph2\">&lt;xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=fullName&gt;</ph> method assumes that the <ph id=\"ph3\">`year`</ph> parameter is a year in the Gregorian calendar.","pos":[84,372],"source":" For example, the <xref:System.DateTime.Year%2A?displayProperty=fullName> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=fullName> method assumes that the `year` parameter is a year in the Gregorian calendar."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> member that uses the Gregorian calendar has a corresponding member of the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> class that  uses a specific calendar.","pos":[374,565],"source":"  Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that  uses a specific calendar."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.GetYear%2A?displayProperty=fullName&gt;</ph> method returns the year in a specific calendar, and the <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=fullName&gt;</ph> method interprets the <ph id=\"ph3\">`year`</ph> parameter as a year number in a specific calendar.","pos":[566,867],"source":" For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=fullName> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=fullName> method interprets the `year` parameter as a year number in a specific calendar."},{"content":"The following example use both the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> and the corresponding members of the  <ph id=\"ph2\">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph> class.","pos":[868,1015],"source":" The following example use both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.UmAlQuraCalendar> class."}]},{"pos":[29215,29514],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Calendar#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/DateTimesAndCalendars1.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Calendar#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/DateTimesAndCalendars1.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Calendar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/DateTimesAndCalendars1.cs#4)]\n[!code-vb[System.DateTime.Calendar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/DateTimesAndCalendars1.vb#4)]"},{"pos":[29521,29966],"content":"Although the <xref:System.DateTime> structure includes <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar, it does not include a member that allows you to retrieve the week number of the year. To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=fullName> method. The following example provides an illustration.","nodes":[{"content":"Although the <xref:System.DateTime> structure includes <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar, it does not include a member that allows you to retrieve the week number of the year. To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=fullName> method. The following example provides an illustration.","pos":[0,445],"nodes":[{"content":"Although the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure includes <ph id=\"ph2\">&lt;xref:System.DateTime.DayOfWeek%2A&gt;</ph> property that returns the day of the week in the Gregorian calendar, it does not include a member that allows you to retrieve the week number of the year.","pos":[0,245],"source":"Although the <xref:System.DateTime> structure includes <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar, it does not include a member that allows you to retrieve the week number of the year."},{"content":"To retrieve the week of the year, call the individual calendar's <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=fullName&gt;</ph> method.","pos":[246,397],"source":" To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=fullName> method."},{"content":"The following example provides an illustration.","pos":[398,445]}]}]},{"pos":[29973,30240],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Calendar#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Weeks1.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Calendar#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Weeks1.vb#5)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Calendar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Weeks1.cs#5)]\n[!code-vb[System.DateTime.Calendar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Weeks1.vb#5)]"},{"pos":[30247,30373],"content":"For more information on dates and calendars, see <bpt id=\"p1\">[</bpt>Working with Calendars<ept id=\"p1\">](~/docs/standard/datetime/working-with-calendars.md)</ept>.","source":"For more information on dates and calendars, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md)."},{"pos":[30411,30437],"content":"Persisting DateTime values","linkify":"Persisting DateTime values","nodes":[{"content":"Persisting DateTime values","pos":[0,26]}]},{"pos":[30441,30500],"content":"You can persist <xref:System.DateTime> values in four ways:","nodes":[{"content":"You can persist <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values in four ways:","pos":[0,59],"source":"You can persist <xref:System.DateTime> values in four ways:"}]},{"pos":[30510,30578],"content":"You can <bpt id=\"p1\">[</bpt>convert them to strings<ept id=\"p1\">](#Strings)</ept> and persist the strings.","source":"You can [convert them to strings](#Strings) and persist the strings."},{"pos":[30588,30732],"content":"You can <bpt id=\"p1\">[</bpt>convert them to 64-bit integer values<ept id=\"p1\">](#Integers)</ept> (the value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property) and persist the integers.","source":"You can [convert them to 64-bit integer values](#Integers) (the value of the <xref:System.DateTime.Ticks%2A> property) and persist the integers."},{"pos":[30742,30794],"content":"You can<bpt id=\"p1\">[</bpt>serialize the DateTime values<ept id=\"p1\">](#Serialized)</ept>.","source":"You can[serialize the DateTime values](#Serialized)."},{"pos":[30804,30888],"content":"You can <bpt id=\"p1\">[</bpt>serialize the DateTime values along with time zone information<ept id=\"p1\">](#TimeZone)</ept>.","source":"You can [serialize the DateTime values along with time zone information](#TimeZone)."},{"pos":[30895,31327],"content":"Regardless of which technique you choose, you must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception. <xref:System.DateTime> values should round-trip. That is, the original value and the restored value should be the same. And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.","nodes":[{"content":"Regardless of which technique you choose, you must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception. <xref:System.DateTime> values should round-trip. That is, the original value and the restored value should be the same. And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.","pos":[0,432],"nodes":[{"content":"Regardless of which technique you choose, you must ensure that the routine that restores the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values doesn't lose data or throw an exception.","pos":[0,163],"source":"Regardless of which technique you choose, you must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception."},{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values should round-trip.","pos":[164,212],"source":" <xref:System.DateTime> values should round-trip."},{"content":"That is, the original value and the restored value should be the same.","pos":[213,283]},{"content":"And if the original <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value represents a single instant of time, it should identify the same moment of time when it's restored.","pos":[284,432],"source":" And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored."}]}]},{"pos":[31363,31391],"content":"Persisting values as strings","linkify":"Persisting values as strings","nodes":[{"content":"Persisting values as strings","pos":[0,28]}]},{"pos":[31395,31499],"content":"To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:","nodes":[{"content":"To successfully restore <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values that are persisted as strings, follow these rules:","pos":[0,104],"source":"To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:"}]},{"pos":[31509,32462],"content":"Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it. To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A>overload to save the string by using the conventions of the invariant culture, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture. Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.","nodes":[{"content":"Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it. To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A>overload to save the string by using the conventions of the invariant culture, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture. Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.","pos":[0,953],"nodes":[{"content":"Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it.","pos":[0,113]},{"content":"To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%2A&gt;</ph>overload to save the string by using the conventions of the invariant culture, and call the <ph id=\"ph2\">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> overload to restore the string by using the conventions of the invariant culture.","pos":[114,714],"source":" To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A>overload to save the string by using the conventions of the invariant culture, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture."},{"content":"Never use the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.DateTime.Parse%28System.String%29&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29&gt;</ph> overloads, which use the conventions of the current thread culture.","pos":[715,953],"source":" Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture."}]}]},{"pos":[32472,32934],"content":"If the data represents a single moment of time, ensure that it represents the same moment in time when it's restored, even if it's restored on a system that uses a different time zone. To do this, you convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it. You can also serialize the value along with time zone information; for more information about this approach, see [Serializing DateTime and time zone data](#TimeZone).","nodes":[{"content":"If the data represents a single moment of time, ensure that it represents the same moment in time when it's restored, even if it's restored on a system that uses a different time zone.","pos":[0,184]},{"content":"To do this, you convert the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value to Coordinated Universal Time (UTC) before saving it.","pos":[185,295],"source":" To do this, you convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it."},{"content":"You can also serialize the value along with time zone information; for more information about this approach, see <bpt id=\"p1\">[</bpt>Serializing DateTime and time zone data<ept id=\"p1\">](#TimeZone)</ept>.","pos":[296,462],"source":" You can also serialize the value along with time zone information; for more information about this approach, see [Serializing DateTime and time zone data](#TimeZone)."}]},{"pos":[32941,33804],"content":"The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture. Problems arise if the current culture is different when saving and restoring the strings. The following example illustrates these problems. It saves five dates using the formatting conventions of the current culture, which in this case is English (United States). It restores the dates using the formatting conventions of the current culture, which in this case is English (Great Britain). Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly. Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.","nodes":[{"content":"The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture. Problems arise if the current culture is different when saving and restoring the strings. The following example illustrates these problems. It saves five dates using the formatting conventions of the current culture, which in this case is English (United States). It restores the dates using the formatting conventions of the current culture, which in this case is English (Great Britain). Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly. Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.","pos":[0,863],"nodes":[{"content":"The most common error made when persisting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values as strings is to rely on the formatting conventions of the default or current culture.","pos":[0,159],"source":"The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture."},{"content":"Problems arise if the current culture is different when saving and restoring the strings.","pos":[160,249]},{"content":"The following example illustrates these problems.","pos":[250,299]},{"content":"It saves five dates using the formatting conventions of the current culture, which in this case is English (United States).","pos":[300,423]},{"content":"It restores the dates using the formatting conventions of the current culture, which in this case is English (Great Britain).","pos":[424,549]},{"content":"Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly.","pos":[550,714]},{"content":"Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.","pos":[715,863]}]}]},{"pos":[33811,34078],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Persist#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Persist#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Persist#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist1.cs#1)]\n[!code-vb[System.DateTime.Persist#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist1.vb#1)]"},{"pos":[34085,34162],"content":"To round-trip <xref:System.DateTime> values successfully, follow these steps:","nodes":[{"content":"To round-trip <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values successfully, follow these steps:","pos":[0,77],"source":"To round-trip <xref:System.DateTime> values successfully, follow these steps:"}]},{"pos":[34172,34324],"content":"If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.","nodes":[{"content":"If the values represent single moments of time, convert them from the local time to UTC by calling the <ph id=\"ph1\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method.","pos":[0,152],"source":"If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method."}]},{"pos":[34334,34856],"content":"Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> overload. Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument. Specify that the value should round-trip by using the \"O\" or \"R\" .","nodes":[{"content":"Convert the dates to their string representations by calling the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> overload.","pos":[0,272],"source":"Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> overload."},{"content":"Use the formatting conventions of the invariant culture by specifying <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</ph> as the <ph id=\"ph2\">`provider`</ph> argument.","pos":[273,455],"source":" Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument."},{"content":"Specify that the value should round-trip by using the \"O\" or \"R\" .","pos":[456,522]}]},{"pos":[34866,35140],"content":"When you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.","nodes":[{"content":"When you call the <ph id=\"ph1\">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method.","pos":[0,274],"source":"When you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method."}]},{"pos":[35147,35238],"content":"To restore the persisted <xref:System.DateTime> values without data loss, do the following:","nodes":[{"content":"To restore the persisted <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values without data loss, do the following:","pos":[0,91],"source":"To restore the persisted <xref:System.DateTime> values without data loss, do the following:"}]},{"pos":[35248,35694],"content":"Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload. Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion. Include the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value in the `styles` argument.","nodes":[{"content":"Parse the data by calling the <ph id=\"ph1\">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> overload.","pos":[0,119],"source":"Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload."},{"content":"Specify <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</ph> as the <ph id=\"ph2\">`provider`</ph> argument, and use the same standard format string you used for the <ph id=\"ph3\">`format`</ph> argument during conversion.","pos":[120,334],"source":" Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion."},{"content":"Include the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> value in the <ph id=\"ph2\">`styles`</ph> argument.","pos":[335,446],"source":" Include the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value in the `styles` argument."}]},{"pos":[35704,35879],"content":"If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values represent single moments in time, call the <ph id=\"ph2\">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method to convert the parsed date from UTC to local time.","pos":[0,175],"source":"If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time."}]},{"pos":[35886,36158],"content":"The following example uses the invariant culture and the \"O\" standard format string to ensure that <xref:System.DateTime> values that are saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.","nodes":[{"content":"The following example uses the invariant culture and the \"O\" standard format string to ensure that <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values that are saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.","pos":[0,272],"source":"The following example uses the invariant culture and the \"O\" standard format string to ensure that <xref:System.DateTime> values that are saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems."}]},{"pos":[36165,36432],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Persist#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Persist#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist2.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Persist#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist2.cs#2)]\n[!code-vb[System.DateTime.Persist#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist2.vb#2)]"},{"pos":[36469,36498],"content":"Persisting values as integers","linkify":"Persisting values as integers","nodes":[{"content":"Persisting values as integers","pos":[0,29]}]},{"pos":[36502,36786],"content":"Instead of persisting a <xref:System.DateTime> value as a string, you can persist it as an <xref:System.Int64> value that represents a number of ticks. In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.","nodes":[{"content":"Instead of persisting a <xref:System.DateTime> value as a string, you can persist it as an <xref:System.Int64> value that represents a number of ticks. In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.","pos":[0,284],"nodes":[{"content":"Instead of persisting a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value as a string, you can persist it as an <ph id=\"ph2\">&lt;xref:System.Int64&gt;</ph> value that represents a number of ticks.","pos":[0,151],"source":"Instead of persisting a <xref:System.DateTime> value as a string, you can persist it as an <xref:System.Int64> value that represents a number of ticks."},{"content":"In this case, you don't have to consider the culture of the systems the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values are persisted and restored on.","pos":[152,284],"source":" In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on."}]}]},{"pos":[36793,36849],"content":"To persist a <xref:System.DateTime> value as an integer:","nodes":[{"content":"To persist a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value as an integer:","pos":[0,56],"source":"To persist a <xref:System.DateTime> value as an integer:"}]},{"pos":[36859,37014],"content":"If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values represent single moments in time, convert them to UTC by calling the <ph id=\"ph2\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method.","pos":[0,155],"source":"If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method."}]},{"pos":[37024,37151],"content":"Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property.","nodes":[{"content":"Retrieve the number of ticks represented by the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value from its <ph id=\"ph2\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property.","pos":[0,127],"source":"Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property."}]},{"pos":[37158,37238],"content":"To restore a <xref:System.DateTime> value that has been persisted as an integer:","nodes":[{"content":"To restore a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value that has been persisted as an integer:","pos":[0,80],"source":"To restore a <xref:System.DateTime> value that has been persisted as an integer:"}]},{"pos":[37248,37405],"content":"Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor.","nodes":[{"content":"Instantiate a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object by passing the <ph id=\"ph2\">&lt;xref:System.Int64&gt;</ph> value to the <ph id=\"ph3\">&lt;xref:System.DateTime.%23ctor%28System.Int64%29&gt;</ph> constructor.","pos":[0,157],"source":"Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor."}]},{"pos":[37415,37585],"content":"If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value represents a single moment in time, convert it from UTC to the local time by calling the <ph id=\"ph2\">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method.","pos":[0,170],"source":"If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method."}]},{"pos":[37592,37927],"content":"The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone. It restores it on a system in the UTC zone. The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.","nodes":[{"content":"The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone. It restores it on a system in the UTC zone. The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.","pos":[0,335],"nodes":[{"content":"The following example persists an array of <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values as integers on a system in the U.S. Pacific Time zone.","pos":[0,127],"source":"The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone."},{"content":"It restores it on a system in the UTC zone.","pos":[128,171]},{"content":"The file that contains the integers includes an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> value that indicates the total number of <ph id=\"ph2\">&lt;xref:System.Int64&gt;</ph> values that immediately follow it.","pos":[172,335],"source":" The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it."}]}]},{"pos":[37934,38201],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Persist#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist4.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Persist#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist4.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.Persist#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist4.cs#4)]\n[!code-vb[System.DateTime.Persist#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist4.vb#4)]"},{"pos":[38240,38267],"content":"Serializing DateTime values","linkify":"Serializing DateTime values","nodes":[{"content":"Serializing DateTime values","pos":[0,27]}]},{"pos":[38271,39104],"content":"Instead of saving <xref:System.DateTime> values as strings or integers, which you then have to convert back to <xref:System.DateTime> values, you can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization. In this case, <xref:System.DateTime>data is serialized in some specified object format, and the objects are restored when they are deserialized. A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization. For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](http://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453).","nodes":[{"content":"Instead of saving <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values as strings or integers, which you then have to convert back to <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values, you can persist <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> values through serialization to a stream or file, and then restore them through deserialization.","pos":[0,277],"source":"Instead of saving <xref:System.DateTime> values as strings or integers, which you then have to convert back to <xref:System.DateTime> values, you can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization."},{"content":"In this case, <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>data is serialized in some specified object format, and the objects are restored when they are deserialized.","pos":[278,422],"source":" In this case, <xref:System.DateTime>data is serialized in some specified object format, and the objects are restored when they are deserialized."},{"content":"A formatter or serializer, such as <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>, handles the process of serialization and deserialization.","pos":[423,635],"source":" A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization."},{"content":"For more information about serialization and the types of serialization supported by the .NET Framework, see <bpt id=\"p1\">[</bpt>Serialization<ept id=\"p1\">](http://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453)</ept>.","pos":[636,833],"source":" For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](http://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453)."}]},{"pos":[39111,39580],"content":"The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values that represent all leap year days in the twenty-first century. The output represents the result if the example is run on a system whose current culture is English (Great Britain). Because we've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.","nodes":[{"content":"The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values that represent all leap year days in the twenty-first century. The output represents the result if the example is run on a system whose current culture is English (Great Britain). Because we've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.","pos":[0,469],"nodes":[{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to serialize and deserialize <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values that represent all leap year days in the twenty-first century.","pos":[0,204],"source":"The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values that represent all leap year days in the twenty-first century."},{"content":"The output represents the result if the example is run on a system whose current culture is English (Great Britain).","pos":[205,321]},{"content":"Because we've deserialized the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object itself, the code doesn't have to handle cultural differences in date and time formats.","pos":[322,469],"source":" Because we've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats."}]}]},{"pos":[39587,39854],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Persist#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist5.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Persist#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist5.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Persist#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist5.cs#5)]\n [!code-vb[System.DateTime.Persist#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist5.vb#5)]"},{"pos":[39861,40533],"content":"The previous example doesn't include time information. However, if a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, you should convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method. After you deserialize it, you should convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method. The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize<xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the UTC zone.","nodes":[{"content":"The previous example doesn't include time information. However, if a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, you should convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method. After you deserialize it, you should convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method. The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize<xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the UTC zone.","pos":[0,672],"nodes":[{"content":"The previous example doesn't include time information.","pos":[0,54]},{"content":"However, if a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value represents a moment in time and is expressed as a local time, you should convert it from local time to UTC before serializing it by calling the <ph id=\"ph2\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method.","pos":[55,291],"source":" However, if a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, you should convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method."},{"content":"After you deserialize it, you should convert it from UTC to local time by calling the <ph id=\"ph1\">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method.","pos":[292,423],"source":" After you deserialize it, you should convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> class to serialize<ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the UTC zone.","pos":[424,672],"source":" The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize<xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the UTC zone."}]}]},{"pos":[40540,40807],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Persist#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist3.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Persist#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist3.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Persist#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist3.cs#3)]\n [!code-vb[System.DateTime.Persist#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist3.vb#3)]"},{"pos":[40844,40883],"content":"Serializing DateTime and time zone data","linkify":"Serializing DateTime and time zone data","nodes":[{"content":"Serializing DateTime and time zone data","pos":[0,39]}]},{"pos":[40887,41641],"content":"The previous examples have all assumed that <xref:System.DateTime> values are expressed as local times, and converted the values between UTC and local time so they reflect the same moment in time on the source and target systems. <xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC. In this case, because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime>value and the <xref:System.TimeZoneInfo> object that represents its time zone. To do this, create a type whose fields include both the <xref:System.DateTime> value and its time zone. The following example defines a `DateWithTimeZone` structure that illustrates how this might be done.","nodes":[{"content":"The previous examples have all assumed that <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values are expressed as local times, and converted the values between UTC and local time so they reflect the same moment in time on the source and target systems.","pos":[0,229],"source":"The previous examples have all assumed that <xref:System.DateTime> values are expressed as local times, and converted the values between UTC and local time so they reflect the same moment in time on the source and target systems."},{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> values may also reflect moments in time in a time zone other than local and UTC.","pos":[230,333],"source":" <xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC."},{"content":"In this case, because the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure is not time zone-aware, you have to serialize both the <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>value and the <ph id=\"ph3\">&lt;xref:System.TimeZoneInfo&gt;</ph> object that represents its time zone.","pos":[334,548],"source":" In this case, because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime>value and the <xref:System.TimeZoneInfo> object that represents its time zone."},{"content":"To do this, create a type whose fields include both the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value and its time zone.","pos":[549,652],"source":" To do this, create a type whose fields include both the <xref:System.DateTime> value and its time zone."},{"content":"The following example defines a <ph id=\"ph1\">`DateWithTimeZone`</ph> structure that illustrates how this might be done.","pos":[653,754],"source":" The following example defines a `DateWithTimeZone` structure that illustrates how this might be done."}]},{"pos":[41648,41915],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Persist#6<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist6.cs#6)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Persist#6<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist6.vb#6)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Persist#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist6.cs#6)]\n [!code-vb[System.DateTime.Persist#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist6.vb#6)]"},{"pos":[41923,42237],"content":"[!IMPORTANT]\n The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects. To run the examples, first create a class library that contains the `DateWithTimeZone` structure, and then add a reference to it when you compile each example.","leadings":["","> "],"nodes":[{"content":" The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects. To run the examples, first create a class library that contains the `DateWithTimeZone` structure, and then add a reference to it when you compile each example.","pos":[13,312],"nodes":[{"content":"The <ph id=\"ph1\">`DateWithTimeZone`</ph> structure is used in the next two examples, which serialize and deserialize an array of <ph id=\"ph2\">`DateWithTimeZone`</ph> objects.","pos":[1,139],"source":" The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects."},{"content":"To run the examples, first create a class library that contains the <ph id=\"ph1\">`DateWithTimeZone`</ph> structure, and then add a reference to it when you compile each example.","pos":[140,299],"source":" To run the examples, first create a class library that contains the `DateWithTimeZone` structure, and then add a reference to it when you compile each example."}]}]},{"pos":[42244,42516],"content":"By using the `DateWithTimeZone` structure , you can then persist date and time along with time zone information. The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects.","nodes":[{"content":"By using the <ph id=\"ph1\">`DateWithTimeZone`</ph> structure , you can then persist date and time along with time zone information.","pos":[0,112],"source":"By using the `DateWithTimeZone` structure , you can then persist date and time along with time zone information."},{"content":"The following example uses the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> class to serialize an array of <ph id=\"ph2\">`DateWithTimeZone`</ph> objects.","pos":[113,272],"source":" The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects."}]},{"pos":[42523,42790],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Persist#7<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist7.cs#7)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Persist#7<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist7.vb#7)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Persist#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist7.cs#7)]\n [!code-vb[System.DateTime.Persist#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist7.vb#7)]"},{"pos":[42797,42969],"content":"The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=fullName> method to deserialize it.","nodes":[{"content":"The following example then calls the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=fullName&gt;</ph> method to deserialize it.","pos":[0,172],"source":"The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=fullName> method to deserialize it."}]},{"pos":[42976,43243],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Persist#8<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist8.cs#8)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Persist#8<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist8.vb#8)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Persist#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist8.cs#8)]\n [!code-vb[System.DateTime.Persist#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist8.vb#8)]"},{"pos":[43282,43308],"content":"COM interop considerations","linkify":"COM interop considerations","nodes":[{"content":"COM interop considerations","pos":[0,26]}]},{"pos":[43312,43566],"content":"A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip. However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.","nodes":[{"content":"A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip. However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.","pos":[0,254],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip.","pos":[0,146],"source":"A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip."},{"content":"However, a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value that specifies only a time does not round-trip as you might expect.","pos":[147,254],"source":" However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect."}]}]},{"pos":[43573,43970],"content":"If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E. at 3:00 P.M., instead of January, 1, 0001 C.E. at 3:00 P.M. This happens because the .NET Framework and COM assume a default date when only a time is specified. However, the COM system assumes a base date of December 30, 1899 C.E. while the .NET Framework assumes a base date of January, 1, 0001 C.E.","nodes":[{"content":"If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E. at 3:00 P.M., instead of January, 1, 0001 C.E. at 3:00 P.M. This happens because the .NET Framework and COM assume a default date when only a time is specified. However, the COM system assumes a base date of December 30, 1899 C.E. while the .NET Framework assumes a base date of January, 1, 0001 C.E.","pos":[0,397],"nodes":[{"content":"If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E.","pos":[0,96]},{"content":"at 3:00 P.M., instead of January, 1, 0001 C.E.","pos":[97,143]},{"content":"at 3:00 P.M.","pos":[144,156]},{"content":"This happens because the .NET Framework and COM assume a default date when only a time is specified.","pos":[157,257]},{"content":"However, the COM system assumes a base date of December 30, 1899 C.E.","pos":[258,327]},{"content":"while the .NET Framework assumes a base date of January, 1, 0001 C.E.","pos":[328,397]}]}]},{"pos":[43977,44401],"content":"When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM. When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899. This also means if a date starts its round-trip from COM, the .NET Framework and COM preserve the date.","nodes":[{"content":"When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM. When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899. This also means if a date starts its round-trip from COM, the .NET Framework and COM preserve the date.","pos":[0,424],"nodes":[{"content":"When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM.","pos":[0,140]},{"content":"When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899.","pos":[141,320]},{"content":"This also means if a date starts its round-trip from COM, the .NET Framework and COM preserve the date.","pos":[321,424]}]}]},{"pos":[44408,44662],"content":"The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object.","nodes":[{"content":"The behavior of the .NET Framework and COM means that if your application round-trips a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[0,254],"source":"The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object."}]}],"pos":[7101,52147],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to a specified number of ticks.","nodes":[{"pos":[0,112],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to a specified number of ticks.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to a specified number of ticks."}],"pos":[54648,54761],"yaml":true},{"content":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"pos":[0,101],"content":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id=\"ph2\">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.","pos":[0,101],"source":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>."}]},{"pos":[108,296],"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.","pos":[0,188],"source":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."}]}],"pos":[54772,55073],"yaml":true,"extradata":"MT"},{"content":"A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.","nodes":[{"pos":[0,150],"content":"A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.","nodes":[{"content":"A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.","pos":[0,150]}]}],"pos":[55656,55807],"yaml":true},{"content":"<code>ticks</code> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">&lt;code&gt;ticks&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>ticks</code> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[55970,56111],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.","nodes":[{"pos":[0,166],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time."}],"pos":[57652,57819],"yaml":true},{"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"pos":[0,188],"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.","pos":[0,188],"source":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."}]}],"pos":[57830,58019],"yaml":true,"extradata":"MT"},{"content":"A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.","nodes":[{"pos":[0,150],"content":"A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.","nodes":[{"content":"A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.","pos":[0,150]}]}],"pos":[58167,58318],"yaml":true},{"content":"One of the enumeration values that indicates whether <code>ticks</code> specifies a local time, Coordinated Universal Time (UTC), or neither.","nodes":[{"pos":[0,141],"content":"One of the enumeration values that indicates whether <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ticks</ph><ept id=\"p1\">&lt;/code&gt;</ept> specifies a local time, Coordinated Universal Time (UTC), or neither.","source":"One of the enumeration values that indicates whether <code>ticks</code> specifies a local time, Coordinated Universal Time (UTC), or neither."}],"pos":[58384,58526],"yaml":true},{"content":"<code>ticks</code> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">&lt;code&gt;ticks&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>ticks</code> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[58689,58830],"yaml":true},{"content":"<code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;kind&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values."}],"pos":[58924,59009],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, and day.","nodes":[{"pos":[0,119],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, and day.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, and day."}],"pos":[60568,60688],"yaml":true},{"content":"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.  \n  \n The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"pos":[0,341],"content":"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.","nodes":[{"content":"This constructor interprets <ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> as a year, month, and day in the Gregorian calendar.","pos":[0,107],"source":"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar."},{"content":"To instantiate a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id=\"ph2\">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29&gt;</ph> constructor.","pos":[108,341],"source":" To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor."}]},{"pos":[348,543],"content":"The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind?displayProperty=fullName>.","pos":[0,195],"nodes":[{"content":"The time of day for the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is midnight (00:00:00).","pos":[0,80],"source":"The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[81,195],"source":" The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind?displayProperty=fullName>."}]}]}],"pos":[60699,61247],"yaml":true,"extradata":"MT"},{"content":"The year (1 through 9999).","nodes":[{"pos":[0,26],"content":"The year (1 through 9999).","nodes":[{"content":"The year (1 through 9999).","pos":[0,26]}]}],"pos":[62015,62042],"yaml":true},{"content":"The month (1 through 12).","nodes":[{"pos":[0,25],"content":"The month (1 through 12).","nodes":[{"content":"The month (1 through 12).","pos":[0,25]}]}],"pos":[62102,62128],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[62186,62248],"yaml":true},{"content":"<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.","source":"<code>year</code> is less than 1 or greater than 9999."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,125],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.","source":"<code>month</code> is less than 1 or greater than 12."},{"pos":[132,136],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[143,232],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than 1 or greater than the number of days in <code>month</code>."}],"pos":[62411,62654],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, and day for the specified calendar.","nodes":[{"pos":[0,146],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, and day for the specified calendar.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, and day for the specified calendar."}],"pos":[64333,64480],"yaml":true},{"content":"The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \n  \n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.","nodes":[{"pos":[0,182],"content":"The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.","nodes":[{"content":"The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.","pos":[0,182],"nodes":[{"content":"The time of day for the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is midnight (00:00:00).","pos":[0,80],"source":"The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id=\"ph2\">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.","pos":[81,182],"source":" The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>."}]}]},{"pos":[189,354],"content":"The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.","nodes":[{"content":"The allowable values for <ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> depend on <ph id=\"ph4\">`calendar`</ph>.","pos":[0,73],"source":"The allowable values for `year`, `month`, and `day` depend on `calendar`."},{"content":"An exception is thrown if the specified date and time cannot be expressed using <ph id=\"ph1\">`calendar`</ph>.","pos":[74,165],"source":" An exception is thrown if the specified date and time cannot be expressed using `calendar`."}]},{"pos":[361,533],"content":"The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization&gt;</ph> namespace provides several calendars including <ph id=\"ph2\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Globalization.JulianCalendar&gt;</ph>.","pos":[0,172],"source":"The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>."}]}],"pos":[64491,65031],"yaml":true,"extradata":"MT"},{"content":"The year (1 through the number of years in <code>calendar</code>).","nodes":[{"pos":[0,66],"content":"The year (1 through the number of years in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The year (1 through the number of years in <code>calendar</code>)."}],"pos":[66962,67029],"yaml":true},{"content":"The month (1 through the number of months in <code>calendar</code>).","nodes":[{"pos":[0,68],"content":"The month (1 through the number of months in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The month (1 through the number of months in <code>calendar</code>)."}],"pos":[67089,67158],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[67216,67278],"yaml":true},{"content":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.","nodes":[{"pos":[0,99],"content":"The calendar that is used to interpret <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">month</ph><ept id=\"p2\">&lt;/code&gt;</ept>, and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">day</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>."}],"pos":[67358,67458],"yaml":true},{"content":"<code>calendar</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;calendar&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>calendar</code> is `null`."}],"pos":[67609,67642],"yaml":true},{"content":"<code>year</code> is not in the range supported by <code>calendar</code>.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is not in the range supported by <ph id=\"ph2\">&lt;code&gt;calendar&lt;/code&gt;</ph>.","source":"<code>year</code> is not in the range supported by <code>calendar</code>."},{"pos":[80,84],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[91,187],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than the number of months in <ph id=\"ph2\">&lt;code&gt;calendar&lt;/code&gt;</ph>.","source":"<code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>."},{"pos":[194,198],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[205,294],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than 1 or greater than the number of days in <code>month</code>."}],"pos":[67756,68061],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, and second.","nodes":[{"pos":[0,141],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, and second.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, and second."}],"pos":[69456,69598],"yaml":true},{"content":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"pos":[0,101],"content":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id=\"ph2\">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.","pos":[0,101],"source":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>."}]},{"pos":[108,493],"content":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.","nodes":[{"content":"This constructor interprets<ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> as a year, month, and day in the Gregorian calendar.","pos":[0,106],"source":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar."},{"content":"To instantiate a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id=\"ph2\">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29&gt;</ph> constructor.","pos":[107,385],"source":" To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor."}]},{"pos":[500,688],"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.","pos":[0,188],"source":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."}]}],"pos":[69609,70304],"yaml":true,"extradata":"MT"},{"content":"The year (1 through 9999).","nodes":[{"pos":[0,26],"content":"The year (1 through 9999).","nodes":[{"content":"The year (1 through 9999).","pos":[0,26]}]}],"pos":[70926,70953],"yaml":true},{"content":"The month (1 through 12).","nodes":[{"pos":[0,25],"content":"The month (1 through 12).","nodes":[{"content":"The month (1 through 12).","pos":[0,25]}]}],"pos":[71013,71039],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[71097,71159],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[71218,71244],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[71305,71333],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[71394,71422],"yaml":true},{"content":"<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.","source":"<code>year</code> is less than 1 or greater than 9999."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,125],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.","source":"<code>month</code> is less than 1 or greater than 12."},{"pos":[132,136],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[143,232],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than 1 or greater than the number of days in <code>month</code>."},{"pos":[239,243],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[250,302],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.","source":"<code>hour</code> is less than 0 or greater than 23."},{"pos":[309,313],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[320,374],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[381,385],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[392,446],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."}],"pos":[71585,72054],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.","nodes":[{"pos":[0,189],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time."}],"pos":[73895,74085],"yaml":true},{"content":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"pos":[0,422],"content":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.","nodes":[{"content":"This constructor interprets<ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> as a year, month, and day in the Gregorian calendar.","pos":[0,106],"source":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar."},{"content":"To instantiate a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id=\"ph2\">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29&gt;</ph> constructor.","pos":[107,422],"source":" To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor."}]},{"pos":[429,617],"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.","pos":[0,188],"source":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."}]}],"pos":[74096,74718],"yaml":true,"extradata":"MT"},{"content":"The year (1 through 9999).","nodes":[{"pos":[0,26],"content":"The year (1 through 9999).","nodes":[{"content":"The year (1 through 9999).","pos":[0,26]}]}],"pos":[75471,75498],"yaml":true},{"content":"The month (1 through 12).","nodes":[{"pos":[0,25],"content":"The month (1 through 12).","nodes":[{"content":"The month (1 through 12).","pos":[0,25]}]}],"pos":[75558,75584],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[75642,75704],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[75763,75789],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[75850,75878],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[75939,75967],"yaml":true},{"content":"One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> specify a local time, Coordinated Universal Time (UTC), or neither.","nodes":[{"pos":[0,240],"content":"One of the enumeration values that indicates whether <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">month</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">day</ph><ept id=\"p3\">&lt;/code&gt;</ept>, <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">hour</ph><ept id=\"p4\">&lt;/code&gt;</ept>, <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph5\">minute</ph><ept id=\"p5\">&lt;/code&gt;</ept> and <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph6\">second</ph><ept id=\"p6\">&lt;/code&gt;</ept> specify a local time, Coordinated Universal Time (UTC), or neither.","source":"One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> specify a local time, Coordinated Universal Time (UTC), or neither."}],"pos":[76033,76274],"yaml":true},{"content":"<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.","source":"<code>year</code> is less than 1 or greater than 9999."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,125],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.","source":"<code>month</code> is less than 1 or greater than 12."},{"pos":[132,136],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[143,232],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than 1 or greater than the number of days in <code>month</code>."},{"pos":[239,243],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[250,302],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.","source":"<code>hour</code> is less than 0 or greater than 23."},{"pos":[309,313],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[320,374],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[381,385],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[392,446],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."}],"pos":[76437,76906],"yaml":true},{"content":"<code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;kind&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values."}],"pos":[77000,77085],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, and second for the specified calendar.","nodes":[{"pos":[0,168],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, and second for the specified calendar.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, and second for the specified calendar."}],"pos":[78944,79113],"yaml":true},{"content":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \n  \n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.","nodes":[{"pos":[0,101],"content":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id=\"ph2\">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.","pos":[0,101],"source":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>."}]},{"pos":[108,273],"content":"The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.","nodes":[{"content":"The allowable values for <ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> depend on <ph id=\"ph4\">`calendar`</ph>.","pos":[0,73],"source":"The allowable values for `year`, `month`, and `day` depend on `calendar`."},{"content":"An exception is thrown if the specified date and time cannot be expressed using <ph id=\"ph1\">`calendar`</ph>.","pos":[74,165],"source":" An exception is thrown if the specified date and time cannot be expressed using `calendar`."}]},{"pos":[280,452],"content":"The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization&gt;</ph> namespace provides several calendars including <ph id=\"ph2\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Globalization.JulianCalendar&gt;</ph>.","pos":[0,172],"source":"The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>."}]}],"pos":[79124,79583],"yaml":true,"extradata":"MT"},{"content":"The year (1 through the number of years in <code>calendar</code>).","nodes":[{"pos":[0,66],"content":"The year (1 through the number of years in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The year (1 through the number of years in <code>calendar</code>)."}],"pos":[81593,81660],"yaml":true},{"content":"The month (1 through the number of months in <code>calendar</code>).","nodes":[{"pos":[0,68],"content":"The month (1 through the number of months in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The month (1 through the number of months in <code>calendar</code>)."}],"pos":[81720,81789],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[81847,81909],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[81968,81994],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[82055,82083],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[82144,82172],"yaml":true},{"content":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.","nodes":[{"pos":[0,99],"content":"The calendar that is used to interpret <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">month</ph><ept id=\"p2\">&lt;/code&gt;</ept>, and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">day</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>."}],"pos":[82252,82352],"yaml":true},{"content":"<code>calendar</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;calendar&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>calendar</code> is `null`."}],"pos":[82503,82536],"yaml":true},{"content":"<code>year</code> is not in the range supported by <code>calendar</code>.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is not in the range supported by <ph id=\"ph2\">&lt;code&gt;calendar&lt;/code&gt;</ph>.","source":"<code>year</code> is not in the range supported by <code>calendar</code>."},{"pos":[80,84],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[91,187],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than the number of months in <ph id=\"ph2\">&lt;code&gt;calendar&lt;/code&gt;</ph>.","source":"<code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>."},{"pos":[194,198],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[205,294],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than 1 or greater than the number of days in <code>month</code>."},{"pos":[301,305],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[312,363],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23","source":"<code>hour</code> is less than 0 or greater than 23"},{"pos":[370,374],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[381,435],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[442,446],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[453,507],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."}],"pos":[82650,83180],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, and millisecond.","nodes":[{"pos":[0,154],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, and millisecond.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, and millisecond."}],"pos":[84635,84790],"yaml":true},{"content":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.  \n  \n The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"pos":[0,400],"content":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.","nodes":[{"content":"This constructor interprets<ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> as a year, month, and day in the Gregorian calendar.","pos":[0,106],"source":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar."},{"content":"To instantiate a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id=\"ph2\">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29&gt;</ph> constructor.","pos":[107,400],"source":" To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor."}]},{"pos":[407,508],"content":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id=\"ph2\">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.","pos":[0,101],"source":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>."}]},{"pos":[515,703],"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.","pos":[0,188],"source":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."}]}],"pos":[84801,85511],"yaml":true,"extradata":"MT"},{"content":"The year (1 through 9999).","nodes":[{"pos":[0,26],"content":"The year (1 through 9999).","nodes":[{"content":"The year (1 through 9999).","pos":[0,26]}]}],"pos":[86255,86282],"yaml":true},{"content":"The month (1 through 12).","nodes":[{"pos":[0,25],"content":"The month (1 through 12).","nodes":[{"content":"The month (1 through 12).","pos":[0,25]}]}],"pos":[86342,86368],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[86426,86488],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[86547,86573],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[86634,86662],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[86723,86751],"yaml":true},{"content":"The milliseconds (0 through 999).","nodes":[{"pos":[0,33],"content":"The milliseconds (0 through 999).","nodes":[{"content":"The milliseconds (0 through 999).","pos":[0,33]}]}],"pos":[86817,86851],"yaml":true},{"content":"<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.","source":"<code>year</code> is less than 1 or greater than 9999."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,125],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.","source":"<code>month</code> is less than 1 or greater than 12."},{"pos":[132,136],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[143,232],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than 1 or greater than the number of days in <code>month</code>."},{"pos":[239,243],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[250,302],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.","source":"<code>hour</code> is less than 0 or greater than 23."},{"pos":[309,313],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[320,374],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[381,385],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[392,446],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."},{"pos":[453,457],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[464,524],"content":"<ph id=\"ph1\">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.","source":"<code>millisecond</code> is less than 0 or greater than 999."}],"pos":[87014,87565],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time."}],"pos":[89466,89669],"yaml":true},{"content":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"pos":[0,422],"content":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.","nodes":[{"content":"This constructor interprets<ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> as a year, month, and day in the Gregorian calendar.","pos":[0,106],"source":"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar."},{"content":"To instantiate a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id=\"ph2\">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29&gt;</ph> constructor.","pos":[107,422],"source":" To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor."}]},{"pos":[429,617],"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.","pos":[0,188],"source":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."}]}],"pos":[89680,90302],"yaml":true,"extradata":"MT"},{"content":"The year (1 through 9999).","nodes":[{"pos":[0,26],"content":"The year (1 through 9999).","nodes":[{"content":"The year (1 through 9999).","pos":[0,26]}]}],"pos":[91087,91114],"yaml":true},{"content":"The month (1 through 12).","nodes":[{"pos":[0,25],"content":"The month (1 through 12).","nodes":[{"content":"The month (1 through 12).","pos":[0,25]}]}],"pos":[91174,91200],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[91258,91320],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[91379,91405],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[91466,91494],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[91555,91583],"yaml":true},{"content":"The milliseconds (0 through 999).","nodes":[{"pos":[0,33],"content":"The milliseconds (0 through 999).","nodes":[{"content":"The milliseconds (0 through 999).","pos":[0,33]}]}],"pos":[91649,91683],"yaml":true},{"content":"One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither.","nodes":[{"pos":[0,267],"content":"One of the enumeration values that indicates whether <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">month</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">day</ph><ept id=\"p3\">&lt;/code&gt;</ept>, <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">hour</ph><ept id=\"p4\">&lt;/code&gt;</ept>, <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph5\">minute</ph><ept id=\"p5\">&lt;/code&gt;</ept>, <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph6\">second</ph><ept id=\"p6\">&lt;/code&gt;</ept>, and <bpt id=\"p7\">&lt;code&gt;</bpt><ph id=\"ph7\">millisecond</ph><ept id=\"p7\">&lt;/code&gt;</ept> specify a local time, Coordinated Universal Time (UTC), or neither.","source":"One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither."}],"pos":[91749,92017],"yaml":true},{"content":"<code>year</code> is less than 1 or greater than 9999.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.","source":"<code>year</code> is less than 1 or greater than 9999."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,125],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.","source":"<code>month</code> is less than 1 or greater than 12."},{"pos":[132,136],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[143,232],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than 1 or greater than the number of days in <code>month</code>."},{"pos":[239,243],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[250,302],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.","source":"<code>hour</code> is less than 0 or greater than 23."},{"pos":[309,313],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[320,374],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[381,385],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[392,446],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."},{"pos":[453,457],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[464,524],"content":"<ph id=\"ph1\">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.","source":"<code>millisecond</code> is less than 0 or greater than 999."}],"pos":[92180,92731],"yaml":true},{"content":"<code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;kind&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values."}],"pos":[92825,92910],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar."}],"pos":[94829,95011],"yaml":true},{"content":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \n  \n The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.  \n  \n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.","nodes":[{"pos":[0,101],"content":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id=\"ph2\">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.","pos":[0,101],"source":"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>."}]},{"pos":[108,273],"content":"The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.","nodes":[{"content":"The allowable values for <ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> depend on <ph id=\"ph4\">`calendar`</ph>.","pos":[0,73],"source":"The allowable values for `year`, `month`, and `day` depend on `calendar`."},{"content":"An exception is thrown if the specified date and time cannot be expressed using <ph id=\"ph1\">`calendar`</ph>.","pos":[74,165],"source":" An exception is thrown if the specified date and time cannot be expressed using `calendar`."}]},{"pos":[280,468],"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.","pos":[0,188],"source":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."}]},{"pos":[475,647],"content":"The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization&gt;</ph> namespace provides several calendars including <ph id=\"ph2\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Globalization.JulianCalendar&gt;</ph>.","pos":[0,172],"source":"The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>."}]}],"pos":[95022,95678],"yaml":true,"extradata":"MT"},{"content":"The year (1 through the number of years in <code>calendar</code>).","nodes":[{"pos":[0,66],"content":"The year (1 through the number of years in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The year (1 through the number of years in <code>calendar</code>)."}],"pos":[97720,97787],"yaml":true},{"content":"The month (1 through the number of months in <code>calendar</code>).","nodes":[{"pos":[0,68],"content":"The month (1 through the number of months in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The month (1 through the number of months in <code>calendar</code>)."}],"pos":[97847,97916],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[97974,98036],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[98095,98121],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[98182,98210],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[98271,98299],"yaml":true},{"content":"The milliseconds (0 through 999).","nodes":[{"pos":[0,33],"content":"The milliseconds (0 through 999).","nodes":[{"content":"The milliseconds (0 through 999).","pos":[0,33]}]}],"pos":[98365,98399],"yaml":true},{"content":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.","nodes":[{"pos":[0,99],"content":"The calendar that is used to interpret <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">month</ph><ept id=\"p2\">&lt;/code&gt;</ept>, and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">day</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>."}],"pos":[98479,98579],"yaml":true},{"content":"<code>calendar</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;calendar&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>calendar</code> is `null`."}],"pos":[98730,98763],"yaml":true},{"content":"<code>year</code> is not in the range supported by <code>calendar</code>.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is not in the range supported by <ph id=\"ph2\">&lt;code&gt;calendar&lt;/code&gt;</ph>.","source":"<code>year</code> is not in the range supported by <code>calendar</code>."},{"pos":[80,84],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[91,187],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than the number of months in <ph id=\"ph2\">&lt;code&gt;calendar&lt;/code&gt;</ph>.","source":"<code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>."},{"pos":[194,198],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[205,294],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than 1 or greater than the number of days in <code>month</code>."},{"pos":[301,305],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[312,364],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.","source":"<code>hour</code> is less than 0 or greater than 23."},{"pos":[371,375],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[382,436],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[443,447],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[454,508],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."},{"pos":[515,519],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[526,586],"content":"<ph id=\"ph1\">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.","source":"<code>millisecond</code> is less than 0 or greater than 999."}],"pos":[98877,99490],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.","nodes":[{"pos":[0,229],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.","source":"Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar."}],"pos":[101167,101397],"yaml":true},{"content":"The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \n  \n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.  \n  \n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.","nodes":[{"pos":[0,190],"content":"The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter. An exception is thrown if the specified date and time cannot be expressed using `calendar`.","nodes":[{"content":"The allowable values for <ph id=\"ph1\">`year`</ph>, <ph id=\"ph2\">`month`</ph>, and <ph id=\"ph3\">`day`</ph> parameters depend on the <ph id=\"ph4\">`calendar`</ph> parameter.","pos":[0,98],"source":"The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter."},{"content":"An exception is thrown if the specified date and time cannot be expressed using <ph id=\"ph1\">`calendar`</ph>.","pos":[99,190],"source":" An exception is thrown if the specified date and time cannot be expressed using `calendar`."}]},{"pos":[197,385],"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.","nodes":[{"content":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.","pos":[0,188],"source":"For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor."}]},{"pos":[392,564],"content":"The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization&gt;</ph> namespace provides several calendars including <ph id=\"ph2\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Globalization.JulianCalendar&gt;</ph>.","pos":[0,172],"source":"The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>."}]}],"pos":[101408,101979],"yaml":true,"extradata":"MT"},{"content":"The year (1 through the number of years in <code>calendar</code>).","nodes":[{"pos":[0,66],"content":"The year (1 through the number of years in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The year (1 through the number of years in <code>calendar</code>)."}],"pos":[104062,104129],"yaml":true},{"content":"The month (1 through the number of months in <code>calendar</code>).","nodes":[{"pos":[0,68],"content":"The month (1 through the number of months in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">calendar</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The month (1 through the number of months in <code>calendar</code>)."}],"pos":[104189,104258],"yaml":true},{"content":"The day (1 through the number of days in <code>month</code>).","nodes":[{"pos":[0,61],"content":"The day (1 through the number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept>).","source":"The day (1 through the number of days in <code>month</code>)."}],"pos":[104316,104378],"yaml":true},{"content":"The hours (0 through 23).","nodes":[{"pos":[0,25],"content":"The hours (0 through 23).","nodes":[{"content":"The hours (0 through 23).","pos":[0,25]}]}],"pos":[104437,104463],"yaml":true},{"content":"The minutes (0 through 59).","nodes":[{"pos":[0,27],"content":"The minutes (0 through 59).","nodes":[{"content":"The minutes (0 through 59).","pos":[0,27]}]}],"pos":[104524,104552],"yaml":true},{"content":"The seconds (0 through 59).","nodes":[{"pos":[0,27],"content":"The seconds (0 through 59).","nodes":[{"content":"The seconds (0 through 59).","pos":[0,27]}]}],"pos":[104613,104641],"yaml":true},{"content":"The milliseconds (0 through 999).","nodes":[{"pos":[0,33],"content":"The milliseconds (0 through 999).","nodes":[{"content":"The milliseconds (0 through 999).","pos":[0,33]}]}],"pos":[104707,104741],"yaml":true},{"content":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.","nodes":[{"pos":[0,99],"content":"The calendar that is used to interpret <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">month</ph><ept id=\"p2\">&lt;/code&gt;</ept>, and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">day</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>."}],"pos":[104821,104921],"yaml":true},{"content":"One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither.","nodes":[{"pos":[0,267],"content":"One of the enumeration values that indicates whether <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">month</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">day</ph><ept id=\"p3\">&lt;/code&gt;</ept>, <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">hour</ph><ept id=\"p4\">&lt;/code&gt;</ept>, <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph5\">minute</ph><ept id=\"p5\">&lt;/code&gt;</ept>, <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph6\">second</ph><ept id=\"p6\">&lt;/code&gt;</ept>, and <bpt id=\"p7\">&lt;code&gt;</bpt><ph id=\"ph7\">millisecond</ph><ept id=\"p7\">&lt;/code&gt;</ept> specify a local time, Coordinated Universal Time (UTC), or neither.","source":"One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither."}],"pos":[104987,105255],"yaml":true},{"content":"<code>calendar</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;calendar&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>calendar</code> is `null`."}],"pos":[105406,105439],"yaml":true},{"content":"<code>year</code> is not in the range supported by <code>calendar</code>.  \n  \n -or-  \n  \n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \n  \n -or-  \n  \n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \n  \n -or-  \n  \n <code>hour</code> is less than 0 or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than 0 or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than 0 or greater than 999.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is not in the range supported by <ph id=\"ph2\">&lt;code&gt;calendar&lt;/code&gt;</ph>.","source":"<code>year</code> is not in the range supported by <code>calendar</code>."},{"pos":[80,84],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[91,187],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than the number of months in <ph id=\"ph2\">&lt;code&gt;calendar&lt;/code&gt;</ph>.","source":"<code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>."},{"pos":[194,198],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[205,294],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id=\"ph2\">&lt;code&gt;month&lt;/code&gt;</ph>.","source":"<code>day</code> is less than 1 or greater than the number of days in <code>month</code>."},{"pos":[301,305],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[312,364],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.","source":"<code>hour</code> is less than 0 or greater than 23."},{"pos":[371,375],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[382,436],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>minute</code> is less than 0 or greater than 59."},{"pos":[443,447],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[454,508],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.","source":"<code>second</code> is less than 0 or greater than 59."},{"pos":[515,519],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[526,586],"content":"<ph id=\"ph1\">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.","source":"<code>millisecond</code> is less than 0 or greater than 999."}],"pos":[105553,106166],"yaml":true},{"content":"<code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">&lt;code&gt;kind&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values."}],"pos":[106260,106345],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the value of the specified <xref href=\"System.TimeSpan\"></xref> to the value of this instance.","nodes":[{"pos":[0,155],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that adds the value of the specified <ph id=\"ph2\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> to the value of this instance.","source":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the value of the specified <xref href=\"System.TimeSpan\"></xref> to the value of this instance."}],"pos":[107430,107586],"yaml":true},{"content":"You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to that of the addition operator. The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.  \n  \n The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.  \n  \n This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation. The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance.","nodes":[{"pos":[0,463],"content":"You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to that of the addition operator. The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.","nodes":[{"content":"You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to that of the addition operator. The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.","pos":[0,463],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.DateTime.Add%2A&gt;</ph> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.","pos":[0,167],"source":"You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation."},{"content":"This method's behavior is identical to that of the addition operator.","pos":[168,237]},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure also supports specialized addition methods (such as <ph id=\"ph2\">&lt;xref:System.DateTime.AddDays%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.DateTime.AddHours%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.DateTime.AddMinutes%2A&gt;</ph>) for each time interval.","pos":[238,463],"source":" The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval."}]}]},{"pos":[470,607],"content":"The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Add%2A&gt;</ph> method takes into account leap years and the number of days in a month when performing date arithmetic.","pos":[0,137],"source":"The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic."}]},{"pos":[614,909],"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation. The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance.","nodes":[{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation. The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance.","pos":[0,295],"nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"This method does not change the value of this <xref:System.DateTime>."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.","pos":[70,163],"source":" Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the new <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> instance is the same as that of the current instance.","pos":[164,295],"source":" The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance."}]}]}],"pos":[107597,108513],"yaml":true,"extradata":"MT"},{"content":"A positive or negative time interval.","nodes":[{"pos":[0,37],"content":"A positive or negative time interval.","nodes":[{"content":"A positive or negative time interval.","pos":[0,37]}]}],"pos":[109142,109180],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by this instance and the time interval represented by <code>value</code>.","nodes":[{"pos":[0,139],"content":"An object whose value is the sum of the date and time represented by this instance and the time interval represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by this instance and the time interval represented by <code>value</code>."}],"pos":[109239,109379],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[109540,109713],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of days to the value of this instance.","nodes":[{"pos":[0,120],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that adds the specified number of days to the value of this instance.","source":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of days to the value of this instance."}],"pos":[111154,111275],"yaml":true},{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n The fractional part of `value` is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.  \n  \n The `value` parameter is rounded to the nearest millisecond.  \n  \n The<xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.","nodes":[{"pos":[0,163],"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","nodes":[{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","pos":[0,163],"nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"This method does not change the value of this <xref:System.DateTime>."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.","pos":[70,163],"source":" Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation."}]}]},{"pos":[170,336],"content":"The fractional part of `value` is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.","nodes":[{"content":"The fractional part of <ph id=\"ph1\">`value`</ph> is the fractional part of a day.","pos":[0,63],"source":"The fractional part of `value` is the fractional part of a day."},{"content":"For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.","pos":[64,166]}]},{"pos":[343,403],"content":"The <ph id=\"ph1\">`value`</ph> parameter is rounded to the nearest millisecond.","source":"The `value` parameter is rounded to the nearest millisecond."},{"pos":[410,550],"content":"The<xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.AddDays%2A&gt;</ph> method takes into account leap years and the number of days in a month when performing date arithmetic.","pos":[0,140],"source":"The<xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic."}]}],"pos":[111286,111845],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional days. The <code>value</code> parameter can be negative or positive.","nodes":[{"pos":[0,100],"content":"A number of whole and fractional days. The <code>value</code> parameter can be negative or positive.","nodes":[{"content":"A number of whole and fractional days.","pos":[0,38]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter can be negative or positive.","pos":[39,100],"source":" The <code>value</code> parameter can be negative or positive."}]}],"pos":[112478,112579],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by this instance and the number of days represented by <code>value</code>.","nodes":[{"pos":[0,140],"content":"An object whose value is the sum of the date and time represented by this instance and the number of days represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by this instance and the number of days represented by <code>value</code>."}],"pos":[112638,112779],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[112944,113117],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of hours to the value of this instance.","nodes":[{"pos":[0,121],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that adds the specified number of hours to the value of this instance.","source":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of hours to the value of this instance."}],"pos":[114564,114686],"yaml":true},{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation. The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`.  \n  \n The fractional part of `value` is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.  \n  \n The `value` parameter is rounded to the nearest millisecond.  \n  \n Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal. (For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.","nodes":[{"pos":[0,285],"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation. The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`.","nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"This method does not change the value of this <xref:System.DateTime>."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.","pos":[70,163],"source":" Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object is the same as that of <ph id=\"ph3\">`value`</ph>.","pos":[164,285],"source":" The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`."}]},{"pos":[292,452],"content":"The fractional part of `value` is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.","nodes":[{"content":"The fractional part of <ph id=\"ph1\">`value`</ph> is the fractional part of an hour.","pos":[0,65],"source":"The fractional part of `value` is the fractional part of an hour."},{"content":"For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.","pos":[66,160]}]},{"pos":[459,519],"content":"The <ph id=\"ph1\">`value`</ph> parameter is rounded to the nearest millisecond.","source":"The `value` parameter is rounded to the nearest millisecond."},{"pos":[526,971],"content":"Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal. (For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.","nodes":[{"content":"Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal. (For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.","pos":[0,445],"nodes":[{"content":"Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal.","pos":[0,146]},{"content":"(For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <ph id=\"ph1\">&lt;xref:System.DateTime.Add%2A&gt;</ph> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.","pos":[147,445],"source":" (For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour."}]}]}],"pos":[114697,115677],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional hours. The <code>value</code> parameter can be negative or positive.","nodes":[{"pos":[0,101],"content":"A number of whole and fractional hours. The <code>value</code> parameter can be negative or positive.","nodes":[{"content":"A number of whole and fractional hours.","pos":[0,39]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter can be negative or positive.","pos":[40,101],"source":" The <code>value</code> parameter can be negative or positive."}]}],"pos":[116375,116477],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <code>value</code>.","nodes":[{"pos":[0,141],"content":"An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <code>value</code>."}],"pos":[116536,116678],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[116844,117017],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of milliseconds to the value of this instance.","nodes":[{"pos":[0,128],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that adds the specified number of milliseconds to the value of this instance.","source":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of milliseconds to the value of this instance."}],"pos":[118506,118635],"yaml":true},{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n The fractional part of `value` is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.  \n  \n The `value` parameter is rounded to the nearest integer.","nodes":[{"pos":[0,163],"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","nodes":[{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","pos":[0,163],"nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"This method does not change the value of this <xref:System.DateTime>."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.","pos":[70,163],"source":" Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation."}]}]},{"pos":[170,343],"content":"The fractional part of `value` is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.","nodes":[{"content":"The fractional part of <ph id=\"ph1\">`value`</ph> is the fractional part of a millisecond.","pos":[0,71],"source":"The fractional part of `value` is the fractional part of a millisecond."},{"content":"For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.","pos":[72,173]}]},{"pos":[350,406],"content":"The <ph id=\"ph1\">`value`</ph> parameter is rounded to the nearest integer.","source":"The `value` parameter is rounded to the nearest integer."}],"pos":[118646,119059],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional milliseconds. The <code>value</code> parameter can be negative or positive. Note that this value is rounded to the nearest integer.","nodes":[{"pos":[0,164],"content":"A number of whole and fractional milliseconds. The <code>value</code> parameter can be negative or positive. Note that this value is rounded to the nearest integer.","nodes":[{"content":"A number of whole and fractional milliseconds.","pos":[0,46]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter can be negative or positive.","pos":[47,108],"source":" The <code>value</code> parameter can be negative or positive."},{"content":"Note that this value is rounded to the nearest integer.","pos":[109,164]}]}],"pos":[120179,120344],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <code>value</code>.","nodes":[{"pos":[0,148],"content":"An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <code>value</code>."}],"pos":[120403,120552],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[120725,120898],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of minutes to the value of this instance.","nodes":[{"pos":[0,123],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that adds the specified number of minutes to the value of this instance.","source":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of minutes to the value of this instance."}],"pos":[122357,122481],"yaml":true},{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n The fractional part of `value` is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.  \n  \n The `value` parameter is rounded to the nearest millisecond.","nodes":[{"pos":[0,163],"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","nodes":[{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","pos":[0,163],"nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"This method does not change the value of this <xref:System.DateTime>."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.","pos":[70,163],"source":" Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation."}]}]},{"pos":[170,322],"content":"The fractional part of `value` is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.","nodes":[{"content":"The fractional part of <ph id=\"ph1\">`value`</ph> is the fractional part of a minute.","pos":[0,66],"source":"The fractional part of `value` is the fractional part of a minute."},{"content":"For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.","pos":[67,152]}]},{"pos":[329,389],"content":"The <ph id=\"ph1\">`value`</ph> parameter is rounded to the nearest millisecond.","source":"The `value` parameter is rounded to the nearest millisecond."}],"pos":[122492,122888],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional minutes. The <code>value</code> parameter can be negative or positive.","nodes":[{"pos":[0,103],"content":"A number of whole and fractional minutes. The <code>value</code> parameter can be negative or positive.","nodes":[{"content":"A number of whole and fractional minutes.","pos":[0,41]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter can be negative or positive.","pos":[42,103],"source":" The <code>value</code> parameter can be negative or positive."}]}],"pos":[123625,123729],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <code>value</code>.","nodes":[{"pos":[0,143],"content":"An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <code>value</code>."}],"pos":[123788,123932],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[124100,124273],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of months to the value of this instance.","nodes":[{"pos":[0,122],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that adds the specified number of months to the value of this instance.","source":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of months to the value of this instance."}],"pos":[125720,125843],"yaml":true},{"content":"This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.  \n  \n The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object. If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used. For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.  \n  \n The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.","nodes":[{"pos":[0,177],"content":"This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.","nodes":[{"content":"This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.","pos":[0,177],"nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[0,76],"source":"This method does not change the value of this <xref:System.DateTime> object."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object whose value is the result of this operation.","pos":[77,177],"source":" Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation."}]}]},{"pos":[184,666],"content":"The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object. If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used. For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.","nodes":[{"content":"The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object. If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used. For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.","pos":[0,482],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.AddMonths%2A&gt;</ph> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[0,227],"source":"The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object."},{"content":"If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used.","pos":[228,342]},{"content":"For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.","pos":[343,482]}]}]},{"pos":[673,775],"content":"The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.","nodes":[{"content":"The time-of-day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object remains the same as this instance.","pos":[0,102],"source":"The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance."}]}],"pos":[125854,126636],"yaml":true,"extradata":"MT"},{"content":"A number of months. The <code>months</code> parameter can be negative or positive.","nodes":[{"pos":[0,82],"content":"A number of months. The <code>months</code> parameter can be negative or positive.","nodes":[{"content":"A number of months.","pos":[0,19]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">months</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter can be negative or positive.","pos":[20,82],"source":" The <code>months</code> parameter can be negative or positive."}]}],"pos":[127296,127379],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by this instance and <code>months</code>.","nodes":[{"pos":[0,107],"content":"An object whose value is the sum of the date and time represented by this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">months</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by this instance and <code>months</code>."}],"pos":[127438,127546],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.  \n  \n -or-  \n  \n <code>months</code> is less than -120,000 or greater than 120,000.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."},{"pos":[179,183],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[190,256],"content":"<ph id=\"ph1\">&lt;code&gt;months&lt;/code&gt;</ph> is less than -120,000 or greater than 120,000.","source":"<code>months</code> is less than -120,000 or greater than 120,000."}],"pos":[127713,127982],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of seconds to the value of this instance.","nodes":[{"pos":[0,123],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that adds the specified number of seconds to the value of this instance.","source":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of seconds to the value of this instance."}],"pos":[129441,129565],"yaml":true},{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n The fractional part of `value` is the fractional part of a second. For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.  \n  \n The `value` parameter is rounded to the nearest millisecond.","nodes":[{"pos":[0,163],"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","nodes":[{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","pos":[0,163],"nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"This method does not change the value of this <xref:System.DateTime>."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.","pos":[70,163],"source":" Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation."}]}]},{"pos":[170,312],"content":"The fractional part of `value` is the fractional part of a second. For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.","nodes":[{"content":"The fractional part of <ph id=\"ph1\">`value`</ph> is the fractional part of a second.","pos":[0,66],"source":"The fractional part of `value` is the fractional part of a second."},{"content":"For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.","pos":[67,142]}]},{"pos":[319,379],"content":"The <ph id=\"ph1\">`value`</ph> parameter is rounded to the nearest millisecond.","source":"The `value` parameter is rounded to the nearest millisecond."}],"pos":[129576,129962],"yaml":true,"extradata":"MT"},{"content":"A number of whole and fractional seconds. The <code>value</code> parameter can be negative or positive.","nodes":[{"pos":[0,103],"content":"A number of whole and fractional seconds. The <code>value</code> parameter can be negative or positive.","nodes":[{"content":"A number of whole and fractional seconds.","pos":[0,41]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter can be negative or positive.","pos":[42,103],"source":" The <code>value</code> parameter can be negative or positive."}]}],"pos":[130749,130853],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <code>value</code>.","nodes":[{"pos":[0,143],"content":"An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <code>value</code>."}],"pos":[130912,131056],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[131224,131397],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of ticks to the value of this instance.","nodes":[{"pos":[0,121],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that adds the specified number of ticks to the value of this instance.","source":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of ticks to the value of this instance."}],"pos":[132838,132960],"yaml":true},{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","nodes":[{"pos":[0,163],"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","nodes":[{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","pos":[0,163],"nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"This method does not change the value of this <xref:System.DateTime>."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.","pos":[70,163],"source":" Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation."}]}]}],"pos":[132971,133135],"yaml":true,"extradata":"MT"},{"content":"A number of 100-nanosecond ticks. The <code>value</code> parameter can be positive or negative.","nodes":[{"pos":[0,95],"content":"A number of 100-nanosecond ticks. The <code>value</code> parameter can be positive or negative.","nodes":[{"content":"A number of 100-nanosecond ticks.","pos":[0,33]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter can be positive or negative.","pos":[34,95],"source":" The <code>value</code> parameter can be positive or negative."}]}],"pos":[133273,133369],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by this instance and the time represented by <code>value</code>.","nodes":[{"pos":[0,130],"content":"An object whose value is the sum of the date and time represented by this instance and the time represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by this instance and the time represented by <code>value</code>."}],"pos":[133428,133559],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[133725,133898],"yaml":true},{"content":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of years to the value of this instance.","nodes":[{"pos":[0,121],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that adds the specified number of years to the value of this instance.","source":"Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of years to the value of this instance."}],"pos":[135339,135461],"yaml":true},{"content":"This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.  \n  \n The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years. The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.  \n  \n If the current instance represents the leap day in a leap year, the return value depends on the target date:  \n  \n-   If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is also a leap year, the return value represents the leap day in that year. For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.  \n  \n-   If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is not a leap year, the return value represents the day before the leap day in that year. For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.  \n  \n The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day. It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.  \n  \n [!code-csharp[System.DateTime.AddYears#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)]\n [!code-vb[System.DateTime.AddYears#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)]","nodes":[{"pos":[0,177],"content":"This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.","nodes":[{"content":"This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.","pos":[0,177],"nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[0,76],"source":"This method does not change the value of this <xref:System.DateTime> object."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object whose value is the result of this operation.","pos":[77,177],"source":" Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation."}]}]},{"pos":[184,404],"content":"The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years. The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.","nodes":[{"content":"The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years. The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.","pos":[0,220],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.AddYears%2A&gt;</ph> method calculates the resulting year taking into account leap years.","pos":[0,107],"source":"The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years."},{"content":"The month and time-of-day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object remains the same as this instance.","pos":[108,220],"source":" The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance."}]}]},{"pos":[411,519],"content":"If the current instance represents the leap day in a leap year, the return value depends on the target date:","nodes":[{"content":"If the current instance represents the leap day in a leap year, the return value depends on the target date:","pos":[0,108]}]},{"pos":[529,771],"content":"If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is also a leap year, the return value represents the leap day in that year. For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">&lt;xref:System.DateTime.Year%2A?displayProperty=fullName&gt;</ph> is also a leap year, the return value represents the leap day in that year.","pos":[0,144],"source":"If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is also a leap year, the return value represents the leap day in that year."},{"content":"For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.","pos":[145,242]}]},{"pos":[781,1035],"content":"If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is not a leap year, the return value represents the day before the leap day in that year. For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph><ph id=\"ph2\"> + </ph><ph id=\"ph3\">&lt;xref:System.DateTime.Year%2A?displayProperty=fullName&gt;</ph> is not a leap year, the return value represents the day before the leap day in that year.","pos":[0,158],"source":"If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is not a leap year, the return value represents the day before the leap day in that year."},{"content":"For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.","pos":[159,254]}]},{"pos":[1042,1301],"content":"The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day. It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.","nodes":[{"content":"The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day. It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.","pos":[0,259],"nodes":[{"content":"The following example illustrates using the <ph id=\"ph1\">&lt;xref:System.DateTime.AddYears%2A&gt;</ph> method with a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value that represents a leap year day.","pos":[0,154],"source":"The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day."},{"content":"It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.","pos":[155,259]}]}]},{"pos":[1308,1581],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.AddYears#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.AddYears#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.AddYears#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)]\n[!code-vb[System.DateTime.AddYears#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)]"}],"pos":[135472,137069],"yaml":true,"extradata":"MT"},{"content":"A number of years. The <code>value</code> parameter can be negative or positive.","nodes":[{"pos":[0,80],"content":"A number of years. The <code>value</code> parameter can be negative or positive.","nodes":[{"content":"A number of years.","pos":[0,18]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter can be negative or positive.","pos":[19,80],"source":" The <code>value</code> parameter can be negative or positive."}]}],"pos":[137206,137287],"yaml":true},{"content":"An object whose value is the sum of the date and time represented by this instance and the number of years represented by <code>value</code>.","nodes":[{"pos":[0,141],"content":"An object whose value is the sum of the date and time represented by this instance and the number of years represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object whose value is the sum of the date and time represented by this instance and the number of years represented by <code>value</code>."}],"pos":[137346,137488],"yaml":true},{"content":"<code>value</code> or the resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,194],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> or the resulting <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph4\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> or the resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[137654,137849],"yaml":true},{"content":"Compares two instances of <xref href=\"System.DateTime\"></xref> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.","nodes":[{"pos":[0,192],"content":"Compares two instances of <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.","source":"Compares two instances of <xref href=\"System.DateTime\"></xref> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance."}],"pos":[139380,139573],"yaml":true},{"content":"To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property. Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.","nodes":[{"pos":[0,333],"content":"To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property. Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.","nodes":[{"content":"To determine the relationship of <ph id=\"ph1\">`t1`</ph> to <ph id=\"ph2\">`t2`</ph>, the <ph id=\"ph3\">&lt;xref:System.DateTime.Compare%2A&gt;</ph> method compares the <ph id=\"ph4\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property of <ph id=\"ph5\">`t1`</ph> and <ph id=\"ph6\">`t2`</ph> but ignores their <ph id=\"ph7\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[0,221],"source":"To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property."},{"content":"Before comparing <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, ensure that the objects represent times in the same time zone.","pos":[222,333],"source":" Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone."}]}],"pos":[139584,139918],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[140445,140474],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[140534,140564],"yaml":true},{"content":"A signed number indicating the relative values of <code>t1</code> and <code>t2</code>.  \n  \n <table><thead><tr><th> Value Type  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>t1</code> is earlier than <code>t2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>t1</code> is the same as <code>t2</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>t1</code> is later than <code>t2</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,86],"content":"A signed number indicating the relative values of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">t1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">t2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A signed number indicating the relative values of <code>t1</code> and <code>t2</code>."},{"pos":[93,503],"content":"<table><thead><tr><th> Value Type  \n  \n </th><th> Condition  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>t1</code> is earlier than <code>t2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>t1</code> is the same as <code>t2</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>t1</code> is later than <code>t2</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value Type","pos":[23,38],"source":" Value Type  \n  \n "},{"content":"Condition","pos":[50,64],"source":" Condition  \n  \n "},{"content":"Less than zero","pos":[100,119],"source":" Less than zero  \n  \n "},{"content":"<code>t1</code> is earlier than <code>t2</code>.  \n  \n ","pos":[130,185],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;t1&lt;/code&gt;</ph> is earlier than <ph id=\"ph2\">&lt;code&gt;t2&lt;/code&gt;</ph>.","pos":[0,48],"source":"<code>t1</code> is earlier than <code>t2</code>."}]},{"content":"Zero","pos":[204,213],"source":" Zero  \n  \n "},{"content":"<code>t1</code> is the same as <code>t2</code>.  \n  \n ","pos":[224,278],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;t1&lt;/code&gt;</ph> is the same as <ph id=\"ph2\">&lt;code&gt;t2&lt;/code&gt;</ph>.","pos":[0,47],"source":"<code>t1</code> is the same as <code>t2</code>."}]},{"content":"Greater than zero","pos":[297,319],"source":" Greater than zero  \n  \n "},{"content":"<code>t1</code> is later than <code>t2</code>.  \n  \n ","pos":[330,383],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;t1&lt;/code&gt;</ph> is later than <ph id=\"ph2\">&lt;code&gt;t2&lt;/code&gt;</ph>.","pos":[0,46],"source":"<code>t1</code> is later than <code>t2</code>."}]}]}],"pos":[140620,141143],"yaml":true},{"content":"Compares the value of this instance to a specified <xref href=\"System.DateTime\"></xref> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <xref href=\"System.DateTime\"></xref> value.","nodes":[{"pos":[0,255],"content":"Compares the value of this instance to a specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value.","source":"Compares the value of this instance to a specified <xref href=\"System.DateTime\"></xref> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <xref href=\"System.DateTime\"></xref> value."}],"pos":[142662,142918],"yaml":true},{"content":"To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.  Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.  \n  \n This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=fullName> method overload because it does not have to convert the `value` parameter to an object.","nodes":[{"pos":[0,469],"content":"To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.  Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.","nodes":[{"content":"To determine the relationship of the current instance to <ph id=\"ph1\">`value`</ph>, the <ph id=\"ph2\">&lt;xref:System.DateTime.CompareTo%2A&gt;</ph> method compares the <ph id=\"ph3\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property of the current instance and <ph id=\"ph4\">`value`</ph> but ignores their <ph id=\"ph5\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[0,261],"source":"To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property."},{"content":"Before comparing <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.","pos":[263,377],"source":"  Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone."},{"content":"You can do this by comparing the values of their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> properties.","pos":[378,469],"source":" You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties."}]},{"pos":[476,770],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IComparable%601?displayProperty=fullName&gt;</ph> interface and performs slightly better than the <ph id=\"ph2\">&lt;xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph> method overload because it does not have to convert the <ph id=\"ph3\">`value`</ph> parameter to an object.","source":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=fullName> method overload because it does not have to convert the `value` parameter to an object."}],"pos":[142929,143704],"yaml":true,"extradata":"MT"},{"content":"The object to compare to the current instance.","nodes":[{"pos":[0,46],"content":"The object to compare to the current instance.","nodes":[{"content":"The object to compare to the current instance.","pos":[0,46]}]}],"pos":[144479,144526],"yaml":true},{"content":"A signed number indicating the relative values of this instance and the <code>value</code> parameter.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is earlier than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is the same as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is later than <code>value</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,101],"content":"A signed number indicating the relative values of this instance and the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A signed number indicating the relative values of this instance and the <code>value</code> parameter."},{"pos":[108,521],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is earlier than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is the same as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is later than <code>value</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Description","pos":[45,61],"source":" Description  \n  \n "},{"content":"Less than zero","pos":[97,116],"source":" Less than zero  \n  \n "},{"content":" This instance is earlier than <code>value</code>.  \n  \n ","pos":[127,184],"nodes":[{"content":"This instance is earlier than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,50],"source":" This instance is earlier than <code>value</code>."}]},{"content":"Zero","pos":[203,212],"source":" Zero  \n  \n "},{"content":" This instance is the same as <code>value</code>.  \n  \n ","pos":[223,279],"nodes":[{"content":"This instance is the same as <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,49],"source":" This instance is the same as <code>value</code>."}]},{"content":"Greater than zero","pos":[298,320],"source":" Greater than zero  \n  \n "},{"content":" This instance is later than <code>value</code>.  \n  \n ","pos":[331,386],"nodes":[{"content":"This instance is later than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,48],"source":" This instance is later than <code>value</code>."}]}]}],"pos":[144582,145123],"yaml":true},{"content":"Compares the value of this instance to a specified object that contains a specified <xref href=\"System.DateTime\"></xref> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <xref href=\"System.DateTime\"></xref> value.","nodes":[{"pos":[0,289],"content":"Compares the value of this instance to a specified object that contains a specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value.","source":"Compares the value of this instance to a specified object that contains a specified <xref href=\"System.DateTime\"></xref> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <xref href=\"System.DateTime\"></xref> value."}],"pos":[146632,146922],"yaml":true},{"content":"To determine the relationship of the current instance to `value`, the<xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.  \n  \n Any instance of <xref:System.DateTime>, regardless of its value, is considered greater than `null`.","nodes":[{"pos":[0,467],"content":"To determine the relationship of the current instance to `value`, the<xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.","nodes":[{"content":"To determine the relationship of the current instance to <ph id=\"ph1\">`value`</ph>, the<ph id=\"ph2\">&lt;xref:System.DateTime.CompareTo%2A&gt;</ph> method compares the <ph id=\"ph3\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property of the current instance and <ph id=\"ph4\">`value`</ph> but ignores their <ph id=\"ph5\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[0,260],"source":"To determine the relationship of the current instance to `value`, the<xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property."},{"content":"Before comparing <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.","pos":[261,375],"source":" Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone."},{"content":"You can do this by comparing the values of their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> properties.","pos":[376,467],"source":" You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties."}]},{"pos":[474,573],"content":"Any instance of <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>, regardless of its value, is considered greater than <ph id=\"ph2\">`null`</ph>.","source":"Any instance of <xref:System.DateTime>, regardless of its value, is considered greater than `null`."}],"pos":[146933,147511],"yaml":true,"extradata":"MT"},{"content":"A boxed object to compare, or `null`.","nodes":[{"pos":[0,37],"content":"A boxed object to compare, or <ph id=\"ph1\">`null`</ph>.","source":"A boxed object to compare, or `null`."}],"pos":[148099,148137],"yaml":true},{"content":"A signed number indicating the relative values of this instance and <code>value</code>.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is earlier than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is the same as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is later than <code>value</code>, or <code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,87],"content":"A signed number indicating the relative values of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A signed number indicating the relative values of this instance and <code>value</code>."},{"pos":[94,540],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is earlier than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is the same as <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is later than <code>value</code>, or <code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Description","pos":[45,61],"source":" Description  \n  \n "},{"content":"Less than zero","pos":[97,116],"source":" Less than zero  \n  \n "},{"content":" This instance is earlier than <code>value</code>.  \n  \n ","pos":[127,184],"nodes":[{"content":"This instance is earlier than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,50],"source":" This instance is earlier than <code>value</code>."}]},{"content":"Zero","pos":[203,212],"source":" Zero  \n  \n "},{"content":" This instance is the same as <code>value</code>.  \n  \n ","pos":[223,279],"nodes":[{"content":"This instance is the same as <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,49],"source":" This instance is the same as <code>value</code>."}]},{"content":"Greater than zero","pos":[298,320],"source":" Greater than zero  \n  \n "},{"content":" This instance is later than <code>value</code>, or <code>value</code> is `null`.  \n  \n ","pos":[331,419],"nodes":[{"content":"This instance is later than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","pos":[1,81],"source":" This instance is later than <code>value</code>, or <code>value</code> is `null`."}]}]}],"pos":[148193,148753],"yaml":true},{"content":"<code>value</code> is not a <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is not a <xref href=\"System.DateTime\"></xref>."}],"pos":[148900,148966],"yaml":true},{"content":"Gets the date component of this instance.","nodes":[{"pos":[0,41],"content":"Gets the date component of this instance.","nodes":[{"content":"Gets the date component of this instance.","pos":[0,41]}]}],"pos":[149978,150020],"yaml":true},{"content":"The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance.  \n  \n Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time.","nodes":[{"pos":[0,146],"content":"The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value is the same as that of the current instance.","pos":[0,146],"source":"The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance."}]},{"pos":[153,366],"content":"Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time.","nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <ph id=\"ph2\">&lt;xref:System.DateTime.Date%2A&gt;</ph> property as a date and time.","pos":[0,213],"source":"Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time."}]}],"pos":[150031,150402],"yaml":true,"extradata":"MT"},{"content":"A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).","nodes":[{"pos":[0,105],"content":"A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).","nodes":[{"content":"A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).","pos":[0,105]}]}],"pos":[151285,151391],"yaml":true},{"content":"Gets the day of the month represented by this instance.","nodes":[{"pos":[0,55],"content":"Gets the day of the month represented by this instance.","nodes":[{"content":"Gets the day of the month represented by this instance.","pos":[0,55]}]}],"pos":[152792,152848],"yaml":true},{"content":"The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar. To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=fullName> method. The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.  \n  \n [!code-csharp[System.DateTime.Day#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)]\n [!code-vb[System.DateTime.Day#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)]  \n  \n Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.  \n  \n [!code-csharp[System.DateTime.Day#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)]\n [!code-vb[System.DateTime.Day#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)]","nodes":[{"pos":[0,758],"content":"The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar. To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=fullName> method. The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.","nodes":[{"content":"The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar. To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=fullName> method. The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.","pos":[0,758],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Day%2A&gt;</ph> property always returns the day of the month in the Gregorian calendar, even if the current <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar.","pos":[0,280],"source":"The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar."},{"content":"To retrieve the day of the month of a particular date using some other calendar, call that calendar's <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=fullName&gt;</ph> method.","pos":[281,469],"source":" To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=fullName> method."},{"content":"The following example uses both the <ph id=\"ph1\">&lt;xref:System.DateTime.Day%2A&gt;</ph> property and the <ph id=\"ph2\">&lt;xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName&gt;</ph> method to retrieve the day of the month for a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value that is instantiated using the Hijri calendar.","pos":[470,758],"source":" The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar."}]}]},{"pos":[765,1008],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Day#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Day#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Day#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)]\n [!code-vb[System.DateTime.Day#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)]"},{"pos":[1015,1316],"content":"Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.","nodes":[{"content":"Similarly, the following example uses both the <ph id=\"ph1\">&lt;xref:System.DateTime.Day%2A&gt;</ph> property and the <ph id=\"ph2\">&lt;xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName&gt;</ph> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.","pos":[0,301],"source":"Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar."}]},{"pos":[1323,1566],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Day#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Day#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Day#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)]\n [!code-vb[System.DateTime.Day#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)]"}],"pos":[152859,154436],"yaml":true,"extradata":"MT"},{"content":"The day component, expressed as a value between 1 and 31.","nodes":[{"pos":[0,57],"content":"The day component, expressed as a value between 1 and 31.","nodes":[{"content":"The day component, expressed as a value between 1 and 31.","pos":[0,57]}]}],"pos":[155055,155113],"yaml":true},{"content":"Gets the day of the week represented by this instance.","nodes":[{"pos":[0,54],"content":"Gets the day of the week represented by this instance.","nodes":[{"content":"Gets the day of the week represented by this instance.","pos":[0,54]}]}],"pos":[156549,156604],"yaml":true},{"content":"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).  \n  \n The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings. To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings. For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md).","nodes":[{"pos":[0,375],"content":"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).","nodes":[{"content":"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).","pos":[0,375],"nodes":[{"content":"The value of the constants in the <ph id=\"ph1\">&lt;xref:System.DayOfWeek&gt;</ph> enumeration ranges from <ph id=\"ph2\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph> to <ph id=\"ph3\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>.","pos":[0,183],"source":"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>."},{"content":"If cast to an integer, its value ranges from zero (which indicates <ph id=\"ph1\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>) to six (which indicates <ph id=\"ph2\">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>).","pos":[184,375],"source":" If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>)."}]}]},{"pos":[382,943],"content":"The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings. To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings. For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.DayOfWeek%2A&gt;</ph> property returns an enumerated constant; it does not reflect a system's regional and language settings.","pos":[0,143],"source":"The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings."},{"content":"To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method that includes a <ph id=\"ph2\">`format`</ph> parameter and pass it either the <ph id=\"ph3\">`ddd`</ph> or <ph id=\"ph4\">`dddd`</ph> custom format strings.","pos":[144,397],"source":" To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings."},{"content":"For details, see <bpt id=\"p1\">[</bpt>How to: Extract the Day of the Week from a Specific Date<ept id=\"p1\">](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md)</ept>.","pos":[398,561],"source":" For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md)."}]}],"pos":[156615,157563],"yaml":true,"extradata":"MT"},{"content":"An enumerated constant that indicates the day of the week of this <xref href=\"System.DateTime\"></xref> value.","nodes":[{"pos":[0,109],"content":"An enumerated constant that indicates the day of the week of this <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value.","source":"An enumerated constant that indicates the day of the week of this <xref href=\"System.DateTime\"></xref> value."}],"pos":[158195,158305],"yaml":true},{"content":"Gets the day of the year represented by this instance.","nodes":[{"pos":[0,54],"content":"Gets the day of the year represented by this instance.","nodes":[{"content":"Gets the day of the year represented by this instance.","pos":[0,54]}]}],"pos":[159747,159802],"yaml":true},{"content":"The<xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year. The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar. To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=fullName> method of that calendar.","nodes":[{"pos":[0,429],"content":"The<xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year. The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar. To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=fullName> method of that calendar.","nodes":[{"content":"The<xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year. The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar. To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=fullName> method of that calendar.","pos":[0,429],"nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.DayOfYear%2A&gt;</ph> property takes leap years into account when it calculates the day of the year.","pos":[0,117],"source":"The<xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year."},{"content":"The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar.","pos":[118,260]},{"content":"To retrieve the day of the year in a different calendar, call the <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=fullName&gt;</ph> method of that calendar.","pos":[261,429],"source":" To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=fullName> method of that calendar."}]}]}],"pos":[159813,160243],"yaml":true,"extradata":"MT"},{"content":"The day of the year, expressed as a value between 1 and 366.","nodes":[{"pos":[0,60],"content":"The day of the year, expressed as a value between 1 and 366.","nodes":[{"content":"The day of the year, expressed as a value between 1 and 366.","pos":[0,60]}]}],"pos":[160864,160925],"yaml":true},{"content":"Returns the number of days in the specified month and year.","nodes":[{"pos":[0,59],"content":"Returns the number of days in the specified month and year.","nodes":[{"content":"Returns the number of days in the specified month and year.","pos":[0,59]}]}],"pos":[162500,162560],"yaml":true},{"content":"The<xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar. To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method.","nodes":[{"pos":[0,367],"content":"The<xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar. To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.DaysInMonth%2A&gt;</ph> method always interprets <ph id=\"ph2\">`month`</ph> and <ph id=\"ph3\">`year`</ph> as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar.","pos":[0,210],"source":"The<xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar."},{"content":"To get the number of days in a specified month of a particular calendar, call that calendar's <ph id=\"ph1\">&lt;xref:System.Globalization.Calendar.GetDaysInMonth%2A&gt;</ph> method.","pos":[211,367],"source":" To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method."}]}],"pos":[162571,162939],"yaml":true,"extradata":"MT"},{"content":"The year.","nodes":[{"pos":[0,9],"content":"The year.","nodes":[{"content":"The year.","pos":[0,9]}]}],"pos":[164091,164101],"yaml":true},{"content":"The month (a number ranging from 1 to 12).","nodes":[{"pos":[0,42],"content":"The month (a number ranging from 1 to 12).","nodes":[{"content":"The month (a number ranging from 1 to 12).","pos":[0,42]}]}],"pos":[164161,164204],"yaml":true},{"content":"The number of days in <code>month</code> for the specified <code>year</code>.  \n  \n For example, if <code>month</code> equals 2 for February, the return value is 28 or 29 depending upon whether <code>year</code> is a leap year.","nodes":[{"pos":[0,77],"content":"The number of days in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept> for the specified <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">year</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The number of days in <code>month</code> for the specified <code>year</code>."},{"pos":[84,227],"content":"For example, if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">month</ph><ept id=\"p1\">&lt;/code&gt;</ept> equals 2 for February, the return value is 28 or 29 depending upon whether <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">year</ph><ept id=\"p2\">&lt;/code&gt;</ept> is a leap year.","source":"For example, if <code>month</code> equals 2 for February, the return value is 28 or 29 depending upon whether <code>year</code> is a leap year."}],"pos":[164260,164492],"yaml":true},{"content":"<code>month</code> is less than 1 or greater than 12.  \n  \n -or-  \n  \n <code>year</code> is less than 1 or greater than 9999.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.","source":"<code>month</code> is less than 1 or greater than 12."},{"pos":[60,64],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[71,125],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.","source":"<code>year</code> is less than 1 or greater than 9999."}],"pos":[164661,164793],"yaml":true},{"content":"Returns a value indicating whether the value of this instance is equal to the value of the specified <xref href=\"System.DateTime\"></xref> instance.","nodes":[{"pos":[0,147],"content":"Returns a value indicating whether the value of this instance is equal to the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns a value indicating whether the value of this instance is equal to the value of the specified <xref href=\"System.DateTime\"></xref> instance."}],"pos":[166240,166388],"yaml":true},{"content":"The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.  \n  \n This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than the <xref:System.DateTime.Equals%2A> method because the `value` parameter does not have to be converted to an object.","nodes":[{"pos":[0,208],"content":"The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.","nodes":[{"content":"The current instance and <ph id=\"ph1\">`value`</ph> are equal if their <ph id=\"ph2\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property values are equal.","pos":[0,110],"source":"The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal."},{"content":"Their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property values are not considered in the test for equality.","pos":[111,208],"source":" Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality."}]},{"pos":[215,458],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> interface, and performs slightly better than the <ph id=\"ph2\">&lt;xref:System.DateTime.Equals%2A&gt;</ph> method because the <ph id=\"ph3\">`value`</ph> parameter does not have to be converted to an object.","source":"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than the <xref:System.DateTime.Equals%2A> method because the `value` parameter does not have to be converted to an object."}],"pos":[166399,166862],"yaml":true,"extradata":"MT"},{"content":"The object to compare to this instance.","nodes":[{"pos":[0,39],"content":"The object to compare to this instance.","nodes":[{"content":"The object to compare to this instance.","pos":[0,39]}]}],"pos":[167403,167443],"yaml":true},{"content":"`true` if the <code>value</code> parameter equals the value of this instance; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter equals the value of this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>value</code> parameter equals the value of this instance; otherwise, `false`."}],"pos":[167501,167601],"yaml":true},{"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"pos":[0,80],"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value indicating whether this instance is equal to a specified object.","pos":[0,80]}]}],"pos":[169089,169170],"yaml":true},{"content":"The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.","nodes":[{"pos":[0,208],"content":"The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.","nodes":[{"content":"The current instance and <ph id=\"ph1\">`value`</ph> are equal if their <ph id=\"ph2\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property values are equal.","pos":[0,110],"source":"The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal."},{"content":"Their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property values are not considered in the test for equality.","pos":[111,208],"source":" Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality."}]}],"pos":[169181,169390],"yaml":true,"extradata":"MT"},{"content":"The object to compare to this instance.","nodes":[{"pos":[0,39],"content":"The object to compare to this instance.","nodes":[{"content":"The object to compare to this instance.","pos":[0,39]}]}],"pos":[169936,169976],"yaml":true},{"content":"`true` if <code>value</code> is an instance of <xref href=\"System.DateTime\"></xref> and equals the value of this instance; otherwise, `false`.","nodes":[{"pos":[0,142],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an instance of <ph id=\"ph3\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> and equals the value of this instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value</code> is an instance of <xref href=\"System.DateTime\"></xref> and equals the value of this instance; otherwise, `false`."}],"pos":[170034,170179],"yaml":true},{"content":"Returns a value indicating whether two <xref href=\"System.DateTime\"></xref> instances  have the same date and time value.","nodes":[{"pos":[0,121],"content":"Returns a value indicating whether two <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> instances  have the same date and time value.","source":"Returns a value indicating whether two <xref href=\"System.DateTime\"></xref> instances  have the same date and time value."}],"pos":[171757,171879],"yaml":true},{"content":"`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their<xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.","nodes":[{"pos":[0,188],"content":"`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their<xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.","nodes":[{"content":"<ph id=\"ph1\">`t1`</ph> and <ph id=\"ph2\">`t2`</ph> are equal if their <ph id=\"ph3\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property values are equal.","pos":[0,91],"source":"`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal."},{"content":"Their<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property values are not considered in the test for equality.","pos":[92,188],"source":" Their<xref:System.DateTime.Kind%2A> property values are not considered in the test for equality."}]}],"pos":[171890,172081],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[172664,172693],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[172753,172783],"yaml":true},{"content":"`true` if the two values are equal; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the two values are equal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two values are equal; otherwise, `false`."}],"pos":[172841,172899],"yaml":true},{"content":"Deserializes a 64-bit binary value and recreates an original serialized <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,116],"content":"Deserializes a 64-bit binary value and recreates an original serialized <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"Deserializes a 64-bit binary value and recreates an original serialized <xref href=\"System.DateTime\"></xref> object."}],"pos":[174405,174522],"yaml":true},{"content":"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.  \n  \n> [!IMPORTANT]\n>  In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \"Local Time Adjustment\".  \n  \n## Local Time Adjustment  \n A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:  \n  \n-   If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.  \n  \n     For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.  \n  \n-   If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.  \n  \n     For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.  \n  \n     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]\n     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  \n  \n## Version Considerations  \n Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.  \n  \n Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you needed to serialize only the Ticks data in the <xref:System.DateTime>. Starting with the .NET Framework 2.0, you must also serialize the Kind data.","nodes":[{"pos":[0,277],"content":"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.","nodes":[{"content":"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.","pos":[0,277],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method to convert the value of the current <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object to a binary value.","pos":[0,134],"source":"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value."},{"content":"Subsequently, use the binary value and the <ph id=\"ph1\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method to recreate the original <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[135,277],"source":" Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object."}]}]},{"pos":[285,598],"content":"[!IMPORTANT]\n In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \"Local Time Adjustment\".","leadings":["","> "],"nodes":[{"content":" In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \"Local Time Adjustment\".","pos":[13,311],"nodes":[{"content":"In some cases, the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value returned by the <ph id=\"ph2\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method is not identical to the original <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value supplied to the <ph id=\"ph4\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method.","pos":[1,229],"source":" In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method."},{"content":"For more information, see the next section, \"Local Time Adjustment\".","pos":[230,298]}]}]},{"pos":[607,628],"content":"Local Time Adjustment","linkify":"Local Time Adjustment","nodes":[{"content":"Local Time Adjustment","pos":[0,21]}]},{"pos":[632,1186],"content":"A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:","nodes":[{"content":"A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:","pos":[0,554],"nodes":[{"content":"A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure whose <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property has the value <ph id=\"ph3\">&lt;xref:System.DateTimeKind.Local&gt;</ph>.","pos":[0,231],"source":"A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>."},{"content":"When restoring a local <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value from the binary representation that is produced by the <ph id=\"ph2\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method, the <ph id=\"ph3\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method may adjust the recreated value so that it is not equal to the original value.","pos":[232,507],"source":" When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value."},{"content":"This can occur under the following conditions:","pos":[508,554]}]}]},{"pos":[1196,1541],"content":"If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.","nodes":[{"content":"If a local <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is serialized in one time zone by the <ph id=\"ph2\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method, and then deserialized in a different time zone by the <ph id=\"ph3\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method, the local time represented by the resulting <ph id=\"ph4\">&lt;xref:System.DateTime&gt;</ph> object is automatically adjusted to the second time zone.","pos":[0,345],"source":"If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone."}]},{"pos":[1552,2205],"content":"For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.","nodes":[{"content":"For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.","pos":[0,653],"nodes":[{"content":"For example, consider a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object that represents a local time of 3 P.M.","pos":[0,92],"source":"For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M."},{"content":"An application that is executing in the U.S. Pacific Time zone uses the <ph id=\"ph1\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method to convert that <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object to a binary value.","pos":[93,271],"source":" An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value."},{"content":"Another application that is executing in the U.S. Eastern Time zone then uses the <ph id=\"ph1\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method to convert the binary value to a new <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[272,465],"source":" Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object."},{"content":"The value of the new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is 6 P.M., which represents the same point in time as the original 3 P.M.","pos":[466,590],"source":" The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M."},{"content":"value, but is adjusted to local time in the Eastern Time zone.","pos":[591,653]}]}]},{"pos":[2215,2446],"content":"If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.","nodes":[{"content":"If the binary representation of a local <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value represents an invalid time in the local time zone of the system on which <ph id=\"ph2\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> is called, the time is adjusted so that it is valid.","pos":[0,231],"source":"If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid."}]},{"pos":[2457,3263],"content":"For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.","nodes":[{"content":"For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.","pos":[0,806],"nodes":[{"content":"For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.","pos":[0,205]},{"content":"This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.","pos":[206,308]},{"content":"The following example shows that when a time that falls within this range is converted to a binary value by the <ph id=\"ph1\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method and is then restored by the <ph id=\"ph2\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method, the original value is adjusted to become a valid time.","pos":[309,590],"source":" The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time."},{"content":"You can determine whether a particular date and time value may be subject to modification by passing it to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName&gt;</ph> method, as the example illustrates.","pos":[591,806],"source":" You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates."}]}]},{"pos":[3274,3563],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.FromBinary#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.FromBinary#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]\n [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]"},{"pos":[3572,3594],"content":"Version Considerations","linkify":"Version Considerations","nodes":[{"content":"Version Considerations","pos":[0,22]}]},{"pos":[3598,4105],"content":"Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.","nodes":[{"content":"Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.","pos":[0,507],"nodes":[{"content":"Starting with the .NET Framework version 2.0, a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.","pos":[0,337],"source":"Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time."},{"content":"The number of ticks can be accessed with the <ph id=\"ph1\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property and theKind field can be accessed with the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[338,507],"source":" The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property."}]}]},{"pos":[4112,4482],"content":"Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you needed to serialize only the Ticks data in the <xref:System.DateTime>. Starting with the .NET Framework 2.0, you must also serialize the Kind data.","nodes":[{"content":"Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you needed to serialize only the Ticks data in the <xref:System.DateTime>. Starting with the .NET Framework 2.0, you must also serialize the Kind data.","pos":[0,370],"nodes":[{"content":"Prior to the .NET Framework 2.0, if you serialized a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object manually instead of using a serialization interface such as <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName&gt;</ph>, you needed to serialize only the Ticks data in the <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,293],"source":"Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you needed to serialize only the Ticks data in the <xref:System.DateTime>."},{"content":"Starting with the .NET Framework 2.0, you must also serialize the Kind data.","pos":[294,370]}]}]}],"pos":[174533,179042],"yaml":true,"extradata":"MT"},{"content":"A 64-bit signed integer that encodes the <xref href=\"System.DateTime.Kind\"></xref> property in a 2-bit field and the <xref href=\"System.DateTime.Ticks\"></xref> property in a 62-bit field.","nodes":[{"pos":[0,187],"content":"A 64-bit signed integer that encodes the <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property in a 2-bit field and the <ph id=\"ph2\">&lt;xref href=\"System.DateTime.Ticks\"&gt;&lt;/xref&gt;</ph> property in a 62-bit field.","source":"A 64-bit signed integer that encodes the <xref href=\"System.DateTime.Kind\"></xref> property in a 2-bit field and the <xref href=\"System.DateTime.Ticks\"></xref> property in a 62-bit field."}],"pos":[179195,179383],"yaml":true},{"content":"An object that is equivalent to the <xref href=\"System.DateTime\"></xref> object that was serialized by the <xref href=\"System.DateTime.ToBinary\"></xref> method.","nodes":[{"pos":[0,160],"content":"An object that is equivalent to the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object that was serialized by the <ph id=\"ph2\">&lt;xref href=\"System.DateTime.ToBinary\"&gt;&lt;/xref&gt;</ph> method.","source":"An object that is equivalent to the <xref href=\"System.DateTime\"></xref> object that was serialized by the <xref href=\"System.DateTime.ToBinary\"></xref> method."}],"pos":[179442,179603],"yaml":true},{"content":"<code>dateData</code> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">&lt;code&gt;dateData&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>dateData</code> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[179751,179895],"yaml":true},{"content":"Converts the specified Windows file time to an equivalent local time.","nodes":[{"pos":[0,69],"content":"Converts the specified Windows file time to an equivalent local time.","nodes":[{"content":"Converts the specified Windows file time to an equivalent local time.","pos":[0,69]}]}],"pos":[181360,181430],"yaml":true},{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.  \n  \n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"pos":[0,289],"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[0,289],"nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.","pos":[0,153]},{"content":"(C.E.) Coordinated Universal Time (UTC).","pos":[154,194]},{"content":"Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[195,289]}]}]},{"pos":[296,377],"content":"The <ph id=\"ph1\">`fileTime`</ph> parameter specifies a file time expressed in 100-nanosecond ticks.","source":"The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks."},{"pos":[384,576],"content":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Starting with the .NET Framework version 2.0, the return value is a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,192],"source":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>."}]}],"pos":[181441,182024],"yaml":true,"extradata":"MT"},{"content":"A Windows file time expressed in ticks.","nodes":[{"pos":[0,39],"content":"A Windows file time expressed in ticks.","nodes":[{"content":"A Windows file time expressed in ticks.","pos":[0,39]}]}],"pos":[182651,182691],"yaml":true},{"content":"An object that represents the local time equivalent of the date and time represented by the <code>fileTime</code> parameter.","nodes":[{"pos":[0,124],"content":"An object that represents the local time equivalent of the date and time represented by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An object that represents the local time equivalent of the date and time represented by the <code>fileTime</code> parameter."}],"pos":[182750,182875],"yaml":true},{"content":"<code>fileTime</code> is less than 0 or represents a time greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;code&gt;fileTime&lt;/code&gt;</ph> is less than 0 or represents a time greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>fileTime</code> is less than 0 or represents a time greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[183045,183163],"yaml":true},{"content":"Converts the specified Windows file time to an equivalent UTC time.","nodes":[{"pos":[0,67],"content":"Converts the specified Windows file time to an equivalent UTC time.","nodes":[{"content":"Converts the specified Windows file time to an equivalent UTC time.","pos":[0,67]}]}],"pos":[184646,184714],"yaml":true},{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.  \n  \n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>.","nodes":[{"pos":[0,289],"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[0,289],"nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.","pos":[0,153]},{"content":"(C.E.) Coordinated Universal Time (UTC).","pos":[154,194]},{"content":"Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[195,289]}]}]},{"pos":[296,377],"content":"The <ph id=\"ph1\">`fileTime`</ph> parameter specifies a file time expressed in 100-nanosecond ticks.","source":"The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks."},{"pos":[384,555],"content":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>.","nodes":[{"content":"Starting with the .NET Framework version 2.0, the return value is a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph3\">&lt;xref:System.DateTimeKind.Utc&gt;</ph>.","pos":[0,171],"source":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>."}]}],"pos":[184725,185287],"yaml":true,"extradata":"MT"},{"content":"A Windows file time expressed in ticks.","nodes":[{"pos":[0,39],"content":"A Windows file time expressed in ticks.","nodes":[{"content":"A Windows file time expressed in ticks.","pos":[0,39]}]}],"pos":[185445,185485],"yaml":true},{"content":"An object that represents the UTC time equivalent of the date and time represented by the <code>fileTime</code> parameter.","nodes":[{"pos":[0,122],"content":"An object that represents the UTC time equivalent of the date and time represented by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"An object that represents the UTC time equivalent of the date and time represented by the <code>fileTime</code> parameter."}],"pos":[185544,185667],"yaml":true},{"content":"<code>fileTime</code> is less than 0 or represents a time greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;code&gt;fileTime&lt;/code&gt;</ph> is less than 0 or represents a time greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>fileTime</code> is less than 0 or represents a time greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[185840,185958],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> equivalent to the specified OLE Automation Date.","nodes":[{"pos":[0,95],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent to the specified OLE Automation Date.","source":"Returns a <xref href=\"System.DateTime\"></xref> equivalent to the specified OLE Automation Date."}],"pos":[187417,187513],"yaml":true},{"content":"The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899. The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight. `d` must be a value between negative 657435.0 through positive 2958465.99999999.  \n  \n Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899. For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.  \n  \n See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation.","nodes":[{"pos":[0,490],"content":"The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899. The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight. `d` must be a value between negative 657435.0 through positive 2958465.99999999.","nodes":[{"content":"The <ph id=\"ph1\">`d`</ph> parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899.","pos":[0,165],"source":"The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899."},{"content":"The sign and integral part of <ph id=\"ph1\">`d`</ph> encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of <ph id=\"ph2\">`d`</ph> encodes the time of day as a fraction of a day displacement from midnight.","pos":[166,409],"source":" The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight."},{"content":"<ph id=\"ph1\">`d`</ph> must be a value between negative 657435.0 through positive 2958465.99999999.","pos":[410,490],"source":"`d` must be a value between negative 657435.0 through positive 2958465.99999999."}]},{"pos":[497,825],"content":"Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899. For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.","nodes":[{"content":"Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899. For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.","pos":[0,328],"nodes":[{"content":"Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899.","pos":[0,119]},{"content":"For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.","pos":[120,328]}]}]},{"pos":[832,910],"content":"See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation.","nodes":[{"content":"See <ph id=\"ph1\">&lt;xref:System.DateTime.ToOADate%2A&gt;</ph> for more information on OLE Automation.","pos":[0,78],"source":"See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation."}]}],"pos":[187524,188441],"yaml":true,"extradata":"MT"},{"content":"An OLE Automation Date value.","nodes":[{"pos":[0,29],"content":"An OLE Automation Date value.","nodes":[{"content":"An OLE Automation Date value.","pos":[0,29]}]}],"pos":[188583,188613],"yaml":true},{"content":"An object that represents the same date and time as <code>d</code>.","nodes":[{"pos":[0,67],"content":"An object that represents the same date and time as <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that represents the same date and time as <code>d</code>."}],"pos":[188672,188740],"yaml":true},{"content":"The date is not a valid OLE Automation Date value.","nodes":[{"pos":[0,50],"content":"The date is not a valid OLE Automation Date value.","nodes":[{"content":"The date is not a valid OLE Automation Date value.","pos":[0,50]}]}],"pos":[188888,188939],"yaml":true},{"content":"Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.","nodes":[{"pos":[0,128],"content":"Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.","nodes":[{"content":"Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.","pos":[0,128]}]}],"pos":[190039,190168],"yaml":true},{"content":"The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=fullName> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings. For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \n  \n Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.  \n  \n> [!IMPORTANT]\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.","nodes":[{"pos":[0,557],"content":"The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=fullName> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings. For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).","nodes":[{"content":"The string array returned by the <ph id=\"ph1\">&lt;xref:System.DateTime.GetDateTimeFormats?displayProperty=fullName&gt;</ph> method is equivalent to combining the string arrays returned by separate calls to the <ph id=\"ph2\">&lt;xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=fullName&gt;</ph> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings.","pos":[0,388],"source":"The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=fullName> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings."},{"content":"For more information about standard format specifiers, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>.","pos":[389,557],"source":" For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)."}]},{"pos":[564,833],"content":"Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.","nodes":[{"content":"Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.","pos":[0,269],"nodes":[{"content":"Each element of the return value is formatted using information from the current culture.","pos":[0,89]},{"content":"For more information about culture-specific formatting information for the current culture, see <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.","pos":[90,269],"source":" For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>."}]}]},{"pos":[841,1165],"content":"[!IMPORTANT]\n Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.","leadings":["","> "],"nodes":[{"content":" Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.","pos":[13,322],"nodes":[{"content":"Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.","pos":[1,133]},{"content":"The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.","pos":[134,309]}]}]}],"pos":[190179,191382],"yaml":true,"extradata":"MT"},{"content":"A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.","nodes":[{"pos":[0,153],"content":"A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.","nodes":[{"content":"A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.","pos":[0,153]}]}],"pos":[195441,195595],"yaml":true},{"content":"Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.","nodes":[{"pos":[0,137],"content":"Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.","nodes":[{"content":"Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.","pos":[0,137]}]}],"pos":[197155,197293],"yaml":true},{"content":"The `format` parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \n  \n Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.  \n  \n> [!IMPORTANT]\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.","nodes":[{"pos":[0,309],"content":"The `format` parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter can be any of the standard date and time format specifiers.","pos":[0,82],"source":"The `format` parameter can be any of the standard date and time format specifiers."},{"content":"These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).","pos":[83,173]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>.","pos":[174,309],"source":" For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)."}]},{"pos":[316,585],"content":"Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.","nodes":[{"content":"Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.","pos":[0,269],"nodes":[{"content":"Each element of the return value is formatted using information from the current culture.","pos":[0,89]},{"content":"For more information about culture-specific formatting information for the current culture, see <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.","pos":[90,269],"source":" For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>."}]}]},{"pos":[593,917],"content":"[!IMPORTANT]\n Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.","leadings":["","> "],"nodes":[{"content":" Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.","pos":[13,322],"nodes":[{"content":"Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.","pos":[1,133]},{"content":"The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.","pos":[134,309]}]}]}],"pos":[197304,198229],"yaml":true,"extradata":"MT"},{"content":"A standard date and time format string.","nodes":[{"pos":[0,39],"content":"A standard date and time format string.","nodes":[{"content":"A standard date and time format string.","pos":[0,39]}]}],"pos":[198894,198934],"yaml":true},{"content":"A string array where each element is the representation of the value of this instance formatted with the <code>format</code> standard date and time format specifier.","nodes":[{"pos":[0,165],"content":"A string array where each element is the representation of the value of this instance formatted with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> standard date and time format specifier.","source":"A string array where each element is the representation of the value of this instance formatted with the <code>format</code> standard date and time format specifier."}],"pos":[198993,199159],"yaml":true},{"content":"<code>format</code> is not a valid standard date and time format specifier character.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is not a valid standard date and time format specifier character.","source":"<code>format</code> is not a valid standard date and time format specifier character."}],"pos":[199311,199397],"yaml":true},{"content":"Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.","nodes":[{"pos":[0,186],"content":"Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.","nodes":[{"content":"Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.","pos":[0,186]}]}],"pos":[200958,201145],"yaml":true},{"content":"The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings. For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \n  \n Each element of the return value is formatted using culture-specific information supplied by `provider`.  \n  \n> [!IMPORTANT]\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.","nodes":[{"pos":[0,610],"content":"The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings. For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).","nodes":[{"content":"The string array returned by the <ph id=\"ph1\">&lt;xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method is equivalent to combining the string arrays returned by separate calls to the <ph id=\"ph2\">&lt;xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings.","pos":[0,441],"source":"The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \"d\", \"D\", \"f\", \"F\", \"g\", \"G\", \"m\", \"o\", \"r\", \"s\", \"t\", \"T\", \"u\", \"U\", and \"y\" standard format strings."},{"content":"For more information about standard format specifiers, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>.","pos":[442,610],"source":" For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)."}]},{"pos":[617,721],"content":"Each element of the return value is formatted using culture-specific information supplied by <ph id=\"ph1\">`provider`</ph>.","source":"Each element of the return value is formatted using culture-specific information supplied by `provider`."},{"pos":[729,1167],"content":"[!IMPORTANT]\n Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.","leadings":["","> "],"nodes":[{"content":" Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.","pos":[13,436],"nodes":[{"content":"Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless <ph id=\"ph1\">`provider`</ph> is a <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the invariant culture.","pos":[1,241],"source":" Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture."},{"content":"The data returned by this method can change if the user overrides the individual cultural settings of <ph id=\"ph1\">`provider`</ph> or if an update occurs to the system's cultural data for <ph id=\"ph2\">`provider`</ph>.","pos":[242,423],"source":" The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`."}]}]}],"pos":[201156,202361],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information about this instance.","nodes":[{"pos":[0,84],"content":"An object that supplies culture-specific formatting information about this instance.","nodes":[{"content":"An object that supplies culture-specific formatting information about this instance.","pos":[0,84]}]}],"pos":[205491,205576],"yaml":true},{"content":"A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.","nodes":[{"pos":[0,153],"content":"A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.","nodes":[{"content":"A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.","pos":[0,153]}]}],"pos":[205635,205789],"yaml":true},{"content":"Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.","nodes":[{"pos":[0,181],"content":"Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.","nodes":[{"content":"Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.","pos":[0,181]}]}],"pos":[207469,207651],"yaml":true},{"content":"The format parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \n  \n Each element of the return value is formatted using culture-specific information supplied by `provider`.  \n  \n> [!IMPORTANT]\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.","nodes":[{"pos":[0,307],"content":"The format parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).","nodes":[{"content":"The format parameter can be any of the standard date and time format specifiers.","pos":[0,80]},{"content":"These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).","pos":[81,171]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>.","pos":[172,307],"source":" For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)."}]},{"pos":[314,418],"content":"Each element of the return value is formatted using culture-specific information supplied by <ph id=\"ph1\">`provider`</ph>.","source":"Each element of the return value is formatted using culture-specific information supplied by `provider`."},{"pos":[426,864],"content":"[!IMPORTANT]\n Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.","leadings":["","> "],"nodes":[{"content":" Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.","pos":[13,436],"nodes":[{"content":"Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless <ph id=\"ph1\">`provider`</ph> is a <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the invariant culture.","pos":[1,241],"source":" Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture."},{"content":"The data returned by this method can change if the user overrides the individual cultural settings of <ph id=\"ph1\">`provider`</ph> or if an update occurs to the system's cultural data for <ph id=\"ph2\">`provider`</ph>.","pos":[242,423],"source":" The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`."}]}]}],"pos":[207662,208534],"yaml":true,"extradata":"MT"},{"content":"A date and time format string.","nodes":[{"pos":[0,30],"content":"A date and time format string.","nodes":[{"content":"A date and time format string.","pos":[0,30]}]}],"pos":[209250,209281],"yaml":true},{"content":"An object that supplies culture-specific formatting information about this instance.","nodes":[{"pos":[0,84],"content":"An object that supplies culture-specific formatting information about this instance.","nodes":[{"content":"An object that supplies culture-specific formatting information about this instance.","pos":[0,84]}]}],"pos":[209354,209439],"yaml":true},{"content":"A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.","nodes":[{"pos":[0,153],"content":"A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.","nodes":[{"content":"A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.","pos":[0,153]}]}],"pos":[209498,209652],"yaml":true},{"content":"<code>format</code> is not a valid standard date and time format specifier character.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is not a valid standard date and time format specifier character.","source":"<code>format</code> is not a valid standard date and time format specifier character."}],"pos":[209804,209890],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[211292,211333],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[211467,211502],"yaml":true},{"content":"Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,101],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.TypeCode\"&gt;&lt;/xref&gt;</ph> for value type <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.DateTime\"></xref>."}],"pos":[212962,213064],"yaml":true},{"content":"The enumerated constant, <xref href=\"System.TypeCode.DateTime\"></xref>.","nodes":[{"pos":[0,71],"content":"The enumerated constant, <ph id=\"ph1\">&lt;xref href=\"System.TypeCode.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The enumerated constant, <xref href=\"System.TypeCode.DateTime\"></xref>."}],"pos":[213197,213269],"yaml":true},{"content":"Gets the hour component of the date represented by this instance.","nodes":[{"pos":[0,65],"content":"Gets the hour component of the date represented by this instance.","nodes":[{"content":"Gets the hour component of the date represented by this instance.","pos":[0,65]}]}],"pos":[214339,214405],"yaml":true},{"content":"The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock. To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \"h\" custom format specifier. For example:  \n  \n [!code-csharp[System.DateTime.Hour#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)]\n [!code-vb[System.DateTime.Hour#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)]","nodes":[{"pos":[0,434],"content":"The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock. To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \"h\" custom format specifier. For example:","nodes":[{"content":"The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock. To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \"h\" custom format specifier. For example:","pos":[0,434],"nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.DateTime.Hour%2A&gt;</ph> property is always expressed using a 24-hour clock.","pos":[0,99],"source":"The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock."},{"content":"To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method with the \"h\" custom format specifier.","pos":[100,421],"source":" To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \"h\" custom format specifier."},{"content":"For example:","pos":[422,434]}]}]},{"pos":[441,690],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Hour#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Hour#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Hour#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)]\n [!code-vb[System.DateTime.Hour#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)]"}],"pos":[214416,215114],"yaml":true,"extradata":"MT"},{"content":"The hour component, expressed as a value between 0 and 23.","nodes":[{"pos":[0,58],"content":"The hour component, expressed as a value between 0 and 23.","nodes":[{"content":"The hour component, expressed as a value between 0 and 23.","pos":[0,58]}]}],"pos":[215735,215794],"yaml":true},{"content":"Indicates whether this instance of <xref href=\"System.DateTime\"></xref> is within the daylight saving time range for the current time zone.","nodes":[{"pos":[0,139],"content":"Indicates whether this instance of <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is within the daylight saving time range for the current time zone.","source":"Indicates whether this instance of <xref href=\"System.DateTime\"></xref> is within the daylight saving time range for the current time zone."}],"pos":[217301,217441],"yaml":true},{"content":"This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property. You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=fullName> property. For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName> property.  \n  \n If the current <xref:System.DateTime> value represents either an ambiguous or an invalid time in the local time zone, the method returns `false`.  \n  \n On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time. As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.","nodes":[{"pos":[0,757],"content":"This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property. You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=fullName> property. For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName> property.","nodes":[{"content":"This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property. You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=fullName> property. For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName> property.","pos":[0,757],"nodes":[{"content":"This method determines whether the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value falls within the daylight saving time range of the local time zone, which is returned by the <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,235],"source":"This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property."},{"content":"You can determine whether a time zone supports daylight saving time by retrieving the value of its <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> property.","pos":[236,426],"source":" You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=fullName> property."},{"content":"For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName&gt;</ph> array returned by the time zone's <ph id=\"ph2\">&lt;xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName&gt;</ph> property.","pos":[427,757],"source":" For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName> property."}]}]},{"pos":[764,909],"content":"If the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value represents either an ambiguous or an invalid time in the local time zone, the method returns <ph id=\"ph2\">`false`</ph>.","source":"If the current <xref:System.DateTime> value represents either an ambiguous or an invalid time in the local time zone, the method returns `false`."},{"pos":[916,1314],"content":"On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time. As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.","nodes":[{"content":"On <ph id=\"ph1\">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph> systems, the <ph id=\"ph2\">&lt;xref:System.DateTime.IsDaylightSavingTime%2A&gt;</ph> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time.","pos":[0,228],"source":"On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time."},{"content":"As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.","pos":[229,398]}]}],"pos":[217452,218773],"yaml":true,"extradata":"MT"},{"content":"`true` if the value of the <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Local\"></xref> or <xref href=\"System.DateTimeKind.Unspecified\"></xref> and the value of this instance of <xref href=\"System.DateTime\"></xref> is within the daylight saving time range for the local time zone; `false` if <xref href=\"System.DateTime.Kind\"></xref> is <xref href=\"System.DateTimeKind.Utc\"></xref>.","nodes":[{"pos":[0,422],"content":"<ph id=\"ph1\">`true`</ph> if the value of the <ph id=\"ph2\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind.Local\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph4\">&lt;xref href=\"System.DateTimeKind.Unspecified\"&gt;&lt;/xref&gt;</ph> and the value of this instance of <ph id=\"ph5\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is within the daylight saving time range for the local time zone; <ph id=\"ph6\">`false`</ph> if <ph id=\"ph7\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph8\">&lt;xref href=\"System.DateTimeKind.Utc\"&gt;&lt;/xref&gt;</ph>.","source":"`true` if the value of the <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Local\"></xref> or <xref href=\"System.DateTimeKind.Unspecified\"></xref> and the value of this instance of <xref href=\"System.DateTime\"></xref> is within the daylight saving time range for the local time zone; `false` if <xref href=\"System.DateTime.Kind\"></xref> is <xref href=\"System.DateTimeKind.Utc\"></xref>."}],"pos":[218910,219335],"yaml":true},{"content":"Returns an indication whether the specified year is a leap year.","nodes":[{"pos":[0,64],"content":"Returns an indication whether the specified year is a leap year.","nodes":[{"content":"Returns an indication whether the specified year is a leap year.","pos":[0,64]}]}],"pos":[220855,220920],"yaml":true},{"content":"`year` is specified as a 4-digit base 10 number; for example, 1996.  \n  \n `year` is always interpreted as a year in the Gregorian calendar. To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method.","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">`year`</ph> is specified as a 4-digit base 10 number; for example, 1996.","source":"`year` is specified as a 4-digit base 10 number; for example, 1996."},{"pos":[74,267],"content":"`year` is always interpreted as a year in the Gregorian calendar. To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method.","nodes":[{"content":"<ph id=\"ph1\">`year`</ph> is always interpreted as a year in the Gregorian calendar.","pos":[0,65],"source":"`year` is always interpreted as a year in the Gregorian calendar."},{"content":"To determine whether a particular year was a leap year in some other calendar, call that calendar object's <ph id=\"ph1\">`IsLeapYear`</ph> method.","pos":[66,193],"source":" To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method."}]}],"pos":[220931,221203],"yaml":true,"extradata":"MT"},{"content":"A 4-digit year.","nodes":[{"pos":[0,15],"content":"A 4-digit year.","nodes":[{"content":"A 4-digit year.","pos":[0,15]}]}],"pos":[221921,221937],"yaml":true},{"content":"`true` if <code>year</code> is a leap year; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a leap year; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>year</code> is a leap year; otherwise, `false`."}],"pos":[221995,222061],"yaml":true},{"content":"<code>year</code> is less than 1 or greater than 9999.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.","source":"<code>year</code> is less than 1 or greater than 9999."}],"pos":[222229,222284],"yaml":true},{"content":"Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.","nodes":[{"pos":[0,143],"content":"Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.","nodes":[{"content":"Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.","pos":[0,143]}]}],"pos":[223640,223784],"yaml":true},{"content":"You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method.  \n  \n The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time. In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time.","nodes":[{"pos":[0,214],"content":"You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method.","nodes":[{"content":"You can explicitly set the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of a new <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value to a particular <ph id=\"ph3\">&lt;xref:System.DateTimeKind&gt;</ph> value by calling the <ph id=\"ph4\">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> method.","pos":[0,214],"source":"You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method."}]},{"pos":[221,515],"content":"The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time. In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time.","nodes":[{"content":"The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time. In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time.","pos":[0,294],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property allows a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value to clearly reflect either Coordinated Universal Time (UTC) or the local time.","pos":[0,159],"source":"The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset&gt;</ph> structure can unambiguously reflect any time in any time zone as a single point in time.","pos":[160,294],"source":" In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time."}]}]}],"pos":[223795,224315],"yaml":true,"extradata":"MT"},{"content":"One of the enumeration values that indicates what the current time represents. The default is <xref href=\"System.DateTimeKind.Unspecified\"></xref>.","nodes":[{"pos":[0,147],"content":"One of the enumeration values that indicates what the current time represents. The default is <xref href=\"System.DateTimeKind.Unspecified\"></xref>.","nodes":[{"content":"One of the enumeration values that indicates what the current time represents.","pos":[0,78]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.DateTimeKind.Unspecified\"&gt;&lt;/xref&gt;</ph>.","pos":[79,147],"source":" The default is <xref href=\"System.DateTimeKind.Unspecified\"></xref>."}]}],"pos":[224945,225093],"yaml":true},{"content":"Represents the largest possible value of <xref href=\"System.DateTime\"></xref>. This field is read-only.","nodes":[{"pos":[0,103],"content":"Represents the largest possible value of <xref href=\"System.DateTime\"></xref>. This field is read-only.","nodes":[{"content":"Represents the largest possible value of <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","pos":[0,78],"source":"Represents the largest possible value of <xref href=\"System.DateTime\"></xref>."},{"content":"This field is read-only.","pos":[79,103]}]}],"pos":[226521,226625],"yaml":true},{"content":"The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.  \n  \n Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>. In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>. Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the `System.Globalization.CultureInfo.DateTimeFormat.Calendar.MaxSupportedDateTime` property.","nodes":[{"pos":[0,181],"content":"The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.","nodes":[{"content":"The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.","pos":[0,181]}]},{"pos":[188,796],"content":"Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>. In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>. Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the `System.Globalization.CultureInfo.DateTimeFormat.Calendar.MaxSupportedDateTime` property.","nodes":[{"content":"Some calendars, such as the <ph id=\"ph1\">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph>, support an upper date range that is earlier than <ph id=\"ph2\">&lt;xref:System.DateTime.MaxValue&gt;</ph>.","pos":[0,155],"source":"Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>."},{"content":"In these cases, trying to access <ph id=\"ph1\">&lt;xref:System.DateTime.MaxValue&gt;</ph> in variable assignments or formatting and parsing operations can throw an <ph id=\"ph2\">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.","pos":[156,337],"source":" In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>."},{"content":"Rather than retrieving the value of <ph id=\"ph1\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, you can retrieve the value of the specified culture's latest valid date value from the <ph id=\"ph2\">`System.Globalization.CultureInfo.DateTimeFormat.Calendar.MaxSupportedDateTime`</ph> property.","pos":[338,608],"source":" Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the `System.Globalization.CultureInfo.DateTimeFormat.Calendar.MaxSupportedDateTime` property."}]}],"pos":[226636,227437],"yaml":true,"extradata":"MT"},{"content":"Gets the milliseconds component of the date represented by this instance.","nodes":[{"pos":[0,73],"content":"Gets the milliseconds component of the date represented by this instance.","nodes":[{"content":"Gets the milliseconds component of the date represented by this instance.","pos":[0,73]}]}],"pos":[229675,229749],"yaml":true},{"content":"You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the \"fff\" format specifier. For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.  \n  \n [!code-csharp[System.DateTime.Millisecond#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)]\n [!code-vb[System.DateTime.Millisecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)]  \n  \n You can also display the millisecond component together with the other components of a date and time value by using the \"o\" standard format specifier. For example:  \n  \n [!code-csharp[System.DateTime.Millisecond#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)]\n [!code-vb[System.DateTime.Millisecond#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)]  \n  \n However, the \"o\" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value. You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.  \n  \n [!code-csharp[System.DateTime.Millisecond#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)]\n [!code-vb[System.DateTime.Millisecond#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)]","nodes":[{"pos":[0,258],"content":"You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the \"fff\" format specifier. For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.","nodes":[{"content":"You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the \"fff\" format specifier. For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.","pos":[0,258],"nodes":[{"content":"You can display the string representation of the <ph id=\"ph1\">&lt;xref:System.DateTime.Millisecond%2A&gt;</ph> property by using the \"fff\" format specifier.","pos":[0,132],"source":"You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the \"fff\" format specifier."},{"content":"For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.","pos":[133,258]}]}]},{"pos":[265,554],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Millisecond#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Millisecond#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Millisecond#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)]\n [!code-vb[System.DateTime.Millisecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)]"},{"pos":[561,724],"content":"You can also display the millisecond component together with the other components of a date and time value by using the \"o\" standard format specifier. For example:","nodes":[{"content":"You can also display the millisecond component together with the other components of a date and time value by using the \"o\" standard format specifier. For example:","pos":[0,163],"nodes":[{"content":"You can also display the millisecond component together with the other components of a date and time value by using the \"o\" standard format specifier.","pos":[0,150]},{"content":"For example:","pos":[151,163]}]}]},{"pos":[731,1020],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Millisecond#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Millisecond#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Millisecond#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)]\n [!code-vb[System.DateTime.Millisecond#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)]"},{"pos":[1027,1303],"content":"However, the \"o\" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value. You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.","nodes":[{"content":"However, the \"o\" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value. You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.","pos":[0,276],"nodes":[{"content":"However, the \"o\" format specifier is intended less for displaying than for round-tripping or storing a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[0,132],"source":"However, the \"o\" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value."},{"content":"You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.","pos":[133,276]}]}]},{"pos":[1310,1599],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Millisecond#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Millisecond#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Millisecond#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)]\n [!code-vb[System.DateTime.Millisecond#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)]"}],"pos":[229760,231381],"yaml":true,"extradata":"MT"},{"content":"The milliseconds component, expressed as a value between 0 and 999.","nodes":[{"pos":[0,67],"content":"The milliseconds component, expressed as a value between 0 and 999.","nodes":[{"content":"The milliseconds component, expressed as a value between 0 and 999.","pos":[0,67]}]}],"pos":[232016,232084],"yaml":true},{"content":"Gets the minute component of the date represented by this instance.","nodes":[{"pos":[0,67],"content":"Gets the minute component of the date represented by this instance.","nodes":[{"content":"Gets the minute component of the date represented by this instance.","pos":[0,67]}]}],"pos":[233510,233578],"yaml":true},{"content":"The minute component, expressed as a value between 0 and 59.","nodes":[{"pos":[0,60],"content":"The minute component, expressed as a value between 0 and 59.","nodes":[{"content":"The minute component, expressed as a value between 0 and 59.","pos":[0,60]}]}],"pos":[234217,234278],"yaml":true},{"content":"Represents the smallest possible value of <xref href=\"System.DateTime\"></xref>. This field is read-only.","nodes":[{"pos":[0,104],"content":"Represents the smallest possible value of <xref href=\"System.DateTime\"></xref>. This field is read-only.","nodes":[{"content":"Represents the smallest possible value of <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","pos":[0,79],"source":"Represents the smallest possible value of <xref href=\"System.DateTime\"></xref>."},{"content":"This field is read-only.","pos":[80,104]}]}],"pos":[235708,235813],"yaml":true},{"content":"The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.  \n  \n <xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable. The following example illustrates this.  \n  \n [!code-csharp[System.DateTime.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)]\n [!code-vb[System.DateTime.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)]  \n  \n The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor. The code in the Example section illustrates this usage.","nodes":[{"pos":[0,109],"content":"The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.","nodes":[{"content":"The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.","pos":[0,109]}]},{"pos":[116,283],"content":"<xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable. The following example illustrates this.","nodes":[{"content":"<xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable. The following example illustrates this.","pos":[0,167],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime.MinValue&gt;</ph> defines the date and time that is assigned to an uninitialized <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> variable.","pos":[0,127],"source":"<xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable."},{"content":"The following example illustrates this.","pos":[128,167]}]}]},{"pos":[290,561],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.MinValue#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.MinValue#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)]\n [!code-vb[System.DateTime.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)]"},{"pos":[568,832],"content":"The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor. The code in the Example section illustrates this usage.","nodes":[{"content":"The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor. The code in the Example section illustrates this usage.","pos":[0,264],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.MinValue&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.DateTime.MaxValue&gt;</ph> properties can be used to ensure that a value lies within the supported range before passing it to a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> constructor.","pos":[0,208],"source":"The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor."},{"content":"The code in the Example section illustrates this usage.","pos":[209,264]}]}]}],"pos":[235824,236666],"yaml":true,"extradata":"MT"},{"content":"Gets the month component of the date represented by this instance.","nodes":[{"pos":[0,66],"content":"Gets the month component of the date represented by this instance.","nodes":[{"content":"Gets the month component of the date represented by this instance.","pos":[0,66]}]}],"pos":[238868,238935],"yaml":true},{"content":"The month component, expressed as a value between 1 and 12.","nodes":[{"pos":[0,59],"content":"The month component, expressed as a value between 1 and 12.","nodes":[{"content":"The month component, expressed as a value between 1 and 12.","pos":[0,59]}]}],"pos":[239572,239632],"yaml":true},{"content":"Gets a <xref href=\"System.DateTime\"></xref> object that is set to the current date and time on this computer, expressed as the local time.","nodes":[{"pos":[0,138],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object that is set to the current date and time on this computer, expressed as the local time.","source":"Gets a <xref href=\"System.DateTime\"></xref> object that is set to the current date and time on this computer, expressed as the local time."}],"pos":[241034,241173],"yaml":true},{"content":"The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer. Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format. For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A>method. The following example displays the short date and time string in a number of culture-specific formats.  \n  \n [!code-cpp[System.DateTime.Now#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)]\n [!code-csharp[System.DateTime.Now#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)]\n [!code-vb[System.DateTime.Now#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)]  \n  \n The resolution of this property depends on the system timer, which is approximately 15 milliseconds on Windows systems.As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value.  \n  \n The <xref:System.DateTime.Now%2A> property is frequently used to measure performance. However, because of its low resolution, it is not suitable for use as a benchmarking tool. A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.  \n  \n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n> [!NOTE]\n>  You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=fullName> property to retrieve the current local date and time. It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.","nodes":[{"pos":[0,658],"content":"The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer. Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format. For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A>method. The following example displays the short date and time string in a number of culture-specific formats.","nodes":[{"content":"The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer. Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format. For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A>method. The following example displays the short date and time string in a number of culture-specific formats.","pos":[0,658],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Now%2A&gt;</ph> property returns a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value that represents the current date and time on the local computer.","pos":[0,146],"source":"The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer."},{"content":"Note that there is a difference between a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value, which expresses a date and time value in a culture-specific-specific format.","pos":[147,453],"source":" Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format."},{"content":"For information on formatting date and time values, see the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%2A&gt;</ph>method.","pos":[454,555],"source":" For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A>method."},{"content":"The following example displays the short date and time string in a number of culture-specific formats.","pos":[556,658]}]}]},{"pos":[665,1026],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Now#2<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Now#2<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.DateTime.Now#2<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[System.DateTime.Now#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)]\n [!code-csharp[System.DateTime.Now#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)]\n [!code-vb[System.DateTime.Now#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)]"},{"pos":[1033,1297],"content":"The resolution of this property depends on the system timer, which is approximately 15 milliseconds on Windows systems.As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value.","nodes":[{"content":"The resolution of this property depends on the system timer, which is approximately 15 milliseconds on Windows systems.As a result, repeated calls to the <ph id=\"ph1\">&lt;xref:System.DateTime.Now%2A&gt;</ph> property in a short time interval, such as in a loop, may return the same value.","pos":[0,264],"source":"The resolution of this property depends on the system timer, which is approximately 15 milliseconds on Windows systems.As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value."}]},{"pos":[1304,1558],"content":"The <xref:System.DateTime.Now%2A> property is frequently used to measure performance. However, because of its low resolution, it is not suitable for use as a benchmarking tool. A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.","nodes":[{"content":"The <xref:System.DateTime.Now%2A> property is frequently used to measure performance. However, because of its low resolution, it is not suitable for use as a benchmarking tool. A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.","pos":[0,254],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Now%2A&gt;</ph> property is frequently used to measure performance.","pos":[0,85],"source":"The <xref:System.DateTime.Now%2A> property is frequently used to measure performance."},{"content":"However, because of its low resolution, it is not suitable for use as a benchmarking tool.","pos":[86,176]},{"content":"A better alternative is to use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class.","pos":[177,254],"source":" A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class."}]}]},{"pos":[1565,1762],"content":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Starting with the .NET Framework version 2.0, the return value is a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property returns <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,197],"source":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[1770,2059],"content":"[!NOTE]\n You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=fullName> property to retrieve the current local date and time. It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.","leadings":["","> "],"nodes":[{"content":" You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=fullName> property to retrieve the current local date and time. It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.","pos":[8,287],"nodes":[{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Now%2A?displayProperty=fullName&gt;</ph> property to retrieve the current local date and time.","pos":[1,136],"source":" You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=fullName> property to retrieve the current local date and time."},{"content":"It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.","pos":[137,279]}]}]}],"pos":[241184,243259],"yaml":true,"extradata":"MT"},{"content":"An object whose value is the current local date and time.","nodes":[{"pos":[0,57],"content":"An object whose value is the current local date and time.","nodes":[{"content":"An object whose value is the current local date and time.","pos":[0,57]}]}],"pos":[244144,244202],"yaml":true},{"content":"Adds a specified time interval to a specified date and time, yielding a new date and time.","nodes":[{"pos":[0,90],"content":"Adds a specified time interval to a specified date and time, yielding a new date and time.","nodes":[{"content":"Adds a specified time interval to a specified date and time, yielding a new date and time.","pos":[0,90]}]}],"pos":[245809,245900],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=fullName>","nodes":[{"pos":[0,115],"content":"The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=fullName&gt;</ph>","pos":[0,115],"source":"The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=fullName>"}]}],"pos":[245911,246027],"yaml":true,"extradata":"MT"},{"content":"The date and time value to add.","nodes":[{"pos":[0,31],"content":"The date and time value to add.","nodes":[{"content":"The date and time value to add.","pos":[0,31]}]}],"pos":[246612,246644],"yaml":true},{"content":"The time interval to add.","nodes":[{"pos":[0,25],"content":"The time interval to add.","nodes":[{"content":"The time interval to add.","pos":[0,25]}]}],"pos":[246703,246729],"yaml":true},{"content":"An object that is the sum of the values of <code>d</code> and <code>t</code>.","nodes":[{"pos":[0,77],"content":"An object that is the sum of the values of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">t</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An object that is the sum of the values of <code>d</code> and <code>t</code>."}],"pos":[246788,246866],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[247035,247208],"yaml":true},{"content":"Determines whether two specified instances of <xref href=\"System.DateTime\"></xref> are equal.","nodes":[{"pos":[0,93],"content":"Determines whether two specified instances of <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> are equal.","source":"Determines whether two specified instances of <xref href=\"System.DateTime\"></xref> are equal."}],"pos":[248765,248859],"yaml":true},{"content":"The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,354],"content":"The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","nodes":[{"content":"The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","pos":[0,354],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.op_Equality%2A&gt;</ph> operator determines whether two <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values are equal by comparing their number of ticks.","pos":[0,149],"source":"The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks."},{"content":"Before comparing <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.","pos":[150,264],"source":" Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone."},{"content":"You can do this by comparing the values of their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[265,354],"source":" You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property."}]}]},{"pos":[361,477],"content":"The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,116],"source":"The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>"}]}],"pos":[248870,249352],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[249936,249965],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[250025,250055],"yaml":true},{"content":"`true` if <code>d1</code> and <code>d2</code> represent the same date and time; otherwise, `false`.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept> represent the same date and time; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> and <code>d2</code> represent the same date and time; otherwise, `false`."}],"pos":[250113,250215],"yaml":true},{"content":"Determines whether one specified <xref href=\"System.DateTime\"></xref> is later than another specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,139],"content":"Determines whether one specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is later than another specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether one specified <xref href=\"System.DateTime\"></xref> is later than another specified <xref href=\"System.DateTime\"></xref>."}],"pos":[251848,251988],"yaml":true},{"content":"The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>","nodes":[{"pos":[0,364],"content":"The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","nodes":[{"content":"The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","pos":[0,364],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.op_GreaterThan%2A&gt;</ph> operator determines the relationship between two <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values by comparing their number of ticks.","pos":[0,159],"source":"The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks."},{"content":"Before comparing <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.","pos":[160,274],"source":" Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone."},{"content":"You can do this by comparing the values of their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[275,364],"source":" You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property."}]}]},{"pos":[371,508],"content":"The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName&gt;</ph>","pos":[0,137],"source":"The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>"}]}],"pos":[251999,252512],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[252673,252702],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[252762,252792],"yaml":true},{"content":"`true` if <code>t1</code> is later than <code>t2</code>; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">t1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is later than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">t2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>t1</code> is later than <code>t2</code>; otherwise, `false`."}],"pos":[252850,252929],"yaml":true},{"content":"Determines whether one specified <xref href=\"System.DateTime\"></xref> represents a date and time that is the same as or later than another specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,186],"content":"Determines whether one specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> represents a date and time that is the same as or later than another specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether one specified <xref href=\"System.DateTime\"></xref> represents a date and time that is the same as or later than another specified <xref href=\"System.DateTime\"></xref>."}],"pos":[254607,254794],"yaml":true},{"content":"The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>","nodes":[{"pos":[0,371],"content":"The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","nodes":[{"content":"The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","pos":[0,371],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.op_GreaterThanOrEqual%2A&gt;</ph> operator determines the relationship between two <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values by comparing their number of ticks.","pos":[0,166],"source":"The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks."},{"content":"Before comparing <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.","pos":[167,281],"source":" Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone."},{"content":"You can do this by comparing the values of their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[282,371],"source":" You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property."}]}]},{"pos":[378,515],"content":"The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName&gt;</ph>","pos":[0,137],"source":"The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>"}]}],"pos":[254805,255325],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[255493,255522],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[255582,255612],"yaml":true},{"content":"`true` if <code>t1</code> is the same as or later than <code>t2</code>; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">t1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is the same as or later than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">t2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>t1</code> is the same as or later than <code>t2</code>; otherwise, `false`."}],"pos":[255670,255764],"yaml":true},{"content":"Determines whether two specified instances of <xref href=\"System.DateTime\"></xref> are not equal.","nodes":[{"pos":[0,97],"content":"Determines whether two specified instances of <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> are not equal.","source":"Determines whether two specified instances of <xref href=\"System.DateTime\"></xref> are not equal."}],"pos":[257401,257499],"yaml":true},{"content":"The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,360],"content":"The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","nodes":[{"content":"The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","pos":[0,360],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.op_Inequality%2A&gt;</ph> operator determines whether two <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values are not equal by comparing their number of ticks.","pos":[0,155],"source":"The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks."},{"content":"Before comparing <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.","pos":[156,270],"source":" Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone."},{"content":"You can do this by comparing the values of their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[271,360],"source":" You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property."}]}]},{"pos":[367,483],"content":"The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,116],"source":"The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>"}]}],"pos":[257510,257998],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[258158,258187],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[258247,258277],"yaml":true},{"content":"`true` if <code>d1</code> and <code>d2</code> do not represent the same date and time; otherwise, `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept> do not represent the same date and time; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> and <code>d2</code> do not represent the same date and time; otherwise, `false`."}],"pos":[258335,258444],"yaml":true},{"content":"Determines whether one specified <xref href=\"System.DateTime\"></xref> is earlier than another specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,141],"content":"Determines whether one specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is earlier than another specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether one specified <xref href=\"System.DateTime\"></xref> is earlier than another specified <xref href=\"System.DateTime\"></xref>."}],"pos":[260061,260203],"yaml":true},{"content":"The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>","nodes":[{"pos":[0,361],"content":"The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","nodes":[{"content":"The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","pos":[0,361],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.op_LessThan%2A&gt;</ph> operator determines the relationship between two <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values by comparing their number of ticks.","pos":[0,156],"source":"The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks."},{"content":"Before comparing <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.","pos":[157,271],"source":" Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone."},{"content":"You can do this by comparing the values of their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[272,361],"source":" You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property."}]}]},{"pos":[368,505],"content":"The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName&gt;</ph>","pos":[0,137],"source":"The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>"}]}],"pos":[260214,260724],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[260882,260911],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[260971,261001],"yaml":true},{"content":"`true` if <code>t1</code> is earlier than <code>t2</code>; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">t1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is earlier than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">t2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>t1</code> is earlier than <code>t2</code>; otherwise, `false`."}],"pos":[261059,261140],"yaml":true},{"content":"Determines whether one specified <xref href=\"System.DateTime\"></xref> represents a date and time that is the same as or earlier than another specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,188],"content":"Determines whether one specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> represents a date and time that is the same as or earlier than another specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether one specified <xref href=\"System.DateTime\"></xref> represents a date and time that is the same as or earlier than another specified <xref href=\"System.DateTime\"></xref>."}],"pos":[262797,262986],"yaml":true},{"content":"The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>","nodes":[{"pos":[0,368],"content":"The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","nodes":[{"content":"The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.","pos":[0,368],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.op_LessThanOrEqual%2A&gt;</ph> operator determines the relationship between two <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> values by comparing their number of ticks.","pos":[0,163],"source":"The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks."},{"content":"Before comparing <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.","pos":[164,278],"source":" Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone."},{"content":"You can do this by comparing the values of their <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[279,368],"source":" You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property."}]}]},{"pos":[375,512],"content":"The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName&gt;</ph>","pos":[0,137],"source":"The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>"}]}],"pos":[262997,263514],"yaml":true,"extradata":"MT"},{"content":"The first object to compare.","nodes":[{"pos":[0,28],"content":"The first object to compare.","nodes":[{"content":"The first object to compare.","pos":[0,28]}]}],"pos":[263679,263708],"yaml":true},{"content":"The second object to compare.","nodes":[{"pos":[0,29],"content":"The second object to compare.","nodes":[{"content":"The second object to compare.","pos":[0,29]}]}],"pos":[263768,263798],"yaml":true},{"content":"`true` if <code>t1</code> is the same as or earlier than <code>t2</code>; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">t1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is the same as or earlier than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">t2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>t1</code> is the same as or earlier than <code>t2</code>; otherwise, `false`."}],"pos":[263856,263952],"yaml":true},{"content":"Subtracts a specified date and time from another specified date and time and returns a time interval.","nodes":[{"pos":[0,101],"content":"Subtracts a specified date and time from another specified date and time and returns a time interval.","nodes":[{"content":"Subtracts a specified date and time from another specified date and time and returns a time interval.","pos":[0,101]}]}],"pos":[265592,265694],"yaml":true},{"content":"The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.  \n  \n> [!NOTE]\n>  The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>","nodes":[{"pos":[0,420],"content":"The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.","nodes":[{"content":"The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.","pos":[0,420],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29&gt;</ph> method does not consider the value of the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the two <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> values when performing the subtraction.","pos":[0,236],"source":"The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction."},{"content":"Before subtracting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, ensure that the objects represent times in the same time zone.","pos":[237,350],"source":" Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone."},{"content":"Otherwise, the result will include the difference between time zones.","pos":[351,420]}]}]},{"pos":[428,650],"content":"[!NOTE]\n The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph> method does consider the difference between time zones when performing the subtraction.","pos":[9,220],"source":" The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction."}]},{"pos":[657,777],"content":"The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName&gt;</ph>","pos":[0,120],"source":"The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>"}]}],"pos":[265705,266490],"yaml":true,"extradata":"MT"},{"content":"The date and time value to subtract from (the minuend).","nodes":[{"pos":[0,55],"content":"The date and time value to subtract from (the minuend).","nodes":[{"content":"The date and time value to subtract from (the minuend).","pos":[0,55]}]}],"pos":[267146,267202],"yaml":true},{"content":"The date and time value to subtract (the subtrahend).","nodes":[{"pos":[0,53],"content":"The date and time value to subtract (the subtrahend).","nodes":[{"content":"The date and time value to subtract (the subtrahend).","pos":[0,53]}]}],"pos":[267262,267316],"yaml":true},{"content":"The time interval between <code>d1</code> and <code>d2</code>; that is, <code>d1</code> minus <code>d2</code>.","nodes":[{"pos":[0,110],"content":"The time interval between <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; that is, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">d1</ph><ept id=\"p3\">&lt;/code&gt;</ept> minus <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">d2</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","source":"The time interval between <code>d1</code> and <code>d2</code>; that is, <code>d1</code> minus <code>d2</code>."}],"pos":[267375,267486],"yaml":true},{"content":"Subtracts a specified time interval from a specified date and time and returns a new date and time.","nodes":[{"pos":[0,99],"content":"Subtracts a specified time interval from a specified date and time and returns a new date and time.","nodes":[{"content":"Subtracts a specified time interval from a specified date and time and returns a new date and time.","pos":[0,99]}]}],"pos":[269122,269222],"yaml":true},{"content":"This method subtracts the ticks value of `t` from the ticks value of `d`.  \n  \n The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>","nodes":[{"pos":[0,73],"content":"This method subtracts the ticks value of <ph id=\"ph1\">`t`</ph> from the ticks value of <ph id=\"ph2\">`d`</ph>.","source":"This method subtracts the ticks value of `t` from the ticks value of `d`."},{"pos":[80,200],"content":"The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName&gt;</ph>","pos":[0,120],"source":"The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>"}]}],"pos":[269233,269438],"yaml":true,"extradata":"MT"},{"content":"The date and time value to subtract from.","nodes":[{"pos":[0,41],"content":"The date and time value to subtract from.","nodes":[{"content":"The date and time value to subtract from.","pos":[0,41]}]}],"pos":[270091,270133],"yaml":true},{"content":"The time interval to subtract.","nodes":[{"pos":[0,30],"content":"The time interval to subtract.","nodes":[{"content":"The time interval to subtract.","pos":[0,30]}]}],"pos":[270192,270223],"yaml":true},{"content":"An object whose value is the value of <code>d</code> minus the value of <code>t</code>.","nodes":[{"pos":[0,87],"content":"An object whose value is the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> minus the value of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">t</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An object whose value is the value of <code>d</code> minus the value of <code>t</code>."}],"pos":[270282,270370],"yaml":true},{"content":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,172],"content":"The resulting <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[270542,270715],"yaml":true},{"content":"Converts the string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent.","nodes":[{"pos":[0,109],"content":"Converts the string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent.","source":"Converts the string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent."}],"pos":[272144,272254],"yaml":true},{"content":"> [!NOTE]\n>  For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.","nodes":[{"pos":[2,173],"content":"[!NOTE]\n For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.","leadings":["","> "],"nodes":[{"content":"For examples and comprehensive usage information about this and other overloads of the <ph id=\"ph1\">`Parse`</ph> method, see the <ph id=\"ph2\">&lt;xref:System.DateTime.Parse%2A&gt;</ph> overload summary.","pos":[9,169],"source":" For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary."}]}],"pos":[272265,272451],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[272588,272639],"yaml":true},{"content":"An object that is equivalent to the date and time contained in <code>s</code>.","nodes":[{"pos":[0,78],"content":"An object that is equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time contained in <code>s</code>."}],"pos":[272698,272777],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[272928,272954],"yaml":true},{"content":"<code>s</code> does not contain a valid string representation of a date and time.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.","source":"<code>s</code> does not contain a valid string representation of a date and time."}],"pos":[273044,273126],"yaml":true},{"content":"Converts the string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent by using culture-specific format information.","nodes":[{"pos":[0,154],"content":"Converts the string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent by using culture-specific format information.","source":"Converts the string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent by using culture-specific format information."}],"pos":[274675,274830],"yaml":true},{"content":"> [!NOTE]\n>  For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.","nodes":[{"pos":[2,173],"content":"[!NOTE]\n For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.","leadings":["","> "],"nodes":[{"content":"For examples and comprehensive usage information about this and other overloads of the <ph id=\"ph1\">`Parse`</ph> method, see the <ph id=\"ph2\">&lt;xref:System.DateTime.Parse%2A&gt;</ph> overload summary.","pos":[9,169],"source":" For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary."}]}],"pos":[274841,275027],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[275190,275241],"yaml":true},{"content":"An object that supplies culture-specific format information about <code>s</code>.","nodes":[{"pos":[0,81],"content":"An object that supplies culture-specific format information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific format information about <code>s</code>."}],"pos":[275314,275396],"yaml":true},{"content":"An object that is equivalent to the date and time contained in <code>s</code> as specified by <code>provider</code>.","nodes":[{"pos":[0,116],"content":"An object that is equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time contained in <code>s</code> as specified by <code>provider</code>."}],"pos":[275455,275572],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[275723,275749],"yaml":true},{"content":"<code>s</code> does not contain a valid string representation of a date and time.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.","source":"<code>s</code> does not contain a valid string representation of a date and time."}],"pos":[275839,275921],"yaml":true},{"content":"Converts the string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent by using culture-specific format information and formatting style.","nodes":[{"pos":[0,175],"content":"Converts the string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent by using culture-specific format information and formatting style.","source":"Converts the string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent by using culture-specific format information and formatting style."}],"pos":[277626,277802],"yaml":true},{"content":"> [!NOTE]\n>  For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.","nodes":[{"pos":[2,173],"content":"[!NOTE]\n For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.","leadings":["","> "],"nodes":[{"content":"For examples and comprehensive usage information about this and other overloads of the <ph id=\"ph1\">`Parse`</ph> method, see the <ph id=\"ph2\">&lt;xref:System.DateTime.Parse%2A&gt;</ph> overload summary.","pos":[9,169],"source":" For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary."}]}],"pos":[277813,277999],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[278206,278257],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>s</code>.","nodes":[{"pos":[0,85],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>s</code>."}],"pos":[278330,278416],"yaml":true},{"content":"A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"pos":[0,356],"content":"A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"content":"A bitwise combination of the enumeration values that indicates the style elements that can be present in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.","pos":[0,263],"source":"A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.None\"&gt;&lt;/xref&gt;</ph>.","pos":[264,356],"source":" A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>."}]}],"pos":[278500,278857],"yaml":true},{"content":"An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>provider</code> and <code>styles</code>.","nodes":[{"pos":[0,141],"content":"An object that is equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">styles</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>provider</code> and <code>styles</code>."}],"pos":[278916,279058],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[279209,279235],"yaml":true},{"content":"<code>s</code> does not contain a valid string representation of a date and time.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.","source":"<code>s</code> does not contain a valid string representation of a date and time."}],"pos":[279325,279407],"yaml":true},{"content":"<code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>.","nodes":[{"pos":[0,284],"content":"<code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> contains an invalid combination of <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,119],"source":"<code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values."},{"content":"For example, both <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"&gt;&lt;/xref&gt;</ph>.","pos":[120,284],"source":" For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>."}]}],"pos":[279501,279786],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.","nodes":[{"pos":[0,328],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent using the specified array of formats, culture-specific format information, and style.","pos":[0,204],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified array of formats, culture-specific format information, and style."},{"content":"The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.","pos":[205,328]}]}],"pos":[281599,281928],"yaml":true},{"content":"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>. Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \n  \n The `s` parameter contains the date and time to parse. If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed. The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \n  \n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|  \n  \n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.","nodes":[{"pos":[0,770],"content":"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>. Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date that matches any one of the patterns assigned to the <ph id=\"ph2\">`formats`</ph> parameter.","pos":[0,290],"source":"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter."},{"content":"If the string <ph id=\"ph1\">`s`</ph> does not match any one of these patterns with any of the variations defined by the <ph id=\"ph2\">`styles`</ph> parameter, the method throws a <ph id=\"ph3\">&lt;xref:System.FormatException&gt;</ph>.","pos":[291,462],"source":" If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>."},{"content":"Aside from comparing <ph id=\"ph1\">`s`</ph> to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <ph id=\"ph2\">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method.","pos":[463,770],"source":" Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method."}]},{"pos":[777,1375],"content":"The `s` parameter contains the date and time to parse. If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter contains the date and time to parse.","pos":[0,54],"source":"The `s` parameter contains the date and time to parse."},{"content":"If the <ph id=\"ph1\">`s`</ph> parameter contains only a time and no date, the current date is used unless the <ph id=\"ph2\">`style`</ph> parameter includes the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, in which case the default date (<ph id=\"ph4\">`DateTime.Date.MinValue`</ph>) is used.","pos":[55,317],"source":" If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used."},{"content":"If the <ph id=\"ph1\">`s`</ph> parameter contains only a date and no time, midnight (00:00:00) is used.","pos":[318,401],"source":" If the `s` parameter contains only a date and no time, midnight (00:00:00) is used."},{"content":"The <ph id=\"ph1\">`style`</ph> parameter also determines whether the <ph id=\"ph2\">`s`</ph> parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in <ph id=\"ph3\">`formats`</ph>.","pos":[402,598],"source":" The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`."}]},{"pos":[1382,2676],"content":"If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,187],"source":"If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This behavior can be changed by using the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, which returns a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, or by using the <ph id=\"ph5\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> and <ph id=\"ph6\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flags, which returns a <ph id=\"ph7\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph8\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph9\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[188,760],"source":" This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If <ph id=\"ph1\">`s`</ph> contains time zone information, the time is converted to local time, if necessary, and the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[761,1007],"source":" If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This behavior can be changed by using the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[1008,1294],"source":" This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[2683,3224],"content":"The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed. The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.","nodes":[{"content":"The <ph id=\"ph1\">`formats`</ph> parameter contains an array of patterns, one of which <ph id=\"ph2\">`s`</ph> must match exactly if the parse operation is to succeed.","pos":[0,128],"source":"The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed."},{"content":"The patterns in the <ph id=\"ph1\">`formats`</ph> parameter consists of one or more custom format specifiers from the <bpt id=\"p1\">[</bpt>Custom Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> table, or a single standard format specifier, which identifies a predefined pattern, from the <bpt id=\"p2\">[</bpt>Standard Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> table.","pos":[129,541],"source":" The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table."}]},{"pos":[3231,3531],"content":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","nodes":[{"content":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the <ph id=\"ph1\">`provider`</ph> parameter and the widest form of each custom format specifier.","pos":[0,177],"source":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier."},{"content":"For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","pos":[178,300]}]},{"pos":[3538,4077],"content":"The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.","nodes":[{"content":"The <ph id=\"ph1\">`styles`</ph> parameter includes one or more members of the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration that determine whether and where white space not defined by <ph id=\"ph3\">`format`</ph> can appear in <ph id=\"ph4\">`s`</ph> and that control the precise behavior of the parse operation.","pos":[0,262],"source":"The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation."},{"content":"The following table describes how each member of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration affects the operation of the <ph id=\"ph2\">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29&gt;</ph> method.","pos":[263,539],"source":" The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method."}]},{"pos":[4084,4105],"content":"DateTimeStyles member","nodes":[{"content":"DateTimeStyles member","pos":[0,21]}]},{"pos":[4106,4117],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[4172,4232],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[4233,5162],"content":"Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.","nodes":[{"content":"Parses <ph id=\"ph1\">`s`</ph> and, if necessary, converts it to UTC.","pos":[0,49],"source":"Parses `s` and, if necessary, converts it to UTC."},{"content":"If <ph id=\"ph1\">`s`</ph> includes a time zone offset, or if <ph id=\"ph2\">`s`</ph> contains no time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id=\"ph5\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id=\"ph6\">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id=\"ph7\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph8\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[50,477],"source":" If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If <ph id=\"ph1\">`s`</ph> indicates that it represents UTC, or if <ph id=\"ph2\">`s`</ph> does not contain time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id=\"ph5\">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id=\"ph6\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph7\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[478,885],"source":" If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"In all other cases, the flag has no effect.","pos":[886,929]}]},{"pos":[5167,5225],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[5226,5332],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear between any individual date or time element.","source":"Specifies that white space not defined by `format` can appear between any individual date or time element."},{"pos":[5337,5397],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[5398,5484],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear at the beginning of <ph id=\"ph2\">`s`</ph>.","source":"Specifies that white space not defined by `format` can appear at the beginning of `s`."},{"pos":[5489,5550],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[5551,5631],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear at the end of <ph id=\"ph2\">`s`</ph>.","source":"Specifies that white space not defined by `format` can appear at the end of `s`."},{"pos":[5636,5695],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[5696,5793],"content":"Specifies that <ph id=\"ph1\">`s`</ph> may contain leading, inner, and trailing white spaces not defined by <ph id=\"ph2\">`format`</ph>.","source":"Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`."},{"pos":[5798,5852],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[5853,6196],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent a local time.","pos":[0,95],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[96,343],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[6201,6259],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[6260,6636],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent UTC.","pos":[0,86],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[87,376],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[6641,6704],"content":"<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>","nodes":[]},{"pos":[6705,6816],"content":"If <ph id=\"ph1\">`s`</ph> contains time without date information, the date of the return value is set to <ph id=\"ph2\">`DateTime.MinValue.Date`</ph>.","source":"If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`."},{"pos":[6821,6868],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[6869,7518],"content":"The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is parsed using default values.","pos":[0,49],"source":"The `s` parameter is parsed using default values."},{"content":"No white space other than that present in <ph id=\"ph1\">`format`</ph> is allowed.","pos":[50,112],"source":" No white space other than that present in `format` is allowed."},{"content":"If <ph id=\"ph1\">`s`</ph> lacks a date component, the date of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value is set to 1/1/0001.","pos":[113,217],"source":" If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001."},{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[218,412],"source":" If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If time zone information is present in <ph id=\"ph1\">`s`</ph>, the time is converted to local time and the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[413,649],"source":" If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[7523,7579],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[7580,7860],"content":"For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.","nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.","pos":[0,280],"nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion to a date and time with its <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id=\"ph2\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,207],"source":"For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This flag primarily prevents the conversion of UTC times to local times.","pos":[208,280]}]}]},{"pos":[7868,8175],"content":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:","nodes":[{"content":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <ph id=\"ph1\">`s`</ph> are defined by the <ph id=\"ph2\">`provider`</ph> parameter, as is the precise format of <ph id=\"ph3\">`s`</ph> if <ph id=\"ph4\">`format`</ph> is a standard format specifier string.","pos":[0,253],"source":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter can be any of the following:","pos":[254,307],"source":" The `provider` parameter can be any of the following:"}]},{"pos":[8185,8468],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id=\"ph2\">`s`</ph>.","pos":[0,99],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id=\"ph3\">`s`</ph>.","pos":[100,283],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`."}]},{"pos":[8478,8580],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[8590,8864],"content":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.","nodes":[{"content":"A custom <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id=\"ph2\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.","pos":[0,274],"source":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information."}]},{"pos":[8871,8995],"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."}],"pos":[281939,290974],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[291801,291852],"yaml":true},{"content":"An array of allowable formats of <code>s</code>. For more information, see the Remarks section.","nodes":[{"pos":[0,95],"content":"An array of allowable formats of <code>s</code>. For more information, see the Remarks section.","nodes":[{"content":"An array of allowable formats of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,48],"source":"An array of allowable formats of <code>s</code>."},{"content":"For more information, see the Remarks section.","pos":[49,95]}]}],"pos":[291917,292013],"yaml":true},{"content":"An object that supplies culture-specific format information about <code>s</code>.","nodes":[{"pos":[0,81],"content":"An object that supplies culture-specific format information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific format information about <code>s</code>."}],"pos":[292086,292168],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"pos":[0,191],"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"content":"A bitwise combination of enumeration values that indicates the permitted format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,98],"source":"A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.None\"&gt;&lt;/xref&gt;</ph>.","pos":[99,191],"source":" A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>."}]}],"pos":[292251,292443],"yaml":true},{"content":"An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>formats</code>, <code>provider</code>, and <code>style</code>.","nodes":[{"pos":[0,163],"content":"An object that is equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">formats</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">provider</ph><ept id=\"p3\">&lt;/code&gt;</ept>, and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">style</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>formats</code>, <code>provider</code>, and <code>style</code>."}],"pos":[292502,292666],"yaml":true},{"content":"<code>s</code> or <code>formats</code> is `null`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;formats&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>s</code> or <code>formats</code> is `null`."}],"pos":[292822,292872],"yaml":true},{"content":"<code>s</code> is an empty string.  \n  \n -or-  \n  \n an element of <code>formats</code> is an empty string.  \n  \n -or-  \n  \n <code>s</code> does not contain a date and time that corresponds to any element of <code>formats</code>.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>s</code> do not agree.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is an empty string.","source":"<code>s</code> is an empty string."},{"pos":[41,45],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[52,106],"content":"an element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">formats</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an empty string.","source":"an element of <code>formats</code> is an empty string."},{"pos":[113,117],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[124,228],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a date and time that corresponds to any element of <ph id=\"ph2\">&lt;code&gt;formats&lt;/code&gt;</ph>.","source":"<code>s</code> does not contain a date and time that corresponds to any element of <code>formats</code>."},{"pos":[235,239],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[246,321],"content":"The hour component and the AM/PM designator in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> do not agree.","source":"The hour component and the AM/PM designator in <code>s</code> do not agree."}],"pos":[292962,293298],"yaml":true},{"content":"<code>style</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>.","nodes":[{"pos":[0,283],"content":"<code>style</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> contains an invalid combination of <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,118],"source":"<code>style</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values."},{"content":"For example, both <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"&gt;&lt;/xref&gt;</ph>.","pos":[119,283],"source":" For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>."}]}],"pos":[293392,293676],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly or an exception is thrown.","nodes":[{"pos":[0,301],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly or an exception is thrown.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent using the specified format, culture-specific format information, and style.","pos":[0,194],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format, culture-specific format information, and style."},{"content":"The format of the string representation must match the specified format exactly or an exception is thrown.","pos":[195,301]}]}],"pos":[295477,295779],"yaml":true},{"content":"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date, which must be in a format defined by the `format` parameter. It also requires that the date and time elements in `s` appear in the order specified by `format`. If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>. In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. The<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method also allows the date and time elements in `s` to appear in any order.  \n  \n If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters.  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `format` parameter defines the required pattern of the `s` parameter. It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \n  \n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n> [!NOTE]\n>  Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.  \n  \n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|  \n  \n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.","nodes":[{"pos":[0,1073],"content":"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date, which must be in a format defined by the `format` parameter. It also requires that the date and time elements in `s` appear in the order specified by `format`. If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>. In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. The<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method also allows the date and time elements in `s` to appear in any order.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date, which must be in a format defined by the <ph id=\"ph2\">`format`</ph> parameter.","pos":[0,272],"source":"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date, which must be in a format defined by the `format` parameter."},{"content":"It also requires that the date and time elements in <ph id=\"ph1\">`s`</ph> appear in the order specified by <ph id=\"ph2\">`format`</ph>.","pos":[273,371],"source":" It also requires that the date and time elements in `s` appear in the order specified by `format`."},{"content":"If <ph id=\"ph1\">`s`</ph> does not match the pattern of the <ph id=\"ph2\">`format`</ph> parameter, with any variations defined by the <ph id=\"ph3\">`style`</ph> parameter, the method throws a <ph id=\"ph4\">&lt;xref:System.FormatException&gt;</ph>.","pos":[372,537],"source":" If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date in any one of the formats recognized by the format provider's <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.","pos":[538,857],"source":" In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object."},{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method also allows the date and time elements in <ph id=\"ph2\">`s`</ph> to appear in any order.","pos":[858,1073],"source":" The<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method also allows the date and time elements in `s` to appear in any order."}]},{"pos":[1080,1554],"content":"If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters.","nodes":[{"content":"If the <ph id=\"ph1\">`s`</ph> parameter contains only a time and no date, the current date is used unless the <ph id=\"ph2\">`style`</ph> parameter includes the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, in which case the default date (<ph id=\"ph4\">`DateTime.Date.MinValue`</ph>) is used.","pos":[0,262],"source":"If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used."},{"content":"If the <ph id=\"ph1\">`s`</ph> parameter contains only a date and no time, midnight (00:00:00) is used.","pos":[263,346],"source":" If the `s` parameter contains only a date and no time, midnight (00:00:00) is used."},{"content":"The <ph id=\"ph1\">`style`</ph> parameter also determines whether the <ph id=\"ph2\">`s`</ph> parameter can contain leading, inner, or trailing white space characters.","pos":[347,474],"source":" The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters."}]},{"pos":[1561,2858],"content":"If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,187],"source":"If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This behavior can be changed by using the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, which returns a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, or by using the <ph id=\"ph5\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> and <ph id=\"ph6\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flags, which returns a <ph id=\"ph7\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph8\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph9\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[188,760],"source":" This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If <ph id=\"ph1\">`s`</ph> contains time zone information, the time is converted to local time, if necessary, and the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[761,1007],"source":" If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This behavior can be changed by using the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[1008,1297],"source":" This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[2865,3324],"content":"The `format` parameter defines the required pattern of the `s` parameter. It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter defines the required pattern of the <ph id=\"ph2\">`s`</ph> parameter.","pos":[0,73],"source":"The `format` parameter defines the required pattern of the `s` parameter."},{"content":"It can consist of either one or more custom format specifiers from the <bpt id=\"p1\">[</bpt>Custom Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> table, or a single standard format specifier, which identifies a predefined pattern, from the <bpt id=\"p2\">[</bpt>Standard Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> table.","pos":[74,459],"source":" It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table."}]},{"pos":[3331,3631],"content":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","nodes":[{"content":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the <ph id=\"ph1\">`provider`</ph> parameter and the widest form of each custom format specifier.","pos":[0,177],"source":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier."},{"content":"For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","pos":[178,300]}]},{"pos":[3639,4025],"content":"[!NOTE]\n Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.","leadings":["","> "],"nodes":[{"content":" Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.","pos":[8,384],"nodes":[{"content":"Rather than requiring that <ph id=\"ph1\">`s`</ph> conform to a single format for the parse operation to succeed, you can call the <ph id=\"ph2\">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method and specify multiple permitted formats.","pos":[1,321],"source":" Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method and specify multiple permitted formats."},{"content":"This makes the parse operation more likely to succeed.","pos":[322,376]}]}]},{"pos":[4032,4571],"content":"The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.","nodes":[{"content":"The <ph id=\"ph1\">`styles`</ph> parameter includes one or more members of the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration that determine whether and where white space not defined by <ph id=\"ph3\">`format`</ph> can appear in <ph id=\"ph4\">`s`</ph> and that control the precise behavior of the parse operation.","pos":[0,262],"source":"The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation."},{"content":"The following table describes how each member of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration affects the operation of the <ph id=\"ph2\">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29&gt;</ph> method.","pos":[263,539],"source":" The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method."}]},{"pos":[4578,4599],"content":"DateTimeStyles member","nodes":[{"content":"DateTimeStyles member","pos":[0,21]}]},{"pos":[4600,4611],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[4666,4726],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[4727,5656],"content":"Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.","nodes":[{"content":"Parses <ph id=\"ph1\">`s`</ph> and, if necessary, converts it to UTC.","pos":[0,49],"source":"Parses `s` and, if necessary, converts it to UTC."},{"content":"If <ph id=\"ph1\">`s`</ph> includes a time zone offset, or if <ph id=\"ph2\">`s`</ph> contains no time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id=\"ph5\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id=\"ph6\">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id=\"ph7\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph8\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[50,477],"source":" If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If <ph id=\"ph1\">`s`</ph> indicates that it represents UTC, or if <ph id=\"ph2\">`s`</ph> does not contain time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id=\"ph5\">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id=\"ph6\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph7\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[478,885],"source":" If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"In all other cases, the flag has no effect.","pos":[886,929]}]},{"pos":[5661,5719],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[5720,5826],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear between any individual date or time element.","source":"Specifies that white space not defined by `format` can appear between any individual date or time element."},{"pos":[5831,5891],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[5892,5978],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear at the beginning of <ph id=\"ph2\">`s`</ph>.","source":"Specifies that white space not defined by `format` can appear at the beginning of `s`."},{"pos":[5983,6044],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[6045,6125],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear at the end of <ph id=\"ph2\">`s`</ph>.","source":"Specifies that white space not defined by `format` can appear at the end of `s`."},{"pos":[6130,6189],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[6190,6287],"content":"Specifies that <ph id=\"ph1\">`s`</ph> may contain leading, inner, and trailing white spaces not defined by <ph id=\"ph2\">`format`</ph>.","source":"Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`."},{"pos":[6292,6346],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[6347,6690],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent a local time.","pos":[0,95],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[96,343],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[6695,6753],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[6754,7130],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent UTC.","pos":[0,86],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[87,376],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[7135,7198],"content":"<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>","nodes":[]},{"pos":[7199,7310],"content":"If <ph id=\"ph1\">`s`</ph> contains time without date information, the date of the return value is set to <ph id=\"ph2\">`DateTime.MinValue.Date`</ph>.","source":"If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`."},{"pos":[7315,7362],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[7363,8012],"content":"The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is parsed using default values.","pos":[0,49],"source":"The `s` parameter is parsed using default values."},{"content":"No white space other than that present in <ph id=\"ph1\">`format`</ph> is allowed.","pos":[50,112],"source":" No white space other than that present in `format` is allowed."},{"content":"If <ph id=\"ph1\">`s`</ph> lacks a date component, the date of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value is set to 1/1/0001.","pos":[113,217],"source":" If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001."},{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[218,412],"source":" If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If time zone information is present in <ph id=\"ph1\">`s`</ph>, the time is converted to local time and the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[413,649],"source":" If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[8017,8073],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[8074,8383],"content":"For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.","nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.","pos":[0,309],"nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion to a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value date and time with its <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,236],"source":"For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This flag primarily prevents the conversion of UTC times to local times.","pos":[237,309]}]}]},{"pos":[8391,8698],"content":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:","nodes":[{"content":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <ph id=\"ph1\">`s`</ph> are defined by the <ph id=\"ph2\">`provider`</ph> parameter, as is the precise format of <ph id=\"ph3\">`s`</ph> if <ph id=\"ph4\">`format`</ph> is a standard format specifier string.","pos":[0,253],"source":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter can be any of the following:","pos":[254,307],"source":" The `provider` parameter can be any of the following:"}]},{"pos":[8708,8991],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id=\"ph2\">`s`</ph>.","pos":[0,99],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id=\"ph3\">`s`</ph>.","pos":[100,283],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`."}]},{"pos":[9001,9103],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[9113,9387],"content":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.","nodes":[{"content":"A custom <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id=\"ph2\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.","pos":[0,274],"source":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information."}]},{"pos":[9394,9518],"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."}],"pos":[295790,305351],"yaml":true,"extradata":"MT"},{"content":"A string containing a date and time to convert.","nodes":[{"pos":[0,47],"content":"A string containing a date and time to convert.","nodes":[{"content":"A string containing a date and time to convert.","pos":[0,47]}]}],"pos":[306474,306522],"yaml":true},{"content":"A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.","nodes":[{"pos":[0,117],"content":"A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.","nodes":[{"content":"A format specifier that defines the required format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,70],"source":"A format specifier that defines the required format of <code>s</code>."},{"content":"For more information, see the Remarks section.","pos":[71,117]}]}],"pos":[306584,306702],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>s</code>.","nodes":[{"pos":[0,85],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>s</code>."}],"pos":[306775,306861],"yaml":true},{"content":"A bitwise combination of the enumeration values that provides additional information about <code>s</code>, about style elements that may be present in <code>s</code>, or about the conversion from <code>s</code> to a <xref href=\"System.DateTime\"></xref> value. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"pos":[0,352],"content":"A bitwise combination of the enumeration values that provides additional information about <code>s</code>, about style elements that may be present in <code>s</code>, or about the conversion from <code>s</code> to a <xref href=\"System.DateTime\"></xref> value. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"content":"A bitwise combination of the enumeration values that provides additional information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, about style elements that may be present in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or about the conversion from <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">s</ph><ept id=\"p3\">&lt;/code&gt;</ept> to a <ph id=\"ph4\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value.","pos":[0,259],"source":"A bitwise combination of the enumeration values that provides additional information about <code>s</code>, about style elements that may be present in <code>s</code>, or about the conversion from <code>s</code> to a <xref href=\"System.DateTime\"></xref> value."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.None\"&gt;&lt;/xref&gt;</ph>.","pos":[260,352],"source":" A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>."}]}],"pos":[306944,307297],"yaml":true},{"content":"An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code>, <code>provider</code>, and <code>style</code>.","nodes":[{"pos":[0,162],"content":"An object that is equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">provider</ph><ept id=\"p3\">&lt;/code&gt;</ept>, and <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">style</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code>, <code>provider</code>, and <code>style</code>."}],"pos":[307356,307519],"yaml":true},{"content":"<code>s</code> or <code>format</code> is `null`.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>s</code> or <code>format</code> is `null`."}],"pos":[307675,307724],"yaml":true},{"content":"<code>s</code> or <code>format</code> is an empty string.  \n  \n -or-  \n  \n <code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>s</code> do not agree.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;format&lt;/code&gt;</ph> is an empty string.","source":"<code>s</code> or <code>format</code> is an empty string."},{"pos":[64,68],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[75,188],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a date and time that corresponds to the pattern specified in <ph id=\"ph2\">&lt;code&gt;format&lt;/code&gt;</ph>.","source":"<code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>."},{"pos":[195,199],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[206,281],"content":"The hour component and the AM/PM designator in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> do not agree.","source":"The hour component and the AM/PM designator in <code>s</code> do not agree."}],"pos":[307814,308106],"yaml":true},{"content":"<code>style</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>.","nodes":[{"pos":[0,283],"content":"<code>style</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> contains an invalid combination of <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,118],"source":"<code>style</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values."},{"content":"For example, both <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"&gt;&lt;/xref&gt;</ph>.","pos":[119,283],"source":" For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>."}]}],"pos":[308200,308484],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.","nodes":[{"pos":[0,267],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent using the specified format and culture-specific format information.","pos":[0,186],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format and culture-specific format information."},{"content":"The format of the string representation must match the specified format exactly.","pos":[187,267]}]}],"pos":[310129,310397],"yaml":true},{"content":"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\<Date> and \\<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`. If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00). If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`.  \n  \n If `s` does not represent a time in a particular time zone and the parse operation succeeds, the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the \"o\", \"r\", or \"u\" standard format specifiers, or if it contains the \"z\", \"zz\", or \"zzz\" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \n  \n> [!NOTE]\n>  If `format` is a custom format pattern that does not include date or time separators (such as \"yyyyMMddHHmm\"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the format pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.","nodes":[{"pos":[0,774],"content":"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\<Date> and \\<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`. If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00). If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date, which must be in the format defined by the <ph id=\"ph2\">`format`</ph> parameter.","pos":[0,236],"source":"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter."},{"content":"It also requires that the <ph id=\"ph1\">\\&lt;</ph>Date&gt; and <ph id=\"ph2\">\\&lt;</ph>Time&gt; elements of the string representation of a date and time appear in the order specified by <ph id=\"ph3\">`format`</ph>, and that <ph id=\"ph4\">`s`</ph> have no white space other than that permitted by <ph id=\"ph5\">`format`</ph>.","pos":[237,454],"source":" It also requires that the \\<Date> and \\<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`."},{"content":"If <ph id=\"ph1\">`format`</ph> defines a date with no time element and the parse operation succeeds, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value has a time of midnight (00:00:00).","pos":[455,614],"source":" If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00)."},{"content":"If <ph id=\"ph1\">`format`</ph> defines a time with no date element and the parse operation succeeds, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value has a date of <ph id=\"ph3\">`DateTime.Now.Date`</ph>.","pos":[615,774],"source":" If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`."}]},{"pos":[781,1431],"content":"If `s` does not represent a time in a particular time zone and the parse operation succeeds, the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the \"o\", \"r\", or \"u\" standard format specifiers, or if it contains the \"z\", \"zz\", or \"zzz\" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"If <ph id=\"ph1\">`s`</ph> does not represent a time in a particular time zone and the parse operation succeeds, the<ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,236],"source":"If `s` does not represent a time in a particular time zone and the parse operation succeeds, the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If <ph id=\"ph1\">`s`</ph> does represent the time in a particular time zone and <ph id=\"ph2\">`format`</ph> allows time zone information to be present (for example, if <ph id=\"ph3\">`format`</ph> is equal to the \"o\", \"r\", or \"u\" standard format specifiers, or if it contains the \"z\", \"zz\", or \"zzz\" custom format specifiers), the <ph id=\"ph4\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph5\">&lt;xref:System.DateTime&gt;</ph> value is <ph id=\"ph6\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[237,650],"source":" If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the \"o\", \"r\", or \"u\" standard format specifiers, or if it contains the \"z\", \"zz\", or \"zzz\" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[1438,1873],"content":"The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <ph id=\"ph2\">`s`</ph>.","pos":[0,171],"source":"The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`."},{"content":"For details about valid formatting codes, see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> or <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.","pos":[172,435],"source":" For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)."}]},{"pos":[1881,2240],"content":"[!NOTE]\n If `format` is a custom format pattern that does not include date or time separators (such as \"yyyyMMddHHmm\"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the format pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","leadings":["","> "],"nodes":[{"content":" If `format` is a custom format pattern that does not include date or time separators (such as \"yyyyMMddHHmm\"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the format pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","pos":[8,357],"nodes":[{"content":"If <ph id=\"ph1\">`format`</ph> is a custom format pattern that does not include date or time separators (such as \"yyyyMMddHHmm\"), use the invariant culture for the <ph id=\"ph2\">`provider`</ph> parameter and the widest form of each custom format specifier.","pos":[1,219],"source":" If `format` is a custom format pattern that does not include date or time separators (such as \"yyyyMMddHHmm\"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier."},{"content":"For example, if you want to specify hours in the format pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","pos":[220,349]}]}]},{"pos":[2247,2550],"content":"The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:","nodes":[{"content":"The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in <ph id=\"ph1\">`s`</ph> are defined by the <ph id=\"ph2\">`provider`</ph> parameter, as is the precise format of <ph id=\"ph3\">`s`</ph> if <ph id=\"ph4\">`format`</ph> is a standard format specifier string.","pos":[0,249],"source":"The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter can be any of the following:","pos":[250,303],"source":" The `provider` parameter can be any of the following:"}]},{"pos":[2560,2843],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id=\"ph2\">`s`</ph>.","pos":[0,99],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id=\"ph3\">`s`</ph>.","pos":[100,283],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`."}]},{"pos":[2853,2955],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[2965,3239],"content":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.","nodes":[{"content":"A custom <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id=\"ph2\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.","pos":[0,274],"source":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information."}]},{"pos":[3246,3370],"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."}],"pos":[310408,313818],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[314397,314448],"yaml":true},{"content":"A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.","nodes":[{"pos":[0,117],"content":"A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.","nodes":[{"content":"A format specifier that defines the required format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,70],"source":"A format specifier that defines the required format of <code>s</code>."},{"content":"For more information, see the Remarks section.","pos":[71,117]}]}],"pos":[314510,314628],"yaml":true},{"content":"An object that supplies culture-specific format information about <code>s</code>.","nodes":[{"pos":[0,81],"content":"An object that supplies culture-specific format information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific format information about <code>s</code>."}],"pos":[314701,314783],"yaml":true},{"content":"An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code> and <code>provider</code>.","nodes":[{"pos":[0,141],"content":"An object that is equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">provider</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code> and <code>provider</code>."}],"pos":[314842,314984],"yaml":true},{"content":"<code>s</code> or <code>format</code> is `null`.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>s</code> or <code>format</code> is `null`."}],"pos":[315140,315189],"yaml":true},{"content":"<code>s</code> or <code>format</code> is an empty string.  \n  \n -or-  \n  \n <code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>.  \n  \n -or-  \n  \n The hour component and the AM/PM designator in <code>s</code> do not agree.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;format&lt;/code&gt;</ph> is an empty string.","source":"<code>s</code> or <code>format</code> is an empty string."},{"pos":[64,68],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[75,188],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a date and time that corresponds to the pattern specified in <ph id=\"ph2\">&lt;code&gt;format&lt;/code&gt;</ph>.","source":"<code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>."},{"pos":[195,199],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[206,281],"content":"The hour component and the AM/PM designator in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> do not agree.","source":"The hour component and the AM/PM designator in <code>s</code> do not agree."}],"pos":[315279,315571],"yaml":true},{"content":"Gets the seconds component of the date represented by this instance.","nodes":[{"pos":[0,68],"content":"Gets the seconds component of the date represented by this instance.","nodes":[{"content":"Gets the seconds component of the date represented by this instance.","pos":[0,68]}]}],"pos":[316939,317008],"yaml":true},{"content":"The seconds component, expressed as a value between 0 and 59.","nodes":[{"pos":[0,61],"content":"The seconds component, expressed as a value between 0 and 59.","nodes":[{"content":"The seconds component, expressed as a value between 0 and 59.","pos":[0,61]}]}],"pos":[317647,317709],"yaml":true},{"content":"Creates a new <xref href=\"System.DateTime\"></xref> object that has the same number of ticks as the specified <xref href=\"System.DateTime\"></xref>, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <xref href=\"System.DateTimeKind\"></xref> value.","nodes":[{"pos":[0,310],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object that has the same number of ticks as the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <ph id=\"ph3\">&lt;xref href=\"System.DateTimeKind\"&gt;&lt;/xref&gt;</ph> value.","source":"Creates a new <xref href=\"System.DateTime\"></xref> object that has the same number of ticks as the specified <xref href=\"System.DateTime\"></xref>, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <xref href=\"System.DateTimeKind\"></xref> value."}],"pos":[319341,319652],"yaml":true},{"content":"A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks. The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value.  \n  \n> [!IMPORTANT]\n>  The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method. Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`. For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).  \n  \n The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.","nodes":[{"pos":[0,402],"content":"A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks. The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks.","pos":[0,243],"source":"A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks."},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> method creates a new <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object using the specified <ph id=\"ph3\">`kind`</ph> parameter and the original time value.","pos":[244,402],"source":" The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value."}]},{"pos":[410,902],"content":"[!IMPORTANT]\n The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method. Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`. For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).","leadings":["","> "],"nodes":[{"content":" The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method. Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`. For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).","pos":[13,490],"nodes":[{"content":"The returned <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value does not represent the same instant in time as the <ph id=\"ph2\">`value`</ph> parameter, and <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> is not a time zone conversion method.","pos":[1,192],"source":" The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method."},{"content":"Instead, it leaves the time specified by the <ph id=\"ph1\">`value`</ph> parameter unchanged, and sets the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph3\">`kind`</ph>.","pos":[193,330],"source":" Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`."},{"content":"For information about time zone conversions, see <bpt id=\"p1\">[</bpt>Converting Times Between Time Zones<ept id=\"p1\">](~/docs/standard/datetime/converting-between-time-zones.md)</ept>.","pos":[331,477],"source":" For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md)."}]}]},{"pos":[909,1173],"content":"The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> method is useful in interoperability scenarios where you receive a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.","pos":[0,264],"source":"The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC."}]}],"pos":[319663,320844],"yaml":true,"extradata":"MT"},{"content":"A date and time.","nodes":[{"pos":[0,16],"content":"A date and time.","nodes":[{"content":"A date and time.","pos":[0,16]}]}],"pos":[321528,321545],"yaml":true},{"content":"One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.","nodes":[{"pos":[0,107],"content":"One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.","nodes":[{"content":"One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.","pos":[0,107]}]}],"pos":[321611,321719],"yaml":true},{"content":"A new object that has the same number of ticks as the object represented by the <code>value</code> parameter and the <xref href=\"System.DateTimeKind\"></xref> value specified by the <code>kind</code> parameter.","nodes":[{"pos":[0,209],"content":"A new object that has the same number of ticks as the object represented by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter and the <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind\"&gt;&lt;/xref&gt;</ph> value specified by the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">kind</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","source":"A new object that has the same number of ticks as the object represented by the <code>value</code> parameter and the <xref href=\"System.DateTimeKind\"></xref> value specified by the <code>kind</code> parameter."}],"pos":[321778,321988],"yaml":true},{"content":"Subtracts the specified date and time from this instance.","nodes":[{"pos":[0,57],"content":"Subtracts the specified date and time from this instance.","nodes":[{"content":"Subtracts the specified date and time from this instance.","pos":[0,57]}]}],"pos":[323505,323563],"yaml":true},{"content":"The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates. To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.  \n  \n If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span. That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative.  \n  \n The<xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.  \n  \n> [!NOTE]\n>  The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction.","nodes":[{"pos":[0,563],"content":"The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates. To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.","nodes":[{"content":"The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates. To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.","pos":[0,563],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Subtract%28System.DateTime%29&gt;</ph> method determines the difference between two dates.","pos":[0,108],"source":"The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates."},{"content":"To subtract a time interval from the current instance, call the <ph id=\"ph1\">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29&gt;</ph> method.","pos":[109,233],"source":" To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method."},{"content":"To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.","pos":[234,417]},{"content":"For example, to subtract two months from the current date, call the <ph id=\"ph1\">&lt;xref:System.DateTime.AddMonths%28System.Int32%29&gt;</ph> method with a value of -2.","pos":[418,563],"source":" For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2."}]}]},{"pos":[570,870],"content":"If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span. That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative.","nodes":[{"content":"If the date and time of the current instance is earlier than <ph id=\"ph1\">`value`</ph>, the method returns a <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph> object that represents a negative time span.","pos":[0,158],"source":"If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span."},{"content":"That is, the value of all of its non-zero properties (such as <ph id=\"ph1\">&lt;xref:System.TimeSpan.Days%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.TimeSpan.Ticks%2A&gt;</ph>) is negative.","pos":[159,300],"source":" That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative."}]},{"pos":[877,1272],"content":"The<xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.","nodes":[{"content":"The<xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.","pos":[0,395],"nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Subtract%28System.DateTime%29&gt;</ph> method does not consider the value of the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the two <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> values when performing the subtraction.","pos":[0,211],"source":"The<xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction."},{"content":"Before subtracting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> objects, ensure that the objects represent times in the same time zone.","pos":[212,325],"source":" Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone."},{"content":"Otherwise, the result will include the difference between time zones.","pos":[326,395]}]}]},{"pos":[1280,1472],"content":"[!NOTE]\n The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName&gt;</ph> method does consider the difference between time zones when performing the subtraction.","pos":[9,190],"source":" The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction."}]}],"pos":[323574,325056],"yaml":true,"extradata":"MT"},{"content":"The date and time value to subtract.","nodes":[{"pos":[0,36],"content":"The date and time value to subtract.","nodes":[{"content":"The date and time value to subtract.","pos":[0,36]}]}],"pos":[325692,325729],"yaml":true},{"content":"A time interval that is equal to the date and time represented by this instance minus the date and time represented by <code>value</code>.","nodes":[{"pos":[0,138],"content":"A time interval that is equal to the date and time represented by this instance minus the date and time represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A time interval that is equal to the date and time represented by this instance minus the date and time represented by <code>value</code>."}],"pos":[325788,325927],"yaml":true},{"content":"The result is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,132],"content":"The result is less than <ph id=\"ph1\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The result is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[326093,326226],"yaml":true},{"content":"Subtracts the specified duration from this instance.","nodes":[{"pos":[0,52],"content":"Subtracts the specified duration from this instance.","nodes":[{"content":"Subtracts the specified duration from this instance.","pos":[0,52]}]}],"pos":[327685,327738],"yaml":true},{"content":"The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance. To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.  \n  \n This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \n  \n Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance. However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.  \n  \n The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes). To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:  \n  \n-   <xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance.  \n  \n-   <xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance.","nodes":[{"pos":[0,602],"content":"The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance. To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.","nodes":[{"content":"The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance. To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.","pos":[0,602],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29&gt;</ph> method returns the date that is a specified time interval difference from the current instance.","pos":[0,152],"source":"The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance."},{"content":"To determine the time interval between two dates, call the <ph id=\"ph1\">&lt;xref:System.DateTime.Subtract%28System.DateTime%29&gt;</ph> method.","pos":[153,272],"source":" To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method."},{"content":"To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.","pos":[273,456]},{"content":"For example, to subtract two months from the current date, call the <ph id=\"ph1\">&lt;xref:System.DateTime.AddMonths%28System.Int32%29&gt;</ph> method with a value of -2.","pos":[457,602],"source":" For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2."}]}]},{"pos":[609,772],"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","nodes":[{"content":"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.","pos":[0,163],"nodes":[{"content":"This method does not change the value of this <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph>.","pos":[0,69],"source":"This method does not change the value of this <xref:System.DateTime>."},{"content":"Instead, it returns a new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.","pos":[70,163],"source":" Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation."}]}]},{"pos":[779,1334],"content":"Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance. However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.","nodes":[{"content":"Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance. However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.","pos":[0,555],"nodes":[{"content":"Ordinarily, the <ph id=\"ph1\">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName&gt;</ph> method subtracts a <ph id=\"ph2\">&lt;xref:System.TimeSpan&gt;</ph> object that represents a positive time span and returns a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value that is earlier than the date and time of the current instance.","pos":[0,286],"source":"Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance."},{"content":"However, if the <ph id=\"ph1\">&lt;xref:System.TimeSpan&gt;</ph> object represents a negative time span, the <ph id=\"ph2\">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName&gt;</ph> method returns a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value that is later than the date and time of the current instance.","pos":[287,555],"source":" However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance."}]}]},{"pos":[1341,1772],"content":"The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes). To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:","nodes":[{"content":"The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes). To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:","pos":[0,431],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName&gt;</ph> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes).","pos":[0,236],"source":"The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes)."},{"content":"To subtract a single unit of time (such as years, months, or days) from the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> instance, you can pass a negative numeric value as a parameter to any of the following methods:","pos":[237,431],"source":" To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:"}]}]},{"pos":[1782,1897],"content":"<xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime.AddYears%2A&gt;</ph>, to subtract a specific number of years from the current date and time instance.","pos":[0,115],"source":"<xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance."}]},{"pos":[1907,2024],"content":"<xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime.AddMonths%2A&gt;</ph>, to subtract a specific number of months from the current date and time instance.","pos":[0,117],"source":"<xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance."}]},{"pos":[2034,2147],"content":"<xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime.AddDays%2A&gt;</ph>, to subtract a specific number of days from the current date and time instance.","pos":[0,113],"source":"<xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance."}]},{"pos":[2157,2272],"content":"<xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime.AddHours%2A&gt;</ph>, to subtract a specific number of hours from the current date and time instance.","pos":[0,115],"source":"<xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance."}]},{"pos":[2282,2401],"content":"<xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime.AddMinutes%2A&gt;</ph>, to subtract a specific number of minutes from the current date and time instance.","pos":[0,119],"source":"<xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance."}]},{"pos":[2411,2530],"content":"<xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime.AddSeconds%2A&gt;</ph>, to subtract a specific number of seconds from the current date and time instance.","pos":[0,119],"source":"<xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance."}]},{"pos":[2540,2669],"content":"<xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime.AddMilliseconds%2A&gt;</ph>, to subtract a specific number of milliseconds from the current date and time instance.","pos":[0,129],"source":"<xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance."}]},{"pos":[2679,2794],"content":"<xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.DateTime.AddTicks%2A&gt;</ph>, to subtract a specific number of ticks from the current date and time instance.","pos":[0,115],"source":"<xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance."}]}],"pos":[327749,330568],"yaml":true,"extradata":"MT"},{"content":"The time interval to subtract.","nodes":[{"pos":[0,30],"content":"The time interval to subtract.","nodes":[{"content":"The time interval to subtract.","pos":[0,30]}]}],"pos":[331204,331235],"yaml":true},{"content":"An object that is equal to the date and time represented by this instance minus the time interval represented by <code>value</code>.","nodes":[{"pos":[0,132],"content":"An object that is equal to the date and time represented by this instance minus the time interval represented by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that is equal to the date and time represented by this instance minus the time interval represented by <code>value</code>."}],"pos":[331294,331427],"yaml":true},{"content":"The result is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.","nodes":[{"pos":[0,132],"content":"The result is less than <ph id=\"ph1\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The result is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>."}],"pos":[331593,331726],"yaml":true},{"content":"Gets the number of ticks that represent the date and time of this instance.","nodes":[{"pos":[0,75],"content":"Gets the number of ticks that represent the date and time of this instance.","nodes":[{"content":"Gets the number of ticks that represent the date and time of this instance.","pos":[0,75]}]}],"pos":[333088,333164],"yaml":true},{"content":"A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond, or 10 million ticks in a second.  \n  \n The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=fullName>. It does not include the number of ticks that are attributable to leap seconds.","nodes":[{"pos":[0,156],"content":"A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond, or 10 million ticks in a second.","nodes":[{"content":"A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond, or 10 million ticks in a second.","pos":[0,156],"nodes":[{"content":"A single tick represents one hundred nanoseconds or one ten-millionth of a second.","pos":[0,82]},{"content":"There are 10,000 ticks in a millisecond, or 10 million ticks in a second.","pos":[83,156]}]}]},{"pos":[163,513],"content":"The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=fullName>. It does not include the number of ticks that are attributable to leap seconds.","nodes":[{"content":"The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=fullName>. It does not include the number of ticks that are attributable to leap seconds.","pos":[0,350],"nodes":[{"content":"The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <ph id=\"ph1\">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph>.","pos":[0,271],"source":"The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=fullName>."},{"content":"It does not include the number of ticks that are attributable to leap seconds.","pos":[272,350]}]}]}],"pos":[333175,333693],"yaml":true,"extradata":"MT"},{"content":"The number of ticks that represent the date and time of this instance. The value is between `DateTime.MinValue.Ticks` and `DateTime.MaxValue.Ticks`.","nodes":[{"pos":[0,148],"content":"The number of ticks that represent the date and time of this instance. The value is between `DateTime.MinValue.Ticks` and `DateTime.MaxValue.Ticks`.","nodes":[{"content":"The number of ticks that represent the date and time of this instance.","pos":[0,70]},{"content":"The value is between <ph id=\"ph1\">`DateTime.MinValue.Ticks`</ph> and <ph id=\"ph2\">`DateTime.MaxValue.Ticks`</ph>.","pos":[71,148],"source":" The value is between `DateTime.MinValue.Ticks` and `DateTime.MaxValue.Ticks`."}]}],"pos":[334411,334560],"yaml":true},{"content":"Gets the time of day for this instance.","nodes":[{"pos":[0,39],"content":"Gets the time of day for this instance.","nodes":[{"content":"Gets the time of day for this instance.","pos":[0,39]}]}],"pos":[335998,336038],"yaml":true},{"content":"Unlike the <xref:System.DateTime.Date%2A> property. which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.  \n  \n If you want to display the time of day or retrieve the string representation of the time of day of a <xref:System.DateTime> value, you can instead call an overload of the <xref:System.DateTime.ToString%2A> method that has a `format` parameter or use the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature with the \"t\" or \"T\" standard format string.","nodes":[{"pos":[0,301],"content":"Unlike the <xref:System.DateTime.Date%2A> property. which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.","nodes":[{"content":"Unlike the <xref:System.DateTime.Date%2A> property. which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.","pos":[0,301],"nodes":[{"content":"Unlike the <ph id=\"ph1\">&lt;xref:System.DateTime.Date%2A&gt;</ph> property.","pos":[0,51],"source":"Unlike the <xref:System.DateTime.Date%2A> property."},{"content":"which returns a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value that represents a date without its time component, the <ph id=\"ph2\">&lt;xref:System.DateTime.TimeOfDay%2A&gt;</ph> property returns a <ph id=\"ph3\">&lt;xref:System.TimeSpan&gt;</ph> value that represents a  <ph id=\"ph4\">&lt;xref:System.DateTime&gt;</ph> value's time component.","pos":[52,301],"source":" which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component."}]}]},{"pos":[308,688],"content":"If you want to display the time of day or retrieve the string representation of the time of day of a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value, you can instead call an overload of the <ph id=\"ph2\">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method that has a <ph id=\"ph3\">`format`</ph> parameter or use the <bpt id=\"p1\">[</bpt>composite formatting<ept id=\"p1\">](~/docs/standard/base-types/composite-formatting.md)</ept> feature with the \"t\" or \"T\" standard format string.","source":"If you want to display the time of day or retrieve the string representation of the time of day of a <xref:System.DateTime> value, you can instead call an overload of the <xref:System.DateTime.ToString%2A> method that has a `format` parameter or use the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature with the \"t\" or \"T\" standard format string."}],"pos":[336049,336746],"yaml":true,"extradata":"MT"},{"content":"A time interval that represents the fraction of the day that has elapsed since midnight.","nodes":[{"pos":[0,88],"content":"A time interval that represents the fraction of the day that has elapsed since midnight.","nodes":[{"content":"A time interval that represents the fraction of the day that has elapsed since midnight.","pos":[0,88]}]}],"pos":[337442,337531],"yaml":true},{"content":"Serializes the current <xref href=\"System.DateTime\"></xref> object to a 64-bit binary value that subsequently can be used to recreate the <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,182],"content":"Serializes the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to a 64-bit binary value that subsequently can be used to recreate the <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"Serializes the current <xref href=\"System.DateTime\"></xref> object to a 64-bit binary value that subsequently can be used to recreate the <xref href=\"System.DateTime\"></xref> object."}],"pos":[338971,339154],"yaml":true},{"content":"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.  \n  \n> [!IMPORTANT]\n>  In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \"Local Time Adjustment\".  \n  \n## Local Time Adjustment  \n A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:  \n  \n-   If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.  \n  \n     For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.  \n  \n-   If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.  \n  \n     For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.  \n  \n     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]\n     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  \n  \n## Version Considerations  \n Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.  \n  \n Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure. Starting with version 2.0, you must also serialize the Kind data.","nodes":[{"pos":[0,277],"content":"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.","nodes":[{"content":"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.","pos":[0,277],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method to convert the value of the current <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object to a binary value.","pos":[0,134],"source":"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value."},{"content":"Subsequently, use the binary value and the <ph id=\"ph1\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method to recreate the original <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[135,277],"source":" Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object."}]}]},{"pos":[285,598],"content":"[!IMPORTANT]\n In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \"Local Time Adjustment\".","leadings":["","> "],"nodes":[{"content":" In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \"Local Time Adjustment\".","pos":[13,311],"nodes":[{"content":"In some cases, the <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value returned by the <ph id=\"ph2\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method is not identical to the original <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value supplied to the <ph id=\"ph4\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method.","pos":[1,229],"source":" In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method."},{"content":"For more information, see the next section, \"Local Time Adjustment\".","pos":[230,298]}]}]},{"pos":[607,628],"content":"Local Time Adjustment","linkify":"Local Time Adjustment","nodes":[{"content":"Local Time Adjustment","pos":[0,21]}]},{"pos":[632,1186],"content":"A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:","nodes":[{"content":"A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:","pos":[0,554],"nodes":[{"content":"A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure whose <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property has the value <ph id=\"ph3\">&lt;xref:System.DateTimeKind.Local&gt;</ph>.","pos":[0,231],"source":"A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>."},{"content":"When restoring a local <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value from the binary representation that is produced by the <ph id=\"ph2\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method, the <ph id=\"ph3\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method may adjust the recreated value so that it is not equal to the original value.","pos":[232,507],"source":" When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value."},{"content":"This can occur under the following conditions:","pos":[508,554]}]}]},{"pos":[1196,1541],"content":"If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.","nodes":[{"content":"If a local <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is serialized in one time zone by the <ph id=\"ph2\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method, and then deserialized in a different time zone by the <ph id=\"ph3\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method, the local time represented by the resulting <ph id=\"ph4\">&lt;xref:System.DateTime&gt;</ph> object is automatically adjusted to the second time zone.","pos":[0,345],"source":"If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone."}]},{"pos":[1552,2200],"content":"For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.","nodes":[{"content":"For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.","pos":[0,648],"nodes":[{"content":"For example, consider a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object that represents a local time of 3 P.M.","pos":[0,92],"source":"For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M."},{"content":"An application that is executing in the U.S. Pacific Time zone uses the <ph id=\"ph1\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method to convert that <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object to a binary value.","pos":[93,271],"source":" An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value."},{"content":"Another application that is executing in the U.S. Eastern Time zone uses the <ph id=\"ph1\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method to convert the binary value to a new <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[272,460],"source":" Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object."},{"content":"The value of the new <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is 6 P.M., which represents the same point in time as the original 3 P.M.","pos":[461,585],"source":" The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M."},{"content":"value, but is adjusted to local time in the Eastern Time zone.","pos":[586,648]}]}]},{"pos":[2210,2441],"content":"If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.","nodes":[{"content":"If the binary representation of a local <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value represents an invalid time in the local time zone of the system on which <ph id=\"ph2\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> is called, the time is adjusted so that it is valid.","pos":[0,231],"source":"If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid."}]},{"pos":[2452,3242],"content":"For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.","nodes":[{"content":"For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.","pos":[0,790],"nodes":[{"content":"For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.","pos":[0,189]},{"content":"This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.","pos":[190,292]},{"content":"The following example shows that when a time that falls within this range is converted to a binary value by the <ph id=\"ph1\">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method and is then restored by the <ph id=\"ph2\">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method, the original value is adjusted to become a valid time.","pos":[293,574],"source":" The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time."},{"content":"You can determine whether a particular date and time value may be subject to modification by passing it to the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName&gt;</ph> method, as the example illustrates.","pos":[575,790],"source":" You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates."}]}]},{"pos":[3253,3542],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.FromBinary#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.FromBinary#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]\n [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]"},{"pos":[3551,3573],"content":"Version Considerations","linkify":"Version Considerations","nodes":[{"content":"Version Considerations","pos":[0,22]}]},{"pos":[3577,4084],"content":"Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.","nodes":[{"content":"Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.","pos":[0,507],"nodes":[{"content":"Starting with the .NET Framework version 2.0, a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.","pos":[0,340],"source":"Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time."},{"content":"The Ticks field can be accessed with the <ph id=\"ph1\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property and the Kind field can be accessed with the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.","pos":[341,507],"source":" The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property."}]}]},{"pos":[4091,4460],"content":"Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure. Starting with version 2.0, you must also serialize the Kind data.","nodes":[{"content":"Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure. Starting with version 2.0, you must also serialize the Kind data.","pos":[0,369],"nodes":[{"content":"Prior to the .NET Framework 2.0, if you serialized a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object manually instead of using a serialization interface such as <ph id=\"ph2\">&lt;xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName&gt;</ph>, you only needed to serialize the Ticks data in the <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> structure.","pos":[0,303],"source":"Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure."},{"content":"Starting with version 2.0, you must also serialize the Kind data.","pos":[304,369]}]}]}],"pos":[339165,343652],"yaml":true,"extradata":"MT"},{"content":"A 64-bit signed integer that encodes the <xref href=\"System.DateTime.Kind\"></xref> and <xref href=\"System.DateTime.Ticks\"></xref> properties.","nodes":[{"pos":[0,141],"content":"A 64-bit signed integer that encodes the <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.DateTime.Ticks\"&gt;&lt;/xref&gt;</ph> properties.","source":"A 64-bit signed integer that encodes the <xref href=\"System.DateTime.Kind\"></xref> and <xref href=\"System.DateTime.Ticks\"></xref> properties."}],"pos":[343775,343917],"yaml":true},{"content":"Gets the current date.","nodes":[{"pos":[0,22],"content":"Gets the current date.","nodes":[{"content":"Gets the current date.","pos":[0,22]}]}],"pos":[345334,345357],"yaml":true},{"content":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>.  \n  \n Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only. For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md). In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time.","nodes":[{"pos":[0,178],"content":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>.","nodes":[{"content":"Starting with the .NET Framework version 2.0, the return value is a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property returns <ph id=\"ph3\">&lt;xref:System.DateTimeKind.Local&gt;</ph>.","pos":[0,178],"source":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>."}]},{"pos":[185,711],"content":"Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only. For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md). In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time.","nodes":[{"content":"Because it returns the current date without the current time, the <ph id=\"ph1\">&lt;xref:System.DateTime.Today%2A&gt;</ph> property is suitable for use in applications that work with dates only.","pos":[0,169],"source":"Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only."},{"content":"For details, see <bpt id=\"p1\">[</bpt>Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo<ept id=\"p1\">](~/docs/standard/datetime/choosing-between-datetime.md)</ept>.","pos":[170,314],"source":" For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md)."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.DateTime.TimeOfDay%2A&gt;</ph> property returns the current time without the current date, and the <ph id=\"ph2\">&lt;xref:System.DateTime.Now%2A&gt;</ph> property returns both the current date and the current time.","pos":[315,526],"source":" In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time."}]}],"pos":[345368,346084],"yaml":true,"extradata":"MT"},{"content":"An object that is set to today's date, with the time component set to 00:00:00.","nodes":[{"pos":[0,79],"content":"An object that is set to today's date, with the time component set to 00:00:00.","nodes":[{"content":"An object that is set to today's date, with the time component set to 00:00:00.","pos":[0,79]}]}],"pos":[346903,346983],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to a Windows file time.","nodes":[{"pos":[0,101],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to a Windows file time.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to a Windows file time."}],"pos":[348431,348533],"yaml":true},{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.","nodes":[{"pos":[0,289],"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[0,289],"nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.","pos":[0,153]},{"content":"(C.E.) Coordinated Universal Time (UTC).","pos":[154,194]},{"content":"Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[195,289]}]}]},{"pos":[296,549],"content":"The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ToFileTime%2A&gt;</ph> method uses the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to determine whether the current <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.","pos":[0,253],"source":"The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time."}]}],"pos":[348544,349098],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.DateTime\"></xref> object expressed as a Windows file time.","nodes":[{"pos":[0,102],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object expressed as a Windows file time.","source":"The value of the current <xref href=\"System.DateTime\"></xref> object expressed as a Windows file time."}],"pos":[349681,349784],"yaml":true},{"content":"The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.","nodes":[{"pos":[0,103],"content":"The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.","nodes":[{"content":"The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.","pos":[0,103],"nodes":[{"content":"The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.","pos":[0,98]},{"content":"UTC.","pos":[99,103]}]}]}],"pos":[349952,350056],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to a Windows file time.","nodes":[{"pos":[0,101],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to a Windows file time.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to a Windows file time."}],"pos":[351470,351572],"yaml":true},{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \n  \n The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time. If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.","nodes":[{"pos":[0,289],"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[0,289],"nodes":[{"content":"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.","pos":[0,153]},{"content":"(C.E.) Coordinated Universal Time (UTC).","pos":[154,194]},{"content":"Windows uses a file time to record when an application creates, accesses, or writes to a file.","pos":[195,289]}]}]},{"pos":[296,658],"content":"The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time. If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.","nodes":[{"content":"The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time. If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.","pos":[0,362],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ToFileTimeUtc%2A&gt;</ph> method uses the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to determine whether the current <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time.","pos":[0,254],"source":"The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time."},{"content":"If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.","pos":[255,362]}]}]}],"pos":[351583,352246],"yaml":true,"extradata":"MT"},{"content":"The value of the current <xref href=\"System.DateTime\"></xref> object expressed as a Windows file time.","nodes":[{"pos":[0,102],"content":"The value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object expressed as a Windows file time.","source":"The value of the current <xref href=\"System.DateTime\"></xref> object expressed as a Windows file time."}],"pos":[352374,352477],"yaml":true},{"content":"The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.","nodes":[{"pos":[0,103],"content":"The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.","nodes":[{"content":"The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.","pos":[0,103],"nodes":[{"content":"The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.","pos":[0,98]},{"content":"UTC.","pos":[99,103]}]}]}],"pos":[352648,352752],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to local time.","nodes":[{"pos":[0,92],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to local time.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to local time."}],"pos":[354154,354247],"yaml":true},{"content":"The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.  \n  \n> [!IMPORTANT]\n>  On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.  \n  \n Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.  \n  \n|Kind|Results|  \n|----------|-------------|  \n|<xref:System.DateTimeKind.Utc>|This instance of <xref:System.DateTime> is converted to local time.|  \n|<xref:System.DateTimeKind.Local>|No conversion is performed.|  \n|<xref:System.DateTimeKind.Unspecified>|This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>.|  \n  \n> [!NOTE]\n>  The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time. To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=fullName> method.  \n  \n The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>. Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>.","nodes":[{"pos":[0,353],"content":"The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.","nodes":[{"content":"The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.","pos":[0,353],"nodes":[{"content":"The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset.","pos":[0,89]},{"content":"For more information about the UTC offset, see <ph id=\"ph1\">&lt;xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName&gt;</ph>.","pos":[90,201],"source":" For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>."},{"content":"The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[202,353],"source":" The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object."}]}]},{"pos":[361,722],"content":"[!IMPORTANT]\n On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.","leadings":["","> "],"nodes":[{"content":" On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.","pos":[13,359],"nodes":[{"content":"On <ph id=\"ph1\">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph> systems, the <ph id=\"ph2\">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method recognizes only the current adjustment rule when converting from UTC to local time.","pos":[1,187],"source":" On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time."},{"content":"As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.","pos":[188,346]}]}]},{"pos":[729,1004],"content":"Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.","nodes":[{"content":"Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.","pos":[0,275],"nodes":[{"content":"Starting with the .NET Framework version 2.0, the value returned by the <ph id=\"ph1\">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method is determined by the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the current <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[0,223],"source":"Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object."},{"content":"The following table describes the possible results.","pos":[224,275]}]}]},{"pos":[1011,1015],"content":"Kind","nodes":[{"content":"Kind","pos":[0,4]}]},{"pos":[1016,1023],"content":"Results","nodes":[{"content":"Results","pos":[0,7]}]},{"pos":[1057,1087],"content":"<xref:System.DateTimeKind.Utc>","nodes":[]},{"pos":[1088,1155],"content":"This instance of <xref:System.DateTime> is converted to local time.","nodes":[{"content":"This instance of <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is converted to local time.","pos":[0,67],"source":"This instance of <xref:System.DateTime> is converted to local time."}]},{"pos":[1160,1192],"content":"<xref:System.DateTimeKind.Local>","nodes":[]},{"pos":[1193,1220],"content":"No conversion is performed.","nodes":[{"content":"No conversion is performed.","pos":[0,27]}]},{"pos":[1225,1263],"content":"<xref:System.DateTimeKind.Unspecified>","nodes":[]},{"pos":[1264,1438],"content":"This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>.","nodes":[{"content":"This instance of <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is assumed to be a UTC time, and the conversion is performed as if <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> were <ph id=\"ph3\">&lt;xref:System.DateTimeKind.Utc&gt;</ph>.","pos":[0,174],"source":"This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>."}]},{"pos":[1447,1716],"content":"[!NOTE]\n The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time. To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=fullName> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time. To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=fullName> method.","pos":[8,267],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method converts a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time.","pos":[1,113],"source":" The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time."},{"content":"To convert the time in any designated time zone to local time, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=fullName&gt;</ph> method.","pos":[114,259],"source":" To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=fullName> method."}]}]},{"pos":[1723,2027],"content":"The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>. Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>.","nodes":[{"content":"The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>. Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>.","pos":[0,304],"nodes":[{"content":"The value returned by the conversion is a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property always returns <ph id=\"ph3\">&lt;xref:System.DateTimeKind.Local&gt;</ph>.","pos":[0,159],"source":"The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>."},{"content":"Consequently, a valid result is returned even if <ph id=\"ph1\">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> is applied repeatedly to the same <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[160,304],"source":" Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>."}]}]}],"pos":[354258,356304],"yaml":true,"extradata":"MT"},{"content":"An object whose <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Local\"></xref>, and whose value is the local time equivalent to the value of the current <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MaxValue\"></xref> if the converted value is too large to be represented by a <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MinValue\"></xref> if the converted value is too small to be represented as a <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,541],"content":"An object whose <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind.Local\"&gt;&lt;/xref&gt;</ph>, and whose value is the local time equivalent to the value of the current <ph id=\"ph3\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph4\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph> if the converted value is too large to be represented by a <ph id=\"ph5\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph6\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> if the converted value is too small to be represented as a <ph id=\"ph7\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"An object whose <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Local\"></xref>, and whose value is the local time equivalent to the value of the current <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MaxValue\"></xref> if the converted value is too large to be represented by a <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MinValue\"></xref> if the converted value is too small to be represented as a <xref href=\"System.DateTime\"></xref> object."}],"pos":[357615,358157],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent long date string representation.","nodes":[{"pos":[0,128],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to its equivalent long date string representation.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent long date string representation."}],"pos":[359647,359776],"yaml":true},{"content":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"D\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \n  \n> [!IMPORTANT]\n>  The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long date pattern is \"dddd, MMMMdd, yyyy\"; for the de-DE culture, it is \"dddd, d. MMMMyyyy\"; for the ja-JP culture, it is \"yyyy'?'M'?'d'?'\". The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.  \n  \n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.","nodes":[{"pos":[0,464],"content":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"D\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.","nodes":[{"content":"The value of the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is formatted using the pattern defined by the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A&gt;</ph> property associated with the current thread culture.","pos":[0,219],"source":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture."},{"content":"The return value is identical to the value returned by specifying the \"D\" <bpt id=\"p1\">[</bpt>standard DateTime format string<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> with the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.","pos":[220,464],"source":" The return value is identical to the value returned by specifying the \"D\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method."}]},{"pos":[472,1025],"content":"[!IMPORTANT]\n The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long date pattern is \"dddd, MMMMdd, yyyy\"; for the de-DE culture, it is \"dddd, d. MMMMyyyy\"; for the ja-JP culture, it is \"yyyy'?'M'?'d'?'\". The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.","leadings":["","> "],"nodes":[{"content":" The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long date pattern is \"dddd, MMMMdd, yyyy\"; for the de-DE culture, it is \"dddd, d. MMMMyyyy\"; for the ja-JP culture, it is \"yyyy'?'M'?'d'?'\". The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.","pos":[13,551],"nodes":[{"content":"The string returned by the <ph id=\"ph1\">&lt;xref:System.DateTime.ToLongDateString%2A&gt;</ph> method is culture-sensitive.","pos":[1,99],"source":" The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive."},{"content":"It reflects the pattern defined by the current culture's <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.","pos":[100,211],"source":" It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object."},{"content":"For example, for the en-US culture, the standard long date pattern is \"dddd, MMMMdd, yyyy\"; for the de-DE culture, it is \"dddd, d.","pos":[212,342]},{"content":"MMMMyyyy\"; for the ja-JP culture, it is \"yyyy'?'M'?'d'?'\".","pos":[343,401]},{"content":"The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.","pos":[402,538]}]}]},{"pos":[1032,1480],"content":"For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.","nodes":[{"content":"For more information about the current thread culture, see the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.CurrentCulture%2A&gt;</ph> property.","pos":[0,121],"source":"For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property."},{"content":"For more information about format characters, format patterns, and the output they produce, see the <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept> topic.","pos":[122,295],"source":" For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic."},{"content":"For more information about changing the format pattern associated with a format character, see the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.","pos":[296,448],"source":" For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class."}]}],"pos":[359787,361283],"yaml":true,"extradata":"MT"},{"content":"A string that contains the long date string representation of the current <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,118],"content":"A string that contains the long date string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"A string that contains the long date string representation of the current <xref href=\"System.DateTime\"></xref> object."}],"pos":[361789,361908],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent long time string representation.","nodes":[{"pos":[0,128],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to its equivalent long time string representation.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent long time string representation."}],"pos":[363059,363188],"yaml":true},{"content":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"T\" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \n  \n> [!IMPORTANT]\n>  The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property of the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long time pattern is \"h:mm:ss tt\"; for the de-DE culture, it is \"HH:mm:ss\"; for the ja-JP culture, it is \"H:mm:ss\". The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.  \n  \n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.","nodes":[{"pos":[0,494],"content":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"T\" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.","nodes":[{"content":"The value of the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is formatted using the pattern defined by the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=fullName&gt;</ph> property associated with the current thread culture.","pos":[0,244],"source":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=fullName> property associated with the current thread culture."},{"content":"The return value is identical to the value returned by specifying the \"T\" <bpt id=\"p1\">[</bpt>standard date and time format string<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> with the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.","pos":[245,494],"source":" The return value is identical to the value returned by specifying the \"T\" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method."}]},{"pos":[502,1112],"content":"[!IMPORTANT]\n The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property of the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long time pattern is \"h:mm:ss tt\"; for the de-DE culture, it is \"HH:mm:ss\"; for the ja-JP culture, it is \"H:mm:ss\". The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.","leadings":["","> "],"nodes":[{"content":" The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property of the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long time pattern is \"h:mm:ss tt\"; for the de-DE culture, it is \"HH:mm:ss\"; for the ja-JP culture, it is \"H:mm:ss\". The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.","pos":[13,608],"nodes":[{"content":"The string returned by the <ph id=\"ph1\">&lt;xref:System.DateTime.ToLongTimeString%2A&gt;</ph> method is culture-sensitive.","pos":[1,99],"source":" The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive."},{"content":"It reflects the pattern defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A&gt;</ph> property of the current culture's <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.","pos":[100,293],"source":" It reflects the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property of the current culture's <xref:System.Globalization.DateTimeFormatInfo> object."},{"content":"For example, for the en-US culture, the standard long time pattern is \"h:mm:ss tt\"; for the de-DE culture, it is \"HH:mm:ss\"; for the ja-JP culture, it is \"H:mm:ss\".","pos":[294,458]},{"content":"The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.","pos":[459,595]}]}]},{"pos":[1119,1567],"content":"For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.","nodes":[{"content":"For more information about the current thread culture, see the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.CurrentCulture%2A&gt;</ph> property.","pos":[0,121],"source":"For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property."},{"content":"For more information about format characters, format patterns, and the output they produce, see the <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept> topic.","pos":[122,295],"source":" For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic."},{"content":"For more information about changing the format pattern associated with a format character, see the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.","pos":[296,448],"source":" For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class."}]}],"pos":[363199,364782],"yaml":true,"extradata":"MT"},{"content":"A string that contains the long time string representation of the current <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,118],"content":"A string that contains the long time string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"A string that contains the long time string representation of the current <xref href=\"System.DateTime\"></xref> object."}],"pos":[365326,365445],"yaml":true},{"content":"Converts the value of this instance to the equivalent OLE Automation date.","nodes":[{"pos":[0,74],"content":"Converts the value of this instance to the equivalent OLE Automation date.","nodes":[{"content":"Converts the value of this instance to the equivalent OLE Automation date.","pos":[0,74]}]}],"pos":[366548,366623],"yaml":true},{"content":"An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24. For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.  \n  \n The base OLE Automation Date is midnight, 30 December 1899. The minimum OLE Automation date is midnight, 1 January 0100. The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=fullName>, the last moment of 31 December 9999.  \n  \n The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MinValue> and earlier than midnight on January1, 0100. However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.  \n  \n For more information about OLE Automation, see the [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118).","nodes":[{"pos":[0,448],"content":"An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24. For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.","nodes":[{"content":"An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24. For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.","pos":[0,448],"nodes":[{"content":"An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24.","pos":[0,233]},{"content":"For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.","pos":[234,448]}]}]},{"pos":[455,717],"content":"The base OLE Automation Date is midnight, 30 December 1899. The minimum OLE Automation date is midnight, 1 January 0100. The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=fullName>, the last moment of 31 December 9999.","nodes":[{"content":"The base OLE Automation Date is midnight, 30 December 1899. The minimum OLE Automation date is midnight, 1 January 0100. The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=fullName>, the last moment of 31 December 9999.","pos":[0,262],"nodes":[{"content":"The base OLE Automation Date is midnight, 30 December 1899.","pos":[0,59]},{"content":"The minimum OLE Automation date is midnight, 1 January 0100.","pos":[60,120]},{"content":"The maximum OLE Automation Date is the same as <ph id=\"ph1\">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, the last moment of 31 December 9999.","pos":[121,262],"source":" The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=fullName>, the last moment of 31 December 9999."}]}]},{"pos":[724,1053],"content":"The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MinValue> and earlier than midnight on January1, 0100. However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.","nodes":[{"content":"The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MinValue> and earlier than midnight on January1, 0100. However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.","pos":[0,329],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ToOADate%2A&gt;</ph> method throws an <ph id=\"ph2\">&lt;xref:System.OverflowException&gt;</ph> if the current instance represents a date that is later than <ph id=\"ph3\">&lt;xref:System.DateTime.MinValue&gt;</ph> and earlier than midnight on January1, 0100.","pos":[0,225],"source":"The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MinValue> and earlier than midnight on January1, 0100."},{"content":"However, if the value of the current instance is <ph id=\"ph1\">&lt;xref:System.DateTime.MinValue&gt;</ph>, the method returns 0.","pos":[226,329],"source":" However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0."}]}]},{"pos":[1060,1172],"content":"For more information about OLE Automation, see the <bpt id=\"p1\">[</bpt>MSDN Library<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>.","source":"For more information about OLE Automation, see the [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118)."}],"pos":[366634,367815],"yaml":true,"extradata":"MT"},{"content":"A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.","nodes":[{"pos":[0,119],"content":"A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.","nodes":[{"content":"A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.","pos":[0,119]}]}],"pos":[367941,368061],"yaml":true},{"content":"The value of this instance cannot be represented as an OLE Automation Date.","nodes":[{"pos":[0,75],"content":"The value of this instance cannot be represented as an OLE Automation Date.","nodes":[{"content":"The value of this instance cannot be represented as an OLE Automation Date.","pos":[0,75]}]}],"pos":[368207,368283],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent short date string representation.","nodes":[{"pos":[0,129],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to its equivalent short date string representation.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent short date string representation."}],"pos":[369377,369507],"yaml":true},{"content":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"d\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \n  \n> [!IMPORTANT]\n>  The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short date pattern is \"M/d/yyyy\"; for the de-DE culture, it is \"dd.MM.yyyy\"; for the ja-JP culture, it is \"yyyy/M/d\". The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.  \n  \n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.","nodes":[{"pos":[0,490],"content":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"d\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.","nodes":[{"content":"The value of the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is formatted using the pattern defined by the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=fullName&gt;</ph> property associated with the current thread culture.","pos":[0,245],"source":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=fullName> property associated with the current thread culture."},{"content":"The return value is identical to the value returned by specifying the \"d\" <bpt id=\"p1\">[</bpt>standard DateTime format string<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> with the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.","pos":[246,490],"source":" The return value is identical to the value returned by specifying the \"d\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method."}]},{"pos":[498,1030],"content":"[!IMPORTANT]\n The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short date pattern is \"M/d/yyyy\"; for the de-DE culture, it is \"dd.MM.yyyy\"; for the ja-JP culture, it is \"yyyy/M/d\". The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.","leadings":["","> "],"nodes":[{"content":" The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short date pattern is \"M/d/yyyy\"; for the de-DE culture, it is \"dd.MM.yyyy\"; for the ja-JP culture, it is \"yyyy/M/d\". The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.","pos":[13,530],"nodes":[{"content":"The string returned by the <ph id=\"ph1\">&lt;xref:System.DateTime.ToShortDateString%2A&gt;</ph> method is culture-sensitive.","pos":[1,100],"source":" The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive."},{"content":"It reflects the pattern defined by the current culture's <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.","pos":[101,212],"source":" It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object."},{"content":"For example, for the en-US culture, the standard short date pattern is \"M/d/yyyy\"; for the de-DE culture, it is \"dd.MM.yyyy\"; for the ja-JP culture, it is \"yyyy/M/d\".","pos":[213,379]},{"content":"The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.","pos":[380,517]}]}]},{"pos":[1037,1510],"content":"For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.","nodes":[{"content":"For more information about the current thread culture, see the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,146],"source":"For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> property."},{"content":"For more information about format characters, format patterns, and the output they produce, see the <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept> topic.","pos":[147,320],"source":" For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic."},{"content":"For more information about changing the format pattern associated with a format character, see the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.","pos":[321,473],"source":" For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class."}]}],"pos":[369518,371044],"yaml":true,"extradata":"MT"},{"content":"A string that contains the short date string representation of the current <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,119],"content":"A string that contains the short date string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"A string that contains the short date string representation of the current <xref href=\"System.DateTime\"></xref> object."}],"pos":[371865,371985],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent short time string representation.","nodes":[{"pos":[0,129],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to its equivalent short time string representation.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent short time string representation."}],"pos":[373143,373273],"yaml":true},{"content":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"t\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \n  \n> [!IMPORTANT]\n>  The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short time pattern is \"h:mm tt\"; for the de-DE culture, it is \"HH:mm\"; for the ja-JP culture, it is \"H:mm\". The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.  \n  \n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.","nodes":[{"pos":[0,490],"content":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \"t\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.","nodes":[{"content":"The value of the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is formatted using the pattern defined by the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=fullName&gt;</ph> property associated with the current thread culture.","pos":[0,245],"source":"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=fullName> property associated with the current thread culture."},{"content":"The return value is identical to the value returned by specifying the \"t\" <bpt id=\"p1\">[</bpt>standard DateTime format string<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> with the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.","pos":[246,490],"source":" The return value is identical to the value returned by specifying the \"t\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method."}]},{"pos":[498,1020],"content":"[!IMPORTANT]\n The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short time pattern is \"h:mm tt\"; for the de-DE culture, it is \"HH:mm\"; for the ja-JP culture, it is \"H:mm\". The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.","leadings":["","> "],"nodes":[{"content":" The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short time pattern is \"h:mm tt\"; for the de-DE culture, it is \"HH:mm\"; for the ja-JP culture, it is \"H:mm\". The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.","pos":[13,520],"nodes":[{"content":"The string returned by the <ph id=\"ph1\">&lt;xref:System.DateTime.ToShortTimeString%2A&gt;</ph> method is culture-sensitive.","pos":[1,100],"source":" The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive."},{"content":"It reflects the pattern defined by the current culture's <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.","pos":[101,212],"source":" It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object."},{"content":"For example, for the en-US culture, the standard short time pattern is \"h:mm tt\"; for the de-DE culture, it is \"HH:mm\"; for the ja-JP culture, it is \"H:mm\".","pos":[213,369]},{"content":"The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.","pos":[370,507]}]}]},{"pos":[1027,1475],"content":"For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.","nodes":[{"content":"For more information about the current thread culture, see the <ph id=\"ph1\">&lt;xref:System.Threading.Thread.CurrentCulture%2A&gt;</ph> property.","pos":[0,121],"source":"For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property."},{"content":"For more information about format characters, format patterns, and the output they produce, see the <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept> topic.","pos":[122,295],"source":" For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic."},{"content":"For more information about changing the format pattern associated with a format character, see the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.","pos":[296,448],"source":" For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class."}]}],"pos":[373284,374775],"yaml":true,"extradata":"MT"},{"content":"A string that contains the short time string representation of the current <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,119],"content":"A string that contains the short time string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"A string that contains the short time string representation of the current <xref href=\"System.DateTime\"></xref> object."}],"pos":[375283,375403],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the specified format and culture-specific format information.","nodes":[{"pos":[0,185],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the specified format and culture-specific format information.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the specified format and culture-specific format information."}],"pos":[376690,376876],"yaml":true},{"content":"The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)). If `format` is `null` or an empty string (\"\"), the standard format specifier, \"G\", is used.  \n  \n The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.","nodes":[{"pos":[0,423],"content":"The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)). If `format` is `null` or an empty string (\"\"), the standard format specifier, \"G\", is used.","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter can contain either a single format specifier character (see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>) or a custom format pattern (see <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>).","pos":[0,331],"source":"The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md))."},{"content":"If <ph id=\"ph1\">`format`</ph> is <ph id=\"ph2\">`null`</ph> or an empty string (\"\"), the standard format specifier, \"G\", is used.","pos":[332,423],"source":" If `format` is `null` or an empty string (\"\"), the standard format specifier, \"G\", is used."}]},{"pos":[430,642],"content":"The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components. The `provider` parameter can be any of the following:","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components.","pos":[0,158],"source":"The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter can be any of the following:","pos":[159,212],"source":" The `provider` parameter can be any of the following:"}]},{"pos":[652,1014],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.","nodes":[{"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.","pos":[0,362],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting conventions are to be reflected in the returned string.","pos":[0,149],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting of the returned string.","pos":[150,362],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string."}]}]},{"pos":[1024,1126],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[1136,1368],"content":"A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.","nodes":[{"content":"A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.","pos":[0,232],"nodes":[{"content":"A custom object that implements the <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> interface.","pos":[0,76],"source":"A custom object that implements the <xref:System.IFormatProvider> interface."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.","pos":[77,232],"source":" Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information."}]}]},{"pos":[1375,1605],"content":"If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.","nodes":[{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> associated with the current culture is used.","pos":[0,120],"source":"If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.","pos":[121,230],"source":" For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>."}]}],"pos":[376887,378509],"yaml":true,"extradata":"MT"},{"content":"A standard or custom date and time format string.","nodes":[{"pos":[0,49],"content":"A standard or custom date and time format string.","nodes":[{"content":"A standard or custom date and time format string.","pos":[0,49]}]}],"pos":[379776,379826],"yaml":true},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[379899,379964],"yaml":true},{"content":"A string representation of value of the current <xref href=\"System.DateTime\"></xref> object as specified by <code>format</code> and <code>provider</code>.","nodes":[{"pos":[0,154],"content":"A string representation of value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A string representation of value of the current <xref href=\"System.DateTime\"></xref> object as specified by <code>format</code> and <code>provider</code>."}],"pos":[380021,380176],"yaml":true},{"content":"The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>.  \n  \n -or-  \n  \n <code>format</code> does not contain a valid custom format pattern.","nodes":[{"pos":[0,166],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> is 1, and it is not one of the format specifier characters defined for <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeFormatInfo\"&gt;&lt;/xref&gt;</ph>.","source":"The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>."},{"pos":[173,177],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[184,251],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> does not contain a valid custom format pattern.","source":"<code>format</code> does not contain a valid custom format pattern."}],"pos":[380318,380578],"yaml":true},{"content":"The date and time is outside the range of dates supported by the calendar used by <code>provider</code>.","nodes":[{"pos":[0,104],"content":"The date and time is outside the range of dates supported by the calendar used by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The date and time is outside the range of dates supported by the calendar used by <code>provider</code>."}],"pos":[380692,380797],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.","nodes":[{"pos":[0,199],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the specified format and the formatting conventions of the current culture."}],"pos":[382244,382444],"yaml":true},{"content":"The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.  \n  \n The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string. If `format` is `null` or an empty string, the general format specifier, 'G', is used.  \n  \n Some uses of this method include:  \n  \n-   Getting a string that displays the date and time in the current culture’s short date and time format. To do this, you use the \"G\" format specifier.  \n  \n-   Getting a string that contains only the month and year. To do this, you use the \"MM/yyyy\" format string. The format string uses the current culture’s date separator.  \n  \n-   Getting a string that contains the date and time in a specific format. For example, the \"MM/dd/yyyyHH:mm\" format string displays the date and time string in a fixed format such as \"19//03//2013 18:06\". The format string uses \"/\" as a fixed date separator regardless of culture-specific settings.  \n  \n-   Getting a date in a condensed format that could be used for serializing a date string. For example, the \"yyyyMMdd\" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.  \n  \n The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.  \n  \n [!code-csharp[System.DateTime.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)]\n [!code-vb[System.DateTime.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)]","nodes":[{"pos":[0,312],"content":"The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.","pos":[0,312],"source":"The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>."}]},{"pos":[319,786],"content":"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string. If `format` is `null` or an empty string, the general format specifier, 'G', is used.","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter should contain either a single format specifier character (see <bpt id=\"p1\">[</bpt>Standard Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>) or a custom format pattern (see <bpt id=\"p2\">[</bpt>Custom Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>) that defines the format of the returned string.","pos":[0,381],"source":"The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string."},{"content":"If <ph id=\"ph1\">`format`</ph> is <ph id=\"ph2\">`null`</ph> or an empty string, the general format specifier, 'G', is used.","pos":[382,467],"source":" If `format` is `null` or an empty string, the general format specifier, 'G', is used."}]},{"pos":[793,826],"content":"Some uses of this method include:","nodes":[{"content":"Some uses of this method include:","pos":[0,33]}]},{"pos":[836,983],"content":"Getting a string that displays the date and time in the current culture’s short date and time format. To do this, you use the \"G\" format specifier.","nodes":[{"content":"Getting a string that displays the date and time in the current culture’s short date and time format. To do this, you use the \"G\" format specifier.","pos":[0,147],"nodes":[{"content":"Getting a string that displays the date and time in the current culture’s short date and time format.","pos":[0,101]},{"content":"To do this, you use the \"G\" format specifier.","pos":[102,147]}]}]},{"pos":[993,1158],"content":"Getting a string that contains only the month and year. To do this, you use the \"MM/yyyy\" format string. The format string uses the current culture’s date separator.","nodes":[{"content":"Getting a string that contains only the month and year. To do this, you use the \"MM/yyyy\" format string. The format string uses the current culture’s date separator.","pos":[0,165],"nodes":[{"content":"Getting a string that contains only the month and year.","pos":[0,55]},{"content":"To do this, you use the \"MM/yyyy\" format string.","pos":[56,104]},{"content":"The format string uses the current culture’s date separator.","pos":[105,165]}]}]},{"pos":[1168,1463],"content":"Getting a string that contains the date and time in a specific format. For example, the \"MM/dd/yyyyHH:mm\" format string displays the date and time string in a fixed format such as \"19//03//2013 18:06\". The format string uses \"/\" as a fixed date separator regardless of culture-specific settings.","nodes":[{"content":"Getting a string that contains the date and time in a specific format. For example, the \"MM/dd/yyyyHH:mm\" format string displays the date and time string in a fixed format such as \"19//03//2013 18:06\". The format string uses \"/\" as a fixed date separator regardless of culture-specific settings.","pos":[0,295],"nodes":[{"content":"Getting a string that contains the date and time in a specific format.","pos":[0,70]},{"content":"For example, the \"MM/dd/yyyyHH:mm\" format string displays the date and time string in a fixed format such as \"19//03//2013 18:06\".","pos":[71,201]},{"content":"The format string uses \"/\" as a fixed date separator regardless of culture-specific settings.","pos":[202,295]}]}]},{"pos":[1473,1702],"content":"Getting a date in a condensed format that could be used for serializing a date string. For example, the \"yyyyMMdd\" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.","nodes":[{"content":"Getting a date in a condensed format that could be used for serializing a date string. For example, the \"yyyyMMdd\" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.","pos":[0,229],"nodes":[{"content":"Getting a date in a condensed format that could be used for serializing a date string.","pos":[0,86]},{"content":"For example, the \"yyyyMMdd\" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.","pos":[87,229]}]}]},{"pos":[1709,1853],"content":"The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.","nodes":[{"content":"The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.","pos":[0,144]}]},{"pos":[1860,2133],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.ToString#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.ToString#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.DateTime.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)]\n[!code-vb[System.DateTime.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)]"}],"pos":[382455,384620],"yaml":true,"extradata":"MT"},{"content":"A standard or custom date and time format string.","nodes":[{"pos":[0,49],"content":"A standard or custom date and time format string.","nodes":[{"content":"A standard or custom date and time format string.","pos":[0,49]}]}],"pos":[385318,385368],"yaml":true},{"content":"A string representation of value of the current <xref href=\"System.DateTime\"></xref> object as specified by <code>format</code>.","nodes":[{"pos":[0,128],"content":"A string representation of value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A string representation of value of the current <xref href=\"System.DateTime\"></xref> object as specified by <code>format</code>."}],"pos":[385425,385554],"yaml":true},{"content":"The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>.  \n  \n -or-  \n  \n <code>format</code> does not contain a valid custom format pattern.","nodes":[{"pos":[0,166],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> is 1, and it is not one of the format specifier characters defined for <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeFormatInfo\"&gt;&lt;/xref&gt;</ph>.","source":"The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <xref href=\"System.Globalization.DateTimeFormatInfo\"></xref>."},{"pos":[173,177],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[184,251],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> does not contain a valid custom format pattern.","source":"<code>format</code> does not contain a valid custom format pattern."}],"pos":[385696,385956],"yaml":true},{"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","nodes":[{"pos":[0,102],"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","nodes":[{"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","pos":[0,102]}]}],"pos":[386070,386173],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the specified culture-specific format information.","nodes":[{"pos":[0,174],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the specified culture-specific format information.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the specified culture-specific format information."}],"pos":[387674,387849],"yaml":true},{"content":"The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.  \n  \n The format of the short date and long time pattern is defined by the `provider` parameter. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.","nodes":[{"pos":[0,200],"content":"The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.","nodes":[{"content":"The value of the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.","pos":[0,200],"source":"The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern."}]},{"pos":[207,351],"content":"The format of the short date and long time pattern is defined by the `provider` parameter. The `provider` parameter can be any of the following:","nodes":[{"content":"The format of the short date and long time pattern is defined by the <ph id=\"ph1\">`provider`</ph> parameter.","pos":[0,90],"source":"The format of the short date and long time pattern is defined by the `provider` parameter."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter can be any of the following:","pos":[91,144],"source":" The `provider` parameter can be any of the following:"}]},{"pos":[361,723],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.","nodes":[{"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.","pos":[0,362],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting conventions are to be reflected in the returned string.","pos":[0,149],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting of the returned string.","pos":[150,362],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string."}]}]},{"pos":[733,835],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[845,1077],"content":"A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.","nodes":[{"content":"A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.","pos":[0,232],"nodes":[{"content":"A custom object that implements the <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> interface.","pos":[0,76],"source":"A custom object that implements the <xref:System.IFormatProvider> interface."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.","pos":[77,232],"source":" Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information."}]}]},{"pos":[1084,1321],"content":"If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.","nodes":[{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object associated with the current culture is used.","pos":[0,127],"source":"If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.","pos":[128,237],"source":" For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>."}]}],"pos":[387860,389194],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[389827,389892],"yaml":true},{"content":"A string representation of value of the current <xref href=\"System.DateTime\"></xref> object as specified by <code>provider</code>.","nodes":[{"pos":[0,130],"content":"A string representation of value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A string representation of value of the current <xref href=\"System.DateTime\"></xref> object as specified by <code>provider</code>."}],"pos":[389949,390080],"yaml":true},{"content":"The date and time is outside the range of dates supported by the calendar used by <code>provider</code>.","nodes":[{"pos":[0,104],"content":"The date and time is outside the range of dates supported by the calendar used by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The date and time is outside the range of dates supported by the calendar used by <code>provider</code>."}],"pos":[390246,390351],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the formatting conventions of the current culture.","nodes":[{"pos":[0,174],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the formatting conventions of the current culture.","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the formatting conventions of the current culture."}],"pos":[391735,391910],"yaml":true},{"content":"The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'). To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method. To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method. To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.  \n  \n This method uses formatting information derived from the current culture. In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>. Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value.","nodes":[{"pos":[0,619],"content":"The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'). To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method. To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method. To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.","nodes":[{"content":"The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'). To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method. To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method. To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.","pos":[0,619],"nodes":[{"content":"The value of the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is formatted using the general date and time format specifier ('G').","pos":[0,123],"source":"The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G')."},{"content":"To format it using a specific date and time format specifier, call the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.","pos":[124,253],"source":" To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method."},{"content":"To format it using the general date and time format specifier ('G') for a specific culture, call the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.IFormatProvider%29&gt;</ph> method.","pos":[254,422],"source":" To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method."},{"content":"To format it using a specific date and time format specifier and the conventions of a specific culture, call the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method.","pos":[423,619],"source":" To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method."}]}]},{"pos":[626,1359],"content":"This method uses formatting information derived from the current culture. In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>. Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value.","nodes":[{"content":"This method uses formatting information derived from the current culture.","pos":[0,73]},{"content":"In particular, it combines the custom format strings returned by the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph4\">`Thread.CurrentThread.CurrentCulture.DateTimeFormat`</ph> property.","pos":[74,430],"source":" In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.","pos":[431,540],"source":" For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>."},{"content":"Other overloads of the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method enable you to specify the culture whose formatting to use and to define the output pattern of the <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value.","pos":[541,733],"source":" Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value."}]}],"pos":[391921,393285],"yaml":true,"extradata":"MT"},{"content":"A string representation of the value of the current <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,96],"content":"A string representation of the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"A string representation of the value of the current <xref href=\"System.DateTime\"></xref> object."}],"pos":[394127,394224],"yaml":true},{"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","nodes":[{"pos":[0,102],"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","nodes":[{"content":"The date and time is outside the range of dates supported by the calendar used by the current culture.","pos":[0,102]}]}],"pos":[394390,394493],"yaml":true},{"content":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to Coordinated Universal Time (UTC).","nodes":[{"pos":[0,114],"content":"Converts the value of the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to Coordinated Universal Time (UTC).","source":"Converts the value of the current <xref href=\"System.DateTime\"></xref> object to Coordinated Universal Time (UTC)."}],"pos":[395919,396034],"yaml":true},{"content":"The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.  \n  \n> [!IMPORTANT]\n>  On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.  \n  \n Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.  \n  \n|Kind|Results|  \n|----------|-------------|  \n|<xref:System.DateTimeKind.Utc>|No conversion is performed.|  \n|<xref:System.DateTimeKind.Local>|The current <xref:System.DateTime> object is converted to UTC.|  \n|<xref:System.DateTimeKind.Unspecified>|The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>.|  \n  \n> [!NOTE]\n>  The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC. To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.  \n  \n If the date and time instance value is an ambiguous time, this method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)","nodes":[{"pos":[0,349],"content":"The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.","nodes":[{"content":"The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.","pos":[0,349],"nodes":[{"content":"The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset.","pos":[0,85]},{"content":"For more information about the UTC offset, see <ph id=\"ph1\">&lt;xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName&gt;</ph>.","pos":[86,197],"source":" For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>."},{"content":"The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[198,349],"source":" The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object."}]}]},{"pos":[357,722],"content":"[!IMPORTANT]\n On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.","leadings":["","> "],"nodes":[{"content":" On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.","pos":[13,363],"nodes":[{"content":"On <ph id=\"ph1\">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph> systems, the <ph id=\"ph2\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method recognizes only the current adjustment rule when converting from local time to UTC.","pos":[1,191],"source":" On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC."},{"content":"As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.","pos":[192,350]}]}]},{"pos":[729,1008],"content":"Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.","nodes":[{"content":"Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.","pos":[0,279],"nodes":[{"content":"Starting with the .NET Framework version 2.0, the value returned by the <ph id=\"ph1\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method is determined by the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the current <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object.","pos":[0,227],"source":"Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object."},{"content":"The following table describes the possible results.","pos":[228,279]}]}]},{"pos":[1015,1019],"content":"Kind","nodes":[{"content":"Kind","pos":[0,4]}]},{"pos":[1020,1027],"content":"Results","nodes":[{"content":"Results","pos":[0,7]}]},{"pos":[1061,1091],"content":"<xref:System.DateTimeKind.Utc>","nodes":[]},{"pos":[1092,1119],"content":"No conversion is performed.","nodes":[{"content":"No conversion is performed.","pos":[0,27]}]},{"pos":[1124,1156],"content":"<xref:System.DateTimeKind.Local>","nodes":[]},{"pos":[1157,1219],"content":"The current <xref:System.DateTime> object is converted to UTC.","nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is converted to UTC.","pos":[0,62],"source":"The current <xref:System.DateTime> object is converted to UTC."}]},{"pos":[1224,1262],"content":"<xref:System.DateTimeKind.Unspecified>","nodes":[]},{"pos":[1263,1443],"content":"The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>.","nodes":[{"content":"The current <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object is assumed to be a local time, and the conversion is performed as if <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> were <ph id=\"ph3\">&lt;xref:System.DateTimeKind.Local&gt;</ph>.","pos":[0,180],"source":"The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>."}]},{"pos":[1452,1874],"content":"[!NOTE]\n The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC. To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC. To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.","pos":[8,420],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method converts a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value from local time to UTC.","pos":[1,117],"source":" The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC."},{"content":"To convert the time in a non-local time zone to UTC, use the <ph id=\"ph1\">&lt;xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> method.","pos":[118,298],"source":" To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method."},{"content":"To convert a time whose offset from UTC is known, use the <ph id=\"ph1\">&lt;xref:System.DateTimeOffset.ToUniversalTime%2A&gt;</ph> method.","pos":[299,412],"source":" To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method."}]}]},{"pos":[1881,2371],"content":"If the date and time instance value is an ambiguous time, this method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)","nodes":[{"content":"If the date and time instance value is an ambiguous time, this method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)","pos":[0,490],"nodes":[{"content":"If the date and time instance value is an ambiguous time, this method assumes that it is a standard time.","pos":[0,105]},{"content":"(An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC.","pos":[106,376]},{"content":"(An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)","pos":[377,490]}]}]}],"pos":[396045,398435],"yaml":true,"extradata":"MT"},{"content":"An object whose <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Utc\"></xref>, and whose value is the UTC equivalent to the value of the current <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MaxValue\"></xref> if the converted value is too large to be represented by a <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MinValue\"></xref> if the converted value is too small to be represented by a <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,532],"content":"An object whose <ph id=\"ph1\">&lt;xref href=\"System.DateTime.Kind\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.DateTimeKind.Utc\"&gt;&lt;/xref&gt;</ph>, and whose value is the UTC equivalent to the value of the current <ph id=\"ph3\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph4\">&lt;xref href=\"System.DateTime.MaxValue\"&gt;&lt;/xref&gt;</ph> if the converted value is too large to be represented by a <ph id=\"ph5\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph6\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> if the converted value is too small to be represented by a <ph id=\"ph7\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"An object whose <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Utc\"></xref>, and whose value is the UTC equivalent to the value of the current <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MaxValue\"></xref> if the converted value is too large to be represented by a <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MinValue\"></xref> if the converted value is too small to be represented by a <xref href=\"System.DateTime\"></xref> object."}],"pos":[399638,400171],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.","nodes":[{"pos":[0,265],"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.","source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded."}],"pos":[402037,402303],"yaml":true},{"content":"The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses a string that can contain date, time, and time zone information. It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method does not throw an exception if the conversion fails.  \n  \n This method attempts to ignore unrecognized data and parse `s` completely. If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`. If `s` contains a date but no time, 12:00 midnight is used as the default time. If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. Any leading, inner, or trailing white space characters in `s` are ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).  \n  \n Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the `provider` parameter, which can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.  \n  \n-   A custom <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.  \n  \n If `provider` is `null`, the current culture is used.  \n  \n If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully. If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`.  \n  \n The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it. It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Although valid, this value is ignored. Inner white space is permitted in the date and time elements of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Although valid, this value is ignored. Leading white space is permitted in the date and time elements of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Although valid, this value is ignored. Trailing white space is permitted in the date and time elements of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces. This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.None>|Although valid, this value is ignored.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method using either the \"o\", \"r\", or \"u\" standard format specifiers.|  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> unless a `styles` flag indicates otherwise. If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method performs any necessary time conversion and returns one of the following:  \n  \n-   A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n-   Or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag, a <xref:System.DateTime> value whose date and time reflect UTC and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag.  \n  \n## Parsing Custom Cultures  \n If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed. A custom culture date and time string can be complicated and difficult to parse. The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail. In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.  \n  \n For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=fullName> class.","nodes":[{"pos":[0,580],"content":"The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses a string that can contain date, time, and time zone information. It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method does not throw an exception if the conversion fails.","nodes":[{"content":"The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses a string that can contain date, time, and time zone information. It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method does not throw an exception if the conversion fails.","pos":[0,580],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method parses a string that can contain date, time, and time zone information.","pos":[0,242],"source":"The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses a string that can contain date, time, and time zone information."},{"content":"It is similar to the <ph id=\"ph1\">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method, except that the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method does not throw an exception if the conversion fails.","pos":[243,580],"source":" It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method does not throw an exception if the conversion fails."}]}]},{"pos":[587,1477],"content":"This method attempts to ignore unrecognized data and parse `s` completely. If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`. If `s` contains a date but no time, 12:00 midnight is used as the default time. If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. Any leading, inner, or trailing white space characters in `s` are ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).","nodes":[{"content":"This method attempts to ignore unrecognized data and parse <ph id=\"ph1\">`s`</ph> completely.","pos":[0,74],"source":"This method attempts to ignore unrecognized data and parse `s` completely."},{"content":"If <ph id=\"ph1\">`s`</ph> contains a time but no date, the method by default substitutes the current date or, if <ph id=\"ph2\">`styles`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault&gt;</ph> flag, it substitutes <ph id=\"ph4\">`DateTime.Date.MinValue`</ph>.","pos":[75,301],"source":" If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`."},{"content":"If <ph id=\"ph1\">`s`</ph> contains a date but no time, 12:00 midnight is used as the default time.","pos":[302,381],"source":" If `s` contains a date but no time, 12:00 midnight is used as the default time."},{"content":"If a date is present but its year component consists of only two digits, it is converted to a year in the <ph id=\"ph1\">`provider`</ph> parameter's current calendar based on the value of the <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt;</ph> property.","pos":[382,644],"source":" If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."},{"content":"Any leading, inner, or trailing white space characters in <ph id=\"ph1\">`s`</ph> are ignored.","pos":[645,719],"source":" Any leading, inner, or trailing white space characters in `s` are ignored."},{"content":"The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).","pos":[720,890]}]},{"pos":[1484,1668],"content":"Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the <ph id=\"ph1\">`provider`</ph> parameter, which can be any of the following:","source":"Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the `provider` parameter, which can be any of the following:"},{"pos":[1678,2003],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `s`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting is used in the <ph id=\"ph2\">`s`</ph> parameter.","pos":[0,123],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting used in <ph id=\"ph3\">`s`</ph>.","pos":[124,325],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `s`."}]},{"pos":[2013,2109],"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the formatting used in <ph id=\"ph2\">`s`</ph>.","source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`."},{"pos":[2119,2357],"content":"A custom <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.","nodes":[{"content":"A custom <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> implementation.","pos":[0,54],"source":"A custom <xref:System.IFormatProvider> implementation."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the formatting used in <ph id=\"ph3\">`s`</ph>.","pos":[55,238],"source":" Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`."}]},{"pos":[2364,2417],"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the current culture is used.","source":"If `provider` is `null`, the current culture is used."},{"pos":[2424,2715],"content":"If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully. If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`.","nodes":[{"content":"If <ph id=\"ph1\">`s`</ph> is the string representation of a leap day in a leap year in the current calendar, the method parses <ph id=\"ph2\">`s`</ph> successfully.","pos":[0,125],"source":"If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully."},{"content":"If <ph id=\"ph1\">`s`</ph> is the string representation of a leap day in a non-leap year in the current calendar of <ph id=\"ph2\">`provider`</ph>, the parse operation fails and the method returns <ph id=\"ph3\">`false`</ph>.","pos":[126,291],"source":" If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`."}]},{"pos":[2722,2976],"content":"The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it. It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table.","nodes":[{"content":"The <ph id=\"ph1\">`styles`</ph> parameter defines the precise interpretation of the parsed string and how the parse operation should handle it.","pos":[0,124],"source":"The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it."},{"content":"It can be one or more members of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration, as described in the following table.","pos":[125,254],"source":" It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table."}]},{"pos":[2983,3004],"content":"DateTimeStyles member","nodes":[{"content":"DateTimeStyles member","pos":[0,21]}]},{"pos":[3005,3016],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[3071,3131],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[3132,4061],"content":"Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.","nodes":[{"content":"Parses <ph id=\"ph1\">`s`</ph> and, if necessary, converts it to UTC.","pos":[0,49],"source":"Parses `s` and, if necessary, converts it to UTC."},{"content":"If <ph id=\"ph1\">`s`</ph> includes a time zone offset, or if <ph id=\"ph2\">`s`</ph> contains no time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id=\"ph5\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id=\"ph6\">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id=\"ph7\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph8\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[50,477],"source":" If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If <ph id=\"ph1\">`s`</ph> indicates that it represents UTC, or if <ph id=\"ph2\">`s`</ph> does not contain time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id=\"ph5\">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id=\"ph6\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph7\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[478,885],"source":" If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"In all other cases, the flag has no effect.","pos":[886,929]}]},{"pos":[4066,4124],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[4125,4232],"content":"Although valid, this value is ignored. Inner white space is permitted in the date and time elements of `s`.","nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]},{"content":"Inner white space is permitted in the date and time elements of <ph id=\"ph1\">`s`</ph>.","pos":[39,107],"source":" Inner white space is permitted in the date and time elements of `s`."}]},{"pos":[4237,4297],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[4298,4407],"content":"Although valid, this value is ignored. Leading white space is permitted in the date and time elements of `s`.","nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]},{"content":"Leading white space is permitted in the date and time elements of <ph id=\"ph1\">`s`</ph>.","pos":[39,109],"source":" Leading white space is permitted in the date and time elements of `s`."}]},{"pos":[4412,4473],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[4474,4584],"content":"Although valid, this value is ignored. Trailing white space is permitted in the date and time elements of `s`.","nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]},{"content":"Trailing white space is permitted in the date and time elements of <ph id=\"ph1\">`s`</ph>.","pos":[39,110],"source":" Trailing white space is permitted in the date and time elements of `s`."}]},{"pos":[4589,4648],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[4649,4946],"content":"Specifies that `s` may contain leading, inner, and trailing white spaces. This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.","nodes":[{"content":"Specifies that <ph id=\"ph1\">`s`</ph> may contain leading, inner, and trailing white spaces.","pos":[0,73],"source":"Specifies that `s` may contain leading, inner, and trailing white spaces."},{"content":"This is the default behavior.","pos":[74,103]},{"content":"It cannot be overridden by supplying a more restrictive <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration value such as <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph>.","pos":[104,297],"source":" It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>."}]},{"pos":[4951,5005],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[5006,5349],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent a local time.","pos":[0,95],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[96,343],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[5354,5412],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[5413,5789],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent UTC.","pos":[0,86],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[87,376],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[5794,5841],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[5842,5880],"content":"Although valid, this value is ignored.","nodes":[{"content":"Although valid, this value is ignored.","pos":[0,38]}]},{"pos":[5885,5941],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[5942,6386],"content":"For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method using either the \"o\", \"r\", or \"u\" standard format specifiers.","nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method using either the \"o\", \"r\", or \"u\" standard format specifiers.","pos":[0,444],"nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value with its <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,248],"source":"For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"Typically, such a string is created by calling the <ph id=\"ph1\">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> method using either the \"o\", \"r\", or \"u\" standard format specifiers.","pos":[249,444],"source":" Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method using either the \"o\", \"r\", or \"u\" standard format specifiers."}]}]},{"pos":[6394,7093],"content":"If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> unless a `styles` flag indicates otherwise. If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method performs any necessary time conversion and returns one of the following:","nodes":[{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method returns a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph4\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph5\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> unless a <ph id=\"ph6\">`styles`</ph> flag indicates otherwise.","pos":[0,396],"source":"If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> unless a `styles` flag indicates otherwise."},{"content":"If <ph id=\"ph1\">`s`</ph> includes time zone or time zone offset information, the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method performs any necessary time conversion and returns one of the following:","pos":[397,699],"source":" If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method performs any necessary time conversion and returns one of the following:"}]},{"pos":[7103,7282],"content":"A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value whose date and time reflect the local time and whose <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,179],"source":"A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[7292,7556],"content":"Or, if <ph id=\"ph1\">`styles`</ph> includes the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles.AdjustToUniversal&gt;</ph> flag, a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value whose date and time reflect UTC and whose <ph id=\"ph4\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph5\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","source":"Or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag, a <xref:System.DateTime> value whose date and time reflect UTC and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>."},{"pos":[7563,7681],"content":"This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag.","nodes":[{"content":"This behavior can be overridden by using the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag.","pos":[0,118],"source":"This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag."}]},{"pos":[7690,7713],"content":"Parsing Custom Cultures","linkify":"Parsing Custom Cultures","nodes":[{"content":"Parsing Custom Cultures","pos":[0,23]}]},{"pos":[7717,8342],"content":"If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed. A custom culture date and time string can be complicated and difficult to parse. The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail. In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.","nodes":[{"content":"If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed. A custom culture date and time string can be complicated and difficult to parse. The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail. In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.","pos":[0,625],"nodes":[{"content":"If you parse a date and time string generated for a custom culture, use the <ph id=\"ph1\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> method instead of the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> method to improve the probability that the parse operation will succeed.","pos":[0,245],"source":"If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed."},{"content":"A custom culture date and time string can be complicated and difficult to parse.","pos":[246,326]},{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> method attempts to parse a string with several implicit parse patterns, all of which might fail.","pos":[327,462],"source":" The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail."},{"content":"In contrast, the <ph id=\"ph1\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.","pos":[463,625],"source":" In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed."}]}]},{"pos":[8349,8488],"content":"For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=fullName> class.","nodes":[{"content":"For more information about custom cultures, see the <ph id=\"ph1\">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=fullName&gt;</ph> class.","pos":[0,139],"source":"For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=fullName> class."}]}],"pos":[402314,410852],"yaml":true,"extradata":"MT"},{"content":"A string containing a date and time to convert.","nodes":[{"pos":[0,47],"content":"A string containing a date and time to convert.","nodes":[{"content":"A string containing a date and time to convert.","pos":[0,47]}]}],"pos":[411585,411633],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>s</code>.","nodes":[{"pos":[0,85],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>s</code>."}],"pos":[411706,411792],"yaml":true},{"content":"A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"pos":[0,240],"content":"A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"content":"A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date.","pos":[0,147]},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.None\"&gt;&lt;/xref&gt;</ph>.","pos":[148,240],"source":" A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>."}]}],"pos":[411876,412117],"yaml":true},{"content":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if the <code>s</code> parameter is `null`, is an empty string (\"\"), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.","nodes":[{"pos":[0,445],"content":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if the <code>s</code> parameter is `null`, is an empty string (\"\"), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> if the conversion failed.","pos":[0,246],"source":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed."},{"content":"The conversion fails if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>, is an empty string (\"\"), or does not contain a valid string representation of a date and time.","pos":[247,405],"source":" The conversion fails if the <code>s</code> parameter is `null`, is an empty string (\"\"), or does not contain a valid string representation of a date and time."},{"content":"This parameter is passed uninitialized.","pos":[406,445]}]}],"pos":[412181,412627],"yaml":true},{"content":"`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`."}],"pos":[412685,412774],"yaml":true},{"content":"<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>).","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value."},{"pos":[105,109],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[116,401],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> contains an invalid combination of <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values (for example, both <ph id=\"ph3\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"&gt;&lt;/xref&gt;</ph>).","source":"<code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>)."}],"pos":[412920,413336],"yaml":true},{"content":"<code>provider</code> is a neutral culture and cannot be used in a parsing operation.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;provider&lt;/code&gt;</ph> is a neutral culture and cannot be used in a parsing operation.","source":"<code>provider</code> is a neutral culture and cannot be used in a parsing operation."}],"pos":[413438,413524],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent and returns a value that indicates whether the conversion succeeded.","nodes":[{"pos":[0,187],"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent and returns a value that indicates whether the conversion succeeded.","source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent and returns a value that indicates whether the conversion succeeded."}],"pos":[415052,415240],"yaml":true},{"content":"The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.  \n  \n The string `s` is parsed using formatting information in the current <xref:System.Globalization.DateTimeFormatInfo> object, which is supplied implicitly by the current thread culture.  \n  \n This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date. If `s` contains only a date and no time, this method assumes the time is 12:00 midnight. If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. Any leading, inner, or trailing white space character in `s` is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).  \n  \n Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results. If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.  \n  \n If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully. If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`.  \n  \n If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns. If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns.","nodes":[{"pos":[0,354],"content":"The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method is similar to the <ph id=\"ph2\">&lt;xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName&gt;</ph> method, except that the <ph id=\"ph3\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29&gt;</ph> method does not throw an exception if the conversion fails.","pos":[0,354],"source":"The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails."}]},{"pos":[361,544],"content":"The string <ph id=\"ph1\">`s`</ph> is parsed using formatting information in the current <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object, which is supplied implicitly by the current thread culture.","source":"The string `s` is parsed using formatting information in the current <xref:System.Globalization.DateTimeFormatInfo> object, which is supplied implicitly by the current thread culture."},{"pos":[551,1261],"content":"This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date. If `s` contains only a date and no time, this method assumes the time is 12:00 midnight. If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. Any leading, inner, or trailing white space character in `s` is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).","nodes":[{"content":"This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date.","pos":[0,136]},{"content":"If <ph id=\"ph1\">`s`</ph> contains only a date and no time, this method assumes the time is 12:00 midnight.","pos":[137,225],"source":" If `s` contains only a date and no time, this method assumes the time is 12:00 midnight."},{"content":"If <ph id=\"ph1\">`s`</ph> includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt;</ph> property.","pos":[226,466],"source":" If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property."},{"content":"Any leading, inner, or trailing white space character in <ph id=\"ph1\">`s`</ph> is ignored.","pos":[467,539],"source":" Any leading, inner, or trailing white space character in `s` is ignored."},{"content":"The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).","pos":[540,710]}]},{"pos":[1268,1962],"content":"Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results. If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.","nodes":[{"content":"Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results. If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.","pos":[0,694],"nodes":[{"content":"Because the <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results.","pos":[0,333],"source":"Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results."},{"content":"If a specific date and time format will be parsed across different locales, use the <ph id=\"ph1\">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method or one of the overloads of the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> method and provide a format specifier.","pos":[334,694],"source":" If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier."}]}]},{"pos":[1969,2264],"content":"If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully. If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`.","nodes":[{"content":"If <ph id=\"ph1\">`s`</ph> is the string representation of a leap day in a leap year in the current calendar, the method parses <ph id=\"ph2\">`s`</ph> successfully.","pos":[0,125],"source":"If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully."},{"content":"If <ph id=\"ph1\">`s`</ph> is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns <ph id=\"ph2\">`false`</ph>.","pos":[126,295],"source":" If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`."}]},{"pos":[2271,2721],"content":"If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns. If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns.","nodes":[{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, <ph id=\"ph2\">`result`</ph> contains a <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph4\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph5\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> when the method returns.","pos":[0,216],"source":"If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns."},{"content":"If the string to be parsed contains time zone information, <ph id=\"ph1\">`result`</ph> contains a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> when the method returns.","pos":[217,450],"source":" If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns."}]}],"pos":[415251,417985],"yaml":true,"extradata":"MT"},{"content":"A string containing a date and time to convert.","nodes":[{"pos":[0,47],"content":"A string containing a date and time to convert.","nodes":[{"content":"A string containing a date and time to convert.","pos":[0,47]}]}],"pos":[418760,418808],"yaml":true},{"content":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if the <code>s</code> parameter is `null`, is an empty string (\"\"), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.","nodes":[{"pos":[0,445],"content":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if the <code>s</code> parameter is `null`, is an empty string (\"\"), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> if the conversion failed.","pos":[0,246],"source":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed."},{"content":"The conversion fails if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>, is an empty string (\"\"), or does not contain a valid string representation of a date and time.","pos":[247,405],"source":" The conversion fails if the <code>s</code> parameter is `null`, is an empty string (\"\"), or does not contain a valid string representation of a date and time."},{"content":"This parameter is passed uninitialized.","pos":[406,445]}]}],"pos":[418872,419318],"yaml":true},{"content":"`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`."}],"pos":[419376,419465],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded.","nodes":[{"pos":[0,351],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent using the specified format, culture-specific format information, and style.","pos":[0,194],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format, culture-specific format information, and style."},{"content":"The format of the string representation must match the specified format exactly.","pos":[195,275]},{"content":"The method returns a value that indicates whether the conversion succeeded.","pos":[276,351]}]}],"pos":[421420,421772],"yaml":true},{"content":"The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.  \n  \n The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter. If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`. If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00). If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag. The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters.  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter. The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \n  \n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n> [!NOTE]\n>  Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.  \n  \n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime>value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|","nodes":[{"pos":[0,716],"content":"The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date, which must be in the format defined by the <ph id=\"ph2\">`format`</ph> parameter.","pos":[0,298],"source":"The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter."},{"content":"It is similar to the <ph id=\"ph1\">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method, except that the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method does not throw an exception if the conversion fails.","pos":[299,716],"source":" It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails."}]},{"pos":[723,1549],"content":"The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter. If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`. If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00). If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag. The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter contains the date and time to parse and must be in a format defined by the <ph id=\"ph2\">`format`</ph> parameter.","pos":[0,112],"source":"The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter."},{"content":"If date, time, and time zone elements are present in <ph id=\"ph1\">`s`</ph>, they must also appear in the order specified by <ph id=\"ph2\">`format`</ph>.","pos":[113,228],"source":" If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`."},{"content":"If <ph id=\"ph1\">`format`</ph> defines a date with no time element and the parse operation succeeds, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value has a time of midnight (00:00:00).","pos":[229,388],"source":" If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00)."},{"content":"If <ph id=\"ph1\">`format`</ph> defines a time with no date element and the parse operation succeeds, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value by default has a date of <ph id=\"ph3\">`DateTime.Now.Date`</ph>, or it has a date of <ph id=\"ph4\">`DateTime.MinValue.Date`</ph> if <ph id=\"ph5\">`styles`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag.","pos":[389,703],"source":" If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag."},{"content":"The <ph id=\"ph1\">`style`</ph> parameter determines whether the <ph id=\"ph2\">`s`</ph> parameter can contain leading, inner, or trailing white space characters.","pos":[704,826],"source":" The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters."}]},{"pos":[1556,2848],"content":"If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,187],"source":"If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This behavior can be changed by using the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, which returns a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, or by using the <ph id=\"ph5\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> and <ph id=\"ph6\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flags, which returns a <ph id=\"ph7\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph8\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph9\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[188,760],"source":" This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If s contains time zone information, the time is converted to local time, if necessary, and the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[761,1005],"source":" If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This behavior can be changed by using the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[1006,1292],"source":" This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[2855,3369],"content":"The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter. The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter contains a pattern that corresponds to the expected format of the <ph id=\"ph2\">`s`</ph> parameter.","pos":[0,103],"source":"The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter."},{"content":"The pattern in the <ph id=\"ph1\">`format`</ph> parameter consists of one or more custom format specifiers from the <bpt id=\"p1\">[</bpt>Custom Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> table, or a single standard format specifier, which identifies a predefined pattern, from the <bpt id=\"p2\">[</bpt>Standard Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> table.","pos":[104,514],"source":" The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table."}]},{"pos":[3376,3676],"content":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","nodes":[{"content":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the <ph id=\"ph1\">`provider`</ph> parameter and the widest form of each custom format specifier.","pos":[0,177],"source":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier."},{"content":"For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","pos":[178,300]}]},{"pos":[3684,4094],"content":"[!NOTE]\n Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.","leadings":["","> "],"nodes":[{"content":" Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.","pos":[8,408],"nodes":[{"content":"Rather than requiring that <ph id=\"ph1\">`s`</ph> conform to a single format for the parse operation to succeed, you can call the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method and specify multiple permitted formats.","pos":[1,345],"source":" Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method and specify multiple permitted formats."},{"content":"This makes the parse operation more likely to succeed.","pos":[346,400]}]}]},{"pos":[4101,4408],"content":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:","nodes":[{"content":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <ph id=\"ph1\">`s`</ph> are defined by the <ph id=\"ph2\">`provider`</ph> parameter, as is the precise format of <ph id=\"ph3\">`s`</ph> if <ph id=\"ph4\">`format`</ph> is a standard format specifier string.","pos":[0,253],"source":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter can be any of the following:","pos":[254,307],"source":" The `provider` parameter can be any of the following:"}]},{"pos":[4418,4701],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id=\"ph2\">`s`</ph>.","pos":[0,99],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id=\"ph3\">`s`</ph>.","pos":[100,283],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`."}]},{"pos":[4711,4813],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[4823,5097],"content":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.","nodes":[{"content":"A custom <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id=\"ph2\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.","pos":[0,274],"source":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information."}]},{"pos":[5104,5228],"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."},{"pos":[5235,5798],"content":"The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.","nodes":[{"content":"The <ph id=\"ph1\">`styles`</ph> parameter includes one or more members of the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration that determine whether and where white space not defined by <ph id=\"ph3\">`format`</ph> can appear in <ph id=\"ph4\">`s`</ph> and that control the precise behavior of the parse operation.","pos":[0,262],"source":"The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation."},{"content":"The following table describes how each member of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration affects the operation of the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method.","pos":[263,563],"source":" The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method."}]},{"pos":[5805,5826],"content":"DateTimeStyles member","nodes":[{"content":"DateTimeStyles member","pos":[0,21]}]},{"pos":[5827,5838],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[5893,5953],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[5954,6883],"content":"Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.","nodes":[{"content":"Parses <ph id=\"ph1\">`s`</ph> and, if necessary, converts it to UTC.","pos":[0,49],"source":"Parses `s` and, if necessary, converts it to UTC."},{"content":"If <ph id=\"ph1\">`s`</ph> includes a time zone offset, or if <ph id=\"ph2\">`s`</ph> contains no time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id=\"ph5\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id=\"ph6\">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id=\"ph7\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph8\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[50,477],"source":" If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If <ph id=\"ph1\">`s`</ph> indicates that it represents UTC, or if <ph id=\"ph2\">`s`</ph> does not contain time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id=\"ph5\">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id=\"ph6\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph7\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[478,885],"source":" If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"In all other cases, the flag has no effect.","pos":[886,929]}]},{"pos":[6888,6946],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[6947,7053],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear between any individual date or time element.","source":"Specifies that white space not defined by `format` can appear between any individual date or time element."},{"pos":[7058,7118],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[7119,7205],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear at the beginning of <ph id=\"ph2\">`s`</ph>.","source":"Specifies that white space not defined by `format` can appear at the beginning of `s`."},{"pos":[7210,7271],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[7272,7352],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear at the end of <ph id=\"ph2\">`s`</ph>.","source":"Specifies that white space not defined by `format` can appear at the end of `s`."},{"pos":[7357,7416],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[7417,7514],"content":"Specifies that <ph id=\"ph1\">`s`</ph> may contain leading, inner, and trailing white spaces not defined by <ph id=\"ph2\">`format`</ph>.","source":"Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`."},{"pos":[7519,7573],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[7574,7916],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime>value is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent a local time.","pos":[0,95],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>value is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[96,342],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime>value is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[7921,7979],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[7980,8356],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent UTC.","pos":[0,86],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[87,376],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[8361,8424],"content":"<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>","nodes":[]},{"pos":[8425,8536],"content":"If <ph id=\"ph1\">`s`</ph> contains time without date information, the date of the return value is set to <ph id=\"ph2\">`DateTime.MinValue.Date`</ph>.","source":"If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`."},{"pos":[8541,8588],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[8589,9238],"content":"The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is parsed using default values.","pos":[0,49],"source":"The `s` parameter is parsed using default values."},{"content":"No white space other than that present in <ph id=\"ph1\">`format`</ph> is allowed.","pos":[50,112],"source":" No white space other than that present in `format` is allowed."},{"content":"If <ph id=\"ph1\">`s`</ph> lacks a date component, the date of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value is set to 1/1/0001.","pos":[113,217],"source":" If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001."},{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[218,412],"source":" If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If time zone information is present in <ph id=\"ph1\">`s`</ph>, the time is converted to local time and the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[413,649],"source":" If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[9243,9299],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[9300,9595],"content":"For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.","nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.","pos":[0,295],"nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion to a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value with its <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,222],"source":"For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This flag primarily prevents the conversion of UTC times to local times.","pos":[223,295]}]}]}],"pos":[421783,431422],"yaml":true,"extradata":"MT"},{"content":"A string containing a date and time to convert.","nodes":[{"pos":[0,47],"content":"A string containing a date and time to convert.","nodes":[{"content":"A string containing a date and time to convert.","pos":[0,47]}]}],"pos":[432670,432718],"yaml":true},{"content":"The required format of <code>s</code>.","nodes":[{"pos":[0,38],"content":"The required format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The required format of <code>s</code>."}],"pos":[432780,432819],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>s</code>.","nodes":[{"pos":[0,85],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>s</code>."}],"pos":[432892,432978],"yaml":true},{"content":"A bitwise combination of one or more enumeration values that indicate the permitted format of <code>s</code>.","nodes":[{"pos":[0,109],"content":"A bitwise combination of one or more enumeration values that indicate the permitted format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A bitwise combination of one or more enumeration values that indicate the permitted format of <code>s</code>."}],"pos":[433061,433171],"yaml":true},{"content":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if either the <code>s</code> or <code>format</code> parameter is `null`, is an empty string, or does not contain a date and time that correspond to the pattern specified in <code>format</code>. This parameter is passed uninitialized.","nodes":[{"pos":[0,501],"content":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if either the <code>s</code> or <code>format</code> parameter is `null`, is an empty string, or does not contain a date and time that correspond to the pattern specified in <code>format</code>. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> if the conversion failed.","pos":[0,246],"source":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed."},{"content":"The conversion fails if either the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">format</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>, is an empty string, or does not contain a date and time that correspond to the pattern specified in <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">format</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","pos":[247,461],"source":" The conversion fails if either the <code>s</code> or <code>format</code> parameter is `null`, is an empty string, or does not contain a date and time that correspond to the pattern specified in <code>format</code>."},{"content":"This parameter is passed uninitialized.","pos":[462,501]}]}],"pos":[433235,433737],"yaml":true},{"content":"`true` if <code>s</code> was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>s</code> was converted successfully; otherwise, `false`."}],"pos":[433795,433870],"yaml":true},{"content":"<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>).","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value."},{"pos":[105,109],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[116,401],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> contains an invalid combination of <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values (for example, both <ph id=\"ph3\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"&gt;&lt;/xref&gt;</ph>).","source":"<code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>)."}],"pos":[434021,434437],"yaml":true},{"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly. The method returns a value that indicates whether the conversion succeeded.","nodes":[{"pos":[0,378],"content":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly. The method returns a value that indicates whether the conversion succeeded.","nodes":[{"content":"Converts the specified string representation of a date and time to its <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> equivalent using the specified array of formats, culture-specific format information, and style.","pos":[0,204],"source":"Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified array of formats, culture-specific format information, and style."},{"content":"The format of the string representation must match at least one of the specified formats exactly.","pos":[205,302]},{"content":"The method returns a value that indicates whether the conversion succeeded.","pos":[303,378]}]}],"pos":[436349,436728],"yaml":true},{"content":"The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails.  \n  \n The `s` parameter contains the date and time to parse. If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.  \n  \n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed. The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \n  \n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".  \n  \n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \n  \n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \n  \n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo>object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \n  \n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.  \n  \n|DateTimeStyles member|Description|  \n|---------------------------|-----------------|  \n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|","nodes":[{"pos":[0,611],"content":"The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date that matches any one of the patterns assigned to the <ph id=\"ph2\">`formats`</ph> parameter.","pos":[0,314],"source":"The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter."},{"content":"It is like the <ph id=\"ph1\">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method, except the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> method does not throw an exception if the conversion fails.","pos":[315,611],"source":" It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails."}]},{"pos":[618,1216],"content":"The `s` parameter contains the date and time to parse. If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter contains the date and time to parse.","pos":[0,54],"source":"The `s` parameter contains the date and time to parse."},{"content":"If the <ph id=\"ph1\">`s`</ph> parameter contains only a time and no date, the current date is used unless the <ph id=\"ph2\">`style`</ph> parameter includes the <ph id=\"ph3\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, in which case the default date (<ph id=\"ph4\">`DateTime.Date.MinValue`</ph>) is used.","pos":[55,317],"source":" If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used."},{"content":"If the <ph id=\"ph1\">`s`</ph> parameter contains only a date and no time, midnight (00:00:00) is used.","pos":[318,401],"source":" If the `s` parameter contains only a date and no time, midnight (00:00:00) is used."},{"content":"The <ph id=\"ph1\">`style`</ph> parameter also determines whether the <ph id=\"ph2\">`s`</ph> parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in <ph id=\"ph3\">`formats`</ph>.","pos":[402,598],"source":" The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`."}]},{"pos":[1223,2515],"content":"If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,187],"source":"If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This behavior can be changed by using the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, which returns a <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, or by using the <ph id=\"ph5\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> and <ph id=\"ph6\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flags, which returns a <ph id=\"ph7\">&lt;xref:System.DateTime&gt;</ph> value whose <ph id=\"ph8\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id=\"ph9\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[188,760],"source":" This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If s contains time zone information, the time is converted to local time, if necessary, and the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[761,1005],"source":" If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This behavior can be changed by using the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[1006,1292],"source":" This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[2522,3062],"content":"The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed. The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.","nodes":[{"content":"The <ph id=\"ph1\">`formats`</ph> parameter contains an array of patterns, one of which <ph id=\"ph2\">`s`</ph> must match exactly if the parse operation is to succeed.","pos":[0,128],"source":"The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed."},{"content":"The patterns in the <ph id=\"ph1\">`formats`</ph> parameter consist of one or more custom format specifiers from the <bpt id=\"p1\">[</bpt>Custom Date and Time Format Strings<ept id=\"p1\">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> table, or a single standard format specifier, which identifies a predefined pattern, from the <bpt id=\"p2\">[</bpt>Standard Date and Time Format Strings<ept id=\"p2\">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> table.","pos":[129,540],"source":" The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table."}]},{"pos":[3069,3369],"content":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","nodes":[{"content":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the <ph id=\"ph1\">`provider`</ph> parameter and the widest form of each custom format specifier.","pos":[0,177],"source":"If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier."},{"content":"For example, if you want to specify hours in the pattern, specify the wider form, \"HH\", instead of the narrower form, \"H\".","pos":[178,300]}]},{"pos":[3376,3683],"content":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:","nodes":[{"content":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <ph id=\"ph1\">`s`</ph> are defined by the <ph id=\"ph2\">`provider`</ph> parameter, as is the precise format of <ph id=\"ph3\">`s`</ph> if <ph id=\"ph4\">`format`</ph> is a standard format specifier string.","pos":[0,253],"source":"The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter can be any of the following:","pos":[254,307],"source":" The `provider` parameter can be any of the following:"}]},{"pos":[3693,3976],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id=\"ph2\">`s`</ph>.","pos":[0,99],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id=\"ph3\">`s`</ph>.","pos":[100,283],"source":" The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`."}]},{"pos":[3986,4088],"content":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.","pos":[0,102],"source":"A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data."}]},{"pos":[4098,4371],"content":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo>object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.","nodes":[{"content":"A custom <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id=\"ph2\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph>object or the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.","pos":[0,273],"source":"A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo>object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information."}]},{"pos":[4378,4502],"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.","source":"If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used."},{"pos":[4509,5078],"content":"The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.","nodes":[{"content":"The <ph id=\"ph1\">`styles`</ph> parameter includes one or more members of the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration that determine whether and where white space not defined by <ph id=\"ph3\">`format`</ph> can appear in <ph id=\"ph4\">`s`</ph> and that control the precise behavior of the parse operation.","pos":[0,262],"source":"The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation."},{"content":"The following table describes how each member of the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration affects the operation of the <ph id=\"ph2\">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method.","pos":[263,569],"source":" The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method."}]},{"pos":[5085,5106],"content":"DateTimeStyles member","nodes":[{"content":"DateTimeStyles member","pos":[0,21]}]},{"pos":[5107,5118],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[5173,5233],"content":"<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>","nodes":[]},{"pos":[5234,6163],"content":"Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.","nodes":[{"content":"Parses <ph id=\"ph1\">`s`</ph> and, if necessary, converts it to UTC.","pos":[0,49],"source":"Parses `s` and, if necessary, converts it to UTC."},{"content":"If <ph id=\"ph1\">`s`</ph> includes a time zone offset, or if <ph id=\"ph2\">`s`</ph> contains no time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id=\"ph5\">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id=\"ph6\">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id=\"ph7\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph8\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[50,477],"source":" If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If <ph id=\"ph1\">`s`</ph> indicates that it represents UTC, or if <ph id=\"ph2\">`s`</ph> does not contain time zone information but <ph id=\"ph3\">`styles`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id=\"ph5\">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id=\"ph6\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph7\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[478,885],"source":" If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"In all other cases, the flag has no effect.","pos":[886,929]}]},{"pos":[6168,6226],"content":"<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>","nodes":[]},{"pos":[6227,6333],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear between any individual date or time element.","source":"Specifies that white space not defined by `format` can appear between any individual date or time element."},{"pos":[6338,6398],"content":"<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>","nodes":[]},{"pos":[6399,6485],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear at the beginning of <ph id=\"ph2\">`s`</ph>.","source":"Specifies that white space not defined by `format` can appear at the beginning of `s`."},{"pos":[6490,6551],"content":"<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>","nodes":[]},{"pos":[6552,6632],"content":"Specifies that white space not defined by <ph id=\"ph1\">`format`</ph> can appear at the end of <ph id=\"ph2\">`s`</ph>.","source":"Specifies that white space not defined by `format` can appear at the end of `s`."},{"pos":[6637,6696],"content":"<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>","nodes":[]},{"pos":[6697,6794],"content":"Specifies that <ph id=\"ph1\">`s`</ph> may contain leading, inner, and trailing white spaces not defined by <ph id=\"ph2\">`format`</ph>.","source":"Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`."},{"pos":[6799,6853],"content":"<xref:System.Globalization.DateTimeStyles.AssumeLocal>","nodes":[]},{"pos":[6854,7197],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent a local time.","pos":[0,95],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent a local time."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> value is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[96,343],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[7202,7260],"content":"<xref:System.Globalization.DateTimeStyles.AssumeUniversal>","nodes":[]},{"pos":[7261,7637],"content":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Specifies that if <ph id=\"ph1\">`s`</ph> lacks any time zone information, it is assumed to represent UTC.","pos":[0,86],"source":"Specifies that if `s` lacks any time zone information, it is assumed to represent UTC."},{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[87,376],"source":" Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[7642,7705],"content":"<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>","nodes":[]},{"pos":[7706,7817],"content":"If <ph id=\"ph1\">`s`</ph> contains time without date information, the date of the return value is set to <ph id=\"ph2\">`DateTime.MinValue.Date`</ph>.","source":"If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`."},{"pos":[7822,7869],"content":"<xref:System.Globalization.DateTimeStyles.None>","nodes":[]},{"pos":[7870,8518],"content":"The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is parsed using default values.","pos":[0,49],"source":"The `s` parameter is parsed using default values."},{"content":"No white space other than that present in <ph id=\"ph1\">`format`</ph> is allowed.","pos":[50,112],"source":" No white space other than that present in `format` is allowed."},{"content":"If <ph id=\"ph1\">`s`</ph> lacks a date component, the date of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value is set to 1/1/0001.","pos":[113,217],"source":" If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001."},{"content":"If <ph id=\"ph1\">`s`</ph> contains no time zone information, the <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[218,412],"source":" If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"If time zone information is present in <ph id=\"ph1\">`s`</ph>, the time is converted to local time and the<ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id=\"ph4\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[413,648],"source":" If time zone information is present in `s`, the time is converted to local time and the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[8523,8579],"content":"<xref:System.Globalization.DateTimeStyles.RoundtripKind>","nodes":[]},{"pos":[8580,8875],"content":"For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.","nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.","pos":[0,295],"nodes":[{"content":"For strings that contain time zone information, tries to prevent the conversion to a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> value with its <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,222],"source":"For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"This flag primarily prevents the conversion of UTC times to local times.","pos":[223,295]}]}]}],"pos":[436739,445655],"yaml":true,"extradata":"MT"},{"content":"A string that contains a date and time to convert.","nodes":[{"pos":[0,50],"content":"A string that contains a date and time to convert.","nodes":[{"content":"A string that contains a date and time to convert.","pos":[0,50]}]}],"pos":[446538,446589],"yaml":true},{"content":"An array of allowable formats of <code>s</code>.","nodes":[{"pos":[0,48],"content":"An array of allowable formats of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An array of allowable formats of <code>s</code>."}],"pos":[446654,446703],"yaml":true},{"content":"An object that supplies culture-specific format information about <code>s</code>.","nodes":[{"pos":[0,81],"content":"An object that supplies culture-specific format information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific format information about <code>s</code>."}],"pos":[446776,446858],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"pos":[0,191],"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.","nodes":[{"content":"A bitwise combination of enumeration values that indicates the permitted format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,98],"source":"A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.DateTimeStyles.None\"&gt;&lt;/xref&gt;</ph>.","pos":[99,191],"source":" A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>."}]}],"pos":[446941,447133],"yaml":true},{"content":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if <code>s</code> or <code>formats</code> is `null`, <code>s</code> or an element of <code>formats</code> is an empty string, or the format of <code>s</code> is not exactly as specified by at least one of the format patterns in <code>formats</code>. This parameter is passed uninitialized.","nodes":[{"pos":[0,557],"content":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if <code>s</code> or <code>formats</code> is `null`, <code>s</code> or an element of <code>formats</code> is an empty string, or the format of <code>s</code> is not exactly as specified by at least one of the format patterns in <code>formats</code>. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> value equivalent to the date and time contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id=\"ph3\">&lt;xref href=\"System.DateTime.MinValue\"&gt;&lt;/xref&gt;</ph> if the conversion failed.","pos":[0,246],"source":"When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed."},{"content":"The conversion fails if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">formats</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">s</ph><ept id=\"p3\">&lt;/code&gt;</ept> or an element of <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph5\">formats</ph><ept id=\"p4\">&lt;/code&gt;</ept> is an empty string, or the format of <bpt id=\"p5\">&lt;code&gt;</bpt><ph id=\"ph6\">s</ph><ept id=\"p5\">&lt;/code&gt;</ept> is not exactly as specified by at least one of the format patterns in <bpt id=\"p6\">&lt;code&gt;</bpt><ph id=\"ph7\">formats</ph><ept id=\"p6\">&lt;/code&gt;</ept>.","pos":[247,517],"source":" The conversion fails if <code>s</code> or <code>formats</code> is `null`, <code>s</code> or an element of <code>formats</code> is an empty string, or the format of <code>s</code> is not exactly as specified by at least one of the format patterns in <code>formats</code>."},{"content":"This parameter is passed uninitialized.","pos":[518,557]}]}],"pos":[447197,447755],"yaml":true},{"content":"`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`."}],"pos":[447813,447902],"yaml":true},{"content":"<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value.  \n  \n -or-  \n  \n <code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>).","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>styles</code> is not a valid <xref href=\"System.Globalization.DateTimeStyles\"></xref> value."},{"pos":[105,109],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[116,401],"content":"<ph id=\"ph1\">&lt;code&gt;styles&lt;/code&gt;</ph> contains an invalid combination of <ph id=\"ph2\">&lt;xref href=\"System.Globalization.DateTimeStyles\"&gt;&lt;/xref&gt;</ph> values (for example, both <ph id=\"ph3\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph4\">&lt;xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"&gt;&lt;/xref&gt;</ph>).","source":"<code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values (for example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>)."}],"pos":[448053,448469],"yaml":true},{"content":"Gets a <xref href=\"System.DateTime\"></xref> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).","nodes":[{"pos":[0,160],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).","source":"Gets a <xref href=\"System.DateTime\"></xref> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC)."}],"pos":[449837,449998],"yaml":true},{"content":"The resolution of this property depends on the system timer.  \n  \n|System|Approximate Resolution|  \n|------------|----------------------------|  \n|Windows NT 3.5 and later|10 milliseconds|  \n|Windows 98|55 milliseconds|  \n  \n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>.  \n  \n An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=fullName>. While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind?displayProperty=fullName> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>).","nodes":[{"pos":[0,60],"content":"The resolution of this property depends on the system timer.","nodes":[{"content":"The resolution of this property depends on the system timer.","pos":[0,60]}]},{"pos":[67,73],"content":"System","nodes":[{"content":"System","pos":[0,6]}]},{"pos":[74,96],"content":"Approximate Resolution","nodes":[{"content":"Approximate Resolution","pos":[0,22]}]},{"pos":[147,171],"content":"Windows NT 3.5 and later","nodes":[{"content":"Windows NT 3.5 and later","pos":[0,24]}]},{"pos":[172,187],"content":"10 milliseconds","nodes":[{"content":"10 milliseconds","pos":[0,15]}]},{"pos":[192,202],"content":"Windows 98","nodes":[{"content":"Windows 98","pos":[0,10]}]},{"pos":[203,218],"content":"55 milliseconds","nodes":[{"content":"55 milliseconds","pos":[0,15]}]},{"pos":[226,423],"content":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>.","nodes":[{"content":"Starting with the .NET Framework version 2.0, the return value is a <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> whose <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property returns <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,197],"source":"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>."}]},{"pos":[430,887],"content":"An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=fullName>. While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind?displayProperty=fullName> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>).","nodes":[{"content":"An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=fullName>. While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind?displayProperty=fullName> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>).","pos":[0,457],"nodes":[{"content":"An alternative to using <ph id=\"ph1\">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.DateTimeOffset.UtcNow%2A?displayProperty=fullName&gt;</ph>.","pos":[0,124],"source":"An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=fullName>."},{"content":"While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <ph id=\"ph1\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> to its <ph id=\"ph2\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property, the latter assigns the date and time value the UTC time's offset (equal to <ph id=\"ph3\">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>).","pos":[125,457],"source":" While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind?displayProperty=fullName> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>)."}]}]}],"pos":[450009,450908],"yaml":true,"extradata":"MT"},{"content":"An object whose value is the current UTC date and time.","nodes":[{"pos":[0,55],"content":"An object whose value is the current UTC date and time.","nodes":[{"content":"An object whose value is the current UTC date and time.","pos":[0,55]}]}],"pos":[451599,451655],"yaml":true},{"content":"Gets the year component of the date represented by this instance.","nodes":[{"pos":[0,65],"content":"Gets the year component of the date represented by this instance.","nodes":[{"content":"Gets the year component of the date represented by this instance.","pos":[0,65]}]}],"pos":[453132,453198],"yaml":true},{"content":"The<xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar. It does not return the year using the default calendar of the current culture. To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows.  \n  \n [!code-csharp[System.DateTime.Year#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)]\n [!code-vb[System.DateTime.Year#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)]","nodes":[{"pos":[0,315],"content":"The<xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar. It does not return the year using the default calendar of the current culture. To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Year%2A&gt;</ph> property returns the year of the current instance in the Gregorian calendar.","pos":[0,110],"source":"The<xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar."},{"content":"It does not return the year using the default calendar of the current culture.","pos":[111,189]},{"content":"To retrieve the year using a particular calendar, you can call that calendar's <ph id=\"ph1\">`GetYear`</ph> method, as the following code shows.","pos":[190,315],"source":" To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows."}]},{"pos":[322,569],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.DateTime.Year#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.DateTime.Year#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.DateTime.Year#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)]\n [!code-vb[System.DateTime.Year#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)]"}],"pos":[453209,453784],"yaml":true,"extradata":"MT"},{"content":"The year, between 1 and 9999.","nodes":[{"pos":[0,29],"content":"The year, between 1 and 9999.","nodes":[{"content":"The year, between 1 and 9999.","pos":[0,29]}]}],"pos":[454405,454435],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[458338,458462],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[458630,458761],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[458819,458865],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[459038,459052],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[460534,460658],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[460823,460954],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[461009,461055],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[461225,461239],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[462721,462845],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[463010,463141],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[463196,463242],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[463412,463426],"yaml":true},{"content":"Returns the current <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,64],"content":"Returns the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the current <xref href=\"System.DateTime\"></xref> object."}],"pos":[464932,464997],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[465170,465301],"yaml":true},{"content":"The current object.","nodes":[{"pos":[0,19],"content":"The current object.","nodes":[{"content":"The current object.","pos":[0,19]}]}],"pos":[465360,465380],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[466957,467081],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[467252,467383],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[467441,467487],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[467660,467674],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[469168,469292],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[469461,469592],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[469649,469695],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[469867,469881],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[471369,471493],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[471660,471791],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[471847,471893],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[472064,472078],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[473566,473690],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[473855,473986],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[474042,474088],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[474259,474273],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[475761,475885],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[476051,476182],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[476238,476284],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[476455,476469],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[477957,478081],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[478248,478379],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[478435,478481],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[478652,478666],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[480160,480284],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[480452,480583],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[480640,480686],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[480858,480872],"yaml":true},{"content":"Converts the current <xref href=\"System.DateTime\"></xref> object to an object of a specified type.","nodes":[{"pos":[0,98],"content":"Converts the current <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object to an object of a specified type.","source":"Converts the current <xref href=\"System.DateTime\"></xref> object to an object of a specified type."}],"pos":[482408,482507],"yaml":true},{"content":"The desired type.","nodes":[{"pos":[0,17],"content":"The desired type.","nodes":[{"content":"The desired type.","pos":[0,17]}]}],"pos":[482670,482688],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[482761,482892],"yaml":true},{"content":"An object of the type specified by the <code>type</code> parameter, with a value equivalent to the current <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,151],"content":"An object of the type specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter, with a value equivalent to the current <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"An object of the type specified by the <code>type</code> parameter, with a value equivalent to the current <xref href=\"System.DateTime\"></xref> object."}],"pos":[482949,483101],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[483273,483302],"yaml":true},{"content":"This conversion is not supported for the <xref href=\"System.DateTime\"></xref> type.","nodes":[{"pos":[0,83],"content":"This conversion is not supported for the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> type.","source":"This conversion is not supported for the <xref href=\"System.DateTime\"></xref> type."}],"pos":[483402,483486],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[484980,485104],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[485273,485404],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[485461,485507],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[485679,485693],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[487187,487311],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[487478,487609],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[487666,487712],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[487884,487898],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[489392,489516],"yaml":true},{"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,130],"content":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)","nodes":[{"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> interface.","pos":[0,84],"source":"An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface."},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[85,130],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[489684,489815],"yaml":true},{"content":"The return value for this member is not used.","nodes":[{"pos":[0,45],"content":"The return value for this member is not used.","nodes":[{"content":"The return value for this member is not used.","pos":[0,45]}]}],"pos":[489872,489918],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[490090,490104],"yaml":true},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the current <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,177],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with the data needed to serialize the current <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the current <xref href=\"System.DateTime\"></xref> object."}],"pos":[491970,492148],"yaml":true},{"content":"This method populates the `info` parameter with the <xref:System.DateTime.Ticks%2A> and <xref:System.DateTime.Kind%2A> property values.","nodes":[{"pos":[0,135],"content":"This method populates the <ph id=\"ph1\">`info`</ph> parameter with the <ph id=\"ph2\">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property values.","source":"This method populates the `info` parameter with the <xref:System.DateTime.Ticks%2A> and <xref:System.DateTime.Kind%2A> property values."}],"pos":[492159,492295],"yaml":true,"extradata":"MT"},{"content":"The object to populate with data.","nodes":[{"pos":[0,33],"content":"The object to populate with data.","nodes":[{"content":"The object to populate with data.","pos":[0,33]}]}],"pos":[492621,492655],"yaml":true},{"content":"The destination for this serialization. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,85],"content":"The destination for this serialization. (This parameter is not used; specify `null`.)","nodes":[{"content":"The destination for this serialization.","pos":[0,39]},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[40,85],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[492750,492836],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[493038,493067],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DateTime\n  commentId: T:System.DateTime\n  id: DateTime\n  children:\n  - System.DateTime.#ctor(System.Int64)\n  - System.DateTime.#ctor(System.Int64,System.DateTimeKind)\n  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)\n  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\n  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\n  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  - System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)\n  - System.DateTime.Add(System.TimeSpan)\n  - System.DateTime.AddDays(System.Double)\n  - System.DateTime.AddHours(System.Double)\n  - System.DateTime.AddMilliseconds(System.Double)\n  - System.DateTime.AddMinutes(System.Double)\n  - System.DateTime.AddMonths(System.Int32)\n  - System.DateTime.AddSeconds(System.Double)\n  - System.DateTime.AddTicks(System.Int64)\n  - System.DateTime.AddYears(System.Int32)\n  - System.DateTime.Compare(System.DateTime,System.DateTime)\n  - System.DateTime.CompareTo(System.DateTime)\n  - System.DateTime.CompareTo(System.Object)\n  - System.DateTime.Date\n  - System.DateTime.Day\n  - System.DateTime.DayOfWeek\n  - System.DateTime.DayOfYear\n  - System.DateTime.DaysInMonth(System.Int32,System.Int32)\n  - System.DateTime.Equals(System.DateTime)\n  - System.DateTime.Equals(System.Object)\n  - System.DateTime.Equals(System.DateTime,System.DateTime)\n  - System.DateTime.FromBinary(System.Int64)\n  - System.DateTime.FromFileTime(System.Int64)\n  - System.DateTime.FromFileTimeUtc(System.Int64)\n  - System.DateTime.FromOADate(System.Double)\n  - System.DateTime.GetDateTimeFormats\n  - System.DateTime.GetDateTimeFormats(System.Char)\n  - System.DateTime.GetDateTimeFormats(System.IFormatProvider)\n  - System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)\n  - System.DateTime.GetHashCode\n  - System.DateTime.GetTypeCode\n  - System.DateTime.Hour\n  - System.DateTime.IsDaylightSavingTime\n  - System.DateTime.IsLeapYear(System.Int32)\n  - System.DateTime.Kind\n  - System.DateTime.MaxValue\n  - System.DateTime.Millisecond\n  - System.DateTime.Minute\n  - System.DateTime.MinValue\n  - System.DateTime.Month\n  - System.DateTime.Now\n  - System.DateTime.op_Addition(System.DateTime,System.TimeSpan)\n  - System.DateTime.op_Equality(System.DateTime,System.DateTime)\n  - System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)\n  - System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)\n  - System.DateTime.op_Inequality(System.DateTime,System.DateTime)\n  - System.DateTime.op_LessThan(System.DateTime,System.DateTime)\n  - System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)\n  - System.DateTime.op_Subtraction(System.DateTime,System.DateTime)\n  - System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)\n  - System.DateTime.Parse(System.String)\n  - System.DateTime.Parse(System.String,System.IFormatProvider)\n  - System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  - System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  - System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  - System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)\n  - System.DateTime.Second\n  - System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\n  - System.DateTime.Subtract(System.DateTime)\n  - System.DateTime.Subtract(System.TimeSpan)\n  - System.DateTime.Ticks\n  - System.DateTime.TimeOfDay\n  - System.DateTime.ToBinary\n  - System.DateTime.Today\n  - System.DateTime.ToFileTime\n  - System.DateTime.ToFileTimeUtc\n  - System.DateTime.ToLocalTime\n  - System.DateTime.ToLongDateString\n  - System.DateTime.ToLongTimeString\n  - System.DateTime.ToOADate\n  - System.DateTime.ToShortDateString\n  - System.DateTime.ToShortTimeString\n  - System.DateTime.ToString(System.String,System.IFormatProvider)\n  - System.DateTime.ToString(System.String)\n  - System.DateTime.ToString(System.IFormatProvider)\n  - System.DateTime.ToString\n  - System.DateTime.ToUniversalTime\n  - System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  - System.DateTime.TryParse(System.String,System.DateTime@)\n  - System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  - System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  - System.DateTime.UtcNow\n  - System.DateTime.Year\n  - System.DateTime.System#IComparable#CompareTo(System.Object)\n  - System.DateTime.System#IConvertible#GetTypeCode\n  - System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)\n  - System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)\n  - System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n  type: Struct\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents an instant in time, typically expressed as a date and time of day.\n  remarks: \"> [!NOTE]\\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \\n  \\n The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D. (C.E.) in the Gregorian calendar.  \\n  \\n Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar (excluding ticks that would be added by leap seconds). For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight. A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.  \\n  \\n> [!NOTE]\\n>  If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerHour?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.  \\n  \\n In this section:  \\n  \\n [Instantiating a DateTime object](#instantiating_datetime)   \\n [DateTime values and their string representations](#datetime_values_strings)   \\n [Converting strings to DateTime values](#parsing)   \\n [Version considerations](#datetime_versions)   \\n [DateTime values](#datetime_values)   \\n [DateTime operations](#datetime_ops)   \\n [DateTime resolution](#Resolution)   \\n [DateTime vs. TimeSpan](#datetime_timespan)   \\n [DateTime values and calendars](#Calendars)   \\n [Persisting DateTime values](#Persisting)   \\n [COM interop considerations](#com_interop)  \\n  \\n<a name=\\\"instantiating_datetime\\\"></a>   \\n## Instantiating a DateTime object  \\n You can create a new <xref:System.DateTime> value in any of the following ways:  \\n  \\n-   By calling any of the overloads of the <xref:System.DateTime> constructor that allow you to specify specific elements of the date and time value (such as the year, month, and day, or the number of ticks). The following statement illustrates a call to one of the <xref:System.DateTime> constructors to create a date with a specific year, month, day, hour, minute, and second.  \\n  \\n     [!code-csharp[System.DateTime.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#1)]\\n     [!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#1)]  \\n  \\n-   By using any compiler-specific syntax for declaring date and time values. For example, the following Visual Basic statement initializes a new <xref:System.DateTime> value.  \\n  \\n     [!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#2)]  \\n  \\n-   By assigning the <xref:System.DateTime> object a date and time value returned by a property or method. The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.  \\n  \\n     [!code-csharp[System.DateTime.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#3)]\\n     [!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#3)]  \\n  \\n-   By parsing the string representation of a date and time value. The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value. The following example uses the <xref:System.DateTime.Parse%2A> method to parse a string and convert it to a <xref:System.DateTime> value.  \\n  \\n     [!code-csharp[System.DateTime.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#4)]\\n     [!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#4)]  \\n  \\n     Note that the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a particular string contains a valid representation of a <xref:System.DateTime> value in addition to performing the conversion.  \\n  \\n-   By calling the <xref:System.DateTime> structure's implicit default constructor. (For details on the implicit default constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) An approximate equivalent, for compilers that support it, is declaring a <xref:System.DateTime> value without explicitly assigning a date and time to it. The following example illustrates a call to the <xref:System.DateTime> implicit default constructor in C# and Visual Basic, as well as a <xref:System.DateTime> variable declaration with no assignment in Visual Basic.  \\n  \\n     [!code-csharp[System.DateTime.Instantiation#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#5)]\\n     [!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#5)]  \\n  \\n<a name=\\\"datetime_values_strings\\\"></a>   \\n## DateTime values and their string representations  \\n Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001. The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed in a user interface element or when written to a file. The appearance of a <xref:System.DateTime> value is the result of a formatting operation. Formatting is the process of converting a value to its string representation.  \\n  \\n Because the appearance of date and time values is dependent on such factors as culture, international standards, application requirements, and personal preference, the <xref:System.DateTime> structure offers a great deal of flexibility in formatting date and time values through the overloads of its <xref:System.DateTime.ToString%2A> method. The default <xref:System.DateTime.ToString?displayProperty=fullName> method returns the string representation of a date and time value using the current culture's short date and long time pattern. The following example uses the default <xref:System.DateTime.ToString?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the en-US culture, the current culture on the computer on which the example was run.  \\n  \\n [!code-csharp[System.DateTime.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#1)]\\n [!code-vb[System.DateTime.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#1)]  \\n  \\n The <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method returns the string representation of a date and time value using the short date and long time pattern of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName> method to display the date and time using the short date and long time pattern for the fr-FR culture.  \\n  \\n [!code-csharp[System.DateTime.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#2)]\\n [!code-vb[System.DateTime.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#2)]  \\n  \\n The <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a standard or custom format specifier and using the formatting conventions of the current culture. The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.  \\n  \\n [!code-csharp[System.DateTime.Formatting#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#3)]\\n [!code-vb[System.DateTime.Formatting#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#3)]  \\n  \\n The <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method returns the string representation of the date and time in a format defined by a specific format specifier and using the formatting conventions of a specific culture. The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method to display the full date and time pattern for the fr-FR culture.  \\n  \\n [!code-csharp[System.DateTime.Formatting#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#4)]\\n [!code-vb[System.DateTime.Formatting#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#4)]  \\n  \\n For more information about formatting <xref:System.DateTime> values, see  [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \\n  \\n<a name=\\\"parsing\\\"></a>   \\n## Converting strings to DateTime values  \\n Parsing involves converting the string representation of a date and time to a <xref:System.DateTime> value. Typically, date and time strings have two different usages in applications:  \\n  \\n-   They represent a date and time that can take a variety of forms and that reflect the conventions of either the current culture or a specific culture. For example, an application may allow a user whose current culture is en-US to input a date value as \\\"12/15/2013\\\" or \\\"December 15, 2013\\\", and allow a user whose current culture is en-GB to input a date value as \\\"15/12/2013\\\" or \\\"15 December 2013\\\".  \\n  \\n-   They represent a date and time in a predefined format. For example, an application may serialize a date as \\\"20130103\\\" independently of the culture on which the app is running, or it may require that a date be input in the current culture's short date format.  \\n  \\n You can use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string that might reflect one of the common date and time formats used by a culture to a <xref:System.DateTime> value. The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in a number of different culture-specific formats to a <xref:System.DateTime> value. It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings. It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method. The output from the example shows that the parsing method was able to successfully convert each of the culture-specific date and time strings.  \\n  \\n [!code-csharp[System.DateTime.Parsing#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex1.cs#1)]\\n [!code-vb[System.DateTime.Parsing#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex1.vb#1)]  \\n  \\n You can use the <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a date and time string that must match a particular format or formats to a <xref:System.DateTime> value. You specify the required format or formats as a parameter to the parsing methodby using one or more  or  date and time format strings. The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a \\\"yyyyMMdd\\\" format or a \\\"HHmmss\\\" format to <xref:System.DateTime> values.  \\n  \\n [!code-csharp[System.DateTime.Parsing#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex2.cs#2)]\\n [!code-vb[System.DateTime.Parsing#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex2.vb#2)]  \\n  \\n The <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception if the string to be converted to a <xref:System.DateTime> value cannot be parsed. The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed. Because the parsing operation for date and time strings, particularly if strings are input by users, tends to have a high failure rate, and because exception handling is expensive, you should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important or conversions are subject to a high rate of failure.  \\n  \\n For more information about parsing date and time values, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md).  \\n  \\n<a name=\\\"datetime_versions\\\"></a>   \\n## Version considerations  \\n Prior to the .NET Framework version 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of an unused 2-bit field concatenated with a private `Ticks` field, which is a 62-bit unsigned field that contains the number of ticks that represent the date and time. The value of the `Ticks` field can be obtained with the <xref:System.DateTime.Ticks%2A> property.  \\n  \\n Starting with the .NET Framework 2.0, the <xref:System.DateTime> structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field. The Kind field is a 2-bit field that indicates whether the <xref:System.DateTime> structure represents a local time, a Coordinated Universal Time (UTC), or the time in an unspecified time zone. The Kind field is used when performing time conversions between time zones, but not for time comparisons or arithmetic. The value of the Kind field can be obtained with the <xref:System.DateTime.Kind%2A> property.  \\n  \\n> [!NOTE]\\n>  An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure. The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field. This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time. For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).  \\n  \\n<a name=\\\"datetime_values\\\"></a>   \\n## DateTime values  \\n Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT). Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point. Daylight saving time is not applicable to UTC.  \\n  \\n Local time is relative to a particular time zone. A time zone is associated with a time zone offset, which is the displacement of the time zone measured in hours from the UTC origin point. In addition, local time is optionally affected by daylight saving time, which adds or subtracts an hour from the length of a day. Consequently, local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary. The time zone offset at the UTC origin point is zero.  \\n  \\n UTC time is suitable for calculations, comparisons, and storing dates and time in files. Local time is appropriate for display in user interfaces of desktop applications. Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.  \\n  \\n If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.  \\n  \\n<a name=\\\"datetime_ops\\\"></a>   \\n## DateTime operations  \\n A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure. Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.  \\n  \\n Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.  \\n  \\n The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another. You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC. However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class. Using these methods, you can convert the time in any one of the world's time zones to the time in any other time zone.  \\n  \\n Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone. You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled. (That is, a <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone other than the <xref:System.DateTime.Kind%2A> property.) For this reason, in a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created. For example, you could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone. For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md).  \\n  \\n Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation, with the exception of constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName>, that implicitly specifies a calendar.  \\n  \\n Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month.  \\n  \\n Two other common operations with <xref:System.DateTime> values involve converting a date and time value to or from its string representation. The process of converting a <xref:System.DateTime> value to its string representation is a formatting operation; for more information about formatting, see [DateTime values and their string representations](#datetime_values_strings). The process of converting the string representation of a date and time to a <xref:System.DateTime> value is a parsing operation; for more information about parsing, see [Converting strings to DateTime values](#parsing).  \\n  \\n<a name=\\\"Resolution\\\"></a>   \\n## DateTime resolution  \\n  \\n> [!NOTE]\\n>  As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class.  \\n  \\n The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second, and the <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value. However, if you are using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=fullName> property to measure elapsed time, and you are concerned with small time intervals less than 100 milliseconds, you should note that values returned by the <xref:System.DateTime.Now%2A?displayProperty=fullName> property are dependent on the system clock, which on Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.  \\n  \\n The following example illustrates the dependence of current date and time values on the resolution of the system clock. In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop. If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName> method introduces a five millisecond delay. As the output from the example shows, the number of milliseconds in returned by the `DateTime.Now.Milliseconds` property changed only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName>.  \\n  \\n [!code-cpp[System.DateTime.Now#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/resolution2.cpp#1)]\\n [!code-csharp[System.DateTime.Now#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/resolution2.cs#1)]\\n [!code-vb[System.DateTime.Now#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/resolution2.vb#1)]  \\n  \\n<a name=\\\"datetime_timespan\\\"></a>   \\n## DateTime vs. TimeSpan  \\n The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval. This means, for example, that you can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them. Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.  \\n  \\n You can add or subtract a time interval from a <xref:System.DateTime> object. Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <xref:System.TimeSpan> object.  \\n  \\n<a name=\\\"Calendars\\\"></a>   \\n## DateTime values and calendars  \\n The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.  They are:  \\n  \\n-   The <xref:System.Globalization.ChineseLunisolarCalendar> class.  \\n  \\n-   The <xref:System.Globalization.EastAsianLunisolarCalendar> class.  \\n  \\n-   The <xref:System.Globalization.GregorianCalendar> class.  \\n  \\n-   The <xref:System.Globalization.HebrewCalendar> class.  \\n  \\n-   The <xref:System.Globalization.HijriCalendar> class.  \\n  \\n-   The <xref:System.Globalization.JapaneseCalendar> class.  \\n  \\n-   The <xref:System.Globalization.JapaneseLunisolarCalendar> class.  \\n  \\n-   The <xref:System.Globalization.JulianCalendar> class.  \\n  \\n-   The <xref:System.Globalization.KoreanCalendar> class.  \\n  \\n-   The <xref:System.Globalization.KoreanLunisolarCalendar> class.  \\n  \\n-   The <xref:System.Globalization.PersianCalendar> class.  \\n  \\n-   The <xref:System.Globalization.TaiwanCalendar> class.  \\n  \\n-   The <xref:System.Globalization.TaiwanLunisolarCalendar> class.  \\n  \\n-   The <xref:System.Globalization.ThaiBuddhistCalendar> class.  \\n  \\n-   The <xref:System.Globalization.UmAlQuraCalendar> class.  \\n  \\n Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName> property and supports one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> property. The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property; it must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName> array.  \\n  \\n A culture's current calendar is used in all formatting operations for that culture. For example, the default calendar of the Persian (Iran) culture is the Umm al-Qura calendar, which is represented by the <xref:System.Globalization.UmAlQuraCalendar> class.  When a <xref:System.Globalization.CultureInfo> object that represents the Persian (Iran) culture is used in a date and time formatting operation, the Umm al-Qura calendar is used by default, and the Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName> property is changed, as the following example shows.  \\n  \\n [!code-csharp[System.DateTime.Calendar#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraCalendar1.cs#1)]\\n [!code-vb[System.DateTime.Calendar#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraCalendar1.vb#1)]  \\n  \\n A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.  \\n  \\n [!code-csharp[System.DateTime.Calendar#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraParse1.cs#2)]\\n [!code-vb[System.DateTime.Calendar#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraParse1.vb#2)]  \\n  \\n You can also instantiate a <xref:System.DateTime> value by using the date and time elements (such as the number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](../Topic/DateTime%20Constructor.md) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar. The following example does this by using the date and time elements from the <xref:System.Globalization.UmAlQuraCalendar> calendar.  \\n  \\n [!code-csharp[System.DateTime.Calendar#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Ctor1.cs#3)]\\n [!code-vb[System.DateTime.Calendar#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Ctor1.vb#3)]  \\n  \\n <xref:System.DateTime> constructors that do not include a `calendar` parameter assume that the date and time elements are expressed as units in the Gregorian calendar.  \\n  \\n All other <xref:System.DateTime> properties and methods use the Gregorian calendar. For example, the <xref:System.DateTime.Year%2A?displayProperty=fullName> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=fullName> method assumes that the `year` parameter is a year in the Gregorian calendar.  Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that  uses a specific calendar. For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=fullName> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=fullName> method interprets the `year` parameter as a year number in a specific calendar. The following example use both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.UmAlQuraCalendar> class.  \\n  \\n [!code-csharp[System.DateTime.Calendar#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/DateTimesAndCalendars1.cs#4)]\\n [!code-vb[System.DateTime.Calendar#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/DateTimesAndCalendars1.vb#4)]  \\n  \\n Although the <xref:System.DateTime> structure includes <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar, it does not include a member that allows you to retrieve the week number of the year. To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=fullName> method. The following example provides an illustration.  \\n  \\n [!code-csharp[System.DateTime.Calendar#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Weeks1.cs#5)]\\n [!code-vb[System.DateTime.Calendar#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Weeks1.vb#5)]  \\n  \\n For more information on dates and calendars, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).  \\n  \\n<a name=\\\"Persisting\\\"></a>   \\n## Persisting DateTime values  \\n You can persist <xref:System.DateTime> values in four ways:  \\n  \\n-   You can [convert them to strings](#Strings) and persist the strings.  \\n  \\n-   You can [convert them to 64-bit integer values](#Integers) (the value of the <xref:System.DateTime.Ticks%2A> property) and persist the integers.  \\n  \\n-   You can[serialize the DateTime values](#Serialized).  \\n  \\n-   You can [serialize the DateTime values along with time zone information](#TimeZone).  \\n  \\n Regardless of which technique you choose, you must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception. <xref:System.DateTime> values should round-trip. That is, the original value and the restored value should be the same. And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.  \\n  \\n<a name=\\\"Strings\\\"></a>   \\n### Persisting values as strings  \\n To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:  \\n  \\n-   Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it. To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A>overload to save the string by using the conventions of the invariant culture, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture. Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.  \\n  \\n-   If the data represents a single moment of time, ensure that it represents the same moment in time when it's restored, even if it's restored on a system that uses a different time zone. To do this, you convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it. You can also serialize the value along with time zone information; for more information about this approach, see [Serializing DateTime and time zone data](#TimeZone).  \\n  \\n The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture. Problems arise if the current culture is different when saving and restoring the strings. The following example illustrates these problems. It saves five dates using the formatting conventions of the current culture, which in this case is English (United States). It restores the dates using the formatting conventions of the current culture, which in this case is English (Great Britain). Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly. Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.  \\n  \\n [!code-csharp[System.DateTime.Persist#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist1.cs#1)]\\n [!code-vb[System.DateTime.Persist#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist1.vb#1)]  \\n  \\n To round-trip <xref:System.DateTime> values successfully, follow these steps:  \\n  \\n1.  If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.  \\n  \\n2.  Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> overload. Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument. Specify that the value should round-trip by using the \\\"O\\\" or \\\"R\\\" .  \\n  \\n3.  When you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.  \\n  \\n To restore the persisted <xref:System.DateTime> values without data loss, do the following:  \\n  \\n1.  Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload. Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion. Include the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> value in the `styles` argument.  \\n  \\n2.  If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time.  \\n  \\n The following example uses the invariant culture and the \\\"O\\\" standard format string to ensure that <xref:System.DateTime> values that are saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.  \\n  \\n [!code-csharp[System.DateTime.Persist#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist2.cs#2)]\\n [!code-vb[System.DateTime.Persist#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist2.vb#2)]  \\n  \\n<a name=\\\"Integers\\\"></a>   \\n### Persisting values as integers  \\n Instead of persisting a <xref:System.DateTime> value as a string, you can persist it as an <xref:System.Int64> value that represents a number of ticks. In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.  \\n  \\n To persist a <xref:System.DateTime> value as an integer:  \\n  \\n-   If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.  \\n  \\n-   Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property.  \\n  \\n To restore a <xref:System.DateTime> value that has been persisted as an integer:  \\n  \\n1.  Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor.  \\n  \\n2.  If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.  \\n  \\n The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone. It restores it on a system in the UTC zone. The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.  \\n  \\n [!code-csharp[System.DateTime.Persist#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist4.cs#4)]\\n [!code-vb[System.DateTime.Persist#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist4.vb#4)]  \\n  \\n<a name=\\\"Serialized\\\"></a>   \\n### Serializing DateTime values  \\n Instead of saving <xref:System.DateTime> values as strings or integers, which you then have to convert back to <xref:System.DateTime> values, you can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization. In this case, <xref:System.DateTime>data is serialized in some specified object format, and the objects are restored when they are deserialized. A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization. For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](http://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453).  \\n  \\n The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values that represent all leap year days in the twenty-first century. The output represents the result if the example is run on a system whose current culture is English (Great Britain). Because we've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.  \\n  \\n [!code-csharp[System.DateTime.Persist#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist5.cs#5)]\\n [!code-vb[System.DateTime.Persist#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist5.vb#5)]  \\n  \\n The previous example doesn't include time information. However, if a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, you should convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method. After you deserialize it, you should convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method. The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize<xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the UTC zone.  \\n  \\n [!code-csharp[System.DateTime.Persist#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist3.cs#3)]\\n [!code-vb[System.DateTime.Persist#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist3.vb#3)]  \\n  \\n<a name=\\\"TimeZone\\\"></a>   \\n### Serializing DateTime and time zone data  \\n The previous examples have all assumed that <xref:System.DateTime> values are expressed as local times, and converted the values between UTC and local time so they reflect the same moment in time on the source and target systems. <xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC. In this case, because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime>value and the <xref:System.TimeZoneInfo> object that represents its time zone. To do this, create a type whose fields include both the <xref:System.DateTime> value and its time zone. The following example defines a `DateWithTimeZone` structure that illustrates how this might be done.  \\n  \\n [!code-csharp[System.DateTime.Persist#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist6.cs#6)]\\n [!code-vb[System.DateTime.Persist#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist6.vb#6)]  \\n  \\n> [!IMPORTANT]\\n>  The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects. To run the examples, first create a class library that contains the `DateWithTimeZone` structure, and then add a reference to it when you compile each example.  \\n  \\n By using the `DateWithTimeZone` structure , you can then persist date and time along with time zone information. The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects.  \\n  \\n [!code-csharp[System.DateTime.Persist#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist7.cs#7)]\\n [!code-vb[System.DateTime.Persist#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist7.vb#7)]  \\n  \\n The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=fullName> method to deserialize it.  \\n  \\n [!code-csharp[System.DateTime.Persist#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist8.cs#8)]\\n [!code-vb[System.DateTime.Persist#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist8.vb#8)]  \\n  \\n<a name=\\\"com_interop\\\"></a>   \\n## COM interop considerations  \\n A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip. However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.  \\n  \\n If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E. at 3:00 P.M., instead of January, 1, 0001 C.E. at 3:00 P.M. This happens because the .NET Framework and COM assume a default date when only a time is specified. However, the COM system assumes a base date of December 30, 1899 C.E. while the .NET Framework assumes a base date of January, 1, 0001 C.E.  \\n  \\n When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM. When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899. This also means if a date starts its round-trip from COM, the .NET Framework and COM preserve the date.  \\n  \\n The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object.\"\n  example:\n  - \"The following example demonstrates how to compare roughly equivalent <xref:System.DateTime> values, accepting a small margin of difference when declaring them equal.  \\n  \\n [!code-cpp[DateTime Equivalency Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Equivalency Example/CPP/datetimesample.cpp#1)]\\n [!code-csharp[DateTime Equivalency Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Equivalency Example/CS/datetimesample.cs#1)]\\n [!code-vb[DateTime Equivalency Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Equivalency Example/VB/datetimesample.vb#1)]\"\n  syntax:\n    content: 'public struct DateTime : IComparable, IComparable<DateTime>, IConvertible, IEquatable<DateTime>, IFormattable, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IComparable\n  - System.IComparable{System.DateTime}\n  - System.IConvertible\n  - System.IEquatable{System.DateTime}\n  - System.IFormattable\n  - System.Runtime.Serialization.ISerializable\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int64)\n  commentId: M:System.DateTime.#ctor(System.Int64)\n  id: '#ctor(System.Int64)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int64)\n  nameWithType: DateTime.DateTime(Int64)\n  fullName: DateTime.DateTime(Int64)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to a specified number of ticks.\n  remarks: \"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \\n  \\n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.\"\n  example:\n  - \"The following example demonstrates one of the <xref:System.DateTime> constructors.  \\n  \\n [!code-cpp[datetime.ctor_Int64#1](~/samples/snippets/cpp/VS_Snippets_CLR/datetime.ctor_Int64/CPP/ticks.cpp#1)]\\n [!code-csharp[datetime.ctor_Int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/datetime.ctor_Int64/CS/ticks.cs#1)]\\n [!code-vb[datetime.ctor_Int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/datetime.ctor_Int64/VB/ticks.vb#1)]\"\n  syntax:\n    content: public DateTime (long ticks);\n    parameters:\n    - id: ticks\n      type: System.Int64\n      description: A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>ticks</code> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int64,System.DateTimeKind)\n  commentId: M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)\n  id: '#ctor(System.Int64,System.DateTimeKind)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int64, DateTimeKind)\n  nameWithType: DateTime.DateTime(Int64, DateTimeKind)\n  fullName: DateTime.DateTime(Int64, DateTimeKind)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.\n  remarks: For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.\n  syntax:\n    content: public DateTime (long ticks, DateTimeKind kind);\n    parameters:\n    - id: ticks\n      type: System.Int64\n      description: A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.\n    - id: kind\n      type: System.DateTimeKind\n      description: One of the enumeration values that indicates whether <code>ticks</code> specifies a local time, Coordinated Universal Time (UTC), or neither.\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>ticks</code> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int32, Int32, Int32)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32)\n  fullName: DateTime.DateTime(Int32, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, and day.\n  remarks: \"This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.  \\n  \\n The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind?displayProperty=fullName>.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value. The example also illustrates that this overload creates a <xref:System.DateTime> value whose time component equals midnight (or 0:00).  \\n  \\n [!code-csharp[System.DateTime.Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#1)]\\n [!code-vb[System.DateTime.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#1)]\"\n  syntax:\n    content: public DateTime (int year, int month, int day);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through 9999).\n    - id: month\n      type: System.Int32\n      description: The month (1 through 12).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is less than 1 or greater than 9999.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than 1 or greater than 12.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int32, Int32, Int32, Calendar)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Calendar)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Calendar)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, and day for the specified calendar.\n  remarks: \"The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00). The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \\n  \\n The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \\n  \\n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.\"\n  example:\n  - \"The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values. The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object. Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=fullName>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=fullName>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=fullName> methods. The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object. The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar. Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses it to format the date. When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses the current culture's default Gregorian calendar to format the date.  \\n  \\n [!code-csharp[System.DateTime.Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample2.cs#2)]\\n [!code-vb[System.DateTime.Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample2.vb#2)]\"\n  syntax:\n    content: public DateTime (int year, int month, int day, System.Globalization.Calendar calendar);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through the number of years in <code>calendar</code>).\n    - id: month\n      type: System.Int32\n      description: The month (1 through the number of months in <code>calendar</code>).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: calendar\n      type: System.Globalization.Calendar\n      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>calendar</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is not in the range supported by <code>calendar</code>.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, and second.\n  remarks: \"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \\n  \\n This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.  \\n  \\n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.%23ctor%2A> constructor to instantiate a <xref:System.DateTime> value.  \\n  \\n [!code-csharp[System.DateTime.Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#3)]\\n [!code-vb[System.DateTime.Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#3)]\"\n  syntax:\n    content: public DateTime (int year, int month, int day, int hour, int minute, int second);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through 9999).\n    - id: month\n      type: System.Int32\n      description: The month (1 through 12).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is less than 1 or greater than 9999.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than 1 or greater than 12.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than 0 or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\n  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.\n  remarks: \"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.  \\n  \\n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.  \\n  \\n [!code-csharp[System.DateTime.Constructor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#7)]\\n [!code-vb[System.DateTime.Constructor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#7)]\"\n  syntax:\n    content: public DateTime (int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through 9999).\n    - id: month\n      type: System.Int32\n      description: The month (1 through 12).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n    - id: kind\n      type: System.DateTimeKind\n      description: One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> specify a local time, Coordinated Universal Time (UTC), or neither.\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is less than 1 or greater than 9999.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than 1 or greater than 12.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than 0 or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, and second for the specified calendar.\n  remarks: \"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \\n  \\n The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \\n  \\n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.\"\n  example:\n  - \"The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values. The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object. Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=fullName>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=fullName>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=fullName> methods. The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object. The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar. Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses it to format the date. When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses the current culture's default Gregorian calendar to format the date.  \\n  \\n [!code-csharp[System.DateTime.Constructor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample4.cs#4)]\\n [!code-vb[System.DateTime.Constructor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample4.vb#4)]\"\n  syntax:\n    content: public DateTime (int year, int month, int day, int hour, int minute, int second, System.Globalization.Calendar calendar);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through the number of years in <code>calendar</code>).\n    - id: month\n      type: System.Int32\n      description: The month (1 through the number of months in <code>calendar</code>).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n    - id: calendar\n      type: System.Globalization.Calendar\n      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>calendar</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is not in the range supported by <code>calendar</code>.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than 0 or greater than 23  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, and millisecond.\n  remarks: \"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.  \\n  \\n The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \\n  \\n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.  \\n  \\n [!code-csharp[System.DateTime.Constructor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#5)]\\n [!code-vb[System.DateTime.Constructor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#5)]\"\n  syntax:\n    content: public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through 9999).\n    - id: month\n      type: System.Int32\n      description: The month (1 through 12).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n    - id: millisecond\n      type: System.Int32\n      description: The milliseconds (0 through 999).\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is less than 1 or greater than 9999.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than 1 or greater than 12.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than 0 or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>millisecond</code> is less than 0 or greater than 999.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\n  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.\n  remarks: \"This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar. To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.  \\n  \\n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.  \\n  \\n [!code-csharp[System.DateTime.Constructor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#8)]\\n [!code-vb[System.DateTime.Constructor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#8)]\"\n  syntax:\n    content: public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through 9999).\n    - id: month\n      type: System.Int32\n      description: The month (1 through 12).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n    - id: millisecond\n      type: System.Int32\n      description: The milliseconds (0 through 999).\n    - id: kind\n      type: System.DateTimeKind\n      description: One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither.\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is less than 1 or greater than 9999.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than 1 or greater than 12.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than 0 or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>millisecond</code> is less than 0 or greater than 999.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.\n  remarks: \"The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.  \\n  \\n The allowable values for `year`, `month`, and `day` depend on `calendar`. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \\n  \\n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.  \\n  \\n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.\"\n  example:\n  - \"The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values. The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object. Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=fullName>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=fullName>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=fullName> methods. The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object. The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar. Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses it to format the date. When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses the current culture's default Gregorian calendar to format the date.  \\n  \\n [!code-csharp[System.DateTime.Constructor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample6.cs#6)]\\n [!code-vb[System.DateTime.Constructor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample6.vb#6)]\"\n  syntax:\n    content: public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through the number of years in <code>calendar</code>).\n    - id: month\n      type: System.Int32\n      description: The month (1 through the number of months in <code>calendar</code>).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n    - id: millisecond\n      type: System.Int32\n      description: The milliseconds (0 through 999).\n    - id: calendar\n      type: System.Globalization.Calendar\n      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>calendar</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is not in the range supported by <code>calendar</code>.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than 0 or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>millisecond</code> is less than 0 or greater than 999.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)\n  commentId: M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)'\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.DateTime\"></xref> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.\n  remarks: \"The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter. An exception is thrown if the specified date and time cannot be expressed using `calendar`.  \\n  \\n For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.  \\n  \\n The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.\"\n  example:\n  - \"The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor twice to instantiate two <xref:System.DateTime> values. The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object. Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=fullName>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=fullName>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=fullName> methods. The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object. The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar. Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses it to format the date. When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=fullName> method uses the current culture's default Gregorian calendar to format the date.  \\n  \\n [!code-csharp[System.DateTime.Constructor#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample9.cs#9)]\\n [!code-vb[System.DateTime.Constructor#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample9.vb#9)]\"\n  syntax:\n    content: public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, DateTimeKind kind);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year (1 through the number of years in <code>calendar</code>).\n    - id: month\n      type: System.Int32\n      description: The month (1 through the number of months in <code>calendar</code>).\n    - id: day\n      type: System.Int32\n      description: The day (1 through the number of days in <code>month</code>).\n    - id: hour\n      type: System.Int32\n      description: The hours (0 through 23).\n    - id: minute\n      type: System.Int32\n      description: The minutes (0 through 59).\n    - id: second\n      type: System.Int32\n      description: The seconds (0 through 59).\n    - id: millisecond\n      type: System.Int32\n      description: The milliseconds (0 through 999).\n    - id: calendar\n      type: System.Globalization.Calendar\n      description: The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.\n    - id: kind\n      type: System.DateTimeKind\n      description: One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither.\n  overload: System.DateTime.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>calendar</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is not in the range supported by <code>calendar</code>.  \\n  \\n -or-  \\n  \\n <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  \\n  \\n -or-  \\n  \\n <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than 0 or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than 0 or greater than 59.  \\n  \\n -or-  \\n  \\n <code>millisecond</code> is less than 0 or greater than 999.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>kind</code> is not one of the <xref href=\"System.DateTimeKind\"></xref> values.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Add(System.TimeSpan)\n  commentId: M:System.DateTime.Add(System.TimeSpan)\n  id: Add(System.TimeSpan)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Add(TimeSpan)\n  nameWithType: DateTime.Add(TimeSpan)\n  fullName: DateTime.Add(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTime\"></xref> that adds the value of the specified <xref href=\"System.TimeSpan\"></xref> to the value of this instance.\n  remarks: \"You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method's behavior is identical to that of the addition operator. The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.  \\n  \\n The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.  \\n  \\n This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation. The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Add%2A> method. It calculates the day of the week that is 36 days (864 hours) from this moment.  \\n  \\n [!code-cpp[DateTime.Add#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Add/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Add/CS/class1.cs#1)]\\n [!code-vb[DateTime.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Add/VB/class1.vb#1)]\"\n  syntax:\n    content: public DateTime Add (TimeSpan value);\n    parameters:\n    - id: value\n      type: System.TimeSpan\n      description: A positive or negative time interval.\n    return:\n      type: System.DateTime\n      description: An object whose value is the sum of the date and time represented by this instance and the time interval represented by <code>value</code>.\n  overload: System.DateTime.Add*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.AddDays(System.Double)\n  commentId: M:System.DateTime.AddDays(System.Double)\n  id: AddDays(System.Double)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: AddDays(Double)\n  nameWithType: DateTime.AddDays(Double)\n  fullName: DateTime.AddDays(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of days to the value of this instance.\n  remarks: \"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \\n  \\n The fractional part of `value` is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.  \\n  \\n The `value` parameter is rounded to the nearest millisecond.  \\n  \\n The<xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.AddDays%2A> method to determine the day of the week 36 days after the current date.  \\n  \\n [!code-cpp[DateTime.AddDays#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.AddDays/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.AddDays#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.AddDays/CS/class1.cs#1)]\\n [!code-vb[DateTime.AddDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.AddDays/VB/class1.vb#1)]\"\n  syntax:\n    content: public DateTime AddDays (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: A number of whole and fractional days. The <code>value</code> parameter can be negative or positive.\n    return:\n      type: System.DateTime\n      description: An object whose value is the sum of the date and time represented by this instance and the number of days represented by <code>value</code>.\n  overload: System.DateTime.AddDays*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.AddHours(System.Double)\n  commentId: M:System.DateTime.AddHours(System.Double)\n  id: AddHours(System.Double)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: AddHours(Double)\n  nameWithType: DateTime.AddHours(Double)\n  fullName: DateTime.AddHours(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of hours to the value of this instance.\n  remarks: \"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation. The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`.  \\n  \\n The fractional part of `value` is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.  \\n  \\n The `value` parameter is rounded to the nearest millisecond.  \\n  \\n Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal. (For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.AddHours%2A> method to add a number of whole and fractional values to a date and time. It also illustrates the loss of precision caused by passing the method a value that includes a fractional component.  \\n  \\n [!code-csharp[System.DateTime.AddHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.AddHours/cs/AddHours1.cs#1)]\\n [!code-vb[System.DateTime.AddHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.AddHours/vb/AddHours1.vb#1)]\"\n  syntax:\n    content: public DateTime AddHours (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: A number of whole and fractional hours. The <code>value</code> parameter can be negative or positive.\n    return:\n      type: System.DateTime\n      description: An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <code>value</code>.\n  overload: System.DateTime.AddHours*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.AddMilliseconds(System.Double)\n  commentId: M:System.DateTime.AddMilliseconds(System.Double)\n  id: AddMilliseconds(System.Double)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: AddMilliseconds(Double)\n  nameWithType: DateTime.AddMilliseconds(Double)\n  fullName: DateTime.AddMilliseconds(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of milliseconds to the value of this instance.\n  remarks: \"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \\n  \\n The fractional part of `value` is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.  \\n  \\n The `value` parameter is rounded to the nearest integer.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.AddMilliseconds%2A> method to add one millisecond and 1.5 milliseconds to a <xref:System.DateTime> value. It then displays each new value and displays the difference between it and the original value. The difference is displayed both as a time span and as a number of ticks. The example makes it clear that one millisecond equals 10,000 ticks. It also shows that fractional milliseconds are rounded before performing the addition; the <xref:System.DateTime> value that results from adding 1.5 milliseconds to the original date is 2 milliseconds greater than the original date.  \\n  \\n [!code-csharp[System.DateTime.AddMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmilliseconds/cs/addmilliseconds2.cs#1)]\\n [!code-vb[System.DateTime.AddMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmilliseconds/vb/addmilliseconds2.vb#1)]\"\n  syntax:\n    content: public DateTime AddMilliseconds (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: A number of whole and fractional milliseconds. The <code>value</code> parameter can be negative or positive. Note that this value is rounded to the nearest integer.\n    return:\n      type: System.DateTime\n      description: An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <code>value</code>.\n  overload: System.DateTime.AddMilliseconds*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.AddMinutes(System.Double)\n  commentId: M:System.DateTime.AddMinutes(System.Double)\n  id: AddMinutes(System.Double)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: AddMinutes(Double)\n  nameWithType: DateTime.AddMinutes(Double)\n  fullName: DateTime.AddMinutes(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of minutes to the value of this instance.\n  remarks: \"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \\n  \\n The fractional part of `value` is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.  \\n  \\n The `value` parameter is rounded to the nearest millisecond.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.AddMinutes%2A> method to add a number of whole and fractional values to a date and time.  \\n  \\n [!code-cpp[System.DateTime.AddMinutes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.addminutes/cpp/addminutes1.cpp#1)]\\n [!code-csharp[System.DateTime.AddMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addminutes/cs/addminutes1.cs#1)]\\n [!code-vb[System.DateTime.AddMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addminutes/vb/addminutes1.vb#1)]\"\n  syntax:\n    content: public DateTime AddMinutes (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: A number of whole and fractional minutes. The <code>value</code> parameter can be negative or positive.\n    return:\n      type: System.DateTime\n      description: An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <code>value</code>.\n  overload: System.DateTime.AddMinutes*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.AddMonths(System.Int32)\n  commentId: M:System.DateTime.AddMonths(System.Int32)\n  id: AddMonths(System.Int32)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: AddMonths(Int32)\n  nameWithType: DateTime.AddMonths(Int32)\n  fullName: DateTime.AddMonths(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of months to the value of this instance.\n  remarks: \"This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.  \\n  \\n The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object. If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used. For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.  \\n  \\n The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.\"\n  example:\n  - \"The following example adds between zero and fifteen months to the last day of December, 2015. In this case, the AddMonths method returns the date of the last day of each month, and successfully handles leap years.  \\n  \\n [!code-csharp[System.DateTime.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmonths/cs/addmonths1.cs#1)]\\n [!code-vb[System.DateTime.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmonths/vb/addmonths1.vb#1)]\"\n  syntax:\n    content: public DateTime AddMonths (int months);\n    parameters:\n    - id: months\n      type: System.Int32\n      description: A number of months. The <code>months</code> parameter can be negative or positive.\n    return:\n      type: System.DateTime\n      description: An object whose value is the sum of the date and time represented by this instance and <code>months</code>.\n  overload: System.DateTime.AddMonths*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The resulting <xref href=\\\"System.DateTime\\\"></xref> is less than <xref href=\\\"System.DateTime.MinValue\\\"></xref> or greater than <xref href=\\\"System.DateTime.MaxValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>months</code> is less than -120,000 or greater than 120,000.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.AddSeconds(System.Double)\n  commentId: M:System.DateTime.AddSeconds(System.Double)\n  id: AddSeconds(System.Double)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: AddSeconds(Double)\n  nameWithType: DateTime.AddSeconds(Double)\n  fullName: DateTime.AddSeconds(Double)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of seconds to the value of this instance.\n  remarks: \"This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \\n  \\n The fractional part of `value` is the fractional part of a second. For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.  \\n  \\n The `value` parameter is rounded to the nearest millisecond.\"\n  example:\n  - \"The following example uses the<xref:System.DateTime.AddSeconds%2A>method to add 30 seconds and the number of seconds in one day to a <xref:System.DateTime> value. It then displays each new value and displays the difference between it and the original value. The difference is displayed both as a time span and as a number of ticks.  \\n  \\n [!code-csharp[System.DateTime.AddSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addseconds/cs/addseconds1.cs#1)]\\n [!code-vb[System.DateTime.AddSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addseconds/vb/addseconds1.vb#1)]\"\n  syntax:\n    content: public DateTime AddSeconds (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: A number of whole and fractional seconds. The <code>value</code> parameter can be negative or positive.\n    return:\n      type: System.DateTime\n      description: An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <code>value</code>.\n  overload: System.DateTime.AddSeconds*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.AddTicks(System.Int64)\n  commentId: M:System.DateTime.AddTicks(System.Int64)\n  id: AddTicks(System.Int64)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: AddTicks(Int64)\n  nameWithType: DateTime.AddTicks(Int64)\n  fullName: DateTime.AddTicks(Int64)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of ticks to the value of this instance.\n  remarks: This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.\n  syntax:\n    content: public DateTime AddTicks (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: A number of 100-nanosecond ticks. The <code>value</code> parameter can be positive or negative.\n    return:\n      type: System.DateTime\n      description: An object whose value is the sum of the date and time represented by this instance and the time represented by <code>value</code>.\n  overload: System.DateTime.AddTicks*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.AddYears(System.Int32)\n  commentId: M:System.DateTime.AddYears(System.Int32)\n  id: AddYears(System.Int32)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: AddYears(Int32)\n  nameWithType: DateTime.AddYears(Int32)\n  fullName: DateTime.AddYears(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a new <xref href=\"System.DateTime\"></xref> that adds the specified number of years to the value of this instance.\n  remarks: \"This method does not change the value of this <xref:System.DateTime> object. Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.  \\n  \\n The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years. The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.  \\n  \\n If the current instance represents the leap day in a leap year, the return value depends on the target date:  \\n  \\n-   If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is also a leap year, the return value represents the leap day in that year. For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.  \\n  \\n-   If `value` + <xref:System.DateTime.Year%2A?displayProperty=fullName> is not a leap year, the return value represents the day before the leap day in that year. For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.  \\n  \\n The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day. It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.  \\n  \\n [!code-csharp[System.DateTime.AddYears#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)]\\n [!code-vb[System.DateTime.AddYears#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)]\"\n  syntax:\n    content: public DateTime AddYears (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: A number of years. The <code>value</code> parameter can be negative or positive.\n    return:\n      type: System.DateTime\n      description: An object whose value is the sum of the date and time represented by this instance and the number of years represented by <code>value</code>.\n  overload: System.DateTime.AddYears*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>value</code> or the resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Compare(System.DateTime,System.DateTime)\n  commentId: M:System.DateTime.Compare(System.DateTime,System.DateTime)\n  id: Compare(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Compare(DateTime, DateTime)\n  nameWithType: DateTime.Compare(DateTime, DateTime)\n  fullName: DateTime.Compare(DateTime, DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares two instances of <xref href=\"System.DateTime\"></xref> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.\n  remarks: To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property. Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.\n  example:\n  - \"The following example demonstrates the<xref:System.DateTime.Compare%2A> method.  \\n  \\n [!code-csharp[System.DateTime.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.compare/cs/compare1.cs#1)]\\n [!code-vb[System.DateTime.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.compare/vb/compare1.vb#1)]\"\n  syntax:\n    content: public static int Compare (DateTime t1, DateTime t2);\n    parameters:\n    - id: t1\n      type: System.DateTime\n      description: The first object to compare.\n    - id: t2\n      type: System.DateTime\n      description: The second object to compare.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the relative values of <code>t1</code> and <code>t2</code>.  \\n  \\n <table><thead><tr><th> Value Type  \\n  \\n </th><th> Condition  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td><code>t1</code> is earlier than <code>t2</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td><code>t1</code> is the same as <code>t2</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td><code>t1</code> is later than <code>t2</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.DateTime.Compare*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.CompareTo(System.DateTime)\n  commentId: M:System.DateTime.CompareTo(System.DateTime)\n  id: CompareTo(System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: CompareTo(DateTime)\n  nameWithType: DateTime.CompareTo(DateTime)\n  fullName: DateTime.CompareTo(DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares the value of this instance to a specified <xref href=\"System.DateTime\"></xref> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <xref href=\"System.DateTime\"></xref> value.\n  remarks: \"To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.  Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.  \\n  \\n This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=fullName> method overload because it does not have to convert the `value` parameter to an object.\"\n  example:\n  - \"The following example instantiates three <xref:System.DateTime> objects, one that represents today's date, another that represents the date one year previously, and a third that represents the date one year in the future. It then calls the <xref:System.DateTime.CompareTo%28System.DateTime%29> method and displays the result of the comparison.  \\n  \\n [!code-csharp[DateTime.CompareTo.2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo.2/CS/CompareTo_CS1_24564.cs#1)]\\n [!code-vb[DateTime.CompareTo.2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo.2/VB/CompareTo_VB1_24564.vb#1)]\"\n  syntax:\n    content: public int CompareTo (DateTime value);\n    parameters:\n    - id: value\n      type: System.DateTime\n      description: The object to compare to the current instance.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the relative values of this instance and the <code>value</code> parameter.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is earlier than <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as <code>value</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is later than <code>value</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.DateTime.CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.CompareTo(System.Object)\n  commentId: M:System.DateTime.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: DateTime.CompareTo(Object)\n  fullName: DateTime.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares the value of this instance to a specified object that contains a specified <xref href=\"System.DateTime\"></xref> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <xref href=\"System.DateTime\"></xref> value.\n  remarks: \"To determine the relationship of the current instance to `value`, the<xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.  \\n  \\n Any instance of <xref:System.DateTime>, regardless of its value, is considered greater than `null`.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.CompareTo%2A> method.  \\n  \\n [!code-cpp[DateTime.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.CompareTo/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo/CS/class1.cs#1)]\\n [!code-vb[DateTime.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo/VB/class1.vb#1)]\"\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: A boxed object to compare, or `null`.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the relative values of this instance and <code>value</code>.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is earlier than <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is the same as <code>value</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is later than <code>value</code>, or <code>value</code> is `null`.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.DateTime.CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not a <xref href=\"System.DateTime\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Date\n  commentId: P:System.DateTime.Date\n  id: Date\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Date\n  nameWithType: DateTime.Date\n  fullName: DateTime.Date\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the date component of this instance.\n  remarks: \"The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance.  \\n  \\n Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.Date%2A> property to extract the date component of a <xref:System.DateTime> value with its time component set to zero (or 0:00:00, or midnight). It also illustrates that, depending on the format string used when displaying the <xref:System.DateTime> value, the time component can continue to appear in formatted output.  \\n  \\n [!code-cpp[System.DateTime.Date#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Date/cpp/date1.cpp#1)]\\n [!code-csharp[System.DateTime.Date#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Date/cs/Date1.cs#1)]\\n [!code-vb[System.DateTime.Date#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Date/vb/Date1.vb#1)]\"\n  syntax:\n    content: public DateTime Date { get; }\n    return:\n      type: System.DateTime\n      description: A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).\n  overload: System.DateTime.Date*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Day\n  commentId: P:System.DateTime.Day\n  id: Day\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Day\n  nameWithType: DateTime.Day\n  fullName: DateTime.Day\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the day of the month represented by this instance.\n  remarks: \"The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar. To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=fullName> method. The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.  \\n  \\n [!code-csharp[System.DateTime.Day#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)]\\n [!code-vb[System.DateTime.Day#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)]  \\n  \\n Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.  \\n  \\n [!code-csharp[System.DateTime.Day#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)]\\n [!code-vb[System.DateTime.Day#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)]\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Day%2A> property.  \\n  \\n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]\"\n  syntax:\n    content: public int Day { get; }\n    return:\n      type: System.Int32\n      description: The day component, expressed as a value between 1 and 31.\n  overload: System.DateTime.Day*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.DayOfWeek\n  commentId: P:System.DateTime.DayOfWeek\n  id: DayOfWeek\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DayOfWeek\n  nameWithType: DateTime.DayOfWeek\n  fullName: DateTime.DayOfWeek\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the day of the week represented by this instance.\n  remarks: \"The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek?displayProperty=fullName> to <xref:System.DayOfWeek?displayProperty=fullName>. If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek?displayProperty=fullName>) to six (which indicates <xref:System.DayOfWeek?displayProperty=fullName>).  \\n  \\n The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings. To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings. For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md).\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.DayOfWeek%2A> property and the <xref:System.DayOfWeek?displayProperty=fullName> enumeration.  \\n  \\n [!code-cpp[DateTime.DayOfWeek#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DayOfWeek/CPP/dow.cpp#1)]\\n [!code-csharp[DateTime.DayOfWeek#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DayOfWeek/CS/dow.cs#1)]\\n [!code-vb[DateTime.DayOfWeek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DayOfWeek/VB/dow.vb#1)]\"\n  syntax:\n    content: public DayOfWeek DayOfWeek { get; }\n    return:\n      type: System.DayOfWeek\n      description: An enumerated constant that indicates the day of the week of this <xref href=\"System.DateTime\"></xref> value.\n  overload: System.DateTime.DayOfWeek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.DayOfYear\n  commentId: P:System.DateTime.DayOfYear\n  id: DayOfYear\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DayOfYear\n  nameWithType: DateTime.DayOfYear\n  fullName: DateTime.DayOfYear\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the day of the year represented by this instance.\n  remarks: The<xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year. The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar. To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=fullName> method of that calendar.\n  example:\n  - \"The following example displays the day of the year of December 31 for the years 2010-2020 in the Gregorian calendar. Note that the example shows that December 31 is the 366th day of the year in leap years.  \\n  \\n [!code-csharp[System.DateTime.DayOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.dayofyear/cs/dayofyear2.cs#1)]\\n [!code-vb[System.DateTime.DayOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.dayofyear/vb/dayofyear2.vb#1)]\"\n  syntax:\n    content: public int DayOfYear { get; }\n    return:\n      type: System.Int32\n      description: The day of the year, expressed as a value between 1 and 366.\n  overload: System.DateTime.DayOfYear*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.DaysInMonth(System.Int32,System.Int32)\n  commentId: M:System.DateTime.DaysInMonth(System.Int32,System.Int32)\n  id: DaysInMonth(System.Int32,System.Int32)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: DaysInMonth(Int32, Int32)\n  nameWithType: DateTime.DaysInMonth(Int32, Int32)\n  fullName: DateTime.DaysInMonth(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the number of days in the specified month and year.\n  remarks: The<xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar. To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method.\n  example:\n  - \"The following example demonstrates how to use the <xref:System.DateTime.DaysInMonth%2A> method to determine the number of days in July 2001, February 1998 (a non-leap year), and February 1996 (a leap year).  \\n  \\n [!code-cpp[DateTime.DaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DaysInMonth/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DaysInMonth/CS/class1.cs#1)]\\n [!code-vb[DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DaysInMonth/VB/class1.vb#1)]  \\n  \\n The following example displays the number of days in each month of a year specified in an integer array.  \\n  \\n [!code-csharp[System.DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.daysinmonth/cs/daysinmonth3.cs#1)]\\n [!code-vb[System.DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.daysinmonth/vb/daysinmonth3.vb#1)]\"\n  syntax:\n    content: public static int DaysInMonth (int year, int month);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: The year.\n    - id: month\n      type: System.Int32\n      description: The month (a number ranging from 1 to 12).\n    return:\n      type: System.Int32\n      description: \"The number of days in <code>month</code> for the specified <code>year</code>.  \\n  \\n For example, if <code>month</code> equals 2 for February, the return value is 28 or 29 depending upon whether <code>year</code> is a leap year.\"\n  overload: System.DateTime.DaysInMonth*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>month</code> is less than 1 or greater than 12.  \\n  \\n -or-  \\n  \\n <code>year</code> is less than 1 or greater than 9999.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Equals(System.DateTime)\n  commentId: M:System.DateTime.Equals(System.DateTime)\n  id: Equals(System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Equals(DateTime)\n  nameWithType: DateTime.Equals(DateTime)\n  fullName: DateTime.Equals(DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether the value of this instance is equal to the value of the specified <xref href=\"System.DateTime\"></xref> instance.\n  remarks: \"The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.  \\n  \\n This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than the <xref:System.DateTime.Equals%2A> method because the `value` parameter does not have to be converted to an object.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Equals%2A> method.  \\n  \\n [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]\\n [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]\"\n  syntax:\n    content: public bool Equals (DateTime value);\n    parameters:\n    - id: value\n      type: System.DateTime\n      description: The object to compare to this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>value</code> parameter equals the value of this instance; otherwise, `false`.'\n  overload: System.DateTime.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Equals(System.Object)\n  commentId: M:System.DateTime.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DateTime.Equals(Object)\n  fullName: DateTime.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether this instance is equal to a specified object.\n  remarks: The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Equals%2A> method.  \\n  \\n [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]\\n [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]\"\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to compare to this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> is an instance of <xref href=\"System.DateTime\"></xref> and equals the value of this instance; otherwise, `false`.'\n  overload: System.DateTime.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Equals(System.DateTime,System.DateTime)\n  commentId: M:System.DateTime.Equals(System.DateTime,System.DateTime)\n  id: Equals(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Equals(DateTime, DateTime)\n  nameWithType: DateTime.Equals(DateTime, DateTime)\n  fullName: DateTime.Equals(DateTime, DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether two <xref href=\"System.DateTime\"></xref> instances  have the same date and time value.\n  remarks: '`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal. Their<xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.'\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Equals%2A> method.  \\n  \\n [!code-cpp[DateTime.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Equals/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Equals/CS/class1.cs#1)]\\n [!code-vb[DateTime.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Equals/VB/class1.vb#1)]\"\n  syntax:\n    content: public static bool Equals (DateTime t1, DateTime t2);\n    parameters:\n    - id: t1\n      type: System.DateTime\n      description: The first object to compare.\n    - id: t2\n      type: System.DateTime\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two values are equal; otherwise, `false`.'\n  overload: System.DateTime.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.FromBinary(System.Int64)\n  commentId: M:System.DateTime.FromBinary(System.Int64)\n  id: FromBinary(System.Int64)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: FromBinary(Int64)\n  nameWithType: DateTime.FromBinary(Int64)\n  fullName: DateTime.FromBinary(Int64)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Deserializes a 64-bit binary value and recreates an original serialized <xref href=\"System.DateTime\"></xref> object.\n  remarks: \"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.  \\n  \\n> [!IMPORTANT]\\n>  In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \\\"Local Time Adjustment\\\".  \\n  \\n## Local Time Adjustment  \\n A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:  \\n  \\n-   If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.  \\n  \\n     For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.  \\n  \\n-   If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.  \\n  \\n     For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.  \\n  \\n     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]\\n     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  \\n  \\n## Version Considerations  \\n Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.  \\n  \\n Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you needed to serialize only the Ticks data in the <xref:System.DateTime>. Starting with the .NET Framework 2.0, you must also serialize the Kind data.\"\n  syntax:\n    content: public static DateTime FromBinary (long dateData);\n    parameters:\n    - id: dateData\n      type: System.Int64\n      description: A 64-bit signed integer that encodes the <xref href=\"System.DateTime.Kind\"></xref> property in a 2-bit field and the <xref href=\"System.DateTime.Ticks\"></xref> property in a 62-bit field.\n    return:\n      type: System.DateTime\n      description: An object that is equivalent to the <xref href=\"System.DateTime\"></xref> object that was serialized by the <xref href=\"System.DateTime.ToBinary\"></xref> method.\n  overload: System.DateTime.FromBinary*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dateData</code> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.FromFileTime(System.Int64)\n  commentId: M:System.DateTime.FromFileTime(System.Int64)\n  id: FromFileTime(System.Int64)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: FromFileTime(Int64)\n  nameWithType: DateTime.FromFileTime(Int64)\n  fullName: DateTime.FromFileTime(Int64)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified Windows file time to an equivalent local time.\n  remarks: \"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \\n  \\n The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.  \\n  \\n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.FromFileTime%2A> method.  \\n  \\n [!code-cpp[DateTime.FromFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.FromFileTime/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.FromFileTime/CS/class1.cs#1)]\\n [!code-vb[DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.FromFileTime/VB/class1.vb#1)]\"\n  syntax:\n    content: public static DateTime FromFileTime (long fileTime);\n    parameters:\n    - id: fileTime\n      type: System.Int64\n      description: A Windows file time expressed in ticks.\n    return:\n      type: System.DateTime\n      description: An object that represents the local time equivalent of the date and time represented by the <code>fileTime</code> parameter.\n  overload: System.DateTime.FromFileTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>fileTime</code> is less than 0 or represents a time greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.FromFileTimeUtc(System.Int64)\n  commentId: M:System.DateTime.FromFileTimeUtc(System.Int64)\n  id: FromFileTimeUtc(System.Int64)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: FromFileTimeUtc(Int64)\n  nameWithType: DateTime.FromFileTimeUtc(Int64)\n  fullName: DateTime.FromFileTimeUtc(Int64)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified Windows file time to an equivalent UTC time.\n  remarks: \"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \\n  \\n The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.  \\n  \\n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>.\"\n  syntax:\n    content: public static DateTime FromFileTimeUtc (long fileTime);\n    parameters:\n    - id: fileTime\n      type: System.Int64\n      description: A Windows file time expressed in ticks.\n    return:\n      type: System.DateTime\n      description: An object that represents the UTC time equivalent of the date and time represented by the <code>fileTime</code> parameter.\n  overload: System.DateTime.FromFileTimeUtc*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>fileTime</code> is less than 0 or represents a time greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.FromOADate(System.Double)\n  commentId: M:System.DateTime.FromOADate(System.Double)\n  id: FromOADate(System.Double)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: FromOADate(Double)\n  nameWithType: DateTime.FromOADate(Double)\n  fullName: DateTime.FromOADate(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns a <xref href=\"System.DateTime\"></xref> equivalent to the specified OLE Automation Date.\n  remarks: \"The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899. The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight. `d` must be a value between negative 657435.0 through positive 2958465.99999999.  \\n  \\n Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899. For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.  \\n  \\n See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation.\"\n  syntax:\n    content: public static DateTime FromOADate (double d);\n    parameters:\n    - id: d\n      type: System.Double\n      description: An OLE Automation Date value.\n    return:\n      type: System.DateTime\n      description: An object that represents the same date and time as <code>d</code>.\n  overload: System.DateTime.FromOADate*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The date is not a valid OLE Automation Date value.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.GetDateTimeFormats\n  commentId: M:System.DateTime.GetDateTimeFormats\n  id: GetDateTimeFormats\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: GetDateTimeFormats()\n  nameWithType: DateTime.GetDateTimeFormats()\n  fullName: DateTime.GetDateTimeFormats()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.\n  remarks: \"The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=fullName> method with the \\\"d\\\", \\\"D\\\", \\\"f\\\", \\\"F\\\", \\\"g\\\", \\\"G\\\", \\\"m\\\", \\\"o\\\", \\\"r\\\", \\\"s\\\", \\\"t\\\", \\\"T\\\", \\\"u\\\", \\\"U\\\", and \\\"y\\\" standard format strings. For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \\n  \\n Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.  \\n  \\n> [!IMPORTANT]\\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats?displayProperty=fullName> method. It displays the string representation of a date using all possible standard date and time formats in the computer's current culture, which in this case is en-US.  \\n  \\n [!code-cpp[DateTime.GetDateTimeFormats#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.GetDateTimeFormats#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#1)]\\n [!code-vb[DateTime.GetDateTimeFormats#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#1)]  \\n  \\n The example displays the following output:  \\n  \\n```  \\n7/28/2009  \\n7/28/09  \\n07/28/09  \\n07/28/2009  \\n09/07/28  \\n2009-07-28  \\n28-Jul-09  \\nTuesday, July 28, 2009  \\nJuly 28, 2009  \\nTuesday, 28 July, 2009  \\n28 July, 2009  \\nTuesday, July 28, 2009 5:23 AM  \\nTuesday, July 28, 2009 05:23 AM  \\nTuesday, July 28, 2009 5:23  \\nTuesday, July 28, 2009 05:23  \\nJuly 28, 2009 5:23 AM  \\nJuly 28, 2009 05:23 AM  \\nJuly 28, 2009 5:23  \\nJuly 28, 2009 05:23  \\nTuesday, 28 July, 2009 5:23 AM  \\nTuesday, 28 July, 2009 05:23 AM  \\nTuesday, 28 July, 2009 5:23  \\nTuesday, 28 July, 2009 05:23  \\n28 July, 2009 5:23 AM  \\n28 July, 2009 05:23 AM  \\n28 July, 2009 5:23  \\n28 July, 2009 05:23  \\nTuesday, July 28, 2009 5:23:15 AM  \\nTuesday, July 28, 2009 05:23:15 AM  \\nTuesday, July 28, 2009 5:23:15  \\nTuesday, July 28, 2009 05:23:15  \\nJuly 28, 2009 5:23:15 AM  \\nJuly 28, 2009 05:23:15 AM  \\nJuly 28, 2009 5:23:15  \\nJuly 28, 2009 05:23:15  \\nTuesday, 28 July, 2009 5:23:15 AM  \\nTuesday, 28 July, 2009 05:23:15 AM  \\nTuesday, 28 July, 2009 5:23:15  \\nTuesday, 28 July, 2009 05:23:15  \\n28 July, 2009 5:23:15 AM  \\n28 July, 2009 05:23:15 AM  \\n28 July, 2009 5:23:15  \\n28 July, 2009 05:23:15  \\n7/28/2009 5:23 AM  \\n7/28/2009 05:23 AM  \\n7/28/2009 5:23  \\n7/28/2009 05:23  \\n7/28/09 5:23 AM  \\n7/28/09 05:23 AM  \\n7/28/09 5:23  \\n7/28/09 05:23  \\n07/28/09 5:23 AM  \\n07/28/09 05:23 AM  \\n07/28/09 5:23  \\n07/28/09 05:23  \\n07/28/2009 5:23 AM  \\n07/28/2009 05:23 AM  \\n07/28/2009 5:23  \\n07/28/2009 05:23  \\n09/07/28 5:23 AM  \\n09/07/28 05:23 AM  \\n09/07/28 5:23  \\n09/07/28 05:23  \\n2009-07-28 5:23 AM  \\n2009-07-28 05:23 AM  \\n2009-07-28 5:23  \\n2009-07-28 05:23  \\n28-Jul-09 5:23 AM  \\n28-Jul-09 05:23 AM  \\n28-Jul-09 5:23  \\n28-Jul-09 05:23  \\n7/28/2009 5:23:15 AM  \\n7/28/2009 05:23:15 AM  \\n7/28/2009 5:23:15  \\n7/28/2009 05:23:15  \\n7/28/09 5:23:15 AM  \\n7/28/09 05:23:15 AM  \\n7/28/09 5:23:15  \\n7/28/09 05:23:15  \\n07/28/09 5:23:15 AM  \\n07/28/09 05:23:15 AM  \\n07/28/09 5:23:15  \\n07/28/09 05:23:15  \\n07/28/2009 5:23:15 AM  \\n07/28/2009 05:23:15 AM  \\n07/28/2009 5:23:15  \\n07/28/2009 05:23:15  \\n09/07/28 5:23:15 AM  \\n09/07/28 05:23:15 AM  \\n09/07/28 5:23:15  \\n09/07/28 05:23:15  \\n2009-07-28 5:23:15 AM  \\n2009-07-28 05:23:15 AM  \\n2009-07-28 5:23:15  \\n2009-07-28 05:23:15  \\n28-Jul-09 5:23:15 AM  \\n28-Jul-09 05:23:15 AM  \\n28-Jul-09 5:23:15  \\n28-Jul-09 05:23:15  \\nJuly 28  \\nJuly 28  \\n2009-07-28T05:23:15.0160000  \\n2009-07-28T05:23:15.0160000  \\nTue, 28 Jul 2009 05:23:15 GMT  \\nTue, 28 Jul 2009 05:23:15 GMT  \\n2009-07-28T05:23:15  \\n5:23 AM  \\n05:23 AM  \\n5:23  \\n05:23  \\n5:23:15 AM  \\n05:23:15 AM  \\n5:23:15  \\n05:23:15  \\n2009-07-28 05:23:15Z  \\nTuesday, July 28, 2009 12:23:15 PM  \\nTuesday, July 28, 2009 12:23:15 PM  \\nTuesday, July 28, 2009 12:23:15  \\nTuesday, July 28, 2009 12:23:15  \\nJuly 28, 2009 12:23:15 PM  \\nJuly 28, 2009 12:23:15 PM  \\nJuly 28, 2009 12:23:15  \\nJuly 28, 2009 12:23:15  \\nTuesday, 28 July, 2009 12:23:15 PM  \\nTuesday, 28 July, 2009 12:23:15 PM  \\nTuesday, 28 July, 2009 12:23:15  \\nTuesday, 28 July, 2009 12:23:15  \\n28 July, 2009 12:23:15 PM  \\n28 July, 2009 12:23:15 PM  \\n28 July, 2009 12:23:15  \\n28 July, 2009 12:23:15  \\nJuly, 2009  \\nJuly, 2009  \\n```\"\n  syntax:\n    content: public string[] GetDateTimeFormats ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.\n  overload: System.DateTime.GetDateTimeFormats*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.GetDateTimeFormats(System.Char)\n  commentId: M:System.DateTime.GetDateTimeFormats(System.Char)\n  id: GetDateTimeFormats(System.Char)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: GetDateTimeFormats(Char)\n  nameWithType: DateTime.GetDateTimeFormats(Char)\n  fullName: DateTime.GetDateTimeFormats(Char)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.\n  remarks: \"The `format` parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \\n  \\n Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.  \\n  \\n> [!IMPORTANT]\\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29> method. It displays the string representation of a date using the long date format specifier (\\\"D\\\") for the current culture.  \\n  \\n [!code-csharp[DateTime.GetDateTimeFormats#3](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#3)]\\n [!code-vb[DateTime.GetDateTimeFormats#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#3)]\"\n  syntax:\n    content: public string[] GetDateTimeFormats (char format);\n    parameters:\n    - id: format\n      type: System.Char\n      description: A standard date and time format string.\n    return:\n      type: System.String[]\n      description: A string array where each element is the representation of the value of this instance formatted with the <code>format</code> standard date and time format specifier.\n  overload: System.DateTime.GetDateTimeFormats*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> is not a valid standard date and time format specifier character.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.GetDateTimeFormats(System.IFormatProvider)\n  commentId: M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)\n  id: GetDateTimeFormats(System.IFormatProvider)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: GetDateTimeFormats(IFormatProvider)\n  nameWithType: DateTime.GetDateTimeFormats(IFormatProvider)\n  fullName: DateTime.GetDateTimeFormats(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.\n  remarks: \"The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=fullName> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \\\"d\\\", \\\"D\\\", \\\"f\\\", \\\"F\\\", \\\"g\\\", \\\"G\\\", \\\"m\\\", \\\"o\\\", \\\"r\\\", \\\"s\\\", \\\"t\\\", \\\"T\\\", \\\"u\\\", \\\"U\\\", and \\\"y\\\" standard format strings. For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \\n  \\n Each element of the return value is formatted using culture-specific information supplied by `provider`.  \\n  \\n> [!IMPORTANT]\\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=fullName>method. It displays the string representation of a date using all possible standard date and time formats for the fr-FR culture.  \\n  \\n [!code-cpp[DateTime.GetDateTimeFormats#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#2)]\\n [!code-csharp[DateTime.GetDateTimeFormats#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#2)]\\n [!code-vb[DateTime.GetDateTimeFormats#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#2)]  \\n  \\n The example displays the following output:  \\n  \\n```  \\n28/07/2009  \\n28/07/09  \\n28.07.09  \\n28-07-09  \\n2009-07-28  \\nmardi 28 juillet 2009  \\n28 juil. 09  \\n28 juillet 2009  \\nmardi 28 juillet 2009 05:23  \\nmardi 28 juillet 2009 5:23  \\nmardi 28 juillet 2009 05.23  \\nmardi 28 juillet 2009 05 h 23  \\n28 juil. 09 05:23  \\n28 juil. 09 5:23  \\n28 juil. 09 05.23  \\n28 juil. 09 05 h 23  \\n28 juillet 2009 05:23  \\n28 juillet 2009 5:23  \\n28 juillet 2009 05.23  \\n28 juillet 2009 05 h 23  \\nmardi 28 juillet 2009 05:23:15  \\nmardi 28 juillet 2009 5:23:15  \\nmardi 28 juillet 2009 05.23  \\nmardi 28 juillet 2009 05 h 23  \\n28 juil. 09 05:23:15  \\n28 juil. 09 5:23:15  \\n28 juil. 09 05.23  \\n28 juil. 09 05 h 23  \\n28 juillet 2009 05:23:15  \\n28 juillet 2009 5:23:15  \\n28 juillet 2009 05.23  \\n28 juillet 2009 05 h 23  \\n28/07/2009 05:23  \\n28/07/2009 5:23  \\n28/07/2009 05.23  \\n28/07/2009 05 h 23  \\n28/07/09 05:23  \\n28/07/09 5:23  \\n28/07/09 05.23  \\n28/07/09 05 h 23  \\n28.07.09 05:23  \\n28.07.09 5:23  \\n28.07.09 05.23  \\n28.07.09 05 h 23  \\n28-07-09 05:23  \\n28-07-09 5:23  \\n28-07-09 05.23  \\n28-07-09 05 h 23  \\n2009-07-28 05:23  \\n2009-07-28 5:23  \\n2009-07-28 05.23  \\n2009-07-28 05 h 23  \\n28/07/2009 05:23:15  \\n28/07/2009 5:23:15  \\n28/07/2009 05.23  \\n28/07/2009 05 h 23  \\n28/07/09 05:23:15  \\n28/07/09 5:23:15  \\n28/07/09 05.23  \\n28/07/09 05 h 23  \\n28.07.09 05:23:15  \\n28.07.09 5:23:15  \\n28.07.09 05.23  \\n28.07.09 05 h 23  \\n28-07-09 05:23:15  \\n28-07-09 5:23:15  \\n28-07-09 05.23  \\n28-07-09 05 h 23  \\n2009-07-28 05:23:15  \\n2009-07-28 5:23:15  \\n2009-07-28 05.23  \\n2009-07-28 05 h 23  \\n28 juillet  \\n28 juillet  \\n2009-07-28T05:23:15.0160000  \\n2009-07-28T05:23:15.0160000  \\nTue, 28 Jul 2009 05:23:15 GMT  \\nTue, 28 Jul 2009 05:23:15 GMT  \\n2009-07-28T05:23:15  \\n05:23  \\n5:23  \\n05.23  \\n05 h 23  \\n05:23:15  \\n5:23:15  \\n05.23  \\n05 h 23  \\n2009-07-28 05:23:15Z  \\nmardi 28 juillet 2009 12:23:15  \\nmardi 28 juillet 2009 12:23:15  \\nmardi 28 juillet 2009 12.23  \\nmardi 28 juillet 2009 12 h 23  \\n28 juil. 09 12:23:15  \\n28 juil. 09 12:23:15  \\n28 juil. 09 12.23  \\n28 juil. 09 12 h 23  \\n28 juillet 2009 12:23:15  \\n28 juillet 2009 12:23:15  \\n28 juillet 2009 12.23  \\n28 juillet 2009 12 h 23  \\njuillet 2009  \\njuillet 2009  \\n```\"\n  syntax:\n    content: public string[] GetDateTimeFormats (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about this instance.\n    return:\n      type: System.String[]\n      description: A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.\n  overload: System.DateTime.GetDateTimeFormats*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)\n  commentId: M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)\n  id: GetDateTimeFormats(System.Char,System.IFormatProvider)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: GetDateTimeFormats(Char, IFormatProvider)\n  nameWithType: DateTime.GetDateTimeFormats(Char, IFormatProvider)\n  fullName: DateTime.GetDateTimeFormats(Char, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.\n  remarks: \"The format parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).  \\n  \\n Each element of the return value is formatted using culture-specific information supplied by `provider`.  \\n  \\n> [!IMPORTANT]\\n>  Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29> method. It displays the string representations of a date using the short date format specifier (\\\"d\\\") for the fr-FR culture.  \\n  \\n [!code-csharp[DateTime.GetDateTimeFormats#4](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#4)]\\n [!code-vb[DateTime.GetDateTimeFormats#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#4)]\"\n  syntax:\n    content: public string[] GetDateTimeFormats (char format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.Char\n      description: A date and time format string.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about this instance.\n    return:\n      type: System.String[]\n      description: A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.\n  overload: System.DateTime.GetDateTimeFormats*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> is not a valid standard date and time format specifier character.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.GetHashCode\n  commentId: M:System.DateTime.GetHashCode\n  id: GetHashCode\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DateTime.GetHashCode()\n  fullName: DateTime.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.DateTime.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.GetTypeCode\n  commentId: M:System.DateTime.GetTypeCode\n  id: GetTypeCode\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: GetTypeCode()\n  nameWithType: DateTime.GetTypeCode()\n  fullName: DateTime.GetTypeCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.DateTime\"></xref>.\n  syntax:\n    content: public TypeCode GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: The enumerated constant, <xref href=\"System.TypeCode.DateTime\"></xref>.\n  overload: System.DateTime.GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Hour\n  commentId: P:System.DateTime.Hour\n  id: Hour\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Hour\n  nameWithType: DateTime.Hour\n  fullName: DateTime.Hour\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the hour component of the date represented by this instance.\n  remarks: \"The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock. To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method with the \\\"h\\\" custom format specifier. For example:  \\n  \\n [!code-csharp[System.DateTime.Hour#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)]\\n [!code-vb[System.DateTime.Hour#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)]\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Hour%2A> property.  \\n  \\n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]\"\n  syntax:\n    content: public int Hour { get; }\n    return:\n      type: System.Int32\n      description: The hour component, expressed as a value between 0 and 23.\n  overload: System.DateTime.Hour*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.IsDaylightSavingTime\n  commentId: M:System.DateTime.IsDaylightSavingTime\n  id: IsDaylightSavingTime\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IsDaylightSavingTime()\n  nameWithType: DateTime.IsDaylightSavingTime()\n  fullName: DateTime.IsDaylightSavingTime()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Indicates whether this instance of <xref href=\"System.DateTime\"></xref> is within the daylight saving time range for the current time zone.\n  remarks: \"This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName> property. You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=fullName> property. For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName> property.  \\n  \\n If the current <xref:System.DateTime> value represents either an ambiguous or an invalid time in the local time zone, the method returns `false`.  \\n  \\n On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time. As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.\"\n  syntax:\n    content: public bool IsDaylightSavingTime ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the value of the <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Local\"></xref> or <xref href=\"System.DateTimeKind.Unspecified\"></xref> and the value of this instance of <xref href=\"System.DateTime\"></xref> is within the daylight saving time range for the local time zone; `false` if <xref href=\"System.DateTime.Kind\"></xref> is <xref href=\"System.DateTimeKind.Utc\"></xref>.'\n  overload: System.DateTime.IsDaylightSavingTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.IsLeapYear(System.Int32)\n  commentId: M:System.DateTime.IsLeapYear(System.Int32)\n  id: IsLeapYear(System.Int32)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IsLeapYear(Int32)\n  nameWithType: DateTime.IsLeapYear(Int32)\n  fullName: DateTime.IsLeapYear(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns an indication whether the specified year is a leap year.\n  remarks: \"`year` is specified as a 4-digit base 10 number; for example, 1996.  \\n  \\n `year` is always interpreted as a year in the Gregorian calendar. To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.IsLeapYear%2A> method to determine which years between 1994 and 2014 are leap years. The example also illustrates the result when the <xref:System.DateTime.AddYears%2A> method is used to add a year to a leap day.  \\n  \\n [!code-csharp[System.DateTime.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/cs/IsLeapYear1.cs#1)]\\n [!code-vb[System.DateTime.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/vb/IsLeapYear1.vb#1)]\"\n  syntax:\n    content: public static bool IsLeapYear (int year);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: A 4-digit year.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>year</code> is a leap year; otherwise, `false`.'\n  overload: System.DateTime.IsLeapYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>year</code> is less than 1 or greater than 9999.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Kind\n  commentId: P:System.DateTime.Kind\n  id: Kind\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Kind\n  nameWithType: DateTime.Kind\n  fullName: DateTime.Kind\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.\n  remarks: \"You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method.  \\n  \\n The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time. In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \\n  \\n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]\"\n  syntax:\n    content: public DateTimeKind Kind { get; }\n    return:\n      type: System.DateTimeKind\n      description: One of the enumeration values that indicates what the current time represents. The default is <xref href=\"System.DateTimeKind.Unspecified\"></xref>.\n  overload: System.DateTime.Kind*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.MaxValue\n  commentId: F:System.DateTime.MaxValue\n  id: MaxValue\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: DateTime.MaxValue\n  fullName: DateTime.MaxValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the largest possible value of <xref href=\"System.DateTime\"></xref>. This field is read-only.\n  remarks: \"The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.  \\n  \\n Some calendars, such as the <xref:System.Globalization.UmAlQuraCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>. In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>. Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=fullName>, you can retrieve the value of the specified culture's latest valid date value from the `System.Globalization.CultureInfo.DateTimeFormat.Calendar.MaxSupportedDateTime` property.\"\n  example:\n  - \"The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks. Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`. If not, it throws an <xref:System.ArgumentOutOfRangeException>.  \\n  \\n [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]\\n [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]\"\n  syntax:\n    content: public static readonly DateTime MaxValue;\n    return:\n      type: System.DateTime\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Millisecond\n  commentId: P:System.DateTime.Millisecond\n  id: Millisecond\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Millisecond\n  nameWithType: DateTime.Millisecond\n  fullName: DateTime.Millisecond\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the milliseconds component of the date represented by this instance.\n  remarks: \"You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the \\\"fff\\\" format specifier. For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.  \\n  \\n [!code-csharp[System.DateTime.Millisecond#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)]\\n [!code-vb[System.DateTime.Millisecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)]  \\n  \\n You can also display the millisecond component together with the other components of a date and time value by using the \\\"o\\\" standard format specifier. For example:  \\n  \\n [!code-csharp[System.DateTime.Millisecond#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)]\\n [!code-vb[System.DateTime.Millisecond#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)]  \\n  \\n However, the \\\"o\\\" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value. You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.  \\n  \\n [!code-csharp[System.DateTime.Millisecond#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)]\\n [!code-vb[System.DateTime.Millisecond#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)]\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Millisecond%2A> property.  \\n  \\n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]\"\n  syntax:\n    content: public int Millisecond { get; }\n    return:\n      type: System.Int32\n      description: The milliseconds component, expressed as a value between 0 and 999.\n  overload: System.DateTime.Millisecond*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Minute\n  commentId: P:System.DateTime.Minute\n  id: Minute\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Minute\n  nameWithType: DateTime.Minute\n  fullName: DateTime.Minute\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the minute component of the date represented by this instance.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Minute%2A> property.  \\n  \\n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]\"\n  syntax:\n    content: public int Minute { get; }\n    return:\n      type: System.Int32\n      description: The minute component, expressed as a value between 0 and 59.\n  overload: System.DateTime.Minute*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.MinValue\n  commentId: F:System.DateTime.MinValue\n  id: MinValue\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: DateTime.MinValue\n  fullName: DateTime.MinValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the smallest possible value of <xref href=\"System.DateTime\"></xref>. This field is read-only.\n  remarks: \"The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.  \\n  \\n <xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable. The following example illustrates this.  \\n  \\n [!code-csharp[System.DateTime.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)]\\n [!code-vb[System.DateTime.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)]  \\n  \\n The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor. The code in the Example section illustrates this usage.\"\n  example:\n  - \"The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks. Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`. If not, it throws an <xref:System.ArgumentOutOfRangeException>.  \\n  \\n [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]\\n [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]\"\n  syntax:\n    content: public static readonly DateTime MinValue;\n    return:\n      type: System.DateTime\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Month\n  commentId: P:System.DateTime.Month\n  id: Month\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Month\n  nameWithType: DateTime.Month\n  fullName: DateTime.Month\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the month component of the date represented by this instance.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Month%2A> property.  \\n  \\n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]\"\n  syntax:\n    content: public int Month { get; }\n    return:\n      type: System.Int32\n      description: The month component, expressed as a value between 1 and 12.\n  overload: System.DateTime.Month*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Now\n  commentId: P:System.DateTime.Now\n  id: Now\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Now\n  nameWithType: DateTime.Now\n  fullName: DateTime.Now\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.DateTime\"></xref> object that is set to the current date and time on this computer, expressed as the local time.\n  remarks: \"The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer. Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format. For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A>method. The following example displays the short date and time string in a number of culture-specific formats.  \\n  \\n [!code-cpp[System.DateTime.Now#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)]\\n [!code-csharp[System.DateTime.Now#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)]\\n [!code-vb[System.DateTime.Now#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)]  \\n  \\n The resolution of this property depends on the system timer, which is approximately 15 milliseconds on Windows systems.As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value.  \\n  \\n The <xref:System.DateTime.Now%2A> property is frequently used to measure performance. However, because of its low resolution, it is not suitable for use as a benchmarking tool. A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.  \\n  \\n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n> [!NOTE]\\n>  You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=fullName> property to retrieve the current local date and time. It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.Now%2A> and <xref:System.DateTime.UtcNow%2A> properties to retrieve the current local date and time and the current universal coordinated (UTC) date and time. It then uses the formatting conventions of a number of cultures to display the strings, along with the values of the their <xref:System.DateTime.Kind%2A> properties.  \\n  \\n [!code-cpp[System.DateTime.Now#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now2.cpp#3)]\\n [!code-csharp[System.DateTime.Now#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now2.cs#3)]\\n [!code-vb[System.DateTime.Now#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now2.vb#3)]\"\n  syntax:\n    content: public static DateTime Now { get; }\n    return:\n      type: System.DateTime\n      description: An object whose value is the current local date and time.\n  overload: System.DateTime.Now*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.op_Addition(System.DateTime,System.TimeSpan)\n  commentId: M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)\n  id: op_Addition(System.DateTime,System.TimeSpan)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: op_Addition(DateTime, TimeSpan)\n  nameWithType: DateTime.op_Addition(DateTime, TimeSpan)\n  fullName: DateTime.op_Addition(DateTime, TimeSpan)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Adds a specified time interval to a specified date and time, yielding a new date and time.\n  remarks: The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=fullName>\n  example:\n  - \"The following example demonstrates the addition operator.  \\n  \\n [!code-cpp[DateTime Operators#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#1)]\\n [!code-vb[DateTime Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#1)]\"\n  syntax:\n    content: public static DateTime op_Addition (DateTime d, TimeSpan t);\n    parameters:\n    - id: d\n      type: System.DateTime\n      description: The date and time value to add.\n    - id: t\n      type: System.TimeSpan\n      description: The time interval to add.\n    return:\n      type: System.DateTime\n      description: An object that is the sum of the values of <code>d</code> and <code>t</code>.\n  overload: System.DateTime.op_Addition*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.op_Equality(System.DateTime,System.DateTime)\n  commentId: M:System.DateTime.op_Equality(System.DateTime,System.DateTime)\n  id: op_Equality(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: op_Equality(DateTime, DateTime)\n  nameWithType: DateTime.op_Equality(DateTime, DateTime)\n  fullName: DateTime.op_Equality(DateTime, DateTime)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two specified instances of <xref href=\"System.DateTime\"></xref> are equal.\n  remarks: \"The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \\n  \\n The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>\"\n  example:\n  - \"The following example demonstrates the equality operator.  \\n  \\n [!code-cpp[DateTime Operators#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#2)]\\n [!code-csharp[DateTime Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#2)]\\n [!code-vb[DateTime Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#2)]\"\n  syntax:\n    content: public static bool op_Equality (DateTime d1, DateTime d2);\n    parameters:\n    - id: d1\n      type: System.DateTime\n      description: The first object to compare.\n    - id: d2\n      type: System.DateTime\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> and <code>d2</code> represent the same date and time; otherwise, `false`.'\n  overload: System.DateTime.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)\n  commentId: M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)\n  id: op_GreaterThan(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: op_GreaterThan(DateTime, DateTime)\n  nameWithType: DateTime.op_GreaterThan(DateTime, DateTime)\n  fullName: DateTime.op_GreaterThan(DateTime, DateTime)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether one specified <xref href=\"System.DateTime\"></xref> is later than another specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \\n  \\n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_GreaterThan (DateTime t1, DateTime t2);\n    parameters:\n    - id: t1\n      type: System.DateTime\n      description: The first object to compare.\n    - id: t2\n      type: System.DateTime\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>t1</code> is later than <code>t2</code>; otherwise, `false`.'\n  overload: System.DateTime.op_GreaterThan*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)\n  commentId: M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)\n  id: op_GreaterThanOrEqual(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(DateTime, DateTime)\n  nameWithType: DateTime.op_GreaterThanOrEqual(DateTime, DateTime)\n  fullName: DateTime.op_GreaterThanOrEqual(DateTime, DateTime)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether one specified <xref href=\"System.DateTime\"></xref> represents a date and time that is the same as or later than another specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \\n  \\n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_GreaterThanOrEqual (DateTime t1, DateTime t2);\n    parameters:\n    - id: t1\n      type: System.DateTime\n      description: The first object to compare.\n    - id: t2\n      type: System.DateTime\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>t1</code> is the same as or later than <code>t2</code>; otherwise, `false`.'\n  overload: System.DateTime.op_GreaterThanOrEqual*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.op_Inequality(System.DateTime,System.DateTime)\n  commentId: M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)\n  id: op_Inequality(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: op_Inequality(DateTime, DateTime)\n  nameWithType: DateTime.op_Inequality(DateTime, DateTime)\n  fullName: DateTime.op_Inequality(DateTime, DateTime)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two specified instances of <xref href=\"System.DateTime\"></xref> are not equal.\n  remarks: \"The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \\n  \\n The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Inequality (DateTime d1, DateTime d2);\n    parameters:\n    - id: d1\n      type: System.DateTime\n      description: The first object to compare.\n    - id: d2\n      type: System.DateTime\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> and <code>d2</code> do not represent the same date and time; otherwise, `false`.'\n  overload: System.DateTime.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.op_LessThan(System.DateTime,System.DateTime)\n  commentId: M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)\n  id: op_LessThan(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: op_LessThan(DateTime, DateTime)\n  nameWithType: DateTime.op_LessThan(DateTime, DateTime)\n  fullName: DateTime.op_LessThan(DateTime, DateTime)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether one specified <xref href=\"System.DateTime\"></xref> is earlier than another specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \\n  \\n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_LessThan (DateTime t1, DateTime t2);\n    parameters:\n    - id: t1\n      type: System.DateTime\n      description: The first object to compare.\n    - id: t2\n      type: System.DateTime\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>t1</code> is earlier than <code>t2</code>; otherwise, `false`.'\n  overload: System.DateTime.op_LessThan*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)\n  commentId: M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)\n  id: op_LessThanOrEqual(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(DateTime, DateTime)\n  nameWithType: DateTime.op_LessThanOrEqual(DateTime, DateTime)\n  fullName: DateTime.op_LessThanOrEqual(DateTime, DateTime)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether one specified <xref href=\"System.DateTime\"></xref> represents a date and time that is the same as or earlier than another specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks. Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.  \\n  \\n The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_LessThanOrEqual (DateTime t1, DateTime t2);\n    parameters:\n    - id: t1\n      type: System.DateTime\n      description: The first object to compare.\n    - id: t2\n      type: System.DateTime\n      description: The second object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>t1</code> is the same as or earlier than <code>t2</code>; otherwise, `false`.'\n  overload: System.DateTime.op_LessThanOrEqual*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.op_Subtraction(System.DateTime,System.DateTime)\n  commentId: M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)\n  id: op_Subtraction(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: op_Subtraction(DateTime, DateTime)\n  nameWithType: DateTime.op_Subtraction(DateTime, DateTime)\n  fullName: DateTime.op_Subtraction(DateTime, DateTime)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts a specified date and time from another specified date and time and returns a time interval.\n  remarks: \"The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.  \\n  \\n> [!NOTE]\\n>  The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction.  \\n  \\n The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.  \\n  \\n [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]\\n [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]\"\n  syntax:\n    content: public static TimeSpan op_Subtraction (DateTime d1, DateTime d2);\n    parameters:\n    - id: d1\n      type: System.DateTime\n      description: The date and time value to subtract from (the minuend).\n    - id: d2\n      type: System.DateTime\n      description: The date and time value to subtract (the subtrahend).\n    return:\n      type: System.TimeSpan\n      description: The time interval between <code>d1</code> and <code>d2</code>; that is, <code>d1</code> minus <code>d2</code>.\n  overload: System.DateTime.op_Subtraction*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)\n  commentId: M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)\n  id: op_Subtraction(System.DateTime,System.TimeSpan)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: op_Subtraction(DateTime, TimeSpan)\n  nameWithType: DateTime.op_Subtraction(DateTime, TimeSpan)\n  fullName: DateTime.op_Subtraction(DateTime, TimeSpan)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts a specified time interval from a specified date and time and returns a new date and time.\n  remarks: \"This method subtracts the ticks value of `t` from the ticks value of `d`.  \\n  \\n The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName>\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.  \\n  \\n [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]\\n [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]\"\n  syntax:\n    content: public static DateTime op_Subtraction (DateTime d, TimeSpan t);\n    parameters:\n    - id: d\n      type: System.DateTime\n      description: The date and time value to subtract from.\n    - id: t\n      type: System.TimeSpan\n      description: The time interval to subtract.\n    return:\n      type: System.DateTime\n      description: An object whose value is the value of <code>d</code> minus the value of <code>t</code>.\n  overload: System.DateTime.op_Subtraction*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting <xref href=\"System.DateTime\"></xref> is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Parse(System.String)\n  commentId: M:System.DateTime.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: DateTime.Parse(String)\n  fullName: DateTime.Parse(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent.\n  remarks: >-\n    > [!NOTE]\n\n    >  For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.\n  syntax:\n    content: public static DateTime Parse (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string that contains a date and time to convert.\n    return:\n      type: System.DateTime\n      description: An object that is equivalent to the date and time contained in <code>s</code>.\n  overload: System.DateTime.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> does not contain a valid string representation of a date and time.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Parse(System.String,System.IFormatProvider)\n  commentId: M:System.DateTime.Parse(System.String,System.IFormatProvider)\n  id: Parse(System.String,System.IFormatProvider)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Parse(String, IFormatProvider)\n  nameWithType: DateTime.Parse(String, IFormatProvider)\n  fullName: DateTime.Parse(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent by using culture-specific format information.\n  remarks: >-\n    > [!NOTE]\n\n    >  For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.\n  syntax:\n    content: public static DateTime Parse (string s, IFormatProvider provider);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific format information about <code>s</code>.\n    return:\n      type: System.DateTime\n      description: An object that is equivalent to the date and time contained in <code>s</code> as specified by <code>provider</code>.\n  overload: System.DateTime.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> does not contain a valid string representation of a date and time.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  commentId: M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  id: Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Parse(String, IFormatProvider, DateTimeStyles)\n  nameWithType: DateTime.Parse(String, IFormatProvider, DateTimeStyles)\n  fullName: DateTime.Parse(String, IFormatProvider, DateTimeStyles)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent by using culture-specific format information and formatting style.\n  remarks: >-\n    > [!NOTE]\n\n    >  For examples and comprehensive usage information about this and other overloads of the `Parse` method, see the <xref:System.DateTime.Parse%2A> overload summary.\n  syntax:\n    content: public static DateTime Parse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>s</code>.\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.\n    return:\n      type: System.DateTime\n      description: An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>provider</code> and <code>styles</code>.\n  overload: System.DateTime.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> does not contain a valid string representation of a date and time.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>styles</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  commentId: M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  nameWithType: DateTime.ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  fullName: DateTime.ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.\n  remarks: \"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>. Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method.  \\n  \\n The `s` parameter contains the date and time to parse. If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.  \\n  \\n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed. The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \\n  \\n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \\\"HH\\\", instead of the narrower form, \\\"H\\\".  \\n  \\n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.  \\n  \\n|DateTimeStyles member|Description|  \\n|---------------------------|-----------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|  \\n  \\n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \\n  \\n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method to ensure that a string in a number of possible formats can be successfully parsed .  \\n  \\n [!code-csharp[System.Datetime.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact3.cs#3)]\\n [!code-vb[System.Datetime.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact3.vb#3)]\"\n  syntax:\n    content: public static DateTime ParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: formats\n      type: System.String[]\n      description: An array of allowable formats of <code>s</code>. For more information, see the Remarks section.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific format information about <code>s</code>.\n    - id: style\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.\n    return:\n      type: System.DateTime\n      description: An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>formats</code>, <code>provider</code>, and <code>style</code>.\n  overload: System.DateTime.ParseExact*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> or <code>formats</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>s</code> is an empty string.  \\n  \\n -or-  \\n  \\n an element of <code>formats</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>s</code> does not contain a date and time that corresponds to any element of <code>formats</code>.  \\n  \\n -or-  \\n  \\n The hour component and the AM/PM designator in <code>s</code> do not agree.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>style</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  commentId: M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  nameWithType: DateTime.ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  fullName: DateTime.ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly or an exception is thrown.\n  remarks: \"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date, which must be in a format defined by the `format` parameter. It also requires that the date and time elements in `s` appear in the order specified by `format`. If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>. In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object. The<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method also allows the date and time elements in `s` to appear in any order.  \\n  \\n If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters.  \\n  \\n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n The `format` parameter defines the required pattern of the `s` parameter. It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \\n  \\n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \\\"HH\\\", instead of the narrower form, \\\"H\\\".  \\n  \\n> [!NOTE]\\n>  Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.  \\n  \\n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.  \\n  \\n|DateTimeStyles member|Description|  \\n|---------------------------|-----------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|  \\n  \\n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \\n  \\n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method. Note that the string \\\" 5/01/2009 8:30 AM\\\" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> because leading spaces are not allowed by `format`. Additionally, the string \\\"5/01/2009 09:00\\\" cannot be parsed successfully with a `format` of \\\"MM/dd/yyyyhh:mm\\\" because the date string does not precede the month number with a leading zero, as `format` requires.  \\n  \\n [!code-csharp[System.DateTime.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact2.cs#2)]\\n [!code-vb[System.DateTime.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact2.vb#2)]\"\n  syntax:\n    content: public static DateTime ParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a date and time to convert.\n    - id: format\n      type: System.String\n      description: A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>s</code>.\n    - id: style\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of the enumeration values that provides additional information about <code>s</code>, about style elements that may be present in <code>s</code>, or about the conversion from <code>s</code> to a <xref href=\"System.DateTime\"></xref> value. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.\n    return:\n      type: System.DateTime\n      description: An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code>, <code>provider</code>, and <code>style</code>.\n  overload: System.DateTime.ParseExact*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> or <code>format</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>s</code> or <code>format</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>.  \\n  \\n -or-  \\n  \\n The hour component and the AM/PM designator in <code>s</code> do not agree.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>style</code> contains an invalid combination of <xref href=\"System.Globalization.DateTimeStyles\"></xref> values. For example, both <xref href=\"System.Globalization.DateTimeStyles.AssumeLocal\"></xref> and <xref href=\"System.Globalization.DateTimeStyles.AssumeUniversal\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)\n  commentId: M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)\n  id: ParseExact(System.String,System.String,System.IFormatProvider)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ParseExact(String, String, IFormatProvider)\n  nameWithType: DateTime.ParseExact(String, String, IFormatProvider)\n  fullName: DateTime.ParseExact(String, String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.\n  remarks: \"The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It also requires that the \\\\<Date> and \\\\<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`. If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00). If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`.  \\n  \\n If `s` does not represent a time in a particular time zone and the parse operation succeeds, the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>. If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the \\\"o\\\", \\\"r\\\", or \\\"u\\\" standard format specifiers, or if it contains the \\\"z\\\", \\\"zz\\\", or \\\"zzz\\\" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`. For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  \\n  \\n> [!NOTE]\\n>  If `format` is a custom format pattern that does not include date or time separators (such as \\\"yyyyMMddHHmm\\\"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the format pattern, specify the wider form, \\\"HH\\\", instead of the narrower form, \\\"H\\\".  \\n  \\n The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \\n  \\n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.ParseExact%2A> method.  \\n  \\n [!code-csharp[System.DateTime.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/ParseExact1.cs#1)]\\n [!code-vb[System.DateTime.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/ParseExact1.vb#1)]\"\n  syntax:\n    content: public static DateTime ParseExact (string s, string format, IFormatProvider provider);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: format\n      type: System.String\n      description: A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific format information about <code>s</code>.\n    return:\n      type: System.DateTime\n      description: An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code> and <code>provider</code>.\n  overload: System.DateTime.ParseExact*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> or <code>format</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"<code>s</code> or <code>format</code> is an empty string.  \\n  \\n -or-  \\n  \\n <code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>.  \\n  \\n -or-  \\n  \\n The hour component and the AM/PM designator in <code>s</code> do not agree.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Second\n  commentId: P:System.DateTime.Second\n  id: Second\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Second\n  nameWithType: DateTime.Second\n  fullName: DateTime.Second\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the seconds component of the date represented by this instance.\n  remarks: ''\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Second%2A> property.  \\n  \\n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]\"\n  syntax:\n    content: public int Second { get; }\n    return:\n      type: System.Int32\n      description: The seconds component, expressed as a value between 0 and 59.\n  overload: System.DateTime.Second*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\n  commentId: M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\n  id: SpecifyKind(System.DateTime,System.DateTimeKind)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: SpecifyKind(DateTime, DateTimeKind)\n  nameWithType: DateTime.SpecifyKind(DateTime, DateTimeKind)\n  fullName: DateTime.SpecifyKind(DateTime, DateTimeKind)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Creates a new <xref href=\"System.DateTime\"></xref> object that has the same number of ticks as the specified <xref href=\"System.DateTime\"></xref>, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <xref href=\"System.DateTimeKind\"></xref> value.\n  remarks: \"A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks. The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value.  \\n  \\n> [!IMPORTANT]\\n>  The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method. Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`. For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).  \\n  \\n The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \\n  \\n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]\"\n  syntax:\n    content: public static DateTime SpecifyKind (DateTime value, DateTimeKind kind);\n    parameters:\n    - id: value\n      type: System.DateTime\n      description: A date and time.\n    - id: kind\n      type: System.DateTimeKind\n      description: One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.\n    return:\n      type: System.DateTime\n      description: A new object that has the same number of ticks as the object represented by the <code>value</code> parameter and the <xref href=\"System.DateTimeKind\"></xref> value specified by the <code>kind</code> parameter.\n  overload: System.DateTime.SpecifyKind*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Subtract(System.DateTime)\n  commentId: M:System.DateTime.Subtract(System.DateTime)\n  id: Subtract(System.DateTime)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Subtract(DateTime)\n  nameWithType: DateTime.Subtract(DateTime)\n  fullName: DateTime.Subtract(DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts the specified date and time from this instance.\n  remarks: \"The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates. To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.  \\n  \\n If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span. That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative.  \\n  \\n The<xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction. Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.  \\n  \\n> [!NOTE]\\n>  The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName> method does consider the difference between time zones when performing the subtraction.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.  \\n  \\n [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]\\n [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]\"\n  syntax:\n    content: public TimeSpan Subtract (DateTime value);\n    parameters:\n    - id: value\n      type: System.DateTime\n      description: The date and time value to subtract.\n    return:\n      type: System.TimeSpan\n      description: A time interval that is equal to the date and time represented by this instance minus the date and time represented by <code>value</code>.\n  overload: System.DateTime.Subtract*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The result is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Subtract(System.TimeSpan)\n  commentId: M:System.DateTime.Subtract(System.TimeSpan)\n  id: Subtract(System.TimeSpan)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Subtract(TimeSpan)\n  nameWithType: DateTime.Subtract(TimeSpan)\n  fullName: DateTime.Subtract(TimeSpan)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts the specified duration from this instance.\n  remarks: \"The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance. To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.  \\n  \\n This method does not change the value of this <xref:System.DateTime>. Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.  \\n  \\n Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance. However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.  \\n  \\n The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes). To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:  \\n  \\n-   <xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance.  \\n  \\n-   <xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance.  \\n  \\n-   <xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance.  \\n  \\n-   <xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance.  \\n  \\n-   <xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance.  \\n  \\n-   <xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance.  \\n  \\n-   <xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance.  \\n  \\n-   <xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.  \\n  \\n [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]\\n [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]\"\n  syntax:\n    content: public DateTime Subtract (TimeSpan value);\n    parameters:\n    - id: value\n      type: System.TimeSpan\n      description: The time interval to subtract.\n    return:\n      type: System.DateTime\n      description: An object that is equal to the date and time represented by this instance minus the time interval represented by <code>value</code>.\n  overload: System.DateTime.Subtract*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The result is less than <xref href=\"System.DateTime.MinValue\"></xref> or greater than <xref href=\"System.DateTime.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Ticks\n  commentId: P:System.DateTime.Ticks\n  id: Ticks\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Ticks\n  nameWithType: DateTime.Ticks\n  fullName: DateTime.Ticks\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the number of ticks that represent the date and time of this instance.\n  remarks: \"A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond, or 10 million ticks in a second.  \\n  \\n The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=fullName>. It does not include the number of ticks that are attributable to leap seconds.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.Ticks%2A> property to display the number of ticks that have elapsed since the beginning of the twenty-first century and to instantiate a <xref:System.TimeSpan> object. The <xref:System.TimeSpan> object is then used to display the elapsed time using several other time intervals.  \\n  \\n [!code-csharp[System.DateTime.Ticks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Ticks/cs/Ticks.cs#1)]\\n [!code-vb[System.DateTime.Ticks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Ticks/vb/Ticks.vb#1)]\"\n  syntax:\n    content: public long Ticks { get; }\n    return:\n      type: System.Int64\n      description: The number of ticks that represent the date and time of this instance. The value is between `DateTime.MinValue.Ticks` and `DateTime.MaxValue.Ticks`.\n  overload: System.DateTime.Ticks*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.TimeOfDay\n  commentId: P:System.DateTime.TimeOfDay\n  id: TimeOfDay\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: TimeOfDay\n  nameWithType: DateTime.TimeOfDay\n  fullName: DateTime.TimeOfDay\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the time of day for this instance.\n  remarks: \"Unlike the <xref:System.DateTime.Date%2A> property. which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.  \\n  \\n If you want to display the time of day or retrieve the string representation of the time of day of a <xref:System.DateTime> value, you can instead call an overload of the <xref:System.DateTime.ToString%2A> method that has a `format` parameter or use the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature with the \\\"t\\\" or \\\"T\\\" standard format string.\"\n  example:\n  - \"The following example displays the value of the <xref:System.DateTime.TimeOfDay%2A> property for an array of <xref:System.DateTime> values. It also contrasts the return value with the string returned by the \\\"t\\\" standard format string in a composite formatting operation.  \\n  \\n [!code-csharp[System.DateTime.TimeOfDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.timeofday/cs/timeofday1.cs#1)]\\n [!code-vb[System.DateTime.TimeOfDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.timeofday/vb/timeofday1.vb#1)]\"\n  syntax:\n    content: public TimeSpan TimeOfDay { get; }\n    return:\n      type: System.TimeSpan\n      description: A time interval that represents the fraction of the day that has elapsed since midnight.\n  overload: System.DateTime.TimeOfDay*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToBinary\n  commentId: M:System.DateTime.ToBinary\n  id: ToBinary\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToBinary()\n  nameWithType: DateTime.ToBinary()\n  fullName: DateTime.ToBinary()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Serializes the current <xref href=\"System.DateTime\"></xref> object to a 64-bit binary value that subsequently can be used to recreate the <xref href=\"System.DateTime\"></xref> object.\n  remarks: \"Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value. Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.  \\n  \\n> [!IMPORTANT]\\n>  In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method. For more information, see the next section, \\\"Local Time Adjustment\\\".  \\n  \\n## Local Time Adjustment  \\n A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>. When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:  \\n  \\n-   If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.  \\n  \\n     For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value. Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object. The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.  \\n  \\n-   If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.  \\n  \\n     For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName> method, as the example illustrates.  \\n  \\n     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]\\n     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  \\n  \\n## Version Considerations  \\n Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.  \\n  \\n Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure. Starting with version 2.0, you must also serialize the Kind data.\"\n  syntax:\n    content: public long ToBinary ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: A 64-bit signed integer that encodes the <xref href=\"System.DateTime.Kind\"></xref> and <xref href=\"System.DateTime.Ticks\"></xref> properties.\n  overload: System.DateTime.ToBinary*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Today\n  commentId: P:System.DateTime.Today\n  id: Today\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Today\n  nameWithType: DateTime.Today\n  fullName: DateTime.Today\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the current date.\n  remarks: \"Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>.  \\n  \\n Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only. For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md). In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time.\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.Date%2A> property to retrieve the current date. It also illustrates how a <xref:System.DateTime> value can be formatted using some of the standard date and time format strings. Note that the output produced by the third call to the <xref:System.DateTime.ToString%28System.String%29> method uses the g format specifier to include the time component, which is zero.  \\n  \\n [!code-csharp[System.DateTime.Today#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Today/cs/Today1.cs#1)]\\n [!code-vb[System.DateTime.Today#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Today/vb/Today1.vb#1)]\"\n  syntax:\n    content: public static DateTime Today { get; }\n    return:\n      type: System.DateTime\n      description: An object that is set to today's date, with the time component set to 00:00:00.\n  overload: System.DateTime.Today*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToFileTime\n  commentId: M:System.DateTime.ToFileTime\n  id: ToFileTime\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToFileTime()\n  nameWithType: DateTime.ToFileTime()\n  fullName: DateTime.ToFileTime()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to a Windows file time.\n  remarks: \"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \\n  \\n The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.ToFileTime%2A> method.  \\n  \\n [!code-cpp[DateTime.ToFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToFileTime/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.ToFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToFileTime/CS/class1.cs#1)]\\n [!code-vb[DateTime.ToFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToFileTime/VB/class1.vb#1)]\"\n  syntax:\n    content: public long ToFileTime ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: The value of the current <xref href=\"System.DateTime\"></xref> object expressed as a Windows file time.\n  overload: System.DateTime.ToFileTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToFileTimeUtc\n  commentId: M:System.DateTime.ToFileTimeUtc\n  id: ToFileTimeUtc\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToFileTimeUtc()\n  nameWithType: DateTime.ToFileTimeUtc()\n  fullName: DateTime.ToFileTimeUtc()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to a Windows file time.\n  remarks: \"A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  \\n  \\n The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time. If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.\"\n  syntax:\n    content: public long ToFileTimeUtc ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: The value of the current <xref href=\"System.DateTime\"></xref> object expressed as a Windows file time.\n  overload: System.DateTime.ToFileTimeUtc*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToLocalTime\n  commentId: M:System.DateTime.ToLocalTime\n  id: ToLocalTime\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToLocalTime()\n  nameWithType: DateTime.ToLocalTime()\n  fullName: DateTime.ToLocalTime()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to local time.\n  remarks: \"The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.  \\n  \\n> [!IMPORTANT]\\n>  On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.  \\n  \\n Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.  \\n  \\n|Kind|Results|  \\n|----------|-------------|  \\n|<xref:System.DateTimeKind.Utc>|This instance of <xref:System.DateTime> is converted to local time.|  \\n|<xref:System.DateTimeKind.Local>|No conversion is performed.|  \\n|<xref:System.DateTimeKind.Unspecified>|This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>.|  \\n  \\n> [!NOTE]\\n>  The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time. To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=fullName> method.  \\n  \\n The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>. Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.ToLocalTime%2A> method. Note that the exact output depends on the current culture and the local time zone of the system on which it is run.  \\n  \\n [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]\\n [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  \\n  \\n The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \\n  \\n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]\"\n  syntax:\n    content: public DateTime ToLocalTime ();\n    parameters: []\n    return:\n      type: System.DateTime\n      description: An object whose <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Local\"></xref>, and whose value is the local time equivalent to the value of the current <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MaxValue\"></xref> if the converted value is too large to be represented by a <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MinValue\"></xref> if the converted value is too small to be represented as a <xref href=\"System.DateTime\"></xref> object.\n  overload: System.DateTime.ToLocalTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToLongDateString\n  commentId: M:System.DateTime.ToLongDateString\n  id: ToLongDateString\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToLongDateString()\n  nameWithType: DateTime.ToLongDateString()\n  fullName: DateTime.ToLongDateString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent long date string representation.\n  remarks: \"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture. The return value is identical to the value returned by specifying the \\\"D\\\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \\n  \\n> [!IMPORTANT]\\n>  The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long date pattern is \\\"dddd, MMMMdd, yyyy\\\"; for the de-DE culture, it is \\\"dddd, d. MMMMyyyy\\\"; for the ja-JP culture, it is \\\"yyyy'?'M'?'d'?'\\\". The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.  \\n  \\n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.ToLongDateString%2A> method.  \\n  \\n [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]\\n [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]\"\n  syntax:\n    content: public string ToLongDateString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the long date string representation of the current <xref href=\"System.DateTime\"></xref> object.\n  overload: System.DateTime.ToLongDateString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToLongTimeString\n  commentId: M:System.DateTime.ToLongTimeString\n  id: ToLongTimeString\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToLongTimeString()\n  nameWithType: DateTime.ToLongTimeString()\n  fullName: DateTime.ToLongTimeString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent long time string representation.\n  remarks: \"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \\\"T\\\" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \\n  \\n> [!IMPORTANT]\\n>  The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> property of the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard long time pattern is \\\"h:mm:ss tt\\\"; for the de-DE culture, it is \\\"HH:mm:ss\\\"; for the ja-JP culture, it is \\\"H:mm:ss\\\". The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.  \\n  \\n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.ToLongTimeString%2A> method.  \\n  \\n [!code-csharp[System.DateTime.ToLongTimeString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolongtimestring/cs/sls.cs#1)]\\n [!code-vb[System.DateTime.ToLongTimeString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolongtimestring/vb/sls.vb#1)]\"\n  syntax:\n    content: public string ToLongTimeString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the long time string representation of the current <xref href=\"System.DateTime\"></xref> object.\n  overload: System.DateTime.ToLongTimeString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToOADate\n  commentId: M:System.DateTime.ToOADate\n  id: ToOADate\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToOADate()\n  nameWithType: DateTime.ToOADate()\n  fullName: DateTime.ToOADate()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the value of this instance to the equivalent OLE Automation date.\n  remarks: \"An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24. For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.  \\n  \\n The base OLE Automation Date is midnight, 30 December 1899. The minimum OLE Automation date is midnight, 1 January 0100. The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=fullName>, the last moment of 31 December 9999.  \\n  \\n The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MinValue> and earlier than midnight on January1, 0100. However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.  \\n  \\n For more information about OLE Automation, see the [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118).\"\n  syntax:\n    content: public double ToOADate ();\n    parameters: []\n    return:\n      type: System.Double\n      description: A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.\n  overload: System.DateTime.ToOADate*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The value of this instance cannot be represented as an OLE Automation Date.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToShortDateString\n  commentId: M:System.DateTime.ToShortDateString\n  id: ToShortDateString\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToShortDateString()\n  nameWithType: DateTime.ToShortDateString()\n  fullName: DateTime.ToShortDateString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent short date string representation.\n  remarks: \"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \\\"d\\\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \\n  \\n> [!IMPORTANT]\\n>  The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short date pattern is \\\"M/d/yyyy\\\"; for the de-DE culture, it is \\\"dd.MM.yyyy\\\"; for the ja-JP culture, it is \\\"yyyy/M/d\\\". The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.  \\n  \\n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.ToShortDateString%2A> method. It also shows that the result of calling the <xref:System.DateTime.ToShortDateString%2A> method is identical to calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method with \\\"d\\\" as the format parameter.  \\n  \\n [!code-csharp[System.DateTime.ToShortDateString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/cs/ToShortDateString.cs#1)]\\n [!code-vb[System.DateTime.ToShortDateString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/vb/ToShortDateString.vb#1)]\"\n  syntax:\n    content: public string ToShortDateString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the short date string representation of the current <xref href=\"System.DateTime\"></xref> object.\n  overload: System.DateTime.ToShortDateString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToShortTimeString\n  commentId: M:System.DateTime.ToShortTimeString\n  id: ToShortTimeString\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToShortTimeString()\n  nameWithType: DateTime.ToShortTimeString()\n  fullName: DateTime.ToShortTimeString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent short time string representation.\n  remarks: \"The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=fullName> property associated with the current thread culture. The return value is identical to the value returned by specifying the \\\"t\\\" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.  \\n  \\n> [!IMPORTANT]\\n>  The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive. It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo> object. For example, for the en-US culture, the standard short time pattern is \\\"h:mm tt\\\"; for the de-DE culture, it is \\\"HH:mm\\\"; for the ja-JP culture, it is \\\"H:mm\\\". The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.  \\n  \\n For more information about the current thread culture, see the <xref:System.Threading.Thread.CurrentCulture%2A> property. For more information about format characters, format patterns, and the output they produce, see the [Formatting Types](~/docs/standard/base-types/formatting-types.md) topic. For more information about changing the format pattern associated with a format character, see the <xref:System.Globalization.DateTimeFormatInfo> class.\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.ToShortTimeString%2A> method.  \\n  \\n [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]\\n [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]\"\n  syntax:\n    content: public string ToShortTimeString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that contains the short time string representation of the current <xref href=\"System.DateTime\"></xref> object.\n  overload: System.DateTime.ToShortTimeString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.DateTime.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToString(String, IFormatProvider)\n  nameWithType: DateTime.ToString(String, IFormatProvider)\n  fullName: DateTime.ToString(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the specified format and culture-specific format information.\n  remarks: \"The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)). If `format` is `null` or an empty string (\\\"\\\"), the standard format specifier, \\\"G\\\", is used.  \\n  \\n The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components. The `provider` parameter can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \\n  \\n If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example uses each of the standard date time format strings to display the string representation of a date and time for four different cultures.  \\n  \\n [!code-csharp[System.DateTime.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring3.cs#4)]\\n [!code-vb[System.DateTime.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring3.vb#4)]  \\n  \\n The following example demonstrates different ways of formatting a <xref:System.DateTime> value using the invariant <xref:System.Globalization.DateTimeFormatInfo>.  \\n  \\n [!code-cpp[Classic DateTime.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic DateTime.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CS/source.cs#1)]\\n [!code-vb[Classic DateTime.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public string ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: A standard or custom date and time format string.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: A string representation of value of the current <xref href=\"System.DateTime\"></xref> object as specified by <code>format</code> and <code>provider</code>.\n  overload: System.DateTime.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>format</code> does not contain a valid custom format pattern.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The date and time is outside the range of dates supported by the calendar used by <code>provider</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToString(System.String)\n  commentId: M:System.DateTime.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToString(String)\n  nameWithType: DateTime.ToString(String)\n  fullName: DateTime.ToString(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.\n  remarks: \"The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.  \\n  \\n The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string. If `format` is `null` or an empty string, the general format specifier, 'G', is used.  \\n  \\n Some uses of this method include:  \\n  \\n-   Getting a string that displays the date and time in the current culture’s short date and time format. To do this, you use the \\\"G\\\" format specifier.  \\n  \\n-   Getting a string that contains only the month and year. To do this, you use the \\\"MM/yyyy\\\" format string. The format string uses the current culture’s date separator.  \\n  \\n-   Getting a string that contains the date and time in a specific format. For example, the \\\"MM/dd/yyyyHH:mm\\\" format string displays the date and time string in a fixed format such as \\\"19//03//2013 18:06\\\". The format string uses \\\"/\\\" as a fixed date separator regardless of culture-specific settings.  \\n  \\n-   Getting a date in a condensed format that could be used for serializing a date string. For example, the \\\"yyyyMMdd\\\" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.  \\n  \\n The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.  \\n  \\n [!code-csharp[System.DateTime.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)]\\n [!code-vb[System.DateTime.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)]\"\n  example:\n  - \"The following example uses each of the standard date and time format strings and a selection of custom date and time format strings to display the string representation of a <xref:System.DateTime> value. The thread current culture for the example is en-US.  \\n  \\n [!code-csharp[System.DateTime.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString2.cs#2)]\\n [!code-vb[System.DateTime.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString2.vb#2)]\"\n  syntax:\n    content: public string ToString (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: A standard or custom date and time format string.\n    return:\n      type: System.String\n      description: A string representation of value of the current <xref href=\"System.DateTime\"></xref> object as specified by <code>format</code>.\n  overload: System.DateTime.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: \"The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <xref href=\\\"System.Globalization.DateTimeFormatInfo\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>format</code> does not contain a valid custom format pattern.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The date and time is outside the range of dates supported by the calendar used by the current culture.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToString(System.IFormatProvider)\n  commentId: M:System.DateTime.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: DateTime.ToString(IFormatProvider)\n  fullName: DateTime.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the specified culture-specific format information.\n  remarks: \"The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.  \\n  \\n The format of the short date and long time pattern is defined by the `provider` parameter. The `provider` parameter can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting of the returned string.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \\n  \\n If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>.\"\n  example:\n  - \"The following example displays the string representation of a date and time using <xref:System.Globalization.CultureInfo> objects that represent five different cultures.  \\n  \\n [!code-csharp[System.DateTime.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString4.cs#3)]\\n [!code-vb[System.DateTime.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString4.vb#3)]\"\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: A string representation of value of the current <xref href=\"System.DateTime\"></xref> object as specified by <code>provider</code>.\n  overload: System.DateTime.ToString*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The date and time is outside the range of dates supported by the calendar used by <code>provider</code>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToString\n  commentId: M:System.DateTime.ToString\n  id: ToString\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DateTime.ToString()\n  fullName: DateTime.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to its equivalent string representation using the formatting conventions of the current culture.\n  remarks: \"The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'). To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method. To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method. To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.  \\n  \\n This method uses formatting information derived from the current culture. In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property. For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>. Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value.\"\n  example:\n  - \"The following example illustrates how the string representation of a <xref:System.DateTime> value returned by the <xref:System.DateTime.ToString> method depends on the thread current culture. It changes the current thread culture from en-US to fr-FR to ja-JP. and in each case calls the <xref:System.DateTime.ToString> method to return the string representation of a date and time value using that culture.  \\n  \\n [!code-csharp[System.DateTime.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString1.cs#1)]\\n [!code-vb[System.DateTime.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString1.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of the value of the current <xref href=\"System.DateTime\"></xref> object.\n  overload: System.DateTime.ToString*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The date and time is outside the range of dates supported by the calendar used by the current culture.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.ToUniversalTime\n  commentId: M:System.DateTime.ToUniversalTime\n  id: ToUniversalTime\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ToUniversalTime()\n  nameWithType: DateTime.ToUniversalTime()\n  fullName: DateTime.ToUniversalTime()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the current <xref href=\"System.DateTime\"></xref> object to Coordinated Universal Time (UTC).\n  remarks: \"The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset. For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.  \\n  \\n> [!IMPORTANT]\\n>  On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.  \\n  \\n Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object. The following table describes the possible results.  \\n  \\n|Kind|Results|  \\n|----------|-------------|  \\n|<xref:System.DateTimeKind.Utc>|No conversion is performed.|  \\n|<xref:System.DateTimeKind.Local>|The current <xref:System.DateTime> object is converted to UTC.|  \\n|<xref:System.DateTimeKind.Unspecified>|The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>.|  \\n  \\n> [!NOTE]\\n>  The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC. To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=fullName> method. To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.  \\n  \\n If the date and time instance value is an ambiguous time, this method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.ToUniversalTime%2A> method.  \\n  \\n [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]\\n [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]\\n [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  \\n  \\n The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \\n  \\n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]\"\n  syntax:\n    content: public DateTime ToUniversalTime ();\n    parameters: []\n    return:\n      type: System.DateTime\n      description: An object whose <xref href=\"System.DateTime.Kind\"></xref> property is <xref href=\"System.DateTimeKind.Utc\"></xref>, and whose value is the UTC equivalent to the value of the current <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MaxValue\"></xref> if the converted value is too large to be represented by a <xref href=\"System.DateTime\"></xref> object, or <xref href=\"System.DateTime.MinValue\"></xref> if the converted value is too small to be represented by a <xref href=\"System.DateTime\"></xref> object.\n  overload: System.DateTime.ToUniversalTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  commentId: M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  id: TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: TryParse(String, IFormatProvider, DateTimeStyles, DateTime)\n  nameWithType: DateTime.TryParse(String, IFormatProvider, DateTimeStyles, DateTime)\n  fullName: DateTime.TryParse(String, IFormatProvider, DateTimeStyles, DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.\n  remarks: \"The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses a string that can contain date, time, and time zone information. It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method does not throw an exception if the conversion fails.  \\n  \\n This method attempts to ignore unrecognized data and parse `s` completely. If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`. If `s` contains a date but no time, 12:00 midnight is used as the default time. If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. Any leading, inner, or trailing white space characters in `s` are ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).  \\n  \\n Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the `provider` parameter, which can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter. The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> property defines the formatting used in `s`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.  \\n  \\n-   A custom <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.  \\n  \\n If `provider` is `null`, the current culture is used.  \\n  \\n If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully. If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`.  \\n  \\n The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it. It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table.  \\n  \\n|DateTimeStyles member|Description|  \\n|---------------------------|-----------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Although valid, this value is ignored. Inner white space is permitted in the date and time elements of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Although valid, this value is ignored. Leading white space is permitted in the date and time elements of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Although valid, this value is ignored. Trailing white space is permitted in the date and time elements of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces. This is the default behavior. It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|Although valid, this value is ignored.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName> method using either the \\\"o\\\", \\\"r\\\", or \\\"u\\\" standard format specifiers.|  \\n  \\n If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> unless a `styles` flag indicates otherwise. If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method performs any necessary time conversion and returns one of the following:  \\n  \\n-   A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n-   Or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag, a <xref:System.DateTime> value whose date and time reflect UTC and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag.  \\n  \\n## Parsing Custom Cultures  \\n If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed. A custom culture date and time string can be complicated and difficult to parse. The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail. In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.  \\n  \\n For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=fullName> class.\"\n  example:\n  - \"The following example illustrates the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method.  \\n  \\n [!code-csharp[System.DateTime.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/tryparse2.cs#2)]\\n [!code-vb[System.DateTime.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/tryparse2.vb#2)]\"\n  syntax:\n    content: public static bool TryParse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a date and time to convert.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>s</code>.\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.\n    - id: result\n      type: System.DateTime\n      description: When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if the <code>s</code> parameter is `null`, is an empty string (\"\"), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.'\n  overload: System.DateTime.TryParse*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>styles</code> is not a valid <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>styles</code> contains an invalid combination of <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> values (for example, both <xref href=\\\"System.Globalization.DateTimeStyles.AssumeLocal\\\"></xref> and <xref href=\\\"System.Globalization.DateTimeStyles.AssumeUniversal\\\"></xref>).\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <code>provider</code> is a neutral culture and cannot be used in a parsing operation.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.TryParse(System.String,System.DateTime@)\n  commentId: M:System.DateTime.TryParse(System.String,System.DateTime@)\n  id: TryParse(System.String,System.DateTime@)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: TryParse(String, DateTime)\n  nameWithType: DateTime.TryParse(String, DateTime)\n  fullName: DateTime.TryParse(String, DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent and returns a value that indicates whether the conversion succeeded.\n  remarks: \"The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.  \\n  \\n The string `s` is parsed using formatting information in the current <xref:System.Globalization.DateTimeFormatInfo> object, which is supplied implicitly by the current thread culture.  \\n  \\n This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date. If `s` contains only a date and no time, this method assumes the time is 12:00 midnight. If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> property. Any leading, inner, or trailing white space character in `s` is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).  \\n  \\n Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results. If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.  \\n  \\n If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully. If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`.  \\n  \\n If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns. If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName> when the method returns.\"\n  example:\n  - \"The following example passes a number of date and time strings to the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName> method.  \\n  \\n [!code-cpp[System.DateTime.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.TryParse/cpp/datetime.tryparse1.cpp#1)]\\n [!code-csharp[System.DateTime.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/TryParse1.cs#1)]\\n [!code-vb[System.DateTime.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/TryParse1.vb#1)]\"\n  syntax:\n    content: public static bool TryParse (string s, out DateTime result);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a date and time to convert.\n    - id: result\n      type: System.DateTime\n      description: When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if the <code>s</code> parameter is `null`, is an empty string (\"\"), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.'\n  overload: System.DateTime.TryParse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  commentId: M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)\n  nameWithType: DateTime.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)\n  fullName: DateTime.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded.\n  remarks: \"The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date, which must be in the format defined by the `format` parameter. It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.  \\n  \\n The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter. If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`. If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00). If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag. The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters.  \\n  \\n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter. The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \\n  \\n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \\\"HH\\\", instead of the narrower form, \\\"H\\\".  \\n  \\n> [!NOTE]\\n>  Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method and specify multiple permitted formats. This makes the parse operation more likely to succeed.  \\n  \\n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \\n  \\n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \\n  \\n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.  \\n  \\n|DateTimeStyles member|Description|  \\n|---------------------------|-----------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime>value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method. Note that the string \\\" 5/01/2009 8:30 AM\\\" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> because leading spaces are not allowed by `format`. Additionally, the string \\\"5/01/2009 09:00\\\" cannot be parsed successfully with a `format` of \\\"MM/dd/yyyyhh:mm\\\" because the date string does not precede the month number with a leading zero, as `format` requires.  \\n  \\n [!code-csharp[System.DateTime.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact1.cs#1)]\\n [!code-vb[System.DateTime.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact1.vb#1)]\"\n  syntax:\n    content: public static bool TryParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a date and time to convert.\n    - id: format\n      type: System.String\n      description: The required format of <code>s</code>.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>s</code>.\n    - id: style\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of one or more enumeration values that indicate the permitted format of <code>s</code>.\n    - id: result\n      type: System.DateTime\n      description: When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if either the <code>s</code> or <code>format</code> parameter is `null`, is an empty string, or does not contain a date and time that correspond to the pattern specified in <code>format</code>. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>s</code> was converted successfully; otherwise, `false`.'\n  overload: System.DateTime.TryParseExact*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>styles</code> is not a valid <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>styles</code> contains an invalid combination of <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> values (for example, both <xref href=\\\"System.Globalization.DateTimeStyles.AssumeLocal\\\"></xref> and <xref href=\\\"System.Globalization.DateTimeStyles.AssumeUniversal\\\"></xref>).\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  commentId: M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)\n  nameWithType: DateTime.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)\n  fullName: DateTime.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the specified string representation of a date and time to its <xref href=\"System.DateTime\"></xref> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly. The method returns a value that indicates whether the conversion succeeded.\n  remarks: \"The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter. It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails.  \\n  \\n The `s` parameter contains the date and time to parse. If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, in which case the default date (`DateTime.Date.MinValue`) is used. If the `s` parameter contains only a date and no time, midnight (00:00:00) is used. The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.  \\n  \\n If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>, or by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> and <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind?displayProperty=fullName>. If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed. The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.  \\n  \\n If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, \\\"HH\\\", instead of the narrower form, \\\"H\\\".  \\n  \\n The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string. The `provider` parameter can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`. The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.  \\n  \\n-   A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.  \\n  \\n-   A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo>object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.  \\n  \\n If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.  \\n  \\n The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation. The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.  \\n  \\n|DateTimeStyles member|Description|  \\n|---------------------------|-----------------|  \\n|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|Parses `s` and, if necessary, converts it to UTC. If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>. In all other cases, the flag has no effect.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|Specifies that white space not defined by `format` can appear between any individual date or time element.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|Specifies that white space not defined by `format` can appear at the beginning of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|Specifies that white space not defined by `format` can appear at the end of `s`.|  \\n|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|Specifies that if `s` lacks any time zone information, it is assumed to represent a local time. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|Specifies that if `s` lacks any time zone information, it is assumed to represent UTC. Unless the <xref:System.Globalization.DateTimeStyles?displayProperty=fullName> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.|  \\n|<xref:System.Globalization.DateTimeStyles.None>|The `s` parameter is parsed using default values. No white space other than that present in `format` is allowed. If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001. If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>. If time zone information is present in `s`, the time is converted to local time and the<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind?displayProperty=fullName>.|  \\n|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind?displayProperty=fullName>. This flag primarily prevents the conversion of UTC times to local times.|\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName> method to ensure that a string in a number of possible formats can be successfully parsed .  \\n  \\n [!code-csharp[System.Datetime.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact2.cs#2)]\\n [!code-vb[System.Datetime.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact2.vb#2)]\"\n  syntax:\n    content: public static bool TryParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string that contains a date and time to convert.\n    - id: formats\n      type: System.String[]\n      description: An array of allowable formats of <code>s</code>.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific format information about <code>s</code>.\n    - id: style\n      type: System.Globalization.DateTimeStyles\n      description: A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.DateTimeStyles.None\"></xref>.\n    - id: result\n      type: System.DateTime\n      description: When this method returns, contains the <xref href=\"System.DateTime\"></xref> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <xref href=\"System.DateTime.MinValue\"></xref> if the conversion failed. The conversion fails if <code>s</code> or <code>formats</code> is `null`, <code>s</code> or an element of <code>formats</code> is an empty string, or the format of <code>s</code> is not exactly as specified by at least one of the format patterns in <code>formats</code>. This parameter is passed uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>s</code> parameter was converted successfully; otherwise, `false`.'\n  overload: System.DateTime.TryParseExact*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>styles</code> is not a valid <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>styles</code> contains an invalid combination of <xref href=\\\"System.Globalization.DateTimeStyles\\\"></xref> values (for example, both <xref href=\\\"System.Globalization.DateTimeStyles.AssumeLocal\\\"></xref> and <xref href=\\\"System.Globalization.DateTimeStyles.AssumeUniversal\\\"></xref>).\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.UtcNow\n  commentId: P:System.DateTime.UtcNow\n  id: UtcNow\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: UtcNow\n  nameWithType: DateTime.UtcNow\n  fullName: DateTime.UtcNow\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets a <xref href=\"System.DateTime\"></xref> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).\n  remarks: \"The resolution of this property depends on the system timer.  \\n  \\n|System|Approximate Resolution|  \\n|------------|----------------------------|  \\n|Windows NT 3.5 and later|10 milliseconds|  \\n|Windows 98|55 milliseconds|  \\n  \\n Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind?displayProperty=fullName>.  \\n  \\n An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=fullName>. While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind?displayProperty=fullName> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=fullName>).\"\n  example:\n  - \"The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.  \\n  \\n [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]\\n [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public static DateTime UtcNow { get; }\n    return:\n      type: System.DateTime\n      description: An object whose value is the current UTC date and time.\n  overload: System.DateTime.UtcNow*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.Year\n  commentId: P:System.DateTime.Year\n  id: Year\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: Year\n  nameWithType: DateTime.Year\n  fullName: DateTime.Year\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the year component of the date represented by this instance.\n  remarks: \"The<xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar. It does not return the year using the default calendar of the current culture. To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows.  \\n  \\n [!code-csharp[System.DateTime.Year#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)]\\n [!code-vb[System.DateTime.Year#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)]\"\n  example:\n  - \"The following example demonstrates the <xref:System.DateTime.Year%2A> property.  \\n  \\n [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]\\n [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]\\n [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]\"\n  syntax:\n    content: public int Year { get; }\n    return:\n      type: System.Int32\n      description: The year, between 1 and 9999.\n  overload: System.DateTime.Year*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.DateTime.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: DateTime.IComparable.CompareTo(Object)\n  fullName: DateTime.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.DateTime.System#IComparable#CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#GetTypeCode\n  commentId: M:System.DateTime.System#IConvertible#GetTypeCode\n  id: System#IConvertible#GetTypeCode\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.GetTypeCode()\n  nameWithType: DateTime.IConvertible.GetTypeCode()\n  fullName: DateTime.IConvertible.GetTypeCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: TypeCode IConvertible.GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: ''\n  overload: System.DateTime.System#IConvertible#GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)\n  id: System#IConvertible#ToBoolean(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToBoolean(IFormatProvider)\n  fullName: DateTime.IConvertible.ToBoolean(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: bool IConvertible.ToBoolean (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Boolean\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToBoolean*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)\n  id: System#IConvertible#ToByte(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToByte(IFormatProvider)\n  fullName: DateTime.IConvertible.ToByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: byte IConvertible.ToByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Byte\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToByte*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)\n  id: System#IConvertible#ToChar(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToChar(IFormatProvider)\n  fullName: DateTime.IConvertible.ToChar(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: char IConvertible.ToChar (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Char\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToChar*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)\n  id: System#IConvertible#ToDateTime(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToDateTime(IFormatProvider)\n  fullName: DateTime.IConvertible.ToDateTime(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the current <xref href=\"System.DateTime\"></xref> object.\n  syntax:\n    content: DateTime IConvertible.ToDateTime (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.DateTime\n      description: The current object.\n  overload: System.DateTime.System#IConvertible#ToDateTime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)\n  id: System#IConvertible#ToDecimal(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToDecimal(IFormatProvider)\n  fullName: DateTime.IConvertible.ToDecimal(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: decimal IConvertible.ToDecimal (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Decimal\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToDecimal*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)\n  id: System#IConvertible#ToDouble(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToDouble(IFormatProvider)\n  fullName: DateTime.IConvertible.ToDouble(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: double IConvertible.ToDouble (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Double\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToDouble*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)\n  id: System#IConvertible#ToInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToInt16(IFormatProvider)\n  fullName: DateTime.IConvertible.ToInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: short IConvertible.ToInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Int16\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToInt16*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)\n  id: System#IConvertible#ToInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToInt32(IFormatProvider)\n  fullName: DateTime.IConvertible.ToInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: int IConvertible.ToInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Int32\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToInt32*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)\n  id: System#IConvertible#ToInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToInt64(IFormatProvider)\n  fullName: DateTime.IConvertible.ToInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: long IConvertible.ToInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Int64\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToInt64*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)\n  id: System#IConvertible#ToSByte(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToSByte(IFormatProvider)\n  fullName: DateTime.IConvertible.ToSByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: sbyte IConvertible.ToSByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.SByte\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToSByte*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)\n  id: System#IConvertible#ToSingle(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToSingle(IFormatProvider)\n  fullName: DateTime.IConvertible.ToSingle(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: float IConvertible.ToSingle (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Single\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToSingle*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToType(Type, IFormatProvider)\n  fullName: DateTime.IConvertible.ToType(Type, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the current <xref href=\"System.DateTime\"></xref> object to an object of a specified type.\n  syntax:\n    content: object IConvertible.ToType (Type type, IFormatProvider provider);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The desired type.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.Object\n      description: An object of the type specified by the <code>type</code> parameter, with a value equivalent to the current <xref href=\"System.DateTime\"></xref> object.\n  overload: System.DateTime.System#IConvertible#ToType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: This conversion is not supported for the <xref href=\"System.DateTime\"></xref> type.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)\n  id: System#IConvertible#ToUInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToUInt16(IFormatProvider)\n  fullName: DateTime.IConvertible.ToUInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: ushort IConvertible.ToUInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.UInt16\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToUInt16*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)\n  id: System#IConvertible#ToUInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToUInt32(IFormatProvider)\n  fullName: DateTime.IConvertible.ToUInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: uint IConvertible.ToUInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.UInt32\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToUInt32*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)\n  commentId: M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)\n  id: System#IConvertible#ToUInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToUInt64(IFormatProvider)\n  fullName: DateTime.IConvertible.ToUInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: ulong IConvertible.ToUInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that implements the <xref href=\"System.IFormatProvider\"></xref> interface. (This parameter is not used; specify `null`.)\n    return:\n      type: System.UInt64\n      description: The return value for this member is not used.\n  overload: System.DateTime.System#IConvertible#ToUInt64*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.DateTime\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: DateTime.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: DateTime.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the current <xref href=\"System.DateTime\"></xref> object.\n  remarks: This method populates the `info` parameter with the <xref:System.DateTime.Ticks%2A> and <xref:System.DateTime.Kind%2A> property values.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination for this serialization. (This parameter is not used; specify `null`.)\n  overload: System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.OverflowException\n  parent: System\n  isExternal: false\n  name: OverflowException\n  nameWithType: OverflowException\n  fullName: System.OverflowException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.DateTime.#ctor(System.Int64)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int64)\n  nameWithType: DateTime.DateTime(Int64)\n  fullName: DateTime.DateTime(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTime.#ctor(System.Int64,System.DateTimeKind)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int64, DateTimeKind)\n  nameWithType: DateTime.DateTime(Int64, DateTimeKind)\n  fullName: DateTime.DateTime(Int64, DateTimeKind)\n- uid: System.DateTimeKind\n  parent: System\n  isExternal: false\n  name: DateTimeKind\n  nameWithType: DateTimeKind\n  fullName: System.DateTimeKind\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int32, Int32, Int32)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32)\n  fullName: DateTime.DateTime(Int32, Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int32, Int32, Int32, Calendar)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Calendar)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Calendar)\n- uid: System.Globalization.Calendar\n  parent: System.Globalization\n  isExternal: false\n  name: Calendar\n  nameWithType: Calendar\n  fullName: System.Globalization.Calendar\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, DateTimeKind)\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar)\n- uid: System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)\n  nameWithType: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)\n  fullName: DateTime.DateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Calendar, DateTimeKind)\n- uid: System.DateTime.Add(System.TimeSpan)\n  parent: System.DateTime\n  isExternal: false\n  name: Add(TimeSpan)\n  nameWithType: DateTime.Add(TimeSpan)\n  fullName: DateTime.Add(TimeSpan)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTime.AddDays(System.Double)\n  parent: System.DateTime\n  isExternal: false\n  name: AddDays(Double)\n  nameWithType: DateTime.AddDays(Double)\n  fullName: DateTime.AddDays(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.DateTime.AddHours(System.Double)\n  parent: System.DateTime\n  isExternal: false\n  name: AddHours(Double)\n  nameWithType: DateTime.AddHours(Double)\n  fullName: DateTime.AddHours(Double)\n- uid: System.DateTime.AddMilliseconds(System.Double)\n  parent: System.DateTime\n  isExternal: false\n  name: AddMilliseconds(Double)\n  nameWithType: DateTime.AddMilliseconds(Double)\n  fullName: DateTime.AddMilliseconds(Double)\n- uid: System.DateTime.AddMinutes(System.Double)\n  parent: System.DateTime\n  isExternal: false\n  name: AddMinutes(Double)\n  nameWithType: DateTime.AddMinutes(Double)\n  fullName: DateTime.AddMinutes(Double)\n- uid: System.DateTime.AddMonths(System.Int32)\n  parent: System.DateTime\n  isExternal: false\n  name: AddMonths(Int32)\n  nameWithType: DateTime.AddMonths(Int32)\n  fullName: DateTime.AddMonths(Int32)\n- uid: System.DateTime.AddSeconds(System.Double)\n  parent: System.DateTime\n  isExternal: false\n  name: AddSeconds(Double)\n  nameWithType: DateTime.AddSeconds(Double)\n  fullName: DateTime.AddSeconds(Double)\n- uid: System.DateTime.AddTicks(System.Int64)\n  parent: System.DateTime\n  isExternal: false\n  name: AddTicks(Int64)\n  nameWithType: DateTime.AddTicks(Int64)\n  fullName: DateTime.AddTicks(Int64)\n- uid: System.DateTime.AddYears(System.Int32)\n  parent: System.DateTime\n  isExternal: false\n  name: AddYears(Int32)\n  nameWithType: DateTime.AddYears(Int32)\n  fullName: DateTime.AddYears(Int32)\n- uid: System.DateTime.Compare(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: Compare(DateTime, DateTime)\n  nameWithType: DateTime.Compare(DateTime, DateTime)\n  fullName: DateTime.Compare(DateTime, DateTime)\n- uid: System.DateTime.CompareTo(System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: CompareTo(DateTime)\n  nameWithType: DateTime.CompareTo(DateTime)\n  fullName: DateTime.CompareTo(DateTime)\n- uid: System.DateTime.CompareTo(System.Object)\n  parent: System.DateTime\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: DateTime.CompareTo(Object)\n  fullName: DateTime.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DateTime.Date\n  parent: System.DateTime\n  isExternal: false\n  name: Date\n  nameWithType: DateTime.Date\n  fullName: DateTime.Date\n- uid: System.DateTime.Day\n  parent: System.DateTime\n  isExternal: false\n  name: Day\n  nameWithType: DateTime.Day\n  fullName: DateTime.Day\n- uid: System.DateTime.DayOfWeek\n  parent: System.DateTime\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DateTime.DayOfWeek\n  fullName: DateTime.DayOfWeek\n- uid: System.DayOfWeek\n  parent: System\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DayOfWeek\n  fullName: System.DayOfWeek\n- uid: System.DateTime.DayOfYear\n  parent: System.DateTime\n  isExternal: false\n  name: DayOfYear\n  nameWithType: DateTime.DayOfYear\n  fullName: DateTime.DayOfYear\n- uid: System.DateTime.DaysInMonth(System.Int32,System.Int32)\n  parent: System.DateTime\n  isExternal: false\n  name: DaysInMonth(Int32, Int32)\n  nameWithType: DateTime.DaysInMonth(Int32, Int32)\n  fullName: DateTime.DaysInMonth(Int32, Int32)\n- uid: System.DateTime.Equals(System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: Equals(DateTime)\n  nameWithType: DateTime.Equals(DateTime)\n  fullName: DateTime.Equals(DateTime)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTime.Equals(System.Object)\n  parent: System.DateTime\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DateTime.Equals(Object)\n  fullName: DateTime.Equals(Object)\n- uid: System.DateTime.Equals(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: Equals(DateTime, DateTime)\n  nameWithType: DateTime.Equals(DateTime, DateTime)\n  fullName: DateTime.Equals(DateTime, DateTime)\n- uid: System.DateTime.FromBinary(System.Int64)\n  parent: System.DateTime\n  isExternal: false\n  name: FromBinary(Int64)\n  nameWithType: DateTime.FromBinary(Int64)\n  fullName: DateTime.FromBinary(Int64)\n- uid: System.DateTime.FromFileTime(System.Int64)\n  parent: System.DateTime\n  isExternal: false\n  name: FromFileTime(Int64)\n  nameWithType: DateTime.FromFileTime(Int64)\n  fullName: DateTime.FromFileTime(Int64)\n- uid: System.DateTime.FromFileTimeUtc(System.Int64)\n  parent: System.DateTime\n  isExternal: false\n  name: FromFileTimeUtc(Int64)\n  nameWithType: DateTime.FromFileTimeUtc(Int64)\n  fullName: DateTime.FromFileTimeUtc(Int64)\n- uid: System.DateTime.FromOADate(System.Double)\n  parent: System.DateTime\n  isExternal: false\n  name: FromOADate(Double)\n  nameWithType: DateTime.FromOADate(Double)\n  fullName: DateTime.FromOADate(Double)\n- uid: System.DateTime.GetDateTimeFormats\n  parent: System.DateTime\n  isExternal: false\n  name: GetDateTimeFormats()\n  nameWithType: DateTime.GetDateTimeFormats()\n  fullName: DateTime.GetDateTimeFormats()\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.DateTime.GetDateTimeFormats(System.Char)\n  parent: System.DateTime\n  isExternal: false\n  name: GetDateTimeFormats(Char)\n  nameWithType: DateTime.GetDateTimeFormats(Char)\n  fullName: DateTime.GetDateTimeFormats(Char)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.DateTime.GetDateTimeFormats(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: GetDateTimeFormats(IFormatProvider)\n  nameWithType: DateTime.GetDateTimeFormats(IFormatProvider)\n  fullName: DateTime.GetDateTimeFormats(IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: GetDateTimeFormats(Char, IFormatProvider)\n  nameWithType: DateTime.GetDateTimeFormats(Char, IFormatProvider)\n  fullName: DateTime.GetDateTimeFormats(Char, IFormatProvider)\n- uid: System.DateTime.GetHashCode\n  parent: System.DateTime\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DateTime.GetHashCode()\n  fullName: DateTime.GetHashCode()\n- uid: System.DateTime.GetTypeCode\n  parent: System.DateTime\n  isExternal: false\n  name: GetTypeCode()\n  nameWithType: DateTime.GetTypeCode()\n  fullName: DateTime.GetTypeCode()\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: System.DateTime.Hour\n  parent: System.DateTime\n  isExternal: false\n  name: Hour\n  nameWithType: DateTime.Hour\n  fullName: DateTime.Hour\n- uid: System.DateTime.IsDaylightSavingTime\n  parent: System.DateTime\n  isExternal: false\n  name: IsDaylightSavingTime()\n  nameWithType: DateTime.IsDaylightSavingTime()\n  fullName: DateTime.IsDaylightSavingTime()\n- uid: System.DateTime.IsLeapYear(System.Int32)\n  parent: System.DateTime\n  isExternal: false\n  name: IsLeapYear(Int32)\n  nameWithType: DateTime.IsLeapYear(Int32)\n  fullName: DateTime.IsLeapYear(Int32)\n- uid: System.DateTime.Kind\n  parent: System.DateTime\n  isExternal: false\n  name: Kind\n  nameWithType: DateTime.Kind\n  fullName: DateTime.Kind\n- uid: System.DateTime.MaxValue\n  parent: System.DateTime\n  isExternal: false\n  name: MaxValue\n  nameWithType: DateTime.MaxValue\n  fullName: DateTime.MaxValue\n- uid: System.DateTime.Millisecond\n  parent: System.DateTime\n  isExternal: false\n  name: Millisecond\n  nameWithType: DateTime.Millisecond\n  fullName: DateTime.Millisecond\n- uid: System.DateTime.Minute\n  parent: System.DateTime\n  isExternal: false\n  name: Minute\n  nameWithType: DateTime.Minute\n  fullName: DateTime.Minute\n- uid: System.DateTime.MinValue\n  parent: System.DateTime\n  isExternal: false\n  name: MinValue\n  nameWithType: DateTime.MinValue\n  fullName: DateTime.MinValue\n- uid: System.DateTime.Month\n  parent: System.DateTime\n  isExternal: false\n  name: Month\n  nameWithType: DateTime.Month\n  fullName: DateTime.Month\n- uid: System.DateTime.Now\n  parent: System.DateTime\n  isExternal: false\n  name: Now\n  nameWithType: DateTime.Now\n  fullName: DateTime.Now\n- uid: System.DateTime.op_Addition(System.DateTime,System.TimeSpan)\n  parent: System.DateTime\n  isExternal: false\n  name: op_Addition(DateTime, TimeSpan)\n  nameWithType: DateTime.op_Addition(DateTime, TimeSpan)\n  fullName: DateTime.op_Addition(DateTime, TimeSpan)\n- uid: System.DateTime.op_Equality(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: op_Equality(DateTime, DateTime)\n  nameWithType: DateTime.op_Equality(DateTime, DateTime)\n  fullName: DateTime.op_Equality(DateTime, DateTime)\n- uid: System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: op_GreaterThan(DateTime, DateTime)\n  nameWithType: DateTime.op_GreaterThan(DateTime, DateTime)\n  fullName: DateTime.op_GreaterThan(DateTime, DateTime)\n- uid: System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: op_GreaterThanOrEqual(DateTime, DateTime)\n  nameWithType: DateTime.op_GreaterThanOrEqual(DateTime, DateTime)\n  fullName: DateTime.op_GreaterThanOrEqual(DateTime, DateTime)\n- uid: System.DateTime.op_Inequality(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: op_Inequality(DateTime, DateTime)\n  nameWithType: DateTime.op_Inequality(DateTime, DateTime)\n  fullName: DateTime.op_Inequality(DateTime, DateTime)\n- uid: System.DateTime.op_LessThan(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: op_LessThan(DateTime, DateTime)\n  nameWithType: DateTime.op_LessThan(DateTime, DateTime)\n  fullName: DateTime.op_LessThan(DateTime, DateTime)\n- uid: System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: op_LessThanOrEqual(DateTime, DateTime)\n  nameWithType: DateTime.op_LessThanOrEqual(DateTime, DateTime)\n  fullName: DateTime.op_LessThanOrEqual(DateTime, DateTime)\n- uid: System.DateTime.op_Subtraction(System.DateTime,System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: op_Subtraction(DateTime, DateTime)\n  nameWithType: DateTime.op_Subtraction(DateTime, DateTime)\n  fullName: DateTime.op_Subtraction(DateTime, DateTime)\n- uid: System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)\n  parent: System.DateTime\n  isExternal: false\n  name: op_Subtraction(DateTime, TimeSpan)\n  nameWithType: DateTime.op_Subtraction(DateTime, TimeSpan)\n  fullName: DateTime.op_Subtraction(DateTime, TimeSpan)\n- uid: System.DateTime.Parse(System.String)\n  parent: System.DateTime\n  isExternal: false\n  name: Parse(String)\n  nameWithType: DateTime.Parse(String)\n  fullName: DateTime.Parse(String)\n- uid: System.DateTime.Parse(System.String,System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: Parse(String, IFormatProvider)\n  nameWithType: DateTime.Parse(String, IFormatProvider)\n  fullName: DateTime.Parse(String, IFormatProvider)\n- uid: System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTime\n  isExternal: false\n  name: Parse(String, IFormatProvider, DateTimeStyles)\n  nameWithType: DateTime.Parse(String, IFormatProvider, DateTimeStyles)\n  fullName: DateTime.Parse(String, IFormatProvider, DateTimeStyles)\n- uid: System.Globalization.DateTimeStyles\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeStyles\n  nameWithType: DateTimeStyles\n  fullName: System.Globalization.DateTimeStyles\n- uid: System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTime\n  isExternal: false\n  name: ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  nameWithType: DateTime.ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n  fullName: DateTime.ParseExact(String, String[], IFormatProvider, DateTimeStyles)\n- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTime\n  isExternal: false\n  name: ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  nameWithType: DateTime.ParseExact(String, String, IFormatProvider, DateTimeStyles)\n  fullName: DateTime.ParseExact(String, String, IFormatProvider, DateTimeStyles)\n- uid: System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: ParseExact(String, String, IFormatProvider)\n  nameWithType: DateTime.ParseExact(String, String, IFormatProvider)\n  fullName: DateTime.ParseExact(String, String, IFormatProvider)\n- uid: System.DateTime.Second\n  parent: System.DateTime\n  isExternal: false\n  name: Second\n  nameWithType: DateTime.Second\n  fullName: DateTime.Second\n- uid: System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)\n  parent: System.DateTime\n  isExternal: false\n  name: SpecifyKind(DateTime, DateTimeKind)\n  nameWithType: DateTime.SpecifyKind(DateTime, DateTimeKind)\n  fullName: DateTime.SpecifyKind(DateTime, DateTimeKind)\n- uid: System.DateTime.Subtract(System.DateTime)\n  parent: System.DateTime\n  isExternal: false\n  name: Subtract(DateTime)\n  nameWithType: DateTime.Subtract(DateTime)\n  fullName: DateTime.Subtract(DateTime)\n- uid: System.DateTime.Subtract(System.TimeSpan)\n  parent: System.DateTime\n  isExternal: false\n  name: Subtract(TimeSpan)\n  nameWithType: DateTime.Subtract(TimeSpan)\n  fullName: DateTime.Subtract(TimeSpan)\n- uid: System.DateTime.Ticks\n  parent: System.DateTime\n  isExternal: false\n  name: Ticks\n  nameWithType: DateTime.Ticks\n  fullName: DateTime.Ticks\n- uid: System.DateTime.TimeOfDay\n  parent: System.DateTime\n  isExternal: false\n  name: TimeOfDay\n  nameWithType: DateTime.TimeOfDay\n  fullName: DateTime.TimeOfDay\n- uid: System.DateTime.ToBinary\n  parent: System.DateTime\n  isExternal: false\n  name: ToBinary()\n  nameWithType: DateTime.ToBinary()\n  fullName: DateTime.ToBinary()\n- uid: System.DateTime.Today\n  parent: System.DateTime\n  isExternal: false\n  name: Today\n  nameWithType: DateTime.Today\n  fullName: DateTime.Today\n- uid: System.DateTime.ToFileTime\n  parent: System.DateTime\n  isExternal: false\n  name: ToFileTime()\n  nameWithType: DateTime.ToFileTime()\n  fullName: DateTime.ToFileTime()\n- uid: System.DateTime.ToFileTimeUtc\n  parent: System.DateTime\n  isExternal: false\n  name: ToFileTimeUtc()\n  nameWithType: DateTime.ToFileTimeUtc()\n  fullName: DateTime.ToFileTimeUtc()\n- uid: System.DateTime.ToLocalTime\n  parent: System.DateTime\n  isExternal: false\n  name: ToLocalTime()\n  nameWithType: DateTime.ToLocalTime()\n  fullName: DateTime.ToLocalTime()\n- uid: System.DateTime.ToLongDateString\n  parent: System.DateTime\n  isExternal: false\n  name: ToLongDateString()\n  nameWithType: DateTime.ToLongDateString()\n  fullName: DateTime.ToLongDateString()\n- uid: System.DateTime.ToLongTimeString\n  parent: System.DateTime\n  isExternal: false\n  name: ToLongTimeString()\n  nameWithType: DateTime.ToLongTimeString()\n  fullName: DateTime.ToLongTimeString()\n- uid: System.DateTime.ToOADate\n  parent: System.DateTime\n  isExternal: false\n  name: ToOADate()\n  nameWithType: DateTime.ToOADate()\n  fullName: DateTime.ToOADate()\n- uid: System.DateTime.ToShortDateString\n  parent: System.DateTime\n  isExternal: false\n  name: ToShortDateString()\n  nameWithType: DateTime.ToShortDateString()\n  fullName: DateTime.ToShortDateString()\n- uid: System.DateTime.ToShortTimeString\n  parent: System.DateTime\n  isExternal: false\n  name: ToShortTimeString()\n  nameWithType: DateTime.ToShortTimeString()\n  fullName: DateTime.ToShortTimeString()\n- uid: System.DateTime.ToString(System.String,System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: ToString(String, IFormatProvider)\n  nameWithType: DateTime.ToString(String, IFormatProvider)\n  fullName: DateTime.ToString(String, IFormatProvider)\n- uid: System.DateTime.ToString(System.String)\n  parent: System.DateTime\n  isExternal: false\n  name: ToString(String)\n  nameWithType: DateTime.ToString(String)\n  fullName: DateTime.ToString(String)\n- uid: System.DateTime.ToString(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: DateTime.ToString(IFormatProvider)\n  fullName: DateTime.ToString(IFormatProvider)\n- uid: System.DateTime.ToString\n  parent: System.DateTime\n  isExternal: false\n  name: ToString()\n  nameWithType: DateTime.ToString()\n  fullName: DateTime.ToString()\n- uid: System.DateTime.ToUniversalTime\n  parent: System.DateTime\n  isExternal: false\n  name: ToUniversalTime()\n  nameWithType: DateTime.ToUniversalTime()\n  fullName: DateTime.ToUniversalTime()\n- uid: System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  parent: System.DateTime\n  isExternal: false\n  name: TryParse(String, IFormatProvider, DateTimeStyles, DateTime)\n  nameWithType: DateTime.TryParse(String, IFormatProvider, DateTimeStyles, DateTime)\n  fullName: DateTime.TryParse(String, IFormatProvider, DateTimeStyles, DateTime)\n- uid: System.DateTime.TryParse(System.String,System.DateTime@)\n  parent: System.DateTime\n  isExternal: false\n  name: TryParse(String, DateTime)\n  nameWithType: DateTime.TryParse(String, DateTime)\n  fullName: DateTime.TryParse(String, DateTime)\n- uid: System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  parent: System.DateTime\n  isExternal: false\n  name: TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)\n  nameWithType: DateTime.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)\n  fullName: DateTime.TryParseExact(String, String, IFormatProvider, DateTimeStyles, DateTime)\n- uid: System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)\n  parent: System.DateTime\n  isExternal: false\n  name: TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)\n  nameWithType: DateTime.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)\n  fullName: DateTime.TryParseExact(String, String[], IFormatProvider, DateTimeStyles, DateTime)\n- uid: System.DateTime.UtcNow\n  parent: System.DateTime\n  isExternal: false\n  name: UtcNow\n  nameWithType: DateTime.UtcNow\n  fullName: DateTime.UtcNow\n- uid: System.DateTime.Year\n  parent: System.DateTime\n  isExternal: false\n  name: Year\n  nameWithType: DateTime.Year\n  fullName: DateTime.Year\n- uid: System.DateTime.System#IComparable#CompareTo(System.Object)\n  parent: System.DateTime\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: DateTime.IComparable.CompareTo(Object)\n  fullName: DateTime.IComparable.CompareTo(Object)\n- uid: System.DateTime.System#IConvertible#GetTypeCode\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.GetTypeCode()\n  nameWithType: DateTime.IConvertible.GetTypeCode()\n  fullName: DateTime.IConvertible.GetTypeCode()\n- uid: System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToBoolean(IFormatProvider)\n  fullName: DateTime.IConvertible.ToBoolean(IFormatProvider)\n- uid: System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToByte(IFormatProvider)\n  fullName: DateTime.IConvertible.ToByte(IFormatProvider)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToChar(IFormatProvider)\n  fullName: DateTime.IConvertible.ToChar(IFormatProvider)\n- uid: System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToDateTime(IFormatProvider)\n  fullName: DateTime.IConvertible.ToDateTime(IFormatProvider)\n- uid: System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToDecimal(IFormatProvider)\n  fullName: DateTime.IConvertible.ToDecimal(IFormatProvider)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToDouble(IFormatProvider)\n  fullName: DateTime.IConvertible.ToDouble(IFormatProvider)\n- uid: System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToInt16(IFormatProvider)\n  fullName: DateTime.IConvertible.ToInt16(IFormatProvider)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToInt32(IFormatProvider)\n  fullName: DateTime.IConvertible.ToInt32(IFormatProvider)\n- uid: System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToInt64(IFormatProvider)\n  fullName: DateTime.IConvertible.ToInt64(IFormatProvider)\n- uid: System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToSByte(IFormatProvider)\n  fullName: DateTime.IConvertible.ToSByte(IFormatProvider)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToSingle(IFormatProvider)\n  fullName: DateTime.IConvertible.ToSingle(IFormatProvider)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToType(Type, IFormatProvider)\n  fullName: DateTime.IConvertible.ToType(Type, IFormatProvider)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToUInt16(IFormatProvider)\n  fullName: DateTime.IConvertible.ToUInt16(IFormatProvider)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToUInt32(IFormatProvider)\n  fullName: DateTime.IConvertible.ToUInt32(IFormatProvider)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)\n  parent: System.DateTime\n  isExternal: false\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: DateTime.IConvertible.ToUInt64(IFormatProvider)\n  fullName: DateTime.IConvertible.ToUInt64(IFormatProvider)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.DateTime\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: DateTime.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: DateTime.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.DateTime.CompareTo*\n  parent: System.DateTime\n  isExternal: false\n  name: CompareTo\n  nameWithType: DateTime.CompareTo\n  fullName: DateTime.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.GetDateTimeFormats*\n  parent: System.DateTime\n  isExternal: false\n  name: GetDateTimeFormats\n  nameWithType: DateTime.GetDateTimeFormats\n  fullName: DateTime.GetDateTimeFormats\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Parse*\n  parent: System.DateTime\n  isExternal: false\n  name: Parse\n  nameWithType: DateTime.Parse\n  fullName: DateTime.Parse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.#ctor*\n  parent: System.DateTime\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime.DateTime\n  fullName: DateTime.DateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Add*\n  parent: System.DateTime\n  isExternal: false\n  name: Add\n  nameWithType: DateTime.Add\n  fullName: DateTime.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.AddDays*\n  parent: System.DateTime\n  isExternal: false\n  name: AddDays\n  nameWithType: DateTime.AddDays\n  fullName: DateTime.AddDays\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.AddHours*\n  parent: System.DateTime\n  isExternal: false\n  name: AddHours\n  nameWithType: DateTime.AddHours\n  fullName: DateTime.AddHours\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.AddMilliseconds*\n  parent: System.DateTime\n  isExternal: false\n  name: AddMilliseconds\n  nameWithType: DateTime.AddMilliseconds\n  fullName: DateTime.AddMilliseconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.AddMinutes*\n  parent: System.DateTime\n  isExternal: false\n  name: AddMinutes\n  nameWithType: DateTime.AddMinutes\n  fullName: DateTime.AddMinutes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.AddMonths*\n  parent: System.DateTime\n  isExternal: false\n  name: AddMonths\n  nameWithType: DateTime.AddMonths\n  fullName: DateTime.AddMonths\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.AddSeconds*\n  parent: System.DateTime\n  isExternal: false\n  name: AddSeconds\n  nameWithType: DateTime.AddSeconds\n  fullName: DateTime.AddSeconds\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.AddTicks*\n  parent: System.DateTime\n  isExternal: false\n  name: AddTicks\n  nameWithType: DateTime.AddTicks\n  fullName: DateTime.AddTicks\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.AddYears*\n  parent: System.DateTime\n  isExternal: false\n  name: AddYears\n  nameWithType: DateTime.AddYears\n  fullName: DateTime.AddYears\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Compare*\n  parent: System.DateTime\n  isExternal: false\n  name: Compare\n  nameWithType: DateTime.Compare\n  fullName: DateTime.Compare\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Date*\n  parent: System.DateTime\n  isExternal: false\n  name: Date\n  nameWithType: DateTime.Date\n  fullName: DateTime.Date\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Day*\n  parent: System.DateTime\n  isExternal: false\n  name: Day\n  nameWithType: DateTime.Day\n  fullName: DateTime.Day\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.DayOfWeek*\n  parent: System.DateTime\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DateTime.DayOfWeek\n  fullName: DateTime.DayOfWeek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.DayOfYear*\n  parent: System.DateTime\n  isExternal: false\n  name: DayOfYear\n  nameWithType: DateTime.DayOfYear\n  fullName: DateTime.DayOfYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.DaysInMonth*\n  parent: System.DateTime\n  isExternal: false\n  name: DaysInMonth\n  nameWithType: DateTime.DaysInMonth\n  fullName: DateTime.DaysInMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Equals*\n  parent: System.DateTime\n  isExternal: false\n  name: Equals\n  nameWithType: DateTime.Equals\n  fullName: DateTime.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.FromBinary*\n  parent: System.DateTime\n  isExternal: false\n  name: FromBinary\n  nameWithType: DateTime.FromBinary\n  fullName: DateTime.FromBinary\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.FromFileTime*\n  parent: System.DateTime\n  isExternal: false\n  name: FromFileTime\n  nameWithType: DateTime.FromFileTime\n  fullName: DateTime.FromFileTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.FromFileTimeUtc*\n  parent: System.DateTime\n  isExternal: false\n  name: FromFileTimeUtc\n  nameWithType: DateTime.FromFileTimeUtc\n  fullName: DateTime.FromFileTimeUtc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.FromOADate*\n  parent: System.DateTime\n  isExternal: false\n  name: FromOADate\n  nameWithType: DateTime.FromOADate\n  fullName: DateTime.FromOADate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.GetHashCode*\n  parent: System.DateTime\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DateTime.GetHashCode\n  fullName: DateTime.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.GetTypeCode*\n  parent: System.DateTime\n  isExternal: false\n  name: GetTypeCode\n  nameWithType: DateTime.GetTypeCode\n  fullName: DateTime.GetTypeCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Hour*\n  parent: System.DateTime\n  isExternal: false\n  name: Hour\n  nameWithType: DateTime.Hour\n  fullName: DateTime.Hour\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.IsDaylightSavingTime*\n  parent: System.DateTime\n  isExternal: false\n  name: IsDaylightSavingTime\n  nameWithType: DateTime.IsDaylightSavingTime\n  fullName: DateTime.IsDaylightSavingTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.IsLeapYear*\n  parent: System.DateTime\n  isExternal: false\n  name: IsLeapYear\n  nameWithType: DateTime.IsLeapYear\n  fullName: DateTime.IsLeapYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Kind*\n  parent: System.DateTime\n  isExternal: false\n  name: Kind\n  nameWithType: DateTime.Kind\n  fullName: DateTime.Kind\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Millisecond*\n  parent: System.DateTime\n  isExternal: false\n  name: Millisecond\n  nameWithType: DateTime.Millisecond\n  fullName: DateTime.Millisecond\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Minute*\n  parent: System.DateTime\n  isExternal: false\n  name: Minute\n  nameWithType: DateTime.Minute\n  fullName: DateTime.Minute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Month*\n  parent: System.DateTime\n  isExternal: false\n  name: Month\n  nameWithType: DateTime.Month\n  fullName: DateTime.Month\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Now*\n  parent: System.DateTime\n  isExternal: false\n  name: Now\n  nameWithType: DateTime.Now\n  fullName: DateTime.Now\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.op_Addition*\n  parent: System.DateTime\n  isExternal: false\n  name: op_Addition\n  nameWithType: DateTime.op_Addition\n  fullName: DateTime.op_Addition\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.op_Equality*\n  parent: System.DateTime\n  isExternal: false\n  name: op_Equality\n  nameWithType: DateTime.op_Equality\n  fullName: DateTime.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.op_GreaterThan*\n  parent: System.DateTime\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: DateTime.op_GreaterThan\n  fullName: DateTime.op_GreaterThan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.op_GreaterThanOrEqual*\n  parent: System.DateTime\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: DateTime.op_GreaterThanOrEqual\n  fullName: DateTime.op_GreaterThanOrEqual\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.op_Inequality*\n  parent: System.DateTime\n  isExternal: false\n  name: op_Inequality\n  nameWithType: DateTime.op_Inequality\n  fullName: DateTime.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.op_LessThan*\n  parent: System.DateTime\n  isExternal: false\n  name: op_LessThan\n  nameWithType: DateTime.op_LessThan\n  fullName: DateTime.op_LessThan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.op_LessThanOrEqual*\n  parent: System.DateTime\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: DateTime.op_LessThanOrEqual\n  fullName: DateTime.op_LessThanOrEqual\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.op_Subtraction*\n  parent: System.DateTime\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: DateTime.op_Subtraction\n  fullName: DateTime.op_Subtraction\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ParseExact*\n  parent: System.DateTime\n  isExternal: false\n  name: ParseExact\n  nameWithType: DateTime.ParseExact\n  fullName: DateTime.ParseExact\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Second*\n  parent: System.DateTime\n  isExternal: false\n  name: Second\n  nameWithType: DateTime.Second\n  fullName: DateTime.Second\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.SpecifyKind*\n  parent: System.DateTime\n  isExternal: false\n  name: SpecifyKind\n  nameWithType: DateTime.SpecifyKind\n  fullName: DateTime.SpecifyKind\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Subtract*\n  parent: System.DateTime\n  isExternal: false\n  name: Subtract\n  nameWithType: DateTime.Subtract\n  fullName: DateTime.Subtract\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Ticks*\n  parent: System.DateTime\n  isExternal: false\n  name: Ticks\n  nameWithType: DateTime.Ticks\n  fullName: DateTime.Ticks\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.TimeOfDay*\n  parent: System.DateTime\n  isExternal: false\n  name: TimeOfDay\n  nameWithType: DateTime.TimeOfDay\n  fullName: DateTime.TimeOfDay\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToBinary*\n  parent: System.DateTime\n  isExternal: false\n  name: ToBinary\n  nameWithType: DateTime.ToBinary\n  fullName: DateTime.ToBinary\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Today*\n  parent: System.DateTime\n  isExternal: false\n  name: Today\n  nameWithType: DateTime.Today\n  fullName: DateTime.Today\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToFileTime*\n  parent: System.DateTime\n  isExternal: false\n  name: ToFileTime\n  nameWithType: DateTime.ToFileTime\n  fullName: DateTime.ToFileTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToFileTimeUtc*\n  parent: System.DateTime\n  isExternal: false\n  name: ToFileTimeUtc\n  nameWithType: DateTime.ToFileTimeUtc\n  fullName: DateTime.ToFileTimeUtc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToLocalTime*\n  parent: System.DateTime\n  isExternal: false\n  name: ToLocalTime\n  nameWithType: DateTime.ToLocalTime\n  fullName: DateTime.ToLocalTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToLongDateString*\n  parent: System.DateTime\n  isExternal: false\n  name: ToLongDateString\n  nameWithType: DateTime.ToLongDateString\n  fullName: DateTime.ToLongDateString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToLongTimeString*\n  parent: System.DateTime\n  isExternal: false\n  name: ToLongTimeString\n  nameWithType: DateTime.ToLongTimeString\n  fullName: DateTime.ToLongTimeString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToOADate*\n  parent: System.DateTime\n  isExternal: false\n  name: ToOADate\n  nameWithType: DateTime.ToOADate\n  fullName: DateTime.ToOADate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToShortDateString*\n  parent: System.DateTime\n  isExternal: false\n  name: ToShortDateString\n  nameWithType: DateTime.ToShortDateString\n  fullName: DateTime.ToShortDateString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToShortTimeString*\n  parent: System.DateTime\n  isExternal: false\n  name: ToShortTimeString\n  nameWithType: DateTime.ToShortTimeString\n  fullName: DateTime.ToShortTimeString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToString*\n  parent: System.DateTime\n  isExternal: false\n  name: ToString\n  nameWithType: DateTime.ToString\n  fullName: DateTime.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.ToUniversalTime*\n  parent: System.DateTime\n  isExternal: false\n  name: ToUniversalTime\n  nameWithType: DateTime.ToUniversalTime\n  fullName: DateTime.ToUniversalTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.TryParse*\n  parent: System.DateTime\n  isExternal: false\n  name: TryParse\n  nameWithType: DateTime.TryParse\n  fullName: DateTime.TryParse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.TryParseExact*\n  parent: System.DateTime\n  isExternal: false\n  name: TryParseExact\n  nameWithType: DateTime.TryParseExact\n  fullName: DateTime.TryParseExact\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.UtcNow*\n  parent: System.DateTime\n  isExternal: false\n  name: UtcNow\n  nameWithType: DateTime.UtcNow\n  fullName: DateTime.UtcNow\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.Year*\n  parent: System.DateTime\n  isExternal: false\n  name: Year\n  nameWithType: DateTime.Year\n  fullName: DateTime.Year\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IComparable#CompareTo*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: DateTime.System.IComparable.CompareTo\n  fullName: DateTime.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#GetTypeCode*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.GetTypeCode\n  nameWithType: DateTime.System.IConvertible.GetTypeCode\n  fullName: DateTime.System.IConvertible.GetTypeCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToBoolean*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToBoolean\n  nameWithType: DateTime.System.IConvertible.ToBoolean\n  fullName: DateTime.System.IConvertible.ToBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToByte*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToByte\n  nameWithType: DateTime.System.IConvertible.ToByte\n  fullName: DateTime.System.IConvertible.ToByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToChar*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToChar\n  nameWithType: DateTime.System.IConvertible.ToChar\n  fullName: DateTime.System.IConvertible.ToChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToDateTime*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToDateTime\n  nameWithType: DateTime.System.IConvertible.ToDateTime\n  fullName: DateTime.System.IConvertible.ToDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToDecimal*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToDecimal\n  nameWithType: DateTime.System.IConvertible.ToDecimal\n  fullName: DateTime.System.IConvertible.ToDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToDouble*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToDouble\n  nameWithType: DateTime.System.IConvertible.ToDouble\n  fullName: DateTime.System.IConvertible.ToDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToInt16*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToInt16\n  nameWithType: DateTime.System.IConvertible.ToInt16\n  fullName: DateTime.System.IConvertible.ToInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToInt32*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToInt32\n  nameWithType: DateTime.System.IConvertible.ToInt32\n  fullName: DateTime.System.IConvertible.ToInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToInt64*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToInt64\n  nameWithType: DateTime.System.IConvertible.ToInt64\n  fullName: DateTime.System.IConvertible.ToInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToSByte*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToSByte\n  nameWithType: DateTime.System.IConvertible.ToSByte\n  fullName: DateTime.System.IConvertible.ToSByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToSingle*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToSingle\n  nameWithType: DateTime.System.IConvertible.ToSingle\n  fullName: DateTime.System.IConvertible.ToSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToType*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToType\n  nameWithType: DateTime.System.IConvertible.ToType\n  fullName: DateTime.System.IConvertible.ToType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToUInt16*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToUInt16\n  nameWithType: DateTime.System.IConvertible.ToUInt16\n  fullName: DateTime.System.IConvertible.ToUInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToUInt32*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToUInt32\n  nameWithType: DateTime.System.IConvertible.ToUInt32\n  fullName: DateTime.System.IConvertible.ToUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#IConvertible#ToUInt64*\n  parent: System.DateTime\n  isExternal: false\n  name: System.IConvertible.ToUInt64\n  nameWithType: DateTime.System.IConvertible.ToUInt64\n  fullName: DateTime.System.IConvertible.ToUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.DateTime\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: DateTime.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: DateTime.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DateTime.xml\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IComparable`1\n  name: IComparable<T>\n  nameWithType: IComparable<T>\n  fullName: System.IComparable<T>\n- uid: System.IComparable{System.DateTime}\n  parent: System\n  isExternal: false\n  name: IComparable<DateTime>\n  nameWithType: IComparable<DateTime>\n  fullName: System.IComparable<System.DateTime>\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    nameWithType: IComparable\n    fullName: System.IComparable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DateTime\n    name: DateTime\n    nameWithType: DateTime\n    fullName: System.DateTime\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IConvertible\n  parent: System\n  isExternal: false\n  name: IConvertible\n  nameWithType: IConvertible\n  fullName: System.IConvertible\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.DateTime}\n  parent: System\n  isExternal: false\n  name: IEquatable<DateTime>\n  nameWithType: IEquatable<DateTime>\n  fullName: System.IEquatable<System.DateTime>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DateTime\n    name: DateTime\n    nameWithType: DateTime\n    fullName: System.DateTime\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}