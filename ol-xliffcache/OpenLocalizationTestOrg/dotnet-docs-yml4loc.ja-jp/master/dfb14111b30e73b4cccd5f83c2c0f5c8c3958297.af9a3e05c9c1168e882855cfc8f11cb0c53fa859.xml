{"nodes":[{"content":"Manages the collection of <xref href=\"System.Net.ServicePoint\"></xref> objects.","nodes":[{"pos":[0,79],"content":"Manages the collection of <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> objects.","source":"Manages the collection of <xref href=\"System.Net.ServicePoint\"></xref> objects."}],"pos":[1718,1798],"yaml":true},{"content":"<xref:System.Net.ServicePointManager> is a static class used to create, maintain, and delete instances of the <xref:System.Net.ServicePoint> class.  \n  \n When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <xref:System.Net.ServicePointManager> object, the <xref:System.Net.ServicePointManager> returns a <xref:System.Net.ServicePoint> object that contains connection information for the host and scheme identified by the URI. If there is an existing <xref:System.Net.ServicePoint> object for that host and scheme, the <xref:System.Net.ServicePointManager> object returns the existing <xref:System.Net.ServicePoint> object; otherwise, the <xref:System.Net.ServicePointManager> object creates a new <xref:System.Net.ServicePoint> object.  \n  \n The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.  \n  \n Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.","nodes":[{"pos":[0,147],"content":"<xref:System.Net.ServicePointManager> is a static class used to create, maintain, and delete instances of the <xref:System.Net.ServicePoint> class.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager&gt;</ph> is a static class used to create, maintain, and delete instances of the <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint&gt;</ph> class.","pos":[0,147],"source":"<xref:System.Net.ServicePointManager> is a static class used to create, maintain, and delete instances of the <xref:System.Net.ServicePoint> class."}]},{"pos":[154,795],"content":"When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <xref:System.Net.ServicePointManager> object, the <xref:System.Net.ServicePointManager> returns a <xref:System.Net.ServicePoint> object that contains connection information for the host and scheme identified by the URI. If there is an existing <xref:System.Net.ServicePoint> object for that host and scheme, the <xref:System.Net.ServicePointManager> object returns the existing <xref:System.Net.ServicePoint> object; otherwise, the <xref:System.Net.ServicePointManager> object creates a new <xref:System.Net.ServicePoint> object.","nodes":[{"content":"When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <xref:System.Net.ServicePointManager> object, the <xref:System.Net.ServicePointManager> returns a <xref:System.Net.ServicePoint> object that contains connection information for the host and scheme identified by the URI. If there is an existing <xref:System.Net.ServicePoint> object for that host and scheme, the <xref:System.Net.ServicePointManager> object returns the existing <xref:System.Net.ServicePoint> object; otherwise, the <xref:System.Net.ServicePointManager> object creates a new <xref:System.Net.ServicePoint> object.","pos":[0,641],"nodes":[{"content":"When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object, the <ph id=\"ph2\">&lt;xref:System.Net.ServicePointManager&gt;</ph> returns a <ph id=\"ph3\">&lt;xref:System.Net.ServicePoint&gt;</ph> object that contains connection information for the host and scheme identified by the URI.","pos":[0,331],"source":"When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <xref:System.Net.ServicePointManager> object, the <xref:System.Net.ServicePointManager> returns a <xref:System.Net.ServicePoint> object that contains connection information for the host and scheme identified by the URI."},{"content":"If there is an existing <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> object for that host and scheme, the <ph id=\"ph2\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object returns the existing <ph id=\"ph3\">&lt;xref:System.Net.ServicePoint&gt;</ph> object; otherwise, the <ph id=\"ph4\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object creates a new <ph id=\"ph5\">&lt;xref:System.Net.ServicePoint&gt;</ph> object.","pos":[332,641],"source":" If there is an existing <xref:System.Net.ServicePoint> object for that host and scheme, the <xref:System.Net.ServicePointManager> object returns the existing <xref:System.Net.ServicePoint> object; otherwise, the <xref:System.Net.ServicePointManager> object creates a new <xref:System.Net.ServicePoint> object."}]}]},{"pos":[802,1113],"content":"The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.","nodes":[{"content":"The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.","pos":[0,311],"nodes":[{"content":"The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.","pos":[0,122]},{"content":"Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.","pos":[123,311]}]}]},{"pos":[1120,1391],"content":"Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.","nodes":[{"content":"Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.","pos":[0,143]},{"content":"<bpt id=\"p1\">[</bpt>This article<ept id=\"p1\">](https://support.microsoft.com/kb/3069494)</ept> explains how to modify your code so that the new behavior is disabled.","pos":[144,271],"source":"[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled."}]}],"pos":[1809,3209],"yaml":true,"extradata":"MT"},{"content":"Gets or sets policy for server certificates.","nodes":[{"pos":[0,44],"content":"Gets or sets policy for server certificates.","nodes":[{"content":"Gets or sets policy for server certificates.","pos":[0,44]}]}],"pos":[5250,5295],"yaml":true},{"content":"When the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property is set to an <xref:System.Net.ICertificatePolicy> interface object, the <xref:System.Net.ServicePointManager> object uses the certificate policy defined in that instance instead of the default certificate policy.  \n  \n The default certificate policy allows valid certificates and valid certificates that have expired.","nodes":[{"pos":[0,289],"content":"When the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property is set to an <xref:System.Net.ICertificatePolicy> interface object, the <xref:System.Net.ServicePointManager> object uses the certificate policy defined in that instance instead of the default certificate policy.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.CertificatePolicy%2A&gt;</ph> property is set to an <ph id=\"ph2\">&lt;xref:System.Net.ICertificatePolicy&gt;</ph> interface object, the <ph id=\"ph3\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object uses the certificate policy defined in that instance instead of the default certificate policy.","pos":[0,289],"source":"When the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property is set to an <xref:System.Net.ICertificatePolicy> interface object, the <xref:System.Net.ServicePointManager> object uses the certificate policy defined in that instance instead of the default certificate policy."}]},{"pos":[296,394],"content":"The default certificate policy allows valid certificates and valid certificates that have expired.","nodes":[{"content":"The default certificate policy allows valid certificates and valid certificates that have expired.","pos":[0,98]}]}],"pos":[5306,5705],"yaml":true,"extradata":"MT"},{"content":"An object that implements the <xref href=\"System.Net.ICertificatePolicy\"></xref> interface.","nodes":[{"pos":[0,91],"content":"An object that implements the <ph id=\"ph1\">&lt;xref href=\"System.Net.ICertificatePolicy\"&gt;&lt;/xref&gt;</ph> interface.","source":"An object that implements the <xref href=\"System.Net.ICertificatePolicy\"></xref> interface."}],"pos":[6932,7024],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that indicates whether the certificate is checked against the certificate authority revocation list.","nodes":[{"pos":[0,157],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the certificate is checked against the certificate authority revocation list.","source":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that indicates whether the certificate is checked against the certificate authority revocation list."}],"pos":[8281,8439],"yaml":true},{"content":"When the <xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A> is `true`, the certificate is checked against the certificate authority revocation list, as part of the certificate validation process. Its default value is `false`.","nodes":[{"pos":[0,246],"content":"When the <xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A> is `true`, the certificate is checked against the certificate authority revocation list, as part of the certificate validation process. Its default value is `false`.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, the certificate is checked against the certificate authority revocation list, as part of the certificate validation process.","pos":[0,216],"source":"When the <xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A> is `true`, the certificate is checked against the certificate authority revocation list, as part of the certificate validation process."},{"content":"Its default value is <ph id=\"ph1\">`false`</ph>.","pos":[217,246],"source":" Its default value is `false`."}]}],"pos":[8450,8697],"yaml":true,"extradata":"MT"},{"content":"`true` if the certificate revocation list is checked; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the certificate revocation list is checked; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the certificate revocation list is checked; otherwise, `false`."}],"pos":[9390,9466],"yaml":true},{"content":"Gets or sets the maximum number of concurrent connections allowed by a <xref href=\"System.Net.ServicePoint\"></xref> object.","nodes":[{"pos":[0,123],"content":"Gets or sets the maximum number of concurrent connections allowed by a <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the maximum number of concurrent connections allowed by a <xref href=\"System.Net.ServicePoint\"></xref> object."}],"pos":[11817,11941],"yaml":true},{"content":"The <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property sets the default maximum number of concurrent connections that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property when creating <xref:System.Net.ServicePoint> objects.  \n  \n Changing the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property has no effect on existing <xref:System.Net.ServicePoint> objects; it affects only <xref:System.Net.ServicePoint> objects that are initialized after the change. If the value of this property has not been set either directly or through configuration, the value defaults to the constant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.  \n  \n> [!NOTE]\n>  Any changes to the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property affect both HTTP 1.0 and HTTP 1.1 connections. It is not possible to separately alter the connection limit for HTTP 1.0 and HTTP 1.1 protocols. When used in the server environment (ASP.NET) <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> defaults to higher number of connections, which is 10.","nodes":[{"pos":[0,316],"content":"The <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property sets the default maximum number of concurrent connections that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property when creating <xref:System.Net.ServicePoint> objects.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A&gt;</ph> property sets the default maximum number of concurrent connections that the <ph id=\"ph2\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object assigns to the <ph id=\"ph3\">&lt;xref:System.Net.ServicePoint.ConnectionLimit%2A&gt;</ph> property when creating <ph id=\"ph4\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects.","pos":[0,316],"source":"The <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property sets the default maximum number of concurrent connections that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property when creating <xref:System.Net.ServicePoint> objects."}]},{"pos":[323,764],"content":"Changing the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property has no effect on existing <xref:System.Net.ServicePoint> objects; it affects only <xref:System.Net.ServicePoint> objects that are initialized after the change. If the value of this property has not been set either directly or through configuration, the value defaults to the constant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.","nodes":[{"content":"Changing the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property has no effect on existing <xref:System.Net.ServicePoint> objects; it affects only <xref:System.Net.ServicePoint> objects that are initialized after the change. If the value of this property has not been set either directly or through configuration, the value defaults to the constant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.","pos":[0,441],"nodes":[{"content":"Changing the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A&gt;</ph> property has no effect on existing <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects; it affects only <ph id=\"ph3\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects that are initialized after the change.","pos":[0,245],"source":"Changing the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property has no effect on existing <xref:System.Net.ServicePoint> objects; it affects only <xref:System.Net.ServicePoint> objects that are initialized after the change."},{"content":"If the value of this property has not been set either directly or through configuration, the value defaults to the constant <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit&gt;</ph>.","pos":[246,441],"source":" If the value of this property has not been set either directly or through configuration, the value defaults to the constant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>."}]}]},{"pos":[772,1183],"content":"[!NOTE]\n Any changes to the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property affect both HTTP 1.0 and HTTP 1.1 connections. It is not possible to separately alter the connection limit for HTTP 1.0 and HTTP 1.1 protocols. When used in the server environment (ASP.NET) <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> defaults to higher number of connections, which is 10.","leadings":["","> "],"nodes":[{"content":" Any changes to the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property affect both HTTP 1.0 and HTTP 1.1 connections. It is not possible to separately alter the connection limit for HTTP 1.0 and HTTP 1.1 protocols. When used in the server environment (ASP.NET) <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> defaults to higher number of connections, which is 10.","pos":[8,409],"nodes":[{"content":"Any changes to the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A&gt;</ph> property affect both HTTP 1.0 and HTTP 1.1 connections.","pos":[1,139],"source":" Any changes to the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property affect both HTTP 1.0 and HTTP 1.1 connections."},{"content":"It is not possible to separately alter the connection limit for HTTP 1.0 and HTTP 1.1 protocols.","pos":[140,236]},{"content":"When used in the server environment (ASP.NET) <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A&gt;</ph> defaults to higher number of connections, which is 10.","pos":[237,401],"source":" When used in the server environment (ASP.NET) <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> defaults to higher number of connections, which is 10."}]}]}],"pos":[11952,13143],"yaml":true,"extradata":"MT"},{"content":"The maximum number of concurrent connections allowed by a <xref href=\"System.Net.ServicePoint\"></xref> object. The default value is 2. When an app is running as an ASP.NET host, it is not possible to alter the value of this property through the config file if the autoConfig property is set to `true`. However, you can change the value programmatically when the autoConfig property is `true`. Set your preferred value once, when the AppDomain loads.","nodes":[{"pos":[0,449],"content":"The maximum number of concurrent connections allowed by a <xref href=\"System.Net.ServicePoint\"></xref> object. The default value is 2. When an app is running as an ASP.NET host, it is not possible to alter the value of this property through the config file if the autoConfig property is set to `true`. However, you can change the value programmatically when the autoConfig property is `true`. Set your preferred value once, when the AppDomain loads.","nodes":[{"content":"The maximum number of concurrent connections allowed by a <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,110],"source":"The maximum number of concurrent connections allowed by a <xref href=\"System.Net.ServicePoint\"></xref> object."},{"content":"The default value is 2.","pos":[111,134]},{"content":"When an app is running as an ASP.NET host, it is not possible to alter the value of this property through the config file if the autoConfig property is set to <ph id=\"ph1\">`true`</ph>.","pos":[135,301],"source":" When an app is running as an ASP.NET host, it is not possible to alter the value of this property through the config file if the autoConfig property is set to `true`."},{"content":"However, you can change the value programmatically when the autoConfig property is <ph id=\"ph1\">`true`</ph>.","pos":[302,392],"source":" However, you can change the value programmatically when the autoConfig property is `true`."},{"content":"Set your preferred value once, when the AppDomain loads.","pos":[393,449]}]}],"pos":[13761,14211],"yaml":true},{"content":"<xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> is less than or equal to 0.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"&gt;&lt;/xref&gt;</ph> is less than or equal to 0.","source":"<xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> is less than or equal to 0."}],"pos":[14406,14509],"yaml":true},{"content":"The default number of non-persistent connections (4) allowed on a <xref href=\"System.Net.ServicePoint\"></xref> object connected to an HTTP/1.0 or later server. This field is constant but is no longer used in the .NET Framework 2.0.","nodes":[{"pos":[0,231],"content":"The default number of non-persistent connections (4) allowed on a <xref href=\"System.Net.ServicePoint\"></xref> object connected to an HTTP/1.0 or later server. This field is constant but is no longer used in the .NET Framework 2.0.","nodes":[{"content":"The default number of non-persistent connections (4) allowed on a <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object connected to an HTTP/1.0 or later server.","pos":[0,159],"source":"The default number of non-persistent connections (4) allowed on a <xref href=\"System.Net.ServicePoint\"></xref> object connected to an HTTP/1.0 or later server."},{"content":"This field is constant but is no longer used in the .NET Framework 2.0.","pos":[160,231]}]}],"pos":[15737,15969],"yaml":true},{"content":"The default number of persistent connections (2) allowed on a <xref href=\"System.Net.ServicePoint\"></xref> object connected to an HTTP/1.1 or later server. This field is constant and is used to initialize the <xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> property if the value of the <xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> property has not been set either directly or through configuration.","nodes":[{"pos":[0,455],"content":"The default number of persistent connections (2) allowed on a <xref href=\"System.Net.ServicePoint\"></xref> object connected to an HTTP/1.1 or later server. This field is constant and is used to initialize the <xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> property if the value of the <xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> property has not been set either directly or through configuration.","nodes":[{"content":"The default number of persistent connections (2) allowed on a <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object connected to an HTTP/1.1 or later server.","pos":[0,155],"source":"The default number of persistent connections (2) allowed on a <xref href=\"System.Net.ServicePoint\"></xref> object connected to an HTTP/1.1 or later server."},{"content":"This field is constant and is used to initialize the <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"&gt;&lt;/xref&gt;</ph> property if the value of the <ph id=\"ph2\">&lt;xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"&gt;&lt;/xref&gt;</ph> property has not been set either directly or through configuration.","pos":[156,455],"source":" This field is constant and is used to initialize the <xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> property if the value of the <xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> property has not been set either directly or through configuration."}]}],"pos":[17336,17792],"yaml":true},{"content":"Gets or sets a value that indicates how long a Domain Name Service (DNS) resolution is considered valid.","nodes":[{"pos":[0,104],"content":"Gets or sets a value that indicates how long a Domain Name Service (DNS) resolution is considered valid.","nodes":[{"content":"Gets or sets a value that indicates how long a Domain Name Service (DNS) resolution is considered valid.","pos":[0,104]}]}],"pos":[19647,19752],"yaml":true},{"content":"The time-out value, in milliseconds. A value of -1 indicates an infinite time-out period. The default value is 120,000 milliseconds (two minutes).","nodes":[{"pos":[0,146],"content":"The time-out value, in milliseconds. A value of -1 indicates an infinite time-out period. The default value is 120,000 milliseconds (two minutes).","nodes":[{"content":"The time-out value, in milliseconds. A value of -1 indicates an infinite time-out period. The default value is 120,000 milliseconds (two minutes).","pos":[0,146],"nodes":[{"content":"The time-out value, in milliseconds.","pos":[0,36]},{"content":"A value of -1 indicates an infinite time-out period.","pos":[37,89]},{"content":"The default value is 120,000 milliseconds (two minutes).","pos":[90,146]}]}]}],"pos":[20415,20562],"yaml":true},{"content":"Gets or sets a value that indicates whether a Domain Name Service (DNS) resolution rotates among the applicable Internet Protocol (IP) addresses.","nodes":[{"pos":[0,145],"content":"Gets or sets a value that indicates whether a Domain Name Service (DNS) resolution rotates among the applicable Internet Protocol (IP) addresses.","nodes":[{"content":"Gets or sets a value that indicates whether a Domain Name Service (DNS) resolution rotates among the applicable Internet Protocol (IP) addresses.","pos":[0,145]}]}],"pos":[21776,21922],"yaml":true},{"content":"When more than one IP address is associated with a host name, a DNS resolution normally returns only the first IP address. If you set this property to `true`, then subsequent DNS resolutions will cycle through all available IP addresses for a particular host. This option is useful when a service uses DNS as a load balancing mechanism between servers or server clusters.","nodes":[{"pos":[0,371],"content":"When more than one IP address is associated with a host name, a DNS resolution normally returns only the first IP address. If you set this property to `true`, then subsequent DNS resolutions will cycle through all available IP addresses for a particular host. This option is useful when a service uses DNS as a load balancing mechanism between servers or server clusters.","nodes":[{"content":"When more than one IP address is associated with a host name, a DNS resolution normally returns only the first IP address.","pos":[0,122]},{"content":"If you set this property to <ph id=\"ph1\">`true`</ph>, then subsequent DNS resolutions will cycle through all available IP addresses for a particular host.","pos":[123,259],"source":" If you set this property to `true`, then subsequent DNS resolutions will cycle through all available IP addresses for a particular host."},{"content":"This option is useful when a service uses DNS as a load balancing mechanism between servers or server clusters.","pos":[260,371]}]}],"pos":[21933,22305],"yaml":true,"extradata":"MT"},{"content":"`false` if a DNS resolution always returns the first IP address for a particular host; otherwise `true`. The default is `false`.","nodes":[{"pos":[0,128],"content":"`false` if a DNS resolution always returns the first IP address for a particular host; otherwise `true`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`false`</ph> if a DNS resolution always returns the first IP address for a particular host; otherwise <ph id=\"ph2\">`true`</ph>.","pos":[0,104],"source":"`false` if a DNS resolution always returns the first IP address for a particular host; otherwise `true`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[105,128],"source":" The default is `false`."}]}],"pos":[22993,23124],"yaml":true},{"content":"Gets the <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> for this <xref href=\"System.Net.ServicePointManager\"></xref> instance.","nodes":[{"pos":[0,137],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.EncryptionPolicy\"&gt;&lt;/xref&gt;</ph> for this <ph id=\"ph2\">&lt;xref href=\"System.Net.ServicePointManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> for this <xref href=\"System.Net.ServicePointManager\"></xref> instance."}],"pos":[24362,24500],"yaml":true},{"content":"If a value is not specified in the configuration file, the <xref:System.Net.ServicePointManager.EncryptionPolicy%2A> property defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>. This is applied to an SSL/TLS session on this <xref:System.Net.ServicePointManager> instance.  \n  \n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"pos":[0,301],"content":"If a value is not specified in the configuration file, the <xref:System.Net.ServicePointManager.EncryptionPolicy%2A> property defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>. This is applied to an SSL/TLS session on this <xref:System.Net.ServicePointManager> instance.","nodes":[{"content":"If a value is not specified in the configuration file, the <xref:System.Net.ServicePointManager.EncryptionPolicy%2A> property defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>. This is applied to an SSL/TLS session on this <xref:System.Net.ServicePointManager> instance.","pos":[0,301],"nodes":[{"content":"If a value is not specified in the configuration file, the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.EncryptionPolicy%2A&gt;</ph> property defaults to <ph id=\"ph2\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph>.","pos":[0,207],"source":"If a value is not specified in the configuration file, the <xref:System.Net.ServicePointManager.EncryptionPolicy%2A> property defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."},{"content":"This is applied to an SSL/TLS session on this <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager&gt;</ph> instance.","pos":[208,301],"source":" This is applied to an SSL/TLS session on this <xref:System.Net.ServicePointManager> instance."}]}]},{"pos":[308,453],"content":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"content":"The use of the Null cipher is required when the encryption policy is set to <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph>.","pos":[0,145],"source":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."}]}],"pos":[24511,24969],"yaml":true,"extradata":"MT"},{"content":"The encryption policy to use for this <xref href=\"System.Net.ServicePointManager\"></xref> instance.","nodes":[{"pos":[0,99],"content":"The encryption policy to use for this <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePointManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"The encryption policy to use for this <xref href=\"System.Net.ServicePointManager\"></xref> instance."}],"pos":[25237,25337],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that determines whether 100-Continue behavior is used.","nodes":[{"pos":[0,111],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that determines whether 100-Continue behavior is used.","source":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that determines whether 100-Continue behavior is used."}],"pos":[26578,26690],"yaml":true},{"content":"When this property is set to `true`, 100-Continue behavior is used. Client requests that use the `PUT` and `POST` methods will add an Expect header to the request if the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `true` and <xref:System.Net.HttpWebRequest.ContentLength%2A> property is greater than zero or the <xref:System.Net.HttpWebRequest.SendChunked%2A> property is true. The client will expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.  \n  \n For example, assume the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `false`. When the request is sent to the server, it includes the data. If, after reading the request headers, the server requires authentication and must send a 401 response, the client must resend the data with proper authentication headers.  \n  \n If this property is `true`, the request headers are sent to the server. If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted. If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.  \n  \n Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new <xref:System.Net.ServicePoint> objects created after the change are affected.  \n  \n The 100-Continue behavior is not used for HTTP 1.0 requests even if this property is set to `true`.  \n  \n The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.","nodes":[{"pos":[0,705],"content":"When this property is set to `true`, 100-Continue behavior is used. Client requests that use the `PUT` and `POST` methods will add an Expect header to the request if the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `true` and <xref:System.Net.HttpWebRequest.ContentLength%2A> property is greater than zero or the <xref:System.Net.HttpWebRequest.SendChunked%2A> property is true. The client will expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, 100-Continue behavior is used.","pos":[0,67],"source":"When this property is set to `true`, 100-Continue behavior is used."},{"content":"Client requests that use the <ph id=\"ph1\">`PUT`</ph> and <ph id=\"ph2\">`POST`</ph> methods will add an Expect header to the request if the <ph id=\"ph3\">&lt;xref:System.Net.ServicePointManager.Expect100Continue%2A&gt;</ph> property is <ph id=\"ph4\">`true`</ph> and <ph id=\"ph5\">&lt;xref:System.Net.HttpWebRequest.ContentLength%2A&gt;</ph> property is greater than zero or the <ph id=\"ph6\">&lt;xref:System.Net.HttpWebRequest.SendChunked%2A&gt;</ph> property is true.","pos":[68,404],"source":" Client requests that use the `PUT` and `POST` methods will add an Expect header to the request if the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `true` and <xref:System.Net.HttpWebRequest.ContentLength%2A> property is greater than zero or the <xref:System.Net.HttpWebRequest.SendChunked%2A> property is true."},{"content":"The client will expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted.","pos":[405,541]},{"content":"This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.","pos":[542,705]}]},{"pos":[712,1049],"content":"For example, assume the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `false`. When the request is sent to the server, it includes the data. If, after reading the request headers, the server requires authentication and must send a 401 response, the client must resend the data with proper authentication headers.","nodes":[{"content":"For example, assume the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.Expect100Continue%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>.","pos":[0,103],"source":"For example, assume the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `false`."},{"content":"When the request is sent to the server, it includes the data.","pos":[104,165]},{"content":"If, after reading the request headers, the server requires authentication and must send a 401 response, the client must resend the data with proper authentication headers.","pos":[166,337]}]},{"pos":[1056,1402],"content":"If this property is `true`, the request headers are sent to the server. If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted. If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.","nodes":[{"content":"If this property is <ph id=\"ph1\">`true`</ph>, the request headers are sent to the server.","pos":[0,71],"source":"If this property is `true`, the request headers are sent to the server."},{"content":"If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted.","pos":[72,192]},{"content":"If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.","pos":[193,346]}]},{"pos":[1409,1596],"content":"Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new <xref:System.Net.ServicePoint> objects created after the change are affected.","nodes":[{"content":"Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new <xref:System.Net.ServicePoint> objects created after the change are affected.","pos":[0,187],"nodes":[{"content":"Changing the value of this property does not affect existing <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects.","pos":[0,100],"source":"Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects."},{"content":"Only new <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects created after the change are affected.","pos":[101,187],"source":" Only new <xref:System.Net.ServicePoint> objects created after the change are affected."}]}]},{"pos":[1603,1702],"content":"The 100-Continue behavior is not used for HTTP 1.0 requests even if this property is set to <ph id=\"ph1\">`true`</ph>.","source":"The 100-Continue behavior is not used for HTTP 1.0 requests even if this property is set to `true`."},{"pos":[1709,1793],"content":"The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.","nodes":[{"content":"The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.","pos":[0,84]}]}],"pos":[26701,28507],"yaml":true,"extradata":"MT"},{"content":"`true` to enable 100-Continue behavior. The default value is `true`.","nodes":[{"pos":[0,68],"content":"`true` to enable 100-Continue behavior. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to enable 100-Continue behavior.","pos":[0,39],"source":"`true` to enable 100-Continue behavior."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[40,68],"source":" The default value is `true`."}]}],"pos":[29123,29194],"yaml":true},{"content":"Finds an existing <xref href=\"System.Net.ServicePoint\"></xref> object or creates a new <xref href=\"System.Net.ServicePoint\"></xref> object to manage communications with the specified <xref href=\"System.Uri\"></xref> object.","nodes":[{"pos":[0,222],"content":"Finds an existing <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object or creates a new <ph id=\"ph2\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object to manage communications with the specified <ph id=\"ph3\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> object.","source":"Finds an existing <xref href=\"System.Net.ServicePoint\"></xref> object or creates a new <xref href=\"System.Net.ServicePoint\"></xref> object to manage communications with the specified <xref href=\"System.Uri\"></xref> object."}],"pos":[30535,30758],"yaml":true},{"content":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.","nodes":[{"pos":[0,296],"content":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.","nodes":[{"content":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.","pos":[0,296],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.FindServicePoint%2A&gt;</ph> method returns the <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint&gt;</ph> object associated with the specified Internet host name.","pos":[0,168],"source":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name."},{"content":"If no <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> object exists for that host, the <ph id=\"ph2\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object creates one.","pos":[169,296],"source":" If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one."}]}]}],"pos":[30769,31066],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Uri\"></xref> object that contains the address of the Internet resource to contact.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> object that contains the address of the Internet resource to contact.","source":"A <xref href=\"System.Uri\"></xref> object that contains the address of the Internet resource to contact."}],"pos":[31263,31367],"yaml":true},{"content":"The proxy data for this request.","nodes":[{"pos":[0,32],"content":"The proxy data for this request.","nodes":[{"content":"The proxy data for this request.","pos":[0,32]}]}],"pos":[31435,31468],"yaml":true},{"content":"The <xref href=\"System.Net.ServicePoint\"></xref> object that manages communications for the request.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object that manages communications for the request.","source":"The <xref href=\"System.Net.ServicePoint\"></xref> object that manages communications for the request."}],"pos":[31535,31636],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[31813,31845],"yaml":true},{"content":"The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects defined in <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> has been reached.","nodes":[{"pos":[0,172],"content":"The maximum number of <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> objects defined in <ph id=\"ph2\">&lt;xref href=\"System.Net.ServicePointManager.MaxServicePoints\"&gt;&lt;/xref&gt;</ph> has been reached.","source":"The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects defined in <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> has been reached."}],"pos":[31955,32128],"yaml":true},{"content":"Finds an existing <xref href=\"System.Net.ServicePoint\"></xref> object or creates a new <xref href=\"System.Net.ServicePoint\"></xref> object to manage communications with the specified <xref href=\"System.Uri\"></xref> object.","nodes":[{"pos":[0,222],"content":"Finds an existing <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object or creates a new <ph id=\"ph2\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object to manage communications with the specified <ph id=\"ph3\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> object.","source":"Finds an existing <xref href=\"System.Net.ServicePoint\"></xref> object or creates a new <xref href=\"System.Net.ServicePoint\"></xref> object to manage communications with the specified <xref href=\"System.Uri\"></xref> object."}],"pos":[33294,33517],"yaml":true},{"content":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.","nodes":[{"pos":[0,296],"content":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.","nodes":[{"content":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.","pos":[0,296],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.FindServicePoint%2A&gt;</ph> method returns the <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint&gt;</ph> object associated with the specified Internet host name.","pos":[0,168],"source":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name."},{"content":"If no <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> object exists for that host, the <ph id=\"ph2\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object creates one.","pos":[169,296],"source":" If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one."}]}]}],"pos":[33528,33825],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Uri\"></xref> object of the Internet resource to contact.","nodes":[{"pos":[0,79],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> object of the Internet resource to contact.","source":"The <xref href=\"System.Uri\"></xref> object of the Internet resource to contact."}],"pos":[33994,34074],"yaml":true},{"content":"The <xref href=\"System.Net.ServicePoint\"></xref> object that manages communications for the request.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object that manages communications for the request.","source":"The <xref href=\"System.Net.ServicePoint\"></xref> object that manages communications for the request."}],"pos":[34141,34242],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[34419,34451],"yaml":true},{"content":"The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects defined in <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> has been reached.","nodes":[{"pos":[0,172],"content":"The maximum number of <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> objects defined in <ph id=\"ph2\">&lt;xref href=\"System.Net.ServicePointManager.MaxServicePoints\"&gt;&lt;/xref&gt;</ph> has been reached.","source":"The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects defined in <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> has been reached."}],"pos":[34561,34734],"yaml":true},{"content":"Finds an existing <xref href=\"System.Net.ServicePoint\"></xref> object or creates a new <xref href=\"System.Net.ServicePoint\"></xref> object to manage communications with the specified Uniform Resource Identifier (URI).","nodes":[{"pos":[0,217],"content":"Finds an existing <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object or creates a new <ph id=\"ph2\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object to manage communications with the specified Uniform Resource Identifier (URI).","source":"Finds an existing <xref href=\"System.Net.ServicePoint\"></xref> object or creates a new <xref href=\"System.Net.ServicePoint\"></xref> object to manage communications with the specified Uniform Resource Identifier (URI)."}],"pos":[36014,36232],"yaml":true},{"content":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.","nodes":[{"pos":[0,296],"content":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.","nodes":[{"content":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.","pos":[0,296],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.FindServicePoint%2A&gt;</ph> method returns the <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint&gt;</ph> object associated with the specified Internet host name.","pos":[0,168],"source":"The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name."},{"content":"If no <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> object exists for that host, the <ph id=\"ph2\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object creates one.","pos":[169,296],"source":" If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one."}]}]}],"pos":[36243,36540],"yaml":true,"extradata":"MT"},{"content":"The URI of the Internet resource to be contacted.","nodes":[{"pos":[0,49],"content":"The URI of the Internet resource to be contacted.","nodes":[{"content":"The URI of the Internet resource to be contacted.","pos":[0,49]}]}],"pos":[37289,37339],"yaml":true},{"content":"The proxy data for this request.","nodes":[{"pos":[0,32],"content":"The proxy data for this request.","nodes":[{"content":"The proxy data for this request.","pos":[0,32]}]}],"pos":[37407,37440],"yaml":true},{"content":"The <xref href=\"System.Net.ServicePoint\"></xref> object that manages communications for the request.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object that manages communications for the request.","source":"The <xref href=\"System.Net.ServicePoint\"></xref> object that manages communications for the request."}],"pos":[37507,37608],"yaml":true},{"content":"The URI specified in <code>uriString</code> is invalid.","nodes":[{"pos":[0,55],"content":"The URI specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uriString</ph><ept id=\"p1\">&lt;/code&gt;</ept> is invalid.","source":"The URI specified in <code>uriString</code> is invalid."}],"pos":[37779,37835],"yaml":true},{"content":"The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects defined in <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> has been reached.","nodes":[{"pos":[0,172],"content":"The maximum number of <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> objects defined in <ph id=\"ph2\">&lt;xref href=\"System.Net.ServicePointManager.MaxServicePoints\"&gt;&lt;/xref&gt;</ph> has been reached.","source":"The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects defined in <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> has been reached."}],"pos":[37945,38118],"yaml":true},{"content":"Gets or sets the maximum idle time of a <xref href=\"System.Net.ServicePoint\"></xref> object.","nodes":[{"pos":[0,92],"content":"Gets or sets the maximum idle time of a <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the maximum idle time of a <xref href=\"System.Net.ServicePoint\"></xref> object."}],"pos":[39277,39370],"yaml":true},{"content":"The <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property sets the maximum idle time that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property when creating <xref:System.Net.ServicePoint> objects. Changes to this value affect only <xref:System.Net.ServicePoint> objects that are initialized after the value is changed.  \n  \n After a <xref:System.Net.ServicePoint> object has been idle for the time specified in <xref:System.Net.ServicePoint.MaxIdleTime%2A>, it is eligible for garbage collection. A <xref:System.Net.ServicePoint> object is idle when the list of connections associated with the <xref:System.Net.ServicePoint> object is empty.","nodes":[{"pos":[0,404],"content":"The <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property sets the maximum idle time that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property when creating <xref:System.Net.ServicePoint> objects. Changes to this value affect only <xref:System.Net.ServicePoint> objects that are initialized after the value is changed.","nodes":[{"content":"The <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property sets the maximum idle time that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property when creating <xref:System.Net.ServicePoint> objects. Changes to this value affect only <xref:System.Net.ServicePoint> objects that are initialized after the value is changed.","pos":[0,404],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A&gt;</ph> property sets the maximum idle time that the <ph id=\"ph2\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object assigns to the <ph id=\"ph3\">&lt;xref:System.Net.ServicePoint.MaxIdleTime%2A&gt;</ph> property when creating <ph id=\"ph4\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects.","pos":[0,282],"source":"The <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property sets the maximum idle time that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property when creating <xref:System.Net.ServicePoint> objects."},{"content":"Changes to this value affect only <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects that are initialized after the value is changed.","pos":[283,404],"source":" Changes to this value affect only <xref:System.Net.ServicePoint> objects that are initialized after the value is changed."}]}]},{"pos":[411,727],"content":"After a <xref:System.Net.ServicePoint> object has been idle for the time specified in <xref:System.Net.ServicePoint.MaxIdleTime%2A>, it is eligible for garbage collection. A <xref:System.Net.ServicePoint> object is idle when the list of connections associated with the <xref:System.Net.ServicePoint> object is empty.","nodes":[{"content":"After a <xref:System.Net.ServicePoint> object has been idle for the time specified in <xref:System.Net.ServicePoint.MaxIdleTime%2A>, it is eligible for garbage collection. A <xref:System.Net.ServicePoint> object is idle when the list of connections associated with the <xref:System.Net.ServicePoint> object is empty.","pos":[0,316],"nodes":[{"content":"After a <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> object has been idle for the time specified in <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint.MaxIdleTime%2A&gt;</ph>, it is eligible for garbage collection.","pos":[0,171],"source":"After a <xref:System.Net.ServicePoint> object has been idle for the time specified in <xref:System.Net.ServicePoint.MaxIdleTime%2A>, it is eligible for garbage collection."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> object is idle when the list of connections associated with the <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint&gt;</ph> object is empty.","pos":[172,316],"source":" A <xref:System.Net.ServicePoint> object is idle when the list of connections associated with the <xref:System.Net.ServicePoint> object is empty."}]}]}],"pos":[39381,40113],"yaml":true,"extradata":"MT"},{"content":"The maximum idle time, in milliseconds, of a <xref href=\"System.Net.ServicePoint\"></xref> object. The default value is 100,000 milliseconds (100 seconds).","nodes":[{"pos":[0,154],"content":"The maximum idle time, in milliseconds, of a <xref href=\"System.Net.ServicePoint\"></xref> object. The default value is 100,000 milliseconds (100 seconds).","nodes":[{"content":"The maximum idle time, in milliseconds, of a <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object.","pos":[0,97],"source":"The maximum idle time, in milliseconds, of a <xref href=\"System.Net.ServicePoint\"></xref> object."},{"content":"The default value is 100,000 milliseconds (100 seconds).","pos":[98,154]}]}],"pos":[40726,40881],"yaml":true},{"content":"<xref href=\"System.Net.ServicePointManager.MaxServicePointIdleTime\"></xref> is less than <xref href=\"System.Threading.Timeout.Infinite\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,203],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePointManager.MaxServicePointIdleTime\"&gt;&lt;/xref&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.Net.ServicePointManager.MaxServicePointIdleTime\"></xref> is less than <xref href=\"System.Threading.Timeout.Infinite\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[41077,41281],"yaml":true},{"content":"Gets or sets the maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects to maintain at any time.","nodes":[{"pos":[0,112],"content":"Gets or sets the maximum number of <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> objects to maintain at any time.","source":"Gets or sets the maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects to maintain at any time."}],"pos":[42398,42511],"yaml":true},{"content":"When you reduce the <xref:System.Net.ServicePointManager.MaxServicePoints%2A> property below the number of <xref:System.Net.ServicePoint> objects currently in existence, the <xref:System.Net.ServicePointManager> deletes the <xref:System.Net.ServicePoint> objects with the longest idle times. If the number of <xref:System.Net.ServicePoint> objects with active connections is greater than the value of <xref:System.Net.ServicePointManager.MaxServicePoints%2A>, the <xref:System.Net.ServicePointManager> object deletes the <xref:System.Net.ServicePoint> objects as they become idle.","nodes":[{"pos":[0,580],"content":"When you reduce the <xref:System.Net.ServicePointManager.MaxServicePoints%2A> property below the number of <xref:System.Net.ServicePoint> objects currently in existence, the <xref:System.Net.ServicePointManager> deletes the <xref:System.Net.ServicePoint> objects with the longest idle times. If the number of <xref:System.Net.ServicePoint> objects with active connections is greater than the value of <xref:System.Net.ServicePointManager.MaxServicePoints%2A>, the <xref:System.Net.ServicePointManager> object deletes the <xref:System.Net.ServicePoint> objects as they become idle.","nodes":[{"content":"When you reduce the <xref:System.Net.ServicePointManager.MaxServicePoints%2A> property below the number of <xref:System.Net.ServicePoint> objects currently in existence, the <xref:System.Net.ServicePointManager> deletes the <xref:System.Net.ServicePoint> objects with the longest idle times. If the number of <xref:System.Net.ServicePoint> objects with active connections is greater than the value of <xref:System.Net.ServicePointManager.MaxServicePoints%2A>, the <xref:System.Net.ServicePointManager> object deletes the <xref:System.Net.ServicePoint> objects as they become idle.","pos":[0,580],"nodes":[{"content":"When you reduce the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.MaxServicePoints%2A&gt;</ph> property below the number of <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects currently in existence, the <ph id=\"ph3\">&lt;xref:System.Net.ServicePointManager&gt;</ph> deletes the <ph id=\"ph4\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects with the longest idle times.","pos":[0,291],"source":"When you reduce the <xref:System.Net.ServicePointManager.MaxServicePoints%2A> property below the number of <xref:System.Net.ServicePoint> objects currently in existence, the <xref:System.Net.ServicePointManager> deletes the <xref:System.Net.ServicePoint> objects with the longest idle times."},{"content":"If the number of <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects with active connections is greater than the value of <ph id=\"ph2\">&lt;xref:System.Net.ServicePointManager.MaxServicePoints%2A&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Net.ServicePointManager&gt;</ph> object deletes the <ph id=\"ph4\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects as they become idle.","pos":[292,580],"source":" If the number of <xref:System.Net.ServicePoint> objects with active connections is greater than the value of <xref:System.Net.ServicePointManager.MaxServicePoints%2A>, the <xref:System.Net.ServicePointManager> object deletes the <xref:System.Net.ServicePoint> objects as they become idle."}]}]}],"pos":[42522,43103],"yaml":true,"extradata":"MT"},{"content":"The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects to maintain. The default value is 0, which means there is no limit to the number of <xref href=\"System.Net.ServicePoint\"></xref> objects.","nodes":[{"pos":[0,212],"content":"The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects to maintain. The default value is 0, which means there is no limit to the number of <xref href=\"System.Net.ServicePoint\"></xref> objects.","nodes":[{"content":"The maximum number of <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> objects to maintain.","pos":[0,87],"source":"The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects to maintain."},{"content":"The default value is 0, which means there is no limit to the number of <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> objects.","pos":[88,212],"source":" The default value is 0, which means there is no limit to the number of <xref href=\"System.Net.ServicePoint\"></xref> objects."}]}],"pos":[43709,43922],"yaml":true},{"content":"<xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePointManager.MaxServicePoints\"&gt;&lt;/xref&gt;</ph> is less than 0 or greater than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[44111,44255],"yaml":true},{"content":"Setting this property value to `true` causes all outbound TCP connections from HttpWebRequest to use the native socket option SO_REUSE_UNICASTPORT on the socket. This causes the underlying outgoing ports to be shared. This is useful for scenarios where a large number of outgoing connections are made in a short time, and the app risks running out of ports.","nodes":[{"pos":[0,357],"content":"Setting this property value to `true` causes all outbound TCP connections from HttpWebRequest to use the native socket option SO_REUSE_UNICASTPORT on the socket. This causes the underlying outgoing ports to be shared. This is useful for scenarios where a large number of outgoing connections are made in a short time, and the app risks running out of ports.","nodes":[{"content":"Setting this property value to <ph id=\"ph1\">`true`</ph> causes all outbound TCP connections from HttpWebRequest to use the native socket option SO_REUSE_UNICASTPORT on the socket.","pos":[0,161],"source":"Setting this property value to `true` causes all outbound TCP connections from HttpWebRequest to use the native socket option SO_REUSE_UNICASTPORT on the socket."},{"content":"This causes the underlying outgoing ports to be shared.","pos":[162,217]},{"content":"This is useful for scenarios where a large number of outgoing connections are made in a short time, and the app risks running out of ports.","pos":[218,357]}]}],"pos":[45330,45688],"yaml":true},{"content":"The default value is `false`.","nodes":[{"pos":[0,29],"content":"The default value is <ph id=\"ph1\">`false`</ph>.","source":"The default value is `false`."}],"pos":[45699,45729],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Boolean\"></xref>.","nodes":[{"pos":[0,44],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Boolean\"></xref>."}],"pos":[45887,45932],"yaml":true},{"content":"Gets or sets the security protocol used by the <xref href=\"System.Net.ServicePoint\"></xref> objects managed by the <xref href=\"System.Net.ServicePointManager\"></xref> object.","nodes":[{"pos":[0,174],"content":"Gets or sets the security protocol used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> objects managed by the <ph id=\"ph2\">&lt;xref href=\"System.Net.ServicePointManager\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets or sets the security protocol used by the <xref href=\"System.Net.ServicePoint\"></xref> objects managed by the <xref href=\"System.Net.ServicePointManager\"></xref> object."}],"pos":[47026,47201],"yaml":true},{"content":"This property selects the version of the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocol to use for new connections; existing connections aren't changed.  \n  \nStarting with the .NET Framework 4.7, the default value of this property is <xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=fullName>. This allows .NET Framework networking APIs based on <xref:System.Net.Security.SslStream> (such as FTP, HTTP, and SMTP) to inherit the default security protocols from the operating system or from any custom configurations performed by a system administrator. For information about which SSL/TLS protocols are enabled by default on each version of the Windows operating system, see  [Protocols in TLS/SSL (Schannel SSP)](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx).\n \nFor versions of the .NET Framework through the .NET Framework 4.6.2, no default value is listed for this property. The security landscape changes constantly, and default protocols and protection levels are changed over time in order to avoid known weaknesses. Defaults vary depending on individual machine configuration, installed software, and applied patches.  \n  \n Your code should never implicitly depend on using a particular protection level, or on the assumption that a given security level is used by default. If your app depends on the use of a particular security level, you must explicitly specify that level and then check to be sure that it is actually in use on the established connection. Further, your code should be designed to be robust in the face of changes to which protocols are supported, as such changes are often made with little advance notice in order to mitigate emerging threats.  \n  \n The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.  \n  \n Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.","nodes":[{"pos":[0,175],"content":"This property selects the version of the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocol to use for new connections; existing connections aren't changed.","nodes":[{"content":"This property selects the version of the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocol to use for new connections; existing connections aren't changed.","pos":[0,175]}]},{"pos":[181,821],"content":"Starting with the .NET Framework 4.7, the default value of this property is <xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=fullName>. This allows .NET Framework networking APIs based on <xref:System.Net.Security.SslStream> (such as FTP, HTTP, and SMTP) to inherit the default security protocols from the operating system or from any custom configurations performed by a system administrator. For information about which SSL/TLS protocols are enabled by default on each version of the Windows operating system, see  [Protocols in TLS/SSL (Schannel SSP)](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx).","nodes":[{"content":"Starting with the .NET Framework 4.7, the default value of this property is <ph id=\"ph1\">&lt;xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"Starting with the .NET Framework 4.7, the default value of this property is <xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=fullName>."},{"content":"This allows .NET Framework networking APIs based on <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> (such as FTP, HTTP, and SMTP) to inherit the default security protocols from the operating system or from any custom configurations performed by a system administrator.","pos":[155,412],"source":" This allows .NET Framework networking APIs based on <xref:System.Net.Security.SslStream> (such as FTP, HTTP, and SMTP) to inherit the default security protocols from the operating system or from any custom configurations performed by a system administrator."},{"content":"For information about which SSL/TLS protocols are enabled by default on each version of the Windows operating system, see  <bpt id=\"p1\">[</bpt>Protocols in TLS/SSL (Schannel SSP)<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx)</ept>.","pos":[413,640],"source":" For information about which SSL/TLS protocols are enabled by default on each version of the Windows operating system, see  [Protocols in TLS/SSL (Schannel SSP)](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx)."}]},{"pos":[824,1185],"content":"For versions of the .NET Framework through the .NET Framework 4.6.2, no default value is listed for this property. The security landscape changes constantly, and default protocols and protection levels are changed over time in order to avoid known weaknesses. Defaults vary depending on individual machine configuration, installed software, and applied patches.","nodes":[{"content":"For versions of the .NET Framework through the .NET Framework 4.6.2, no default value is listed for this property. The security landscape changes constantly, and default protocols and protection levels are changed over time in order to avoid known weaknesses. Defaults vary depending on individual machine configuration, installed software, and applied patches.","pos":[0,361],"nodes":[{"content":"For versions of the .NET Framework through the .NET Framework 4.6.2, no default value is listed for this property.","pos":[0,114]},{"content":"The security landscape changes constantly, and default protocols and protection levels are changed over time in order to avoid known weaknesses.","pos":[115,259]},{"content":"Defaults vary depending on individual machine configuration, installed software, and applied patches.","pos":[260,361]}]}]},{"pos":[1192,1732],"content":"Your code should never implicitly depend on using a particular protection level, or on the assumption that a given security level is used by default. If your app depends on the use of a particular security level, you must explicitly specify that level and then check to be sure that it is actually in use on the established connection. Further, your code should be designed to be robust in the face of changes to which protocols are supported, as such changes are often made with little advance notice in order to mitigate emerging threats.","nodes":[{"content":"Your code should never implicitly depend on using a particular protection level, or on the assumption that a given security level is used by default. If your app depends on the use of a particular security level, you must explicitly specify that level and then check to be sure that it is actually in use on the established connection. Further, your code should be designed to be robust in the face of changes to which protocols are supported, as such changes are often made with little advance notice in order to mitigate emerging threats.","pos":[0,540],"nodes":[{"content":"Your code should never implicitly depend on using a particular protection level, or on the assumption that a given security level is used by default.","pos":[0,149]},{"content":"If your app depends on the use of a particular security level, you must explicitly specify that level and then check to be sure that it is actually in use on the established connection.","pos":[150,335]},{"content":"Further, your code should be designed to be robust in the face of changes to which protocols are supported, as such changes are often made with little advance notice in order to mitigate emerging threats.","pos":[336,540]}]}]},{"pos":[1739,2050],"content":"The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.","nodes":[{"content":"The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.","pos":[0,311],"nodes":[{"content":"The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.","pos":[0,122]},{"content":"Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.","pos":[123,311]}]}]},{"pos":[2057,2328],"content":"Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.","nodes":[{"content":"Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.","pos":[0,143]},{"content":"<bpt id=\"p1\">[</bpt>This article<ept id=\"p1\">](https://support.microsoft.com/kb/3069494)</ept> explains how to modify your code so that the new behavior is disabled.","pos":[144,271],"source":"[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled."}]}],"pos":[47212,49553],"yaml":true,"extradata":"MT"},{"content":"One of the values defined in the <xref href=\"System.Net.SecurityProtocolType\"></xref> enumeration.","nodes":[{"pos":[0,98],"content":"One of the values defined in the <ph id=\"ph1\">&lt;xref href=\"System.Net.SecurityProtocolType\"&gt;&lt;/xref&gt;</ph> enumeration.","source":"One of the values defined in the <xref href=\"System.Net.SecurityProtocolType\"></xref> enumeration."}],"pos":[49728,49827],"yaml":true},{"content":"The value specified to set the property is not a valid <xref href=\"System.Net.SecurityProtocolType\"></xref> enumeration value.","nodes":[{"pos":[0,126],"content":"The value specified to set the property is not a valid <ph id=\"ph1\">&lt;xref href=\"System.Net.SecurityProtocolType\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"The value specified to set the property is not a valid <xref href=\"System.Net.SecurityProtocolType\"></xref> enumeration value."}],"pos":[50004,50131],"yaml":true},{"content":"Gets or sets the callback to validate a server certificate.","nodes":[{"pos":[0,59],"content":"Gets or sets the callback to validate a server certificate.","nodes":[{"content":"Gets or sets the callback to validate a server certificate.","pos":[0,59]}]}],"pos":[51362,51422],"yaml":true},{"content":"An application can set the <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> property to a method to use for custom validation by the client of the server certificate. When doing custom validation, the `sender` parameter passed to the <xref:System.Net.Security.RemoteCertificateValidationCallback> can be a host string name or an object derived from <xref:System.Net.WebRequest> (<xref:System.Net.HttpWebRequest>, for example) depending on the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property.  \n  \n When custom validation is not used, the certificate name is compared with host name used to create the request. For example, if <xref:System.Net.WebRequest.Create%28System.String%29> was passed a parameter of \"https://www.contoso.com/default.hmtl\", the default behavior is for the client to check the certificate against www.contoso.com.","nodes":[{"pos":[0,539],"content":"An application can set the <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> property to a method to use for custom validation by the client of the server certificate. When doing custom validation, the `sender` parameter passed to the <xref:System.Net.Security.RemoteCertificateValidationCallback> can be a host string name or an object derived from <xref:System.Net.WebRequest> (<xref:System.Net.HttpWebRequest>, for example) depending on the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property.","nodes":[{"content":"An application can set the <ph id=\"ph1\">&lt;xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A&gt;</ph> property to a method to use for custom validation by the client of the server certificate.","pos":[0,194],"source":"An application can set the <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> property to a method to use for custom validation by the client of the server certificate."},{"content":"When doing custom validation, the <ph id=\"ph1\">`sender`</ph> parameter passed to the <ph id=\"ph2\">&lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt;</ph> can be a host string name or an object derived from <ph id=\"ph3\">&lt;xref:System.Net.WebRequest&gt;</ph> (<ph id=\"ph4\">&lt;xref:System.Net.HttpWebRequest&gt;</ph>, for example) depending on the <ph id=\"ph5\">&lt;xref:System.Net.ServicePointManager.CertificatePolicy%2A&gt;</ph> property.","pos":[195,539],"source":" When doing custom validation, the `sender` parameter passed to the <xref:System.Net.Security.RemoteCertificateValidationCallback> can be a host string name or an object derived from <xref:System.Net.WebRequest> (<xref:System.Net.HttpWebRequest>, for example) depending on the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property."}]},{"pos":[546,883],"content":"When custom validation is not used, the certificate name is compared with host name used to create the request. For example, if <xref:System.Net.WebRequest.Create%28System.String%29> was passed a parameter of \"https://www.contoso.com/default.hmtl\", the default behavior is for the client to check the certificate against www.contoso.com.","nodes":[{"content":"When custom validation is not used, the certificate name is compared with host name used to create the request. For example, if <xref:System.Net.WebRequest.Create%28System.String%29> was passed a parameter of \"https://www.contoso.com/default.hmtl\", the default behavior is for the client to check the certificate against www.contoso.com.","pos":[0,337],"nodes":[{"content":"When custom validation is not used, the certificate name is compared with host name used to create the request.","pos":[0,111]},{"content":"For example, if <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.Create%28System.String%29&gt;</ph> was passed a parameter of \"https://www.contoso.com/default.hmtl\", the default behavior is for the client to check the certificate against www.contoso.com.","pos":[112,337],"source":" For example, if <xref:System.Net.WebRequest.Create%28System.String%29> was passed a parameter of \"https://www.contoso.com/default.hmtl\", the default behavior is for the client to check the certificate against www.contoso.com."}]}]}],"pos":[51433,52323],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref>. The default value is `null`.","nodes":[{"pos":[0,108],"content":"A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref>. The default value is `null`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"&gt;&lt;/xref&gt;</ph>.","pos":[0,79],"source":"A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref>."},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[80,108],"source":" The default value is `null`."}]}],"pos":[52565,52674],"yaml":true},{"content":"Enables or disables the keep-alive option on a TCP connection.","nodes":[{"pos":[0,62],"content":"Enables or disables the keep-alive option on a TCP connection.","nodes":[{"content":"Enables or disables the keep-alive option on a TCP connection.","pos":[0,62]}]}],"pos":[55141,55204],"yaml":true},{"content":"An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection. The default is that the use of keep-alive packets on a TCP connection is disabled.  \n  \n The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second. The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent. The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received. The number of keep-alive probes cannot be changed and is set to 10.  \n  \n If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>.","nodes":[{"pos":[0,190],"content":"An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection. The default is that the use of keep-alive packets on a TCP connection is disabled.","nodes":[{"content":"An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection. The default is that the use of keep-alive packets on a TCP connection is disabled.","pos":[0,190],"nodes":[{"content":"An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection.","pos":[0,107]},{"content":"The default is that the use of keep-alive packets on a TCP connection is disabled.","pos":[108,190]}]}]},{"pos":[197,690],"content":"The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second. The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent. The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received. The number of keep-alive probes cannot be changed and is set to 10.","nodes":[{"content":"The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second.","pos":[0,133]},{"content":"The <ph id=\"ph1\">`keepAliveTime`</ph> parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.","pos":[134,263],"source":" The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent."},{"content":"The <ph id=\"ph1\">`keepAliveInterval`</ph> parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.","pos":[264,425],"source":" The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received."},{"content":"The number of keep-alive probes cannot be changed and is set to 10.","pos":[426,493]}]},{"pos":[697,1038],"content":"If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>.","nodes":[{"content":"If a TCP connection is dropped as the result of keep-alives, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> of <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketError.NetworkReset&gt;</ph> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> of <ph id=\"ph4\">&lt;xref:System.Net.Sockets.SocketError.NotConnected&gt;</ph>.","pos":[0,341],"source":"If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>."}]}],"pos":[55215,56260],"yaml":true,"extradata":"MT"},{"content":"If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <code>keepAliveTime</code> and <code>keepAliveInterval</code> values.  \n  \n If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.  \n  \n The default value is false.","nodes":[{"pos":[0,172],"content":"If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keepAliveTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">keepAliveInterval</ph><ept id=\"p2\">&lt;/code&gt;</ept> values.","source":"If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <code>keepAliveTime</code> and <code>keepAliveInterval</code> values."},{"pos":[179,280],"content":"If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.","nodes":[{"content":"If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.","pos":[0,101]}]},{"pos":[287,314],"content":"The default value is false.","nodes":[{"content":"The default value is false.","pos":[0,27]}]}],"pos":[56456,56777],"yaml":true},{"content":"Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.  \n  \n The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref href=\"System.ArgumentOutOfRangeException\"></xref> is thrown.","nodes":[{"pos":[0,99],"content":"Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.","nodes":[{"content":"Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.","pos":[0,99]}]},{"pos":[106,261],"content":"The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref href=\"System.ArgumentOutOfRangeException\"></xref> is thrown.","nodes":[{"content":"The value must be greater than 0.","pos":[0,33]},{"content":"If a value of less than or equal to zero is passed an <ph id=\"ph1\">&lt;xref href=\"System.ArgumentOutOfRangeException\"&gt;&lt;/xref&gt;</ph> is thrown.","pos":[35,155],"source":"  If a value of less than or equal to zero is passed an <xref href=\"System.ArgumentOutOfRangeException\"></xref> is thrown."}]}],"pos":[56845,57113],"yaml":true},{"content":"Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.  \n  \n The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref href=\"System.ArgumentOutOfRangeException\"></xref> is thrown.","nodes":[{"pos":[0,127],"content":"Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.","nodes":[{"content":"Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.","pos":[0,127]}]},{"pos":[134,289],"content":"The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref href=\"System.ArgumentOutOfRangeException\"></xref> is thrown.","nodes":[{"content":"The value must be greater than 0.","pos":[0,33]},{"content":"If a value of less than or equal to zero is passed an <ph id=\"ph1\">&lt;xref href=\"System.ArgumentOutOfRangeException\"&gt;&lt;/xref&gt;</ph> is thrown.","pos":[35,155],"source":"  If a value of less than or equal to zero is passed an <xref href=\"System.ArgumentOutOfRangeException\"></xref> is thrown."}]}],"pos":[57185,57481],"yaml":true},{"content":"The value specified for <code>keepAliveTime</code> or <code>keepAliveInterval</code> parameter is less than or equal to 0.","nodes":[{"pos":[0,122],"content":"The value specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">keepAliveTime</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">keepAliveInterval</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is less than or equal to 0.","source":"The value specified for <code>keepAliveTime</code> or <code>keepAliveInterval</code> parameter is less than or equal to 0."}],"pos":[57669,57792],"yaml":true},{"content":"Determines whether the Nagle algorithm is used by the service points managed by this <xref href=\"System.Net.ServicePointManager\"></xref> object.","nodes":[{"pos":[0,144],"content":"Determines whether the Nagle algorithm is used by the service points managed by this <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePointManager\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the Nagle algorithm is used by the service points managed by this <xref href=\"System.Net.ServicePointManager\"></xref> object."}],"pos":[58915,59060],"yaml":true},{"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.  \n  \n Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new service points created after the change are affected.  \n  \n The Nagle algorithm is fully described in IETF RFC 896.","nodes":[{"pos":[0,284],"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","nodes":[{"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","pos":[0,284],"nodes":[{"content":"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet.","pos":[0,130]},{"content":"This process is also referred to as \"nagling\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.","pos":[131,284]}]}]},{"pos":[291,454],"content":"Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new service points created after the change are affected.","nodes":[{"content":"Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new service points created after the change are affected.","pos":[0,163],"nodes":[{"content":"Changing the value of this property does not affect existing <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> objects.","pos":[0,100],"source":"Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects."},{"content":"Only new service points created after the change are affected.","pos":[101,163]}]}]},{"pos":[461,516],"content":"The Nagle algorithm is fully described in IETF RFC 896.","nodes":[{"content":"The Nagle algorithm is fully described in IETF RFC 896.","pos":[0,55]}]}],"pos":[59071,59596],"yaml":true,"extradata":"MT"},{"content":"`true` to use the Nagle algorithm; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,83],"content":"`true` to use the Nagle algorithm; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to use the Nagle algorithm; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,54],"source":"`true` to use the Nagle algorithm; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[55,83],"source":" The default value is `true`."}]}],"pos":[60212,60298],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.ServicePointManager\n  commentId: T:System.Net.ServicePointManager\n  id: ServicePointManager\n  children:\n  - System.Net.ServicePointManager.CertificatePolicy\n  - System.Net.ServicePointManager.CheckCertificateRevocationList\n  - System.Net.ServicePointManager.ClientCipherSuitesCallback\n  - System.Net.ServicePointManager.DefaultConnectionLimit\n  - System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit\n  - System.Net.ServicePointManager.DefaultPersistentConnectionLimit\n  - System.Net.ServicePointManager.DnsRefreshTimeout\n  - System.Net.ServicePointManager.EnableDnsRoundRobin\n  - System.Net.ServicePointManager.EncryptionPolicy\n  - System.Net.ServicePointManager.Expect100Continue\n  - System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)\n  - System.Net.ServicePointManager.FindServicePoint(System.Uri)\n  - System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)\n  - System.Net.ServicePointManager.MaxServicePointIdleTime\n  - System.Net.ServicePointManager.MaxServicePoints\n  - System.Net.ServicePointManager.ReusePort\n  - System.Net.ServicePointManager.SecurityProtocol\n  - System.Net.ServicePointManager.ServerCertificateValidationCallback\n  - System.Net.ServicePointManager.ServerCipherSuitesCallback\n  - System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)\n  - System.Net.ServicePointManager.UseNagleAlgorithm\n  langs:\n  - csharp\n  name: ServicePointManager\n  nameWithType: ServicePointManager\n  fullName: System.Net.ServicePointManager\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Manages the collection of <xref href=\"System.Net.ServicePoint\"></xref> objects.\n  remarks: \"<xref:System.Net.ServicePointManager> is a static class used to create, maintain, and delete instances of the <xref:System.Net.ServicePoint> class.  \\n  \\n When an application requests a connection to an Internet resource Uniform Resource Identifier (URI) through the <xref:System.Net.ServicePointManager> object, the <xref:System.Net.ServicePointManager> returns a <xref:System.Net.ServicePoint> object that contains connection information for the host and scheme identified by the URI. If there is an existing <xref:System.Net.ServicePoint> object for that host and scheme, the <xref:System.Net.ServicePointManager> object returns the existing <xref:System.Net.ServicePoint> object; otherwise, the <xref:System.Net.ServicePointManager> object creates a new <xref:System.Net.ServicePoint> object.  \\n  \\n The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.  \\n  \\n Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.\"\n  example:\n  - \"The following code example creates a <xref:System.Net.ServicePoint> object for connections to the URI www.contoso.com.  \\n  \\n [!code-cpp[Classic ServicePoint Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePoint Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ServicePoint Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePoint Example/CS/source.cs#1)]\\n [!code-vb[Classic ServicePoint Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePoint Example/VB/source.vb#1)]\"\n  syntax:\n    content: public class ServicePointManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.CertificatePolicy\n  commentId: P:System.Net.ServicePointManager.CertificatePolicy\n  id: CertificatePolicy\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: CertificatePolicy\n  nameWithType: ServicePointManager.CertificatePolicy\n  fullName: ServicePointManager.CertificatePolicy\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  summary: Gets or sets policy for server certificates.\n  remarks: \"When the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property is set to an <xref:System.Net.ICertificatePolicy> interface object, the <xref:System.Net.ServicePointManager> object uses the certificate policy defined in that instance instead of the default certificate policy.  \\n  \\n The default certificate policy allows valid certificates and valid certificates that have expired.\"\n  example:\n  - \"The following code example shows how to catch a certificate policy exception for a custom certificate policy. It assumes that the certificate policy object has been defined, that the Uniform Resource Identifier (URI) for the Web resource is contained in the variable `myUri`, and that there is a method named `ProcessResponse` that performs the work of the application.  \\n  \\n [!code-cpp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/CS/source.cs#1)]\\n [!code-vb[Classic ServicePointManager.CertificatePolicy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic ServicePointManager.CertificatePolicy Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use ServerCertificateValidationCallback instead\", false)]\n\n      public static System.Net.ICertificatePolicy CertificatePolicy { get; set; }\n    return:\n      type: System.Net.ICertificatePolicy\n      description: An object that implements the <xref href=\"System.Net.ICertificatePolicy\"></xref> interface.\n  overload: System.Net.ServicePointManager.CertificatePolicy*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.CheckCertificateRevocationList\n  commentId: P:System.Net.ServicePointManager.CheckCertificateRevocationList\n  id: CheckCertificateRevocationList\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: CheckCertificateRevocationList\n  nameWithType: ServicePointManager.CheckCertificateRevocationList\n  fullName: ServicePointManager.CheckCertificateRevocationList\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets or sets a <xref href=\"System.Boolean\"></xref> value that indicates whether the certificate is checked against the certificate authority revocation list.\n  remarks: When the <xref:System.Net.ServicePointManager.CheckCertificateRevocationList%2A> is `true`, the certificate is checked against the certificate authority revocation list, as part of the certificate validation process. Its default value is `false`.\n  example:\n  - \"The following code example sets this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]\"\n  syntax:\n    content: >-\n      [System.MonoTODO(\"CRL checks not implemented\")]\n\n      public static bool CheckCertificateRevocationList { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the certificate revocation list is checked; otherwise, `false`.'\n  overload: System.Net.ServicePointManager.CheckCertificateRevocationList*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.ClientCipherSuitesCallback\n  commentId: P:System.Net.ServicePointManager.ClientCipherSuitesCallback\n  id: ClientCipherSuitesCallback\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: ClientCipherSuitesCallback\n  nameWithType: ServicePointManager.ClientCipherSuitesCallback\n  fullName: ServicePointManager.ClientCipherSuitesCallback\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API is no longer supported.\", true)]\n\n      public static System.Net.CipherSuitesCallback ClientCipherSuitesCallback { get; set; }\n    return:\n      type: System.Net.CipherSuitesCallback\n      description: ''\n  overload: System.Net.ServicePointManager.ClientCipherSuitesCallback*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.DefaultConnectionLimit\n  commentId: P:System.Net.ServicePointManager.DefaultConnectionLimit\n  id: DefaultConnectionLimit\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: DefaultConnectionLimit\n  nameWithType: ServicePointManager.DefaultConnectionLimit\n  fullName: ServicePointManager.DefaultConnectionLimit\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets or sets the maximum number of concurrent connections allowed by a <xref href=\"System.Net.ServicePoint\"></xref> object.\n  remarks: \"The <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property sets the default maximum number of concurrent connections that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property when creating <xref:System.Net.ServicePoint> objects.  \\n  \\n Changing the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property has no effect on existing <xref:System.Net.ServicePoint> objects; it affects only <xref:System.Net.ServicePoint> objects that are initialized after the change. If the value of this property has not been set either directly or through configuration, the value defaults to the constant <xref:System.Net.ServicePointManager.DefaultPersistentConnectionLimit>.  \\n  \\n> [!NOTE]\\n>  Any changes to the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property affect both HTTP 1.0 and HTTP 1.1 connections. It is not possible to separately alter the connection limit for HTTP 1.0 and HTTP 1.1 protocols. When used in the server environment (ASP.NET) <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> defaults to higher number of connections, which is 10.\"\n  example:\n  - \"The following code example sets this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]\"\n  syntax:\n    content: public static int DefaultConnectionLimit { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of concurrent connections allowed by a <xref href=\"System.Net.ServicePoint\"></xref> object. The default value is 2. When an app is running as an ASP.NET host, it is not possible to alter the value of this property through the config file if the autoConfig property is set to `true`. However, you can change the value programmatically when the autoConfig property is `true`. Set your preferred value once, when the AppDomain loads.\n  overload: System.Net.ServicePointManager.DefaultConnectionLimit*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> is less than or equal to 0.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit\n  commentId: F:System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit\n  id: DefaultNonPersistentConnectionLimit\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: DefaultNonPersistentConnectionLimit\n  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit\n  fullName: ServicePointManager.DefaultNonPersistentConnectionLimit\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: The default number of non-persistent connections (4) allowed on a <xref href=\"System.Net.ServicePoint\"></xref> object connected to an HTTP/1.0 or later server. This field is constant but is no longer used in the .NET Framework 2.0.\n  syntax:\n    content: public const int DefaultNonPersistentConnectionLimit = 4;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit\n  commentId: F:System.Net.ServicePointManager.DefaultPersistentConnectionLimit\n  id: DefaultPersistentConnectionLimit\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: DefaultPersistentConnectionLimit\n  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit\n  fullName: ServicePointManager.DefaultPersistentConnectionLimit\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: The default number of persistent connections (2) allowed on a <xref href=\"System.Net.ServicePoint\"></xref> object connected to an HTTP/1.1 or later server. This field is constant and is used to initialize the <xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> property if the value of the <xref href=\"System.Net.ServicePointManager.DefaultConnectionLimit\"></xref> property has not been set either directly or through configuration.\n  remarks: ''\n  example:\n  - \"The following code example sets the <xref:System.Net.ServicePointManager.DefaultConnectionLimit%2A> property using this field.  \\n  \\n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]\"\n  syntax:\n    content: public const int DefaultPersistentConnectionLimit = 2;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.DnsRefreshTimeout\n  commentId: P:System.Net.ServicePointManager.DnsRefreshTimeout\n  id: DnsRefreshTimeout\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: DnsRefreshTimeout\n  nameWithType: ServicePointManager.DnsRefreshTimeout\n  fullName: ServicePointManager.DnsRefreshTimeout\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets or sets a value that indicates how long a Domain Name Service (DNS) resolution is considered valid.\n  remarks: ''\n  example:\n  - \"The following code example sets this property.  \\n  \\n [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]\\n [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]\\n [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]\"\n  syntax:\n    content: public static int DnsRefreshTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: The time-out value, in milliseconds. A value of -1 indicates an infinite time-out period. The default value is 120,000 milliseconds (two minutes).\n  overload: System.Net.ServicePointManager.DnsRefreshTimeout*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.EnableDnsRoundRobin\n  commentId: P:System.Net.ServicePointManager.EnableDnsRoundRobin\n  id: EnableDnsRoundRobin\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: EnableDnsRoundRobin\n  nameWithType: ServicePointManager.EnableDnsRoundRobin\n  fullName: ServicePointManager.EnableDnsRoundRobin\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets or sets a value that indicates whether a Domain Name Service (DNS) resolution rotates among the applicable Internet Protocol (IP) addresses.\n  remarks: When more than one IP address is associated with a host name, a DNS resolution normally returns only the first IP address. If you set this property to `true`, then subsequent DNS resolutions will cycle through all available IP addresses for a particular host. This option is useful when a service uses DNS as a load balancing mechanism between servers or server clusters.\n  example:\n  - \"The following code example sets this property.  \\n  \\n [!code-cpp[System.Net.ServicePointWhidbey#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/cpp/servicepoint.cpp#1)]\\n [!code-csharp[System.Net.ServicePointWhidbey#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/CS/servicepoint.cs#1)]\\n [!code-vb[System.Net.ServicePointWhidbey#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePointWhidbey/VB/servicepoint.vb#1)]\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public static bool EnableDnsRoundRobin { get; set; }\n    return:\n      type: System.Boolean\n      description: '`false` if a DNS resolution always returns the first IP address for a particular host; otherwise `true`. The default is `false`.'\n  overload: System.Net.ServicePointManager.EnableDnsRoundRobin*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.EncryptionPolicy\n  commentId: P:System.Net.ServicePointManager.EncryptionPolicy\n  id: EncryptionPolicy\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: EncryptionPolicy\n  nameWithType: ServicePointManager.EncryptionPolicy\n  fullName: ServicePointManager.EncryptionPolicy\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets the <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> for this <xref href=\"System.Net.ServicePointManager\"></xref> instance.\n  remarks: \"If a value is not specified in the configuration file, the <xref:System.Net.ServicePointManager.EncryptionPolicy%2A> property defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>. This is applied to an SSL/TLS session on this <xref:System.Net.ServicePointManager> instance.  \\n  \\n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.\"\n  syntax:\n    content: >-\n      [System.MonoTODO(\"Always returns EncryptionPolicy.RequireEncryption.\")]\n\n      public static System.Net.Security.EncryptionPolicy EncryptionPolicy { get; }\n    return:\n      type: System.Net.Security.EncryptionPolicy\n      description: The encryption policy to use for this <xref href=\"System.Net.ServicePointManager\"></xref> instance.\n  overload: System.Net.ServicePointManager.EncryptionPolicy*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.Expect100Continue\n  commentId: P:System.Net.ServicePointManager.Expect100Continue\n  id: Expect100Continue\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: Expect100Continue\n  nameWithType: ServicePointManager.Expect100Continue\n  fullName: ServicePointManager.Expect100Continue\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets or sets a <xref href=\"System.Boolean\"></xref> value that determines whether 100-Continue behavior is used.\n  remarks: \"When this property is set to `true`, 100-Continue behavior is used. Client requests that use the `PUT` and `POST` methods will add an Expect header to the request if the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `true` and <xref:System.Net.HttpWebRequest.ContentLength%2A> property is greater than zero or the <xref:System.Net.HttpWebRequest.SendChunked%2A> property is true. The client will expect to receive a 100-Continue response from the server to indicate that the client should send the data to be posted. This mechanism allows clients to avoid sending large amounts of data over the network when the server, based on the request headers, intends to reject the request.  \\n  \\n For example, assume the <xref:System.Net.ServicePointManager.Expect100Continue%2A> property is `false`. When the request is sent to the server, it includes the data. If, after reading the request headers, the server requires authentication and must send a 401 response, the client must resend the data with proper authentication headers.  \\n  \\n If this property is `true`, the request headers are sent to the server. If the server has not rejected the request, it sends a 100-Continue response signaling that the data can be transmitted. If, as in the preceding example, the server requires authentication, it sends the 401 response and the client has not unnecessarily transmitted the data.  \\n  \\n Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new <xref:System.Net.ServicePoint> objects created after the change are affected.  \\n  \\n The 100-Continue behavior is not used for HTTP 1.0 requests even if this property is set to `true`.  \\n  \\n The Expect 100-Continue behavior is fully described in IETF RFC 2616 Section 10.1.1.\"\n  example:\n  - \"The following code example sets this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]\"\n  syntax:\n    content: public static bool Expect100Continue { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to enable 100-Continue behavior. The default value is `true`.'\n  overload: System.Net.ServicePointManager.Expect100Continue*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)\n  commentId: M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)\n  id: FindServicePoint(System.Uri,System.Net.IWebProxy)\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: FindServicePoint(Uri, IWebProxy)\n  nameWithType: ServicePointManager.FindServicePoint(Uri, IWebProxy)\n  fullName: ServicePointManager.FindServicePoint(Uri, IWebProxy)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Finds an existing <xref href=\"System.Net.ServicePoint\"></xref> object or creates a new <xref href=\"System.Net.ServicePoint\"></xref> object to manage communications with the specified <xref href=\"System.Uri\"></xref> object.\n  remarks: The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.\n  syntax:\n    content: public static System.Net.ServicePoint FindServicePoint (Uri address, System.Net.IWebProxy proxy);\n    parameters:\n    - id: address\n      type: System.Uri\n      description: A <xref href=\"System.Uri\"></xref> object that contains the address of the Internet resource to contact.\n    - id: proxy\n      type: System.Net.IWebProxy\n      description: The proxy data for this request.\n    return:\n      type: System.Net.ServicePoint\n      description: The <xref href=\"System.Net.ServicePoint\"></xref> object that manages communications for the request.\n  overload: System.Net.ServicePointManager.FindServicePoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects defined in <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> has been reached.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)\n  commentId: M:System.Net.ServicePointManager.FindServicePoint(System.Uri)\n  id: FindServicePoint(System.Uri)\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: FindServicePoint(Uri)\n  nameWithType: ServicePointManager.FindServicePoint(Uri)\n  fullName: ServicePointManager.FindServicePoint(Uri)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Finds an existing <xref href=\"System.Net.ServicePoint\"></xref> object or creates a new <xref href=\"System.Net.ServicePoint\"></xref> object to manage communications with the specified <xref href=\"System.Uri\"></xref> object.\n  remarks: The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.\n  syntax:\n    content: public static System.Net.ServicePoint FindServicePoint (Uri address);\n    parameters:\n    - id: address\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> object of the Internet resource to contact.\n    return:\n      type: System.Net.ServicePoint\n      description: The <xref href=\"System.Net.ServicePoint\"></xref> object that manages communications for the request.\n  overload: System.Net.ServicePointManager.FindServicePoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects defined in <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> has been reached.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)\n  commentId: M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)\n  id: FindServicePoint(System.String,System.Net.IWebProxy)\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: FindServicePoint(String, IWebProxy)\n  nameWithType: ServicePointManager.FindServicePoint(String, IWebProxy)\n  fullName: ServicePointManager.FindServicePoint(String, IWebProxy)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Finds an existing <xref href=\"System.Net.ServicePoint\"></xref> object or creates a new <xref href=\"System.Net.ServicePoint\"></xref> object to manage communications with the specified Uniform Resource Identifier (URI).\n  remarks: The <xref:System.Net.ServicePointManager.FindServicePoint%2A> method returns the <xref:System.Net.ServicePoint> object associated with the specified Internet host name. If no <xref:System.Net.ServicePoint> object exists for that host, the <xref:System.Net.ServicePointManager> object creates one.\n  example:\n  - \"The following code example demonstrates calling this method to access a <xref:System.Net.ServicePoint> object.  \\n  \\n [!code-cpp[System.Net.ServicePoint#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#7)]\\n [!code-csharp[System.Net.ServicePoint#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#7)]\\n [!code-vb[System.Net.ServicePoint#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#7)]\"\n  syntax:\n    content: public static System.Net.ServicePoint FindServicePoint (string uriString, System.Net.IWebProxy proxy);\n    parameters:\n    - id: uriString\n      type: System.String\n      description: The URI of the Internet resource to be contacted.\n    - id: proxy\n      type: System.Net.IWebProxy\n      description: The proxy data for this request.\n    return:\n      type: System.Net.ServicePoint\n      description: The <xref href=\"System.Net.ServicePoint\"></xref> object that manages communications for the request.\n  overload: System.Net.ServicePointManager.FindServicePoint*\n  exceptions:\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: The URI specified in <code>uriString</code> is invalid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects defined in <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> has been reached.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.MaxServicePointIdleTime\n  commentId: P:System.Net.ServicePointManager.MaxServicePointIdleTime\n  id: MaxServicePointIdleTime\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: MaxServicePointIdleTime\n  nameWithType: ServicePointManager.MaxServicePointIdleTime\n  fullName: ServicePointManager.MaxServicePointIdleTime\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets or sets the maximum idle time of a <xref href=\"System.Net.ServicePoint\"></xref> object.\n  remarks: \"The <xref:System.Net.ServicePointManager.MaxServicePointIdleTime%2A> property sets the maximum idle time that the <xref:System.Net.ServicePointManager> object assigns to the <xref:System.Net.ServicePoint.MaxIdleTime%2A> property when creating <xref:System.Net.ServicePoint> objects. Changes to this value affect only <xref:System.Net.ServicePoint> objects that are initialized after the value is changed.  \\n  \\n After a <xref:System.Net.ServicePoint> object has been idle for the time specified in <xref:System.Net.ServicePoint.MaxIdleTime%2A>, it is eligible for garbage collection. A <xref:System.Net.ServicePoint> object is idle when the list of connections associated with the <xref:System.Net.ServicePoint> object is empty.\"\n  example:\n  - \"The following code example sets this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]\\n [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]\\n [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]\"\n  syntax:\n    content: public static int MaxServicePointIdleTime { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum idle time, in milliseconds, of a <xref href=\"System.Net.ServicePoint\"></xref> object. The default value is 100,000 milliseconds (100 seconds).\n  overload: System.Net.ServicePointManager.MaxServicePointIdleTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Net.ServicePointManager.MaxServicePointIdleTime\"></xref> is less than <xref href=\"System.Threading.Timeout.Infinite\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.MaxServicePoints\n  commentId: P:System.Net.ServicePointManager.MaxServicePoints\n  id: MaxServicePoints\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: MaxServicePoints\n  nameWithType: ServicePointManager.MaxServicePoints\n  fullName: ServicePointManager.MaxServicePoints\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets or sets the maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects to maintain at any time.\n  remarks: When you reduce the <xref:System.Net.ServicePointManager.MaxServicePoints%2A> property below the number of <xref:System.Net.ServicePoint> objects currently in existence, the <xref:System.Net.ServicePointManager> deletes the <xref:System.Net.ServicePoint> objects with the longest idle times. If the number of <xref:System.Net.ServicePoint> objects with active connections is greater than the value of <xref:System.Net.ServicePointManager.MaxServicePoints%2A>, the <xref:System.Net.ServicePointManager> object deletes the <xref:System.Net.ServicePoint> objects as they become idle.\n  example:\n  - \"The following code example sets this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#8)]\\n [!code-csharp[System.Net.ServicePoint#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#8)]\\n [!code-vb[System.Net.ServicePoint#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#8)]\"\n  syntax:\n    content: public static int MaxServicePoints { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of <xref href=\"System.Net.ServicePoint\"></xref> objects to maintain. The default value is 0, which means there is no limit to the number of <xref href=\"System.Net.ServicePoint\"></xref> objects.\n  overload: System.Net.ServicePointManager.MaxServicePoints*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <xref href=\"System.Net.ServicePointManager.MaxServicePoints\"></xref> is less than 0 or greater than <xref href=\"System.Int32.MaxValue\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.ReusePort\n  commentId: P:System.Net.ServicePointManager.ReusePort\n  id: ReusePort\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: ReusePort\n  nameWithType: ServicePointManager.ReusePort\n  fullName: ServicePointManager.ReusePort\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Setting this property value to `true` causes all outbound TCP connections from HttpWebRequest to use the native socket option SO_REUSE_UNICASTPORT on the socket. This causes the underlying outgoing ports to be shared. This is useful for scenarios where a large number of outgoing connections are made in a short time, and the app risks running out of ports.\n  remarks: The default value is `false`.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public static bool ReusePort { get; set; }\n    return:\n      type: System.Boolean\n      description: Returns <xref href=\"System.Boolean\"></xref>.\n  overload: System.Net.ServicePointManager.ReusePort*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.SecurityProtocol\n  commentId: P:System.Net.ServicePointManager.SecurityProtocol\n  id: SecurityProtocol\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: SecurityProtocol\n  nameWithType: ServicePointManager.SecurityProtocol\n  fullName: ServicePointManager.SecurityProtocol\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets or sets the security protocol used by the <xref href=\"System.Net.ServicePoint\"></xref> objects managed by the <xref href=\"System.Net.ServicePointManager\"></xref> object.\n  remarks: \"This property selects the version of the Secure Sockets Layer (SSL) or Transport Layer Security (TLS) protocol to use for new connections; existing connections aren't changed.  \\n  \\nStarting with the .NET Framework 4.7, the default value of this property is <xref:System.Net.SecurityProtocolType.SystemDefault?displayProperty=fullName>. This allows .NET Framework networking APIs based on <xref:System.Net.Security.SslStream> (such as FTP, HTTP, and SMTP) to inherit the default security protocols from the operating system or from any custom configurations performed by a system administrator. For information about which SSL/TLS protocols are enabled by default on each version of the Windows operating system, see  [Protocols in TLS/SSL (Schannel SSP)](https://msdn.microsoft.com/library/windows/desktop/mt808159.aspx).\\n \\nFor versions of the .NET Framework through the .NET Framework 4.6.2, no default value is listed for this property. The security landscape changes constantly, and default protocols and protection levels are changed over time in order to avoid known weaknesses. Defaults vary depending on individual machine configuration, installed software, and applied patches.  \\n  \\n Your code should never implicitly depend on using a particular protection level, or on the assumption that a given security level is used by default. If your app depends on the use of a particular security level, you must explicitly specify that level and then check to be sure that it is actually in use on the established connection. Further, your code should be designed to be robust in the face of changes to which protocols are supported, as such changes are often made with little advance notice in order to mitigate emerging threats.  \\n  \\n The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.  \\n  \\n Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.\"\n  syntax:\n    content: public static System.Net.SecurityProtocolType SecurityProtocol { get; set; }\n    return:\n      type: System.Net.SecurityProtocolType\n      description: One of the values defined in the <xref href=\"System.Net.SecurityProtocolType\"></xref> enumeration.\n  overload: System.Net.ServicePointManager.SecurityProtocol*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The value specified to set the property is not a valid <xref href=\"System.Net.SecurityProtocolType\"></xref> enumeration value.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback\n  commentId: P:System.Net.ServicePointManager.ServerCertificateValidationCallback\n  id: ServerCertificateValidationCallback\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: ServerCertificateValidationCallback\n  nameWithType: ServicePointManager.ServerCertificateValidationCallback\n  fullName: ServicePointManager.ServerCertificateValidationCallback\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Gets or sets the callback to validate a server certificate.\n  remarks: \"An application can set the <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> property to a method to use for custom validation by the client of the server certificate. When doing custom validation, the `sender` parameter passed to the <xref:System.Net.Security.RemoteCertificateValidationCallback> can be a host string name or an object derived from <xref:System.Net.WebRequest> (<xref:System.Net.HttpWebRequest>, for example) depending on the <xref:System.Net.ServicePointManager.CertificatePolicy%2A> property.  \\n  \\n When custom validation is not used, the certificate name is compared with host name used to create the request. For example, if <xref:System.Net.WebRequest.Create%28System.String%29> was passed a parameter of \\\"https://www.contoso.com/default.hmtl\\\", the default behavior is for the client to check the certificate against www.contoso.com.\"\n  syntax:\n    content: public static System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }\n    return:\n      type: System.Net.Security.RemoteCertificateValidationCallback\n      description: A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref>. The default value is `null`.\n  overload: System.Net.ServicePointManager.ServerCertificateValidationCallback*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.ServerCipherSuitesCallback\n  commentId: P:System.Net.ServicePointManager.ServerCipherSuitesCallback\n  id: ServerCipherSuitesCallback\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: ServerCipherSuitesCallback\n  nameWithType: ServicePointManager.ServerCipherSuitesCallback\n  fullName: ServicePointManager.ServerCipherSuitesCallback\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API is no longer supported.\", true)]\n\n      public static System.Net.CipherSuitesCallback ServerCipherSuitesCallback { get; set; }\n    return:\n      type: System.Net.CipherSuitesCallback\n      description: ''\n  overload: System.Net.ServicePointManager.ServerCipherSuitesCallback*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)\n  commentId: M:System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)\n  id: SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: SetTcpKeepAlive(Boolean, Int32, Int32)\n  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean, Int32, Int32)\n  fullName: ServicePointManager.SetTcpKeepAlive(Boolean, Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Enables or disables the keep-alive option on a TCP connection.\n  remarks: \"An application can request that a TCP/IP provider enable the use of keep-alive packets on a TCP connection. The default is that the use of keep-alive packets on a TCP connection is disabled.  \\n  \\n The default settings when a TCP socket is initialized sets the keep-alive timeout to 2 hours and the keep-alive interval to 1 second. The `keepAliveTime` parameter specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent. The `keepAliveInterval` parameter specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received. The number of keep-alive probes cannot be changed and is set to 10.  \\n  \\n If a TCP connection is dropped as the result of keep-alives, a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NetworkReset> is returned to any calls in progress on the socket, and any subsequent calls will fail with a <xref:System.Net.Sockets.SocketError> of <xref:System.Net.Sockets.SocketError.NotConnected>.\"\n  syntax:\n    content: public static void SetTcpKeepAlive (bool enabled, int keepAliveTime, int keepAliveInterval);\n    parameters:\n    - id: enabled\n      type: System.Boolean\n      description: \"If set to true, then the TCP keep-alive option on a TCP connection will be enabled using the specified <code>keepAliveTime</code> and <code>keepAliveInterval</code> values.  \\n  \\n If set to false, then the TCP keep-alive option is disabled and the remaining parameters are ignored.  \\n  \\n The default value is false.\"\n    - id: keepAliveTime\n      type: System.Int32\n      description: \"Specifies the timeout, in milliseconds, with no activity until the first keep-alive packet is sent.  \\n  \\n The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref href=\\\"System.ArgumentOutOfRangeException\\\"></xref> is thrown.\"\n    - id: keepAliveInterval\n      type: System.Int32\n      description: \"Specifies the interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received.  \\n  \\n The value must be greater than 0.  If a value of less than or equal to zero is passed an <xref href=\\\"System.ArgumentOutOfRangeException\\\"></xref> is thrown.\"\n  overload: System.Net.ServicePointManager.SetTcpKeepAlive*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified for <code>keepAliveTime</code> or <code>keepAliveInterval</code> parameter is less than or equal to 0.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.ServicePointManager.UseNagleAlgorithm\n  commentId: P:System.Net.ServicePointManager.UseNagleAlgorithm\n  id: UseNagleAlgorithm\n  parent: System.Net.ServicePointManager\n  langs:\n  - csharp\n  name: UseNagleAlgorithm\n  nameWithType: ServicePointManager.UseNagleAlgorithm\n  fullName: ServicePointManager.UseNagleAlgorithm\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.ServicePoint\n  namespace: System.Net\n  summary: Determines whether the Nagle algorithm is used by the service points managed by this <xref href=\"System.Net.ServicePointManager\"></xref> object.\n  remarks: \"The Nagle algorithm is used to reduce network traffic by buffering small packets of data and transmitting them as a single packet. This process is also referred to as \\\"nagling\\\"; it is widely used because it reduces the number of packets transmitted and lowers the overhead per packet.  \\n  \\n Changing the value of this property does not affect existing <xref:System.Net.ServicePoint> objects. Only new service points created after the change are affected.  \\n  \\n The Nagle algorithm is fully described in IETF RFC 896.\"\n  example:\n  - \"The following code example sets this property.  \\n  \\n [!code-cpp[System.Net.ServicePoint#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#10)]\\n [!code-csharp[System.Net.ServicePoint#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#10)]\\n [!code-vb[System.Net.ServicePoint#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#10)]\"\n  syntax:\n    content: public static bool UseNagleAlgorithm { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to use the Nagle algorithm; otherwise, `false`. The default value is `true`.'\n  overload: System.Net.ServicePointManager.UseNagleAlgorithm*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.UriFormatException\n  parent: System\n  isExternal: false\n  name: UriFormatException\n  nameWithType: UriFormatException\n  fullName: System.UriFormatException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Net.ServicePointManager.CertificatePolicy\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: CertificatePolicy\n  nameWithType: ServicePointManager.CertificatePolicy\n  fullName: ServicePointManager.CertificatePolicy\n- uid: System.Net.ICertificatePolicy\n  parent: System.Net\n  isExternal: false\n  name: ICertificatePolicy\n  nameWithType: ICertificatePolicy\n  fullName: System.Net.ICertificatePolicy\n- uid: System.Net.ServicePointManager.CheckCertificateRevocationList\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: CheckCertificateRevocationList\n  nameWithType: ServicePointManager.CheckCertificateRevocationList\n  fullName: ServicePointManager.CheckCertificateRevocationList\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.ServicePointManager.ClientCipherSuitesCallback\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: ClientCipherSuitesCallback\n  nameWithType: ServicePointManager.ClientCipherSuitesCallback\n  fullName: ServicePointManager.ClientCipherSuitesCallback\n- uid: System.Net.CipherSuitesCallback\n  parent: System.Net\n  isExternal: false\n  name: CipherSuitesCallback\n  nameWithType: CipherSuitesCallback\n  fullName: System.Net.CipherSuitesCallback\n- uid: System.Net.ServicePointManager.DefaultConnectionLimit\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: DefaultConnectionLimit\n  nameWithType: ServicePointManager.DefaultConnectionLimit\n  fullName: ServicePointManager.DefaultConnectionLimit\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.ServicePointManager.DefaultNonPersistentConnectionLimit\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: DefaultNonPersistentConnectionLimit\n  nameWithType: ServicePointManager.DefaultNonPersistentConnectionLimit\n  fullName: ServicePointManager.DefaultNonPersistentConnectionLimit\n- uid: System.Net.ServicePointManager.DefaultPersistentConnectionLimit\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: DefaultPersistentConnectionLimit\n  nameWithType: ServicePointManager.DefaultPersistentConnectionLimit\n  fullName: ServicePointManager.DefaultPersistentConnectionLimit\n- uid: System.Net.ServicePointManager.DnsRefreshTimeout\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: DnsRefreshTimeout\n  nameWithType: ServicePointManager.DnsRefreshTimeout\n  fullName: ServicePointManager.DnsRefreshTimeout\n- uid: System.Net.ServicePointManager.EnableDnsRoundRobin\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: EnableDnsRoundRobin\n  nameWithType: ServicePointManager.EnableDnsRoundRobin\n  fullName: ServicePointManager.EnableDnsRoundRobin\n- uid: System.Net.ServicePointManager.EncryptionPolicy\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: ServicePointManager.EncryptionPolicy\n  fullName: ServicePointManager.EncryptionPolicy\n- uid: System.Net.Security.EncryptionPolicy\n  parent: System.Net.Security\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: EncryptionPolicy\n  fullName: System.Net.Security.EncryptionPolicy\n- uid: System.Net.ServicePointManager.Expect100Continue\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: Expect100Continue\n  nameWithType: ServicePointManager.Expect100Continue\n  fullName: ServicePointManager.Expect100Continue\n- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: FindServicePoint(Uri, IWebProxy)\n  nameWithType: ServicePointManager.FindServicePoint(Uri, IWebProxy)\n  fullName: ServicePointManager.FindServicePoint(Uri, IWebProxy)\n- uid: System.Net.ServicePoint\n  parent: System.Net\n  isExternal: false\n  name: ServicePoint\n  nameWithType: ServicePoint\n  fullName: System.Net.ServicePoint\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Net.IWebProxy\n  parent: System.Net\n  isExternal: false\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.Net.ServicePointManager.FindServicePoint(System.Uri)\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: FindServicePoint(Uri)\n  nameWithType: ServicePointManager.FindServicePoint(Uri)\n  fullName: ServicePointManager.FindServicePoint(Uri)\n- uid: System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: FindServicePoint(String, IWebProxy)\n  nameWithType: ServicePointManager.FindServicePoint(String, IWebProxy)\n  fullName: ServicePointManager.FindServicePoint(String, IWebProxy)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.ServicePointManager.MaxServicePointIdleTime\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: MaxServicePointIdleTime\n  nameWithType: ServicePointManager.MaxServicePointIdleTime\n  fullName: ServicePointManager.MaxServicePointIdleTime\n- uid: System.Net.ServicePointManager.MaxServicePoints\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: MaxServicePoints\n  nameWithType: ServicePointManager.MaxServicePoints\n  fullName: ServicePointManager.MaxServicePoints\n- uid: System.Net.ServicePointManager.ReusePort\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: ReusePort\n  nameWithType: ServicePointManager.ReusePort\n  fullName: ServicePointManager.ReusePort\n- uid: System.Net.ServicePointManager.SecurityProtocol\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: SecurityProtocol\n  nameWithType: ServicePointManager.SecurityProtocol\n  fullName: ServicePointManager.SecurityProtocol\n- uid: System.Net.SecurityProtocolType\n  parent: System.Net\n  isExternal: false\n  name: SecurityProtocolType\n  nameWithType: SecurityProtocolType\n  fullName: System.Net.SecurityProtocolType\n- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: ServerCertificateValidationCallback\n  nameWithType: ServicePointManager.ServerCertificateValidationCallback\n  fullName: ServicePointManager.ServerCertificateValidationCallback\n- uid: System.Net.Security.RemoteCertificateValidationCallback\n  parent: System.Net.Security\n  isExternal: false\n  name: RemoteCertificateValidationCallback\n  nameWithType: RemoteCertificateValidationCallback\n  fullName: System.Net.Security.RemoteCertificateValidationCallback\n- uid: System.Net.ServicePointManager.ServerCipherSuitesCallback\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: ServerCipherSuitesCallback\n  nameWithType: ServicePointManager.ServerCipherSuitesCallback\n  fullName: ServicePointManager.ServerCipherSuitesCallback\n- uid: System.Net.ServicePointManager.SetTcpKeepAlive(System.Boolean,System.Int32,System.Int32)\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: SetTcpKeepAlive(Boolean, Int32, Int32)\n  nameWithType: ServicePointManager.SetTcpKeepAlive(Boolean, Int32, Int32)\n  fullName: ServicePointManager.SetTcpKeepAlive(Boolean, Int32, Int32)\n- uid: System.Net.ServicePointManager.UseNagleAlgorithm\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: UseNagleAlgorithm\n  nameWithType: ServicePointManager.UseNagleAlgorithm\n  fullName: ServicePointManager.UseNagleAlgorithm\n- uid: System.Net.ServicePointManager.CertificatePolicy*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: CertificatePolicy\n  nameWithType: ServicePointManager.CertificatePolicy\n  fullName: ServicePointManager.CertificatePolicy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.CheckCertificateRevocationList*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: CheckCertificateRevocationList\n  nameWithType: ServicePointManager.CheckCertificateRevocationList\n  fullName: ServicePointManager.CheckCertificateRevocationList\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.ClientCipherSuitesCallback*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: ClientCipherSuitesCallback\n  nameWithType: ServicePointManager.ClientCipherSuitesCallback\n  fullName: ServicePointManager.ClientCipherSuitesCallback\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.DefaultConnectionLimit*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: DefaultConnectionLimit\n  nameWithType: ServicePointManager.DefaultConnectionLimit\n  fullName: ServicePointManager.DefaultConnectionLimit\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.DnsRefreshTimeout*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: DnsRefreshTimeout\n  nameWithType: ServicePointManager.DnsRefreshTimeout\n  fullName: ServicePointManager.DnsRefreshTimeout\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.EnableDnsRoundRobin*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: EnableDnsRoundRobin\n  nameWithType: ServicePointManager.EnableDnsRoundRobin\n  fullName: ServicePointManager.EnableDnsRoundRobin\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.EncryptionPolicy*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: ServicePointManager.EncryptionPolicy\n  fullName: ServicePointManager.EncryptionPolicy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.Expect100Continue*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: Expect100Continue\n  nameWithType: ServicePointManager.Expect100Continue\n  fullName: ServicePointManager.Expect100Continue\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.FindServicePoint*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: FindServicePoint\n  nameWithType: ServicePointManager.FindServicePoint\n  fullName: ServicePointManager.FindServicePoint\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.MaxServicePointIdleTime*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: MaxServicePointIdleTime\n  nameWithType: ServicePointManager.MaxServicePointIdleTime\n  fullName: ServicePointManager.MaxServicePointIdleTime\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.MaxServicePoints*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: MaxServicePoints\n  nameWithType: ServicePointManager.MaxServicePoints\n  fullName: ServicePointManager.MaxServicePoints\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.ReusePort*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: ReusePort\n  nameWithType: ServicePointManager.ReusePort\n  fullName: ServicePointManager.ReusePort\n  monikers:\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.SecurityProtocol*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: SecurityProtocol\n  nameWithType: ServicePointManager.SecurityProtocol\n  fullName: ServicePointManager.SecurityProtocol\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.ServerCertificateValidationCallback*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: ServerCertificateValidationCallback\n  nameWithType: ServicePointManager.ServerCertificateValidationCallback\n  fullName: ServicePointManager.ServerCertificateValidationCallback\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.ServerCipherSuitesCallback*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: ServerCipherSuitesCallback\n  nameWithType: ServicePointManager.ServerCipherSuitesCallback\n  fullName: ServicePointManager.ServerCipherSuitesCallback\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.SetTcpKeepAlive*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: SetTcpKeepAlive\n  nameWithType: ServicePointManager.SetTcpKeepAlive\n  fullName: ServicePointManager.SetTcpKeepAlive\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Net.ServicePointManager.UseNagleAlgorithm*\n  parent: System.Net.ServicePointManager\n  isExternal: false\n  name: UseNagleAlgorithm\n  nameWithType: ServicePointManager.UseNagleAlgorithm\n  fullName: ServicePointManager.UseNagleAlgorithm\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/ServicePointManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}