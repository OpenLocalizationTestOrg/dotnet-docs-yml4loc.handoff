{"nodes":[{"content":"Reads primitive data types as binary values in a specific encoding.","nodes":[{"pos":[0,67],"content":"Reads primitive data types as binary values in a specific encoding.","nodes":[{"content":"Reads primitive data types as binary values in a specific encoding.","pos":[0,67]}]}],"pos":[1682,1750],"yaml":true},{"content":"The <xref:System.IO.BinaryReader> class provides methods that simplify reading primitive data types from a stream. For example, you can use the <xref:System.IO.BinaryReader.ReadBoolean%2A> method to read the next byte as a Boolean value and advance the current position in the stream by one byte. The class includes read methods that support different data types.  \n  \n When you create a new instance of the <xref:System.IO.BinaryReader> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryReader> object. If you do not specify an encoding type, UTF-8 is used.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[0,363],"content":"The <xref:System.IO.BinaryReader> class provides methods that simplify reading primitive data types from a stream. For example, you can use the <xref:System.IO.BinaryReader.ReadBoolean%2A> method to read the next byte as a Boolean value and advance the current position in the stream by one byte. The class includes read methods that support different data types.","nodes":[{"content":"The <xref:System.IO.BinaryReader> class provides methods that simplify reading primitive data types from a stream. For example, you can use the <xref:System.IO.BinaryReader.ReadBoolean%2A> method to read the next byte as a Boolean value and advance the current position in the stream by one byte. The class includes read methods that support different data types.","pos":[0,363],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> class provides methods that simplify reading primitive data types from a stream.","pos":[0,114],"source":"The <xref:System.IO.BinaryReader> class provides methods that simplify reading primitive data types from a stream."},{"content":"For example, you can use the <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader.ReadBoolean%2A&gt;</ph> method to read the next byte as a Boolean value and advance the current position in the stream by one byte.","pos":[115,296],"source":" For example, you can use the <xref:System.IO.BinaryReader.ReadBoolean%2A> method to read the next byte as a Boolean value and advance the current position in the stream by one byte."},{"content":"The class includes read methods that support different data types.","pos":[297,363]}]}]},{"pos":[370,675],"content":"When you create a new instance of the <xref:System.IO.BinaryReader> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryReader> object. If you do not specify an encoding type, UTF-8 is used.","nodes":[{"content":"When you create a new instance of the <xref:System.IO.BinaryReader> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryReader> object. If you do not specify an encoding type, UTF-8 is used.","pos":[0,305],"nodes":[{"content":"When you create a new instance of the <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader&gt;</ph> object.","pos":[0,250],"source":"When you create a new instance of the <xref:System.IO.BinaryReader> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryReader> object."},{"content":"If you do not specify an encoding type, UTF-8 is used.","pos":[251,305]}]}]},{"pos":[683,1209],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[1761,2980],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.BinaryReader\"></xref> class based on the specified stream and using UTF-8 encoding.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryReader\"&gt;&lt;/xref&gt;</ph> class based on the specified stream and using UTF-8 encoding.","source":"Initializes a new instance of the <xref href=\"System.IO.BinaryReader\"></xref> class based on the specified stream and using UTF-8 encoding."}],"pos":[5483,5623],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[5634,5730],"yaml":true,"extradata":"MT"},{"content":"The input stream.","nodes":[{"pos":[0,17],"content":"The input stream.","nodes":[{"content":"The input stream.","pos":[0,17]}]}],"pos":[6287,6305],"yaml":true},{"content":"The stream does not support reading, is `null`, or is already closed.","nodes":[{"pos":[0,69],"content":"The stream does not support reading, is <ph id=\"ph1\">`null`</ph>, or is already closed.","source":"The stream does not support reading, is `null`, or is already closed."}],"pos":[6455,6525],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.BinaryReader\"></xref> class based on the specified stream and character encoding.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryReader\"&gt;&lt;/xref&gt;</ph> class based on the specified stream and character encoding.","source":"Initializes a new instance of the <xref href=\"System.IO.BinaryReader\"></xref> class based on the specified stream and character encoding."}],"pos":[8145,8283],"yaml":true},{"content":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,95],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[8294,8390],"yaml":true,"extradata":"MT"},{"content":"The input stream.","nodes":[{"pos":[0,17],"content":"The input stream.","nodes":[{"content":"The input stream.","pos":[0,17]}]}],"pos":[8570,8588],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[8659,8690],"yaml":true},{"content":"The stream does not support reading, is `null`, or is already closed.","nodes":[{"pos":[0,69],"content":"The stream does not support reading, is <ph id=\"ph1\">`null`</ph>, or is already closed.","source":"The stream does not support reading, is `null`, or is already closed."}],"pos":[8840,8910],"yaml":true},{"content":"<code>encoding</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;encoding&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>encoding</code> is `null`."}],"pos":[9012,9045],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.BinaryReader\"></xref> class based on the specified stream and character encoding, and optionally leaves the stream open.","nodes":[{"pos":[0,176],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryReader\"&gt;&lt;/xref&gt;</ph> class based on the specified stream and character encoding, and optionally leaves the stream open.","source":"Initializes a new instance of the <xref href=\"System.IO.BinaryReader\"></xref> class based on the specified stream and character encoding, and optionally leaves the stream open."}],"pos":[10737,10914],"yaml":true},{"content":"The input stream.","nodes":[{"pos":[0,17],"content":"The input stream.","nodes":[{"content":"The input stream.","pos":[0,17]}]}],"pos":[11110,11128],"yaml":true},{"content":"The character encoding to use.","nodes":[{"pos":[0,30],"content":"The character encoding to use.","nodes":[{"content":"The character encoding to use.","pos":[0,30]}]}],"pos":[11199,11230],"yaml":true},{"content":"`true` to leave the stream open after the <xref href=\"System.IO.BinaryReader\"></xref> object is disposed; otherwise, `false`.","nodes":[{"pos":[0,125],"content":"<ph id=\"ph1\">`true`</ph> to leave the stream open after the <ph id=\"ph2\">&lt;xref href=\"System.IO.BinaryReader\"&gt;&lt;/xref&gt;</ph> object is disposed; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to leave the stream open after the <xref href=\"System.IO.BinaryReader\"></xref> object is disposed; otherwise, `false`."}],"pos":[11296,11424],"yaml":true},{"content":"The stream does not support reading, is `null`, or is already closed.","nodes":[{"pos":[0,69],"content":"The stream does not support reading, is <ph id=\"ph1\">`null`</ph>, or is already closed.","source":"The stream does not support reading, is `null`, or is already closed."}],"pos":[11574,11644],"yaml":true},{"content":"<code>encoding</code> or <code>input</code> is `null`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;encoding&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>encoding</code> or <code>input</code> is `null`."}],"pos":[11746,11801],"yaml":true},{"content":"Exposes access to the underlying stream of the <xref href=\"System.IO.BinaryReader\"></xref>.","nodes":[{"pos":[0,91],"content":"Exposes access to the underlying stream of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryReader\"&gt;&lt;/xref&gt;</ph>.","source":"Exposes access to the underlying stream of the <xref href=\"System.IO.BinaryReader\"></xref>."}],"pos":[13254,13346],"yaml":true},{"content":"> [!CAUTION]\n>  Using the underlying stream while reading or while using the `BinaryReader` can cause data loss and corruption. For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[2,258],"content":"[!CAUTION]\n Using the underlying stream while reading or while using the `BinaryReader` can cause data loss and corruption. For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.","leadings":["","> "],"nodes":[{"content":" Using the underlying stream while reading or while using the `BinaryReader` can cause data loss and corruption. For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.","pos":[11,254],"nodes":[{"content":"Using the underlying stream while reading or while using the <ph id=\"ph1\">`BinaryReader`</ph> can cause data loss and corruption.","pos":[1,112],"source":" Using the underlying stream while reading or while using the `BinaryReader` can cause data loss and corruption."},{"content":"For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.","pos":[113,243]}]}]},{"pos":[265,360],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[13357,13723],"yaml":true,"extradata":"MT"},{"content":"The underlying stream associated with the `BinaryReader`.","nodes":[{"pos":[0,57],"content":"The underlying stream associated with the <ph id=\"ph1\">`BinaryReader`</ph>.","source":"The underlying stream associated with the `BinaryReader`."}],"pos":[14617,14675],"yaml":true},{"content":"Closes the current reader and the underlying stream.","nodes":[{"pos":[0,52],"content":"Closes the current reader and the underlying stream.","nodes":[{"content":"Closes the current reader and the underlying stream.","pos":[0,52]}]}],"pos":[16152,16205],"yaml":true},{"content":"This implementation of `Close` calls the <xref:System.IO.BinaryReader.Dispose%2A> method passing a `true` value.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.Stream.Flush%2A> or `Close`. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"pos":[0,112],"content":"This implementation of <ph id=\"ph1\">`Close`</ph> calls the <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader.Dispose%2A&gt;</ph> method passing a <ph id=\"ph3\">`true`</ph> value.","source":"This implementation of `Close` calls the <xref:System.IO.BinaryReader.Dispose%2A> method passing a `true` value."},{"pos":[119,686],"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.Stream.Flush%2A> or `Close`. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","nodes":[{"content":"Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id=\"ph1\">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> or <ph id=\"ph2\">`Close`</ph>.","pos":[0,129],"source":"Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.Stream.Flush%2A> or `Close`."},{"content":"Setting <ph id=\"ph1\">&lt;xref:System.IO.StreamWriter.AutoFlush%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.","pos":[130,296],"source":" Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed."},{"content":"This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.","pos":[297,421]},{"content":"This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.","pos":[422,567]}]}],"pos":[16216,16907],"yaml":true,"extradata":"MT"},{"content":"Releases all resources used by the current instance of the <xref href=\"System.IO.BinaryReader\"></xref> class.","nodes":[{"pos":[0,109],"content":"Releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryReader\"&gt;&lt;/xref&gt;</ph> class.","source":"Releases all resources used by the current instance of the <xref href=\"System.IO.BinaryReader\"></xref> class."}],"pos":[18133,18243],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.IO.BinaryReader>. The `Dispose` method leaves the <xref:System.IO.BinaryReader> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.IO.BinaryReader> so the garbage collector can reclaim the memory that the <xref:System.IO.BinaryReader> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.IO.BinaryReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.BinaryReader> object's `Finalize` method.","nodes":[{"pos":[0,357],"content":"Call `Dispose` when you are finished using the <xref:System.IO.BinaryReader>. The `Dispose` method leaves the <xref:System.IO.BinaryReader> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.IO.BinaryReader> so the garbage collector can reclaim the memory that the <xref:System.IO.BinaryReader> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader&gt;</ph>.","pos":[0,77],"source":"Call `Dispose` when you are finished using the <xref:System.IO.BinaryReader>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader&gt;</ph> in an unusable state.","pos":[78,161],"source":" The `Dispose` method leaves the <xref:System.IO.BinaryReader> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.IO.BinaryReader&gt;</ph> was occupying.","pos":[162,357],"source":" After calling `Dispose`, you must release all references to the <xref:System.IO.BinaryReader> so the garbage collector can reclaim the memory that the <xref:System.IO.BinaryReader> was occupying."}]},{"pos":[364,569],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[577,837],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.IO.BinaryReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.BinaryReader> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.IO.BinaryReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.BinaryReader> object's `Finalize` method.","pos":[8,258],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader&gt;</ph>.","pos":[1,99],"source":" Always call `Dispose` before you release your last reference to the <xref:System.IO.BinaryReader>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[100,250],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.BinaryReader> object's `Finalize` method."}]}]}],"pos":[18254,19099],"yaml":true,"extradata":"MT"},{"content":"Releases the unmanaged resources used by the <xref href=\"System.IO.BinaryReader\"></xref> class and optionally releases the managed resources.","nodes":[{"pos":[0,141],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.BinaryReader\"&gt;&lt;/xref&gt;</ph> class and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.IO.BinaryReader\"></xref> class and optionally releases the managed resources."}],"pos":[20734,20876],"yaml":true},{"content":"This method is called by `Dispose` and <xref:System.Object.Finalize%2A>. By default, this method specifies the `disposing` parameter as `true`. <xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.BinaryReader> references. This method invokes the `Dispose` method of each referenced object.","nodes":[{"pos":[0,224],"content":"This method is called by `Dispose` and <xref:System.Object.Finalize%2A>. By default, this method specifies the `disposing` parameter as `true`. <xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.","nodes":[{"content":"This method is called by <ph id=\"ph1\">`Dispose`</ph> and <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph>.","pos":[0,72],"source":"This method is called by `Dispose` and <xref:System.Object.Finalize%2A>."},{"content":"By default, this method specifies the <ph id=\"ph1\">`disposing`</ph> parameter as <ph id=\"ph2\">`true`</ph>.","pos":[73,143],"source":" By default, this method specifies the `disposing` parameter as `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> specifies the <ph id=\"ph2\">`disposing`</ph> parameter as <ph id=\"ph3\">`false`</ph>.","pos":[144,224],"source":" <xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`."}]},{"pos":[231,455],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.BinaryReader> references. This method invokes the `Dispose` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.IO.BinaryReader&gt;</ph> references.","pos":[0,156],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.BinaryReader> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose`</ph> method of each referenced object.","pos":[157,224],"source":" This method invokes the `Dispose` method of each referenced object."}]}],"pos":[20887,21347],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[21501,21604],"yaml":true},{"content":"Fills the internal buffer with the specified number of bytes read from the stream.","nodes":[{"pos":[0,82],"content":"Fills the internal buffer with the specified number of bytes read from the stream.","nodes":[{"content":"Fills the internal buffer with the specified number of bytes read from the stream.","pos":[0,82]}]}],"pos":[23179,23262],"yaml":true},{"content":"The internal buffer size is the larger value between 16 and the value returned by <xref:System.Text.Encoding.GetMaxByteCount%2A> for the specified encoding.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,156],"content":"The internal buffer size is the larger value between 16 and the value returned by <xref:System.Text.Encoding.GetMaxByteCount%2A> for the specified encoding.","nodes":[{"content":"The internal buffer size is the larger value between 16 and the value returned by <ph id=\"ph1\">&lt;xref:System.Text.Encoding.GetMaxByteCount%2A&gt;</ph> for the specified encoding.","pos":[0,156],"source":"The internal buffer size is the larger value between 16 and the value returned by <xref:System.Text.Encoding.GetMaxByteCount%2A> for the specified encoding."}]},{"pos":[163,258],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[23273,23536],"yaml":true,"extradata":"MT"},{"content":"The number of bytes to be read.","nodes":[{"pos":[0,31],"content":"The number of bytes to be read.","nodes":[{"content":"The number of bytes to be read.","pos":[0,31]}]}],"pos":[23688,23720],"yaml":true},{"content":"The end of the stream is reached before <code>numBytes</code> could be read.","nodes":[{"pos":[0,76],"content":"The end of the stream is reached before <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">numBytes</ph><ept id=\"p1\">&lt;/code&gt;</ept> could be read.","source":"The end of the stream is reached before <code>numBytes</code> could be read."}],"pos":[23887,23964],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[24052,24073],"yaml":true},{"content":"Requested <code>numBytes</code> is larger than the internal buffer size.","nodes":[{"pos":[0,72],"content":"Requested <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">numBytes</ph><ept id=\"p1\">&lt;/code&gt;</ept> is larger than the internal buffer size.","source":"Requested <code>numBytes</code> is larger than the internal buffer size."}],"pos":[24187,24260],"yaml":true},{"content":"Returns the next available character and does not advance the byte or character position.","nodes":[{"pos":[0,89],"content":"Returns the next available character and does not advance the byte or character position.","nodes":[{"content":"Returns the next available character and does not advance the byte or character position.","pos":[0,89]}]}],"pos":[25705,25795],"yaml":true},{"content":"If surrogate characters can be expected in the stream use the <xref:System.IO.BinaryReader.ReadChars%2A> method, then set the stream back to the original position.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,163],"content":"If surrogate characters can be expected in the stream use the <xref:System.IO.BinaryReader.ReadChars%2A> method, then set the stream back to the original position.","nodes":[{"content":"If surrogate characters can be expected in the stream use the <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method, then set the stream back to the original position.","pos":[0,163],"source":"If surrogate characters can be expected in the stream use the <xref:System.IO.BinaryReader.ReadChars%2A> method, then set the stream back to the original position."}]},{"pos":[170,265],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[25806,26076],"yaml":true,"extradata":"MT"},{"content":"The next available character, or -1 if no more characters are available or the stream does not support seeking.","nodes":[{"pos":[0,111],"content":"The next available character, or -1 if no more characters are available or the stream does not support seeking.","nodes":[{"content":"The next available character, or -1 if no more characters are available or the stream does not support seeking.","pos":[0,111]}]}],"pos":[26206,26318],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[26465,26486],"yaml":true},{"content":"The current character cannot be decoded into the internal character buffer by using the <xref href=\"System.Text.Encoding\"></xref> selected for the stream.","nodes":[{"pos":[0,154],"content":"The current character cannot be decoded into the internal character buffer by using the <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> selected for the stream.","source":"The current character cannot be decoded into the internal character buffer by using the <xref href=\"System.Text.Encoding\"></xref> selected for the stream."}],"pos":[26580,26735],"yaml":true},{"content":"Reads characters from the underlying stream and advances the current position of the stream in accordance with the `Encoding` used and the specific character being read from the stream.","nodes":[{"pos":[0,185],"content":"Reads characters from the underlying stream and advances the current position of the stream in accordance with the <ph id=\"ph1\">`Encoding`</ph> used and the specific character being read from the stream.","source":"Reads characters from the underlying stream and advances the current position of the stream in accordance with the `Encoding` used and the specific character being read from the stream."}],"pos":[28156,28342],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,194],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[28353,28552],"yaml":true,"extradata":"MT"},{"content":"The next character from the input stream, or -1 if no characters are currently available.","nodes":[{"pos":[0,89],"content":"The next character from the input stream, or -1 if no characters are currently available.","nodes":[{"content":"The next character from the input stream, or -1 if no characters are currently available.","pos":[0,89]}]}],"pos":[29608,29698],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[29841,29862],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[29968,29990],"yaml":true},{"content":"Reads the specified number of bytes from the stream, starting from a specified point in the byte array.","nodes":[{"pos":[0,103],"content":"Reads the specified number of bytes from the stream, starting from a specified point in the byte array.","nodes":[{"content":"Reads the specified number of bytes from the stream, starting from a specified point in the byte array.","pos":[0,103]}]}],"pos":[31594,31698],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,102],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.","pos":[0,102],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation."}]},{"pos":[109,204],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[31709,31918],"yaml":true,"extradata":"MT"},{"content":"The buffer to read data into.","nodes":[{"pos":[0,29],"content":"The buffer to read data into.","nodes":[{"content":"The buffer to read data into.","pos":[0,29]}]}],"pos":[33149,33179],"yaml":true},{"content":"The starting point in the buffer at which to begin reading into the buffer.","nodes":[{"pos":[0,75],"content":"The starting point in the buffer at which to begin reading into the buffer.","nodes":[{"content":"The starting point in the buffer at which to begin reading into the buffer.","pos":[0,75]}]}],"pos":[33239,33315],"yaml":true},{"content":"The number of bytes to read.","nodes":[{"pos":[0,28],"content":"The number of bytes to read.","nodes":[{"content":"The number of bytes to read.","pos":[0,28]}]}],"pos":[33375,33404],"yaml":true},{"content":"The number of bytes read into <code>buffer</code>. This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.","nodes":[{"pos":[0,199],"content":"The number of bytes read into <code>buffer</code>. This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.","nodes":[{"content":"The number of bytes read into <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,50],"source":"The number of bytes read into <code>buffer</code>."},{"content":"This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.","pos":[51,199]}]}],"pos":[33460,33660],"yaml":true},{"content":"The buffer length minus <code>index</code> is less than <code>count</code>.  \n  \n -or-  \n  \n The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","nodes":[{"pos":[0,75],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."},{"pos":[82,86],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[93,255],"content":"The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","nodes":[{"content":"The number of decoded characters to read is greater than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,76],"source":"The number of decoded characters to read is greater than <code>count</code>."},{"content":"This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","pos":[77,162]}]}],"pos":[33809,34071],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[34173,34204],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[34318,34372],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[34478,34500],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[34588,34609],"yaml":true},{"content":"Reads the specified number of characters from the stream, starting from a specified point in the character array.","nodes":[{"pos":[0,113],"content":"Reads the specified number of characters from the stream, starting from a specified point in the character array.","nodes":[{"content":"Reads the specified number of characters from the stream, starting from a specified point in the character array.","pos":[0,113]}]}],"pos":[36213,36327],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,102],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.","pos":[0,102],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation."}]},{"pos":[109,204],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[36338,36547],"yaml":true,"extradata":"MT"},{"content":"The buffer to read data into.","nodes":[{"pos":[0,29],"content":"The buffer to read data into.","nodes":[{"content":"The buffer to read data into.","pos":[0,29]}]}],"pos":[37650,37680],"yaml":true},{"content":"The starting point in the buffer at which to begin reading into the buffer.","nodes":[{"pos":[0,75],"content":"The starting point in the buffer at which to begin reading into the buffer.","nodes":[{"content":"The starting point in the buffer at which to begin reading into the buffer.","pos":[0,75]}]}],"pos":[37740,37816],"yaml":true},{"content":"The number of characters to read.","nodes":[{"pos":[0,33],"content":"The number of characters to read.","nodes":[{"content":"The number of characters to read.","pos":[0,33]}]}],"pos":[37876,37910],"yaml":true},{"content":"The total number of characters read into the buffer. This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.","nodes":[{"pos":[0,221],"content":"The total number of characters read into the buffer. This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.","nodes":[{"content":"The total number of characters read into the buffer. This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.","pos":[0,221],"nodes":[{"content":"The total number of characters read into the buffer.","pos":[0,52]},{"content":"This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.","pos":[53,221]}]}]}],"pos":[37966,38188],"yaml":true},{"content":"The buffer length minus <code>index</code> is less than <code>count</code>.  \n  \n -or-  \n  \n The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","nodes":[{"pos":[0,75],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."},{"pos":[82,86],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[93,255],"content":"The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","nodes":[{"content":"The number of decoded characters to read is greater than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,76],"source":"The number of decoded characters to read is greater than <code>count</code>."},{"content":"This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","pos":[77,162]}]}],"pos":[38337,38599],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[38701,38732],"yaml":true},{"content":"<code>index</code> or <code>count</code> is negative.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>index</code> or <code>count</code> is negative."}],"pos":[38846,38900],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[39006,39028],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[39116,39137],"yaml":true},{"content":"Reads in a 32-bit integer in compressed format.","nodes":[{"pos":[0,47],"content":"Reads in a 32-bit integer in compressed format.","nodes":[{"content":"Reads in a 32-bit integer in compressed format.","pos":[0,47]}]}],"pos":[40659,40707],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n If the integer will fit in seven bits, the integer takes only one byte of space. The integer is expected to have been written through <xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=fullName>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,311],"content":"If the integer will fit in seven bits, the integer takes only one byte of space. The integer is expected to have been written through <xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=fullName>.","nodes":[{"content":"If the integer will fit in seven bits, the integer takes only one byte of space. The integer is expected to have been written through <xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=fullName>.","pos":[0,212],"nodes":[{"content":"If the integer will fit in seven bits, the integer takes only one byte of space.","pos":[0,80]},{"content":"The integer is expected to have been written through <ph id=\"ph1\">&lt;xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=fullName&gt;</ph>.","pos":[81,212],"source":" The integer is expected to have been written through <xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=fullName>."}]}]},{"pos":[318,413],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[40718,41138],"yaml":true,"extradata":"MT"},{"content":"A 32-bit integer in compressed format.","nodes":[{"pos":[0,38],"content":"A 32-bit integer in compressed format.","nodes":[{"content":"A 32-bit integer in compressed format.","pos":[0,38]}]}],"pos":[41273,41312],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[41487,41521],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[41627,41649],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[41737,41758],"yaml":true},{"content":"The stream is corrupted.","nodes":[{"pos":[0,24],"content":"The stream is corrupted.","nodes":[{"content":"The stream is corrupted.","pos":[0,24]}]}],"pos":[41848,41873],"yaml":true},{"content":"Reads a `Boolean` value from the current stream and advances the current position of the stream by one byte.","nodes":[{"pos":[0,108],"content":"Reads a <ph id=\"ph1\">`Boolean`</ph> value from the current stream and advances the current position of the stream by one byte.","source":"Reads a `Boolean` value from the current stream and advances the current position of the stream by one byte."}],"pos":[43336,43445],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,194],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[43456,43655],"yaml":true,"extradata":"MT"},{"content":"`true` if the byte is nonzero; otherwise, `false`.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">`true`</ph> if the byte is nonzero; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the byte is nonzero; otherwise, `false`."}],"pos":[44199,44252],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[44420,44454],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[44560,44582],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[44670,44691],"yaml":true},{"content":"Reads the next byte from the current stream and advances the current position of the stream by one byte.","nodes":[{"pos":[0,104],"content":"Reads the next byte from the current stream and advances the current position of the stream by one byte.","nodes":[{"content":"Reads the next byte from the current stream and advances the current position of the stream by one byte.","pos":[0,104]}]}],"pos":[46136,46241],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n Because of data formatting conflicts, using this method with the following encodings is not recommended:  \n  \n-   UTF-7  \n  \n-   ISO-2022-JP  \n  \n-   ISCII  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,203],"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:","nodes":[{"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:","pos":[0,104]}]},{"pos":[213,218],"content":"UTF-7","nodes":[{"content":"UTF-7","pos":[0,5]}]},{"pos":[228,239],"content":"ISO-2022-JP","nodes":[{"content":"ISO-2022-JP","pos":[0,11]}]},{"pos":[249,254],"content":"ISCII","nodes":[{"content":"ISCII","pos":[0,5]}]},{"pos":[261,356],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[46252,46621],"yaml":true,"extradata":"MT"},{"content":"The next byte read from the current stream.","nodes":[{"pos":[0,43],"content":"The next byte read from the current stream.","nodes":[{"content":"The next byte read from the current stream.","pos":[0,43]}]}],"pos":[47386,47430],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[47595,47629],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[47735,47757],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[47845,47866],"yaml":true},{"content":"Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.","nodes":[{"pos":[0,136],"content":"Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.","nodes":[{"content":"Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.","pos":[0,136]}]}],"pos":[49374,49511],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,102],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.","pos":[0,102],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation."}]},{"pos":[109,204],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[49522,49731],"yaml":true,"extradata":"MT"},{"content":"The number of bytes to read. This value must be 0 or a non-negative number or an exception will occur.","nodes":[{"pos":[0,102],"content":"The number of bytes to read. This value must be 0 or a non-negative number or an exception will occur.","nodes":[{"content":"The number of bytes to read. This value must be 0 or a non-negative number or an exception will occur.","pos":[0,102],"nodes":[{"content":"The number of bytes to read.","pos":[0,28]},{"content":"This value must be 0 or a non-negative number or an exception will occur.","pos":[29,102]}]}]}],"pos":[51080,51183],"yaml":true},{"content":"A byte array containing data read from the underlying stream. This might be less than the number of bytes requested if the end of the stream is reached.","nodes":[{"pos":[0,152],"content":"A byte array containing data read from the underlying stream. This might be less than the number of bytes requested if the end of the stream is reached.","nodes":[{"content":"A byte array containing data read from the underlying stream. This might be less than the number of bytes requested if the end of the stream is reached.","pos":[0,152],"nodes":[{"content":"A byte array containing data read from the underlying stream.","pos":[0,61]},{"content":"This might be less than the number of bytes requested if the end of the stream is reached.","pos":[62,152]}]}]}],"pos":[51240,51393],"yaml":true},{"content":"The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","nodes":[{"pos":[0,162],"content":"The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","nodes":[{"content":"The number of decoded characters to read is greater than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,76],"source":"The number of decoded characters to read is greater than <code>count</code>."},{"content":"This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","pos":[77,162]}]}],"pos":[51547,51710],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[51798,51819],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[51925,51947],"yaml":true},{"content":"<code>count</code> is negative.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>count</code> is negative."}],"pos":[52061,52093],"yaml":true},{"content":"Reads the next character from the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific character being read from the stream.","nodes":[{"pos":[0,190],"content":"Reads the next character from the current stream and advances the current position of the stream in accordance with the <ph id=\"ph1\">`Encoding`</ph> used and the specific character being read from the stream.","source":"Reads the next character from the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific character being read from the stream."}],"pos":[53538,53729],"yaml":true},{"content":"If the <xref:System.IO.BinaryReader.ReadChar%2A> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance. The position is restored to the original location before <xref:System.IO.BinaryReader.ReadChar%2A> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected. If surrogate characters can be expected in the stream, use the <xref:System.IO.BinaryReader.ReadChars%2A> method instead.  \n  \n Because of data formatting conflicts, using this method with the following encodings is not recommended:  \n  \n-   UTF-7  \n  \n-   ISO-2022-JP  \n  \n-   ISCII  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,514],"content":"If the <xref:System.IO.BinaryReader.ReadChar%2A> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance. The position is restored to the original location before <xref:System.IO.BinaryReader.ReadChar%2A> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected. If surrogate characters can be expected in the stream, use the <xref:System.IO.BinaryReader.ReadChars%2A> method instead.","nodes":[{"content":"If the <xref:System.IO.BinaryReader.ReadChar%2A> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance. The position is restored to the original location before <xref:System.IO.BinaryReader.ReadChar%2A> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected. If surrogate characters can be expected in the stream, use the <xref:System.IO.BinaryReader.ReadChars%2A> method instead.","pos":[0,514],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance.","pos":[0,181],"source":"If the <xref:System.IO.BinaryReader.ReadChar%2A> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance."},{"content":"The position is restored to the original location before <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader.ReadChar%2A&gt;</ph> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected.","pos":[182,392],"source":" The position is restored to the original location before <xref:System.IO.BinaryReader.ReadChar%2A> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected."},{"content":"If surrogate characters can be expected in the stream, use the <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method instead.","pos":[393,514],"source":" If surrogate characters can be expected in the stream, use the <xref:System.IO.BinaryReader.ReadChars%2A> method instead."}]}]},{"pos":[521,625],"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:","nodes":[{"content":"Because of data formatting conflicts, using this method with the following encodings is not recommended:","pos":[0,104]}]},{"pos":[635,640],"content":"UTF-7","nodes":[{"content":"UTF-7","pos":[0,5]}]},{"pos":[650,661],"content":"ISO-2022-JP","nodes":[{"content":"ISO-2022-JP","pos":[0,11]}]},{"pos":[671,676],"content":"ISCII","nodes":[{"content":"ISCII","pos":[0,5]}]},{"pos":[683,778],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[53740,54531],"yaml":true,"extradata":"MT"},{"content":"A character read from the current stream.","nodes":[{"pos":[0,41],"content":"A character read from the current stream.","nodes":[{"content":"A character read from the current stream.","pos":[0,41]}]}],"pos":[55251,55293],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[55458,55492],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[55598,55620],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[55708,55729],"yaml":true},{"content":"A surrogate character was read.","nodes":[{"pos":[0,31],"content":"A surrogate character was read.","nodes":[{"content":"A surrogate character was read.","pos":[0,31]}]}],"pos":[55823,55855],"yaml":true},{"content":"Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the `Encoding` used and the specific character being read from the stream.","nodes":[{"pos":[0,232],"content":"Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the <ph id=\"ph1\">`Encoding`</ph> used and the specific character being read from the stream.","source":"Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the `Encoding` used and the specific character being read from the stream."}],"pos":[57363,57596],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.  \n  \n When reading from network streams, in some rare cases, the <xref:System.IO.BinaryReader.ReadChars%2A> method might read an extra character from the stream if the <xref:System.IO.BinaryReader> was constructed with Unicode encoding. If this occurs, you can use the <xref:System.IO.BinaryReader.ReadBytes%2A> method to read a fixed-length byte array, and then pass that array to the <xref:System.IO.BinaryReader.ReadChars%2A> method.","nodes":[{"pos":[0,102],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read operation.","pos":[0,102],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation."}]},{"pos":[109,539],"content":"When reading from network streams, in some rare cases, the <xref:System.IO.BinaryReader.ReadChars%2A> method might read an extra character from the stream if the <xref:System.IO.BinaryReader> was constructed with Unicode encoding. If this occurs, you can use the <xref:System.IO.BinaryReader.ReadBytes%2A> method to read a fixed-length byte array, and then pass that array to the <xref:System.IO.BinaryReader.ReadChars%2A> method.","nodes":[{"content":"When reading from network streams, in some rare cases, the <xref:System.IO.BinaryReader.ReadChars%2A> method might read an extra character from the stream if the <xref:System.IO.BinaryReader> was constructed with Unicode encoding. If this occurs, you can use the <xref:System.IO.BinaryReader.ReadBytes%2A> method to read a fixed-length byte array, and then pass that array to the <xref:System.IO.BinaryReader.ReadChars%2A> method.","pos":[0,430],"nodes":[{"content":"When reading from network streams, in some rare cases, the <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method might read an extra character from the stream if the <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader&gt;</ph> was constructed with Unicode encoding.","pos":[0,230],"source":"When reading from network streams, in some rare cases, the <xref:System.IO.BinaryReader.ReadChars%2A> method might read an extra character from the stream if the <xref:System.IO.BinaryReader> was constructed with Unicode encoding."},{"content":"If this occurs, you can use the <ph id=\"ph1\">&lt;xref:System.IO.BinaryReader.ReadBytes%2A&gt;</ph> method to read a fixed-length byte array, and then pass that array to the <ph id=\"ph2\">&lt;xref:System.IO.BinaryReader.ReadChars%2A&gt;</ph> method.","pos":[231,430],"source":" If this occurs, you can use the <xref:System.IO.BinaryReader.ReadBytes%2A> method to read a fixed-length byte array, and then pass that array to the <xref:System.IO.BinaryReader.ReadChars%2A> method."}]}]}],"pos":[57607,58151],"yaml":true,"extradata":"MT"},{"content":"The number of characters to read.","nodes":[{"pos":[0,33],"content":"The number of characters to read.","nodes":[{"content":"The number of characters to read.","pos":[0,33]}]}],"pos":[58894,58928],"yaml":true},{"content":"A character array containing data read from the underlying stream. This might be less than the number of characters requested if the end of the stream is reached.","nodes":[{"pos":[0,162],"content":"A character array containing data read from the underlying stream. This might be less than the number of characters requested if the end of the stream is reached.","nodes":[{"content":"A character array containing data read from the underlying stream. This might be less than the number of characters requested if the end of the stream is reached.","pos":[0,162],"nodes":[{"content":"A character array containing data read from the underlying stream.","pos":[0,66]},{"content":"This might be less than the number of characters requested if the end of the stream is reached.","pos":[67,162]}]}]}],"pos":[58985,59148],"yaml":true},{"content":"The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","nodes":[{"pos":[0,162],"content":"The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","nodes":[{"content":"The number of decoded characters to read is greater than <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">count</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,76],"source":"The number of decoded characters to read is greater than <code>count</code>."},{"content":"This can happen if a Unicode decoder returns fallback characters or a surrogate pair.","pos":[77,162]}]}],"pos":[59302,59465],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[59571,59593],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[59681,59702],"yaml":true},{"content":"<code>count</code> is negative.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is negative.","source":"<code>count</code> is negative."}],"pos":[59816,59848],"yaml":true},{"content":"Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.","nodes":[{"pos":[0,111],"content":"Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.","nodes":[{"content":"Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.","pos":[0,111]}]}],"pos":[61328,61440],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,194],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[61451,61650],"yaml":true,"extradata":"MT"},{"content":"A decimal value read from the current stream.","nodes":[{"pos":[0,45],"content":"A decimal value read from the current stream.","nodes":[{"content":"A decimal value read from the current stream.","pos":[0,45]}]}],"pos":[61789,61835],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[62003,62037],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[62143,62165],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[62253,62274],"yaml":true},{"content":"Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.","nodes":[{"pos":[0,124],"content":"Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.","nodes":[{"content":"Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.","pos":[0,124]}]}],"pos":[63731,63856],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n `BinaryReader` reads this data type in little-endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,159],"content":"<ph id=\"ph1\">`BinaryReader`</ph> reads this data type in little-endian format.","source":"`BinaryReader` reads this data type in little-endian format."},{"pos":[166,261],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[63867,64135],"yaml":true,"extradata":"MT"},{"content":"An 8-byte floating point value read from the current stream.","nodes":[{"pos":[0,60],"content":"An 8-byte floating point value read from the current stream.","nodes":[{"content":"An 8-byte floating point value read from the current stream.","pos":[0,60]}]}],"pos":[65030,65091],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[65258,65292],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[65398,65420],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[65508,65529],"yaml":true},{"content":"Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.","nodes":[{"pos":[0,115],"content":"Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.","nodes":[{"content":"Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.","pos":[0,115]}]}],"pos":[66997,67113],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n `BinaryReader` reads this data type in little-endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,159],"content":"<ph id=\"ph1\">`BinaryReader`</ph> reads this data type in little-endian format.","source":"`BinaryReader` reads this data type in little-endian format."},{"pos":[166,261],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[67124,67392],"yaml":true,"extradata":"MT"},{"content":"A 2-byte signed integer read from the current stream.","nodes":[{"pos":[0,53],"content":"A 2-byte signed integer read from the current stream.","nodes":[{"content":"A 2-byte signed integer read from the current stream.","pos":[0,53]}]}],"pos":[67525,67579],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[67745,67779],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[67885,67907],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[67995,68016],"yaml":true},{"content":"Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.","nodes":[{"pos":[0,116],"content":"Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.","nodes":[{"content":"Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.","pos":[0,116]}]}],"pos":[69467,69584],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n <xref:System.IO.BinaryReader> reads this data type in little-endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,174],"content":"<xref:System.IO.BinaryReader> reads this data type in little-endian format.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> reads this data type in little-endian format.","pos":[0,75],"source":"<xref:System.IO.BinaryReader> reads this data type in little-endian format."}]},{"pos":[181,276],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[69595,69878],"yaml":true,"extradata":"MT"},{"content":"A 4-byte signed integer read from the current stream.","nodes":[{"pos":[0,53],"content":"A 4-byte signed integer read from the current stream.","nodes":[{"content":"A 4-byte signed integer read from the current stream.","pos":[0,53]}]}],"pos":[70417,70471],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[70637,70671],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[70777,70799],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[70887,70908],"yaml":true},{"content":"Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.","nodes":[{"pos":[0,118],"content":"Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.","nodes":[{"content":"Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.","pos":[0,118]}]}],"pos":[72359,72478],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n `BinaryReader` reads this data type in little-endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,159],"content":"<ph id=\"ph1\">`BinaryReader`</ph> reads this data type in little-endian format.","source":"`BinaryReader` reads this data type in little-endian format."},{"pos":[166,261],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[72489,72757],"yaml":true,"extradata":"MT"},{"content":"An 8-byte signed integer read from the current stream.","nodes":[{"pos":[0,54],"content":"An 8-byte signed integer read from the current stream.","nodes":[{"content":"An 8-byte signed integer read from the current stream.","pos":[0,54]}]}],"pos":[72889,72944],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[73110,73144],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[73250,73272],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[73360,73381],"yaml":true},{"content":"Reads a signed byte from this stream and advances the current position of the stream by one byte.","nodes":[{"pos":[0,97],"content":"Reads a signed byte from this stream and advances the current position of the stream by one byte.","nodes":[{"content":"Reads a signed byte from this stream and advances the current position of the stream by one byte.","pos":[0,97]}]}],"pos":[74832,74930],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,194],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[74941,75140],"yaml":true,"extradata":"MT"},{"content":"A signed byte read from the current stream.","nodes":[{"pos":[0,43],"content":"A signed byte read from the current stream.","nodes":[{"content":"A signed byte read from the current stream.","pos":[0,43]}]}],"pos":[75318,75362],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[75528,75562],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[75668,75690],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[75778,75799],"yaml":true},{"content":"Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.","nodes":[{"pos":[0,122],"content":"Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.","nodes":[{"content":"Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.","pos":[0,122]}]}],"pos":[77309,77432],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n `BinaryReader` reads this data type in little-endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,159],"content":"<ph id=\"ph1\">`BinaryReader`</ph> reads this data type in little-endian format.","source":"`BinaryReader` reads this data type in little-endian format."},{"pos":[166,261],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[77443,77711],"yaml":true,"extradata":"MT"},{"content":"A 4-byte floating point value read from the current stream.","nodes":[{"pos":[0,59],"content":"A 4-byte floating point value read from the current stream.","nodes":[{"content":"A 4-byte floating point value read from the current stream.","pos":[0,59]}]}],"pos":[78254,78314],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[78481,78515],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[78621,78643],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[78731,78752],"yaml":true},{"content":"Reads a string from the current stream. The string is prefixed with the length, encoded as an integer seven bits at a time.","nodes":[{"pos":[0,123],"content":"Reads a string from the current stream. The string is prefixed with the length, encoded as an integer seven bits at a time.","nodes":[{"content":"Reads a string from the current stream. The string is prefixed with the length, encoded as an integer seven bits at a time.","pos":[0,123],"nodes":[{"content":"Reads a string from the current stream.","pos":[0,39]},{"content":"The string is prefixed with the length, encoded as an integer seven bits at a time.","pos":[40,123]}]}]}],"pos":[80226,80350],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,194],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[80361,80560],"yaml":true,"extradata":"MT"},{"content":"The string being read.","nodes":[{"pos":[0,22],"content":"The string being read.","nodes":[{"content":"The string being read.","pos":[0,22]}]}],"pos":[81104,81127],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[81294,81328],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[81434,81456],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[81544,81565],"yaml":true},{"content":"Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.","nodes":[{"pos":[0,138],"content":"Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.","nodes":[{"content":"Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.","pos":[0,138]}]}],"pos":[83022,83161],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n `BinaryReader` reads this data type in little-endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,159],"content":"<ph id=\"ph1\">`BinaryReader`</ph> reads this data type in little-endian format.","source":"`BinaryReader` reads this data type in little-endian format."},{"pos":[166,261],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[83172,83440],"yaml":true,"extradata":"MT"},{"content":"A 2-byte unsigned integer read from this stream.","nodes":[{"pos":[0,48],"content":"A 2-byte unsigned integer read from this stream.","nodes":[{"content":"A 2-byte unsigned integer read from this stream.","pos":[0,48]}]}],"pos":[83621,83670],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[83837,83871],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[83977,83999],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[84087,84108],"yaml":true},{"content":"Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.","nodes":[{"pos":[0,110],"content":"Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.","nodes":[{"content":"Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.","pos":[0,110]}]}],"pos":[85618,85729],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n `BinaryReader` reads this data type in little-endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,159],"content":"<ph id=\"ph1\">`BinaryReader`</ph> reads this data type in little-endian format.","source":"`BinaryReader` reads this data type in little-endian format."},{"pos":[166,261],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[85740,86008],"yaml":true,"extradata":"MT"},{"content":"A 4-byte unsigned integer read from this stream.","nodes":[{"pos":[0,48],"content":"A 4-byte unsigned integer read from this stream.","nodes":[{"content":"A 4-byte unsigned integer read from this stream.","pos":[0,48]}]}],"pos":[86187,86236],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[86403,86437],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[86543,86565],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[86653,86674],"yaml":true},{"content":"Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.","nodes":[{"pos":[0,112],"content":"Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.","nodes":[{"content":"Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.","pos":[0,112]}]}],"pos":[88184,88297],"yaml":true},{"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \n  \n `BinaryReader` reads this data type in little-endian format.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).","nodes":[{"pos":[0,92],"content":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.BinaryReader&gt;</ph> does not restore the file position after an unsuccessful read.","pos":[0,92],"source":"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read."}]},{"pos":[99,159],"content":"<ph id=\"ph1\">`BinaryReader`</ph> reads this data type in little-endian format.","source":"`BinaryReader` reads this data type in little-endian format."},{"pos":[166,261],"content":"For a list of common I/O tasks, see <bpt id=\"p1\">[</bpt>Common I/O Tasks<ept id=\"p1\">](~/docs/standard/io/common-i-o-tasks.md)</ept>.","source":"For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."}],"pos":[88308,88576],"yaml":true,"extradata":"MT"},{"content":"An 8-byte unsigned integer read from this stream.","nodes":[{"pos":[0,49],"content":"An 8-byte unsigned integer read from this stream.","nodes":[{"content":"An 8-byte unsigned integer read from this stream.","pos":[0,49]}]}],"pos":[88756,88806],"yaml":true},{"content":"The end of the stream is reached.","nodes":[{"pos":[0,33],"content":"The end of the stream is reached.","nodes":[{"content":"The end of the stream is reached.","pos":[0,33]}]}],"pos":[88973,89007],"yaml":true},{"content":"An I/O error occurs.","nodes":[{"pos":[0,20],"content":"An I/O error occurs.","nodes":[{"content":"An I/O error occurs.","pos":[0,20]}]}],"pos":[89095,89116],"yaml":true},{"content":"The stream is closed.","nodes":[{"pos":[0,21],"content":"The stream is closed.","nodes":[{"content":"The stream is closed.","pos":[0,21]}]}],"pos":[89222,89244],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.BinaryReader\n  commentId: T:System.IO.BinaryReader\n  id: BinaryReader\n  children:\n  - System.IO.BinaryReader.#ctor(System.IO.Stream)\n  - System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  - System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  - System.IO.BinaryReader.BaseStream\n  - System.IO.BinaryReader.Close\n  - System.IO.BinaryReader.Dispose\n  - System.IO.BinaryReader.Dispose(System.Boolean)\n  - System.IO.BinaryReader.FillBuffer(System.Int32)\n  - System.IO.BinaryReader.PeekChar\n  - System.IO.BinaryReader.Read\n  - System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)\n  - System.IO.BinaryReader.Read7BitEncodedInt\n  - System.IO.BinaryReader.ReadBoolean\n  - System.IO.BinaryReader.ReadByte\n  - System.IO.BinaryReader.ReadBytes(System.Int32)\n  - System.IO.BinaryReader.ReadChar\n  - System.IO.BinaryReader.ReadChars(System.Int32)\n  - System.IO.BinaryReader.ReadDecimal\n  - System.IO.BinaryReader.ReadDouble\n  - System.IO.BinaryReader.ReadInt16\n  - System.IO.BinaryReader.ReadInt32\n  - System.IO.BinaryReader.ReadInt64\n  - System.IO.BinaryReader.ReadSByte\n  - System.IO.BinaryReader.ReadSingle\n  - System.IO.BinaryReader.ReadString\n  - System.IO.BinaryReader.ReadUInt16\n  - System.IO.BinaryReader.ReadUInt32\n  - System.IO.BinaryReader.ReadUInt64\n  langs:\n  - csharp\n  name: BinaryReader\n  nameWithType: BinaryReader\n  fullName: System.IO.BinaryReader\n  type: Class\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads primitive data types as binary values in a specific encoding.\n  remarks: \"The <xref:System.IO.BinaryReader> class provides methods that simplify reading primitive data types from a stream. For example, you can use the <xref:System.IO.BinaryReader.ReadBoolean%2A> method to read the next byte as a Boolean value and advance the current position in the stream by one byte. The class includes read methods that support different data types.  \\n  \\n When you create a new instance of the <xref:System.IO.BinaryReader> class, you provide the stream to read from, and optionally specify the type of encoding and whether to leave the stream open after disposing the <xref:System.IO.BinaryReader> object. If you do not specify an encoding type, UTF-8 is used.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.\"\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class BinaryReader : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream)\n  commentId: M:System.IO.BinaryReader.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: BinaryReader(Stream)\n  nameWithType: BinaryReader.BinaryReader(Stream)\n  fullName: BinaryReader.BinaryReader(Stream)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.BinaryReader\"></xref> class based on the specified stream and using UTF-8 encoding.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public BinaryReader (System.IO.Stream input);\n    parameters:\n    - id: input\n      type: System.IO.Stream\n      description: The input stream.\n  overload: System.IO.BinaryReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support reading, is `null`, or is already closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  commentId: M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding)'\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: BinaryReader(Stream, Encoding)\n  nameWithType: BinaryReader.BinaryReader(Stream, Encoding)\n  fullName: BinaryReader.BinaryReader(Stream, Encoding)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.BinaryReader\"></xref> class based on the specified stream and character encoding.\n  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\n  syntax:\n    content: public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding);\n    parameters:\n    - id: input\n      type: System.IO.Stream\n      description: The input stream.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n  overload: System.IO.BinaryReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support reading, is `null`, or is already closed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>encoding</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  commentId: M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: BinaryReader(Stream, Encoding, Boolean)\n  nameWithType: BinaryReader.BinaryReader(Stream, Encoding, Boolean)\n  fullName: BinaryReader.BinaryReader(Stream, Encoding, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Initializes a new instance of the <xref href=\"System.IO.BinaryReader\"></xref> class based on the specified stream and character encoding, and optionally leaves the stream open.\n  syntax:\n    content: public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding, bool leaveOpen);\n    parameters:\n    - id: input\n      type: System.IO.Stream\n      description: The input stream.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The character encoding to use.\n    - id: leaveOpen\n      type: System.Boolean\n      description: '`true` to leave the stream open after the <xref href=\"System.IO.BinaryReader\"></xref> object is disposed; otherwise, `false`.'\n  overload: System.IO.BinaryReader.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The stream does not support reading, is `null`, or is already closed.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>encoding</code> or <code>input</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.BaseStream\n  commentId: P:System.IO.BinaryReader.BaseStream\n  id: BaseStream\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: BinaryReader.BaseStream\n  fullName: BinaryReader.BaseStream\n  type: Property\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Exposes access to the underlying stream of the <xref href=\"System.IO.BinaryReader\"></xref>.\n  remarks: \"> [!CAUTION]\\n>  Using the underlying stream while reading or while using the `BinaryReader` can cause data loss and corruption. For example, the same bytes might be read more than once, bytes might be skipped, or character reading might become unpredictable.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example shows how to read and write `Double` data to memory by using the `BinaryReader` and <xref:System.IO.BinaryWriter> classes on top of the <xref:System.IO.MemoryStream> class. `MemoryStream` only reads and writes `Byte` data.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]\"\n  syntax:\n    content: public virtual System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: The underlying stream associated with the `BinaryReader`.\n  overload: System.IO.BinaryReader.BaseStream*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.Close\n  commentId: M:System.IO.BinaryReader.Close\n  id: Close\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: BinaryReader.Close()\n  fullName: BinaryReader.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Closes the current reader and the underlying stream.\n  remarks: \"This implementation of `Close` calls the <xref:System.IO.BinaryReader.Dispose%2A> method passing a `true` value.  \\n  \\n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.Stream.Flush%2A> or `Close`. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.\"\n  syntax:\n    content: public virtual void Close ();\n    parameters: []\n  overload: System.IO.BinaryReader.Close*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.Dispose\n  commentId: M:System.IO.BinaryReader.Dispose\n  id: Dispose\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: BinaryReader.Dispose()\n  fullName: BinaryReader.Dispose()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Releases all resources used by the current instance of the <xref href=\"System.IO.BinaryReader\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.IO.BinaryReader>. The `Dispose` method leaves the <xref:System.IO.BinaryReader> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.IO.BinaryReader> so the garbage collector can reclaim the memory that the <xref:System.IO.BinaryReader> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.IO.BinaryReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.BinaryReader> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.IO.BinaryReader.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.Dispose(System.Boolean)\n  commentId: M:System.IO.BinaryReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: BinaryReader.Dispose(Boolean)\n  fullName: BinaryReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Releases the unmanaged resources used by the <xref href=\"System.IO.BinaryReader\"></xref> class and optionally releases the managed resources.\n  remarks: \"This method is called by `Dispose` and <xref:System.Object.Finalize%2A>. By default, this method specifies the `disposing` parameter as `true`. <xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.BinaryReader> references. This method invokes the `Dispose` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.IO.BinaryReader.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.FillBuffer(System.Int32)\n  commentId: M:System.IO.BinaryReader.FillBuffer(System.Int32)\n  id: FillBuffer(System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: FillBuffer(Int32)\n  nameWithType: BinaryReader.FillBuffer(Int32)\n  fullName: BinaryReader.FillBuffer(Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Fills the internal buffer with the specified number of bytes read from the stream.\n  remarks: \"The internal buffer size is the larger value between 16 and the value returned by <xref:System.Text.Encoding.GetMaxByteCount%2A> for the specified encoding.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: protected virtual void FillBuffer (int numBytes);\n    parameters:\n    - id: numBytes\n      type: System.Int32\n      description: The number of bytes to be read.\n  overload: System.IO.BinaryReader.FillBuffer*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached before <code>numBytes</code> could be read.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: Requested <code>numBytes</code> is larger than the internal buffer size.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.PeekChar\n  commentId: M:System.IO.BinaryReader.PeekChar\n  id: PeekChar\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: PeekChar()\n  nameWithType: BinaryReader.PeekChar()\n  fullName: BinaryReader.PeekChar()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Returns the next available character and does not advance the byte or character position.\n  remarks: \"If surrogate characters can be expected in the stream use the <xref:System.IO.BinaryReader.ReadChars%2A> method, then set the stream back to the original position.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public virtual int PeekChar ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The next available character, or -1 if no more characters are available or the stream does not support seeking.\n  overload: System.IO.BinaryReader.PeekChar*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The current character cannot be decoded into the internal character buffer by using the <xref href=\"System.Text.Encoding\"></xref> selected for the stream.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.Read\n  commentId: M:System.IO.BinaryReader.Read\n  id: Read\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: BinaryReader.Read()\n  fullName: BinaryReader.Read()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads characters from the underlying stream and advances the current position of the stream in accordance with the `Encoding` used and the specific character being read from the stream.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example shows how to read and write data using memory as a backing store. This example displays a list of invalid file path characters to the console. Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters. Because the list of invalid characters can vary based on the system, output for this code may also vary.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/CPP/rwreadchar.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/CS/rwreadchar.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWChar2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar2/VB/rwreadchar.vb#1)]\"\n  syntax:\n    content: public virtual int Read ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The next character from the input stream, or -1 if no characters are currently available.\n  overload: System.IO.BinaryReader.Read*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: BinaryReader.Read(Byte[], Int32, Int32)\n  fullName: BinaryReader.Read(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads the specified number of bytes from the stream, starting from a specified point in the byte array.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example shows how to write binary data by using memory as a backing store. It displays a message to the console that indicates whether the data was written correctly.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/CS/rwreadbytes.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes2/VB/rwreadbytes.vb#1)]  \\n  \\n This example reads the contents of a file and displays each byte's numeric value in 16-column format. The end of the file that is being read is detected when the <xref:System.IO.BinaryReader.Read%2A> method returns zero bytes.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source5.cs#6)]\\n [!code-vb[System.IO.BinaryReaderWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source5.vb#6)]\"\n  syntax:\n    content: public virtual int Read (byte[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to read data into.\n    - id: index\n      type: System.Int32\n      description: The starting point in the buffer at which to begin reading into the buffer.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to read.\n    return:\n      type: System.Int32\n      description: The number of bytes read into <code>buffer</code>. This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.\n  overload: System.IO.BinaryReader.Read*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The buffer length minus <code>index</code> is less than <code>count</code>.  \\n  \\n -or-  \\n  \\n The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)\n  id: Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Read(Char[], Int32, Int32)\n  nameWithType: BinaryReader.Read(Char[], Int32, Int32)\n  fullName: BinaryReader.Read(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads the specified number of characters from the stream, starting from a specified point in the character array.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following example shows how to read and write data using memory as a backing store. This example displays a list of invalid file path characters to the console. Although the code tries to display a list of all invalid file path characters, not all of the characters are within the displayable set of characters. Because the list of invalid characters can vary based on the system, output for this code may also vary.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CPP/rwreadchars.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/CS/rwreadchars.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWChars2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars2/VB/rwreadchars.vb#1)]\"\n  syntax:\n    content: public virtual int Read (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: The buffer to read data into.\n    - id: index\n      type: System.Int32\n      description: The starting point in the buffer at which to begin reading into the buffer.\n    - id: count\n      type: System.Int32\n      description: The number of characters to read.\n    return:\n      type: System.Int32\n      description: The total number of characters read into the buffer. This might be less than the number of characters requested if that many characters are not currently available, or it might be zero if the end of the stream is reached.\n  overload: System.IO.BinaryReader.Read*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The buffer length minus <code>index</code> is less than <code>count</code>.  \\n  \\n -or-  \\n  \\n The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is negative.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.Read7BitEncodedInt\n  commentId: M:System.IO.BinaryReader.Read7BitEncodedInt\n  id: Read7BitEncodedInt\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Read7BitEncodedInt()\n  nameWithType: BinaryReader.Read7BitEncodedInt()\n  fullName: BinaryReader.Read7BitEncodedInt()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads in a 32-bit integer in compressed format.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n If the integer will fit in seven bits, the integer takes only one byte of space. The integer is expected to have been written through <xref:System.IO.BinaryWriter.Write7BitEncodedInt%2A?displayProperty=fullName>.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: protected int Read7BitEncodedInt ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit integer in compressed format.\n  overload: System.IO.BinaryReader.Read7BitEncodedInt*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: The stream is corrupted.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadBoolean\n  commentId: M:System.IO.BinaryReader.ReadBoolean\n  id: ReadBoolean\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadBoolean()\n  nameWithType: BinaryReader.ReadBoolean()\n  fullName: BinaryReader.ReadBoolean()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a `Boolean` value from the current stream and advances the current position of the stream by one byte.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual bool ReadBoolean ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the byte is nonzero; otherwise, `false`.'\n  overload: System.IO.BinaryReader.ReadBoolean*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadByte\n  commentId: M:System.IO.BinaryReader.ReadByte\n  id: ReadByte\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadByte()\n  nameWithType: BinaryReader.ReadByte()\n  fullName: BinaryReader.ReadByte()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads the next byte from the current stream and advances the current position of the stream by one byte.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n Because of data formatting conflicts, using this method with the following encodings is not recommended:  \\n  \\n-   UTF-7  \\n  \\n-   ISO-2022-JP  \\n  \\n-   ISCII  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CPP/rwbyte.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/CS/rwbyte.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWByte/VB/rwbyte.vb#1)]\"\n  syntax:\n    content: public virtual byte ReadByte ();\n    parameters: []\n    return:\n      type: System.Byte\n      description: The next byte read from the current stream.\n  overload: System.IO.BinaryReader.ReadByte*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadBytes(System.Int32)\n  commentId: M:System.IO.BinaryReader.ReadBytes(System.Int32)\n  id: ReadBytes(System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadBytes(Int32)\n  nameWithType: BinaryReader.ReadBytes(Int32)\n  fullName: BinaryReader.ReadBytes(Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads the specified number of bytes from the current stream into a byte array and advances the current position by that number of bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example shows how to write binary data using memory as a backing store, and then verify that the data was written correctly.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CPP/rwbytes.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/CS/rwbytes.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWBytes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWBytes1/VB/rwbytes.vb#1)]  \\n  \\n This example reads the contents of a file and displays it to the console as dump text. The end of the file that is being read is detected when the length of the <xref:System.Byte> array returned from <xref:System.IO.BinaryReader.ReadBytes%2A> is zero.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source5.cs#6)]\\n [!code-vb[System.IO.BinaryReaderWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source5.vb#6)]\"\n  syntax:\n    content: public virtual byte[] ReadBytes (int count);\n    parameters:\n    - id: count\n      type: System.Int32\n      description: The number of bytes to read. This value must be 0 or a non-negative number or an exception will occur.\n    return:\n      type: System.Byte[]\n      description: A byte array containing data read from the underlying stream. This might be less than the number of bytes requested if the end of the stream is reached.\n  overload: System.IO.BinaryReader.ReadBytes*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>count</code> is negative.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadChar\n  commentId: M:System.IO.BinaryReader.ReadChar\n  id: ReadChar\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadChar()\n  nameWithType: BinaryReader.ReadChar()\n  fullName: BinaryReader.ReadChar()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads the next character from the current stream and advances the current position of the stream in accordance with the `Encoding` used and the specific character being read from the stream.\n  remarks: \"If the <xref:System.IO.BinaryReader.ReadChar%2A> method attempts to read a surrogate character in the stream an exception will be raised and the position in the stream will advance. The position is restored to the original location before <xref:System.IO.BinaryReader.ReadChar%2A> was called if the stream is seekable; however, if the stream is unseekable, the position will not be corrected. If surrogate characters can be expected in the stream, use the <xref:System.IO.BinaryReader.ReadChars%2A> method instead.  \\n  \\n Because of data formatting conflicts, using this method with the following encodings is not recommended:  \\n  \\n-   UTF-7  \\n  \\n-   ISO-2022-JP  \\n  \\n-   ISCII  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example shows how to read and write data using memory as a backing store.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CPP/rwchar.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/CS/rwchar.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWChar1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChar1/VB/rwchar.vb#1)]\"\n  syntax:\n    content: public virtual char ReadChar ();\n    parameters: []\n    return:\n      type: System.Char\n      description: A character read from the current stream.\n  overload: System.IO.BinaryReader.ReadChar*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A surrogate character was read.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadChars(System.Int32)\n  commentId: M:System.IO.BinaryReader.ReadChars(System.Int32)\n  id: ReadChars(System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadChars(Int32)\n  nameWithType: BinaryReader.ReadChars(Int32)\n  fullName: BinaryReader.ReadChars(Int32)\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads the specified number of characters from the current stream, returns the data in a character array, and advances the current position in accordance with the `Encoding` used and the specific character being read from the stream.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read operation.  \\n  \\n When reading from network streams, in some rare cases, the <xref:System.IO.BinaryReader.ReadChars%2A> method might read an extra character from the stream if the <xref:System.IO.BinaryReader> was constructed with Unicode encoding. If this occurs, you can use the <xref:System.IO.BinaryReader.ReadBytes%2A> method to read a fixed-length byte array, and then pass that array to the <xref:System.IO.BinaryReader.ReadChars%2A> method.\"\n  example:\n  - \"The following code example shows how to read and write data using memory as a backing store.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CPP/rwchars.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/CS/rwchars.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWChars1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWChars1/VB/rwchars.vb#1)]\"\n  syntax:\n    content: public virtual char[] ReadChars (int count);\n    parameters:\n    - id: count\n      type: System.Int32\n      description: The number of characters to read.\n    return:\n      type: System.Char[]\n      description: A character array containing data read from the underlying stream. This might be less than the number of characters requested if the end of the stream is reached.\n  overload: System.IO.BinaryReader.ReadChars*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of decoded characters to read is greater than <code>count</code>. This can happen if a Unicode decoder returns fallback characters or a surrogate pair.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>count</code> is negative.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadDecimal\n  commentId: M:System.IO.BinaryReader.ReadDecimal\n  id: ReadDecimal\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadDecimal()\n  nameWithType: BinaryReader.ReadDecimal()\n  fullName: BinaryReader.ReadDecimal()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a decimal value from the current stream and advances the current position of the stream by sixteen bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public virtual decimal ReadDecimal ();\n    parameters: []\n    return:\n      type: System.Decimal\n      description: A decimal value read from the current stream.\n  overload: System.IO.BinaryReader.ReadDecimal*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadDouble\n  commentId: M:System.IO.BinaryReader.ReadDouble\n  id: ReadDouble\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadDouble()\n  nameWithType: BinaryReader.ReadDouble()\n  fullName: BinaryReader.ReadDouble()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads an 8-byte floating point value from the current stream and advances the current position of the stream by eight bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n `BinaryReader` reads this data type in little-endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example shows how to read and write `Double` data to memory by using the `BinaryReader` and <xref:System.IO.BinaryWriter> classes on top of the <xref:System.IO.MemoryStream> class. `MemoryStream` only reads and writes `Byte` data.  \\n  \\n [!code-cpp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CPP/rwdouble.cpp#1)]\\n [!code-csharp[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/CS/rwdouble.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter.RWDouble#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter.RWDouble/VB/rwdouble.vb#1)]\"\n  syntax:\n    content: public virtual double ReadDouble ();\n    parameters: []\n    return:\n      type: System.Double\n      description: An 8-byte floating point value read from the current stream.\n  overload: System.IO.BinaryReader.ReadDouble*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadInt16\n  commentId: M:System.IO.BinaryReader.ReadInt16\n  id: ReadInt16\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadInt16()\n  nameWithType: BinaryReader.ReadInt16()\n  fullName: BinaryReader.ReadInt16()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a 2-byte signed integer from the current stream and advances the current position of the stream by two bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n `BinaryReader` reads this data type in little-endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public virtual short ReadInt16 ();\n    parameters: []\n    return:\n      type: System.Int16\n      description: A 2-byte signed integer read from the current stream.\n  overload: System.IO.BinaryReader.ReadInt16*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadInt32\n  commentId: M:System.IO.BinaryReader.ReadInt32\n  id: ReadInt32\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadInt32()\n  nameWithType: BinaryReader.ReadInt32()\n  fullName: BinaryReader.ReadInt32()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a 4-byte signed integer from the current stream and advances the current position of the stream by four bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n <xref:System.IO.BinaryReader> reads this data type in little-endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual int ReadInt32 ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 4-byte signed integer read from the current stream.\n  overload: System.IO.BinaryReader.ReadInt32*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadInt64\n  commentId: M:System.IO.BinaryReader.ReadInt64\n  id: ReadInt64\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadInt64()\n  nameWithType: BinaryReader.ReadInt64()\n  fullName: BinaryReader.ReadInt64()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads an 8-byte signed integer from the current stream and advances the current position of the stream by eight bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n `BinaryReader` reads this data type in little-endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: public virtual long ReadInt64 ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: An 8-byte signed integer read from the current stream.\n  overload: System.IO.BinaryReader.ReadInt64*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadSByte\n  commentId: M:System.IO.BinaryReader.ReadSByte\n  id: ReadSByte\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadSByte()\n  nameWithType: BinaryReader.ReadSByte()\n  fullName: BinaryReader.ReadSByte()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a signed byte from this stream and advances the current position of the stream by one byte.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public virtual sbyte ReadSByte ();\n    parameters: []\n    return:\n      type: System.SByte\n      description: A signed byte read from the current stream.\n  overload: System.IO.BinaryReader.ReadSByte*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadSingle\n  commentId: M:System.IO.BinaryReader.ReadSingle\n  id: ReadSingle\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadSingle()\n  nameWithType: BinaryReader.ReadSingle()\n  fullName: BinaryReader.ReadSingle()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a 4-byte floating point value from the current stream and advances the current position of the stream by four bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n `BinaryReader` reads this data type in little-endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual float ReadSingle ();\n    parameters: []\n    return:\n      type: System.Single\n      description: A 4-byte floating point value read from the current stream.\n  overload: System.IO.BinaryReader.ReadSingle*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadString\n  commentId: M:System.IO.BinaryReader.ReadString\n  id: ReadString\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadString()\n  nameWithType: BinaryReader.ReadString()\n  fullName: BinaryReader.ReadString()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a string from the current stream. The string is prefixed with the length, encoded as an integer seven bits at a time.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  example:\n  - \"The following code example demonstrates how to store and retrieve application settings in a file.  \\n  \\n [!code-csharp[System.IO.BinaryReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/CS/source.cs#1)]\\n [!code-vb[System.IO.BinaryReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.BinaryReaderWriter/VB/source.vb#1)]\"\n  syntax:\n    content: public virtual string ReadString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string being read.\n  overload: System.IO.BinaryReader.ReadString*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadUInt16\n  commentId: M:System.IO.BinaryReader.ReadUInt16\n  id: ReadUInt16\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadUInt16()\n  nameWithType: BinaryReader.ReadUInt16()\n  fullName: BinaryReader.ReadUInt16()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a 2-byte unsigned integer from the current stream using little-endian encoding and advances the position of the stream by two bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n `BinaryReader` reads this data type in little-endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public virtual ushort ReadUInt16 ();\n    parameters: []\n    return:\n      type: System.UInt16\n      description: A 2-byte unsigned integer read from this stream.\n  overload: System.IO.BinaryReader.ReadUInt16*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadUInt32\n  commentId: M:System.IO.BinaryReader.ReadUInt32\n  id: ReadUInt32\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadUInt32()\n  nameWithType: BinaryReader.ReadUInt32()\n  fullName: BinaryReader.ReadUInt32()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads a 4-byte unsigned integer from the current stream and advances the position of the stream by four bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n `BinaryReader` reads this data type in little-endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public virtual uint ReadUInt32 ();\n    parameters: []\n    return:\n      type: System.UInt32\n      description: A 4-byte unsigned integer read from this stream.\n  overload: System.IO.BinaryReader.ReadUInt32*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.IO.BinaryReader.ReadUInt64\n  commentId: M:System.IO.BinaryReader.ReadUInt64\n  id: ReadUInt64\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadUInt64()\n  nameWithType: BinaryReader.ReadUInt64()\n  fullName: BinaryReader.ReadUInt64()\n  type: Method\n  assemblies:\n  - System.IO\n  - mscorlib\n  - netstandard\n  - System.Runtime.Extensions\n  namespace: System.IO\n  summary: Reads an 8-byte unsigned integer from the current stream and advances the position of the stream by eight bytes.\n  remarks: \"<xref:System.IO.BinaryReader> does not restore the file position after an unsuccessful read.  \\n  \\n `BinaryReader` reads this data type in little-endian format.  \\n  \\n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public virtual ulong ReadUInt64 ();\n    parameters: []\n    return:\n      type: System.UInt64\n      description: An 8-byte unsigned integer read from this stream.\n  overload: System.IO.BinaryReader.ReadUInt64*\n  exceptions:\n  - type: System.IO.EndOfStreamException\n    commentId: T:System.IO.EndOfStreamException\n    description: The end of the stream is reached.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The stream is closed.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IO.EndOfStreamException\n  parent: System.IO\n  isExternal: false\n  name: EndOfStreamException\n  nameWithType: EndOfStreamException\n  fullName: System.IO.EndOfStreamException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BinaryReader(Stream)\n  nameWithType: BinaryReader.BinaryReader(Stream)\n  fullName: BinaryReader.BinaryReader(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BinaryReader(Stream, Encoding)\n  nameWithType: BinaryReader.BinaryReader(Stream, Encoding)\n  fullName: BinaryReader.BinaryReader(Stream, Encoding)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BinaryReader(Stream, Encoding, Boolean)\n  nameWithType: BinaryReader.BinaryReader(Stream, Encoding, Boolean)\n  fullName: BinaryReader.BinaryReader(Stream, Encoding, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.BinaryReader.BaseStream\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BaseStream\n  nameWithType: BinaryReader.BaseStream\n  fullName: BinaryReader.BaseStream\n- uid: System.IO.BinaryReader.Close\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Close()\n  nameWithType: BinaryReader.Close()\n  fullName: BinaryReader.Close()\n- uid: System.IO.BinaryReader.Dispose\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Dispose()\n  nameWithType: BinaryReader.Dispose()\n  fullName: BinaryReader.Dispose()\n- uid: System.IO.BinaryReader.Dispose(System.Boolean)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: BinaryReader.Dispose(Boolean)\n  fullName: BinaryReader.Dispose(Boolean)\n- uid: System.IO.BinaryReader.FillBuffer(System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: FillBuffer(Int32)\n  nameWithType: BinaryReader.FillBuffer(Int32)\n  fullName: BinaryReader.FillBuffer(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.PeekChar\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: PeekChar()\n  nameWithType: BinaryReader.PeekChar()\n  fullName: BinaryReader.PeekChar()\n- uid: System.IO.BinaryReader.Read\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read()\n  nameWithType: BinaryReader.Read()\n  fullName: BinaryReader.Read()\n- uid: System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: BinaryReader.Read(Byte[], Int32, Int32)\n  fullName: BinaryReader.Read(Byte[], Int32, Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read(Char[], Int32, Int32)\n  nameWithType: BinaryReader.Read(Char[], Int32, Int32)\n  fullName: BinaryReader.Read(Char[], Int32, Int32)\n- uid: System.Char\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Char[]\n  parent: System\n  isExternal: false\n  name: Char[]\n  nameWithType: Char[]\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.IO.BinaryReader.Read7BitEncodedInt\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read7BitEncodedInt()\n  nameWithType: BinaryReader.Read7BitEncodedInt()\n  fullName: BinaryReader.Read7BitEncodedInt()\n- uid: System.IO.BinaryReader.ReadBoolean\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadBoolean()\n  nameWithType: BinaryReader.ReadBoolean()\n  fullName: BinaryReader.ReadBoolean()\n- uid: System.IO.BinaryReader.ReadByte\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadByte()\n  nameWithType: BinaryReader.ReadByte()\n  fullName: BinaryReader.ReadByte()\n- uid: System.IO.BinaryReader.ReadBytes(System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadBytes(Int32)\n  nameWithType: BinaryReader.ReadBytes(Int32)\n  fullName: BinaryReader.ReadBytes(Int32)\n- uid: System.IO.BinaryReader.ReadChar\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadChar()\n  nameWithType: BinaryReader.ReadChar()\n  fullName: BinaryReader.ReadChar()\n- uid: System.IO.BinaryReader.ReadChars(System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadChars(Int32)\n  nameWithType: BinaryReader.ReadChars(Int32)\n  fullName: BinaryReader.ReadChars(Int32)\n- uid: System.IO.BinaryReader.ReadDecimal\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadDecimal()\n  nameWithType: BinaryReader.ReadDecimal()\n  fullName: BinaryReader.ReadDecimal()\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.IO.BinaryReader.ReadDouble\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadDouble()\n  nameWithType: BinaryReader.ReadDouble()\n  fullName: BinaryReader.ReadDouble()\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.IO.BinaryReader.ReadInt16\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadInt16()\n  nameWithType: BinaryReader.ReadInt16()\n  fullName: BinaryReader.ReadInt16()\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IO.BinaryReader.ReadInt32\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadInt32()\n  nameWithType: BinaryReader.ReadInt32()\n  fullName: BinaryReader.ReadInt32()\n- uid: System.IO.BinaryReader.ReadInt64\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadInt64()\n  nameWithType: BinaryReader.ReadInt64()\n  fullName: BinaryReader.ReadInt64()\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.BinaryReader.ReadSByte\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadSByte()\n  nameWithType: BinaryReader.ReadSByte()\n  fullName: BinaryReader.ReadSByte()\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.IO.BinaryReader.ReadSingle\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadSingle()\n  nameWithType: BinaryReader.ReadSingle()\n  fullName: BinaryReader.ReadSingle()\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.IO.BinaryReader.ReadString\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadString()\n  nameWithType: BinaryReader.ReadString()\n  fullName: BinaryReader.ReadString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.BinaryReader.ReadUInt16\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadUInt16()\n  nameWithType: BinaryReader.ReadUInt16()\n  fullName: BinaryReader.ReadUInt16()\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.IO.BinaryReader.ReadUInt32\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadUInt32()\n  nameWithType: BinaryReader.ReadUInt32()\n  fullName: BinaryReader.ReadUInt32()\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IO.BinaryReader.ReadUInt64\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadUInt64()\n  nameWithType: BinaryReader.ReadUInt64()\n  fullName: BinaryReader.ReadUInt64()\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.IO.BinaryReader.#ctor*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BinaryReader\n  nameWithType: BinaryReader.BinaryReader\n  fullName: BinaryReader.BinaryReader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.BaseStream*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BaseStream\n  nameWithType: BinaryReader.BaseStream\n  fullName: BinaryReader.BaseStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.Close*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Close\n  nameWithType: BinaryReader.Close\n  fullName: BinaryReader.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.Dispose*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Dispose\n  nameWithType: BinaryReader.Dispose\n  fullName: BinaryReader.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.FillBuffer*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: FillBuffer\n  nameWithType: BinaryReader.FillBuffer\n  fullName: BinaryReader.FillBuffer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.PeekChar*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: PeekChar\n  nameWithType: BinaryReader.PeekChar\n  fullName: BinaryReader.PeekChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.Read*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read\n  nameWithType: BinaryReader.Read\n  fullName: BinaryReader.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.Read7BitEncodedInt*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read7BitEncodedInt\n  nameWithType: BinaryReader.Read7BitEncodedInt\n  fullName: BinaryReader.Read7BitEncodedInt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadBoolean*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadBoolean\n  nameWithType: BinaryReader.ReadBoolean\n  fullName: BinaryReader.ReadBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadByte*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadByte\n  nameWithType: BinaryReader.ReadByte\n  fullName: BinaryReader.ReadByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadBytes*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadBytes\n  nameWithType: BinaryReader.ReadBytes\n  fullName: BinaryReader.ReadBytes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadChar*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadChar\n  nameWithType: BinaryReader.ReadChar\n  fullName: BinaryReader.ReadChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadChars*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadChars\n  nameWithType: BinaryReader.ReadChars\n  fullName: BinaryReader.ReadChars\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadDecimal*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadDecimal\n  nameWithType: BinaryReader.ReadDecimal\n  fullName: BinaryReader.ReadDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadDouble*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadDouble\n  nameWithType: BinaryReader.ReadDouble\n  fullName: BinaryReader.ReadDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadInt16*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadInt16\n  nameWithType: BinaryReader.ReadInt16\n  fullName: BinaryReader.ReadInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadInt32*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadInt32\n  nameWithType: BinaryReader.ReadInt32\n  fullName: BinaryReader.ReadInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadInt64*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadInt64\n  nameWithType: BinaryReader.ReadInt64\n  fullName: BinaryReader.ReadInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadSByte*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadSByte\n  nameWithType: BinaryReader.ReadSByte\n  fullName: BinaryReader.ReadSByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadSingle*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadSingle\n  nameWithType: BinaryReader.ReadSingle\n  fullName: BinaryReader.ReadSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadString*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadString\n  nameWithType: BinaryReader.ReadString\n  fullName: BinaryReader.ReadString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadUInt16*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadUInt16\n  nameWithType: BinaryReader.ReadUInt16\n  fullName: BinaryReader.ReadUInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadUInt32*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadUInt32\n  nameWithType: BinaryReader.ReadUInt32\n  fullName: BinaryReader.ReadUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.IO.BinaryReader.ReadUInt64*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadUInt64\n  nameWithType: BinaryReader.ReadUInt64\n  fullName: BinaryReader.ReadUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/BinaryReader.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}