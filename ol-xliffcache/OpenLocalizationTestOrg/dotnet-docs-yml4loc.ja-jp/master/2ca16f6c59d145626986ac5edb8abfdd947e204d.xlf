<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ca16f6c59d145626986ac5edb8abfdd947e204d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.VisualCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d419af64fca5e3d19cf3d13731f6c260bfff4526</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3673612f436b54acb303f9d2ce36994b6f33fa66</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an ordered collection of <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> has implied context affinity.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a procedure attempts to access the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> from a different context than the context of the owning <ph id="ph2">&lt;xref:System.Windows.Media.ContainerVisual&gt;</ph>, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The parent visual object whose <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Appends a <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> to the end of the <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> whose value is <ph id="ph2">`null`</ph> is permitted and does not raise an exception.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Add%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use these methods, you must define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> to append to the <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The index in the collection at which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">visual</ph><ept id="p1">&lt;/code&gt;</ept> was added.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ArgumentException"&gt;&lt;/xref&gt;</ph> is thrown if the <ph id="ph2">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> is a root element.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of elements that the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> can contain.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of visuals that are actually in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is always greater than or equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The number of elements that the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> can contain.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection.Capacity"&gt;&lt;/xref&gt;</ph> is set to a value that is less than <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Removes all elements from the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is reset to zero.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> remains unchanged.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reset the capacity of the <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, set the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> property to the desired size.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> value that indicates whether the specified <ph id="ph2">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> is contained in the collection.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The worst-case runtime scenario of this function is <ph id="ph1">`O(n)`</ph>, where <ph id="ph2">`n`</ph> is the number of items in the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> to search for in the collection.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">visual</ph><ept id="p1">&lt;/code&gt;</ept> is contained in the collection; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Copies the items in the collection to an array, starting at a specific array index.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The one-dimensional <ph id="ph1">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> that is the destination of the elements that are copied from the <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The zero-based index in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> at which copying begins.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Copies the current collection into the passed <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> array.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> objects (which must have zero-based indexing).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The index to start copying from within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the number of elements in the collection.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is the number of elements that are actually in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> is the number of elements that the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is capable of storing.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> is always less than or equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> exceeds <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The number of elements that the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> contains.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Retrieves an enumerator that can iterate through the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An enumerator that can be used to iterate through the collection.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns the zero-based index of the <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, -1 is returned.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`null`</ph> is passed to the method, the index of the first entry that has <ph id="ph2">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no null entry, -1 is returned.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> to locate in the <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The index of the <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Inserts an element into the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> at the specified index.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph> already equals <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Capacity%2A&gt;</ph>, the capacity of the <ph id="ph3">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> is increased before the new <ph id="ph4">&lt;xref:System.Windows.Media.Visual&gt;</ph> is inserted.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection.Count%2A&gt;</ph>, <ph id="ph3">`visual`</ph> is added to the end of <ph id="ph4">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any existing visual objects that are equal to or greater than <ph id="ph1">`index`</ph> are shifted to accommodate the new <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>, and their index values are updated.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Insert%2A&gt;</ph> method also sets up the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The zero-based index at which the value should be inserted.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> to insert into the <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is always <ph id="ph1">`false`</ph> for all <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether access to the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> is synchronized (thread-safe).</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is always <ph id="ph1">`false`</ph> for all <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> is synchronized (thread-safe).</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> that is stored at the zero-based index of the <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides the ability to access a specific <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> in the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph> by using an index.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The zero-based index of the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph> from which to get or set the <ph id="ph2">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> that is stored at <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">index</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph3">&lt;xref href="System.Windows.Media.VisualCollection.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The new child element already has a parent, or the value at the specified index is not <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Removes the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> object from the <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`visual`</ph> is <ph id="ph2">`null`</ph>, the first <ph id="ph3">`null`</ph> entry is removed.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that removing a <ph id="ph1">`null`</ph> entry is linear in the size of the collection.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.Remove%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> to remove from the <ph id="ph2">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Removes the visual object at the specified index in the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveAt%2A&gt;</ph> method also removes the parent-child relationship between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the child <ph id="ph3">`visual`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The zero-based index of the visual to remove.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero, or <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph3">&lt;xref href="System.Windows.Media.VisualCollection.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Removes a range of visual objects from the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection.RemoveRange%2A&gt;</ph> method also removes the parent-child relationships between the parent visual, which is the owner of the <ph id="ph2">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>, and the range of child visuals.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.AddVisualChild%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Visual.RemoveVisualChild%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use these methods, you define your own storage implementation, and do not use <ph id="ph1">&lt;xref:System.Windows.Media.VisualCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The zero-based index of the range of elements to remove.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The number of elements to remove.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not refer to a valid range of elements in the <ph id="ph3">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;xref href="System.Windows.Media.VisualCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A value of type <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Collections.IEnumerable.GetEnumerator"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An object that can be used to iterate through the collection.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>