{"nodes":[{"content":"Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).","nodes":[{"pos":[0,164],"content":"Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).","nodes":[{"content":"Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).","pos":[0,164]}]}],"pos":[1138,1303],"yaml":true},{"content":"An <xref:System.Windows.Input.AccessKeyManager> object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.  \n  \n The <xref:System.Windows.Input.AccessKeyManager> is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.  \n  \n When the registered access key is pressed, the <xref:System.Windows.Input.AccessKeyManager> calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.  \n  \n An element can be associated with any number of access keys.","nodes":[{"pos":[0,132],"content":"An <xref:System.Windows.Input.AccessKeyManager> object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> object is created on demand with one per <ph id=\"ph2\">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph>.","pos":[0,132],"source":"An <xref:System.Windows.Input.AccessKeyManager> object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>."}]},{"pos":[139,437],"content":"The <xref:System.Windows.Input.AccessKeyManager> is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> is attached as an event handler for <ph id=\"ph2\">&lt;xref:System.Windows.Input.InputManager.PostProcessInput&gt;</ph> and exposes methods to <ph id=\"ph3\">&lt;xref:System.Windows.Input.AccessKeyManager.Register%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Input.AccessKeyManager.Unregister%2A&gt;</ph> access keys.","pos":[0,298],"source":"The <xref:System.Windows.Input.AccessKeyManager> is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys."}]},{"pos":[444,622],"content":"When the registered access key is pressed, the <xref:System.Windows.Input.AccessKeyManager> calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.","nodes":[{"content":"When the registered access key is pressed, the <ph id=\"ph1\">&lt;xref:System.Windows.Input.AccessKeyManager&gt;</ph> calls the <ph id=\"ph2\">&lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt;</ph> method on the target element.","pos":[0,178],"source":"When the registered access key is pressed, the <xref:System.Windows.Input.AccessKeyManager> calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element."}]},{"pos":[629,689],"content":"An element can be associated with any number of access keys.","nodes":[{"content":"An element can be associated with any number of access keys.","pos":[0,60]}]}],"pos":[1314,2012],"yaml":true,"extradata":"MT"},{"content":"Identifies the <xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"></xref> routed event.","nodes":[{"pos":[0,104],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"&gt;&lt;/xref&gt;</ph> routed event.","source":"Identifies the <xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"></xref> routed event."}],"pos":[3416,3521],"yaml":true},{"content":"Adds a handler for the <xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"></xref> attached event.","nodes":[{"pos":[0,114],"content":"Adds a handler for the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"&gt;&lt;/xref&gt;</ph> attached event.","source":"Adds a handler for the <xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"></xref> attached event."}],"pos":[5131,5246],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[5514,5646],"yaml":true},{"content":"The event handler to be added.","nodes":[{"pos":[0,30],"content":"The event handler to be added.","nodes":[{"content":"The event handler to be added.","pos":[0,30]}]}],"pos":[5745,5776],"yaml":true},{"content":"Indicates whether the specified key is registered as an access keys in the specified scope.","nodes":[{"pos":[0,91],"content":"Indicates whether the specified key is registered as an access keys in the specified scope.","nodes":[{"content":"Indicates whether the specified key is registered as an access keys in the specified scope.","pos":[0,91]}]}],"pos":[6949,7041],"yaml":true},{"content":"The presentation source to query for <code>key</code>.","nodes":[{"pos":[0,54],"content":"The presentation source to query for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The presentation source to query for <code>key</code>."}],"pos":[7204,7259],"yaml":true},{"content":"The key to query.","nodes":[{"pos":[0,17],"content":"The key to query.","nodes":[{"content":"The key to query.","pos":[0,17]}]}],"pos":[7318,7336],"yaml":true},{"content":"`true` if the key is registered; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if the key is registered; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the key is registered; otherwise, `false`."}],"pos":[7394,7449],"yaml":true},{"content":"Processes the specified access keys as if a <xref href=\"System.Windows.UIElement.KeyDown\"></xref> event for the key was passed to the <xref href=\"System.Windows.Input.AccessKeyManager\"></xref>.","nodes":[{"pos":[0,193],"content":"Processes the specified access keys as if a <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement.KeyDown\"&gt;&lt;/xref&gt;</ph> event for the key was passed to the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Input.AccessKeyManager\"&gt;&lt;/xref&gt;</ph>.","source":"Processes the specified access keys as if a <xref href=\"System.Windows.UIElement.KeyDown\"></xref> event for the key was passed to the <xref href=\"System.Windows.Input.AccessKeyManager\"></xref>."}],"pos":[8653,8847],"yaml":true},{"content":"The scope for the access key.","nodes":[{"pos":[0,29],"content":"The scope for the access key.","nodes":[{"content":"The scope for the access key.","pos":[0,29]}]}],"pos":[9073,9103],"yaml":true},{"content":"The access key.","nodes":[{"pos":[0,15],"content":"The access key.","nodes":[{"content":"The access key.","pos":[0,15]}]}],"pos":[9162,9178],"yaml":true},{"content":"Indicates if <code>key</code> has multiple matches.","nodes":[{"pos":[0,51],"content":"Indicates if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> has multiple matches.","source":"Indicates if <code>key</code> has multiple matches."}],"pos":[9245,9297],"yaml":true},{"content":"`true` if there are more keys that match; otherwise, `false`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">`true`</ph> if there are more keys that match; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if there are more keys that match; otherwise, `false`."}],"pos":[9355,9419],"yaml":true},{"content":"Associates the specified access keys with the specified element.","nodes":[{"pos":[0,64],"content":"Associates the specified access keys with the specified element.","nodes":[{"content":"Associates the specified access keys with the specified element.","pos":[0,64]}]}],"pos":[10666,10731],"yaml":true},{"content":"When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of `element` is called.  \n  \n An element can be associated with any number of access keys.","nodes":[{"pos":[0,115],"content":"When the access keys is pressed, the  <ph id=\"ph1\">&lt;xref:System.Windows.UIElement.OnAccessKey%2A&gt;</ph> method of <ph id=\"ph2\">`element`</ph> is called.","source":"When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of `element` is called."},{"pos":[122,182],"content":"An element can be associated with any number of access keys.","nodes":[{"content":"An element can be associated with any number of access keys.","pos":[0,60]}]}],"pos":[10742,10929],"yaml":true,"extradata":"MT"},{"content":"The access key.","nodes":[{"pos":[0,15],"content":"The access key.","nodes":[{"content":"The access key.","pos":[0,15]}]}],"pos":[11107,11123],"yaml":true},{"content":"The element to associate <code>key</code> with.","nodes":[{"pos":[0,47],"content":"The element to associate <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept> with.","source":"The element to associate <code>key</code> with."}],"pos":[11201,11249],"yaml":true},{"content":"Removes the specified <xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"></xref> event handler from the specified object.","nodes":[{"pos":[0,138],"content":"Removes the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"&gt;&lt;/xref&gt;</ph> event handler from the specified object.","source":"Removes the specified <xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"></xref> event handler from the specified object."}],"pos":[12768,12907],"yaml":true},{"content":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.UIElement\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.ContentElement\"&gt;&lt;/xref&gt;</ph> that listens to this event.","source":"The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event."}],"pos":[13178,13310],"yaml":true},{"content":"The event handler to be removed.","nodes":[{"pos":[0,32],"content":"The event handler to be removed.","nodes":[{"content":"The event handler to be removed.","pos":[0,32]}]}],"pos":[13409,13442],"yaml":true},{"content":"Disassociates the specified access keys from the specified element.","nodes":[{"pos":[0,67],"content":"Disassociates the specified access keys from the specified element.","nodes":[{"content":"Disassociates the specified access keys from the specified element.","pos":[0,67]}]}],"pos":[14654,14722],"yaml":true},{"content":"The access key.","nodes":[{"pos":[0,15],"content":"The access key.","nodes":[{"content":"The access key.","pos":[0,15]}]}],"pos":[14902,14918],"yaml":true},{"content":"The element from which to disassociate <code>key</code>.","nodes":[{"pos":[0,56],"content":"The element from which to disassociate <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">key</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The element from which to disassociate <code>key</code>."}],"pos":[14996,15053],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.AccessKeyManager\n  commentId: T:System.Windows.Input.AccessKeyManager\n  id: AccessKeyManager\n  children:\n  - System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\n  - System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  - System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)\n  - System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)\n  - System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)\n  - System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  - System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)\n  langs:\n  - csharp\n  name: AccessKeyManager\n  nameWithType: AccessKeyManager\n  fullName: System.Windows.Input.AccessKeyManager\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Maintains the registration of all access keys and the handling of interop keyboard commands between Windows Forms, Win32, and Windows Presentation Foundation (WPF).\n  remarks: \"An <xref:System.Windows.Input.AccessKeyManager> object is created on demand with one per <xref:System.Windows.Threading.Dispatcher>.  \\n  \\n The <xref:System.Windows.Input.AccessKeyManager> is attached as an event handler for <xref:System.Windows.Input.InputManager.PostProcessInput> and exposes methods to <xref:System.Windows.Input.AccessKeyManager.Register%2A> and <xref:System.Windows.Input.AccessKeyManager.Unregister%2A> access keys.  \\n  \\n When the registered access key is pressed, the <xref:System.Windows.Input.AccessKeyManager> calls the <xref:System.Windows.UIElement.OnAccessKey%2A> method on the target element.  \\n  \\n An element can be associated with any number of access keys.\"\n  syntax:\n    content: public sealed class AccessKeyManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\n  commentId: F:System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\n  id: AccessKeyPressedEvent\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: AccessKeyPressedEvent\n  nameWithType: AccessKeyManager.AccessKeyPressedEvent\n  fullName: AccessKeyManager.AccessKeyPressedEvent\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Identifies the <xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"></xref> routed event.\n  syntax:\n    content: public static readonly System.Windows.RoutedEvent AccessKeyPressedEvent;\n    return:\n      type: System.Windows.RoutedEvent\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  commentId: M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  id: AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: AddAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  fullName: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Adds a handler for the <xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"></xref> attached event.\n  syntax:\n    content: public static void AddAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.AccessKeyPressedEventHandler\n      description: The event handler to be added.\n  overload: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)\n  commentId: M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)\n  id: IsKeyRegistered(System.Object,System.String)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: IsKeyRegistered(Object, String)\n  nameWithType: AccessKeyManager.IsKeyRegistered(Object, String)\n  fullName: AccessKeyManager.IsKeyRegistered(Object, String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Indicates whether the specified key is registered as an access keys in the specified scope.\n  syntax:\n    content: public static bool IsKeyRegistered (object scope, string key);\n    parameters:\n    - id: scope\n      type: System.Object\n      description: The presentation source to query for <code>key</code>.\n    - id: key\n      type: System.String\n      description: The key to query.\n    return:\n      type: System.Boolean\n      description: '`true` if the key is registered; otherwise, `false`.'\n  overload: System.Windows.Input.AccessKeyManager.IsKeyRegistered*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)\n  commentId: M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)\n  id: ProcessKey(System.Object,System.String,System.Boolean)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: ProcessKey(Object, String, Boolean)\n  nameWithType: AccessKeyManager.ProcessKey(Object, String, Boolean)\n  fullName: AccessKeyManager.ProcessKey(Object, String, Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Processes the specified access keys as if a <xref href=\"System.Windows.UIElement.KeyDown\"></xref> event for the key was passed to the <xref href=\"System.Windows.Input.AccessKeyManager\"></xref>.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public static bool ProcessKey (object scope, string key, bool isMultiple);\n    parameters:\n    - id: scope\n      type: System.Object\n      description: The scope for the access key.\n    - id: key\n      type: System.String\n      description: The access key.\n    - id: isMultiple\n      type: System.Boolean\n      description: Indicates if <code>key</code> has multiple matches.\n    return:\n      type: System.Boolean\n      description: '`true` if there are more keys that match; otherwise, `false`.'\n  overload: System.Windows.Input.AccessKeyManager.ProcessKey*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)\n  id: Register(System.String,System.Windows.IInputElement)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: Register(String, IInputElement)\n  nameWithType: AccessKeyManager.Register(String, IInputElement)\n  fullName: AccessKeyManager.Register(String, IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Associates the specified access keys with the specified element.\n  remarks: \"When the access keys is pressed, the  <xref:System.Windows.UIElement.OnAccessKey%2A> method of `element` is called.  \\n  \\n An element can be associated with any number of access keys.\"\n  syntax:\n    content: public static void Register (string key, System.Windows.IInputElement element);\n    parameters:\n    - id: key\n      type: System.String\n      description: The access key.\n    - id: element\n      type: System.Windows.IInputElement\n      description: The element to associate <code>key</code> with.\n  overload: System.Windows.Input.AccessKeyManager.Register*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  commentId: M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  id: RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: RemoveAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  fullName: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Removes the specified <xref href=\"System.Windows.Input.AccessKeyManager.AccessKeyPressed\"></xref> event handler from the specified object.\n  syntax:\n    content: public static void RemoveAccessKeyPressedHandler (System.Windows.DependencyObject element, System.Windows.Input.AccessKeyPressedEventHandler handler);\n    parameters:\n    - id: element\n      type: System.Windows.DependencyObject\n      description: The <xref href=\"System.Windows.UIElement\"></xref> or <xref href=\"System.Windows.ContentElement\"></xref> that listens to this event.\n    - id: handler\n      type: System.Windows.Input.AccessKeyPressedEventHandler\n      description: The event handler to be removed.\n  overload: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)\n  commentId: M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)\n  id: Unregister(System.String,System.Windows.IInputElement)\n  parent: System.Windows.Input.AccessKeyManager\n  langs:\n  - csharp\n  name: Unregister(String, IInputElement)\n  nameWithType: AccessKeyManager.Unregister(String, IInputElement)\n  fullName: AccessKeyManager.Unregister(String, IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  summary: Disassociates the specified access keys from the specified element.\n  syntax:\n    content: public static void Unregister (string key, System.Windows.IInputElement element);\n    parameters:\n    - id: key\n      type: System.String\n      description: The access key.\n    - id: element\n      type: System.Windows.IInputElement\n      description: The element from which to disassociate <code>key</code>.\n  overload: System.Windows.Input.AccessKeyManager.Unregister*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.AccessKeyManager.AccessKeyPressedEvent\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: AccessKeyPressedEvent\n  nameWithType: AccessKeyManager.AccessKeyPressedEvent\n  fullName: AccessKeyManager.AccessKeyPressedEvent\n- uid: System.Windows.RoutedEvent\n  parent: System.Windows\n  isExternal: false\n  name: RoutedEvent\n  nameWithType: RoutedEvent\n  fullName: System.Windows.RoutedEvent\n- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: AddAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  fullName: AccessKeyManager.AddAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Input.AccessKeyPressedEventHandler\n  parent: System.Windows.Input\n  isExternal: false\n  name: AccessKeyPressedEventHandler\n  nameWithType: AccessKeyPressedEventHandler\n  fullName: System.Windows.Input.AccessKeyPressedEventHandler\n- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: IsKeyRegistered(Object, String)\n  nameWithType: AccessKeyManager.IsKeyRegistered(Object, String)\n  fullName: AccessKeyManager.IsKeyRegistered(Object, String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: ProcessKey(Object, String, Boolean)\n  nameWithType: AccessKeyManager.ProcessKey(Object, String, Boolean)\n  fullName: AccessKeyManager.ProcessKey(Object, String, Boolean)\n- uid: System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: Register(String, IInputElement)\n  nameWithType: AccessKeyManager.Register(String, IInputElement)\n  fullName: AccessKeyManager.Register(String, IInputElement)\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(System.Windows.DependencyObject,System.Windows.Input.AccessKeyPressedEventHandler)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: RemoveAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n  fullName: AccessKeyManager.RemoveAccessKeyPressedHandler(DependencyObject, AccessKeyPressedEventHandler)\n- uid: System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: Unregister(String, IInputElement)\n  nameWithType: AccessKeyManager.Unregister(String, IInputElement)\n  fullName: AccessKeyManager.Unregister(String, IInputElement)\n- uid: System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: AddAccessKeyPressedHandler\n  nameWithType: AccessKeyManager.AddAccessKeyPressedHandler\n  fullName: AccessKeyManager.AddAccessKeyPressedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n- uid: System.Windows.Input.AccessKeyManager.IsKeyRegistered*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: IsKeyRegistered\n  nameWithType: AccessKeyManager.IsKeyRegistered\n  fullName: AccessKeyManager.IsKeyRegistered\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n- uid: System.Windows.Input.AccessKeyManager.ProcessKey*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: ProcessKey\n  nameWithType: AccessKeyManager.ProcessKey\n  fullName: AccessKeyManager.ProcessKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n- uid: System.Windows.Input.AccessKeyManager.Register*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: Register\n  nameWithType: AccessKeyManager.Register\n  fullName: AccessKeyManager.Register\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n- uid: System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: RemoveAccessKeyPressedHandler\n  nameWithType: AccessKeyManager.RemoveAccessKeyPressedHandler\n  fullName: AccessKeyManager.RemoveAccessKeyPressedHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n- uid: System.Windows.Input.AccessKeyManager.Unregister*\n  parent: System.Windows.Input.AccessKeyManager\n  isExternal: false\n  name: Unregister\n  nameWithType: AccessKeyManager.Unregister\n  fullName: AccessKeyManager.Unregister\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/AccessKeyManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}