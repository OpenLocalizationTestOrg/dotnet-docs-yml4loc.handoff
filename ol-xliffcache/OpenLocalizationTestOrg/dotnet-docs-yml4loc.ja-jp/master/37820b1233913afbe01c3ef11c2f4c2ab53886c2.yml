### YamlMime:ManagedReference
items:
- uid: System.Drawing.Image
  commentId: T:System.Drawing.Image
  id: Image
  children:
  - System.Drawing.Image.Clone
  - System.Drawing.Image.Dispose
  - System.Drawing.Image.Dispose(System.Boolean)
  - System.Drawing.Image.Finalize
  - System.Drawing.Image.Flags
  - System.Drawing.Image.FrameDimensionsList
  - System.Drawing.Image.FromFile(System.String)
  - System.Drawing.Image.FromFile(System.String,System.Boolean)
  - System.Drawing.Image.FromHbitmap(System.IntPtr)
  - System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  - System.Drawing.Image.FromStream(System.IO.Stream)
  - System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  - System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  - System.Drawing.Image.GetEncoderParameterList(System.Guid)
  - System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  - System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.GetPropertyItem(System.Int32)
  - System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  - System.Drawing.Image.Height
  - System.Drawing.Image.HorizontalResolution
  - System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  - System.Drawing.Image.Palette
  - System.Drawing.Image.PhysicalDimension
  - System.Drawing.Image.PixelFormat
  - System.Drawing.Image.PropertyIdList
  - System.Drawing.Image.PropertyItems
  - System.Drawing.Image.RawFormat
  - System.Drawing.Image.RemovePropertyItem(System.Int32)
  - System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Image.Save(System.String)
  - System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  - System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  - System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  - System.Drawing.Image.Size
  - System.Drawing.Image.Tag
  - System.Drawing.Image.VerticalResolution
  - System.Drawing.Image.Width
  - System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
  type: Class
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: An abstract base class that provides functionality for the <xref href="System.Drawing.Bitmap"></xref> and <xref href="System.Drawing.Imaging.Metafile"></xref> descended classes.
  remarks: To draw an <xref:System.Drawing.Image> on a Windows Form, you should use one of the <xref:System.Drawing.Graphics.DrawImage%2A> methods.
  example:
  - "The following code example is designed for use with Windows Forms. It is a handler for the <xref:System.Windows.Forms.Control.Paint> event. A <xref:System.Drawing.Graphics> object is passed to the event and is used to draw the image on the form. The code performs the following actions:  \n  \n-   Creates an image from a file named SampImag.jpg. This file must be located in the same folder as the application executable file.  \n  \n-   Creates a point at which to draw the upper-left corner of the image.  \n  \n-   Draws the unscaled image on the form.  \n  \n [!code-cpp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#55)]\n [!code-csharp[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#55)]\n [!code-vb[System.Drawing.ClassicGraphicsExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#55)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.ImageConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class Image : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  derivedClasses:
  - System.Drawing.Bitmap
  - System.Drawing.Imaging.Metafile
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Clone
  commentId: M:System.Drawing.Image.Clone
  id: Clone
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Clone()
  nameWithType: Image.Clone()
  fullName: Image.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Creates an exact copy of this <xref href="System.Drawing.Image"></xref>.
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: The <xref href="System.Drawing.Image"></xref> this method creates, cast as an object.
  overload: System.Drawing.Image.Clone*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Dispose
  commentId: M:System.Drawing.Image.Dispose
  id: Dispose
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: Image.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Releases all resources used by this <xref href="System.Drawing.Image"></xref>.
  remarks: "Calling the <xref:System.Drawing.Image.Dispose%2A> method allows the resources used by this <xref:System.Drawing.Image> to be reallocated for other purposes.  \n  \n Call <xref:System.Drawing.Image.Dispose%2A> when you are finished using the <xref:System.Drawing.Image>. The <xref:System.Drawing.Image.Dispose%2A> method leaves the <xref:System.Drawing.Image> in an unusable state. After calling <xref:System.Drawing.Image.Dispose%2A>, you must release all references to the <xref:System.Drawing.Image> so the garbage collector can reclaim the memory that the <xref:System.Drawing.Image> was occupying. For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Dispose(System.Boolean)
  commentId: M:System.Drawing.Image.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: Image.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Releases the unmanaged resources used by the <xref href="System.Drawing.Image"></xref> and optionally releases the managed resources.
  remarks: >-
    > [!NOTE]

    >  Always call <xref:System.Drawing.Image.Dispose%2A> before you release your last reference to the <xref:System.Drawing.Image>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.Image> object's `Finalize` method.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.Drawing.Image.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Finalize
  commentId: M:System.Drawing.Image.Finalize
  id: Finalize
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: Image.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.
  syntax:
    content: ~Image ();
    parameters: []
  overload: System.Drawing.Image.Finalize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Flags
  commentId: P:System.Drawing.Image.Flags
  id: Flags
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Flags
  nameWithType: Image.Flags
  fullName: Image.Flags
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets attribute flags for the pixel data of this <xref href="System.Drawing.Image"></xref>.
  remarks: "The integer value returned from this method will correspond to a sum of <xref:System.Drawing.Imaging.ImageFlags>, as described in the following table.  \n  \n|ImageFlag value|Integer representation|  \n|---------------------|----------------------------|  \n|`ImageFlagsNone`|0|  \n|`ImageFlagsScalable`|1|  \n|`ImageFlagsHasAlpha`|2|  \n|`ImageFlagsHasTranslucent`|4|  \n|`ImageFlagsPartiallyScalable`|8|  \n|`ImageFlagsColorSpaceRGB`|16|  \n|`ImageFlagsColorSpaceCMYK`|32|  \n|`ImageFlagsColorSpaceGRAY`|64|  \n|`ImageFlagsColorSpaceYCBCR`|128|  \n|`ImageFlagsColorSpaceYCCK`|256|  \n|`ImageFlagsHasRealDPI`|4096|  \n|`ImageFlagsHasRealPixelSize`|8192|  \n|`ImageFlagsReadOnly`|65536|  \n|`ImageFlagsCaching`|131072|  \n  \n For example, if the <xref:System.Drawing.Image.Flags%2A> property for an image returned 77960, the <xref:System.Drawing.Imaging.ImageFlags> for the image would be <xref:System.Drawing.Imaging.ImageFlags.ReadOnly>, <xref:System.Drawing.Imaging.ImageFlags.HasRealDpi>, <xref:System.Drawing.Imaging.ImageFlags.HasRealPixelSize>, <xref:System.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr>, and <xref:System.Drawing.Imaging.ImageFlags.PartiallyScalable>."
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public int Flags { get; }
    return:
      type: System.Int32
      description: The integer representing a bitwise combination of <xref href="System.Drawing.Imaging.ImageFlags"></xref> for this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.Flags*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.FrameDimensionsList
  commentId: P:System.Drawing.Image.FrameDimensionsList
  id: FrameDimensionsList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: Image.FrameDimensionsList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets an array of GUIDs that represent the dimensions of frames within this <xref href="System.Drawing.Image"></xref>.
  remarks: "This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.  \n  \n A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.  \n  \n A multiple-resolution image is an image that contains more than one copy of an image at different resolutions. This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions. The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>."
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public Guid[] FrameDimensionsList { get; }
    return:
      type: System.Guid[]
      description: An array of GUIDs that specify the dimensions of frames within this <xref href="System.Drawing.Image"></xref> from most significant to least significant.
  overload: System.Drawing.Image.FrameDimensionsList*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.FromFile(System.String)
  commentId: M:System.Drawing.Image.FromFile(System.String)
  id: FromFile(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: Image.FromFile(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Creates an <xref href="System.Drawing.Image"></xref> from the specified file.
  remarks: "Managed GDI+ has built-in encoders and decoders that support the following file types:  \n  \n-   BMP  \n  \n-   GIF  \n  \n-   JPEG  \n  \n-   PNG  \n  \n-   TIFF  \n  \n The file remains locked until the <xref:System.Drawing.Image> is disposed.  \n  \n If the file does not have a valid image format or if [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file, this method throws an <xref:System.OutOfMemoryException> exception.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel."
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.FromFile%2A><xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]\n [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]\n [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename);
    parameters:
    - id: filename
      type: System.String
      description: A string that contains the name of the file from which to create the <xref href="System.Drawing.Image"></xref>.
    return:
      type: System.Drawing.Image
      description: The <xref href="System.Drawing.Image"></xref> this method creates.
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "The file does not have a valid image format.  \n  \n -or-  \n  \n [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The specified file does not exist.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>filename</code> is a <xref href="System.Uri"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  commentId: M:System.Drawing.Image.FromFile(System.String,System.Boolean)
  id: FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromFile(String, Boolean)
  nameWithType: Image.FromFile(String, Boolean)
  fullName: Image.FromFile(String, Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Creates an <xref href="System.Drawing.Image"></xref> from the specified file using embedded color management information in that file.
  remarks: "Managed GDI+ has built-in encoders and decoders that support the following file types:  \n  \n-   BMP  \n  \n-   GIF  \n  \n-   JPEG  \n  \n-   PNG  \n  \n-   TIFF  \n  \n If the file does not have a valid image format or if [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file, this method throws an <xref:System.OutOfMemoryException> exception.  \n  \n The file remains locked until the <xref:System.Drawing.Image> is disposed.  \n  \n The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the image file. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel."
  example:
  - "The following code example demonstrates how to obtain a new bitmap using the <xref:System.Drawing.Image.FromFile%2A> method. It also demonstrates a <xref:System.Drawing.TextureBrush>.  \n  \n This example is designed to be used with Windows Forms. Create a form containing a button named `Button2`. Paste the code into the form and associate the `Button2_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cpp[System.Drawing.ImageExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#2)]\n [!code-csharp[System.Drawing.ImageExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#2)]\n [!code-vb[System.Drawing.ImageExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#2)]"
  syntax:
    content: public static System.Drawing.Image FromFile (string filename, bool useEmbeddedColorManagement);
    parameters:
    - id: filename
      type: System.String
      description: A string that contains the name of the file from which to create the <xref href="System.Drawing.Image"></xref>.
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: Set to `true` to use color management information embedded in the image file; otherwise, `false`.
    return:
      type: System.Drawing.Image
      description: The <xref href="System.Drawing.Image"></xref> this method creates.
  overload: System.Drawing.Image.FromFile*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "The file does not have a valid image format.  \n  \n -or-  \n  \n [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] does not support the pixel format of the file."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The specified file does not exist.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>filename</code> is a <xref href="System.Uri"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  commentId: M:System.Drawing.Image.FromHbitmap(System.IntPtr)
  id: FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: Image.FromHbitmap(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Creates a <xref href="System.Drawing.Bitmap"></xref> from a handle to a GDI bitmap.
  remarks: The <xref:System.Drawing.Image.FromHbitmap%2A> method makes a copy of the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap; so you can release the incoming [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` method immediately after creating the new <xref:System.Drawing.Image>.
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <xref href="System.Drawing.Bitmap"></xref>.
    return:
      type: System.Drawing.Bitmap
      description: The <xref href="System.Drawing.Bitmap"></xref> this method creates.
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  commentId: M:System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  id: FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromHbitmap(IntPtr, IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr, IntPtr)
  fullName: Image.FromHbitmap(IntPtr, IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Creates a <xref href="System.Drawing.Bitmap"></xref> from a handle to a GDI bitmap and a handle to a GDI palette.
  remarks: The <xref:System.Drawing.Image.FromHbitmap%2A> method makes a copy of the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap; so you can release the incoming [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` method immediately after creating the new <xref:System.Drawing.Image>.
  syntax:
    content: public static System.Drawing.Bitmap FromHbitmap (IntPtr hbitmap, IntPtr hpalette);
    parameters:
    - id: hbitmap
      type: System.IntPtr
      description: The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] bitmap handle from which to create the <xref href="System.Drawing.Bitmap"></xref>.
    - id: hpalette
      type: System.IntPtr
      description: A handle to a [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] palette used to define the bitmap colors if the bitmap specified in the <code>hBitmap</code> parameter is not a device-independent bitmap (DIB).
    return:
      type: System.Drawing.Bitmap
      description: The <xref href="System.Drawing.Bitmap"></xref> this method creates.
  overload: System.Drawing.Image.FromHbitmap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  commentId: M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream, Boolean, Boolean)
  nameWithType: Image.FromStream(Stream, Boolean, Boolean)
  fullName: Image.FromStream(Stream, Boolean, Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Creates an <xref href="System.Drawing.Image"></xref> from the specified data stream, optionally using embedded color management information and validating the image data.
  remarks: "The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement, bool validateImageData);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream"></xref> that contains the data for this <xref href="System.Drawing.Image"></xref>.
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: '`true` to use color management information embedded in the data stream; otherwise, `false`.'
    - id: validateImageData
      type: System.Boolean
      description: '`true` to validate the image data; otherwise, `false`.'
    return:
      type: System.Drawing.Image
      description: The <xref href="System.Drawing.Image"></xref> this method creates.
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The stream does not have a valid image format.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  commentId: M:System.Drawing.Image.FromStream(System.IO.Stream)
  id: FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: Image.FromStream(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Creates an <xref href="System.Drawing.Image"></xref> from the specified data stream.
  remarks: "You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>.  \n  \n The stream is reset to zero if this method is called successively with the same stream.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream"></xref> that contains the data for this <xref href="System.Drawing.Image"></xref>.
    return:
      type: System.Drawing.Image
      description: The <xref href="System.Drawing.Image"></xref> this method creates.
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The stream does not have a valid image format  \n  \n -or-  \n  \n <code>stream</code> is `null`."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  commentId: M:System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  id: FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: FromStream(Stream, Boolean)
  nameWithType: Image.FromStream(Stream, Boolean)
  fullName: Image.FromStream(Stream, Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Creates an <xref href="System.Drawing.Image"></xref> from the specified data stream, optionally using embedded color management information in that stream.
  remarks: "You must keep the stream open for the lifetime of the <xref:System.Drawing.Image>.  \n  \n The `useEmbeddedColorManagement` parameter specifies whether the new <xref:System.Drawing.Image> applies color correction according to color management information that is embedded in the data stream. Embedded information can include International Color Consortium (ICC) profiles, gamma values, and chromaticity information.  \n  \n The stream is reset to zero if this method is called successively with the same stream.  \n  \n> [!NOTE]\n>  The <xref:System.Drawing.Image> class does not support alpha transparency in bitmaps. To enable alpha transparency, use PNG images with 32 bits per pixel."
  syntax:
    content: public static System.Drawing.Image FromStream (System.IO.Stream stream, bool useEmbeddedColorManagement);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: A <xref href="System.IO.Stream"></xref> that contains the data for this <xref href="System.Drawing.Image"></xref>.
    - id: useEmbeddedColorManagement
      type: System.Boolean
      description: '`true` to use color management information embedded in the data stream; otherwise, `false`.'
    return:
      type: System.Drawing.Image
      description: The <xref href="System.Drawing.Image"></xref> this method creates.
  overload: System.Drawing.Image.FromStream*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The stream does not have a valid image format  \n  \n -or-  \n  \n <code>stream</code> is `null`."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  commentId: M:System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  id: GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: Image.GetBounds(GraphicsUnit)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the bounds of the image in the specified unit.
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle, using the <xref:System.Drawing.GraphicsUnit> enumeration, and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cpp[System.Drawing.BitmapMembers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#1)]\n [!code-csharp[System.Drawing.BitmapMembers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#1)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#1)]"
  syntax:
    content: public System.Drawing.RectangleF GetBounds (ref System.Drawing.GraphicsUnit pageUnit);
    parameters:
    - id: pageUnit
      type: System.Drawing.GraphicsUnit
      description: One of the <xref href="System.Drawing.GraphicsUnit"></xref> values indicating the unit of measure for the bounding rectangle.
    return:
      type: System.Drawing.RectangleF
      description: The <xref href="System.Drawing.RectangleF"></xref> that represents the bounds of the image, in the specified unit.
  overload: System.Drawing.Image.GetBounds*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  commentId: M:System.Drawing.Image.GetEncoderParameterList(System.Guid)
  id: GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: Image.GetEncoderParameterList(Guid)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Returns information about the parameters supported by the specified image encoder.
  syntax:
    content: public System.Drawing.Imaging.EncoderParameters GetEncoderParameterList (Guid encoder);
    parameters:
    - id: encoder
      type: System.Guid
      description: A GUID that specifies the image encoder.
    return:
      type: System.Drawing.Imaging.EncoderParameters
      description: An <xref href="System.Drawing.Imaging.EncoderParameters"></xref> that contains an array of <xref href="System.Drawing.Imaging.EncoderParameter"></xref> objects. Each <xref href="System.Drawing.Imaging.EncoderParameter"></xref> contains information about one of the parameters supported by the specified image encoder.
  overload: System.Drawing.Image.GetEncoderParameterList*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  commentId: M:System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  id: GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: Image.GetFrameCount(FrameDimension)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Returns the number of frames of the specified dimension.
  remarks: "This method returns information about multiple-frame images, which come in two styles: multiple page and multiple resolution.  \n  \n A multiple-page image is an image that contains more than one image. Each page contains a single image (or frame). These pages (or images, or frames) are typically displayed in succession to produce an animated sequence, such as an animated .gif file.  \n  \n A multiple-resolution image is an image that contains more than one copy of an image at different resolutions. This is commonly used by MIP mapping where the displayed image size determines the resolution of the image used for drawing. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] can support an arbitrary number of pages (or images, or frames), as well as an arbitrary number of resolutions. The defined dimensions are properties of the <xref:System.Drawing.Imaging.FrameDimension>."
  syntax:
    content: public int GetFrameCount (System.Drawing.Imaging.FrameDimension dimension);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: A <xref href="System.Drawing.Imaging.FrameDimension"></xref> that specifies the identity of the dimension type.
    return:
      type: System.Int32
      description: The number of frames in the specified dimension.
  overload: System.Drawing.Image.GetFrameCount*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  commentId: M:System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  id: GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: Image.GetPixelFormatSize(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Returns the color depth, in number of bits per pixel, of the specified pixel format.
  syntax:
    content: public static int GetPixelFormatSize (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: The <xref href="System.Drawing.Imaging.PixelFormat"></xref> member that specifies the format for which to find the size.
    return:
      type: System.Int32
      description: The color depth of the specified pixel format.
  overload: System.Drawing.Image.GetPixelFormatSize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  commentId: M:System.Drawing.Image.GetPropertyItem(System.Int32)
  id: GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: Image.GetPropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the specified property item from this <xref href="System.Drawing.Image"></xref>.
  remarks: "For a list of property item IDs and links to more information, see <xref:System.Drawing.Imaging.PropertyItem.Id%2A>.  \n  \n It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>."
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example calls <xref:System.Drawing.Image.GetPropertyItem%2A> passing an ID value. For a list of ID values see, <xref:System.Drawing.Imaging.PropertyItem.Id%2A>. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]\n [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]\n [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]"
  syntax:
    content: public System.Drawing.Imaging.PropertyItem GetPropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: The ID of the property item to get.
    return:
      type: System.Drawing.Imaging.PropertyItem
      description: The <xref href="System.Drawing.Imaging.PropertyItem"></xref> this method gets.
  overload: System.Drawing.Image.GetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The image format of this image does not support property items.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  commentId: M:System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  id: GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)
  fullName: Image.GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Returns a thumbnail for this <xref href="System.Drawing.Image"></xref>.
  remarks: "If the <xref:System.Drawing.Image> contains an embedded thumbnail image, this method retrieves the embedded thumbnail and scales it to the requested size. If the <xref:System.Drawing.Image> does not contain an embedded thumbnail image, this method creates a thumbnail image by scaling the main image.  \n  \n The <xref:System.Drawing.Image.GetThumbnailImage%2A> method works well when the requested thumbnail image has a size of about 120 x 120 pixels. If you request a large thumbnail image (for example, 300 x 300) from an <xref:System.Drawing.Image> that has an embedded thumbnail, there could be a noticeable loss of quality in the thumbnail image. It might be better to scale the main image (instead of scaling the embedded thumbnail) by calling the <xref:System.Drawing.Graphics.DrawImage%2A> method."
  example:
  - "The following code example creates and displays a thumbnail image. This delegate is never called.  \n  \n [!code-csharp[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#getthumbnail)]\n [!code-vb[System.Drawing.Misc3#GetThumbnail](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#getthumbnail)]"
  syntax:
    content: public System.Drawing.Image GetThumbnailImage (int thumbWidth, int thumbHeight, System.Drawing.Image.GetThumbnailImageAbort callback, IntPtr callbackData);
    parameters:
    - id: thumbWidth
      type: System.Int32
      description: The width, in pixels, of the requested thumbnail image.
    - id: thumbHeight
      type: System.Int32
      description: The height, in pixels, of the requested thumbnail image.
    - id: callback
      type: System.Drawing.Image+GetThumbnailImageAbort
      description: "A <xref href=\"System.Drawing.Image.GetThumbnailImageAbort\"></xref> delegate.  \n  \n **Note** You must create a delegate and pass a reference to the delegate as the <code>callback</code> parameter, but the delegate is not used."
    - id: callbackData
      type: System.IntPtr
      description: Must be <xref href="System.IntPtr.Zero"></xref>.
    return:
      type: System.Drawing.Image
      description: An <xref href="System.Drawing.Image"></xref> that represents the thumbnail.
  overload: System.Drawing.Image.GetThumbnailImage*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Height
  commentId: P:System.Drawing.Image.Height
  id: Height
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Height
  nameWithType: Image.Height
  fullName: Image.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the height, in pixels, of this <xref href="System.Drawing.Image"></xref>.
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> and <xref:System.Drawing.Image.Height%2A> properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]\n [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]\n [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public int Height { get; }
    return:
      type: System.Int32
      description: The height, in pixels, of this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.Height*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.HorizontalResolution
  commentId: P:System.Drawing.Image.HorizontalResolution
  id: HorizontalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: Image.HorizontalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the horizontal resolution, in pixels per inch, of this <xref href="System.Drawing.Image"></xref>.
  syntax:
    content: public float HorizontalResolution { get; }
    return:
      type: System.Single
      description: The horizontal resolution, in pixels per inch, of this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.HorizontalResolution*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  commentId: M:System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: Image.IsAlphaPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Returns a value that indicates whether the pixel format for this <xref href="System.Drawing.Image"></xref> contains alpha information.
  syntax:
    content: public static bool IsAlphaPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: The <xref href="System.Drawing.Imaging.PixelFormat"></xref> to test.
    return:
      type: System.Boolean
      description: '`true` if <code>pixfmt</code> contains alpha information; otherwise, `false`.'
  overload: System.Drawing.Image.IsAlphaPixelFormat*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  commentId: M:System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: Image.IsCanonicalPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Returns a value that indicates whether the pixel format is 32 bits per pixel.
  remarks: The canonical pixel format indicates a pixel format of 32 bits per pixel. This format specifies 24-bit color depth and an 8-bit alpha channel.
  syntax:
    content: public static bool IsCanonicalPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: The <xref href="System.Drawing.Imaging.PixelFormat"></xref> to test.
    return:
      type: System.Boolean
      description: '`true` if <code>pixfmt</code> is canonical; otherwise, `false`.'
  overload: System.Drawing.Image.IsCanonicalPixelFormat*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  commentId: M:System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  id: IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: Image.IsExtendedPixelFormat(PixelFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Returns a value that indicates whether the pixel format is 64 bits per pixel.
  syntax:
    content: public static bool IsExtendedPixelFormat (System.Drawing.Imaging.PixelFormat pixfmt);
    parameters:
    - id: pixfmt
      type: System.Drawing.Imaging.PixelFormat
      description: The <xref href="System.Drawing.Imaging.PixelFormat"></xref> enumeration to test.
    return:
      type: System.Boolean
      description: '`true` if <code>pixfmt</code> is extended; otherwise, `false`.'
  overload: System.Drawing.Image.IsExtendedPixelFormat*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Palette
  commentId: P:System.Drawing.Image.Palette
  id: Palette
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Palette
  nameWithType: Image.Palette
  fullName: Image.Palette
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets or sets the color palette used for this <xref href="System.Drawing.Image"></xref>.
  remarks: This property returns a copy of the <xref:System.Drawing.Imaging.ColorPalette> object used by this <xref:System.Drawing.Image>.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Drawing.Imaging.ColorPalette Palette { get; set; }
    return:
      type: System.Drawing.Imaging.ColorPalette
      description: A <xref href="System.Drawing.Imaging.ColorPalette"></xref> that represents the color palette used for this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.Palette*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.PhysicalDimension
  commentId: P:System.Drawing.Image.PhysicalDimension
  id: PhysicalDimension
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: Image.PhysicalDimension
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the width and height of this image.
  remarks: If the image is a bitmap, the width and height are returned in pixels. If the image is a metafile, the width and height are returned in 0.01 millimeter units.
  syntax:
    content: public System.Drawing.SizeF PhysicalDimension { get; }
    return:
      type: System.Drawing.SizeF
      description: A <xref href="System.Drawing.SizeF"></xref> structure that represents the width and height of this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.PhysicalDimension*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.PixelFormat
  commentId: P:System.Drawing.Image.PixelFormat
  id: PixelFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: Image.PixelFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the pixel format for this <xref href="System.Drawing.Image"></xref>.
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new bitmap from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A> property.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1`, and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]\n [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]\n [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]"
  syntax:
    content: public System.Drawing.Imaging.PixelFormat PixelFormat { get; }
    return:
      type: System.Drawing.Imaging.PixelFormat
      description: A <xref href="System.Drawing.Imaging.PixelFormat"></xref> that represents the pixel format for this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.PixelFormat*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.PropertyIdList
  commentId: P:System.Drawing.Image.PropertyIdList
  id: PropertyIdList
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: Image.PropertyIdList
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets IDs of the property items stored in this <xref href="System.Drawing.Image"></xref>.
  remarks: If the image has no property items or if the image format does not support property items, the <xref:System.Drawing.Image.PropertyIdList%2A> property returns an empty array (that is, an array of length zero).
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public int[] PropertyIdList { get; }
    return:
      type: System.Int32[]
      description: An array of the property IDs, one for each property item stored in this image.
  overload: System.Drawing.Image.PropertyIdList*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.PropertyItems
  commentId: P:System.Drawing.Image.PropertyItems
  id: PropertyItems
  parent: System.Drawing.Image
  langs:
  - csharp
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: Image.PropertyItems
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets all the property items (pieces of metadata) stored in this <xref href="System.Drawing.Image"></xref>.
  remarks: If the image has no property items or if the image format does not support property items, <xref:System.Drawing.Image.PropertyItems%2A> returns an empty array (that is, an array of length zero).
  example:
  - "The following code example demonstrates how to read and display the metadata in an image file using the <xref:System.Drawing.Imaging.PropertyItem?displayProperty=fullName> class and the <xref:System.Drawing.Image.PropertyItems%2A> property.  \n  \n This example is designed to be used a Windows Form that imports the <xref:System.Drawing.Imaging?displayProperty=fullName> namespace. Paste the code into the form and change the path to `fakePhoto.jpg` to point to an image file on your system. Call the `ExtractMetaData` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.ImageExample#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#6)]\n [!code-csharp[System.Drawing.ImageExample#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#6)]\n [!code-vb[System.Drawing.ImageExample#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#6)]"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Drawing.Imaging.PropertyItem[] PropertyItems { get; }
    return:
      type: System.Drawing.Imaging.PropertyItem[]
      description: An array of <xref href="System.Drawing.Imaging.PropertyItem"></xref> objects, one for each property item stored in the image.
  overload: System.Drawing.Image.PropertyItems*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.RawFormat
  commentId: P:System.Drawing.Image.RawFormat
  id: RawFormat
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: Image.RawFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the file format of this <xref href="System.Drawing.Image"></xref>.
  syntax:
    content: public System.Drawing.Imaging.ImageFormat RawFormat { get; }
    return:
      type: System.Drawing.Imaging.ImageFormat
      description: The <xref href="System.Drawing.Imaging.ImageFormat"></xref> that represents the file format of this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.RawFormat*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  commentId: M:System.Drawing.Image.RemovePropertyItem(System.Int32)
  id: RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: Image.RemovePropertyItem(Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Removes the specified property item from this <xref href="System.Drawing.Image"></xref>.
  remarks: It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>.
  syntax:
    content: public void RemovePropertyItem (int propid);
    parameters:
    - id: propid
      type: System.Int32
      description: The ID of the property item to remove.
  overload: System.Drawing.Image.RemovePropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The image does not contain the requested property item.  \n  \n -or-  \n  \n The image format for this image does not support property items."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  commentId: M:System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  id: RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: Image.RotateFlip(RotateFlipType)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Rotates, flips, or rotates and flips the <xref href="System.Drawing.Image"></xref>.
  remarks: "The <xref:System.Drawing.Image.RotateFlip%2A> method rotates the image clockwise.  \n  \n If you wish to draw on an image once it has been rotated, you should always retrieve a new graphics object from the image, otherwise an exception could occur."
  example:
  - "The following code example demonstrates how to call the <xref:System.Drawing.Image.RotateFlip%2A> method on an <xref:System.Drawing.Image> and the <xref:System.Drawing.RotateFlipType> enumeration.  \n  \n This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.PictureBox> named `PictureBox1` and a button named `Button1`. Paste the code into a form, call `InitializeBitmap` from the form's constructor, and associate `Button1_Click` with the button's <xref:System.Windows.Forms.Control.Click> event. Ensure the file path to the bitmap is valid on your system.  \n  \n [!code-cpp[System.Drawing.BitmapMembers#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#3)]\n [!code-csharp[System.Drawing.BitmapMembers#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#3)]\n [!code-vb[System.Drawing.BitmapMembers#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#3)]"
  syntax:
    content: public void RotateFlip (System.Drawing.RotateFlipType rotateFlipType);
    parameters:
    - id: rotateFlipType
      type: System.Drawing.RotateFlipType
      description: A <xref href="System.Drawing.RotateFlipType"></xref> member that specifies the type of rotation and flip to apply to the image.
  overload: System.Drawing.Image.RotateFlip*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  commentId: M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String, ImageCodecInfo, EncoderParameters)
  nameWithType: Image.Save(String, ImageCodecInfo, EncoderParameters)
  fullName: Image.Save(String, ImageCodecInfo, EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Saves this <xref href="System.Drawing.Image"></xref> to the specified file, with the specified encoder and image-encoder parameters.
  remarks: Saving the image to the same file it was constructed from is not allowed and throws an exception.
  example:
  - "The following example creates a <xref:System.Drawing.Bitmap> object from a BMP file. The code saves the bitmap to three JPEG files, each with a different quality level.  \n  \n [!code-cpp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CPP/form1.cpp#3)]\n [!code-csharp[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/CS/form1.cs#3)]\n [!code-vb[System.Drawing.ClassicImagingEndcoder3#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicImagingEndcoder3/VB/form1.vb#3)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: filename
      type: System.String
      description: A string that contains the name of the file to which to save this <xref href="System.Drawing.Image"></xref>.
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: The <xref href="System.Drawing.Imaging.ImageCodecInfo"></xref> for this <xref href="System.Drawing.Image"></xref>.
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: An <xref href="System.Drawing.Imaging.EncoderParameters"></xref> to use for this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>filename</code> or <code>encoder</code> is `null.`
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "The image was saved with the wrong image format.  \n  \n -or-  \n  \n The image was saved to the same file it was created from."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  commentId: M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream, ImageCodecInfo, EncoderParameters)
  nameWithType: Image.Save(Stream, ImageCodecInfo, EncoderParameters)
  fullName: Image.Save(Stream, ImageCodecInfo, EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Saves this image to the specified stream, with the specified encoder and image encoder parameters.
  remarks: "Do not save an image to the same stream that was used to construct the image. Doing so might damage the stream.  \n  \n The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted."
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageCodecInfo encoder, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <xref href="System.IO.Stream"></xref> where the image will be saved.
    - id: encoder
      type: System.Drawing.Imaging.ImageCodecInfo
      description: The <xref href="System.Drawing.Imaging.ImageCodecInfo"></xref> for this <xref href="System.Drawing.Image"></xref>.
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: An <xref href="System.Drawing.Imaging.EncoderParameters"></xref> that specifies parameters used by the image encoder.
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: The image was saved with the wrong image format.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  commentId: M:System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  id: Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String, ImageFormat)
  nameWithType: Image.Save(String, ImageFormat)
  fullName: Image.Save(String, ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Saves this <xref href="System.Drawing.Image"></xref> to the specified file in the specified format.
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a bitmap from a type, and how to use the <xref:System.Drawing.Image.Save%2A> method. To run this example, paste the code into a Windows Form. Handle the form’s <xref:System.Windows.Forms.Control.Paint> event, and call the `ConstructFromResourceSaveAsGif` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>  \n  \n [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]\n [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]\n [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]"
  syntax:
    content: public void Save (string filename, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: filename
      type: System.String
      description: A string that contains the name of the file to which to save this <xref href="System.Drawing.Image"></xref>.
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: The <xref href="System.Drawing.Imaging.ImageFormat"></xref> for this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>filename</code> or <code>format</code> is `null.`
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "The image was saved with the wrong image format.  \n  \n -or-  \n  \n The image was saved to the same file it was created from."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  commentId: M:System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  id: Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(Stream, ImageFormat)
  nameWithType: Image.Save(Stream, ImageFormat)
  fullName: Image.Save(Stream, ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Saves this image to the specified stream in the specified format.
  remarks: "You should avoid saving an image to the same stream that was used to construct it. Doing so might damage the stream.  \n  \n The image must be saved to the stream at an offset of zero. If any additional data has been written to the stream before saving the image, the image data in the stream will be corrupted."
  syntax:
    content: public void Save (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat format);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The <xref href="System.IO.Stream"></xref> where the image will be saved.
    - id: format
      type: System.Drawing.Imaging.ImageFormat
      description: An <xref href="System.Drawing.Imaging.ImageFormat"></xref> that specifies the format of the saved image.
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> or <code>format</code> is `null`.
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: The image was saved with the wrong image format
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Save(System.String)
  commentId: M:System.Drawing.Image.Save(System.String)
  id: Save(System.String)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: Image.Save(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Saves this <xref href="System.Drawing.Image"></xref> to the specified file or stream.
  remarks: "If no encoder exists for the file format of the image, the Portable Network Graphics (PNG) encoder is used. When you use the <xref:System.Drawing.Image.Save%2A> method to save a graphic image as a Windows Metafile Format (WMF) or Enhanced Metafile Format (EMF) file, the resulting file is saved as a Portable Network Graphics (PNG) file. This behavior occurs because the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] component of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] does not have an encoder that you can use to save files as .wmf or .emf files.  \n  \n Saving the image to the same file it was constructed from is not allowed and throws an exception."
  example:
  - "The following code example demonstrates how to call the <xref:System.Drawing.Image.Save%2A> method. This example is designed to be used with Windows Forms. Create a form that contains a button named `Button5`. Paste the code into the form, and associate the method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cpp[System.Drawing.ImageExample#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#5)]\n [!code-csharp[System.Drawing.ImageExample#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#5)]\n [!code-vb[System.Drawing.ImageExample#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#5)]"
  syntax:
    content: public void Save (string filename);
    parameters:
    - id: filename
      type: System.String
      description: A string that contains the name of the file to which to save this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>filename</code> is `null.`
  - type: System.Runtime.InteropServices.ExternalException
    commentId: T:System.Runtime.InteropServices.ExternalException
    description: "The image was saved with the wrong image format.  \n  \n -or-  \n  \n The image was saved to the same file it was created from."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  commentId: M:System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: Image.SaveAdd(EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Adds a frame to the file or stream specified in a previous call to the <xref href="System.Drawing.Image.Save*"></xref> method. Use this method to save selected frames from a multiple-frame image to another multiple-frame image.
  syntax:
    content: public void SaveAdd (System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: An <xref href="System.Drawing.Imaging.EncoderParameters"></xref> that holds parameters required by the image encoder that is used by the save-add operation.
  overload: System.Drawing.Image.SaveAdd*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  commentId: M:System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  id: SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SaveAdd(Image, EncoderParameters)
  nameWithType: Image.SaveAdd(Image, EncoderParameters)
  fullName: Image.SaveAdd(Image, EncoderParameters)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Adds a frame to the file or stream specified in a previous call to the <xref href="System.Drawing.Image.Save*"></xref> method.
  syntax:
    content: public void SaveAdd (System.Drawing.Image image, System.Drawing.Imaging.EncoderParameters encoderParams);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: An <xref href="System.Drawing.Image"></xref> that contains the frame to add.
    - id: encoderParams
      type: System.Drawing.Imaging.EncoderParameters
      description: An <xref href="System.Drawing.Imaging.EncoderParameters"></xref> that holds parameters required by the image encoder that is used by the save-add operation.
  overload: System.Drawing.Image.SaveAdd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>image</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  commentId: M:System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  id: SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SelectActiveFrame(FrameDimension, Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension, Int32)
  fullName: Image.SelectActiveFrame(FrameDimension, Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Selects the frame specified by the dimension and index.
  remarks: "The possible values of the `dimensionID` parameter are properties of the <xref:System.Drawing.Imaging.FrameDimension>. These can be used to identify an image by its time, resolution, or page number.  \n  \n Calling this method causes all changes made to the previous frame to be discarded. Before selecting another frame, save all changes made to the current frame, including changes to pixel values and properties. If the call to the <xref:System.Drawing.Image.SelectActiveFrame%2A> method is successful (an exception does not occur), the method will return 0."
  syntax:
    content: public int SelectActiveFrame (System.Drawing.Imaging.FrameDimension dimension, int frameIndex);
    parameters:
    - id: dimension
      type: System.Drawing.Imaging.FrameDimension
      description: A <xref href="System.Drawing.Imaging.FrameDimension"></xref> that specifies the identity of the dimension type.
    - id: frameIndex
      type: System.Int32
      description: The index of the active frame.
    return:
      type: System.Int32
      description: Always returns 0.
  overload: System.Drawing.Image.SelectActiveFrame*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  commentId: M:System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  id: SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  langs:
  - csharp
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: Image.SetPropertyItem(PropertyItem)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Stores a property item (piece of metadata) in this <xref href="System.Drawing.Image"></xref>.
  remarks: "If the image format does not support property items, this method throws <xref:System.ArgumentException> with the message \"Property not supported.\" If the image format supports property items but does not support the particular property you are attempting to set, this method ignores the attempt but does not throw an exception.  \n  \n It is difficult to set property items, because the <xref:System.Drawing.Imaging.PropertyItem> class has no public constructors. One way to work around this restriction is to obtain a <xref:System.Drawing.Imaging.PropertyItem> by retrieving the <xref:System.Drawing.Image.PropertyItems%2A> property value or calling the <xref:System.Drawing.Image.GetPropertyItem%2A> method of an <xref:System.Drawing.Image> that already has property items. Then you can set the fields of the <xref:System.Drawing.Imaging.PropertyItem> and pass it to <xref:System.Drawing.Image.SetPropertyItem%2A>."
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.GetPropertyItem%2A> and <xref:System.Drawing.Image.SetPropertyItem%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form, and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `DemonstratePropertyItem` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cpp[System.Drawing.ImageExample#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#7)]\n [!code-csharp[System.Drawing.ImageExample#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#7)]\n [!code-vb[System.Drawing.ImageExample#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#7)]"
  syntax:
    content: public void SetPropertyItem (System.Drawing.Imaging.PropertyItem propitem);
    parameters:
    - id: propitem
      type: System.Drawing.Imaging.PropertyItem
      description: The <xref href="System.Drawing.Imaging.PropertyItem"></xref> to be stored.
  overload: System.Drawing.Image.SetPropertyItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The image format of this image does not support property items.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Size
  commentId: P:System.Drawing.Image.Size
  id: Size
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Size
  nameWithType: Image.Size
  fullName: Image.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the width and height, in pixels, of this image.
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: A <xref href="System.Drawing.Size"></xref> structure that represents the width and height, in pixels, of this image.
  overload: System.Drawing.Image.Size*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Tag
  commentId: P:System.Drawing.Image.Tag
  id: Tag
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Tag
  nameWithType: Image.Tag
  fullName: Image.Tag
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets or sets an object that provides additional data about the image.
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))]

      public object Tag { get; set; }
    return:
      type: System.Object
      description: The <xref href="System.Object"></xref> that provides additional data about the image.
  overload: System.Drawing.Image.Tag*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BindableAttribute
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.VerticalResolution
  commentId: P:System.Drawing.Image.VerticalResolution
  id: VerticalResolution
  parent: System.Drawing.Image
  langs:
  - csharp
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: Image.VerticalResolution
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the vertical resolution, in pixels per inch, of this <xref href="System.Drawing.Image"></xref>.
  syntax:
    content: public float VerticalResolution { get; }
    return:
      type: System.Single
      description: The vertical resolution, in pixels per inch, of this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.VerticalResolution*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.Width
  commentId: P:System.Drawing.Image.Width
  id: Width
  parent: System.Drawing.Image
  langs:
  - csharp
  name: Width
  nameWithType: Image.Width
  fullName: Image.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Gets the width, in pixels, of this <xref href="System.Drawing.Image"></xref>.
  remarks: ''
  example:
  - "The following code example demonstrates how to construct a new <xref:System.Drawing.Bitmap> from a file, using the <xref:System.Drawing.Bitmap.GetPixel%2A> and <xref:System.Drawing.Bitmap.SetPixel%2A> methods to recolor the image. It also uses the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, and <xref:System.Drawing.Image.Height%2A> properties.  \n  \n This example is designed to be used with a Windows Forms that contains a <xref:System.Windows.Forms.Label> ,<xref:System.Windows.Forms.PictureBox> and <xref:System.Windows.Forms.Button> named `Label1`, `PictureBox1` and `Button1`, respectively. Paste the code into the form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]\n [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]\n [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public int Width { get; }
    return:
      type: System.Int32
      description: The width, in pixels, of this <xref href="System.Drawing.Image"></xref>.
  overload: System.Drawing.Image.Width*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Image
  langs:
  - csharp
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Image.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Image.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: Populates a <xref href="System.Runtime.Serialization.SerializationInfo"></xref> with the data needed to serialize the target object.
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination (see <xref href="System.Runtime.Serialization.StreamingContext"></xref>) for this serialization.
  overload: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.OutOfMemoryException
  parent: System
  isExternal: false
  name: OutOfMemoryException
  nameWithType: OutOfMemoryException
  fullName: System.OutOfMemoryException
- uid: System.IO.FileNotFoundException
  parent: System.IO
  isExternal: false
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Runtime.InteropServices.ExternalException
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ExternalException
  nameWithType: ExternalException
  fullName: System.Runtime.InteropServices.ExternalException
- uid: System.Drawing.Image.Clone
  parent: System.Drawing.Image
  isExternal: false
  name: Clone()
  nameWithType: Image.Clone()
  fullName: Image.Clone()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Image.Dispose
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose()
  nameWithType: Image.Dispose()
  fullName: Image.Dispose()
- uid: System.Drawing.Image.Dispose(System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Image.Dispose(Boolean)
  fullName: Image.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Image.Finalize
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize()
  nameWithType: Image.Finalize()
  fullName: Image.Finalize()
- uid: System.Drawing.Image.Flags
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
  fullName: Image.Flags
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Image.FrameDimensionsList
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: Image.FrameDimensionsList
- uid: System.Guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Guid[]
  parent: System
  isExternal: false
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  spec.csharp:
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.FromFile(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String)
  nameWithType: Image.FromFile(String)
  fullName: Image.FromFile(String)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Image.FromFile(System.String,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile(String, Boolean)
  nameWithType: Image.FromFile(String, Boolean)
  fullName: Image.FromFile(String, Boolean)
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr)
  fullName: Image.FromHbitmap(IntPtr)
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Image.FromHbitmap(System.IntPtr,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap(IntPtr, IntPtr)
  nameWithType: Image.FromHbitmap(IntPtr, IntPtr)
  fullName: Image.FromHbitmap(IntPtr, IntPtr)
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream, Boolean, Boolean)
  nameWithType: Image.FromStream(Stream, Boolean, Boolean)
  fullName: Image.FromStream(Stream, Boolean, Boolean)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Image.FromStream(System.IO.Stream)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream)
  nameWithType: Image.FromStream(Stream)
  fullName: Image.FromStream(Stream)
- uid: System.Drawing.Image.FromStream(System.IO.Stream,System.Boolean)
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream(Stream, Boolean)
  nameWithType: Image.FromStream(Stream, Boolean)
  fullName: Image.FromStream(Stream, Boolean)
- uid: System.Drawing.Image.GetBounds(System.Drawing.GraphicsUnit@)
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds(GraphicsUnit)
  nameWithType: Image.GetBounds(GraphicsUnit)
  fullName: Image.GetBounds(GraphicsUnit)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.GraphicsUnit
  parent: System.Drawing
  isExternal: false
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: System.Drawing.GraphicsUnit
- uid: System.Drawing.Image.GetEncoderParameterList(System.Guid)
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList(Guid)
  nameWithType: Image.GetEncoderParameterList(Guid)
  fullName: Image.GetEncoderParameterList(Guid)
- uid: System.Drawing.Imaging.EncoderParameters
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameters
  nameWithType: EncoderParameters
  fullName: System.Drawing.Imaging.EncoderParameters
- uid: System.Drawing.Image.GetFrameCount(System.Drawing.Imaging.FrameDimension)
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount(FrameDimension)
  nameWithType: Image.GetFrameCount(FrameDimension)
  fullName: Image.GetFrameCount(FrameDimension)
- uid: System.Drawing.Imaging.FrameDimension
  parent: System.Drawing.Imaging
  isExternal: false
  name: FrameDimension
  nameWithType: FrameDimension
  fullName: System.Drawing.Imaging.FrameDimension
- uid: System.Drawing.Image.GetPixelFormatSize(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize(PixelFormat)
  nameWithType: Image.GetPixelFormatSize(PixelFormat)
  fullName: Image.GetPixelFormatSize(PixelFormat)
- uid: System.Drawing.Imaging.PixelFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Drawing.Imaging.PixelFormat
- uid: System.Drawing.Image.GetPropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem(Int32)
  nameWithType: Image.GetPropertyItem(Int32)
  fullName: Image.GetPropertyItem(Int32)
- uid: System.Drawing.Imaging.PropertyItem
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem
  nameWithType: PropertyItem
  fullName: System.Drawing.Imaging.PropertyItem
- uid: System.Drawing.Image.GetThumbnailImage(System.Int32,System.Int32,System.Drawing.Image.GetThumbnailImageAbort,System.IntPtr)
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)
  nameWithType: Image.GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)
  fullName: Image.GetThumbnailImage(Int32, Int32, Image+GetThumbnailImageAbort, IntPtr)
- uid: System.Drawing.Image.Height
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
  fullName: Image.Height
- uid: System.Drawing.Image.HorizontalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: Image.HorizontalResolution
- uid: System.Single
  parent: System
  isExternal: false
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Image.IsAlphaPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat(PixelFormat)
  nameWithType: Image.IsAlphaPixelFormat(PixelFormat)
  fullName: Image.IsAlphaPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsCanonicalPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat(PixelFormat)
  nameWithType: Image.IsCanonicalPixelFormat(PixelFormat)
  fullName: Image.IsCanonicalPixelFormat(PixelFormat)
- uid: System.Drawing.Image.IsExtendedPixelFormat(System.Drawing.Imaging.PixelFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat(PixelFormat)
  nameWithType: Image.IsExtendedPixelFormat(PixelFormat)
  fullName: Image.IsExtendedPixelFormat(PixelFormat)
- uid: System.Drawing.Image.Palette
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
  fullName: Image.Palette
- uid: System.Drawing.Imaging.ColorPalette
  parent: System.Drawing.Imaging
  isExternal: false
  name: ColorPalette
  nameWithType: ColorPalette
  fullName: System.Drawing.Imaging.ColorPalette
- uid: System.Drawing.Image.PhysicalDimension
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: Image.PhysicalDimension
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.Image.PixelFormat
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: Image.PixelFormat
- uid: System.Drawing.Image.PropertyIdList
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: Image.PropertyIdList
- uid: System.Int32[]
  parent: System
  isExternal: false
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.PropertyItems
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: Image.PropertyItems
- uid: System.Drawing.Imaging.PropertyItem[]
  parent: System.Drawing.Imaging
  isExternal: false
  name: PropertyItem[]
  nameWithType: PropertyItem[]
  fullName: System.Drawing.Imaging.PropertyItem[]
  spec.csharp:
  - uid: System.Drawing.Imaging.PropertyItem
    name: PropertyItem
    nameWithType: PropertyItem
    fullName: System.Drawing.Imaging.PropertyItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Image.RawFormat
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: Image.RawFormat
- uid: System.Drawing.Imaging.ImageFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: System.Drawing.Imaging.ImageFormat
- uid: System.Drawing.Image.RemovePropertyItem(System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem(Int32)
  nameWithType: Image.RemovePropertyItem(Int32)
  fullName: Image.RemovePropertyItem(Int32)
- uid: System.Drawing.Image.RotateFlip(System.Drawing.RotateFlipType)
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip(RotateFlipType)
  nameWithType: Image.RotateFlip(RotateFlipType)
  fullName: Image.RotateFlip(RotateFlipType)
- uid: System.Drawing.RotateFlipType
  parent: System.Drawing
  isExternal: false
  name: RotateFlipType
  nameWithType: RotateFlipType
  fullName: System.Drawing.RotateFlipType
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String, ImageCodecInfo, EncoderParameters)
  nameWithType: Image.Save(String, ImageCodecInfo, EncoderParameters)
  fullName: Image.Save(String, ImageCodecInfo, EncoderParameters)
- uid: System.Drawing.Imaging.ImageCodecInfo
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageCodecInfo
  nameWithType: ImageCodecInfo
  fullName: System.Drawing.Imaging.ImageCodecInfo
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageCodecInfo,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream, ImageCodecInfo, EncoderParameters)
  nameWithType: Image.Save(Stream, ImageCodecInfo, EncoderParameters)
  fullName: Image.Save(Stream, ImageCodecInfo, EncoderParameters)
- uid: System.Drawing.Image.Save(System.String,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String, ImageFormat)
  nameWithType: Image.Save(String, ImageFormat)
  fullName: Image.Save(String, ImageFormat)
- uid: System.Drawing.Image.Save(System.IO.Stream,System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(Stream, ImageFormat)
  nameWithType: Image.Save(Stream, ImageFormat)
  fullName: Image.Save(Stream, ImageFormat)
- uid: System.Drawing.Image.Save(System.String)
  parent: System.Drawing.Image
  isExternal: false
  name: Save(String)
  nameWithType: Image.Save(String)
  fullName: Image.Save(String)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(EncoderParameters)
  nameWithType: Image.SaveAdd(EncoderParameters)
  fullName: Image.SaveAdd(EncoderParameters)
- uid: System.Drawing.Image.SaveAdd(System.Drawing.Image,System.Drawing.Imaging.EncoderParameters)
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd(Image, EncoderParameters)
  nameWithType: Image.SaveAdd(Image, EncoderParameters)
  fullName: Image.SaveAdd(Image, EncoderParameters)
- uid: System.Drawing.Image.SelectActiveFrame(System.Drawing.Imaging.FrameDimension,System.Int32)
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame(FrameDimension, Int32)
  nameWithType: Image.SelectActiveFrame(FrameDimension, Int32)
  fullName: Image.SelectActiveFrame(FrameDimension, Int32)
- uid: System.Drawing.Image.SetPropertyItem(System.Drawing.Imaging.PropertyItem)
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem(PropertyItem)
  nameWithType: Image.SetPropertyItem(PropertyItem)
  fullName: Image.SetPropertyItem(PropertyItem)
- uid: System.Drawing.Image.Size
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
  fullName: Image.Size
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Image.Tag
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
  fullName: Image.Tag
- uid: System.Drawing.Image.VerticalResolution
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: Image.VerticalResolution
- uid: System.Drawing.Image.Width
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
  fullName: Image.Width
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Image
  isExternal: false
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Image.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Image.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Image.Dispose*
  parent: System.Drawing.Image
  isExternal: false
  name: Dispose
  nameWithType: Image.Dispose
  fullName: Image.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.Clone*
  parent: System.Drawing.Image
  isExternal: false
  name: Clone
  nameWithType: Image.Clone
  fullName: Image.Clone
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.Finalize*
  parent: System.Drawing.Image
  isExternal: false
  name: Finalize
  nameWithType: Image.Finalize
  fullName: Image.Finalize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.Flags*
  parent: System.Drawing.Image
  isExternal: false
  name: Flags
  nameWithType: Image.Flags
  fullName: Image.Flags
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.FrameDimensionsList*
  parent: System.Drawing.Image
  isExternal: false
  name: FrameDimensionsList
  nameWithType: Image.FrameDimensionsList
  fullName: Image.FrameDimensionsList
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.FromFile*
  parent: System.Drawing.Image
  isExternal: false
  name: FromFile
  nameWithType: Image.FromFile
  fullName: Image.FromFile
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.FromHbitmap*
  parent: System.Drawing.Image
  isExternal: false
  name: FromHbitmap
  nameWithType: Image.FromHbitmap
  fullName: Image.FromHbitmap
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.FromStream*
  parent: System.Drawing.Image
  isExternal: false
  name: FromStream
  nameWithType: Image.FromStream
  fullName: Image.FromStream
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.GetBounds*
  parent: System.Drawing.Image
  isExternal: false
  name: GetBounds
  nameWithType: Image.GetBounds
  fullName: Image.GetBounds
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.GetEncoderParameterList*
  parent: System.Drawing.Image
  isExternal: false
  name: GetEncoderParameterList
  nameWithType: Image.GetEncoderParameterList
  fullName: Image.GetEncoderParameterList
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.GetFrameCount*
  parent: System.Drawing.Image
  isExternal: false
  name: GetFrameCount
  nameWithType: Image.GetFrameCount
  fullName: Image.GetFrameCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.GetPixelFormatSize*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPixelFormatSize
  nameWithType: Image.GetPixelFormatSize
  fullName: Image.GetPixelFormatSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.GetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: GetPropertyItem
  nameWithType: Image.GetPropertyItem
  fullName: Image.GetPropertyItem
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.GetThumbnailImage*
  parent: System.Drawing.Image
  isExternal: false
  name: GetThumbnailImage
  nameWithType: Image.GetThumbnailImage
  fullName: Image.GetThumbnailImage
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.Height*
  parent: System.Drawing.Image
  isExternal: false
  name: Height
  nameWithType: Image.Height
  fullName: Image.Height
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.HorizontalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: HorizontalResolution
  nameWithType: Image.HorizontalResolution
  fullName: Image.HorizontalResolution
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.IsAlphaPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsAlphaPixelFormat
  nameWithType: Image.IsAlphaPixelFormat
  fullName: Image.IsAlphaPixelFormat
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.IsCanonicalPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsCanonicalPixelFormat
  nameWithType: Image.IsCanonicalPixelFormat
  fullName: Image.IsCanonicalPixelFormat
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.IsExtendedPixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: IsExtendedPixelFormat
  nameWithType: Image.IsExtendedPixelFormat
  fullName: Image.IsExtendedPixelFormat
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.Palette*
  parent: System.Drawing.Image
  isExternal: false
  name: Palette
  nameWithType: Image.Palette
  fullName: Image.Palette
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.PhysicalDimension*
  parent: System.Drawing.Image
  isExternal: false
  name: PhysicalDimension
  nameWithType: Image.PhysicalDimension
  fullName: Image.PhysicalDimension
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.PixelFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: PixelFormat
  nameWithType: Image.PixelFormat
  fullName: Image.PixelFormat
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.PropertyIdList*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyIdList
  nameWithType: Image.PropertyIdList
  fullName: Image.PropertyIdList
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.PropertyItems*
  parent: System.Drawing.Image
  isExternal: false
  name: PropertyItems
  nameWithType: Image.PropertyItems
  fullName: Image.PropertyItems
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.RawFormat*
  parent: System.Drawing.Image
  isExternal: false
  name: RawFormat
  nameWithType: Image.RawFormat
  fullName: Image.RawFormat
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.RemovePropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: RemovePropertyItem
  nameWithType: Image.RemovePropertyItem
  fullName: Image.RemovePropertyItem
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.RotateFlip*
  parent: System.Drawing.Image
  isExternal: false
  name: RotateFlip
  nameWithType: Image.RotateFlip
  fullName: Image.RotateFlip
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.Save*
  parent: System.Drawing.Image
  isExternal: false
  name: Save
  nameWithType: Image.Save
  fullName: Image.Save
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.SaveAdd*
  parent: System.Drawing.Image
  isExternal: false
  name: SaveAdd
  nameWithType: Image.SaveAdd
  fullName: Image.SaveAdd
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.SelectActiveFrame*
  parent: System.Drawing.Image
  isExternal: false
  name: SelectActiveFrame
  nameWithType: Image.SelectActiveFrame
  fullName: Image.SelectActiveFrame
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.SetPropertyItem*
  parent: System.Drawing.Image
  isExternal: false
  name: SetPropertyItem
  nameWithType: Image.SetPropertyItem
  fullName: Image.SetPropertyItem
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.Size*
  parent: System.Drawing.Image
  isExternal: false
  name: Size
  nameWithType: Image.Size
  fullName: Image.Size
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.Tag*
  parent: System.Drawing.Image
  isExternal: false
  name: Tag
  nameWithType: Image.Tag
  fullName: Image.Tag
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.VerticalResolution*
  parent: System.Drawing.Image
  isExternal: false
  name: VerticalResolution
  nameWithType: Image.VerticalResolution
  fullName: Image.VerticalResolution
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.Width*
  parent: System.Drawing.Image
  isExternal: false
  name: Width
  nameWithType: Image.Width
  fullName: Image.Width
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Drawing.Image.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Image
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Image.System.Runtime.Serialization.ISerializable.GetObjectData
  fullName: Image.System.Runtime.Serialization.ISerializable.GetObjectData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/Image.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.ICloneable
  parent: System
  isExternal: false
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
