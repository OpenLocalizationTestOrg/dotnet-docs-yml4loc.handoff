{"nodes":[{"content":"Provides default functionality for all SOAP attributes.","nodes":[{"pos":[0,55],"content":"Provides default functionality for all SOAP attributes.","nodes":[{"content":"Provides default functionality for all SOAP attributes.","pos":[0,55]}]}],"pos":[789,845],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Metadata.SoapAttribute> is nonfunctional, and can be used only as the base class for SOAP attributes.","nodes":[{"pos":[0,135],"content":"The <xref:System.Runtime.Remoting.Metadata.SoapAttribute> is nonfunctional, and can be used only as the base class for SOAP attributes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Metadata.SoapAttribute&gt;</ph> is nonfunctional, and can be used only as the base class for SOAP attributes.","pos":[0,135],"source":"The <xref:System.Runtime.Remoting.Metadata.SoapAttribute> is nonfunctional, and can be used only as the base class for SOAP attributes."}]}],"pos":[856,992],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of <xref href=\"System.Runtime.Remoting.Metadata.SoapAttribute\"></xref>.","nodes":[{"pos":[0,91],"content":"Creates an instance of <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Metadata.SoapAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an instance of <xref href=\"System.Runtime.Remoting.Metadata.SoapAttribute\"></xref>."}],"pos":[6253,6345],"yaml":true},{"content":"Gets or sets a value indicating whether the type must be nested during SOAP serialization.","nodes":[{"pos":[0,90],"content":"Gets or sets a value indicating whether the type must be nested during SOAP serialization.","nodes":[{"content":"Gets or sets a value indicating whether the type must be nested during SOAP serialization.","pos":[0,90]}]}],"pos":[7579,7670],"yaml":true},{"content":"`true` if the target object must be nested during SOAP serialization; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the target object must be nested during SOAP serialization; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the target object must be nested during SOAP serialization; otherwise, `false`."}],"pos":[7794,7886],"yaml":true},{"content":"The XML namespace to which the target of the current SOAP attribute is serialized.","nodes":[{"pos":[0,82],"content":"The XML namespace to which the target of the current SOAP attribute is serialized.","nodes":[{"content":"The XML namespace to which the target of the current SOAP attribute is serialized.","pos":[0,82]}]}],"pos":[9101,9184],"yaml":true},{"content":"You can get or set the value of the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.ProtXmlNamespace> field through the public <xref:System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace%2A> property.","nodes":[{"pos":[0,211],"content":"You can get or set the value of the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.ProtXmlNamespace> field through the public <xref:System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace%2A> property.","nodes":[{"content":"You can get or set the value of the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Metadata.SoapAttribute.ProtXmlNamespace&gt;</ph> field through the public <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace%2A&gt;</ph> property.","pos":[0,211],"source":"You can get or set the value of the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.ProtXmlNamespace> field through the public <xref:System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace%2A> property."}]}],"pos":[9195,9407],"yaml":true,"extradata":"MT"},{"content":"A reflection object used by attribute classes derived from the <xref href=\"System.Runtime.Remoting.Metadata.SoapAttribute\"></xref> class to set XML serialization information.","nodes":[{"pos":[0,174],"content":"A reflection object used by attribute classes derived from the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Metadata.SoapAttribute\"&gt;&lt;/xref&gt;</ph> class to set XML serialization information.","source":"A reflection object used by attribute classes derived from the <xref href=\"System.Runtime.Remoting.Metadata.SoapAttribute\"></xref> class to set XML serialization information."}],"pos":[10641,10816],"yaml":true},{"content":"You do not need to use the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.ReflectInfo> field directly.","nodes":[{"pos":[0,108],"content":"You do not need to use the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.ReflectInfo> field directly.","nodes":[{"content":"You do not need to use the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Metadata.SoapAttribute.ReflectInfo&gt;</ph> field directly.","pos":[0,108],"source":"You do not need to use the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.ReflectInfo> field directly."}]}],"pos":[10827,10936],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the target of the current attribute will be serialized as an XML attribute instead of an XML field.","nodes":[{"pos":[0,139],"content":"Gets or sets a value indicating whether the target of the current attribute will be serialized as an XML attribute instead of an XML field.","nodes":[{"content":"Gets or sets a value indicating whether the target of the current attribute will be serialized as an XML attribute instead of an XML field.","pos":[0,139]}]}],"pos":[12174,12314],"yaml":true},{"content":"For example, if a field `FieldA` of an object `ObjectB` is qualified with the `SoapFieldAttribute(UseAttribute=true)` attribute, `FieldA` will be serialized as `<ObjectB><FieldA>5</FieldA></ObjectB>`. If the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute%2A> property is set to `false`, `FieldA` will be serialized as `<ObjectB FieldA=\"5\"></ObjectB>`.","nodes":[{"pos":[0,370],"content":"For example, if a field `FieldA` of an object `ObjectB` is qualified with the `SoapFieldAttribute(UseAttribute=true)` attribute, `FieldA` will be serialized as `<ObjectB><FieldA>5</FieldA></ObjectB>`. If the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute%2A> property is set to `false`, `FieldA` will be serialized as `<ObjectB FieldA=\"5\"></ObjectB>`.","nodes":[{"content":"For example, if a field <ph id=\"ph1\">`FieldA`</ph> of an object <ph id=\"ph2\">`ObjectB`</ph> is qualified with the <ph id=\"ph3\">`SoapFieldAttribute(UseAttribute=true)`</ph> attribute, <ph id=\"ph4\">`FieldA`</ph> will be serialized as <ph id=\"ph5\">`&lt;ObjectB&gt;&lt;FieldA&gt;5&lt;/FieldA&gt;&lt;/ObjectB&gt;`</ph>.","pos":[0,200],"source":"For example, if a field `FieldA` of an object `ObjectB` is qualified with the `SoapFieldAttribute(UseAttribute=true)` attribute, `FieldA` will be serialized as `<ObjectB><FieldA>5</FieldA></ObjectB>`."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, <ph id=\"ph3\">`FieldA`</ph> will be serialized as <ph id=\"ph4\">`&lt;ObjectB FieldA=\"5\"&gt;&lt;/ObjectB&gt;`</ph>.","pos":[201,370],"source":" If the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute%2A> property is set to `false`, `FieldA` will be serialized as `<ObjectB FieldA=\"5\"></ObjectB>`."}]}],"pos":[12325,12696],"yaml":true,"extradata":"MT"},{"content":"`true` if the target object of the current attribute must be serialized as an XML attribute; `false` if the target object must be serialized as a subelement.","nodes":[{"pos":[0,157],"content":"<ph id=\"ph1\">`true`</ph> if the target object of the current attribute must be serialized as an XML attribute; <ph id=\"ph2\">`false`</ph> if the target object must be serialized as a subelement.","source":"`true` if the target object of the current attribute must be serialized as an XML attribute; `false` if the target object must be serialized as a subelement."}],"pos":[12824,12984],"yaml":true},{"content":"Gets or sets the XML namespace name.","nodes":[{"pos":[0,36],"content":"Gets or sets the XML namespace name.","nodes":[{"content":"Gets or sets the XML namespace name.","pos":[0,36]}]}],"pos":[14182,14219],"yaml":true},{"content":"If the current property returns `null`, then the namespace is not qualified.","nodes":[{"pos":[0,76],"content":"If the current property returns <ph id=\"ph1\">`null`</ph>, then the namespace is not qualified.","source":"If the current property returns `null`, then the namespace is not qualified."}],"pos":[14230,14307],"yaml":true,"extradata":"MT"},{"content":"The XML namespace name under which the target of the current attribute is serialized.","nodes":[{"pos":[0,85],"content":"The XML namespace name under which the target of the current attribute is serialized.","nodes":[{"content":"The XML namespace name under which the target of the current attribute is serialized.","pos":[0,85]}]}],"pos":[14436,14522],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute\n  commentId: T:System.Runtime.Remoting.Metadata.SoapAttribute\n  id: SoapAttribute\n  children:\n  - System.Runtime.Remoting.Metadata.SoapAttribute.#ctor\n  - System.Runtime.Remoting.Metadata.SoapAttribute.Embedded\n  - System.Runtime.Remoting.Metadata.SoapAttribute.ProtXmlNamespace\n  - System.Runtime.Remoting.Metadata.SoapAttribute.ReflectInfo\n  - System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute\n  - System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace\n  langs:\n  - csharp\n  name: SoapAttribute\n  nameWithType: SoapAttribute\n  fullName: System.Runtime.Remoting.Metadata.SoapAttribute\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Metadata\n  summary: Provides default functionality for all SOAP attributes.\n  remarks: The <xref:System.Runtime.Remoting.Metadata.SoapAttribute> is nonfunctional, and can be used only as the base class for SOAP attributes.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SoapAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  derivedClasses:\n  - System.Runtime.Remoting.Metadata.SoapFieldAttribute\n  - System.Runtime.Remoting.Metadata.SoapMethodAttribute\n  - System.Runtime.Remoting.Metadata.SoapParameterAttribute\n  - System.Runtime.Remoting.Metadata.SoapTypeAttribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.#ctor\n  commentId: M:System.Runtime.Remoting.Metadata.SoapAttribute.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  langs:\n  - csharp\n  name: SoapAttribute()\n  nameWithType: SoapAttribute.SoapAttribute()\n  fullName: SoapAttribute.SoapAttribute()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Metadata\n  summary: Creates an instance of <xref href=\"System.Runtime.Remoting.Metadata.SoapAttribute\"></xref>.\n  syntax:\n    content: public SoapAttribute ();\n    parameters: []\n  overload: System.Runtime.Remoting.Metadata.SoapAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.Embedded\n  commentId: P:System.Runtime.Remoting.Metadata.SoapAttribute.Embedded\n  id: Embedded\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  langs:\n  - csharp\n  name: Embedded\n  nameWithType: SoapAttribute.Embedded\n  fullName: SoapAttribute.Embedded\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Metadata\n  summary: Gets or sets a value indicating whether the type must be nested during SOAP serialization.\n  syntax:\n    content: public virtual bool Embedded { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the target object must be nested during SOAP serialization; otherwise, `false`.'\n  overload: System.Runtime.Remoting.Metadata.SoapAttribute.Embedded*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.ProtXmlNamespace\n  commentId: F:System.Runtime.Remoting.Metadata.SoapAttribute.ProtXmlNamespace\n  id: ProtXmlNamespace\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  langs:\n  - csharp\n  name: ProtXmlNamespace\n  nameWithType: SoapAttribute.ProtXmlNamespace\n  fullName: SoapAttribute.ProtXmlNamespace\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Metadata\n  summary: The XML namespace to which the target of the current SOAP attribute is serialized.\n  remarks: You can get or set the value of the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.ProtXmlNamespace> field through the public <xref:System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace%2A> property.\n  syntax:\n    content: protected string ProtXmlNamespace;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.ReflectInfo\n  commentId: F:System.Runtime.Remoting.Metadata.SoapAttribute.ReflectInfo\n  id: ReflectInfo\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  langs:\n  - csharp\n  name: ReflectInfo\n  nameWithType: SoapAttribute.ReflectInfo\n  fullName: SoapAttribute.ReflectInfo\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Metadata\n  summary: A reflection object used by attribute classes derived from the <xref href=\"System.Runtime.Remoting.Metadata.SoapAttribute\"></xref> class to set XML serialization information.\n  remarks: You do not need to use the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.ReflectInfo> field directly.\n  syntax:\n    content: protected object ReflectInfo;\n    return:\n      type: System.Object\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute\n  commentId: P:System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute\n  id: UseAttribute\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  langs:\n  - csharp\n  name: UseAttribute\n  nameWithType: SoapAttribute.UseAttribute\n  fullName: SoapAttribute.UseAttribute\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Metadata\n  summary: Gets or sets a value indicating whether the target of the current attribute will be serialized as an XML attribute instead of an XML field.\n  remarks: For example, if a field `FieldA` of an object `ObjectB` is qualified with the `SoapFieldAttribute(UseAttribute=true)` attribute, `FieldA` will be serialized as `<ObjectB><FieldA>5</FieldA></ObjectB>`. If the <xref:System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute%2A> property is set to `false`, `FieldA` will be serialized as `<ObjectB FieldA=\"5\"></ObjectB>`.\n  syntax:\n    content: public virtual bool UseAttribute { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the target object of the current attribute must be serialized as an XML attribute; `false` if the target object must be serialized as a subelement.'\n  overload: System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace\n  commentId: P:System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace\n  id: XmlNamespace\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  langs:\n  - csharp\n  name: XmlNamespace\n  nameWithType: SoapAttribute.XmlNamespace\n  fullName: SoapAttribute.XmlNamespace\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Metadata\n  summary: Gets or sets the XML namespace name.\n  remarks: If the current property returns `null`, then the namespace is not qualified.\n  syntax:\n    content: public virtual string XmlNamespace { get; set; }\n    return:\n      type: System.String\n      description: The XML namespace name under which the target of the current attribute is serialized.\n  overload: System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.#ctor\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: SoapAttribute()\n  nameWithType: SoapAttribute.SoapAttribute()\n  fullName: SoapAttribute.SoapAttribute()\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.Embedded\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: Embedded\n  nameWithType: SoapAttribute.Embedded\n  fullName: SoapAttribute.Embedded\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.ProtXmlNamespace\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: ProtXmlNamespace\n  nameWithType: SoapAttribute.ProtXmlNamespace\n  fullName: SoapAttribute.ProtXmlNamespace\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.ReflectInfo\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: ReflectInfo\n  nameWithType: SoapAttribute.ReflectInfo\n  fullName: SoapAttribute.ReflectInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: UseAttribute\n  nameWithType: SoapAttribute.UseAttribute\n  fullName: SoapAttribute.UseAttribute\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: XmlNamespace\n  nameWithType: SoapAttribute.XmlNamespace\n  fullName: SoapAttribute.XmlNamespace\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.#ctor*\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: SoapAttribute\n  nameWithType: SoapAttribute.SoapAttribute\n  fullName: SoapAttribute.SoapAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.Embedded*\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: Embedded\n  nameWithType: SoapAttribute.Embedded\n  fullName: SoapAttribute.Embedded\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute*\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: UseAttribute\n  nameWithType: SoapAttribute.UseAttribute\n  fullName: SoapAttribute.UseAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n- uid: System.Runtime.Remoting.Metadata.SoapAttribute.XmlNamespace*\n  parent: System.Runtime.Remoting.Metadata.SoapAttribute\n  isExternal: false\n  name: XmlNamespace\n  nameWithType: SoapAttribute.XmlNamespace\n  fullName: SoapAttribute.XmlNamespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Metadata/SoapAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}