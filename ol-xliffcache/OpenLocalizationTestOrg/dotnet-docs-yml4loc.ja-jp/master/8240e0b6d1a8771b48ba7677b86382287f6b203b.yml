### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.Consistency
  commentId: T:System.Runtime.ConstrainedExecution.Consistency
  id: Consistency
  children:
  - System.Runtime.ConstrainedExecution.Consistency.MayCorruptAppDomain
  - System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance
  - System.Runtime.ConstrainedExecution.Consistency.MayCorruptProcess
  - System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState
  langs:
  - csharp
  name: Consistency
  nameWithType: Consistency
  fullName: System.Runtime.ConstrainedExecution.Consistency
  type: Enum
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.ConstrainedExecution
  summary: Specifies a reliability contract.
  remarks: The <xref:System.Runtime.ConstrainedExecution.Consistency> enumeration is used as a parameter to the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute> attribute to specify the reliability guarantee on a given method.
  example:
  - "The following code example demonstrates the use of the <xref:System.Runtime.ConstrainedExecution.Consistency> enumeration when specifying a constrained execution region for a method. This code example  is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.  \n  \n [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]\n [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]"
  syntax:
    content: public enum Consistency
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ConstrainedExecution/Consistency.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Runtime.ConstrainedExecution.Consistency.MayCorruptAppDomain
  commentId: F:System.Runtime.ConstrainedExecution.Consistency.MayCorruptAppDomain
  id: MayCorruptAppDomain
  parent: System.Runtime.ConstrainedExecution.Consistency
  langs:
  - csharp
  name: MayCorruptAppDomain
  nameWithType: Consistency.MayCorruptAppDomain
  fullName: Consistency.MayCorruptAppDomain
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.ConstrainedExecution
  summary: In the face of exceptional conditions, the common language runtime (CLR) makes no guarantees regarding state consistency in the current application domain.
  syntax:
    content: MayCorruptAppDomain
    return:
      type: System.Runtime.ConstrainedExecution.Consistency
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ConstrainedExecution/Consistency.xml
- uid: System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance
  commentId: F:System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance
  id: MayCorruptInstance
  parent: System.Runtime.ConstrainedExecution.Consistency
  langs:
  - csharp
  name: MayCorruptInstance
  nameWithType: Consistency.MayCorruptInstance
  fullName: Consistency.MayCorruptInstance
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.ConstrainedExecution
  summary: In the face of exceptional conditions, the method is guaranteed to limit state corruption to the current instance.
  syntax:
    content: MayCorruptInstance
    return:
      type: System.Runtime.ConstrainedExecution.Consistency
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ConstrainedExecution/Consistency.xml
- uid: System.Runtime.ConstrainedExecution.Consistency.MayCorruptProcess
  commentId: F:System.Runtime.ConstrainedExecution.Consistency.MayCorruptProcess
  id: MayCorruptProcess
  parent: System.Runtime.ConstrainedExecution.Consistency
  langs:
  - csharp
  name: MayCorruptProcess
  nameWithType: Consistency.MayCorruptProcess
  fullName: Consistency.MayCorruptProcess
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.ConstrainedExecution
  summary: In the face of exceptional conditions, the CLR makes no guarantees regarding state consistency; that is, the condition might corrupt the process.
  syntax:
    content: MayCorruptProcess
    return:
      type: System.Runtime.ConstrainedExecution.Consistency
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ConstrainedExecution/Consistency.xml
- uid: System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState
  commentId: F:System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState
  id: WillNotCorruptState
  parent: System.Runtime.ConstrainedExecution.Consistency
  langs:
  - csharp
  name: WillNotCorruptState
  nameWithType: Consistency.WillNotCorruptState
  fullName: Consistency.WillNotCorruptState
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Runtime.ConstrainedExecution
  summary: In the face of exceptional conditions, the method is guaranteed not to corrupt state.
  remarks: >-
    > [!NOTE]

    >  This does not guarantee that the method will never fail; however, it does guarantee that such a failure will never corrupt state.
  syntax:
    content: WillNotCorruptState
    return:
      type: System.Runtime.ConstrainedExecution.Consistency
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.ConstrainedExecution/Consistency.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.Runtime.ConstrainedExecution.Consistency.MayCorruptAppDomain
  parent: System.Runtime.ConstrainedExecution.Consistency
  isExternal: false
  name: MayCorruptAppDomain
  nameWithType: Consistency.MayCorruptAppDomain
  fullName: Consistency.MayCorruptAppDomain
- uid: System.Runtime.ConstrainedExecution.Consistency
  parent: System.Runtime.ConstrainedExecution
  isExternal: false
  name: Consistency
  nameWithType: Consistency
  fullName: System.Runtime.ConstrainedExecution.Consistency
- uid: System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance
  parent: System.Runtime.ConstrainedExecution.Consistency
  isExternal: false
  name: MayCorruptInstance
  nameWithType: Consistency.MayCorruptInstance
  fullName: Consistency.MayCorruptInstance
- uid: System.Runtime.ConstrainedExecution.Consistency.MayCorruptProcess
  parent: System.Runtime.ConstrainedExecution.Consistency
  isExternal: false
  name: MayCorruptProcess
  nameWithType: Consistency.MayCorruptProcess
  fullName: Consistency.MayCorruptProcess
- uid: System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState
  parent: System.Runtime.ConstrainedExecution.Consistency
  isExternal: false
  name: WillNotCorruptState
  nameWithType: Consistency.WillNotCorruptState
  fullName: Consistency.WillNotCorruptState
