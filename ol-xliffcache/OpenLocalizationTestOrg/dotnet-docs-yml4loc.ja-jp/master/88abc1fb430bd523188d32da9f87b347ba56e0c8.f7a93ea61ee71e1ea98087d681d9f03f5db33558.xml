{"nodes":[{"content":"Defines and represents a dynamic assembly.","nodes":[{"pos":[0,42],"content":"Defines and represents a dynamic assembly.","nodes":[{"content":"Defines and represents a dynamic assembly.","pos":[0,42]}]}],"pos":[5839,5882],"yaml":true},{"content":"A dynamic assembly is an assembly that is created using the Reflection Emit APIs. The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method. To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly. Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.  \n  \n If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method.  \n  \n Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects. You can load the defined dynamic assembly and call the methods on the loaded assembly. For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object.  \n  \n The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk. So, strong names will not work with transient dynamic assemblies.  \n  \n To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName> method.  \n  \n## Reflection emit dynamic assembly scenarios  \n The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies.  \n  \n### Dynamic modules  \n Reflection emit supports the creation of dynamic modules defined in dynamic assemblies. A dynamic module created in a dynamic assembly can be transient or persistable.  \n  \n### Restrictions on type references  \n Assemblies can reference types defined in another assembly. A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly. However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module. This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.  \n  \n### Restrictions on emitting to remote application domains  \n Some scenarios require a dynamic assembly to be created and executed in a remote application domain. Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain. The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.  \n  \n### Dynamic assembly access modes  \n Dynamic assemblies can be created using one of the following access modes:  \n  \n-   <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName>  \n  \n     The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient. The dynamic assembly can only be used to execute the emitted code.  \n  \n-   <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName>  \n  \n     The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.  \n  \n-   <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName>  \n  \n     The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk.  \n  \n The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=fullName> method when the dynamic assembly is defined and cannot be changed later. The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.","nodes":[{"pos":[0,617],"content":"A dynamic assembly is an assembly that is created using the Reflection Emit APIs. The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method. To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly. Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.","nodes":[{"content":"A dynamic assembly is an assembly that is created using the Reflection Emit APIs. The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method. To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly. Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.","pos":[0,617],"nodes":[{"content":"A dynamic assembly is an assembly that is created using the Reflection Emit APIs.","pos":[0,81]},{"content":"The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.Save%2A&gt;</ph> method.","pos":[82,234],"source":" The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method."},{"content":"To generate an executable, the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A&gt;</ph> method must be called to identify the method that is the entry point to the assembly.","pos":[235,414],"source":" To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly."},{"content":"Assemblies are saved as DLLs by default, unless the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A&gt;</ph> method requests the generation of a console application or a Windows-based application.","pos":[415,617],"source":" Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application."}]}]},{"pos":[624,873],"content":"If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method.","nodes":[{"content":"If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph> method.","pos":[0,249],"source":"If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method."}]},{"pos":[880,1334],"content":"Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects. You can load the defined dynamic assembly and call the methods on the loaded assembly. For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object.","nodes":[{"content":"Some methods on the base <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly&gt;</ph> class, such as <ph id=\"ph2\">`GetModules`</ph> and <ph id=\"ph3\">`GetLoadedModules`</ph>, will not work correctly when called from <ph id=\"ph4\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph> objects.","pos":[0,206],"source":"Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects."},{"content":"You can load the defined dynamic assembly and call the methods on the loaded assembly.","pos":[207,293]},{"content":"For example, to ensure that resource modules are included in the returned module list, call <ph id=\"ph1\">`GetModules`</ph> on the loaded <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly&gt;</ph> object.","pos":[294,454],"source":" For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object."}]},{"pos":[1341,1549],"content":"The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk. So, strong names will not work with transient dynamic assemblies.","nodes":[{"content":"The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk. So, strong names will not work with transient dynamic assemblies.","pos":[0,208],"nodes":[{"content":"The signing of a dynamic assembly using <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName.KeyPair%2A&gt;</ph> is not effective until the assembly is saved to disk.","pos":[0,142],"source":"The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk."},{"content":"So, strong names will not work with transient dynamic assemblies.","pos":[143,208]}]}]},{"pos":[1556,1709],"content":"To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName> method.","nodes":[{"content":"To get an <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph> object, use the <ph id=\"ph2\">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,153],"source":"To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName> method."}]},{"pos":[1718,1760],"content":"Reflection emit dynamic assembly scenarios","linkify":"Reflection emit dynamic assembly scenarios","nodes":[{"content":"Reflection emit dynamic assembly scenarios","pos":[0,42]}]},{"pos":[1764,1902],"content":"The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies.","nodes":[{"content":"The following are some things to consider when using the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph> class to create dynamic assemblies.","pos":[0,138],"source":"The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies."}]},{"pos":[1912,1927],"content":"Dynamic modules","linkify":"Dynamic modules","nodes":[{"content":"Dynamic modules","pos":[0,15]}]},{"pos":[1931,2098],"content":"Reflection emit supports the creation of dynamic modules defined in dynamic assemblies. A dynamic module created in a dynamic assembly can be transient or persistable.","nodes":[{"content":"Reflection emit supports the creation of dynamic modules defined in dynamic assemblies. A dynamic module created in a dynamic assembly can be transient or persistable.","pos":[0,167],"nodes":[{"content":"Reflection emit supports the creation of dynamic modules defined in dynamic assemblies.","pos":[0,87]},{"content":"A dynamic module created in a dynamic assembly can be transient or persistable.","pos":[88,167]}]}]},{"pos":[2108,2139],"content":"Restrictions on type references","linkify":"Restrictions on type references","nodes":[{"content":"Restrictions on type references","pos":[0,31]}]},{"pos":[2143,2678],"content":"Assemblies can reference types defined in another assembly. A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly. However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module. This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.","nodes":[{"content":"Assemblies can reference types defined in another assembly. A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly. However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module. This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.","pos":[0,535],"nodes":[{"content":"Assemblies can reference types defined in another assembly.","pos":[0,59]},{"content":"A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly.","pos":[60,216]},{"content":"However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module.","pos":[217,356]},{"content":"This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.","pos":[357,535]}]}]},{"pos":[2688,2742],"content":"Restrictions on emitting to remote application domains","linkify":"Restrictions on emitting to remote application domains","nodes":[{"content":"Restrictions on emitting to remote application domains","pos":[0,54]}]},{"pos":[2746,3145],"content":"Some scenarios require a dynamic assembly to be created and executed in a remote application domain. Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain. The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.","nodes":[{"content":"Some scenarios require a dynamic assembly to be created and executed in a remote application domain. Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain. The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.","pos":[0,399],"nodes":[{"content":"Some scenarios require a dynamic assembly to be created and executed in a remote application domain.","pos":[0,100]},{"content":"Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain.","pos":[101,205]},{"content":"The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.","pos":[206,399]}]}]},{"pos":[3155,3184],"content":"Dynamic assembly access modes","linkify":"Dynamic assembly access modes","nodes":[{"content":"Dynamic assembly access modes","pos":[0,29]}]},{"pos":[3188,3262],"content":"Dynamic assemblies can be created using one of the following access modes:","nodes":[{"content":"Dynamic assemblies can be created using one of the following access modes:","pos":[0,74]}]},{"pos":[3272,3348],"content":"<xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName>","nodes":[]},{"pos":[3359,3531],"content":"The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient. The dynamic assembly can only be used to execute the emitted code.","nodes":[{"content":"The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient. The dynamic assembly can only be used to execute the emitted code.","pos":[0,172],"nodes":[{"content":"The dynamic assembly represented by an <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph> object is transient.","pos":[0,105],"source":"The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient."},{"content":"The dynamic assembly can only be used to execute the emitted code.","pos":[106,172]}]}]},{"pos":[3541,3617],"content":"<xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName>","nodes":[]},{"pos":[3628,3830],"content":"The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.","nodes":[{"content":"The dynamic assembly represented by an <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.","pos":[0,202],"source":"The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk."}]},{"pos":[3840,3916],"content":"<xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName>","nodes":[]},{"pos":[3927,4110],"content":"The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk.","nodes":[{"content":"The dynamic assembly represented by an <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph> object is persistable, but can also be executed before and/or after the assembly is saved to disk.","pos":[0,183],"source":"The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk."}]},{"pos":[4117,4532],"content":"The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=fullName> method when the dynamic assembly is defined and cannot be changed later. The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.","nodes":[{"content":"The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=fullName> method when the dynamic assembly is defined and cannot be changed later. The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.","pos":[0,415],"nodes":[{"content":"The access mode must be specified by providing the appropriate <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilderAccess&gt;</ph> value in the call to the <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=fullName&gt;</ph> method when the dynamic assembly is defined and cannot be changed later.","pos":[0,308],"source":"The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=fullName> method when the dynamic assembly is defined and cannot be changed later."},{"content":"The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.","pos":[309,415]}]}]}],"pos":[5893,10465],"yaml":true,"extradata":"MT"},{"content":"Adds an existing resource file to this assembly.","nodes":[{"pos":[0,48],"content":"Adds an existing resource file to this assembly.","nodes":[{"content":"Adds an existing resource file to this assembly.","pos":[0,48]}]}],"pos":[19131,19180],"yaml":true},{"content":"`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.  \n  \n The managed resources in the file are assumed to be public.  \n  \n The specified resource file must be in the directory where the assembly will be saved.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`fileName`</ph> should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.","source":"`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file."},{"pos":[143,202],"content":"The managed resources in the file are assumed to be public.","nodes":[{"content":"The managed resources in the file are assumed to be public.","pos":[0,59]}]},{"pos":[209,295],"content":"The specified resource file must be in the directory where the assembly will be saved.","nodes":[{"content":"The specified resource file must be in the directory where the assembly will be saved.","pos":[0,86]}]},{"pos":[303,832],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[19191,20033],"yaml":true,"extradata":"MT"},{"content":"The logical name of the resource.","nodes":[{"pos":[0,33],"content":"The logical name of the resource.","nodes":[{"content":"The logical name of the resource.","pos":[0,33]}]}],"pos":[20974,21008],"yaml":true},{"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path; the file must be in the same directory as the assembly to which it is added.","nodes":[{"pos":[0,186],"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path; the file must be in the same directory as the assembly to which it is added.","nodes":[{"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path; the file must be in the same directory as the assembly to which it is added.","pos":[0,186],"nodes":[{"content":"The physical file name (.resources file) to which the logical name is mapped.","pos":[0,77]},{"content":"This should not include a path; the file must be in the same directory as the assembly to which it is added.","pos":[78,186]}]}]}],"pos":[21072,21259],"yaml":true},{"content":"<code>name</code> has been previously defined.  \n  \n -or-  \n  \n There is another file in the assembly named <code>fileName</code>.  \n  \n -or-  \n  \n The length of <code>name</code> is zero.  \n  \n -or-  \n  \n The length of <code>fileName</code> is zero, or if <code>fileName</code> includes a path.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> has been previously defined.","source":"<code>name</code> has been previously defined."},{"pos":[53,57],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[64,130],"content":"There is another file in the assembly named <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There is another file in the assembly named <code>fileName</code>."},{"pos":[137,141],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[148,188],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> is zero."},{"pos":[195,199],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[206,295],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero, or if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">fileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> includes a path.","source":"The length of <code>fileName</code> is zero, or if <code>fileName</code> includes a path."}],"pos":[21435,21745],"yaml":true},{"content":"<code>name</code> or <code>fileName</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>fileName</code> is `null`."}],"pos":[21847,21901],"yaml":true},{"content":"The file <code>fileName</code> is not found.","nodes":[{"pos":[0,44],"content":"The file <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not found.","source":"The file <code>fileName</code> is not found."}],"pos":[22009,22054],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[22166,22216],"yaml":true},{"content":"Adds an existing resource file to this assembly.","nodes":[{"pos":[0,48],"content":"Adds an existing resource file to this assembly.","nodes":[{"content":"Adds an existing resource file to this assembly.","pos":[0,48]}]}],"pos":[23573,23622],"yaml":true},{"content":"`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.  \n  \n Attributes can be specified for the managed resource.  \n  \n The specified resource file must be in the directory where the assembly will be saved.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">`fileName`</ph> should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.","source":"`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file."},{"pos":[143,196],"content":"Attributes can be specified for the managed resource.","nodes":[{"content":"Attributes can be specified for the managed resource.","pos":[0,53]}]},{"pos":[203,289],"content":"The specified resource file must be in the directory where the assembly will be saved.","nodes":[{"content":"The specified resource file must be in the directory where the assembly will be saved.","pos":[0,86]}]},{"pos":[297,826],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[23633,24469],"yaml":true,"extradata":"MT"},{"content":"The logical name of the resource.","nodes":[{"pos":[0,33],"content":"The logical name of the resource.","nodes":[{"content":"The logical name of the resource.","pos":[0,33]}]}],"pos":[25458,25492],"yaml":true},{"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path; the file must be in the same directory as the assembly to which it is added.","nodes":[{"pos":[0,186],"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path; the file must be in the same directory as the assembly to which it is added.","nodes":[{"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path; the file must be in the same directory as the assembly to which it is added.","pos":[0,186],"nodes":[{"content":"The physical file name (.resources file) to which the logical name is mapped.","pos":[0,77]},{"content":"This should not include a path; the file must be in the same directory as the assembly to which it is added.","pos":[78,186]}]}]}],"pos":[25556,25743],"yaml":true},{"content":"The resource attributes.","nodes":[{"pos":[0,24],"content":"The resource attributes.","nodes":[{"content":"The resource attributes.","pos":[0,24]}]}],"pos":[25831,25856],"yaml":true},{"content":"<code>name</code> has been previously defined.  \n  \n -or-  \n  \n There is another file in the assembly named <code>fileName</code>.  \n  \n -or-  \n  \n The length of <code>name</code> is zero or if the length of <code>fileName</code> is zero.  \n  \n -or-  \n  \n <code>fileName</code> includes a path.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> has been previously defined.","source":"<code>name</code> has been previously defined."},{"pos":[53,57],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[64,130],"content":"There is another file in the assembly named <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There is another file in the assembly named <code>fileName</code>."},{"pos":[137,141],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[148,238],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero or if the length of <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">fileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> is zero or if the length of <code>fileName</code> is zero."},{"pos":[245,249],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[256,294],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> includes a path.","source":"<code>fileName</code> includes a path."}],"pos":[26032,26341],"yaml":true},{"content":"<code>name</code> or <code>fileName</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>fileName</code> is `null`."}],"pos":[26443,26497],"yaml":true},{"content":"If the file <code>fileName</code> is not found.","nodes":[{"pos":[0,47],"content":"If the file <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not found.","source":"If the file <code>fileName</code> is not found."}],"pos":[26605,26653],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[26765,26815],"yaml":true},{"content":"Gets the location of the assembly, as specified originally (such as in an <xref href=\"System.Reflection.AssemblyName\"></xref> object).","nodes":[{"pos":[0,134],"content":"Gets the location of the assembly, as specified originally (such as in an <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> object).","source":"Gets the location of the assembly, as specified originally (such as in an <xref href=\"System.Reflection.AssemblyName\"></xref> object)."}],"pos":[27826,27961],"yaml":true},{"content":"To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,153],"content":"To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=fullName> property.","nodes":[{"content":"To get the absolute path to the loaded manifest-containing file, use the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.Location%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,153],"source":"To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=fullName> property."}]}],"pos":[27972,28126],"yaml":true,"extradata":"MT"},{"content":"The location of the assembly, as specified originally.","nodes":[{"pos":[0,54],"content":"The location of the assembly, as specified originally.","nodes":[{"content":"The location of the assembly, as specified originally.","pos":[0,54]}]}],"pos":[28247,28302],"yaml":true},{"content":"This method is not currently supported.","nodes":[{"pos":[0,39],"content":"This method is not currently supported.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]}]}],"pos":[28479,28519],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[28631,28681],"yaml":true},{"content":"Defines a dynamic assembly that has the specified name and access rights.","nodes":[{"pos":[0,73],"content":"Defines a dynamic assembly that has the specified name and access rights.","nodes":[{"content":"Defines a dynamic assembly that has the specified name and access rights.","pos":[0,73]}]}],"pos":[31071,31145],"yaml":true},{"content":"The name of the assembly.","nodes":[{"pos":[0,25],"content":"The name of the assembly.","nodes":[{"content":"The name of the assembly.","pos":[0,25]}]}],"pos":[31428,31454],"yaml":true},{"content":"The access rights of the assembly.","nodes":[{"pos":[0,34],"content":"The access rights of the assembly.","nodes":[{"content":"The access rights of the assembly.","pos":[0,34]}]}],"pos":[31547,31582],"yaml":true},{"content":"An object that represents the new assembly.","nodes":[{"pos":[0,43],"content":"An object that represents the new assembly.","nodes":[{"content":"An object that represents the new assembly.","pos":[0,43]}]}],"pos":[31664,31708],"yaml":true},{"content":"Defines a new assembly that has the specified name, access rights, and attributes.","nodes":[{"pos":[0,82],"content":"Defines a new assembly that has the specified name, access rights, and attributes.","nodes":[{"content":"Defines a new assembly that has the specified name, access rights, and attributes.","pos":[0,82]}]}],"pos":[33760,33843],"yaml":true},{"content":"The name of the assembly.","nodes":[{"pos":[0,25],"content":"The name of the assembly.","nodes":[{"content":"The name of the assembly.","pos":[0,25]}]}],"pos":[34232,34258],"yaml":true},{"content":"The access rights of the assembly.","nodes":[{"pos":[0,34],"content":"The access rights of the assembly.","nodes":[{"content":"The access rights of the assembly.","pos":[0,34]}]}],"pos":[34351,34386],"yaml":true},{"content":"A collection that contains the attributes of the assembly.","nodes":[{"pos":[0,58],"content":"A collection that contains the attributes of the assembly.","nodes":[{"content":"A collection that contains the attributes of the assembly.","pos":[0,58]}]}],"pos":[34532,34591],"yaml":true},{"content":"An object that represents the new assembly.","nodes":[{"pos":[0,43],"content":"An object that represents the new assembly.","nodes":[{"content":"An object that represents the new assembly.","pos":[0,43]}]}],"pos":[34673,34717],"yaml":true},{"content":"Defines a named transient dynamic module in this assembly.","nodes":[{"pos":[0,58],"content":"Defines a named transient dynamic module in this assembly.","nodes":[{"content":"Defines a named transient dynamic module in this assembly.","pos":[0,58]}]}],"pos":[36115,36174],"yaml":true},{"content":"It is an error to define multiple dynamic modules with the same name in an assembly.  \n  \n The defined dynamic module is transient. The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.  \n  \n> [!NOTE]\n>  To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,84],"content":"It is an error to define multiple dynamic modules with the same name in an assembly.","nodes":[{"content":"It is an error to define multiple dynamic modules with the same name in an assembly.","pos":[0,84]}]},{"pos":[91,281],"content":"The defined dynamic module is transient. The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.","nodes":[{"content":"The defined dynamic module is transient. The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.","pos":[0,190],"nodes":[{"content":"The defined dynamic module is transient.","pos":[0,40]},{"content":"The dynamic module is not saved, even if the parent dynamic assembly was created with <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave&gt;</ph>.","pos":[41,190],"source":" The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>."}]}]},{"pos":[289,893],"content":"[!NOTE]\n To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.","leadings":["","> "],"nodes":[{"content":" To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.","pos":[8,602],"nodes":[{"content":"To suppress optimizations when debugging dynamic modules, apply the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> attribute to the dynamic assembly before calling <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph>.","pos":[1,233],"source":" To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>."},{"content":"Create an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> with the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations&gt;</ph> flag and apply it using the <ph id=\"ph3\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A&gt;</ph> method.","pos":[234,496],"source":" Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method."},{"content":"The attribute must be applied to the dynamic assembly.","pos":[497,551]},{"content":"It has no effect if applied to the module.","pos":[552,594]}]}]},{"pos":[901,1430],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[36185,37626],"yaml":true,"extradata":"MT"},{"content":"The name of the dynamic module. Must be less than 260 characters in length.","nodes":[{"pos":[0,75],"content":"The name of the dynamic module. Must be less than 260 characters in length.","nodes":[{"content":"The name of the dynamic module. Must be less than 260 characters in length.","pos":[0,75],"nodes":[{"content":"The name of the dynamic module.","pos":[0,31]},{"content":"Must be less than 260 characters in length.","pos":[32,75]}]}]}],"pos":[38614,38690],"yaml":true},{"content":"A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> representing the defined dynamic module.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder\"&gt;&lt;/xref&gt;</ph> representing the defined dynamic module.","source":"A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> representing the defined dynamic module."}],"pos":[38770,38871],"yaml":true},{"content":"<code>name</code> begins with white space.  \n  \n -or-  \n  \n The length of <code>name</code> is zero.  \n  \n -or-  \n  \n The length of <code>name</code> is greater than or equal to 260.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> begins with white space.","source":"<code>name</code> begins with white space."},{"pos":[49,53],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[60,100],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> is zero."},{"pos":[107,111],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[118,182],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than or equal to 260.","source":"The length of <code>name</code> is greater than or equal to 260."}],"pos":[39051,39244],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[39346,39375],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[39487,39537],"yaml":true},{"content":"The assembly for default symbol writer cannot be loaded.  \n  \n -or-  \n  \n The type that implements the default symbol writer interface cannot be found.","nodes":[{"pos":[0,56],"content":"The assembly for default symbol writer cannot be loaded.","nodes":[{"content":"The assembly for default symbol writer cannot be loaded.","pos":[0,56]}]},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,151],"content":"The type that implements the default symbol writer interface cannot be found.","nodes":[{"content":"The type that implements the default symbol writer interface cannot be found.","pos":[0,77]}]}],"pos":[39645,39803],"yaml":true},{"content":"Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.","nodes":[{"pos":[0,117],"content":"Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.","nodes":[{"content":"Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.","pos":[0,117]}]}],"pos":[41155,41273],"yaml":true},{"content":"It is an error to define multiple dynamic modules with the same name in an assembly.  \n  \n The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.  \n  \n> [!NOTE]\n>  To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,84],"content":"It is an error to define multiple dynamic modules with the same name in an assembly.","nodes":[{"content":"It is an error to define multiple dynamic modules with the same name in an assembly.","pos":[0,84]}]},{"pos":[91,240],"content":"The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.","nodes":[{"content":"The dynamic module is not saved, even if the parent dynamic assembly was created with <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave&gt;</ph>.","pos":[0,149],"source":"The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>."}]},{"pos":[248,852],"content":"[!NOTE]\n To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.","leadings":["","> "],"nodes":[{"content":" To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.","pos":[8,602],"nodes":[{"content":"To suppress optimizations when debugging dynamic modules, apply the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> attribute to the dynamic assembly before calling <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph>.","pos":[1,233],"source":" To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>."},{"content":"Create an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> with the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations&gt;</ph> flag and apply it using the <ph id=\"ph3\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A&gt;</ph> method.","pos":[234,496],"source":" Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method."},{"content":"The attribute must be applied to the dynamic assembly.","pos":[497,551]},{"content":"It has no effect if applied to the module.","pos":[552,594]}]}]},{"pos":[860,1389],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[41284,42684],"yaml":true,"extradata":"MT"},{"content":"The name of the dynamic module. Must be less than 260 characters in length.","nodes":[{"pos":[0,75],"content":"The name of the dynamic module. Must be less than 260 characters in length.","nodes":[{"content":"The name of the dynamic module. Must be less than 260 characters in length.","pos":[0,75],"nodes":[{"content":"The name of the dynamic module.","pos":[0,31]},{"content":"Must be less than 260 characters in length.","pos":[32,75]}]}]}],"pos":[43725,43801],"yaml":true},{"content":"`true` if symbol information is to be emitted; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if symbol information is to be emitted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if symbol information is to be emitted; otherwise, `false`."}],"pos":[43872,43941],"yaml":true},{"content":"A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> representing the defined dynamic module.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder\"&gt;&lt;/xref&gt;</ph> representing the defined dynamic module.","source":"A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> representing the defined dynamic module."}],"pos":[44021,44122],"yaml":true},{"content":"<code>name</code> begins with white space.  \n  \n -or-  \n  \n The length of <code>name</code> is zero.  \n  \n -or-  \n  \n The length of <code>name</code> is greater than or equal to 260.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> begins with white space.","source":"<code>name</code> begins with white space."},{"pos":[49,53],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[60,100],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> is zero."},{"pos":[107,111],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[118,182],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than or equal to 260.","source":"The length of <code>name</code> is greater than or equal to 260."}],"pos":[44302,44495],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[44597,44626],"yaml":true},{"content":"The assembly for default symbol writer cannot be loaded.  \n  \n -or-  \n  \n The type that implements the default symbol writer interface cannot be found.","nodes":[{"pos":[0,56],"content":"The assembly for default symbol writer cannot be loaded.","nodes":[{"content":"The assembly for default symbol writer cannot be loaded.","pos":[0,56]}]},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,151],"content":"The type that implements the default symbol writer interface cannot be found.","nodes":[{"content":"The type that implements the default symbol writer interface cannot be found.","pos":[0,77]}]}],"pos":[44734,44892],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[45004,45054],"yaml":true},{"content":"Defines a persistable dynamic module with the given name that will be saved to the specified file. No symbol information is emitted.","nodes":[{"pos":[0,132],"content":"Defines a persistable dynamic module with the given name that will be saved to the specified file. No symbol information is emitted.","nodes":[{"content":"Defines a persistable dynamic module with the given name that will be saved to the specified file. No symbol information is emitted.","pos":[0,132],"nodes":[{"content":"Defines a persistable dynamic module with the given name that will be saved to the specified file.","pos":[0,98]},{"content":"No symbol information is emitted.","pos":[99,132]}]}]}],"pos":[46264,46397],"yaml":true},{"content":"To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.  \n  \n If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.  \n  \n In an assembly with only one module, that module should contain the assembly manifest.  \n  \n> [!NOTE]\n>  To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,220],"content":"To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.","nodes":[{"content":"To define a persistable dynamic module, this assembly needs to be created with the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilderAccess.Save&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave&gt;</ph> attribute.","pos":[0,220],"source":"To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute."}]},{"pos":[227,603],"content":"If you want the module to contain the assembly manifest, <ph id=\"ph1\">`name`</ph> should be the same as the name of the assembly (that is, the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> used to create the dynamic assembly) and <ph id=\"ph4\">`fileName`</ph> should be the same as the filename you specify when you save the assembly.","source":"If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly."},{"pos":[610,696],"content":"In an assembly with only one module, that module should contain the assembly manifest.","nodes":[{"content":"In an assembly with only one module, that module should contain the assembly manifest.","pos":[0,86]}]},{"pos":[704,1308],"content":"[!NOTE]\n To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.","leadings":["","> "],"nodes":[{"content":" To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.","pos":[8,602],"nodes":[{"content":"To suppress optimizations when debugging dynamic modules, apply the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> attribute to the dynamic assembly before calling <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph>.","pos":[1,233],"source":" To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>."},{"content":"Create an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> with the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations&gt;</ph> flag and apply it using the <ph id=\"ph3\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A&gt;</ph> method.","pos":[234,496],"source":" Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method."},{"content":"The attribute must be applied to the dynamic assembly.","pos":[497,551]},{"content":"It has no effect if applied to the module.","pos":[552,594]}]}]},{"pos":[1316,1845],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[46408,48266],"yaml":true,"extradata":"MT"},{"content":"The name of the dynamic module. Must be less than 260 characters in length.","nodes":[{"pos":[0,75],"content":"The name of the dynamic module. Must be less than 260 characters in length.","nodes":[{"content":"The name of the dynamic module. Must be less than 260 characters in length.","pos":[0,75],"nodes":[{"content":"The name of the dynamic module.","pos":[0,31]},{"content":"Must be less than 260 characters in length.","pos":[32,75]}]}]}],"pos":[49272,49348],"yaml":true},{"content":"The name of the file to which the dynamic module should be saved.","nodes":[{"pos":[0,65],"content":"The name of the file to which the dynamic module should be saved.","nodes":[{"content":"The name of the file to which the dynamic module should be saved.","pos":[0,65]}]}],"pos":[49412,49478],"yaml":true},{"content":"A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> object representing the defined dynamic module.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder\"&gt;&lt;/xref&gt;</ph> object representing the defined dynamic module.","source":"A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> object representing the defined dynamic module."}],"pos":[49558,49666],"yaml":true},{"content":"<code>name</code> or <code>fileName</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>fileName</code> is `null`."}],"pos":[49854,49908],"yaml":true},{"content":"The length of <code>name</code> or <code>fileName</code> is zero.  \n  \n -or-  \n  \n The length of <code>name</code> is greater than or equal to 260.  \n  \n -or-  \n  \n <code>fileName</code> contains a path specification (a directory component, for example).  \n  \n -or-  \n  \n There is a conflict with the name of another file that belongs to this assembly.","nodes":[{"pos":[0,65],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">fileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> or <code>fileName</code> is zero."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,147],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than or equal to 260.","source":"The length of <code>name</code> is greater than or equal to 260."},{"pos":[154,158],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[165,254],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> contains a path specification (a directory component, for example).","source":"<code>fileName</code> contains a path specification (a directory component, for example)."},{"pos":[261,265],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[272,352],"content":"There is a conflict with the name of another file that belongs to this assembly.","nodes":[{"content":"There is a conflict with the name of another file that belongs to this assembly.","pos":[0,80]}]}],"pos":[50002,50369],"yaml":true},{"content":"This assembly has been previously saved.","nodes":[{"pos":[0,40],"content":"This assembly has been previously saved.","nodes":[{"content":"This assembly has been previously saved.","pos":[0,40]}]}],"pos":[50479,50520],"yaml":true},{"content":"This assembly was called on a dynamic assembly with <xref href=\"System.Reflection.Emit.AssemblyBuilderAccess.Run\"></xref> attribute.","nodes":[{"pos":[0,132],"content":"This assembly was called on a dynamic assembly with <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilderAccess.Run\"&gt;&lt;/xref&gt;</ph> attribute.","source":"This assembly was called on a dynamic assembly with <xref href=\"System.Reflection.Emit.AssemblyBuilderAccess.Run\"></xref> attribute."}],"pos":[50622,50755],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[50867,50917],"yaml":true},{"content":"The assembly for default symbol writer cannot be loaded.  \n  \n -or-  \n  \n The type that implements the default symbol writer interface cannot be found.","nodes":[{"pos":[0,56],"content":"The assembly for default symbol writer cannot be loaded.","nodes":[{"content":"The assembly for default symbol writer cannot be loaded.","pos":[0,56]}]},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,151],"content":"The type that implements the default symbol writer interface cannot be found.","nodes":[{"content":"The type that implements the default symbol writer interface cannot be found.","pos":[0,77]}]}],"pos":[51025,51183],"yaml":true},{"content":"Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.","nodes":[{"pos":[0,203],"content":"Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.","nodes":[{"content":"Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.","pos":[0,203]}]}],"pos":[52465,52669],"yaml":true},{"content":"To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.  \n  \n If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.  \n  \n In an assembly with only one module, that module should contain the assembly manifest.  \n  \n> [!NOTE]\n>  To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,220],"content":"To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.","nodes":[{"content":"To define a persistable dynamic module, this assembly needs to be created with the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilderAccess.Save&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave&gt;</ph> attribute.","pos":[0,220],"source":"To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute."}]},{"pos":[227,603],"content":"If you want the module to contain the assembly manifest, <ph id=\"ph1\">`name`</ph> should be the same as the name of the assembly (that is, the <ph id=\"ph2\">&lt;xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> used to create the dynamic assembly) and <ph id=\"ph4\">`fileName`</ph> should be the same as the filename you specify when you save the assembly.","source":"If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly."},{"pos":[610,696],"content":"In an assembly with only one module, that module should contain the assembly manifest.","nodes":[{"content":"In an assembly with only one module, that module should contain the assembly manifest.","pos":[0,86]}]},{"pos":[704,1308],"content":"[!NOTE]\n To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.","leadings":["","> "],"nodes":[{"content":" To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.","pos":[8,602],"nodes":[{"content":"To suppress optimizations when debugging dynamic modules, apply the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> attribute to the dynamic assembly before calling <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A&gt;</ph>.","pos":[1,233],"source":" To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>."},{"content":"Create an instance of <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggableAttribute&gt;</ph> with the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations&gt;</ph> flag and apply it using the <ph id=\"ph3\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A&gt;</ph> method.","pos":[234,496],"source":" Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method."},{"content":"The attribute must be applied to the dynamic assembly.","pos":[497,551]},{"content":"It has no effect if applied to the module.","pos":[552,594]}]}]},{"pos":[1316,1845],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[52680,54538],"yaml":true,"extradata":"MT"},{"content":"The name of the dynamic module. Must be less than 260 characters in length.","nodes":[{"pos":[0,75],"content":"The name of the dynamic module. Must be less than 260 characters in length.","nodes":[{"content":"The name of the dynamic module. Must be less than 260 characters in length.","pos":[0,75],"nodes":[{"content":"The name of the dynamic module.","pos":[0,31]},{"content":"Must be less than 260 characters in length.","pos":[32,75]}]}]}],"pos":[55586,55662],"yaml":true},{"content":"The name of the file to which the dynamic module should be saved.","nodes":[{"pos":[0,65],"content":"The name of the file to which the dynamic module should be saved.","nodes":[{"content":"The name of the file to which the dynamic module should be saved.","pos":[0,65]}]}],"pos":[55726,55792],"yaml":true},{"content":"If `true`, symbolic information is written using the default symbol writer.","nodes":[{"pos":[0,75],"content":"If <ph id=\"ph1\">`true`</ph>, symbolic information is written using the default symbol writer.","source":"If `true`, symbolic information is written using the default symbol writer."}],"pos":[55863,55939],"yaml":true},{"content":"A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> object representing the defined dynamic module.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder\"&gt;&lt;/xref&gt;</ph> object representing the defined dynamic module.","source":"A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> object representing the defined dynamic module."}],"pos":[56019,56127],"yaml":true},{"content":"<code>name</code> or <code>fileName</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>fileName</code> is `null`."}],"pos":[56315,56369],"yaml":true},{"content":"The length of <code>name</code> or <code>fileName</code> is zero.  \n  \n -or-  \n  \n The length of <code>name</code> is greater than or equal to 260.  \n  \n -or-  \n  \n <code>fileName</code> contains a path specification (a directory component, for example).  \n  \n -or-  \n  \n There is a conflict with the name of another file that belongs to this assembly.","nodes":[{"pos":[0,65],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">fileName</ph><ept id=\"p2\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> or <code>fileName</code> is zero."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,147],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than or equal to 260.","source":"The length of <code>name</code> is greater than or equal to 260."},{"pos":[154,158],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[165,254],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> contains a path specification (a directory component, for example).","source":"<code>fileName</code> contains a path specification (a directory component, for example)."},{"pos":[261,265],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[272,352],"content":"There is a conflict with the name of another file that belongs to this assembly.","nodes":[{"content":"There is a conflict with the name of another file that belongs to this assembly.","pos":[0,80]}]}],"pos":[56463,56830],"yaml":true},{"content":"This assembly has been previously saved.","nodes":[{"pos":[0,40],"content":"This assembly has been previously saved.","nodes":[{"content":"This assembly has been previously saved.","pos":[0,40]}]}],"pos":[56940,56981],"yaml":true},{"content":"This assembly was called on a dynamic assembly with the <xref href=\"System.Reflection.Emit.AssemblyBuilderAccess.Run\"></xref> attribute.","nodes":[{"pos":[0,136],"content":"This assembly was called on a dynamic assembly with the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilderAccess.Run\"&gt;&lt;/xref&gt;</ph> attribute.","source":"This assembly was called on a dynamic assembly with the <xref href=\"System.Reflection.Emit.AssemblyBuilderAccess.Run\"></xref> attribute."}],"pos":[57083,57220],"yaml":true},{"content":"The assembly for default symbol writer cannot be loaded.  \n  \n -or-  \n  \n The type that implements the default symbol writer interface cannot be found.","nodes":[{"pos":[0,56],"content":"The assembly for default symbol writer cannot be loaded.","nodes":[{"content":"The assembly for default symbol writer cannot be loaded.","pos":[0,56]}]},{"pos":[63,67],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[74,151],"content":"The type that implements the default symbol writer interface cannot be found.","nodes":[{"content":"The type that implements the default symbol writer interface cannot be found.","pos":[0,77]}]}],"pos":[57328,57486],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[57598,57648],"yaml":true},{"content":"Defines a standalone managed resource for this assembly with the default public resource attribute.","nodes":[{"pos":[0,99],"content":"Defines a standalone managed resource for this assembly with the default public resource attribute.","nodes":[{"content":"Defines a standalone managed resource for this assembly with the default public resource attribute.","pos":[0,99]}]}],"pos":[58894,58994],"yaml":true},{"content":"Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.  \n  \n `fileName` should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file.  \n  \n The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,156],"content":"Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.","nodes":[{"content":"Fine grain resources can be added with the returned <ph id=\"ph1\">&lt;xref:System.Resources.ResourceWriter&gt;</ph> by calling <ph id=\"ph2\">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph>.","pos":[0,156],"source":"Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>."}]},{"pos":[163,301],"content":"<ph id=\"ph1\">`fileName`</ph> should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file.","source":"`fileName` should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file."},{"pos":[308,420],"content":"The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.","nodes":[{"content":"The runtime calls the <ph id=\"ph1\">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> method when the dynamic assembly is saved.","pos":[0,112],"source":"The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved."}]},{"pos":[428,957],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[59005,59972],"yaml":true,"extradata":"MT"},{"content":"The logical name of the resource.","nodes":[{"pos":[0,33],"content":"The logical name of the resource.","nodes":[{"content":"The logical name of the resource.","pos":[0,33]}]}],"pos":[60946,60980],"yaml":true},{"content":"A textual description of the resource.","nodes":[{"pos":[0,38],"content":"A textual description of the resource.","nodes":[{"content":"A textual description of the resource.","pos":[0,38]}]}],"pos":[61047,61086],"yaml":true},{"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path.","nodes":[{"pos":[0,109],"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path.","nodes":[{"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path.","pos":[0,109],"nodes":[{"content":"The physical file name (.resources file) to which the logical name is mapped.","pos":[0,77]},{"content":"This should not include a path.","pos":[78,109]}]}]}],"pos":[61150,61260],"yaml":true},{"content":"A <xref href=\"System.Resources.ResourceWriter\"></xref> object for the specified resource.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;&lt;/xref&gt;</ph> object for the specified resource.","source":"A <xref href=\"System.Resources.ResourceWriter\"></xref> object for the specified resource."}],"pos":[61336,61426],"yaml":true},{"content":"<code>name</code> has been previously defined.  \n  \n -or-  \n  \n There is another file in the assembly named <code>fileName</code>.  \n  \n -or-  \n  \n The length of <code>name</code> is zero.  \n  \n -or-  \n  \n The length of <code>fileName</code> is zero.  \n  \n -or-  \n  \n <code>fileName</code> includes a path.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> has been previously defined.","source":"<code>name</code> has been previously defined."},{"pos":[53,57],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[64,130],"content":"There is another file in the assembly named <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"There is another file in the assembly named <code>fileName</code>."},{"pos":[137,141],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[148,188],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> is zero."},{"pos":[195,199],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[206,250],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>fileName</code> is zero."},{"pos":[257,261],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[268,306],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> includes a path.","source":"<code>fileName</code> includes a path."}],"pos":[61601,61926],"yaml":true},{"content":"<code>name</code> or <code>fileName</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>fileName</code> is `null`."}],"pos":[62028,62082],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[62194,62244],"yaml":true},{"content":"Defines a standalone managed resource for this assembly. Attributes can be specified for the managed resource.","nodes":[{"pos":[0,110],"content":"Defines a standalone managed resource for this assembly. Attributes can be specified for the managed resource.","nodes":[{"content":"Defines a standalone managed resource for this assembly. Attributes can be specified for the managed resource.","pos":[0,110],"nodes":[{"content":"Defines a standalone managed resource for this assembly.","pos":[0,56]},{"content":"Attributes can be specified for the managed resource.","pos":[57,110]}]}]}],"pos":[63661,63772],"yaml":true},{"content":"Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.  \n  \n `fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.  \n  \n The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,156],"content":"Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.","nodes":[{"content":"Fine-grain resources can be added with the returned <ph id=\"ph1\">&lt;xref:System.Resources.ResourceWriter&gt;</ph> by calling <ph id=\"ph2\">&lt;xref:System.Resources.ResourceWriter.AddResource%2A&gt;</ph>.","pos":[0,156],"source":"Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>."}]},{"pos":[163,299],"content":"<ph id=\"ph1\">`fileName`</ph> should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.","source":"`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file."},{"pos":[306,418],"content":"The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.","nodes":[{"content":"The runtime calls the <ph id=\"ph1\">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> method when the dynamic assembly is saved.","pos":[0,112],"source":"The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved."}]},{"pos":[426,955],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[63783,64748],"yaml":true,"extradata":"MT"},{"content":"The logical name of the resource.","nodes":[{"pos":[0,33],"content":"The logical name of the resource.","nodes":[{"content":"The logical name of the resource.","pos":[0,33]}]}],"pos":[65002,65036],"yaml":true},{"content":"A textual description of the resource.","nodes":[{"pos":[0,38],"content":"A textual description of the resource.","nodes":[{"content":"A textual description of the resource.","pos":[0,38]}]}],"pos":[65103,65142],"yaml":true},{"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path.","nodes":[{"pos":[0,109],"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path.","nodes":[{"content":"The physical file name (.resources file) to which the logical name is mapped. This should not include a path.","pos":[0,109],"nodes":[{"content":"The physical file name (.resources file) to which the logical name is mapped.","pos":[0,77]},{"content":"This should not include a path.","pos":[78,109]}]}]}],"pos":[65206,65316],"yaml":true},{"content":"The resource attributes.","nodes":[{"pos":[0,24],"content":"The resource attributes.","nodes":[{"content":"The resource attributes.","pos":[0,24]}]}],"pos":[65404,65429],"yaml":true},{"content":"A <xref href=\"System.Resources.ResourceWriter\"></xref> object for the specified resource.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Resources.ResourceWriter\"&gt;&lt;/xref&gt;</ph> object for the specified resource.","source":"A <xref href=\"System.Resources.ResourceWriter\"></xref> object for the specified resource."}],"pos":[65505,65595],"yaml":true},{"content":"<code>name</code> has been previously defined or if there is another file in the assembly named <code>fileName</code>.  \n  \n -or-  \n  \n The length of <code>name</code> is zero.  \n  \n -or-  \n  \n The length of <code>fileName</code> is zero.  \n  \n -or-  \n  \n <code>fileName</code> includes a path.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> has been previously defined or if there is another file in the assembly named <ph id=\"ph2\">&lt;code&gt;fileName&lt;/code&gt;</ph>.","source":"<code>name</code> has been previously defined or if there is another file in the assembly named <code>fileName</code>."},{"pos":[125,129],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[136,176],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> is zero."},{"pos":[183,187],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[194,238],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>fileName</code> is zero."},{"pos":[245,249],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[256,294],"content":"<ph id=\"ph1\">&lt;code&gt;fileName&lt;/code&gt;</ph> includes a path.","source":"<code>fileName</code> includes a path."}],"pos":[65770,66079],"yaml":true},{"content":"<code>name</code> or <code>fileName</code> is `null`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>fileName</code> is `null`."}],"pos":[66181,66235],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[66347,66397],"yaml":true},{"content":"Defines an unmanaged resource file for this assembly given the name of the resource file.","nodes":[{"pos":[0,89],"content":"Defines an unmanaged resource file for this assembly given the name of the resource file.","nodes":[{"content":"Defines an unmanaged resource file for this assembly given the name of the resource file.","pos":[0,89]}]}],"pos":[67565,67655],"yaml":true},{"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,480],"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","nodes":[{"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","pos":[0,480],"nodes":[{"content":"An assembly can be associated with only one unmanaged resource.","pos":[0,63]},{"content":"This means that calling <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A&gt;</ph> after either one of the methods was called previously will throw the System.ArgumentException.","pos":[64,333],"source":" This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException."},{"content":"Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","pos":[334,480]}]}]},{"pos":[488,1017],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[67666,68689],"yaml":true,"extradata":"MT"},{"content":"The name of the resource file.","nodes":[{"pos":[0,30],"content":"The name of the resource file.","nodes":[{"content":"The name of the resource file.","pos":[0,30]}]}],"pos":[69559,69590],"yaml":true},{"content":"An unmanaged resource was previously defined.  \n  \n -or-  \n  \n The file <code>resourceFileName</code> is not readable.  \n  \n -or-  \n  \n <code>resourceFileName</code> is the empty string (\"\").","nodes":[{"pos":[0,45],"content":"An unmanaged resource was previously defined.","nodes":[{"content":"An unmanaged resource was previously defined.","pos":[0,45]}]},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,118],"content":"The file <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">resourceFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not readable.","source":"The file <code>resourceFileName</code> is not readable."},{"pos":[125,129],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[136,191],"content":"<ph id=\"ph1\">&lt;code&gt;resourceFileName&lt;/code&gt;</ph> is the empty string (\"\").","source":"<code>resourceFileName</code> is the empty string (\"\")."}],"pos":[69774,69978],"yaml":true},{"content":"<code>resourceFileName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;resourceFileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>resourceFileName</code> is `null`."}],"pos":[70080,70121],"yaml":true},{"content":"<code>resourceFileName</code> is not found.  \n  \n -or-  \n  \n <code>resourceFileName</code> is a directory.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;resourceFileName&lt;/code&gt;</ph> is not found.","source":"<code>resourceFileName</code> is not found."},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,106],"content":"<ph id=\"ph1\">&lt;code&gt;resourceFileName&lt;/code&gt;</ph> is a directory.","source":"<code>resourceFileName</code> is a directory."}],"pos":[70229,70342],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[70454,70504],"yaml":true},{"content":"Defines an unmanaged resource for this assembly as an opaque blob of bytes.","nodes":[{"pos":[0,75],"content":"Defines an unmanaged resource for this assembly as an opaque blob of bytes.","nodes":[{"content":"Defines an unmanaged resource for this assembly as an opaque blob of bytes.","pos":[0,75]}]}],"pos":[71672,71748],"yaml":true},{"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","nodes":[{"pos":[0,492],"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","nodes":[{"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","pos":[0,492],"nodes":[{"content":"An assembly can be associated with only one unmanaged resource.","pos":[0,63]},{"content":"This means that calling <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A&gt;</ph> after either one of the methods was called previously will throw the System.ArgumentException being throw.","pos":[64,345],"source":" This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw."},{"content":"Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","pos":[346,492]}]}]}],"pos":[71759,72252],"yaml":true,"extradata":"MT"},{"content":"The opaque blob of bytes representing the unmanaged resource.","nodes":[{"pos":[0,61],"content":"The opaque blob of bytes representing the unmanaged resource.","nodes":[{"content":"The opaque blob of bytes representing the unmanaged resource.","pos":[0,61]}]}],"pos":[73168,73230],"yaml":true},{"content":"An unmanaged resource was previously defined.","nodes":[{"pos":[0,45],"content":"An unmanaged resource was previously defined.","nodes":[{"content":"An unmanaged resource was previously defined.","pos":[0,45]}]}],"pos":[73414,73460],"yaml":true},{"content":"<code>resource</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;resource&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>resource</code> is `null`."}],"pos":[73562,73595],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[73707,73757],"yaml":true},{"content":"Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.","nodes":[{"pos":[0,157],"content":"Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.","nodes":[{"content":"Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.","pos":[0,157]}]}],"pos":[74874,75032],"yaml":true},{"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).  \n  \n Empty argument strings get written as a single space. Spaces are substituted for null characters in the argument strings.  \n  \n The information is inferred from the `AssemblyName` object used to define this dynamic assembly. This assembly's custom attributes override information specified in the `AssemblyName` object.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,484],"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).","nodes":[{"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).","pos":[0,484],"nodes":[{"content":"An assembly can be associated with only one unmanaged resource.","pos":[0,63]},{"content":"This means that calling <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A&gt;</ph> after either one of the methods was called previously will throw the System.ArgumentException.","pos":[64,333],"source":" This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException."},{"content":"Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).","pos":[334,484]}]}]},{"pos":[491,612],"content":"Empty argument strings get written as a single space. Spaces are substituted for null characters in the argument strings.","nodes":[{"content":"Empty argument strings get written as a single space. Spaces are substituted for null characters in the argument strings.","pos":[0,121],"nodes":[{"content":"Empty argument strings get written as a single space.","pos":[0,53]},{"content":"Spaces are substituted for null characters in the argument strings.","pos":[54,121]}]}]},{"pos":[619,810],"content":"The information is inferred from the `AssemblyName` object used to define this dynamic assembly. This assembly's custom attributes override information specified in the `AssemblyName` object.","nodes":[{"content":"The information is inferred from the <ph id=\"ph1\">`AssemblyName`</ph> object used to define this dynamic assembly.","pos":[0,96],"source":"The information is inferred from the `AssemblyName` object used to define this dynamic assembly."},{"content":"This assembly's custom attributes override information specified in the <ph id=\"ph1\">`AssemblyName`</ph> object.","pos":[97,191],"source":" This assembly's custom attributes override information specified in the `AssemblyName` object."}]},{"pos":[818,1347],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[75043,76400],"yaml":true,"extradata":"MT"},{"content":"An unmanaged version information resource was previously defined.  \n  \n -or-  \n  \n The unmanaged version information is too large to persist.","nodes":[{"pos":[0,65],"content":"An unmanaged version information resource was previously defined.","nodes":[{"content":"An unmanaged version information resource was previously defined.","pos":[0,65]}]},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,141],"content":"The unmanaged version information is too large to persist.","nodes":[{"content":"The unmanaged version information is too large to persist.","pos":[0,58]}]}],"pos":[77353,77501],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[77613,77663],"yaml":true},{"content":"Defines an unmanaged version information resource for this assembly with the given specifications.","nodes":[{"pos":[0,98],"content":"Defines an unmanaged version information resource for this assembly with the given specifications.","nodes":[{"content":"Defines an unmanaged version information resource for this assembly with the given specifications.","pos":[0,98]}]}],"pos":[79107,79206],"yaml":true},{"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK).  \n  \n Empty argument strings get written as a single space. Spaces are substituted for null characters in the argument strings.  \n  \n The structure of the version resource includes data that identifies the version, language, and distribution of the file. Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,486],"content":"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK).","nodes":[{"content":"An assembly can be associated with only one unmanaged resource.","pos":[0,63]},{"content":"This means that calling <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A&gt;</ph> after either one of the methods was called previously will throw the System.ArgumentException.","pos":[64,333],"source":" This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException."},{"content":"Multiple unmanaged resources need to be merged with a tool such as the Microsoft <ph id=\"ph1\">`ResMerge`</ph> utility (not supplied with the common language runtime SDK).","pos":[334,486],"source":" Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK)."}]},{"pos":[493,614],"content":"Empty argument strings get written as a single space. Spaces are substituted for null characters in the argument strings.","nodes":[{"content":"Empty argument strings get written as a single space. Spaces are substituted for null characters in the argument strings.","pos":[0,121],"nodes":[{"content":"Empty argument strings get written as a single space.","pos":[0,53]},{"content":"Spaces are substituted for null characters in the argument strings.","pos":[54,121]}]}]},{"pos":[621,946],"content":"The structure of the version resource includes data that identifies the version, language, and distribution of the file. Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.","nodes":[{"content":"The structure of the version resource includes data that identifies the version, language, and distribution of the file. Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.","pos":[0,325],"nodes":[{"content":"The structure of the version resource includes data that identifies the version, language, and distribution of the file.","pos":[0,120]},{"content":"Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.","pos":[121,325]}]}]},{"pos":[954,1483],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[79217,80710],"yaml":true,"extradata":"MT"},{"content":"The name of the product with which this assembly is distributed.","nodes":[{"pos":[0,64],"content":"The name of the product with which this assembly is distributed.","nodes":[{"content":"The name of the product with which this assembly is distributed.","pos":[0,64]}]}],"pos":[81626,81691],"yaml":true},{"content":"The version of the product with which this assembly is distributed.","nodes":[{"pos":[0,67],"content":"The version of the product with which this assembly is distributed.","nodes":[{"content":"The version of the product with which this assembly is distributed.","pos":[0,67]}]}],"pos":[81761,81829],"yaml":true},{"content":"The name of the company that produced this assembly.","nodes":[{"pos":[0,52],"content":"The name of the company that produced this assembly.","nodes":[{"content":"The name of the company that produced this assembly.","pos":[0,52]}]}],"pos":[81892,81945],"yaml":true},{"content":"Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly. This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on. In English, this string should be in the format \"Copyright Microsoft Corp. 1990-2001\".","nodes":[{"pos":[0,298],"content":"Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly. This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on. In English, this string should be in the format \"Copyright Microsoft Corp. 1990-2001\".","nodes":[{"content":"Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly. This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on. In English, this string should be in the format \"Copyright Microsoft Corp. 1990-2001\".","pos":[0,298],"nodes":[{"content":"Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly.","pos":[0,99]},{"content":"This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on.","pos":[100,211]},{"content":"In English, this string should be in the format \"Copyright Microsoft Corp. 1990-2001\".","pos":[212,298]}]}]}],"pos":[82010,82309],"yaml":true},{"content":"Describes all trademarks and registered trademarks that apply to this assembly. This should include the full text of all notices, legal symbols, trademark numbers, and so on. In English, this string should be in the format \"Windows is a trademark of Microsoft Corporation\".","nodes":[{"pos":[0,273],"content":"Describes all trademarks and registered trademarks that apply to this assembly. This should include the full text of all notices, legal symbols, trademark numbers, and so on. In English, this string should be in the format \"Windows is a trademark of Microsoft Corporation\".","nodes":[{"content":"Describes all trademarks and registered trademarks that apply to this assembly. This should include the full text of all notices, legal symbols, trademark numbers, and so on. In English, this string should be in the format \"Windows is a trademark of Microsoft Corporation\".","pos":[0,273],"nodes":[{"content":"Describes all trademarks and registered trademarks that apply to this assembly.","pos":[0,79]},{"content":"This should include the full text of all notices, legal symbols, trademark numbers, and so on.","pos":[80,174]},{"content":"In English, this string should be in the format \"Windows is a trademark of Microsoft Corporation\".","pos":[175,273]}]}]}],"pos":[82374,82648],"yaml":true},{"content":"An unmanaged version information resource was previously defined.  \n  \n -or-  \n  \n The unmanaged version information is too large to persist.","nodes":[{"pos":[0,65],"content":"An unmanaged version information resource was previously defined.","nodes":[{"content":"An unmanaged version information resource was previously defined.","pos":[0,65]}]},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,141],"content":"The unmanaged version information is too large to persist.","nodes":[{"content":"The unmanaged version information is too large to persist.","pos":[0,58]}]}],"pos":[82834,82982],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[83094,83144],"yaml":true},{"content":"Returns the entry point of this assembly.","nodes":[{"pos":[0,41],"content":"Returns the entry point of this assembly.","nodes":[{"content":"Returns the entry point of this assembly.","pos":[0,41]}]}],"pos":[84167,84209],"yaml":true},{"content":"The entry point of this assembly.","nodes":[{"pos":[0,33],"content":"The entry point of this assembly.","nodes":[{"content":"The entry point of this assembly.","pos":[0,33]}]}],"pos":[84369,84403],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[84592,84642],"yaml":true},{"content":"Returns a value that indicates whether this instance is equal to the specified object.","nodes":[{"pos":[0,86],"content":"Returns a value that indicates whether this instance is equal to the specified object.","nodes":[{"content":"Returns a value that indicates whether this instance is equal to the specified object.","pos":[0,86]}]}],"pos":[85735,85822],"yaml":true},{"content":"An object to compare with this instance, or `null`.","nodes":[{"pos":[0,51],"content":"An object to compare with this instance, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare with this instance, or `null`."}],"pos":[85962,86014],"yaml":true},{"content":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> equals the type and value of this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`."}],"pos":[86072,86165],"yaml":true},{"content":"Gets the evidence for this assembly.","nodes":[{"pos":[0,36],"content":"Gets the evidence for this assembly.","nodes":[{"content":"Gets the evidence for this assembly.","pos":[0,36]}]}],"pos":[87348,87385],"yaml":true},{"content":"The evidence for this assembly.","nodes":[{"pos":[0,31],"content":"The evidence for this assembly.","nodes":[{"content":"The evidence for this assembly.","pos":[0,31]}]}],"pos":[87549,87581],"yaml":true},{"content":"Gets the display name of the current dynamic assembly.","nodes":[{"pos":[0,54],"content":"Gets the display name of the current dynamic assembly.","nodes":[{"content":"Gets the display name of the current dynamic assembly.","pos":[0,54]}]}],"pos":[88613,88668],"yaml":true},{"content":"See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.","nodes":[{"pos":[0,109],"content":"See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.","nodes":[{"content":"See <ph id=\"ph1\">&lt;xref:System.Reflection.AssemblyName&gt;</ph> for a description of the format of the display name of an assembly.","pos":[0,109],"source":"See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly."}]}],"pos":[88679,88789],"yaml":true,"extradata":"MT"},{"content":"The display name of the dynamic assembly.","nodes":[{"pos":[0,41],"content":"The display name of the dynamic assembly.","nodes":[{"content":"The display name of the dynamic assembly.","pos":[0,41]}]}],"pos":[88910,88952],"yaml":true},{"content":"Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>.","nodes":[{"pos":[0,132],"content":"Returns all the custom attributes that have been applied to the current <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilder\"&gt;&lt;/xref&gt;</ph>.","source":"Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>."}],"pos":[90276,90409],"yaml":true},{"content":"This argument is ignored for objects of this type.","nodes":[{"pos":[0,50],"content":"This argument is ignored for objects of this type.","nodes":[{"content":"This argument is ignored for objects of this type.","pos":[0,50]}]}],"pos":[90573,90624],"yaml":true},{"content":"An array that contains the custom attributes; the array is empty if there are no attributes.","nodes":[{"pos":[0,92],"content":"An array that contains the custom attributes; the array is empty if there are no attributes.","nodes":[{"content":"An array that contains the custom attributes; the array is empty if there are no attributes.","pos":[0,92]}]}],"pos":[90683,90776],"yaml":true},{"content":"Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>, and that derive from a specified attribute type.","nodes":[{"pos":[0,181],"content":"Returns all the custom attributes that have been applied to the current <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilder\"&gt;&lt;/xref&gt;</ph>, and that derive from a specified attribute type.","source":"Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>, and that derive from a specified attribute type."}],"pos":[92069,92251],"yaml":true},{"content":"The base type from which attributes derive.","nodes":[{"pos":[0,43],"content":"The base type from which attributes derive.","nodes":[{"content":"The base type from which attributes derive.","pos":[0,43]}]}],"pos":[92438,92482],"yaml":true},{"content":"This argument is ignored for objects of this type.","nodes":[{"pos":[0,50],"content":"This argument is ignored for objects of this type.","nodes":[{"content":"This argument is ignored for objects of this type.","pos":[0,50]}]}],"pos":[92546,92597],"yaml":true},{"content":"An array that contains the custom attributes that are derived at any level from <code>attributeType</code>; the array is empty if there are no such attributes.","nodes":[{"pos":[0,159],"content":"An array that contains the custom attributes that are derived at any level from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">attributeType</ph><ept id=\"p1\">&lt;/code&gt;</ept>; the array is empty if there are no such attributes.","source":"An array that contains the custom attributes that are derived at any level from <code>attributeType</code>; the array is empty if there are no such attributes."}],"pos":[92656,92816],"yaml":true},{"content":"<code>attributeType</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>attributeType</code> is `null`."}],"pos":[93004,93042],"yaml":true},{"content":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime. For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object.","nodes":[{"pos":[0,209],"content":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime. For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object supplied by the runtime.","pos":[0,100],"source":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime."},{"content":"For example, <ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is a <ph id=\"ph2\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder\"&gt;&lt;/xref&gt;</ph> object.","pos":[101,209],"source":" For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object."}]}],"pos":[93136,93346],"yaml":true},{"content":"Returns <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects that contain information about the attributes that have been applied to the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>.","nodes":[{"pos":[0,219],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeData\"&gt;&lt;/xref&gt;</ph> objects that contain information about the attributes that have been applied to the current <ph id=\"ph2\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilder\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects that contain information about the attributes that have been applied to the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>."}],"pos":[94451,94671],"yaml":true},{"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.","nodes":[{"pos":[0,617],"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.","nodes":[{"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.","pos":[0,617],"nodes":[{"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.","pos":[0,205]},{"content":"Methods such as <ph id=\"ph1\">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> cannot be used in such cases, because they create instances of the attributes.","pos":[206,458],"source":" Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes."},{"content":"Code in the reflection-only context cannot be executed.","pos":[459,514]},{"content":"For more information and for example code, see the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class.","pos":[515,617],"source":" For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class."}]}]}],"pos":[94682,95300],"yaml":true,"extradata":"MT"},{"content":"A generic list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects representing data about the attributes that have been applied to the current module.","nodes":[{"pos":[0,169],"content":"A generic list of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeData\"&gt;&lt;/xref&gt;</ph> objects representing data about the attributes that have been applied to the current module.","source":"A generic list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects representing data about the attributes that have been applied to the current module."}],"pos":[95573,95743],"yaml":true},{"content":"Returns the dynamic module with the specified name.","nodes":[{"pos":[0,51],"content":"Returns the dynamic module with the specified name.","nodes":[{"content":"Returns the dynamic module with the specified name.","pos":[0,51]}]}],"pos":[96905,96957],"yaml":true},{"content":"The name of the requested dynamic module.","nodes":[{"pos":[0,41],"content":"The name of the requested dynamic module.","nodes":[{"content":"The name of the requested dynamic module.","pos":[0,41]}]}],"pos":[97132,97174],"yaml":true},{"content":"A ModuleBuilder object representing the requested dynamic module.","nodes":[{"pos":[0,65],"content":"A ModuleBuilder object representing the requested dynamic module.","nodes":[{"content":"A ModuleBuilder object representing the requested dynamic module.","pos":[0,65]}]}],"pos":[97254,97320],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[97505,97534],"yaml":true},{"content":"The length of <code>name</code> is zero.","nodes":[{"pos":[0,40],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> is zero."}],"pos":[97628,97669],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[97781,97831],"yaml":true},{"content":"Gets the exported types defined in this assembly.","nodes":[{"pos":[0,49],"content":"Gets the exported types defined in this assembly.","nodes":[{"content":"Gets the exported types defined in this assembly.","pos":[0,49]}]}],"pos":[99030,99080],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> containing the exported types defined in this assembly.","nodes":[{"pos":[0,100],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> containing the exported types defined in this assembly.","source":"An array of <xref href=\"System.Type\"></xref> containing the exported types defined in this assembly."}],"pos":[99223,99324],"yaml":true},{"content":"This method is not implemented.","nodes":[{"pos":[0,31],"content":"This method is not implemented.","nodes":[{"content":"This method is not implemented.","pos":[0,31]}]}],"pos":[99509,99541],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[99653,99703],"yaml":true},{"content":"Gets a <xref href=\"System.IO.FileStream\"></xref> for the specified file in the file table of the manifest of this assembly.","nodes":[{"pos":[0,123],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> for the specified file in the file table of the manifest of this assembly.","source":"Gets a <xref href=\"System.IO.FileStream\"></xref> for the specified file in the file table of the manifest of this assembly."}],"pos":[100775,100899],"yaml":true},{"content":"`name` should not include the path to the file.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">`name`</ph> should not include the path to the file.","source":"`name` should not include the path to the file."}],"pos":[100910,100960],"yaml":true,"extradata":"MT"},{"content":"The name of the specified file.","nodes":[{"pos":[0,31],"content":"The name of the specified file.","nodes":[{"content":"The name of the specified file.","pos":[0,31]}]}],"pos":[101119,101151],"yaml":true},{"content":"A <xref href=\"System.IO.FileStream\"></xref> for the specified file, or `null`, if the file is not found.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> for the specified file, or <ph id=\"ph2\">`null`</ph>, if the file is not found.","source":"A <xref href=\"System.IO.FileStream\"></xref> for the specified file, or `null`, if the file is not found."}],"pos":[101215,101320],"yaml":true},{"content":"This method is not currently supported.","nodes":[{"pos":[0,39],"content":"This method is not currently supported.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]}]}],"pos":[101496,101536],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[101648,101698],"yaml":true},{"content":"Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.","nodes":[{"pos":[0,105],"content":"Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.","nodes":[{"content":"Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.","pos":[0,105]}]}],"pos":[102782,102888],"yaml":true},{"content":"`true` to include resource modules; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> to include resource modules; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include resource modules; otherwise, `false`."}],"pos":[103077,103135],"yaml":true},{"content":"An array of <xref href=\"System.IO.FileStream\"></xref> objects.","nodes":[{"pos":[0,62],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.IO.FileStream\"&gt;&lt;/xref&gt;</ph> objects.","source":"An array of <xref href=\"System.IO.FileStream\"></xref> objects."}],"pos":[103201,103264],"yaml":true},{"content":"This method is not currently supported.","nodes":[{"pos":[0,39],"content":"This method is not currently supported.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]}]}],"pos":[103441,103481],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[103593,103643],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[104703,104744],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[104878,104913],"yaml":true},{"content":"Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.","nodes":[{"pos":[0,104],"content":"Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.","nodes":[{"content":"Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.","pos":[0,104]}]}],"pos":[106222,106327],"yaml":true},{"content":"`true` to include resource modules; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> to include resource modules; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include resource modules; otherwise, `false`."}],"pos":[106528,106586],"yaml":true},{"content":"The loaded modules that are part of this assembly.","nodes":[{"pos":[0,50],"content":"The loaded modules that are part of this assembly.","nodes":[{"content":"The loaded modules that are part of this assembly.","pos":[0,50]}]}],"pos":[106656,106707],"yaml":true},{"content":"Returns information about how the given resource has been persisted.","nodes":[{"pos":[0,68],"content":"Returns information about how the given resource has been persisted.","nodes":[{"content":"Returns information about how the given resource has been persisted.","pos":[0,68]}]}],"pos":[107988,108057],"yaml":true},{"content":"The name of the resource.","nodes":[{"pos":[0,25],"content":"The name of the resource.","nodes":[{"content":"The name of the resource.","pos":[0,25]}]}],"pos":[108266,108292],"yaml":true},{"content":"<xref href=\"System.Reflection.ManifestResourceInfo\"></xref> populated with information about the resource's topology, or `null` if the resource is not found.","nodes":[{"pos":[0,157],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.ManifestResourceInfo\"&gt;&lt;/xref&gt;</ph> populated with information about the resource's topology, or <ph id=\"ph2\">`null`</ph> if the resource is not found.","source":"<xref href=\"System.Reflection.ManifestResourceInfo\"></xref> populated with information about the resource's topology, or `null` if the resource is not found."}],"pos":[108374,108532],"yaml":true},{"content":"This method is not currently supported.","nodes":[{"pos":[0,39],"content":"This method is not currently supported.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]}]}],"pos":[108724,108764],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[108876,108926],"yaml":true},{"content":"Loads the specified manifest resource from this assembly.","nodes":[{"pos":[0,57],"content":"Loads the specified manifest resource from this assembly.","nodes":[{"content":"Loads the specified manifest resource from this assembly.","pos":[0,57]}]}],"pos":[110160,110218],"yaml":true},{"content":"An array of type `String` containing the names of all the resources.","nodes":[{"pos":[0,68],"content":"An array of type <ph id=\"ph1\">`String`</ph> containing the names of all the resources.","source":"An array of type `String` containing the names of all the resources."}],"pos":[110373,110442],"yaml":true},{"content":"This method is not supported on a dynamic assembly. To get the manifest resource names, use <xref href=\"System.Reflection.Assembly.GetManifestResourceNames\"></xref>.","nodes":[{"pos":[0,165],"content":"This method is not supported on a dynamic assembly. To get the manifest resource names, use <xref href=\"System.Reflection.Assembly.GetManifestResourceNames\"></xref>.","nodes":[{"content":"This method is not supported on a dynamic assembly.","pos":[0,51]},{"content":"To get the manifest resource names, use <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Assembly.GetManifestResourceNames\"&gt;&lt;/xref&gt;</ph>.","pos":[52,165],"source":" To get the manifest resource names, use <xref href=\"System.Reflection.Assembly.GetManifestResourceNames\"></xref>."}]}],"pos":[110635,110801],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[110913,110963],"yaml":true},{"content":"Loads the specified manifest resource from this assembly.","nodes":[{"pos":[0,57],"content":"Loads the specified manifest resource from this assembly.","nodes":[{"content":"Loads the specified manifest resource from this assembly.","pos":[0,57]}]}],"pos":[112266,112324],"yaml":true},{"content":"The name of the manifest resource being requested.","nodes":[{"pos":[0,50],"content":"The name of the manifest resource being requested.","nodes":[{"content":"The name of the manifest resource being requested.","pos":[0,50]}]}],"pos":[112497,112548],"yaml":true},{"content":"A <xref href=\"System.IO.Stream\"></xref> representing this manifest resource.","nodes":[{"pos":[0,76],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> representing this manifest resource.","source":"A <xref href=\"System.IO.Stream\"></xref> representing this manifest resource."}],"pos":[112608,112685],"yaml":true},{"content":"This method is not currently supported.","nodes":[{"pos":[0,39],"content":"This method is not currently supported.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]}]}],"pos":[112879,112919],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[113031,113081],"yaml":true},{"content":"Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.","nodes":[{"pos":[0,105],"content":"Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.","nodes":[{"content":"Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.","pos":[0,105]}]}],"pos":[114411,114517],"yaml":true},{"content":"The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource.","nodes":[{"pos":[0,95],"content":"The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource.","nodes":[{"content":"The returned <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph> has its file pointer set to the beginning of the resource.","pos":[0,95],"source":"The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource."}]}],"pos":[114528,114624],"yaml":true,"extradata":"MT"},{"content":"The type whose namespace is used to scope the manifest resource name.","nodes":[{"pos":[0,69],"content":"The type whose namespace is used to scope the manifest resource name.","nodes":[{"content":"The type whose namespace is used to scope the manifest resource name.","pos":[0,69]}]}],"pos":[114974,115044],"yaml":true},{"content":"The name of the manifest resource being requested.","nodes":[{"pos":[0,50],"content":"The name of the manifest resource being requested.","nodes":[{"content":"The name of the manifest resource being requested.","pos":[0,50]}]}],"pos":[115104,115155],"yaml":true},{"content":"A <xref href=\"System.IO.Stream\"></xref> representing this manifest resource.","nodes":[{"pos":[0,76],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> representing this manifest resource.","source":"A <xref href=\"System.IO.Stream\"></xref> representing this manifest resource."}],"pos":[115215,115292],"yaml":true},{"content":"This method is not currently supported.","nodes":[{"pos":[0,39],"content":"This method is not currently supported.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]}]}],"pos":[115486,115526],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[115638,115688],"yaml":true},{"content":"Gets the specified module in this assembly.","nodes":[{"pos":[0,43],"content":"Gets the specified module in this assembly.","nodes":[{"content":"Gets the specified module in this assembly.","pos":[0,43]}]}],"pos":[116772,116816],"yaml":true},{"content":"The name of the requested module.","nodes":[{"pos":[0,33],"content":"The name of the requested module.","nodes":[{"content":"The name of the requested module.","pos":[0,33]}]}],"pos":[116981,117015],"yaml":true},{"content":"The module being requested, or `null` if the module is not found.","nodes":[{"pos":[0,65],"content":"The module being requested, or <ph id=\"ph1\">`null`</ph> if the module is not found.","source":"The module being requested, or `null` if the module is not found."}],"pos":[117083,117149],"yaml":true},{"content":"Gets all the modules that are part of this assembly, and optionally includes resource modules.","nodes":[{"pos":[0,94],"content":"Gets all the modules that are part of this assembly, and optionally includes resource modules.","nodes":[{"content":"Gets all the modules that are part of this assembly, and optionally includes resource modules.","pos":[0,94]}]}],"pos":[118324,118419],"yaml":true},{"content":"`true` to include resource modules; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> to include resource modules; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to include resource modules; otherwise, `false`."}],"pos":[118614,118672],"yaml":true},{"content":"The modules that are part of this assembly.","nodes":[{"pos":[0,43],"content":"The modules that are part of this assembly.","nodes":[{"content":"The modules that are part of this assembly.","pos":[0,43]}]}],"pos":[118742,118786],"yaml":true},{"content":"Gets the <xref href=\"System.Reflection.AssemblyName\"></xref> that was specified when the current dynamic assembly was created, and sets the code base as specified.","nodes":[{"pos":[0,163],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> that was specified when the current dynamic assembly was created, and sets the code base as specified.","source":"Gets the <xref href=\"System.Reflection.AssemblyName\"></xref> that was specified when the current dynamic assembly was created, and sets the code base as specified."}],"pos":[119944,120108],"yaml":true},{"content":"`true` to set the code base to the location of the assembly after it is shadow-copied; `false` to set the code base to the original location.","nodes":[{"pos":[0,141],"content":"<ph id=\"ph1\">`true`</ph> to set the code base to the location of the assembly after it is shadow-copied; <ph id=\"ph2\">`false`</ph> to set the code base to the original location.","source":"`true` to set the code base to the location of the assembly after it is shadow-copied; `false` to set the code base to the original location."}],"pos":[120288,120432],"yaml":true},{"content":"The name of the dynamic assembly.","nodes":[{"pos":[0,33],"content":"The name of the dynamic assembly.","nodes":[{"content":"The name of the dynamic assembly.","pos":[0,33]}]}],"pos":[120506,120540],"yaml":true},{"content":"Gets an incomplete list of <xref href=\"System.Reflection.AssemblyName\"></xref> objects for the assemblies that are referenced by this <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>.","nodes":[{"pos":[0,194],"content":"Gets an incomplete list of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.AssemblyName\"&gt;&lt;/xref&gt;</ph> objects for the assemblies that are referenced by this <ph id=\"ph2\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilder\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an incomplete list of <xref href=\"System.Reflection.AssemblyName\"></xref> objects for the assemblies that are referenced by this <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>."}],"pos":[121722,121917],"yaml":true},{"content":"This method does not return a complete list of referenced assemblies. For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method. However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.  \n  \n To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,383],"content":"This method does not return a complete list of referenced assemblies. For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method. However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.","nodes":[{"content":"This method does not return a complete list of referenced assemblies. For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method. However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.","pos":[0,383],"nodes":[{"content":"This method does not return a complete list of referenced assemblies.","pos":[0,69]},{"content":"For example, if you apply a custom attribute to the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph>, the assembly in which the attribute was defined is included in the list returned by this method.","pos":[70,265],"source":" For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method."},{"content":"However, if you use a <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object to specify the type of a method parameter, that type is not included.","pos":[266,383],"source":" However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included."}]}]},{"pos":[390,605],"content":"To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName> method.","nodes":[{"content":"To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,215],"source":"To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName> method."}]}],"pos":[121928,122538],"yaml":true,"extradata":"MT"},{"content":"An array of assembly names for the referenced assemblies. This array is not a complete list.","nodes":[{"pos":[0,92],"content":"An array of assembly names for the referenced assemblies. This array is not a complete list.","nodes":[{"content":"An array of assembly names for the referenced assemblies. This array is not a complete list.","pos":[0,92],"nodes":[{"content":"An array of assembly names for the referenced assemblies.","pos":[0,57]},{"content":"This array is not a complete list.","pos":[58,92]}]}]}],"pos":[122733,122826],"yaml":true},{"content":"Gets the satellite assembly for the specified culture.","nodes":[{"pos":[0,54],"content":"Gets the satellite assembly for the specified culture.","nodes":[{"content":"Gets the satellite assembly for the specified culture.","pos":[0,54]}]}],"pos":[124141,124196],"yaml":true},{"content":"Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.  \n  \n Call this method to use your current assembly version.","nodes":[{"pos":[0,222],"content":"Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.","nodes":[{"content":"Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.","pos":[0,222]}]},{"pos":[229,283],"content":"Call this method to use your current assembly version.","nodes":[{"content":"Call this method to use your current assembly version.","pos":[0,54]}]}],"pos":[124207,124495],"yaml":true,"extradata":"MT"},{"content":"The specified culture.","nodes":[{"pos":[0,22],"content":"The specified culture.","nodes":[{"content":"The specified culture.","pos":[0,22]}]}],"pos":[124724,124747],"yaml":true},{"content":"The specified satellite assembly.","nodes":[{"pos":[0,33],"content":"The specified satellite assembly.","nodes":[{"content":"The specified satellite assembly.","pos":[0,33]}]}],"pos":[124817,124851],"yaml":true},{"content":"<code>culture</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;culture&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>culture</code> is `null`."}],"pos":[125040,125072],"yaml":true},{"content":"The assembly cannot be found.","nodes":[{"pos":[0,29],"content":"The assembly cannot be found.","nodes":[{"content":"The assembly cannot be found.","pos":[0,29]}]}],"pos":[125180,125210],"yaml":true},{"content":"The satellite assembly with a matching file name was found, but the `CultureInfo` did not match the one specified.","nodes":[{"pos":[0,114],"content":"The satellite assembly with a matching file name was found, but the <ph id=\"ph1\">`CultureInfo`</ph> did not match the one specified.","source":"The satellite assembly with a matching file name was found, but the `CultureInfo` did not match the one specified."}],"pos":[125310,125425],"yaml":true},{"content":"The satellite assembly is not a valid assembly.","nodes":[{"pos":[0,47],"content":"The satellite assembly is not a valid assembly.","nodes":[{"content":"The satellite assembly is not a valid assembly.","pos":[0,47]}]}],"pos":[125531,125579],"yaml":true},{"content":"Gets the specified version of the satellite assembly for the specified culture.","nodes":[{"pos":[0,79],"content":"Gets the specified version of the satellite assembly for the specified culture.","nodes":[{"content":"Gets the specified version of the satellite assembly for the specified culture.","pos":[0,79]}]}],"pos":[126873,126953],"yaml":true},{"content":"Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.  \n  \n Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.","nodes":[{"pos":[0,222],"content":"Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.","nodes":[{"content":"Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.","pos":[0,222]}]},{"pos":[229,377],"content":"Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29&gt;</ph> overload to use your current assembly version.","pos":[0,148],"source":"Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version."}]}],"pos":[126964,127346],"yaml":true,"extradata":"MT"},{"content":"The specified culture.","nodes":[{"pos":[0,22],"content":"The specified culture.","nodes":[{"content":"The specified culture.","pos":[0,22]}]}],"pos":[127592,127615],"yaml":true},{"content":"The version of the satellite assembly.","nodes":[{"pos":[0,38],"content":"The version of the satellite assembly.","nodes":[{"content":"The version of the satellite assembly.","pos":[0,38]}]}],"pos":[127679,127718],"yaml":true},{"content":"The specified satellite assembly.","nodes":[{"pos":[0,33],"content":"The specified satellite assembly.","nodes":[{"content":"The specified satellite assembly.","pos":[0,33]}]}],"pos":[127788,127822],"yaml":true},{"content":"<code>culture</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;culture&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>culture</code> is `null`."}],"pos":[128011,128043],"yaml":true},{"content":"The satellite assembly with a matching file name was found, but the `CultureInfo` or the version did not match the one specified.","nodes":[{"pos":[0,129],"content":"The satellite assembly with a matching file name was found, but the <ph id=\"ph1\">`CultureInfo`</ph> or the version did not match the one specified.","source":"The satellite assembly with a matching file name was found, but the `CultureInfo` or the version did not match the one specified."}],"pos":[128143,128273],"yaml":true},{"content":"The assembly cannot be found.","nodes":[{"pos":[0,29],"content":"The assembly cannot be found.","nodes":[{"content":"The assembly cannot be found.","pos":[0,29]}]}],"pos":[128381,128411],"yaml":true},{"content":"The satellite assembly is not a valid assembly.","nodes":[{"pos":[0,47],"content":"The satellite assembly is not a valid assembly.","nodes":[{"content":"The satellite assembly is not a valid assembly.","pos":[0,47]}]}],"pos":[128517,128565],"yaml":true},{"content":"Gets the specified type from the types that have been defined and created in the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>.","nodes":[{"pos":[0,149],"content":"Gets the specified type from the types that have been defined and created in the current <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilder\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the specified type from the types that have been defined and created in the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>."}],"pos":[129781,129931],"yaml":true},{"content":"A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.","nodes":[{"pos":[0,127],"content":"A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.","nodes":[{"content":"A type cannot be found until it has been created by calling the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.CreateType%2A&gt;</ph> method.","pos":[0,127],"source":"A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method."}]}],"pos":[129942,130070],"yaml":true,"extradata":"MT"},{"content":"The name of the type to search for.","nodes":[{"pos":[0,35],"content":"The name of the type to search for.","nodes":[{"content":"The name of the type to search for.","pos":[0,35]}]}],"pos":[130249,130285],"yaml":true},{"content":"`true` to throw an exception if the type is not found; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> to throw an exception if the type is not found; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to throw an exception if the type is not found; otherwise, `false`."}],"pos":[130354,130431],"yaml":true},{"content":"`true` to ignore the case of the type name when searching; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> to ignore the case of the type name when searching; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to ignore the case of the type name when searching; otherwise, `false`."}],"pos":[130498,130579],"yaml":true},{"content":"The specified type, or `null` if the type is not found or has not been created yet.","nodes":[{"pos":[0,83],"content":"The specified type, or <ph id=\"ph1\">`null`</ph> if the type is not found or has not been created yet.","source":"The specified type, or `null` if the type is not found or has not been created yet."}],"pos":[130634,130718],"yaml":true},{"content":"Gets a value that indicates whether the assembly was loaded from the global assembly cache.","nodes":[{"pos":[0,91],"content":"Gets a value that indicates whether the assembly was loaded from the global assembly cache.","nodes":[{"content":"Gets a value that indicates whether the assembly was loaded from the global assembly cache.","pos":[0,91]}]}],"pos":[131872,131964],"yaml":true},{"content":"<xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.","nodes":[{"pos":[0,153],"content":"<xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.","pos":[0,153],"source":"<xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache."}]}],"pos":[131975,132129],"yaml":true,"extradata":"MT"},{"content":"Always `false`.","nodes":[{"pos":[0,15],"content":"Always <ph id=\"ph1\">`false`</ph>.","source":"Always `false`."}],"pos":[132260,132276],"yaml":true},{"content":"Gets the host context where the dynamic assembly is being created.","nodes":[{"pos":[0,66],"content":"Gets the host context where the dynamic assembly is being created.","nodes":[{"content":"Gets the host context where the dynamic assembly is being created.","pos":[0,66]}]}],"pos":[133394,133461],"yaml":true},{"content":"A value that indicates the host context where the dynamic assembly is being created.","nodes":[{"pos":[0,84],"content":"A value that indicates the host context where the dynamic assembly is being created.","nodes":[{"content":"A value that indicates the host context where the dynamic assembly is being created.","pos":[0,84]}]}],"pos":[133582,133667],"yaml":true},{"content":"Gets the version of the common language runtime that will be saved in the file containing the manifest.","nodes":[{"pos":[0,103],"content":"Gets the version of the common language runtime that will be saved in the file containing the manifest.","nodes":[{"content":"Gets the version of the common language runtime that will be saved in the file containing the manifest.","pos":[0,103]}]}],"pos":[134741,134845],"yaml":true},{"content":"A string representing the common language runtime version.","nodes":[{"pos":[0,58],"content":"A string representing the common language runtime version.","nodes":[{"content":"A string representing the common language runtime version.","pos":[0,58]}]}],"pos":[134977,135036],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[135234,135284],"yaml":true},{"content":"Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.","nodes":[{"pos":[0,119],"content":"Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.","nodes":[{"content":"Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.","pos":[0,119]}]}],"pos":[136428,136548],"yaml":true},{"content":"The type of attribute to test for.","nodes":[{"pos":[0,34],"content":"The type of attribute to test for.","nodes":[{"content":"The type of attribute to test for.","pos":[0,34]}]}],"pos":[136721,136756],"yaml":true},{"content":"This argument is ignored for objects of this type.","nodes":[{"pos":[0,50],"content":"This argument is ignored for objects of this type.","nodes":[{"content":"This argument is ignored for objects of this type.","pos":[0,50]}]}],"pos":[136820,136871],"yaml":true},{"content":"`true` if one or more instances of <code>attributeType</code> is applied to this dynamic assembly; otherwise, `false`.","nodes":[{"pos":[0,118],"content":"<ph id=\"ph1\">`true`</ph> if one or more instances of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">attributeType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is applied to this dynamic assembly; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if one or more instances of <code>attributeType</code> is applied to this dynamic assembly; otherwise, `false`."}],"pos":[136929,137050],"yaml":true},{"content":"Gets a value that indicates that the current assembly is a dynamic assembly.","nodes":[{"pos":[0,76],"content":"Gets a value that indicates that the current assembly is a dynamic assembly.","nodes":[{"content":"Gets a value that indicates that the current assembly is a dynamic assembly.","pos":[0,76]}]}],"pos":[138173,138250],"yaml":true},{"content":"An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly.","nodes":[{"pos":[0,93],"content":"An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph> object always represents a dynamic assembly.","pos":[0,93],"source":"An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly."}]}],"pos":[138261,138355],"yaml":true,"extradata":"MT"},{"content":"Always `true`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`true`</ph>.","source":"Always `true`."}],"pos":[138476,138491],"yaml":true},{"content":"Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.","nodes":[{"pos":[0,112],"content":"Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.","nodes":[{"content":"Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.","pos":[0,112]}]}],"pos":[139677,139790],"yaml":true},{"content":"The location of the loaded file that contains the manifest. If the loaded file has been shadow-copied, the `Location` is that of the file before being shadow-copied.","nodes":[{"pos":[0,165],"content":"The location of the loaded file that contains the manifest. If the loaded file has been shadow-copied, the `Location` is that of the file before being shadow-copied.","nodes":[{"content":"The location of the loaded file that contains the manifest.","pos":[0,59]},{"content":"If the loaded file has been shadow-copied, the <ph id=\"ph1\">`Location`</ph> is that of the file before being shadow-copied.","pos":[60,165],"source":" If the loaded file has been shadow-copied, the `Location` is that of the file before being shadow-copied."}]}],"pos":[139911,140077],"yaml":true},{"content":"This method is not currently supported.","nodes":[{"pos":[0,39],"content":"This method is not currently supported.","nodes":[{"content":"This method is not currently supported.","pos":[0,39]}]}],"pos":[140254,140294],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[140406,140456],"yaml":true},{"content":"Gets the module in the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref> that contains the assembly manifest.","nodes":[{"pos":[0,127],"content":"Gets the module in the current <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilder\"&gt;&lt;/xref&gt;</ph> that contains the assembly manifest.","source":"Gets the module in the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref> that contains the assembly manifest."}],"pos":[141530,141658],"yaml":true},{"content":"The manifest module.","nodes":[{"pos":[0,20],"content":"The manifest module.","nodes":[{"content":"The manifest module.","pos":[0,20]}]}],"pos":[141814,141835],"yaml":true},{"content":"Gets the grant set of the current dynamic assembly.","nodes":[{"pos":[0,51],"content":"Gets the grant set of the current dynamic assembly.","nodes":[{"content":"Gets the grant set of the current dynamic assembly.","pos":[0,51]}]}],"pos":[143946,143998],"yaml":true},{"content":"<xref:System.Security.PermissionSet> objects can contain sensitive information such as paths. Therefore, full trust is required to access these objects.","nodes":[{"pos":[0,152],"content":"<xref:System.Security.PermissionSet> objects can contain sensitive information such as paths. Therefore, full trust is required to access these objects.","nodes":[{"content":"<xref:System.Security.PermissionSet> objects can contain sensitive information such as paths. Therefore, full trust is required to access these objects.","pos":[0,152],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.PermissionSet&gt;</ph> objects can contain sensitive information such as paths.","pos":[0,93],"source":"<xref:System.Security.PermissionSet> objects can contain sensitive information such as paths."},{"content":"Therefore, full trust is required to access these objects.","pos":[94,152]}]}]}],"pos":[144009,144162],"yaml":true,"extradata":"MT"},{"content":"The grant set of the current dynamic assembly.","nodes":[{"pos":[0,46],"content":"The grant set of the current dynamic assembly.","nodes":[{"content":"The grant set of the current dynamic assembly.","pos":[0,46]}]}],"pos":[144383,144430],"yaml":true},{"content":"Gets a value indicating whether the dynamic assembly is in the reflection-only context.","nodes":[{"pos":[0,87],"content":"Gets a value indicating whether the dynamic assembly is in the reflection-only context.","nodes":[{"content":"Gets a value indicating whether the dynamic assembly is in the reflection-only context.","pos":[0,87]}]}],"pos":[145540,145628],"yaml":true},{"content":"To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>. If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.  \n  \n> [!NOTE]\n>  After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=fullName> method to load the completed assembly into the reflection-only context. However, the assembly can no longer be modified.","nodes":[{"pos":[0,304],"content":"To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>. If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.","nodes":[{"content":"To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>. If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.","pos":[0,304],"nodes":[{"content":"To emit a dynamic assembly in the reflection-only context, specify <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName&gt;</ph> when you create the <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph>.","pos":[0,210],"source":"To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>."},{"content":"If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.","pos":[211,304]}]}]},{"pos":[312,589],"content":"[!NOTE]\n After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=fullName> method to load the completed assembly into the reflection-only context. However, the assembly can no longer be modified.","leadings":["","> "],"nodes":[{"content":" After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=fullName> method to load the completed assembly into the reflection-only context. However, the assembly can no longer be modified.","pos":[8,275],"nodes":[{"content":"After you have saved a dynamic assembly to disk, you can use the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=fullName&gt;</ph> method to load the completed assembly into the reflection-only context.","pos":[1,218],"source":" After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=fullName> method to load the completed assembly into the reflection-only context."},{"content":"However, the assembly can no longer be modified.","pos":[219,267]}]}]}],"pos":[145639,146234],"yaml":true,"extradata":"MT"},{"content":"`true` if the dynamic assembly is in the reflection-only context; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the dynamic assembly is in the reflection-only context; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the dynamic assembly is in the reflection-only context; otherwise, `false`."}],"pos":[146360,146448],"yaml":true},{"content":"Saves this dynamic assembly to disk.","nodes":[{"pos":[0,36],"content":"Saves this dynamic assembly to disk.","nodes":[{"content":"Saves this dynamic assembly to disk.","pos":[0,36]}]}],"pos":[147586,147623],"yaml":true},{"content":"This method saves all non-transient dynamic modules defined in this dynamic assembly. Transient dynamic modules are not saved. The assembly file name can be the same as the name of one of the modules. If so, the assembly manifest is stored within that module. `assemblyFileName` can be different from the names of all of the modules contained within the assembly. If so, the assembly file contains only the assembly manifest.  \n  \n For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.  \n  \n The `assemblyFileName` needs to be a simple file name without a drive or directory component. To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.  \n  \n In the .NET Framework version 2.0, this overload of the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method is equivalent to calling the <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> method overload with <xref:System.Reflection.PortableExecutableKinds.ILOnly> for the `portableExecutableKind` parameter and <xref:System.Reflection.ImageFileMachine.I386> for the `imageFileMachine` parameter.","nodes":[{"pos":[0,425],"content":"This method saves all non-transient dynamic modules defined in this dynamic assembly. Transient dynamic modules are not saved. The assembly file name can be the same as the name of one of the modules. If so, the assembly manifest is stored within that module. `assemblyFileName` can be different from the names of all of the modules contained within the assembly. If so, the assembly file contains only the assembly manifest.","nodes":[{"content":"This method saves all non-transient dynamic modules defined in this dynamic assembly.","pos":[0,85]},{"content":"Transient dynamic modules are not saved.","pos":[86,126]},{"content":"The assembly file name can be the same as the name of one of the modules.","pos":[127,200]},{"content":"If so, the assembly manifest is stored within that module.","pos":[201,259]},{"content":"<ph id=\"ph1\">`assemblyFileName`</ph> can be different from the names of all of the modules contained within the assembly.","pos":[260,363],"source":"`assemblyFileName` can be different from the names of all of the modules contained within the assembly."},{"content":"If so, the assembly file contains only the assembly manifest.","pos":[364,425]}]},{"pos":[432,677],"content":"For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.","nodes":[{"content":"For each <ph id=\"ph1\">&lt;xref:System.Resources.ResourceWriter&gt;</ph> obtained using <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A&gt;</ph>, this method writes the .resources file and calls <ph id=\"ph3\">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> to close the stream.","pos":[0,245],"source":"For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream."}]},{"pos":[684,936],"content":"The `assemblyFileName` needs to be a simple file name without a drive or directory component. To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.","nodes":[{"content":"The <ph id=\"ph1\">`assemblyFileName`</ph> needs to be a simple file name without a drive or directory component.","pos":[0,93],"source":"The `assemblyFileName` needs to be a simple file name without a drive or directory component."},{"content":"To create an assembly in a specific directory, use one of the <ph id=\"ph1\">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A&gt;</ph> methods that takes a target directory argument.","pos":[94,252],"source":" To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument."}]},{"pos":[943,1448],"content":"In the .NET Framework version 2.0, this overload of the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.Save%2A&gt;</ph> method is equivalent to calling the <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29&gt;</ph> method overload with <ph id=\"ph3\">&lt;xref:System.Reflection.PortableExecutableKinds.ILOnly&gt;</ph> for the <ph id=\"ph4\">`portableExecutableKind`</ph> parameter and <ph id=\"ph5\">&lt;xref:System.Reflection.ImageFileMachine.I386&gt;</ph> for the <ph id=\"ph6\">`imageFileMachine`</ph> parameter.","source":"In the .NET Framework version 2.0, this overload of the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method is equivalent to calling the <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> method overload with <xref:System.Reflection.PortableExecutableKinds.ILOnly> for the `portableExecutableKind` parameter and <xref:System.Reflection.ImageFileMachine.I386> for the `imageFileMachine` parameter."}],"pos":[147634,149091],"yaml":true,"extradata":"MT"},{"content":"The file name of the assembly.","nodes":[{"pos":[0,30],"content":"The file name of the assembly.","nodes":[{"content":"The file name of the assembly.","pos":[0,30]}]}],"pos":[149937,149968],"yaml":true},{"content":"The length of <code>assemblyFileName</code> is 0.  \n  \n -or-  \n  \n There are two or more modules resource files in the assembly with the same name.  \n  \n -or-  \n  \n The target directory of the assembly is invalid.  \n  \n -or-  \n  \n <code>assemblyFileName</code> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly.  \n  \n -or-  \n  \n The `CultureInfo` string in <xref href=\"System.Reflection.AssemblyCultureAttribute\"></xref> is not a valid string and <xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\"></xref> was called prior to calling this method.","nodes":[{"pos":[0,49],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">assemblyFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is 0.","source":"The length of <code>assemblyFileName</code> is 0."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,147],"content":"There are two or more modules resource files in the assembly with the same name.","nodes":[{"content":"There are two or more modules resource files in the assembly with the same name.","pos":[0,80]}]},{"pos":[154,158],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[165,213],"content":"The target directory of the assembly is invalid.","nodes":[{"content":"The target directory of the assembly is invalid.","pos":[0,48]}]},{"pos":[220,224],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[231,446],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyFileName&lt;/code&gt;</ph> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly.","source":"<code>assemblyFileName</code> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly."},{"pos":[453,457],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[464,779],"content":"The <ph id=\"ph1\">`CultureInfo`</ph> string in <ph id=\"ph2\">&lt;xref href=\"System.Reflection.AssemblyCultureAttribute\"&gt;&lt;/xref&gt;</ph> is not a valid string and <ph id=\"ph3\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\"&gt;&lt;/xref&gt;</ph> was called prior to calling this method.","source":"The `CultureInfo` string in <xref href=\"System.Reflection.AssemblyCultureAttribute\"></xref> is not a valid string and <xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\"></xref> was called prior to calling this method."}],"pos":[150133,150935],"yaml":true},{"content":"<code>assemblyFileName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyFileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assemblyFileName</code> is `null`."}],"pos":[151037,151078],"yaml":true},{"content":"This assembly has been saved before.  \n  \n -or-  \n  \n This assembly has access `Run`<xref href=\"System.Reflection.Emit.AssemblyBuilderAccess\"></xref>","nodes":[{"pos":[0,36],"content":"This assembly has been saved before.","nodes":[{"content":"This assembly has been saved before.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,149],"content":"This assembly has access <ph id=\"ph1\">`Run`</ph><ph id=\"ph2\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilderAccess\"&gt;&lt;/xref&gt;</ph>","source":"This assembly has access `Run`<xref href=\"System.Reflection.Emit.AssemblyBuilderAccess\"></xref>"}],"pos":[151188,151346],"yaml":true},{"content":"An output error occurs during the save.","nodes":[{"pos":[0,39],"content":"An output error occurs during the save.","nodes":[{"content":"An output error occurs during the save.","pos":[0,39]}]}],"pos":[151434,151474],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called for any of the types in the modules of the assembly to be written to disk.","nodes":[{"pos":[0,161],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has not been called for any of the types in the modules of the assembly to be written to disk.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called for any of the types in the modules of the assembly to be written to disk."}],"pos":[151576,151738],"yaml":true},{"content":"Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.","nodes":[{"pos":[0,121],"content":"Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.","nodes":[{"content":"Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.","pos":[0,121]}]}],"pos":[153152,153274],"yaml":true},{"content":"If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`. No exception is thrown. For example, if you specify <xref:System.Reflection.ImageFileMachine?displayProperty=fullName> with <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName>, <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName> is ignored.  \n  \n This method saves all non-transient dynamic modules defined in this dynamic assembly. Transient dynamic modules are not saved. The assembly file name can be the same as the name of one of the module. If so, the assembly manifest is stored within that module. `assemblyFileName` can be different from the names of all of the modules contained within the assembly. If so, the assembly file contains only the assembly manifest.  \n  \n For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.  \n  \n The `assemblyFileName` needs to be a simple file name without a drive or directory component. To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.","nodes":[{"pos":[0,420],"content":"If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`. No exception is thrown. For example, if you specify <xref:System.Reflection.ImageFileMachine?displayProperty=fullName> with <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName>, <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName> is ignored.","nodes":[{"content":"If <ph id=\"ph1\">`imageFileMachine`</ph> and <ph id=\"ph2\">`portableExecutableKind`</ph> are incompatible, <ph id=\"ph3\">`imageFileMachine`</ph> takes precedence over <ph id=\"ph4\">`portableExecutableKind`</ph>.","pos":[0,135],"source":"If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`."},{"content":"No exception is thrown.","pos":[136,159]},{"content":"For example, if you specify <ph id=\"ph1\">&lt;xref:System.Reflection.ImageFileMachine?displayProperty=fullName&gt;</ph> with <ph id=\"ph2\">&lt;xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName&gt;</ph> is ignored.","pos":[160,420],"source":" For example, if you specify <xref:System.Reflection.ImageFileMachine?displayProperty=fullName> with <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName>, <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName> is ignored."}]},{"pos":[427,851],"content":"This method saves all non-transient dynamic modules defined in this dynamic assembly. Transient dynamic modules are not saved. The assembly file name can be the same as the name of one of the module. If so, the assembly manifest is stored within that module. `assemblyFileName` can be different from the names of all of the modules contained within the assembly. If so, the assembly file contains only the assembly manifest.","nodes":[{"content":"This method saves all non-transient dynamic modules defined in this dynamic assembly.","pos":[0,85]},{"content":"Transient dynamic modules are not saved.","pos":[86,126]},{"content":"The assembly file name can be the same as the name of one of the module.","pos":[127,199]},{"content":"If so, the assembly manifest is stored within that module.","pos":[200,258]},{"content":"<ph id=\"ph1\">`assemblyFileName`</ph> can be different from the names of all of the modules contained within the assembly.","pos":[259,362],"source":"`assemblyFileName` can be different from the names of all of the modules contained within the assembly."},{"content":"If so, the assembly file contains only the assembly manifest.","pos":[363,424]}]},{"pos":[858,1103],"content":"For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.","nodes":[{"content":"For each <ph id=\"ph1\">&lt;xref:System.Resources.ResourceWriter&gt;</ph> obtained using <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A&gt;</ph>, this method writes the .resources file and calls <ph id=\"ph3\">&lt;xref:System.Resources.ResourceWriter.Close%2A&gt;</ph> to close the stream.","pos":[0,245],"source":"For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream."}]},{"pos":[1110,1362],"content":"The `assemblyFileName` needs to be a simple file name without a drive or directory component. To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.","nodes":[{"content":"The <ph id=\"ph1\">`assemblyFileName`</ph> needs to be a simple file name without a drive or directory component.","pos":[0,93],"source":"The `assemblyFileName` needs to be a simple file name without a drive or directory component."},{"content":"To create an assembly in a specific directory, use one of the <ph id=\"ph1\">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A&gt;</ph> methods that takes a target directory argument.","pos":[94,252],"source":" To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument."}]}],"pos":[153285,154656],"yaml":true,"extradata":"MT"},{"content":"The file name of the assembly.","nodes":[{"pos":[0,30],"content":"The file name of the assembly.","nodes":[{"content":"The file name of the assembly.","pos":[0,30]}]}],"pos":[154930,154961],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Reflection.PortableExecutableKinds\"></xref> values that specifies the nature of the code.","nodes":[{"pos":[0,137],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PortableExecutableKinds\"&gt;&lt;/xref&gt;</ph> values that specifies the nature of the code.","source":"A bitwise combination of the <xref href=\"System.Reflection.PortableExecutableKinds\"></xref> values that specifies the nature of the code."}],"pos":[155067,155205],"yaml":true},{"content":"One of the <xref href=\"System.Reflection.ImageFileMachine\"></xref> values that specifies the target platform.","nodes":[{"pos":[0,109],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ImageFileMachine\"&gt;&lt;/xref&gt;</ph> values that specifies the target platform.","source":"One of the <xref href=\"System.Reflection.ImageFileMachine\"></xref> values that specifies the target platform."}],"pos":[155298,155408],"yaml":true},{"content":"The length of <code>assemblyFileName</code> is 0.  \n  \n -or-  \n  \n There are two or more modules resource files in the assembly with the same name.  \n  \n -or-  \n  \n The target directory of the assembly is invalid.  \n  \n -or-  \n  \n <code>assemblyFileName</code> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly.  \n  \n -or-  \n  \n The `CultureInfo` string in <xref href=\"System.Reflection.AssemblyCultureAttribute\"></xref> is not a valid string and <xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\"></xref> was called prior to calling this method.","nodes":[{"pos":[0,49],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">assemblyFileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is 0.","source":"The length of <code>assemblyFileName</code> is 0."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,147],"content":"There are two or more modules resource files in the assembly with the same name.","nodes":[{"content":"There are two or more modules resource files in the assembly with the same name.","pos":[0,80]}]},{"pos":[154,158],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[165,213],"content":"The target directory of the assembly is invalid.","nodes":[{"content":"The target directory of the assembly is invalid.","pos":[0,48]}]},{"pos":[220,224],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[231,447],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyFileName&lt;/code&gt;</ph> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly.","source":"<code>assemblyFileName</code> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly."},{"pos":[454,458],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[465,780],"content":"The <ph id=\"ph1\">`CultureInfo`</ph> string in <ph id=\"ph2\">&lt;xref href=\"System.Reflection.AssemblyCultureAttribute\"&gt;&lt;/xref&gt;</ph> is not a valid string and <ph id=\"ph3\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\"&gt;&lt;/xref&gt;</ph> was called prior to calling this method.","source":"The `CultureInfo` string in <xref href=\"System.Reflection.AssemblyCultureAttribute\"></xref> is not a valid string and <xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\"></xref> was called prior to calling this method."}],"pos":[155573,156376],"yaml":true},{"content":"<code>assemblyFileName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyFileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assemblyFileName</code> is `null`."}],"pos":[156478,156519],"yaml":true},{"content":"This assembly has been saved before.  \n  \n -or-  \n  \n This assembly has access `Run`<xref href=\"System.Reflection.Emit.AssemblyBuilderAccess\"></xref>","nodes":[{"pos":[0,36],"content":"This assembly has been saved before.","nodes":[{"content":"This assembly has been saved before.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,149],"content":"This assembly has access <ph id=\"ph1\">`Run`</ph><ph id=\"ph2\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilderAccess\"&gt;&lt;/xref&gt;</ph>","source":"This assembly has access `Run`<xref href=\"System.Reflection.Emit.AssemblyBuilderAccess\"></xref>"}],"pos":[156629,156787],"yaml":true},{"content":"An output error occurs during the save.","nodes":[{"pos":[0,39],"content":"An output error occurs during the save.","nodes":[{"content":"An output error occurs during the save.","pos":[0,39]}]}],"pos":[156875,156915],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called for any of the types in the modules of the assembly to be written to disk.","nodes":[{"pos":[0,161],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph> has not been called for any of the types in the modules of the assembly to be written to disk.","source":"<xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called for any of the types in the modules of the assembly to be written to disk."}],"pos":[157017,157179],"yaml":true},{"content":"Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.","nodes":[{"pos":[0,117],"content":"Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.","nodes":[{"content":"Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.","pos":[0,117]}]}],"pos":[158232,158350],"yaml":true},{"content":"The [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] always enforces level 2 transparency (<xref:System.Security.SecurityRuleSet?displayProperty=fullName>) for the dynamic assemblies it generates.","nodes":[{"pos":[0,203],"content":"The <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> always enforces level 2 transparency (<ph id=\"ph2\">&lt;xref:System.Security.SecurityRuleSet?displayProperty=fullName&gt;</ph>) for the dynamic assemblies it generates.","source":"The [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] always enforces level 2 transparency (<xref:System.Security.SecurityRuleSet?displayProperty=fullName>) for the dynamic assemblies it generates."}],"pos":[158361,158565],"yaml":true,"extradata":"MT"},{"content":"The security rule set that the CLR enforces for this dynamic assembly.","nodes":[{"pos":[0,70],"content":"The security rule set that the CLR enforces for this dynamic assembly.","nodes":[{"content":"The security rule set that the CLR enforces for this dynamic assembly.","pos":[0,70]}]}],"pos":[158736,158807],"yaml":true},{"content":"Set a custom attribute on this assembly using a custom attribute builder.","nodes":[{"pos":[0,73],"content":"Set a custom attribute on this assembly using a custom attribute builder.","nodes":[{"content":"Set a custom attribute on this assembly using a custom attribute builder.","pos":[0,73]}]}],"pos":[160117,160191],"yaml":true},{"content":"> [!NOTE]\n>  <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes. Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[2,268],"content":"[!NOTE]\n <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes. Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.","leadings":["","> "],"nodes":[{"content":" <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes. Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.","pos":[8,264],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A&gt;</ph> cannot be used to set declarative security attributes.","pos":[1,123],"source":" <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes."},{"content":"Use one of the overloads of <ph id=\"ph1\">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A&gt;</ph> that takes required, optional, and refused permissions.","pos":[124,256],"source":" Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions."}]}]},{"pos":[276,805],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[160202,161014],"yaml":true,"extradata":"MT"},{"content":"An instance of a helper class to define the custom attribute.","nodes":[{"pos":[0,61],"content":"An instance of a helper class to define the custom attribute.","nodes":[{"content":"An instance of a helper class to define the custom attribute.","pos":[0,61]}]}],"pos":[161991,162053],"yaml":true},{"content":"<code>con</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>con</code> is `null`."}],"pos":[162240,162268],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[162380,162430],"yaml":true},{"content":"Set a custom attribute on this assembly using a specified custom attribute blob.","nodes":[{"pos":[0,80],"content":"Set a custom attribute on this assembly using a specified custom attribute blob.","nodes":[{"content":"Set a custom attribute on this assembly using a specified custom attribute blob.","pos":[0,80]}]}],"pos":[163884,163965],"yaml":true},{"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.  \n  \n `RuntimeConstructorInfo` is a special type generated by the system. It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`.  \n  \n> [!NOTE]\n>  <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes. Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,414],"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"content":"See the metadata specification in the ECMA Partition II documentation for details on how to format <ph id=\"ph1\">`binaryAttribute`</ph>.","pos":[0,117],"source":"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`."},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.","pos":[118,414],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."}]},{"pos":[421,695],"content":"`RuntimeConstructorInfo` is a special type generated by the system. It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`.","nodes":[{"content":"<ph id=\"ph1\">`RuntimeConstructorInfo`</ph> is a special type generated by the system.","pos":[0,67],"source":"`RuntimeConstructorInfo` is a special type generated by the system."},{"content":"It derives from the <ph id=\"ph1\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> class, and any <ph id=\"ph2\">&lt;xref:System.Reflection.ConstructorInfo&gt;</ph> object you obtain through reflection is actually an instance of <ph id=\"ph3\">`RuntimeConstructorInfo`</ph>.","pos":[68,274],"source":" It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`."}]},{"pos":[703,969],"content":"[!NOTE]\n <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes. Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.","leadings":["","> "],"nodes":[{"content":" <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes. Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.","pos":[8,264],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A&gt;</ph> cannot be used to set declarative security attributes.","pos":[1,123],"source":" <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes."},{"content":"Use one of the overloads of <ph id=\"ph1\">&lt;xref:System.AppDomain.DefineDynamicAssembly%2A&gt;</ph> that takes required, optional, and refused permissions.","pos":[124,256],"source":" Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions."}]}]},{"pos":[977,1506],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[163976,165493],"yaml":true,"extradata":"MT"},{"content":"The constructor for the custom attribute.","nodes":[{"pos":[0,41],"content":"The constructor for the custom attribute.","nodes":[{"content":"The constructor for the custom attribute.","pos":[0,41]}]}],"pos":[166466,166508],"yaml":true},{"content":"A byte blob representing the attributes.","nodes":[{"pos":[0,40],"content":"A byte blob representing the attributes.","nodes":[{"content":"A byte blob representing the attributes.","pos":[0,40]}]}],"pos":[166579,166620],"yaml":true},{"content":"<code>con</code> or <code>binaryAttribute</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binaryAttribute&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>con</code> or <code>binaryAttribute</code> is `null`."}],"pos":[166807,166867],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[166979,167029],"yaml":true},{"content":"<code>con</code> is not a `RuntimeConstructorInfo` object.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> is not a <ph id=\"ph2\">`RuntimeConstructorInfo`</ph> object.","source":"<code>con</code> is not a `RuntimeConstructorInfo` object."}],"pos":[167123,167182],"yaml":true},{"content":"Sets the entry point for this dynamic assembly, assuming that a console application is being built.","nodes":[{"pos":[0,99],"content":"Sets the entry point for this dynamic assembly, assuming that a console application is being built.","nodes":[{"content":"Sets the entry point for this dynamic assembly, assuming that a console application is being built.","pos":[0,99]}]}],"pos":[168558,168658],"yaml":true},{"content":"A reference to the method that represents the entry point for this dynamic assembly.","nodes":[{"pos":[0,84],"content":"A reference to the method that represents the entry point for this dynamic assembly.","nodes":[{"content":"A reference to the method that represents the entry point for this dynamic assembly.","pos":[0,84]}]}],"pos":[168849,168934],"yaml":true},{"content":"<code>entryMethod</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;entryMethod&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>entryMethod</code> is `null`."}],"pos":[169116,169152],"yaml":true},{"content":"<code>entryMethod</code> is not contained within this assembly.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;entryMethod&lt;/code&gt;</ph> is not contained within this assembly.","source":"<code>entryMethod</code> is not contained within this assembly."}],"pos":[169262,169326],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[169438,169488],"yaml":true},{"content":"Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.","nodes":[{"pos":[0,109],"content":"Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.","nodes":[{"content":"Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.","pos":[0,109]}]}],"pos":[170797,170907],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[2,531],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[170918,171462],"yaml":true,"extradata":"MT"},{"content":"A reference to the method that represents the entry point for this dynamic assembly.","nodes":[{"pos":[0,84],"content":"A reference to the method that represents the entry point for this dynamic assembly.","nodes":[{"content":"A reference to the method that represents the entry point for this dynamic assembly.","pos":[0,84]}]}],"pos":[171698,171783],"yaml":true},{"content":"The type of the assembly executable being built.","nodes":[{"pos":[0,48],"content":"The type of the assembly executable being built.","nodes":[{"content":"The type of the assembly executable being built.","pos":[0,48]}]}],"pos":[171868,171917],"yaml":true},{"content":"<code>entryMethod</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;entryMethod&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>entryMethod</code> is `null`."}],"pos":[172099,172135],"yaml":true},{"content":"<code>entryMethod</code> is not contained within this assembly.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;entryMethod&lt;/code&gt;</ph> is not contained within this assembly.","source":"<code>entryMethod</code> is not contained within this assembly."}],"pos":[172245,172309],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[172421,172471],"yaml":true},{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"pos":[0,67],"content":"Maps a set of names to a corresponding set of dispatch identifiers.","nodes":[{"content":"Maps a set of names to a corresponding set of dispatch identifiers.","pos":[0,67]}]}],"pos":[174043,174111],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"pos":[0,186],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]}],"pos":[174122,174309],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[174518,174561],"yaml":true},{"content":"Passed-in array of names to be mapped.","nodes":[{"pos":[0,38],"content":"Passed-in array of names to be mapped.","nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]}],"pos":[174626,174665],"yaml":true},{"content":"Count of the names to be mapped.","nodes":[{"pos":[0,32],"content":"Count of the names to be mapped.","nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]}],"pos":[174727,174760],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[174820,174872],"yaml":true},{"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"pos":[0,73],"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"content":"Caller-allocated array which receives the IDs corresponding to the names.","pos":[0,73]}]}],"pos":[174936,175010],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[175244,175324],"yaml":true},{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"pos":[0,114],"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","nodes":[{"content":"Retrieves the type information for an object, which can then be used to get the type information for an interface.","pos":[0,114]}]}],"pos":[176761,176876],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"pos":[0,184],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]}],"pos":[176887,177072],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[177249,177281],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[177341,177389],"yaml":true},{"content":"Receives a pointer to the requested type information object.","nodes":[{"pos":[0,60],"content":"Receives a pointer to the requested type information object.","nodes":[{"content":"Receives a pointer to the requested type information object.","pos":[0,60]}]}],"pos":[177452,177513],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[177745,177825],"yaml":true},{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"pos":[0,92],"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","nodes":[{"content":"Retrieves the number of type information interfaces that an object provides (either 0 or 1).","pos":[0,92]}]}],"pos":[179163,179256],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"pos":[0,189],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]}],"pos":[179267,179457],"yaml":true,"extradata":"MT"},{"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"pos":[0,100],"content":"Points to a location that receives the number of type information interfaces provided by the object.","nodes":[{"content":"Points to a location that receives the number of type information interfaces provided by the object.","pos":[0,100]}]}],"pos":[179618,179719],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[179956,180036],"yaml":true},{"content":"Provides access to properties and methods exposed by an object.","nodes":[{"pos":[0,63],"content":"Provides access to properties and methods exposed by an object.","nodes":[{"content":"Provides access to properties and methods exposed by an object.","pos":[0,63]}]}],"pos":[181758,181822],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"pos":[0,179],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]}],"pos":[181833,182013],"yaml":true,"extradata":"MT"},{"content":"Identifies the member.","nodes":[{"pos":[0,22],"content":"Identifies the member.","nodes":[{"content":"Identifies the member.","pos":[0,22]}]}],"pos":[182285,182308],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[182366,182409],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[182469,182521],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[182582,182624],"yaml":true},{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,159],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]}],"pos":[182691,182851],"yaml":true},{"content":"Pointer to the location where the result is to be stored.","nodes":[{"pos":[0,57],"content":"Pointer to the location where the result is to be stored.","nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]}],"pos":[182917,182975],"yaml":true},{"content":"Pointer to a structure that contains exception information.","nodes":[{"pos":[0,59],"content":"Pointer to a structure that contains exception information.","nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]}],"pos":[183041,183101],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[183165,183216],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[183443,183523],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.AssemblyBuilder\n  commentId: T:System.Reflection.Emit.AssemblyBuilder\n  id: AssemblyBuilder\n  children:\n  - System.Reflection.Emit.AssemblyBuilder.#ctor\n  - System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)\n  - System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)\n  - System.Reflection.Emit.AssemblyBuilder.CodeBase\n  - System.Reflection.Emit.AssemblyBuilder.DefinedTypes\n  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)\n  - System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)\n  - System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)\n  - System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])\n  - System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource\n  - System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\n  - System.Reflection.Emit.AssemblyBuilder.EntryPoint\n  - System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)\n  - System.Reflection.Emit.AssemblyBuilder.Evidence\n  - System.Reflection.Emit.AssemblyBuilder.FullName\n  - System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData\n  - System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.GetExportedTypes\n  - System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.GetHashCode\n  - System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames\n  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)\n  - System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies\n  - System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  - System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  - System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache\n  - System.Reflection.Emit.AssemblyBuilder.HostContext\n  - System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion\n  - System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Emit.AssemblyBuilder.IsDynamic\n  - System.Reflection.Emit.AssemblyBuilder.Location\n  - System.Reflection.Emit.AssemblyBuilder.ManifestModule\n  - System.Reflection.Emit.AssemblyBuilder.Modules\n  - System.Reflection.Emit.AssemblyBuilder.PermissionSet\n  - System.Reflection.Emit.AssemblyBuilder.ReflectionOnly\n  - System.Reflection.Emit.AssemblyBuilder.Save(System.String)\n  - System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)\n  - System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet\n  - System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  - System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)\n  - System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)\n  - System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  langs:\n  - csharp\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n  type: Class\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines and represents a dynamic assembly.\n  remarks: \"A dynamic assembly is an assembly that is created using the Reflection Emit APIs. The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method. To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly. Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.  \\n  \\n If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method.  \\n  \\n Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects. You can load the defined dynamic assembly and call the methods on the loaded assembly. For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object.  \\n  \\n The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk. So, strong names will not work with transient dynamic assemblies.  \\n  \\n To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=fullName> method.  \\n  \\n## Reflection emit dynamic assembly scenarios  \\n The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies.  \\n  \\n### Dynamic modules  \\n Reflection emit supports the creation of dynamic modules defined in dynamic assemblies. A dynamic module created in a dynamic assembly can be transient or persistable.  \\n  \\n### Restrictions on type references  \\n Assemblies can reference types defined in another assembly. A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly. However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module. This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.  \\n  \\n### Restrictions on emitting to remote application domains  \\n Some scenarios require a dynamic assembly to be created and executed in a remote application domain. Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain. The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.  \\n  \\n### Dynamic assembly access modes  \\n Dynamic assemblies can be created using one of the following access modes:  \\n  \\n-   <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName>  \\n  \\n     The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient. The dynamic assembly can only be used to execute the emitted code.  \\n  \\n-   <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName>  \\n  \\n     The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.  \\n  \\n-   <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName>  \\n  \\n     The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk.  \\n  \\n The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=fullName> method when the dynamic assembly is defined and cannot be changed later. The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.\"\n  example:\n  - \"The following code example shows how to define a dynamic assembly with one module. The module in the example assembly contains one type, `MyDynamicType`, which has a private field, a property that gets and sets the private field, constructors that initialize the private field, and a method that multiplies a user-supplied number by the private field value and returns the result.  \\n  \\n <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName> is specified when the assembly is created. The assembly code is used immediately, and the assembly is also saved to disk so that it can be examined with [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) or used in another program.  \\n  \\n [!code-cpp[AssemblyBuilderClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilderClass/cpp/24895.cpp#1)]\\n [!code-csharp[AssemblyBuilderClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilderClass/cs/24895.cs#1)]\\n [!code-vb[AssemblyBuilderClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilderClass/vb/24895.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class AssemblyBuilder : System.Reflection.Assembly, System.Runtime.InteropServices._AssemblyBuilder\n  inheritance:\n  - System.Object\n  - System.Reflection.Assembly\n  implements:\n  - System.Runtime.InteropServices._AssemblyBuilder\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Reflection.Assembly.CreateInstance(System.String)\n  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n  - System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  - System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n  - System.Reflection.Assembly.CustomAttributes\n  - System.Reflection.Assembly.EscapedCodeBase\n  - System.Reflection.Assembly.ExportedTypes\n  - System.Reflection.Assembly.GetAssembly(System.Type)\n  - System.Reflection.Assembly.GetCallingAssembly\n  - System.Reflection.Assembly.GetEntryAssembly\n  - System.Reflection.Assembly.GetExecutingAssembly\n  - System.Reflection.Assembly.GetFiles\n  - System.Reflection.Assembly.GetLoadedModules\n  - System.Reflection.Assembly.GetModules\n  - System.Reflection.Assembly.GetName\n  - System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.Assembly.GetType(System.String)\n  - System.Reflection.Assembly.GetType(System.String,System.Boolean)\n  - System.Reflection.Assembly.GetTypes\n  - System.Reflection.Assembly.IsFullyTrusted\n  - System.Reflection.Assembly.Load(System.Byte[])\n  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n  - System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.Load(System.String)\n  - System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.LoadFile(System.String)\n  - System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.LoadFrom(System.String)\n  - System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n  - System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n  - System.Reflection.Assembly.LoadWithPartialName(System.String)\n  - System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n  - System.Reflection.Assembly.ModuleResolve\n  - System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)\n  - System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)\n  - System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n  - System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n  - System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n  - System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  - System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n  - System.Reflection.Assembly.ToString\n  - System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n  extensionMethods:\n  - System.Reflection.AssemblyExtensions.GetExportedTypes(System.Reflection.Assembly)\n  - System.Reflection.AssemblyExtensions.GetModules(System.Reflection.Assembly)\n  - System.Reflection.AssemblyExtensions.GetTypes(System.Reflection.Assembly)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.#ctor\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.#ctor\n  id: '#ctor'\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: AssemblyBuilder()\n  nameWithType: AssemblyBuilder.AssemblyBuilder()\n  fullName: AssemblyBuilder.AssemblyBuilder()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public AssemblyBuilder ();\n    parameters: []\n  overload: System.Reflection.Emit.AssemblyBuilder.#ctor*\n  exceptions: []\n  version:\n  - xamarinios-10.8\n  monikers:\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)\n  id: AddResourceFile(System.String,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: AddResourceFile(String, String)\n  nameWithType: AssemblyBuilder.AddResourceFile(String, String)\n  fullName: AssemblyBuilder.AddResourceFile(String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Adds an existing resource file to this assembly.\n  remarks: \"`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.  \\n  \\n The managed resources in the file are assumed to be public.  \\n  \\n The specified resource file must be in the directory where the assembly will be saved.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.  \\n  \\n [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]\\n [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]\\n [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void AddResourceFile (string name, string fileName);\n    parameters:\n    - id: name\n      type: System.String\n      description: The logical name of the resource.\n    - id: fileName\n      type: System.String\n      description: The physical file name (.resources file) to which the logical name is mapped. This should not include a path; the file must be in the same directory as the assembly to which it is added.\n  overload: System.Reflection.Emit.AssemblyBuilder.AddResourceFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> has been previously defined.  \\n  \\n -or-  \\n  \\n There is another file in the assembly named <code>fileName</code>.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is zero.  \\n  \\n -or-  \\n  \\n The length of <code>fileName</code> is zero, or if <code>fileName</code> includes a path.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>fileName</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file <code>fileName</code> is not found.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)\n  id: AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: AddResourceFile(String, String, ResourceAttributes)\n  nameWithType: AssemblyBuilder.AddResourceFile(String, String, ResourceAttributes)\n  fullName: AssemblyBuilder.AddResourceFile(String, String, ResourceAttributes)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Adds an existing resource file to this assembly.\n  remarks: \"`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.  \\n  \\n Attributes can be specified for the managed resource.  \\n  \\n The specified resource file must be in the directory where the assembly will be saved.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.  \\n  \\n [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]\\n [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]\\n [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void AddResourceFile (string name, string fileName, System.Reflection.ResourceAttributes attribute);\n    parameters:\n    - id: name\n      type: System.String\n      description: The logical name of the resource.\n    - id: fileName\n      type: System.String\n      description: The physical file name (.resources file) to which the logical name is mapped. This should not include a path; the file must be in the same directory as the assembly to which it is added.\n    - id: attribute\n      type: System.Reflection.ResourceAttributes\n      description: The resource attributes.\n  overload: System.Reflection.Emit.AssemblyBuilder.AddResourceFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> has been previously defined.  \\n  \\n -or-  \\n  \\n There is another file in the assembly named <code>fileName</code>.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is zero or if the length of <code>fileName</code> is zero.  \\n  \\n -or-  \\n  \\n <code>fileName</code> includes a path.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>fileName</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: If the file <code>fileName</code> is not found.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.CodeBase\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.CodeBase\n  id: CodeBase\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: CodeBase\n  nameWithType: AssemblyBuilder.CodeBase\n  fullName: AssemblyBuilder.CodeBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the location of the assembly, as specified originally (such as in an <xref href=\"System.Reflection.AssemblyName\"></xref> object).\n  remarks: To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=fullName> property.\n  syntax:\n    content: public override string CodeBase { get; }\n    return:\n      type: System.String\n      description: The location of the assembly, as specified originally.\n  overload: System.Reflection.Emit.AssemblyBuilder.CodeBase*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefinedTypes\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.DefinedTypes\n  id: DefinedTypes\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefinedTypes\n  nameWithType: AssemblyBuilder.DefinedTypes\n  fullName: AssemblyBuilder.DefinedTypes\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo> DefinedTypes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n      description: ''\n  overload: System.Reflection.Emit.AssemblyBuilder.DefinedTypes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)\n  nameWithType: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)\n  fullName: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a dynamic assembly that has the specified name and access rights.\n  syntax:\n    content: public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: The name of the assembly.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: The access rights of the assembly.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: An object that represents the new assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)\n  nameWithType: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)\n  fullName: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a new assembly that has the specified name, access rights, and attributes.\n  syntax:\n    content: public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder> assemblyAttributes);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: The name of the assembly.\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: The access rights of the assembly.\n    - id: assemblyAttributes\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n      description: A collection that contains the attributes of the assembly.\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: An object that represents the new assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)\n  id: DefineDynamicModule(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineDynamicModule(String)\n  nameWithType: AssemblyBuilder.DefineDynamicModule(String)\n  fullName: AssemblyBuilder.DefineDynamicModule(String)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a named transient dynamic module in this assembly.\n  remarks: \"It is an error to define multiple dynamic modules with the same name in an assembly.  \\n  \\n The defined dynamic module is transient. The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.  \\n  \\n> [!NOTE]\\n>  To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"[Visual Basic, C#]  \\n  \\n The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`.  \\n  \\n [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#1)]\\n [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#1)]\\n [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the dynamic module. Must be less than 260 characters in length.\n    return:\n      type: System.Reflection.Emit.ModuleBuilder\n      description: A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> representing the defined dynamic module.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> begins with white space.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is zero.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is greater than or equal to 260.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.ExecutionEngineException\n    commentId: T:System.ExecutionEngineException\n    description: \"The assembly for default symbol writer cannot be loaded.  \\n  \\n -or-  \\n  \\n The type that implements the default symbol writer interface cannot be found.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)\n  id: DefineDynamicModule(System.String,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineDynamicModule(String, Boolean)\n  nameWithType: AssemblyBuilder.DefineDynamicModule(String, Boolean)\n  fullName: AssemblyBuilder.DefineDynamicModule(String, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.\n  remarks: \"It is an error to define multiple dynamic modules with the same name in an assembly.  \\n  \\n The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.  \\n  \\n> [!NOTE]\\n>  To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"[Visual Basic, C#]  \\n  \\n The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`, suppressing symbol information.  \\n  \\n [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#2)]\\n [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#2)]\\n [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#2)]\"\n  syntax:\n    content: public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, bool emitSymbolInfo);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the dynamic module. Must be less than 260 characters in length.\n    - id: emitSymbolInfo\n      type: System.Boolean\n      description: '`true` if symbol information is to be emitted; otherwise, `false`.'\n    return:\n      type: System.Reflection.Emit.ModuleBuilder\n      description: A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> representing the defined dynamic module.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> begins with white space.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is zero.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is greater than or equal to 260.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.ExecutionEngineException\n    commentId: T:System.ExecutionEngineException\n    description: \"The assembly for default symbol writer cannot be loaded.  \\n  \\n -or-  \\n  \\n The type that implements the default symbol writer interface cannot be found.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)\n  id: DefineDynamicModule(System.String,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineDynamicModule(String, String)\n  nameWithType: AssemblyBuilder.DefineDynamicModule(String, String)\n  fullName: AssemblyBuilder.DefineDynamicModule(String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a persistable dynamic module with the given name that will be saved to the specified file. No symbol information is emitted.\n  remarks: \"To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.  \\n  \\n If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.  \\n  \\n In an assembly with only one module, that module should contain the assembly manifest.  \\n  \\n> [!NOTE]\\n>  To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"[Visual Basic, C#]  \\n  \\n The code example below demonstrates how to create a persistent dynamic module using `DefineDynamicModule`.  \\n  \\n [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#3)]\\n [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#3)]\\n [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#3)]\"\n  syntax:\n    content: public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the dynamic module. Must be less than 260 characters in length.\n    - id: fileName\n      type: System.String\n      description: The name of the file to which the dynamic module should be saved.\n    return:\n      type: System.Reflection.Emit.ModuleBuilder\n      description: A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> object representing the defined dynamic module.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>fileName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of <code>name</code> or <code>fileName</code> is zero.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is greater than or equal to 260.  \\n  \\n -or-  \\n  \\n <code>fileName</code> contains a path specification (a directory component, for example).  \\n  \\n -or-  \\n  \\n There is a conflict with the name of another file that belongs to this assembly.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This assembly has been previously saved.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This assembly was called on a dynamic assembly with <xref href=\"System.Reflection.Emit.AssemblyBuilderAccess.Run\"></xref> attribute.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.ExecutionEngineException\n    commentId: T:System.ExecutionEngineException\n    description: \"The assembly for default symbol writer cannot be loaded.  \\n  \\n -or-  \\n  \\n The type that implements the default symbol writer interface cannot be found.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)\n  id: DefineDynamicModule(System.String,System.String,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineDynamicModule(String, String, Boolean)\n  nameWithType: AssemblyBuilder.DefineDynamicModule(String, String, Boolean)\n  fullName: AssemblyBuilder.DefineDynamicModule(String, String, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.\n  remarks: \"To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.  \\n  \\n If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=fullName> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.  \\n  \\n In an assembly with only one module, that module should contain the assembly manifest.  \\n  \\n> [!NOTE]\\n>  To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>. Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method. The attribute must be applied to the dynamic assembly. It has no effect if applied to the module.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"[Visual Basic, C#]  \\n  \\n The code example below demonstrates how to create a persistent dynamic module with symbol emission using `DefineDynamicModule`.  \\n  \\n [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#4)]\\n [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#4)]\\n [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#4)]\"\n  syntax:\n    content: public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName, bool emitSymbolInfo);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the dynamic module. Must be less than 260 characters in length.\n    - id: fileName\n      type: System.String\n      description: The name of the file to which the dynamic module should be saved.\n    - id: emitSymbolInfo\n      type: System.Boolean\n      description: If `true`, symbolic information is written using the default symbol writer.\n    return:\n      type: System.Reflection.Emit.ModuleBuilder\n      description: A <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref> object representing the defined dynamic module.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>fileName</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of <code>name</code> or <code>fileName</code> is zero.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is greater than or equal to 260.  \\n  \\n -or-  \\n  \\n <code>fileName</code> contains a path specification (a directory component, for example).  \\n  \\n -or-  \\n  \\n There is a conflict with the name of another file that belongs to this assembly.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This assembly has been previously saved.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This assembly was called on a dynamic assembly with the <xref href=\"System.Reflection.Emit.AssemblyBuilderAccess.Run\"></xref> attribute.\n  - type: System.ExecutionEngineException\n    commentId: T:System.ExecutionEngineException\n    description: \"The assembly for default symbol writer cannot be loaded.  \\n  \\n -or-  \\n  \\n The type that implements the default symbol writer interface cannot be found.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)\n  id: DefineResource(System.String,System.String,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineResource(String, String, String)\n  nameWithType: AssemblyBuilder.DefineResource(String, String, String)\n  fullName: AssemblyBuilder.DefineResource(String, String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a standalone managed resource for this assembly with the default public resource attribute.\n  remarks: \"Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.  \\n  \\n `fileName` should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file.  \\n  \\n The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example uses the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> method to get a resource writer. The example uses the resource writer to add three resource strings.  \\n  \\n [!code-cpp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CPP/assemblybuilder_defineresource.cpp#1)]\\n [!code-csharp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CS/assemblybuilder_defineresource.cs#1)]\\n [!code-vb[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/VB/assemblybuilder_defineresource.vb#1)]\"\n  syntax:\n    content: public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName);\n    parameters:\n    - id: name\n      type: System.String\n      description: The logical name of the resource.\n    - id: description\n      type: System.String\n      description: A textual description of the resource.\n    - id: fileName\n      type: System.String\n      description: The physical file name (.resources file) to which the logical name is mapped. This should not include a path.\n    return:\n      type: System.Resources.IResourceWriter\n      description: A <xref href=\"System.Resources.ResourceWriter\"></xref> object for the specified resource.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> has been previously defined.  \\n  \\n -or-  \\n  \\n There is another file in the assembly named <code>fileName</code>.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is zero.  \\n  \\n -or-  \\n  \\n The length of <code>fileName</code> is zero.  \\n  \\n -or-  \\n  \\n <code>fileName</code> includes a path.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>fileName</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)\n  id: DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineResource(String, String, String, ResourceAttributes)\n  nameWithType: AssemblyBuilder.DefineResource(String, String, String, ResourceAttributes)\n  fullName: AssemblyBuilder.DefineResource(String, String, String, ResourceAttributes)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a standalone managed resource for this assembly. Attributes can be specified for the managed resource.\n  remarks: \"Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.  \\n  \\n `fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.  \\n  \\n The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName, System.Reflection.ResourceAttributes attribute);\n    parameters:\n    - id: name\n      type: System.String\n      description: The logical name of the resource.\n    - id: description\n      type: System.String\n      description: A textual description of the resource.\n    - id: fileName\n      type: System.String\n      description: The physical file name (.resources file) to which the logical name is mapped. This should not include a path.\n    - id: attribute\n      type: System.Reflection.ResourceAttributes\n      description: The resource attributes.\n    return:\n      type: System.Resources.IResourceWriter\n      description: A <xref href=\"System.Resources.ResourceWriter\"></xref> object for the specified resource.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> has been previously defined or if there is another file in the assembly named <code>fileName</code>.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is zero.  \\n  \\n -or-  \\n  \\n The length of <code>fileName</code> is zero.  \\n  \\n -or-  \\n  \\n <code>fileName</code> includes a path.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>fileName</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)\n  id: DefineUnmanagedResource(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineUnmanagedResource(String)\n  nameWithType: AssemblyBuilder.DefineUnmanagedResource(String)\n  fullName: AssemblyBuilder.DefineUnmanagedResource(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines an unmanaged resource file for this assembly given the name of the resource file.\n  remarks: \"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The example below demonstrates a call to `DefineUnmanagedResource`, passing an external resource file.  \\n  \\n [!code-cpp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CPP/assemblybuilder_defineunmanagedresource.cpp#3)]\\n [!code-csharp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CS/assemblybuilder_defineunmanagedresource.cs#3)]\\n [!code-vb[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/VB/assemblybuilder_defineunmanagedresource.vb#3)]\"\n  syntax:\n    content: public void DefineUnmanagedResource (string resourceFileName);\n    parameters:\n    - id: resourceFileName\n      type: System.String\n      description: The name of the resource file.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"An unmanaged resource was previously defined.  \\n  \\n -or-  \\n  \\n The file <code>resourceFileName</code> is not readable.  \\n  \\n -or-  \\n  \\n <code>resourceFileName</code> is the empty string (\\\"\\\").\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>resourceFileName</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"<code>resourceFileName</code> is not found.  \\n  \\n -or-  \\n  \\n <code>resourceFileName</code> is a directory.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])\n  id: DefineUnmanagedResource(System.Byte[])\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineUnmanagedResource(Byte[])\n  nameWithType: AssemblyBuilder.DefineUnmanagedResource(Byte[])\n  fullName: AssemblyBuilder.DefineUnmanagedResource(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines an unmanaged resource for this assembly as an opaque blob of bytes.\n  remarks: An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).\n  example:\n  - \"The following code sample creates and attaches an array of bytes representing an unmanaged resource to a dynamic assembly, using `DefineUnmanagedResource`.  \\n  \\n [!code-cpp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CPP/assemblybuilder_defineunmanagedresource2.cpp#1)]\\n [!code-csharp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CS/assemblybuilder_defineunmanagedresource2.cs#1)]\\n [!code-vb[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/VB/assemblybuilder_defineunmanagedresource2.vb#1)]\"\n  syntax:\n    content: public void DefineUnmanagedResource (byte[] resource);\n    parameters:\n    - id: resource\n      type: System.Byte[]\n      description: The opaque blob of bytes representing the unmanaged resource.\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An unmanaged resource was previously defined.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>resource</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource\n  id: DefineVersionInfoResource\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineVersionInfoResource()\n  nameWithType: AssemblyBuilder.DefineVersionInfoResource()\n  fullName: AssemblyBuilder.DefineVersionInfoResource()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.\n  remarks: \"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).  \\n  \\n Empty argument strings get written as a single space. Spaces are substituted for null characters in the argument strings.  \\n  \\n The information is inferred from the `AssemblyName` object used to define this dynamic assembly. This assembly's custom attributes override information specified in the `AssemblyName` object.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The example below illustrates the usage of `DefineVersionInfoResource`.  \\n  \\n [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]\\n [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]\\n [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]\"\n  syntax:\n    content: public void DefineVersionInfoResource ();\n    parameters: []\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"An unmanaged version information resource was previously defined.  \\n  \\n -or-  \\n  \\n The unmanaged version information is too large to persist.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\n  id: DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: DefineVersionInfoResource(String, String, String, String, String)\n  nameWithType: AssemblyBuilder.DefineVersionInfoResource(String, String, String, String, String)\n  fullName: AssemblyBuilder.DefineVersionInfoResource(String, String, String, String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines an unmanaged version information resource for this assembly with the given specifications.\n  remarks: \"An assembly can be associated with only one unmanaged resource. This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException. Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK).  \\n  \\n Empty argument strings get written as a single space. Spaces are substituted for null characters in the argument strings.  \\n  \\n The structure of the version resource includes data that identifies the version, language, and distribution of the file. Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The example below illustrates the usage of `DefineVersionInfoResource`.  \\n  \\n [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]\\n [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]\\n [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]\"\n  syntax:\n    content: public void DefineVersionInfoResource (string product, string productVersion, string company, string copyright, string trademark);\n    parameters:\n    - id: product\n      type: System.String\n      description: The name of the product with which this assembly is distributed.\n    - id: productVersion\n      type: System.String\n      description: The version of the product with which this assembly is distributed.\n    - id: company\n      type: System.String\n      description: The name of the company that produced this assembly.\n    - id: copyright\n      type: System.String\n      description: Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly. This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on. In English, this string should be in the format \"Copyright Microsoft Corp. 1990-2001\".\n    - id: trademark\n      type: System.String\n      description: Describes all trademarks and registered trademarks that apply to this assembly. This should include the full text of all notices, legal symbols, trademark numbers, and so on. In English, this string should be in the format \"Windows is a trademark of Microsoft Corporation\".\n  overload: System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"An unmanaged version information resource was previously defined.  \\n  \\n -or-  \\n  \\n The unmanaged version information is too large to persist.\"\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.EntryPoint\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.EntryPoint\n  id: EntryPoint\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: EntryPoint\n  nameWithType: AssemblyBuilder.EntryPoint\n  fullName: AssemblyBuilder.EntryPoint\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the entry point of this assembly.\n  syntax:\n    content: public override System.Reflection.MethodInfo EntryPoint { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: The entry point of this assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.EntryPoint*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: AssemblyBuilder.Equals(Object)\n  fullName: AssemblyBuilder.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns a value that indicates whether this instance is equal to the specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with this instance, or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.'\n  overload: System.Reflection.Emit.AssemblyBuilder.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.Evidence\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.Evidence\n  id: Evidence\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: Evidence\n  nameWithType: AssemblyBuilder.Evidence\n  fullName: AssemblyBuilder.Evidence\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the evidence for this assembly.\n  syntax:\n    content: public override System.Security.Policy.Evidence Evidence { get; }\n    return:\n      type: System.Security.Policy.Evidence\n      description: The evidence for this assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.Evidence*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.FullName\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.FullName\n  id: FullName\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: FullName\n  nameWithType: AssemblyBuilder.FullName\n  fullName: AssemblyBuilder.FullName\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the display name of the current dynamic assembly.\n  remarks: See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.\n  syntax:\n    content: public override string FullName { get; }\n    return:\n      type: System.String\n      description: The display name of the dynamic assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.FullName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: AssemblyBuilder.GetCustomAttributes(Boolean)\n  fullName: AssemblyBuilder.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>.\n  syntax:\n    content: public override object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: This argument is ignored for objects of this type.\n    return:\n      type: System.Object[]\n      description: An array that contains the custom attributes; the array is empty if there are no attributes.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: AssemblyBuilder.GetCustomAttributes(Type, Boolean)\n  fullName: AssemblyBuilder.GetCustomAttributes(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>, and that derive from a specified attribute type.\n  syntax:\n    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The base type from which attributes derive.\n    - id: inherit\n      type: System.Boolean\n      description: This argument is ignored for objects of this type.\n    return:\n      type: System.Object[]\n      description: An array that contains the custom attributes that are derived at any level from <code>attributeType</code>; the array is empty if there are no such attributes.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>attributeType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime. For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData\n  id: GetCustomAttributesData\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributesData()\n  nameWithType: AssemblyBuilder.GetCustomAttributesData()\n  fullName: AssemblyBuilder.GetCustomAttributesData()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects that contain information about the attributes that have been applied to the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>.\n  remarks: Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.\n  syntax:\n    content: public override System.Collections.Generic.IList<System.Reflection.CustomAttributeData> GetCustomAttributesData ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n      description: A generic list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects representing data about the attributes that have been applied to the current module.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)\n  id: GetDynamicModule(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetDynamicModule(String)\n  nameWithType: AssemblyBuilder.GetDynamicModule(String)\n  fullName: AssemblyBuilder.GetDynamicModule(String)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the dynamic module with the specified name.\n  syntax:\n    content: public System.Reflection.Emit.ModuleBuilder GetDynamicModule (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the requested dynamic module.\n    return:\n      type: System.Reflection.Emit.ModuleBuilder\n      description: A ModuleBuilder object representing the requested dynamic module.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetDynamicModule*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The length of <code>name</code> is zero.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetExportedTypes\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetExportedTypes\n  id: GetExportedTypes\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetExportedTypes()\n  nameWithType: AssemblyBuilder.GetExportedTypes()\n  fullName: AssemblyBuilder.GetExportedTypes()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the exported types defined in this assembly.\n  syntax:\n    content: public override Type[] GetExportedTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> containing the exported types defined in this assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetExportedTypes*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not implemented.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)\n  id: GetFile(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetFile(String)\n  nameWithType: AssemblyBuilder.GetFile(String)\n  fullName: AssemblyBuilder.GetFile(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a <xref href=\"System.IO.FileStream\"></xref> for the specified file in the file table of the manifest of this assembly.\n  remarks: '`name` should not include the path to the file.'\n  syntax:\n    content: public override System.IO.FileStream GetFile (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the specified file.\n    return:\n      type: System.IO.FileStream\n      description: A <xref href=\"System.IO.FileStream\"></xref> for the specified file, or `null`, if the file is not found.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetFile*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)\n  id: GetFiles(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetFiles(Boolean)\n  nameWithType: AssemblyBuilder.GetFiles(Boolean)\n  fullName: AssemblyBuilder.GetFiles(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.\n  syntax:\n    content: public override System.IO.FileStream[] GetFiles (bool getResourceModules);\n    parameters:\n    - id: getResourceModules\n      type: System.Boolean\n      description: '`true` to include resource modules; otherwise, `false`.'\n    return:\n      type: System.IO.FileStream[]\n      description: An array of <xref href=\"System.IO.FileStream\"></xref> objects.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetFiles*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetHashCode\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: AssemblyBuilder.GetHashCode()\n  fullName: AssemblyBuilder.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)\n  id: GetLoadedModules(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetLoadedModules(Boolean)\n  nameWithType: AssemblyBuilder.GetLoadedModules(Boolean)\n  fullName: AssemblyBuilder.GetLoadedModules(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.\n  syntax:\n    content: public override System.Reflection.Module[] GetLoadedModules (bool getResourceModules);\n    parameters:\n    - id: getResourceModules\n      type: System.Boolean\n      description: '`true` to include resource modules; otherwise, `false`.'\n    return:\n      type: System.Reflection.Module[]\n      description: The loaded modules that are part of this assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetLoadedModules*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)\n  id: GetManifestResourceInfo(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetManifestResourceInfo(String)\n  nameWithType: AssemblyBuilder.GetManifestResourceInfo(String)\n  fullName: AssemblyBuilder.GetManifestResourceInfo(String)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns information about how the given resource has been persisted.\n  syntax:\n    content: public override System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);\n    parameters:\n    - id: resourceName\n      type: System.String\n      description: The name of the resource.\n    return:\n      type: System.Reflection.ManifestResourceInfo\n      description: <xref href=\"System.Reflection.ManifestResourceInfo\"></xref> populated with information about the resource's topology, or `null` if the resource is not found.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames\n  id: GetManifestResourceNames\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetManifestResourceNames()\n  nameWithType: AssemblyBuilder.GetManifestResourceNames()\n  fullName: AssemblyBuilder.GetManifestResourceNames()\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Loads the specified manifest resource from this assembly.\n  syntax:\n    content: public override string[] GetManifestResourceNames ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: An array of type `String` containing the names of all the resources.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not supported on a dynamic assembly. To get the manifest resource names, use <xref href=\"System.Reflection.Assembly.GetManifestResourceNames\"></xref>.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)\n  id: GetManifestResourceStream(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetManifestResourceStream(String)\n  nameWithType: AssemblyBuilder.GetManifestResourceStream(String)\n  fullName: AssemblyBuilder.GetManifestResourceStream(String)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Loads the specified manifest resource from this assembly.\n  syntax:\n    content: public override System.IO.Stream GetManifestResourceStream (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the manifest resource being requested.\n    return:\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> representing this manifest resource.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)\n  id: GetManifestResourceStream(System.Type,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetManifestResourceStream(Type, String)\n  nameWithType: AssemblyBuilder.GetManifestResourceStream(Type, String)\n  fullName: AssemblyBuilder.GetManifestResourceStream(Type, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.\n  remarks: The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource.\n  example:\n  - If the full name of `type` is \"MyNameSpace.MyClasses\" and `name` is \"Dot\", `GetManifestResourceStream` will search for a resource named MyNameSpace.Dot.\n  syntax:\n    content: public override System.IO.Stream GetManifestResourceStream (Type type, string name);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type whose namespace is used to scope the manifest resource name.\n    - id: name\n      type: System.String\n      description: The name of the manifest resource being requested.\n    return:\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> representing this manifest resource.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)\n  id: GetModule(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetModule(String)\n  nameWithType: AssemblyBuilder.GetModule(String)\n  fullName: AssemblyBuilder.GetModule(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the specified module in this assembly.\n  syntax:\n    content: public override System.Reflection.Module GetModule (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the requested module.\n    return:\n      type: System.Reflection.Module\n      description: The module being requested, or `null` if the module is not found.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetModule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)\n  id: GetModules(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetModules(Boolean)\n  nameWithType: AssemblyBuilder.GetModules(Boolean)\n  fullName: AssemblyBuilder.GetModules(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets all the modules that are part of this assembly, and optionally includes resource modules.\n  syntax:\n    content: public override System.Reflection.Module[] GetModules (bool getResourceModules);\n    parameters:\n    - id: getResourceModules\n      type: System.Boolean\n      description: '`true` to include resource modules; otherwise, `false`.'\n    return:\n      type: System.Reflection.Module[]\n      description: The modules that are part of this assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetModules*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)\n  id: GetName(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetName(Boolean)\n  nameWithType: AssemblyBuilder.GetName(Boolean)\n  fullName: AssemblyBuilder.GetName(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the <xref href=\"System.Reflection.AssemblyName\"></xref> that was specified when the current dynamic assembly was created, and sets the code base as specified.\n  syntax:\n    content: public override System.Reflection.AssemblyName GetName (bool copiedName);\n    parameters:\n    - id: copiedName\n      type: System.Boolean\n      description: '`true` to set the code base to the location of the assembly after it is shadow-copied; `false` to set the code base to the original location.'\n    return:\n      type: System.Reflection.AssemblyName\n      description: The name of the dynamic assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies\n  id: GetReferencedAssemblies\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetReferencedAssemblies()\n  nameWithType: AssemblyBuilder.GetReferencedAssemblies()\n  fullName: AssemblyBuilder.GetReferencedAssemblies()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets an incomplete list of <xref href=\"System.Reflection.AssemblyName\"></xref> objects for the assemblies that are referenced by this <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>.\n  remarks: \"This method does not return a complete list of referenced assemblies. For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method. However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.  \\n  \\n To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=fullName> method.\"\n  syntax:\n    content: public override System.Reflection.AssemblyName[] GetReferencedAssemblies ();\n    parameters: []\n    return:\n      type: System.Reflection.AssemblyName[]\n      description: An array of assembly names for the referenced assemblies. This array is not a complete list.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  id: GetSatelliteAssembly(System.Globalization.CultureInfo)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetSatelliteAssembly(CultureInfo)\n  nameWithType: AssemblyBuilder.GetSatelliteAssembly(CultureInfo)\n  fullName: AssemblyBuilder.GetSatelliteAssembly(CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the satellite assembly for the specified culture.\n  remarks: \"Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.  \\n  \\n Call this method to use your current assembly version.\"\n  syntax:\n    content: public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);\n    parameters:\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The specified culture.\n    return:\n      type: System.Reflection.Assembly\n      description: The specified satellite assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>culture</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The assembly cannot be found.\n  - type: System.IO.FileLoadException\n    commentId: T:System.IO.FileLoadException\n    description: The satellite assembly with a matching file name was found, but the `CultureInfo` did not match the one specified.\n  - type: System.BadImageFormatException\n    commentId: T:System.BadImageFormatException\n    description: The satellite assembly is not a valid assembly.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  id: GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetSatelliteAssembly(CultureInfo, Version)\n  nameWithType: AssemblyBuilder.GetSatelliteAssembly(CultureInfo, Version)\n  fullName: AssemblyBuilder.GetSatelliteAssembly(CultureInfo, Version)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the specified version of the satellite assembly for the specified culture.\n  remarks: \"Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.  \\n  \\n Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.\"\n  syntax:\n    content: public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);\n    parameters:\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: The specified culture.\n    - id: version\n      type: System.Version\n      description: The version of the satellite assembly.\n    return:\n      type: System.Reflection.Assembly\n      description: The specified satellite assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>culture</code> is `null`.\n  - type: System.IO.FileLoadException\n    commentId: T:System.IO.FileLoadException\n    description: The satellite assembly with a matching file name was found, but the `CultureInfo` or the version did not match the one specified.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The assembly cannot be found.\n  - type: System.BadImageFormatException\n    commentId: T:System.BadImageFormatException\n    description: The satellite assembly is not a valid assembly.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)\n  id: GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GetType(String, Boolean, Boolean)\n  nameWithType: AssemblyBuilder.GetType(String, Boolean, Boolean)\n  fullName: AssemblyBuilder.GetType(String, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the specified type from the types that have been defined and created in the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref>.\n  remarks: A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.\n  syntax:\n    content: public override Type GetType (string name, bool throwOnError, bool ignoreCase);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the type to search for.\n    - id: throwOnError\n      type: System.Boolean\n      description: '`true` to throw an exception if the type is not found; otherwise, `false`.'\n    - id: ignoreCase\n      type: System.Boolean\n      description: '`true` to ignore the case of the type name when searching; otherwise, `false`.'\n    return:\n      type: System.Type\n      description: The specified type, or `null` if the type is not found or has not been created yet.\n  overload: System.Reflection.Emit.AssemblyBuilder.GetType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache\n  id: GlobalAssemblyCache\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: GlobalAssemblyCache\n  nameWithType: AssemblyBuilder.GlobalAssemblyCache\n  fullName: AssemblyBuilder.GlobalAssemblyCache\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a value that indicates whether the assembly was loaded from the global assembly cache.\n  remarks: <xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.\n  syntax:\n    content: public override bool GlobalAssemblyCache { get; }\n    return:\n      type: System.Boolean\n      description: Always `false`.\n  overload: System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.HostContext\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.HostContext\n  id: HostContext\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: HostContext\n  nameWithType: AssemblyBuilder.HostContext\n  fullName: AssemblyBuilder.HostContext\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the host context where the dynamic assembly is being created.\n  syntax:\n    content: public override long HostContext { get; }\n    return:\n      type: System.Int64\n      description: A value that indicates the host context where the dynamic assembly is being created.\n  overload: System.Reflection.Emit.AssemblyBuilder.HostContext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion\n  id: ImageRuntimeVersion\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: ImageRuntimeVersion\n  nameWithType: AssemblyBuilder.ImageRuntimeVersion\n  fullName: AssemblyBuilder.ImageRuntimeVersion\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the version of the common language runtime that will be saved in the file containing the manifest.\n  syntax:\n    content: public override string ImageRuntimeVersion { get; }\n    return:\n      type: System.String\n      description: A string representing the common language runtime version.\n  overload: System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: IsDefined(Type, Boolean)\n  nameWithType: AssemblyBuilder.IsDefined(Type, Boolean)\n  fullName: AssemblyBuilder.IsDefined(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.\n  syntax:\n    content: public override bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The type of attribute to test for.\n    - id: inherit\n      type: System.Boolean\n      description: This argument is ignored for objects of this type.\n    return:\n      type: System.Boolean\n      description: '`true` if one or more instances of <code>attributeType</code> is applied to this dynamic assembly; otherwise, `false`.'\n  overload: System.Reflection.Emit.AssemblyBuilder.IsDefined*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.IsDynamic\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.IsDynamic\n  id: IsDynamic\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: IsDynamic\n  nameWithType: AssemblyBuilder.IsDynamic\n  fullName: AssemblyBuilder.IsDynamic\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a value that indicates that the current assembly is a dynamic assembly.\n  remarks: An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly.\n  syntax:\n    content: public override bool IsDynamic { get; }\n    return:\n      type: System.Boolean\n      description: Always `true`.\n  overload: System.Reflection.Emit.AssemblyBuilder.IsDynamic*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.Location\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.Location\n  id: Location\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: Location\n  nameWithType: AssemblyBuilder.Location\n  fullName: AssemblyBuilder.Location\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.\n  syntax:\n    content: public override string Location { get; }\n    return:\n      type: System.String\n      description: The location of the loaded file that contains the manifest. If the loaded file has been shadow-copied, the `Location` is that of the file before being shadow-copied.\n  overload: System.Reflection.Emit.AssemblyBuilder.Location*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: This method is not currently supported.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.ManifestModule\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.ManifestModule\n  id: ManifestModule\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: ManifestModule\n  nameWithType: AssemblyBuilder.ManifestModule\n  fullName: AssemblyBuilder.ManifestModule\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the module in the current <xref href=\"System.Reflection.Emit.AssemblyBuilder\"></xref> that contains the assembly manifest.\n  syntax:\n    content: public override System.Reflection.Module ManifestModule { get; }\n    return:\n      type: System.Reflection.Module\n      description: The manifest module.\n  overload: System.Reflection.Emit.AssemblyBuilder.ManifestModule*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.Modules\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.Modules\n  id: Modules\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: Modules\n  nameWithType: AssemblyBuilder.Modules\n  fullName: AssemblyBuilder.Modules\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override System.Collections.Generic.IEnumerable<System.Reflection.Module> Modules { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Module}\n      description: ''\n  overload: System.Reflection.Emit.AssemblyBuilder.Modules*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.PermissionSet\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.PermissionSet\n  id: PermissionSet\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: PermissionSet\n  nameWithType: AssemblyBuilder.PermissionSet\n  fullName: AssemblyBuilder.PermissionSet\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the grant set of the current dynamic assembly.\n  remarks: <xref:System.Security.PermissionSet> objects can contain sensitive information such as paths. Therefore, full trust is required to access these objects.\n  syntax:\n    content: >-\n      [get: System.Security.SecurityCritical]\n\n      public override System.Security.PermissionSet PermissionSet { get; }\n    return:\n      type: System.Security.PermissionSet\n      description: The grant set of the current dynamic assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.PermissionSet*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecurityCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.ReflectionOnly\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.ReflectionOnly\n  id: ReflectionOnly\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: ReflectionOnly\n  nameWithType: AssemblyBuilder.ReflectionOnly\n  fullName: AssemblyBuilder.ReflectionOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a value indicating whether the dynamic assembly is in the reflection-only context.\n  remarks: \"To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess?displayProperty=fullName> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>. If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.  \\n  \\n> [!NOTE]\\n>  After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=fullName> method to load the completed assembly into the reflection-only context. However, the assembly can no longer be modified.\"\n  syntax:\n    content: public override bool ReflectionOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dynamic assembly is in the reflection-only context; otherwise, `false`.'\n  overload: System.Reflection.Emit.AssemblyBuilder.ReflectionOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.Save(System.String)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.Save(System.String)\n  id: Save(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: Save(String)\n  nameWithType: AssemblyBuilder.Save(String)\n  fullName: AssemblyBuilder.Save(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Saves this dynamic assembly to disk.\n  remarks: \"This method saves all non-transient dynamic modules defined in this dynamic assembly. Transient dynamic modules are not saved. The assembly file name can be the same as the name of one of the modules. If so, the assembly manifest is stored within that module. `assemblyFileName` can be different from the names of all of the modules contained within the assembly. If so, the assembly file contains only the assembly manifest.  \\n  \\n For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.  \\n  \\n The `assemblyFileName` needs to be a simple file name without a drive or directory component. To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.  \\n  \\n In the .NET Framework version 2.0, this overload of the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method is equivalent to calling the <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> method overload with <xref:System.Reflection.PortableExecutableKinds.ILOnly> for the `portableExecutableKind` parameter and <xref:System.Reflection.ImageFileMachine.I386> for the `imageFileMachine` parameter.\"\n  example:\n  - \"The following code sample creates a dynamic assembly and then persists it to a local disk using `Save`.  \\n  \\n [!code-cpp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CPP/source.cpp#1)]\\n [!code-csharp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CS/source.cs#1)]\\n [!code-vb[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Save (string assemblyFileName);\n    parameters:\n    - id: assemblyFileName\n      type: System.String\n      description: The file name of the assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.Save*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of <code>assemblyFileName</code> is 0.  \\n  \\n -or-  \\n  \\n There are two or more modules resource files in the assembly with the same name.  \\n  \\n -or-  \\n  \\n The target directory of the assembly is invalid.  \\n  \\n -or-  \\n  \\n <code>assemblyFileName</code> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly.  \\n  \\n -or-  \\n  \\n The `CultureInfo` string in <xref href=\\\"System.Reflection.AssemblyCultureAttribute\\\"></xref> is not a valid string and <xref href=\\\"System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\\\"></xref> was called prior to calling this method.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assemblyFileName</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"This assembly has been saved before.  \\n  \\n -or-  \\n  \\n This assembly has access `Run`<xref href=\\\"System.Reflection.Emit.AssemblyBuilderAccess\\\"></xref>\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An output error occurs during the save.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called for any of the types in the modules of the assembly to be written to disk.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)\n  id: Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: Save(String, PortableExecutableKinds, ImageFileMachine)\n  nameWithType: AssemblyBuilder.Save(String, PortableExecutableKinds, ImageFileMachine)\n  fullName: AssemblyBuilder.Save(String, PortableExecutableKinds, ImageFileMachine)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.\n  remarks: \"If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`. No exception is thrown. For example, if you specify <xref:System.Reflection.ImageFileMachine?displayProperty=fullName> with <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName>, <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName> is ignored.  \\n  \\n This method saves all non-transient dynamic modules defined in this dynamic assembly. Transient dynamic modules are not saved. The assembly file name can be the same as the name of one of the module. If so, the assembly manifest is stored within that module. `assemblyFileName` can be different from the names of all of the modules contained within the assembly. If so, the assembly file contains only the assembly manifest.  \\n  \\n For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.  \\n  \\n The `assemblyFileName` needs to be a simple file name without a drive or directory component. To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.\"\n  syntax:\n    content: public void Save (string assemblyFileName, System.Reflection.PortableExecutableKinds portableExecutableKind, System.Reflection.ImageFileMachine imageFileMachine);\n    parameters:\n    - id: assemblyFileName\n      type: System.String\n      description: The file name of the assembly.\n    - id: portableExecutableKind\n      type: System.Reflection.PortableExecutableKinds\n      description: A bitwise combination of the <xref href=\"System.Reflection.PortableExecutableKinds\"></xref> values that specifies the nature of the code.\n    - id: imageFileMachine\n      type: System.Reflection.ImageFileMachine\n      description: One of the <xref href=\"System.Reflection.ImageFileMachine\"></xref> values that specifies the target platform.\n  overload: System.Reflection.Emit.AssemblyBuilder.Save*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of <code>assemblyFileName</code> is 0.  \\n  \\n -or-  \\n  \\n There are two or more modules resource files in the assembly with the same name.  \\n  \\n -or-  \\n  \\n The target directory of the assembly is invalid.  \\n  \\n -or-  \\n  \\n <code>assemblyFileName</code> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly.  \\n  \\n -or-  \\n  \\n The `CultureInfo` string in <xref href=\\\"System.Reflection.AssemblyCultureAttribute\\\"></xref> is not a valid string and <xref href=\\\"System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\\\"></xref> was called prior to calling this method.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assemblyFileName</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"This assembly has been saved before.  \\n  \\n -or-  \\n  \\n This assembly has access `Run`<xref href=\\\"System.Reflection.Emit.AssemblyBuilderAccess\\\"></xref>\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An output error occurs during the save.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref> has not been called for any of the types in the modules of the assembly to be written to disk.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet\n  commentId: P:System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet\n  id: SecurityRuleSet\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: SecurityRuleSet\n  nameWithType: AssemblyBuilder.SecurityRuleSet\n  fullName: AssemblyBuilder.SecurityRuleSet\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.\n  remarks: The [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] always enforces level 2 transparency (<xref:System.Security.SecurityRuleSet?displayProperty=fullName>) for the dynamic assemblies it generates.\n  syntax:\n    content: public override System.Security.SecurityRuleSet SecurityRuleSet { get; }\n    return:\n      type: System.Security.SecurityRuleSet\n      description: The security rule set that the CLR enforces for this dynamic assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: AssemblyBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: AssemblyBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Set a custom attribute on this assembly using a custom attribute builder.\n  remarks: \"> [!NOTE]\\n>  <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes. Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following code sample illustrates the use of `SetCustomAttribute` within <xref:System.Reflection.Emit.AssemblyBuilder>, using a <xref:System.Reflection.Emit.CustomAttributeBuilder>.  \\n  \\n [!code-cpp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CPP/assemblybuilder_setcustomattribute1.cpp#1)]\\n [!code-csharp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CS/assemblybuilder_setcustomattribute1.cs#1)]\\n [!code-vb[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/VB/assemblybuilder_setcustomattribute1.vb#1)]\"\n  syntax:\n    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: An instance of a helper class to define the custom attribute.\n  overload: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>con</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: AssemblyBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: AssemblyBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Set a custom attribute on this assembly using a specified custom attribute blob.\n  remarks: \"See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.  \\n  \\n `RuntimeConstructorInfo` is a special type generated by the system. It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`.  \\n  \\n> [!NOTE]\\n>  <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes. Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following code sample illustrates the use of `SetCustomAttribute` to attach a custom attribute to a dynamically generated assembly.  \\n  \\n [!code-cpp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CPP/assemblybuilder_setcustomattribute2.cpp#1)]\\n [!code-csharp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CS/assemblybuilder_setcustomattribute2.cs#1)]\\n [!code-vb[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/VB/assemblybuilder_setcustomattribute2.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: The constructor for the custom attribute.\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: A byte blob representing the attributes.\n  overload: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>con</code> or <code>binaryAttribute</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>con</code> is not a `RuntimeConstructorInfo` object.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)\n  id: SetEntryPoint(System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: SetEntryPoint(MethodInfo)\n  nameWithType: AssemblyBuilder.SetEntryPoint(MethodInfo)\n  fullName: AssemblyBuilder.SetEntryPoint(MethodInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets the entry point for this dynamic assembly, assuming that a console application is being built.\n  syntax:\n    content: public void SetEntryPoint (System.Reflection.MethodInfo entryMethod);\n    parameters:\n    - id: entryMethod\n      type: System.Reflection.MethodInfo\n      description: A reference to the method that represents the entry point for this dynamic assembly.\n  overload: System.Reflection.Emit.AssemblyBuilder.SetEntryPoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entryMethod</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>entryMethod</code> is not contained within this assembly.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)\n  id: SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: SetEntryPoint(MethodInfo, PEFileKinds)\n  nameWithType: AssemblyBuilder.SetEntryPoint(MethodInfo, PEFileKinds)\n  fullName: AssemblyBuilder.SetEntryPoint(MethodInfo, PEFileKinds)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\n  syntax:\n    content: public void SetEntryPoint (System.Reflection.MethodInfo entryMethod, System.Reflection.Emit.PEFileKinds fileKind);\n    parameters:\n    - id: entryMethod\n      type: System.Reflection.MethodInfo\n      description: A reference to the method that represents the entry point for this dynamic assembly.\n    - id: fileKind\n      type: System.Reflection.Emit.PEFileKinds\n      description: The type of the assembly executable being built.\n  overload: System.Reflection.Emit.AssemblyBuilder.SetEntryPoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entryMethod</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <code>entryMethod</code> is not contained within this assembly.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: _AssemblyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: AssemblyBuilder._AssemblyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: AssemblyBuilder._AssemblyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Maps a set of names to a corresponding set of dispatch identifiers.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.\n  syntax:\n    content: void _AssemblyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array which receives the IDs corresponding to the names.\n  overload: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: _AssemblyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: AssemblyBuilder._AssemblyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: AssemblyBuilder._AssemblyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the type information for an object, which can then be used to get the type information for an interface.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.\n  syntax:\n    content: void _AssemblyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Receives a pointer to the requested type information object.\n  overload: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: _AssemblyBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: AssemblyBuilder._AssemblyBuilder.GetTypeInfoCount(UInt32)\n  fullName: AssemblyBuilder._AssemblyBuilder.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Retrieves the number of type information interfaces that an object provides (either 0 or 1).\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.\n  syntax:\n    content: void _AssemblyBuilder.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Points to a location that receives the number of type information interfaces provided by the object.\n  overload: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.AssemblyBuilder\n  langs:\n  - csharp\n  name: _AssemblyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: AssemblyBuilder._AssemblyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: AssemblyBuilder._AssemblyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Provides access to properties and methods exposed by an object.\n  remarks: This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.\n  syntax:\n    content: void _AssemblyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Identifies the member.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ExecutionEngineException\n  parent: System\n  isExternal: false\n  name: ExecutionEngineException\n  nameWithType: ExecutionEngineException\n  fullName: System.ExecutionEngineException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IO.FileLoadException\n  parent: System.IO\n  isExternal: false\n  name: FileLoadException\n  nameWithType: FileLoadException\n  fullName: System.IO.FileLoadException\n- uid: System.BadImageFormatException\n  parent: System\n  isExternal: false\n  name: BadImageFormatException\n  nameWithType: BadImageFormatException\n  fullName: System.BadImageFormatException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.Reflection.Emit.AssemblyBuilder.#ctor\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: AssemblyBuilder()\n  nameWithType: AssemblyBuilder.AssemblyBuilder()\n  fullName: AssemblyBuilder.AssemblyBuilder()\n- uid: System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: AddResourceFile(String, String)\n  nameWithType: AssemblyBuilder.AddResourceFile(String, String)\n  fullName: AssemblyBuilder.AddResourceFile(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: AddResourceFile(String, String, ResourceAttributes)\n  nameWithType: AssemblyBuilder.AddResourceFile(String, String, ResourceAttributes)\n  fullName: AssemblyBuilder.AddResourceFile(String, String, ResourceAttributes)\n- uid: System.Reflection.ResourceAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: ResourceAttributes\n  nameWithType: ResourceAttributes\n  fullName: System.Reflection.ResourceAttributes\n- uid: System.Reflection.Emit.AssemblyBuilder.CodeBase\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: CodeBase\n  nameWithType: AssemblyBuilder.CodeBase\n  fullName: AssemblyBuilder.CodeBase\n- uid: System.Reflection.Emit.AssemblyBuilder.DefinedTypes\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefinedTypes\n  nameWithType: AssemblyBuilder.DefinedTypes\n  fullName: AssemblyBuilder.DefinedTypes\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Reflection.TypeInfo\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TypeInfo>\n  nameWithType: IEnumerable<TypeInfo>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.TypeInfo>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.TypeInfo\n    name: TypeInfo\n    nameWithType: TypeInfo\n    fullName: System.Reflection.TypeInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)\n  nameWithType: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)\n  fullName: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)\n  nameWithType: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)\n  fullName: AssemblyBuilder.DefineDynamicAssembly(AssemblyName, AssemblyBuilderAccess, IEnumerable<CustomAttributeBuilder>)\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  name: CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<CustomAttributeBuilder>\n  nameWithType: IEnumerable<CustomAttributeBuilder>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.Emit.CustomAttributeBuilder\n    name: CustomAttributeBuilder\n    nameWithType: CustomAttributeBuilder\n    fullName: System.Reflection.Emit.CustomAttributeBuilder\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineDynamicModule(String)\n  nameWithType: AssemblyBuilder.DefineDynamicModule(String)\n  fullName: AssemblyBuilder.DefineDynamicModule(String)\n- uid: System.Reflection.Emit.ModuleBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ModuleBuilder\n  nameWithType: ModuleBuilder\n  fullName: System.Reflection.Emit.ModuleBuilder\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineDynamicModule(String, Boolean)\n  nameWithType: AssemblyBuilder.DefineDynamicModule(String, Boolean)\n  fullName: AssemblyBuilder.DefineDynamicModule(String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineDynamicModule(String, String)\n  nameWithType: AssemblyBuilder.DefineDynamicModule(String, String)\n  fullName: AssemblyBuilder.DefineDynamicModule(String, String)\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineDynamicModule(String, String, Boolean)\n  nameWithType: AssemblyBuilder.DefineDynamicModule(String, String, Boolean)\n  fullName: AssemblyBuilder.DefineDynamicModule(String, String, Boolean)\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineResource(String, String, String)\n  nameWithType: AssemblyBuilder.DefineResource(String, String, String)\n  fullName: AssemblyBuilder.DefineResource(String, String, String)\n- uid: System.Resources.IResourceWriter\n  parent: System.Resources\n  isExternal: false\n  name: IResourceWriter\n  nameWithType: IResourceWriter\n  fullName: System.Resources.IResourceWriter\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineResource(String, String, String, ResourceAttributes)\n  nameWithType: AssemblyBuilder.DefineResource(String, String, String, ResourceAttributes)\n  fullName: AssemblyBuilder.DefineResource(String, String, String, ResourceAttributes)\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineUnmanagedResource(String)\n  nameWithType: AssemblyBuilder.DefineUnmanagedResource(String)\n  fullName: AssemblyBuilder.DefineUnmanagedResource(String)\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineUnmanagedResource(Byte[])\n  nameWithType: AssemblyBuilder.DefineUnmanagedResource(Byte[])\n  fullName: AssemblyBuilder.DefineUnmanagedResource(Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineVersionInfoResource()\n  nameWithType: AssemblyBuilder.DefineVersionInfoResource()\n  fullName: AssemblyBuilder.DefineVersionInfoResource()\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineVersionInfoResource(String, String, String, String, String)\n  nameWithType: AssemblyBuilder.DefineVersionInfoResource(String, String, String, String, String)\n  fullName: AssemblyBuilder.DefineVersionInfoResource(String, String, String, String, String)\n- uid: System.Reflection.Emit.AssemblyBuilder.EntryPoint\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: EntryPoint\n  nameWithType: AssemblyBuilder.EntryPoint\n  fullName: AssemblyBuilder.EntryPoint\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: AssemblyBuilder.Equals(Object)\n  fullName: AssemblyBuilder.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.AssemblyBuilder.Evidence\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Evidence\n  nameWithType: AssemblyBuilder.Evidence\n  fullName: AssemblyBuilder.Evidence\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Reflection.Emit.AssemblyBuilder.FullName\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: FullName\n  nameWithType: AssemblyBuilder.FullName\n  fullName: AssemblyBuilder.FullName\n- uid: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: AssemblyBuilder.GetCustomAttributes(Boolean)\n  fullName: AssemblyBuilder.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: AssemblyBuilder.GetCustomAttributes(Type, Boolean)\n  fullName: AssemblyBuilder.GetCustomAttributes(Type, Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetCustomAttributesData()\n  nameWithType: AssemblyBuilder.GetCustomAttributesData()\n  fullName: AssemblyBuilder.GetCustomAttributesData()\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Reflection.CustomAttributeData\n  name: CustomAttributeData\n  nameWithType: CustomAttributeData\n  fullName: System.Reflection.CustomAttributeData\n- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<CustomAttributeData>\n  nameWithType: IList<CustomAttributeData>\n  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.CustomAttributeData\n    name: CustomAttributeData\n    nameWithType: CustomAttributeData\n    fullName: System.Reflection.CustomAttributeData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetDynamicModule(String)\n  nameWithType: AssemblyBuilder.GetDynamicModule(String)\n  fullName: AssemblyBuilder.GetDynamicModule(String)\n- uid: System.Reflection.Emit.AssemblyBuilder.GetExportedTypes\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetExportedTypes()\n  nameWithType: AssemblyBuilder.GetExportedTypes()\n  fullName: AssemblyBuilder.GetExportedTypes()\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetFile(String)\n  nameWithType: AssemblyBuilder.GetFile(String)\n  fullName: AssemblyBuilder.GetFile(String)\n- uid: System.IO.FileStream\n  parent: System.IO\n  isExternal: false\n  name: FileStream\n  nameWithType: FileStream\n  fullName: System.IO.FileStream\n- uid: System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetFiles(Boolean)\n  nameWithType: AssemblyBuilder.GetFiles(Boolean)\n  fullName: AssemblyBuilder.GetFiles(Boolean)\n- uid: System.IO.FileStream[]\n  parent: System.IO\n  isExternal: false\n  name: FileStream[]\n  nameWithType: FileStream[]\n  fullName: System.IO.FileStream[]\n  spec.csharp:\n  - uid: System.IO.FileStream\n    name: FileStream\n    nameWithType: FileStream\n    fullName: System.IO.FileStream\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.AssemblyBuilder.GetHashCode\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: AssemblyBuilder.GetHashCode()\n  fullName: AssemblyBuilder.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetLoadedModules(Boolean)\n  nameWithType: AssemblyBuilder.GetLoadedModules(Boolean)\n  fullName: AssemblyBuilder.GetLoadedModules(Boolean)\n- uid: System.Reflection.Module\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Module[]\n  parent: System.Reflection\n  isExternal: false\n  name: Module[]\n  nameWithType: Module[]\n  fullName: System.Reflection.Module[]\n  spec.csharp:\n  - uid: System.Reflection.Module\n    name: Module\n    nameWithType: Module\n    fullName: System.Reflection.Module\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetManifestResourceInfo(String)\n  nameWithType: AssemblyBuilder.GetManifestResourceInfo(String)\n  fullName: AssemblyBuilder.GetManifestResourceInfo(String)\n- uid: System.Reflection.ManifestResourceInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ManifestResourceInfo\n  nameWithType: ManifestResourceInfo\n  fullName: System.Reflection.ManifestResourceInfo\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetManifestResourceNames()\n  nameWithType: AssemblyBuilder.GetManifestResourceNames()\n  fullName: AssemblyBuilder.GetManifestResourceNames()\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetManifestResourceStream(String)\n  nameWithType: AssemblyBuilder.GetManifestResourceStream(String)\n  fullName: AssemblyBuilder.GetManifestResourceStream(String)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetManifestResourceStream(Type, String)\n  nameWithType: AssemblyBuilder.GetManifestResourceStream(Type, String)\n  fullName: AssemblyBuilder.GetManifestResourceStream(Type, String)\n- uid: System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetModule(String)\n  nameWithType: AssemblyBuilder.GetModule(String)\n  fullName: AssemblyBuilder.GetModule(String)\n- uid: System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetModules(Boolean)\n  nameWithType: AssemblyBuilder.GetModules(Boolean)\n  fullName: AssemblyBuilder.GetModules(Boolean)\n- uid: System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetName(Boolean)\n  nameWithType: AssemblyBuilder.GetName(Boolean)\n  fullName: AssemblyBuilder.GetName(Boolean)\n- uid: System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetReferencedAssemblies()\n  nameWithType: AssemblyBuilder.GetReferencedAssemblies()\n  fullName: AssemblyBuilder.GetReferencedAssemblies()\n- uid: System.Reflection.AssemblyName[]\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName[]\n  nameWithType: AssemblyName[]\n  fullName: System.Reflection.AssemblyName[]\n  spec.csharp:\n  - uid: System.Reflection.AssemblyName\n    name: AssemblyName\n    nameWithType: AssemblyName\n    fullName: System.Reflection.AssemblyName\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetSatelliteAssembly(CultureInfo)\n  nameWithType: AssemblyBuilder.GetSatelliteAssembly(CultureInfo)\n  fullName: AssemblyBuilder.GetSatelliteAssembly(CultureInfo)\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetSatelliteAssembly(CultureInfo, Version)\n  nameWithType: AssemblyBuilder.GetSatelliteAssembly(CultureInfo, Version)\n  fullName: AssemblyBuilder.GetSatelliteAssembly(CultureInfo, Version)\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetType(String, Boolean, Boolean)\n  nameWithType: AssemblyBuilder.GetType(String, Boolean, Boolean)\n  fullName: AssemblyBuilder.GetType(String, Boolean, Boolean)\n- uid: System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GlobalAssemblyCache\n  nameWithType: AssemblyBuilder.GlobalAssemblyCache\n  fullName: AssemblyBuilder.GlobalAssemblyCache\n- uid: System.Reflection.Emit.AssemblyBuilder.HostContext\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: HostContext\n  nameWithType: AssemblyBuilder.HostContext\n  fullName: AssemblyBuilder.HostContext\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: ImageRuntimeVersion\n  nameWithType: AssemblyBuilder.ImageRuntimeVersion\n  fullName: AssemblyBuilder.ImageRuntimeVersion\n- uid: System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: AssemblyBuilder.IsDefined(Type, Boolean)\n  fullName: AssemblyBuilder.IsDefined(Type, Boolean)\n- uid: System.Reflection.Emit.AssemblyBuilder.IsDynamic\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: IsDynamic\n  nameWithType: AssemblyBuilder.IsDynamic\n  fullName: AssemblyBuilder.IsDynamic\n- uid: System.Reflection.Emit.AssemblyBuilder.Location\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Location\n  nameWithType: AssemblyBuilder.Location\n  fullName: AssemblyBuilder.Location\n- uid: System.Reflection.Emit.AssemblyBuilder.ManifestModule\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: ManifestModule\n  nameWithType: AssemblyBuilder.ManifestModule\n  fullName: AssemblyBuilder.ManifestModule\n- uid: System.Reflection.Emit.AssemblyBuilder.Modules\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Modules\n  nameWithType: AssemblyBuilder.Modules\n  fullName: AssemblyBuilder.Modules\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Module}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Module>\n  nameWithType: IEnumerable<Module>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Module>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.Module\n    name: Module\n    nameWithType: Module\n    fullName: System.Reflection.Module\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.Emit.AssemblyBuilder.PermissionSet\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: PermissionSet\n  nameWithType: AssemblyBuilder.PermissionSet\n  fullName: AssemblyBuilder.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Reflection.Emit.AssemblyBuilder.ReflectionOnly\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: ReflectionOnly\n  nameWithType: AssemblyBuilder.ReflectionOnly\n  fullName: AssemblyBuilder.ReflectionOnly\n- uid: System.Reflection.Emit.AssemblyBuilder.Save(System.String)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Save(String)\n  nameWithType: AssemblyBuilder.Save(String)\n  fullName: AssemblyBuilder.Save(String)\n- uid: System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Save(String, PortableExecutableKinds, ImageFileMachine)\n  nameWithType: AssemblyBuilder.Save(String, PortableExecutableKinds, ImageFileMachine)\n  fullName: AssemblyBuilder.Save(String, PortableExecutableKinds, ImageFileMachine)\n- uid: System.Reflection.PortableExecutableKinds\n  parent: System.Reflection\n  isExternal: false\n  name: PortableExecutableKinds\n  nameWithType: PortableExecutableKinds\n  fullName: System.Reflection.PortableExecutableKinds\n- uid: System.Reflection.ImageFileMachine\n  parent: System.Reflection\n  isExternal: false\n  name: ImageFileMachine\n  nameWithType: ImageFileMachine\n  fullName: System.Reflection.ImageFileMachine\n- uid: System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: SecurityRuleSet\n  nameWithType: AssemblyBuilder.SecurityRuleSet\n  fullName: AssemblyBuilder.SecurityRuleSet\n- uid: System.Security.SecurityRuleSet\n  parent: System.Security\n  isExternal: false\n  name: SecurityRuleSet\n  nameWithType: SecurityRuleSet\n  fullName: System.Security.SecurityRuleSet\n- uid: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: AssemblyBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: AssemblyBuilder.SetCustomAttribute(CustomAttributeBuilder)\n- uid: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: AssemblyBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: AssemblyBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: SetEntryPoint(MethodInfo)\n  nameWithType: AssemblyBuilder.SetEntryPoint(MethodInfo)\n  fullName: AssemblyBuilder.SetEntryPoint(MethodInfo)\n- uid: System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: SetEntryPoint(MethodInfo, PEFileKinds)\n  nameWithType: AssemblyBuilder.SetEntryPoint(MethodInfo, PEFileKinds)\n  fullName: AssemblyBuilder.SetEntryPoint(MethodInfo, PEFileKinds)\n- uid: System.Reflection.Emit.PEFileKinds\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PEFileKinds\n  nameWithType: PEFileKinds\n  fullName: System.Reflection.Emit.PEFileKinds\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: _AssemblyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: AssemblyBuilder._AssemblyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: AssemblyBuilder._AssemblyBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: _AssemblyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: AssemblyBuilder._AssemblyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: AssemblyBuilder._AssemblyBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: _AssemblyBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: AssemblyBuilder._AssemblyBuilder.GetTypeInfoCount(UInt32)\n  fullName: AssemblyBuilder._AssemblyBuilder.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: _AssemblyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: AssemblyBuilder._AssemblyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: AssemblyBuilder._AssemblyBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.Emit.AssemblyBuilder.#ctor*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder.AssemblyBuilder\n  fullName: AssemblyBuilder.AssemblyBuilder\n  monikers:\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.AddResourceFile*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: AddResourceFile\n  nameWithType: AssemblyBuilder.AddResourceFile\n  fullName: AssemblyBuilder.AddResourceFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.CodeBase*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: CodeBase\n  nameWithType: AssemblyBuilder.CodeBase\n  fullName: AssemblyBuilder.CodeBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.DefinedTypes*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefinedTypes\n  nameWithType: AssemblyBuilder.DefinedTypes\n  fullName: AssemblyBuilder.DefinedTypes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineDynamicAssembly\n  nameWithType: AssemblyBuilder.DefineDynamicAssembly\n  fullName: AssemblyBuilder.DefineDynamicAssembly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineDynamicModule\n  nameWithType: AssemblyBuilder.DefineDynamicModule\n  fullName: AssemblyBuilder.DefineDynamicModule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineResource*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineResource\n  nameWithType: AssemblyBuilder.DefineResource\n  fullName: AssemblyBuilder.DefineResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineUnmanagedResource\n  nameWithType: AssemblyBuilder.DefineUnmanagedResource\n  fullName: AssemblyBuilder.DefineUnmanagedResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: DefineVersionInfoResource\n  nameWithType: AssemblyBuilder.DefineVersionInfoResource\n  fullName: AssemblyBuilder.DefineVersionInfoResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.EntryPoint*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: EntryPoint\n  nameWithType: AssemblyBuilder.EntryPoint\n  fullName: AssemblyBuilder.EntryPoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.Equals*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Equals\n  nameWithType: AssemblyBuilder.Equals\n  fullName: AssemblyBuilder.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.Evidence*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Evidence\n  nameWithType: AssemblyBuilder.Evidence\n  fullName: AssemblyBuilder.Evidence\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.FullName*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: FullName\n  nameWithType: AssemblyBuilder.FullName\n  fullName: AssemblyBuilder.FullName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: AssemblyBuilder.GetCustomAttributes\n  fullName: AssemblyBuilder.GetCustomAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetCustomAttributesData\n  nameWithType: AssemblyBuilder.GetCustomAttributesData\n  fullName: AssemblyBuilder.GetCustomAttributesData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetDynamicModule*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetDynamicModule\n  nameWithType: AssemblyBuilder.GetDynamicModule\n  fullName: AssemblyBuilder.GetDynamicModule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetExportedTypes*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetExportedTypes\n  nameWithType: AssemblyBuilder.GetExportedTypes\n  fullName: AssemblyBuilder.GetExportedTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetFile*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetFile\n  nameWithType: AssemblyBuilder.GetFile\n  fullName: AssemblyBuilder.GetFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetFiles*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetFiles\n  nameWithType: AssemblyBuilder.GetFiles\n  fullName: AssemblyBuilder.GetFiles\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetHashCode*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetHashCode\n  nameWithType: AssemblyBuilder.GetHashCode\n  fullName: AssemblyBuilder.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetLoadedModules*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetLoadedModules\n  nameWithType: AssemblyBuilder.GetLoadedModules\n  fullName: AssemblyBuilder.GetLoadedModules\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetManifestResourceInfo\n  nameWithType: AssemblyBuilder.GetManifestResourceInfo\n  fullName: AssemblyBuilder.GetManifestResourceInfo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetManifestResourceNames\n  nameWithType: AssemblyBuilder.GetManifestResourceNames\n  fullName: AssemblyBuilder.GetManifestResourceNames\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetManifestResourceStream\n  nameWithType: AssemblyBuilder.GetManifestResourceStream\n  fullName: AssemblyBuilder.GetManifestResourceStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetModule*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetModule\n  nameWithType: AssemblyBuilder.GetModule\n  fullName: AssemblyBuilder.GetModule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetModules*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetModules\n  nameWithType: AssemblyBuilder.GetModules\n  fullName: AssemblyBuilder.GetModules\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetName*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetName\n  nameWithType: AssemblyBuilder.GetName\n  fullName: AssemblyBuilder.GetName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetReferencedAssemblies\n  nameWithType: AssemblyBuilder.GetReferencedAssemblies\n  fullName: AssemblyBuilder.GetReferencedAssemblies\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetSatelliteAssembly\n  nameWithType: AssemblyBuilder.GetSatelliteAssembly\n  fullName: AssemblyBuilder.GetSatelliteAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GetType*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GetType\n  nameWithType: AssemblyBuilder.GetType\n  fullName: AssemblyBuilder.GetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: GlobalAssemblyCache\n  nameWithType: AssemblyBuilder.GlobalAssemblyCache\n  fullName: AssemblyBuilder.GlobalAssemblyCache\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.HostContext*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: HostContext\n  nameWithType: AssemblyBuilder.HostContext\n  fullName: AssemblyBuilder.HostContext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: ImageRuntimeVersion\n  nameWithType: AssemblyBuilder.ImageRuntimeVersion\n  fullName: AssemblyBuilder.ImageRuntimeVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.IsDefined*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: IsDefined\n  nameWithType: AssemblyBuilder.IsDefined\n  fullName: AssemblyBuilder.IsDefined\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.IsDynamic*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: IsDynamic\n  nameWithType: AssemblyBuilder.IsDynamic\n  fullName: AssemblyBuilder.IsDynamic\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.Location*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Location\n  nameWithType: AssemblyBuilder.Location\n  fullName: AssemblyBuilder.Location\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.ManifestModule*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: ManifestModule\n  nameWithType: AssemblyBuilder.ManifestModule\n  fullName: AssemblyBuilder.ManifestModule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.Modules*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Modules\n  nameWithType: AssemblyBuilder.Modules\n  fullName: AssemblyBuilder.Modules\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.PermissionSet*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: PermissionSet\n  nameWithType: AssemblyBuilder.PermissionSet\n  fullName: AssemblyBuilder.PermissionSet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.ReflectionOnly*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: ReflectionOnly\n  nameWithType: AssemblyBuilder.ReflectionOnly\n  fullName: AssemblyBuilder.ReflectionOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.Save*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: Save\n  nameWithType: AssemblyBuilder.Save\n  fullName: AssemblyBuilder.Save\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: SecurityRuleSet\n  nameWithType: AssemblyBuilder.SecurityRuleSet\n  fullName: AssemblyBuilder.SecurityRuleSet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: SetCustomAttribute\n  nameWithType: AssemblyBuilder.SetCustomAttribute\n  fullName: AssemblyBuilder.SetCustomAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.SetEntryPoint*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: SetEntryPoint\n  nameWithType: AssemblyBuilder.SetEntryPoint\n  fullName: AssemblyBuilder.SetEntryPoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames\n  nameWithType: AssemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames\n  fullName: AssemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo\n  nameWithType: AssemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo\n  fullName: AssemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount\n  nameWithType: AssemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount\n  fullName: AssemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke*\n  parent: System.Reflection.Emit.AssemblyBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyBuilder.Invoke\n  nameWithType: AssemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.Invoke\n  fullName: AssemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/AssemblyBuilder.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Reflection.Assembly.ToString\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ToString()\n  nameWithType: Assembly.ToString()\n  fullName: Assembly.ToString()\n- uid: System.Reflection.Assembly.CreateInstance(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CreateInstance(String)\n  nameWithType: Assembly.CreateInstance(String)\n  fullName: Assembly.CreateInstance(String)\n- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CreateInstance(String, Boolean)\n  nameWithType: Assembly.CreateInstance(String, Boolean)\n  fullName: Assembly.CreateInstance(String, Boolean)\n- uid: System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])\n  nameWithType: Assembly.CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])\n  fullName: Assembly.CreateInstance(String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])\n- uid: System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CreateQualifiedName(String, String)\n  nameWithType: Assembly.CreateQualifiedName(String, String)\n  fullName: Assembly.CreateQualifiedName(String, String)\n- uid: System.Reflection.Assembly.CustomAttributes\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: Assembly.CustomAttributes\n  fullName: Assembly.CustomAttributes\n- uid: System.Reflection.Assembly.EscapedCodeBase\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: EscapedCodeBase\n  nameWithType: Assembly.EscapedCodeBase\n  fullName: Assembly.EscapedCodeBase\n- uid: System.Reflection.Assembly.ExportedTypes\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ExportedTypes\n  nameWithType: Assembly.ExportedTypes\n  fullName: Assembly.ExportedTypes\n- uid: System.Reflection.Assembly.GetAssembly(System.Type)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetAssembly(Type)\n  nameWithType: Assembly.GetAssembly(Type)\n  fullName: Assembly.GetAssembly(Type)\n- uid: System.Reflection.Assembly.GetCallingAssembly\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetCallingAssembly()\n  nameWithType: Assembly.GetCallingAssembly()\n  fullName: Assembly.GetCallingAssembly()\n- uid: System.Reflection.Assembly.GetEntryAssembly\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetEntryAssembly()\n  nameWithType: Assembly.GetEntryAssembly()\n  fullName: Assembly.GetEntryAssembly()\n- uid: System.Reflection.Assembly.GetExecutingAssembly\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetExecutingAssembly()\n  nameWithType: Assembly.GetExecutingAssembly()\n  fullName: Assembly.GetExecutingAssembly()\n- uid: System.Reflection.Assembly.GetFiles\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetFiles()\n  nameWithType: Assembly.GetFiles()\n  fullName: Assembly.GetFiles()\n- uid: System.Reflection.Assembly.GetLoadedModules\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetLoadedModules()\n  nameWithType: Assembly.GetLoadedModules()\n  fullName: Assembly.GetLoadedModules()\n- uid: System.Reflection.Assembly.GetModules\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetModules()\n  nameWithType: Assembly.GetModules()\n  fullName: Assembly.GetModules()\n- uid: System.Reflection.Assembly.GetName\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetName()\n  nameWithType: Assembly.GetName()\n  fullName: Assembly.GetName()\n- uid: System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Assembly.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Assembly.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Reflection.Assembly.GetType(System.String,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetType(String, Boolean)\n  nameWithType: Assembly.GetType(String, Boolean)\n  fullName: Assembly.GetType(String, Boolean)\n- uid: System.Reflection.Assembly.GetType(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetType(String)\n  nameWithType: Assembly.GetType(String)\n  fullName: Assembly.GetType(String)\n- uid: System.Reflection.Assembly.GetTypes\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: GetTypes()\n  nameWithType: Assembly.GetTypes()\n  fullName: Assembly.GetTypes()\n- uid: System.Reflection.Assembly.IsFullyTrusted\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: IsFullyTrusted\n  nameWithType: Assembly.IsFullyTrusted\n  fullName: Assembly.IsFullyTrusted\n- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(AssemblyName)\n  nameWithType: Assembly.Load(AssemblyName)\n  fullName: Assembly.Load(AssemblyName)\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(Byte[], Byte[], SecurityContextSource)\n  nameWithType: Assembly.Load(Byte[], Byte[], SecurityContextSource)\n  fullName: Assembly.Load(Byte[], Byte[], SecurityContextSource)\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(Byte[], Byte[], Evidence)\n  nameWithType: Assembly.Load(Byte[], Byte[], Evidence)\n  fullName: Assembly.Load(Byte[], Byte[], Evidence)\n- uid: System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(String, Evidence)\n  nameWithType: Assembly.Load(String, Evidence)\n  fullName: Assembly.Load(String, Evidence)\n- uid: System.Reflection.Assembly.Load(System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(Byte[])\n  nameWithType: Assembly.Load(Byte[])\n  fullName: Assembly.Load(Byte[])\n- uid: System.Reflection.Assembly.Load(System.Byte[],System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(Byte[], Byte[])\n  nameWithType: Assembly.Load(Byte[], Byte[])\n  fullName: Assembly.Load(Byte[], Byte[])\n- uid: System.Reflection.Assembly.Load(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(String)\n  nameWithType: Assembly.Load(String)\n  fullName: Assembly.Load(String)\n- uid: System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: Load(AssemblyName, Evidence)\n  nameWithType: Assembly.Load(AssemblyName, Evidence)\n  fullName: Assembly.Load(AssemblyName, Evidence)\n- uid: System.Reflection.Assembly.LoadFile(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFile(String)\n  nameWithType: Assembly.LoadFile(String)\n  fullName: Assembly.LoadFile(String)\n- uid: System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFile(String, Evidence)\n  nameWithType: Assembly.LoadFile(String, Evidence)\n  fullName: Assembly.LoadFile(String, Evidence)\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)\n  nameWithType: Assembly.LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)\n  fullName: Assembly.LoadFrom(String, Evidence, Byte[], AssemblyHashAlgorithm)\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFrom(String, Byte[], AssemblyHashAlgorithm)\n  nameWithType: Assembly.LoadFrom(String, Byte[], AssemblyHashAlgorithm)\n  fullName: Assembly.LoadFrom(String, Byte[], AssemblyHashAlgorithm)\n- uid: System.Reflection.Assembly.LoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFrom(String)\n  nameWithType: Assembly.LoadFrom(String)\n  fullName: Assembly.LoadFrom(String)\n- uid: System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadFrom(String, Evidence)\n  nameWithType: Assembly.LoadFrom(String, Evidence)\n  fullName: Assembly.LoadFrom(String, Evidence)\n- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadModule(String, Byte[])\n  nameWithType: Assembly.LoadModule(String, Byte[])\n  fullName: Assembly.LoadModule(String, Byte[])\n- uid: System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadModule(String, Byte[], Byte[])\n  nameWithType: Assembly.LoadModule(String, Byte[], Byte[])\n  fullName: Assembly.LoadModule(String, Byte[], Byte[])\n- uid: System.Reflection.Assembly.LoadWithPartialName(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadWithPartialName(String)\n  nameWithType: Assembly.LoadWithPartialName(String)\n  fullName: Assembly.LoadWithPartialName(String)\n- uid: System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: LoadWithPartialName(String, Evidence)\n  nameWithType: Assembly.LoadWithPartialName(String, Evidence)\n  fullName: Assembly.LoadWithPartialName(String, Evidence)\n- uid: System.Reflection.Assembly.ModuleResolve\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ModuleResolve\n  nameWithType: Assembly.ModuleResolve\n  fullName: Assembly.ModuleResolve\n- uid: System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: op_Equality(Assembly, Assembly)\n  nameWithType: Assembly.op_Equality(Assembly, Assembly)\n  fullName: Assembly.op_Equality(Assembly, Assembly)\n- uid: System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: op_Inequality(Assembly, Assembly)\n  nameWithType: Assembly.op_Inequality(Assembly, Assembly)\n  fullName: Assembly.op_Inequality(Assembly, Assembly)\n- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ReflectionOnlyLoad(Byte[])\n  nameWithType: Assembly.ReflectionOnlyLoad(Byte[])\n  fullName: Assembly.ReflectionOnlyLoad(Byte[])\n- uid: System.Reflection.Assembly.ReflectionOnlyLoad(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ReflectionOnlyLoad(String)\n  nameWithType: Assembly.ReflectionOnlyLoad(String)\n  fullName: Assembly.ReflectionOnlyLoad(String)\n- uid: System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ReflectionOnlyLoadFrom(String)\n  nameWithType: Assembly.ReflectionOnlyLoadFrom(String)\n  fullName: Assembly.ReflectionOnlyLoadFrom(String)\n- uid: System.Reflection.Assembly.UnsafeLoadFrom(System.String)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: UnsafeLoadFrom(String)\n  nameWithType: Assembly.UnsafeLoadFrom(String)\n  fullName: Assembly.UnsafeLoadFrom(String)\n- uid: System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType: Assembly.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: Assembly.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType: Assembly.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: Assembly.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n- uid: System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType: Assembly.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: Assembly.ICustomAttributeProvider.IsDefined(Type, Boolean)\n- uid: System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType\n  parent: System.Reflection.Assembly\n  isExternal: false\n  name: _Assembly.GetType()\n  nameWithType: Assembly._Assembly.GetType()\n  fullName: Assembly._Assembly.GetType()\n- uid: System.Reflection.AssemblyExtensions.GetExportedTypes(System.Reflection.Assembly)\n  parent: System.Reflection.AssemblyExtensions\n  isExternal: false\n  name: GetExportedTypes(Assembly)\n  nameWithType: AssemblyExtensions.GetExportedTypes(Assembly)\n  fullName: AssemblyExtensions.GetExportedTypes(Assembly)\n- uid: System.Reflection.AssemblyExtensions.GetModules(System.Reflection.Assembly)\n  parent: System.Reflection.AssemblyExtensions\n  isExternal: false\n  name: GetModules(Assembly)\n  nameWithType: AssemblyExtensions.GetModules(Assembly)\n  fullName: AssemblyExtensions.GetModules(Assembly)\n- uid: System.Reflection.AssemblyExtensions.GetTypes(System.Reflection.Assembly)\n  parent: System.Reflection.AssemblyExtensions\n  isExternal: false\n  name: GetTypes(Assembly)\n  nameWithType: AssemblyExtensions.GetTypes(Assembly)\n  fullName: AssemblyExtensions.GetTypes(Assembly)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Assembly, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(Assembly, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(Assembly)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Assembly)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(Assembly)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(Assembly)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Assembly, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(Assembly, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(Assembly)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Assembly)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(Assembly)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: CustomAttributeExtensions.IsDefined(Assembly, Type)\n  fullName: CustomAttributeExtensions.IsDefined(Assembly, Type)\n- uid: System.Reflection.Metadata.AssemblyExtensions.TryGetRawMetadata(System.Reflection.Assembly,System.Byte*@,System.Int32@)\n  parent: System.Reflection.Metadata.AssemblyExtensions\n  isExternal: false\n  name: TryGetRawMetadata(Assembly, Byte*, Int32)\n  nameWithType: AssemblyExtensions.TryGetRawMetadata(Assembly, Byte*, Int32)\n  fullName: AssemblyExtensions.TryGetRawMetadata(Assembly, Byte*, Int32)\n- uid: System.Runtime.InteropServices._AssemblyBuilder\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: _AssemblyBuilder\n  nameWithType: _AssemblyBuilder\n  fullName: System.Runtime.InteropServices._AssemblyBuilder\n"}