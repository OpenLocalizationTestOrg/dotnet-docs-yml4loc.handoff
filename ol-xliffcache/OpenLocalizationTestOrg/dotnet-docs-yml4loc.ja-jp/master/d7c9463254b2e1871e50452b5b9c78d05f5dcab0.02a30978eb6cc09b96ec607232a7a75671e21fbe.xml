{"nodes":[{"content":"Specifies a value indicating whether the text appears from right to left, such as when using Hebrew or Arabic fonts.","nodes":[{"pos":[0,116],"content":"Specifies a value indicating whether the text appears from right to left, such as when using Hebrew or Arabic fonts.","nodes":[{"content":"Specifies a value indicating whether the text appears from right to left, such as when using Hebrew or Arabic fonts.","pos":[0,116]}]}],"pos":[490,607],"yaml":true},{"content":"This enumeration is used by <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> and <xref:System.Windows.Forms.Control>.  \n  \n When you retrieve the value of the `RightToLeft` property from <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, and <xref:System.Windows.Forms.ProgressBar> you will get the value of <xref:System.Windows.Forms.RightToLeft> you assigned. In contrast, if you are deriving your own class from <xref:System.Windows.Forms.Control>, and you assign a value of `Inherit` to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property, the value returned will be the setting of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the parent control. If there is no parent control, it will return a value of `No`. Otherwise, it will return a value of `Yes` or `No`, depending on the value that you assigned to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of your derived class.  \n  \n> [!NOTE]\n>  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,232],"content":"This enumeration is used by <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> and <xref:System.Windows.Forms.Control>.","nodes":[{"content":"This enumeration is used by <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.ProgressBar&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control&gt;</ph>.","pos":[0,232],"source":"This enumeration is used by <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> and <xref:System.Windows.Forms.Control>."}]},{"pos":[239,1073],"content":"When you retrieve the value of the `RightToLeft` property from <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, and <xref:System.Windows.Forms.ProgressBar> you will get the value of <xref:System.Windows.Forms.RightToLeft> you assigned. In contrast, if you are deriving your own class from <xref:System.Windows.Forms.Control>, and you assign a value of `Inherit` to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property, the value returned will be the setting of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the parent control. If there is no parent control, it will return a value of `No`. Otherwise, it will return a value of `Yes` or `No`, depending on the value that you assigned to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of your derived class.","nodes":[{"content":"When you retrieve the value of the <ph id=\"ph1\">`RightToLeft`</ph> property from <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ContextMenu&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.ProgressBar&gt;</ph> you will get the value of <ph id=\"ph5\">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> you assigned.","pos":[0,265],"source":"When you retrieve the value of the `RightToLeft` property from <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, and <xref:System.Windows.Forms.ProgressBar> you will get the value of <xref:System.Windows.Forms.RightToLeft> you assigned."},{"content":"In contrast, if you are deriving your own class from <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control&gt;</ph>, and you assign a value of <ph id=\"ph2\">`Inherit`</ph> to the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property, the value returned will be the setting of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of the parent control.","pos":[266,588],"source":" In contrast, if you are deriving your own class from <xref:System.Windows.Forms.Control>, and you assign a value of `Inherit` to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property, the value returned will be the setting of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the parent control."},{"content":"If there is no parent control, it will return a value of <ph id=\"ph1\">`No`</ph>.","pos":[589,651],"source":" If there is no parent control, it will return a value of `No`."},{"content":"Otherwise, it will return a value of <ph id=\"ph1\">`Yes`</ph> or <ph id=\"ph2\">`No`</ph>, depending on the value that you assigned to the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of your derived class.","pos":[652,834],"source":" Otherwise, it will return a value of `Yes` or `No`, depending on the value that you assigned to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of your derived class."}]},{"pos":[1081,1281],"content":"[!NOTE]\n For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=fullName> property.","leadings":["","> "],"nodes":[{"content":"For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=fullName&gt;</ph> property.","pos":[9,198],"source":" For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=fullName> property."}]}],"pos":[618,1907],"yaml":true,"extradata":"MT"},{"content":"The direction the text read is inherited from the parent control.","nodes":[{"pos":[0,65],"content":"The direction the text read is inherited from the parent control.","nodes":[{"content":"The direction the text read is inherited from the parent control.","pos":[0,65]}]}],"pos":[2919,2985],"yaml":true},{"content":"The text reads from left to right. This is the default.","nodes":[{"pos":[0,55],"content":"The text reads from left to right. This is the default.","nodes":[{"content":"The text reads from left to right. This is the default.","pos":[0,55],"nodes":[{"content":"The text reads from left to right.","pos":[0,34]},{"content":"This is the default.","pos":[35,55]}]}]}],"pos":[3881,3937],"yaml":true},{"content":"The text reads from right to left.","nodes":[{"pos":[0,34],"content":"The text reads from right to left.","nodes":[{"content":"The text reads from right to left.","pos":[0,34]}]}],"pos":[4834,4869],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.RightToLeft\n  commentId: T:System.Windows.Forms.RightToLeft\n  id: RightToLeft\n  children:\n  - System.Windows.Forms.RightToLeft.Inherit\n  - System.Windows.Forms.RightToLeft.No\n  - System.Windows.Forms.RightToLeft.Yes\n  langs:\n  - csharp\n  name: RightToLeft\n  nameWithType: RightToLeft\n  fullName: System.Windows.Forms.RightToLeft\n  type: Enum\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Specifies a value indicating whether the text appears from right to left, such as when using Hebrew or Arabic fonts.\n  remarks: \"This enumeration is used by <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ProgressBar>, <xref:System.Text.RegularExpressions.Regex> and <xref:System.Windows.Forms.Control>.  \\n  \\n When you retrieve the value of the `RightToLeft` property from <xref:System.Windows.Forms.ContextMenu>, <xref:System.Windows.Forms.MainMenu>, and <xref:System.Windows.Forms.ProgressBar> you will get the value of <xref:System.Windows.Forms.RightToLeft> you assigned. In contrast, if you are deriving your own class from <xref:System.Windows.Forms.Control>, and you assign a value of `Inherit` to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property, the value returned will be the setting of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the parent control. If there is no parent control, it will return a value of `No`. Otherwise, it will return a value of `Yes` or `No`, depending on the value that you assigned to the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of your derived class.  \\n  \\n> [!NOTE]\\n>  For more information about how enabling right-to-left alignment affects Windows Forms controls, see the <xref:System.Windows.Forms.Control.RightToLeft%2A?displayProperty=fullName> property.\"\n  syntax:\n    content: public enum RightToLeft\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/RightToLeft.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.RightToLeft.Inherit\n  commentId: F:System.Windows.Forms.RightToLeft.Inherit\n  id: Inherit\n  parent: System.Windows.Forms.RightToLeft\n  langs:\n  - csharp\n  name: Inherit\n  nameWithType: RightToLeft.Inherit\n  fullName: RightToLeft.Inherit\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: The direction the text read is inherited from the parent control.\n  syntax:\n    content: Inherit\n    return:\n      type: System.Windows.Forms.RightToLeft\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/RightToLeft.xml\n- uid: System.Windows.Forms.RightToLeft.No\n  commentId: F:System.Windows.Forms.RightToLeft.No\n  id: No\n  parent: System.Windows.Forms.RightToLeft\n  langs:\n  - csharp\n  name: No\n  nameWithType: RightToLeft.No\n  fullName: RightToLeft.No\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: The text reads from left to right. This is the default.\n  syntax:\n    content: No\n    return:\n      type: System.Windows.Forms.RightToLeft\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/RightToLeft.xml\n- uid: System.Windows.Forms.RightToLeft.Yes\n  commentId: F:System.Windows.Forms.RightToLeft.Yes\n  id: Yes\n  parent: System.Windows.Forms.RightToLeft\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: RightToLeft.Yes\n  fullName: RightToLeft.Yes\n  type: Field\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: The text reads from right to left.\n  syntax:\n    content: Yes\n    return:\n      type: System.Windows.Forms.RightToLeft\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/RightToLeft.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Windows.Forms.RightToLeft.Inherit\n  parent: System.Windows.Forms.RightToLeft\n  isExternal: false\n  name: Inherit\n  nameWithType: RightToLeft.Inherit\n  fullName: RightToLeft.Inherit\n- uid: System.Windows.Forms.RightToLeft\n  parent: System.Windows.Forms\n  isExternal: false\n  name: RightToLeft\n  nameWithType: RightToLeft\n  fullName: System.Windows.Forms.RightToLeft\n- uid: System.Windows.Forms.RightToLeft.No\n  parent: System.Windows.Forms.RightToLeft\n  isExternal: false\n  name: No\n  nameWithType: RightToLeft.No\n  fullName: RightToLeft.No\n- uid: System.Windows.Forms.RightToLeft.Yes\n  parent: System.Windows.Forms.RightToLeft\n  isExternal: false\n  name: Yes\n  nameWithType: RightToLeft.Yes\n  fullName: RightToLeft.Yes\n"}