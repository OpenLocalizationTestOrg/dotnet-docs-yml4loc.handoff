### YamlMime:ManagedReference
items:
- uid: System.DivideByZeroException
  commentId: T:System.DivideByZeroException
  id: DivideByZeroException
  children:
  - System.DivideByZeroException.#ctor
  - System.DivideByZeroException.#ctor(System.String)
  - System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.DivideByZeroException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: DivideByZeroException
  nameWithType: DivideByZeroException
  fullName: System.DivideByZeroException
  type: Class
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: The exception that is thrown when there is an attempt to divide an integral or <xref href="System.Decimal"></xref> value by zero.
  remarks: "Trying to divide an integer or <xref:System.Decimal> number by zero throws a <xref:System.DivideByZeroException> exception. To prevent the exception, ensure that the denominator in a division operation with integer or <xref:System.Decimal> values is non-zero.  \n  \n Dividing a floating-point value by zero doesn't throw an exception; it results in positive infinity, negative infinity, or not a number (NaN), according to the rules of IEEE 754 arithmetic. Because the following example uses floating-point division rather than integer division, the operation does not throw a <xref:System.DivideByZeroException> exception.  \n  \n [!code-csharp[System.DivideByZeroException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.dividebyzeroexception.class/cs/exception2.cs#2)]\n [!code-vb[System.DivideByZeroException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.dividebyzeroexception.class/vb/exception2.vb#2)]  \n  \n For more information, see <xref:System.Single> and <xref:System.Double>.  \n  \n The following Microsoft intermediate language (MSIL) instructions throw <xref:System.DivideByZeroException>:  \n  \n-   div  \n  \n-   div.un  \n  \n-   rem  \n  \n-   rem.un  \n  \n <xref:System.DivideByZeroException> uses the HRESULT COR_E_DIVIDEBYZERO, which has the value 0x80020012.  \n  \n For a list of initial property values for an instance of <xref:System.DivideByZeroException>, see the <xref:System.DivideByZeroException.%23ctor%2A> constructors."
  example:
  - "The following example handles a <xref:System.DivideByZeroException> exception in integer division.  \n  \n [!code-csharp[System.DivideByZeroException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.dividebyzeroexception.class/cs/exception1.cs#1)]\n [!code-vb[System.DivideByZeroException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.dividebyzeroexception.class/vb/exception1.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DivideByZeroException : ArithmeticException
  inheritance:
  - System.Object
  - System.Exception
  - System.ArithmeticException
  implements: []
  inheritedMembers:
  - System.Exception.Data
  - System.Exception.GetBaseException
  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Exception.GetType
  - System.Exception.HelpLink
  - System.Exception.HResult
  - System.Exception.InnerException
  - System.Exception.Message
  - System.Exception.SerializeObjectState
  - System.Exception.Source
  - System.Exception.StackTrace
  - System.Exception.TargetSite
  - System.Exception.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DivideByZeroException.#ctor
  commentId: M:System.DivideByZeroException.#ctor
  id: '#ctor'
  parent: System.DivideByZeroException
  langs:
  - csharp
  name: DivideByZeroException()
  nameWithType: DivideByZeroException.DivideByZeroException()
  fullName: DivideByZeroException.DivideByZeroException()
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DivideByZeroException"></xref> class.
  remarks: "This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Attempted to divide by zero.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|"
  syntax:
    content: public DivideByZeroException ();
    parameters: []
  overload: System.DivideByZeroException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DivideByZeroException.#ctor(System.String)
  commentId: M:System.DivideByZeroException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DivideByZeroException
  langs:
  - csharp
  name: DivideByZeroException(String)
  nameWithType: DivideByZeroException.DivideByZeroException(String)
  fullName: DivideByZeroException.DivideByZeroException(String)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DivideByZeroException"></xref> class with a specified error message.
  remarks: "The content of `message` is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public DivideByZeroException (string message);
    parameters:
    - id: message
      type: System.String
      description: A <xref href="System.String"></xref> that describes the error.
  overload: System.DivideByZeroException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.DivideByZeroException
  langs:
  - csharp
  name: DivideByZeroException(SerializationInfo, StreamingContext)
  nameWithType: DivideByZeroException.DivideByZeroException(SerializationInfo, StreamingContext)
  fullName: DivideByZeroException.DivideByZeroException(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DivideByZeroException"></xref> class with serialized data.
  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.
  syntax:
    content: protected DivideByZeroException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The object that holds the serialized object data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The contextual information about the source or destination.
  overload: System.DivideByZeroException.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.DivideByZeroException.#ctor(System.String,System.Exception)
  commentId: M:System.DivideByZeroException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.DivideByZeroException
  langs:
  - csharp
  name: DivideByZeroException(String, Exception)
  nameWithType: DivideByZeroException.DivideByZeroException(String, Exception)
  fullName: DivideByZeroException.DivideByZeroException(String, Exception)
  type: Constructor
  assemblies:
  - System.Runtime
  - mscorlib
  - netstandard
  namespace: System
  summary: Initializes a new instance of the <xref href="System.DivideByZeroException"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.
  remarks: "An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.DivideByZeroException>.  \n  \n|Property Type|Condition|  \n|-------------------|---------------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|"
  syntax:
    content: public DivideByZeroException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: The error message that explains the reason for the exception.
    - id: innerException
      type: System.Exception
      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.
  overload: System.DivideByZeroException.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.ArithmeticException
  parent: System
  isExternal: false
  name: ArithmeticException
  nameWithType: ArithmeticException
  fullName: System.ArithmeticException
- uid: System.DivideByZeroException.#ctor
  parent: System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException()
  nameWithType: DivideByZeroException.DivideByZeroException()
  fullName: DivideByZeroException.DivideByZeroException()
- uid: System.DivideByZeroException.#ctor(System.String)
  parent: System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException(String)
  nameWithType: DivideByZeroException.DivideByZeroException(String)
  fullName: DivideByZeroException.DivideByZeroException(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException(SerializationInfo, StreamingContext)
  nameWithType: DivideByZeroException.DivideByZeroException(SerializationInfo, StreamingContext)
  fullName: DivideByZeroException.DivideByZeroException(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.DivideByZeroException.#ctor(System.String,System.Exception)
  parent: System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException(String, Exception)
  nameWithType: DivideByZeroException.DivideByZeroException(String, Exception)
  fullName: DivideByZeroException.DivideByZeroException(String, Exception)
- uid: System.Exception
  parent: System
  isExternal: false
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.DivideByZeroException.#ctor*
  parent: System.DivideByZeroException
  isExternal: false
  name: DivideByZeroException
  nameWithType: DivideByZeroException.DivideByZeroException
  fullName: DivideByZeroException.DivideByZeroException
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/DivideByZeroException.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Exception.GetType
  parent: System.Exception
  isExternal: false
  name: GetType()
  nameWithType: Exception.GetType()
  fullName: Exception.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Exception.ToString
  parent: System.Exception
  isExternal: false
  name: ToString()
  nameWithType: Exception.ToString()
  fullName: Exception.ToString()
- uid: System.Exception.Data
  parent: System.Exception
  isExternal: false
  name: Data
  nameWithType: Exception.Data
  fullName: Exception.Data
- uid: System.Exception.GetBaseException
  parent: System.Exception
  isExternal: false
  name: GetBaseException()
  nameWithType: Exception.GetBaseException()
  fullName: Exception.GetBaseException()
- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Exception
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Exception.HelpLink
  parent: System.Exception
  isExternal: false
  name: HelpLink
  nameWithType: Exception.HelpLink
  fullName: Exception.HelpLink
- uid: System.Exception.HResult
  parent: System.Exception
  isExternal: false
  name: HResult
  nameWithType: Exception.HResult
  fullName: Exception.HResult
- uid: System.Exception.InnerException
  parent: System.Exception
  isExternal: false
  name: InnerException
  nameWithType: Exception.InnerException
  fullName: Exception.InnerException
- uid: System.Exception.Message
  parent: System.Exception
  isExternal: false
  name: Message
  nameWithType: Exception.Message
  fullName: Exception.Message
- uid: System.Exception.SerializeObjectState
  parent: System.Exception
  isExternal: false
  name: SerializeObjectState
  nameWithType: Exception.SerializeObjectState
  fullName: Exception.SerializeObjectState
- uid: System.Exception.Source
  parent: System.Exception
  isExternal: false
  name: Source
  nameWithType: Exception.Source
  fullName: Exception.Source
- uid: System.Exception.StackTrace
  parent: System.Exception
  isExternal: false
  name: StackTrace
  nameWithType: Exception.StackTrace
  fullName: Exception.StackTrace
- uid: System.Exception.TargetSite
  parent: System.Exception
  isExternal: false
  name: TargetSite
  nameWithType: Exception.TargetSite
  fullName: Exception.TargetSite
