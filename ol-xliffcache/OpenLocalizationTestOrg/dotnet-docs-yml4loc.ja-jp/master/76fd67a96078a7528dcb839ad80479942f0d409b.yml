### YamlMime:ManagedReference
items:
- uid: System.IO.StreamWriter
  commentId: T:System.IO.StreamWriter
  id: StreamWriter
  children:
  - System.IO.StreamWriter.#ctor(System.IO.Stream)
  - System.IO.StreamWriter.#ctor(System.String)
  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  - System.IO.StreamWriter.#ctor(System.String,System.Boolean)
  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)
  - System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)
  - System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)
  - System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)
  - System.IO.StreamWriter.AutoFlush
  - System.IO.StreamWriter.BaseStream
  - System.IO.StreamWriter.Close
  - System.IO.StreamWriter.Dispose(System.Boolean)
  - System.IO.StreamWriter.Encoding
  - System.IO.StreamWriter.Flush
  - System.IO.StreamWriter.FlushAsync
  - System.IO.StreamWriter.Null
  - System.IO.StreamWriter.Write(System.Char)
  - System.IO.StreamWriter.Write(System.Char[])
  - System.IO.StreamWriter.Write(System.String)
  - System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.StreamWriter.WriteAsync(System.Char)
  - System.IO.StreamWriter.WriteAsync(System.String)
  - System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.StreamWriter.WriteLineAsync
  - System.IO.StreamWriter.WriteLineAsync(System.Char)
  - System.IO.StreamWriter.WriteLineAsync(System.String)
  - System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  langs:
  - csharp
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
  type: Class
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Implements a <xref href="System.IO.TextWriter"></xref> for writing characters to a stream in a particular encoding.
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/streamwriter.cs#9e38cb1c84769eba). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n <xref:System.IO.StreamWriter> is designed for character output in a particular encoding, whereas classes derived from <xref:System.IO.Stream> are designed for byte input and output.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n  \n <xref:System.IO.StreamWriter> defaults to using an instance of <xref:System.Text.UTF8Encoding> unless specified otherwise. This instance of `UTF8Encoding` is constructed without a byte order mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29> or <xref:System.IO.StreamWriter.%23ctor%2A>.  \n  \n By default, a <xref:System.IO.StreamWriter> is not thread safe. See <xref:System.IO.TextWriter.Synchronized%2A?displayProperty=fullName> for a thread-safe wrapper.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following example shows how to use a <xref:System.IO.StreamWriter> object to write a file that lists the directories on the C drive, and then uses a <xref:System.IO.StreamReader> object to read and display each directory name. A good practice is to use these objects in a `using` statement so that the unmanaged resources are correctly disposed. The `using` statement automatically calls <xref:System.IDisposable.Dispose%2A> on the object when the code that is using it has completed. The constructor used in this example is not supported for use in [!INCLUDE[win8_appstore_long](~/includes/win8-appstore-long-md.md)] Apps.  \n  \n [!code-csharp[StreamReadWrite#1](~/samples/snippets/csharp/VS_Snippets_CLR/streamreadwrite/cs/program.cs#1)]\n [!code-vb[StreamReadWrite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/streamreadwrite/vb/module1.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class StreamWriter : System.IO.TextWriter
  inheritance:
  - System.Object
  - System.IO.TextWriter
  implements: []
  inheritedMembers:
  - System.IO.TextWriter.CoreNewLine
  - System.IO.TextWriter.Dispose
  - System.IO.TextWriter.FormatProvider
  - System.IO.TextWriter.NewLine
  - System.IO.TextWriter.Synchronized(System.IO.TextWriter)
  - System.IO.TextWriter.Write(System.Boolean)
  - System.IO.TextWriter.Write(System.Decimal)
  - System.IO.TextWriter.Write(System.Double)
  - System.IO.TextWriter.Write(System.Int32)
  - System.IO.TextWriter.Write(System.Int64)
  - System.IO.TextWriter.Write(System.Object)
  - System.IO.TextWriter.Write(System.Single)
  - System.IO.TextWriter.Write(System.String,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.Write(System.String,System.Object[])
  - System.IO.TextWriter.Write(System.UInt32)
  - System.IO.TextWriter.Write(System.UInt64)
  - System.IO.TextWriter.WriteAsync(System.Char[])
  - System.IO.TextWriter.WriteLine
  - System.IO.TextWriter.WriteLine(System.Boolean)
  - System.IO.TextWriter.WriteLine(System.Char)
  - System.IO.TextWriter.WriteLine(System.Char[])
  - System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  - System.IO.TextWriter.WriteLine(System.Decimal)
  - System.IO.TextWriter.WriteLine(System.Double)
  - System.IO.TextWriter.WriteLine(System.Int32)
  - System.IO.TextWriter.WriteLine(System.Int64)
  - System.IO.TextWriter.WriteLine(System.Object)
  - System.IO.TextWriter.WriteLine(System.Single)
  - System.IO.TextWriter.WriteLine(System.String)
  - System.IO.TextWriter.WriteLine(System.String,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  - System.IO.TextWriter.WriteLine(System.String,System.Object[])
  - System.IO.TextWriter.WriteLine(System.UInt32)
  - System.IO.TextWriter.WriteLine(System.UInt64)
  - System.IO.TextWriter.WriteLineAsync(System.Char[])
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream)
  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: StreamWriter(Stream)
  nameWithType: StreamWriter.StreamWriter(Stream)
  fullName: StreamWriter.StreamWriter(Stream)
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.StreamWriter"></xref> class for the specified stream by using UTF-8 encoding and the default buffer size.
  remarks: "This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%2A>. The <xref:System.IO.StreamWriter.BaseStream%2A> property is initialized using the `stream` parameter. The position of the stream is not reset.  \n  \n The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following code example demonstrates this constructor.  \n  \n [!code-csharp[System.IO.StreamWriter.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program1.cs#1)]\n [!code-vb[System.IO.StreamWriter.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program1.vb#1)]"
  syntax:
    content: public StreamWriter (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to write to.
  overload: System.IO.StreamWriter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>stream</code> is not writable.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.#ctor(System.String)
  commentId: M:System.IO.StreamWriter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: StreamWriter(String)
  nameWithType: StreamWriter.StreamWriter(String)
  fullName: StreamWriter.StreamWriter(String)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.StreamWriter"></xref> class for the specified file by using the default encoding and buffer size.
  remarks: "This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.  \n  \n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share. If the file exists, it is overwritten; otherwise, a new file is created.  \n  \n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following code example demonstrates this constructor.  \n  \n [!code-csharp[System.IO.StreamWriter.ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program5.cs#5)]\n [!code-vb[System.IO.StreamWriter.ctor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program5.vb#5)]"
  syntax:
    content: public StreamWriter (string path);
    parameters:
    - id: path
      type: System.String
      description: The complete file path to write to. <code>path</code> can be a file name.
  overload: System.IO.StreamWriter.#ctor*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: Access is denied.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>path</code> contains the name of a system device (com1, com2, and so on)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>path</code> is `null`.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The specified path is invalid (for example, it is on an unmapped drive).
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the required permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.Text.Encoding)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: StreamWriter(Stream, Encoding)
  nameWithType: StreamWriter.StreamWriter(Stream, Encoding)
  fullName: StreamWriter.StreamWriter(Stream, Encoding)
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.StreamWriter"></xref> class for the specified stream by using the specified encoding and the default buffer size.
  remarks: "This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the stream parameter. The position of the stream is not reset. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \n  \n The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following example demonstrates this constructor.  \n  \n [!code-csharp[System.IO.StreamWriter.ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program2.cs#2)]\n [!code-vb[System.IO.StreamWriter.ctor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program2.vb#2)]"
  syntax:
    content: public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to write to.
    - id: encoding
      type: System.Text.Encoding
      description: The character encoding to use.
  overload: System.IO.StreamWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> or <code>encoding</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>stream</code> is not writable.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean)
  commentId: M:System.IO.StreamWriter.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: StreamWriter(String, Boolean)
  nameWithType: StreamWriter.StreamWriter(String, Boolean)
  fullName: StreamWriter.StreamWriter(String, Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.StreamWriter"></xref> class for the specified file by using the default encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.
  remarks: "This constructor creates a <xref:System.IO.StreamWriter> with UTF-8 encoding without a Byte-Order Mark (BOM), so its <xref:System.Text.Encoding.GetPreamble%2A> method returns an empty byte array. The default UTF-8 encoding for this constructor throws an exception on invalid bytes. This behavior is different from the behavior provided by the encoding object in the <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName> property. To specify a BOM and determine whether an exception is thrown on invalid bytes, use a constructor that accepts an encoding object as a parameter, such as <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%2CSystem.Text.Encoding%29>.  \n  \n The `path` parameter can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n The `path` parameter is not required to be a file stored on disk; it can be any part of a system that supports access using streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following code example demonstrates this constructor.  \n  \n [!code-csharp[System.IO.StreamWriter.ctor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program6.cs#6)]\n [!code-vb[System.IO.StreamWriter.ctor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program6.vb#6)]"
  syntax:
    content: public StreamWriter (string path, bool append);
    parameters:
    - id: path
      type: System.String
      description: The complete file path to write to.
    - id: append
      type: System.Boolean
      description: '`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.'
  overload: System.IO.StreamWriter.#ctor*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: Access is denied.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code> is empty.  \n  \n -or-  \n  \n <code>path</code> contains the name of a system device (com1, com2, and so on)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>path</code> is `null`.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The specified path is invalid (for example, it is on an unmapped drive).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the required permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)
  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: StreamWriter(Stream, Encoding, Int32)
  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32)
  fullName: StreamWriter.StreamWriter(Stream, Encoding, Int32)
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.StreamWriter"></xref> class for the specified stream by using the specified encoding and buffer size.
  remarks: "This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the `encoding` parameter, and the <xref:System.IO.StreamWriter.BaseStream%2A> property using the `stream` parameter. The position of the stream is not reset. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \n  \n The <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following example demonstrates this constructor.  \n  \n [!code-csharp[System.IO.StreamWriter.ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program3.cs#3)]\n [!code-vb[System.IO.StreamWriter.ctor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program3.vb#3)]"
  syntax:
    content: public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to write to.
    - id: encoding
      type: System.Text.Encoding
      description: The character encoding to use.
    - id: bufferSize
      type: System.Int32
      description: The buffer size, in bytes.
  overload: System.IO.StreamWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> or <code>encoding</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>bufferSize</code> is negative.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>stream</code> is not writable.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)
  commentId: M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)
  id: '#ctor(System.String,System.Boolean,System.Text.Encoding)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: StreamWriter(String, Boolean, Encoding)
  nameWithType: StreamWriter.StreamWriter(String, Boolean, Encoding)
  fullName: StreamWriter.StreamWriter(String, Boolean, Encoding)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.StreamWriter"></xref> class for the specified file by using the specified encoding and default buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.
  remarks: "This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \n  \n `path` can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n `path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following example demonstrates this constructor.  \n  \n [!code-csharp[System.IO.StreamWriter.ctor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program7.cs#7)]\n [!code-vb[System.IO.StreamWriter.ctor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program7.vb#7)]"
  syntax:
    content: public StreamWriter (string path, bool append, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: The complete file path to write to.
    - id: append
      type: System.Boolean
      description: '`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.'
    - id: encoding
      type: System.Text.Encoding
      description: The character encoding to use.
  overload: System.IO.StreamWriter.#ctor*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: Access is denied.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code> is empty.  \n  \n -or-  \n  \n <code>path</code> contains the name of a system device (com1, com2, and so on)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>path</code> is `null`.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The specified path is invalid (for example, it is on an unmapped drive).
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the required permission.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)
  commentId: M:System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: StreamWriter(Stream, Encoding, Int32, Boolean)
  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)
  fullName: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.StreamWriter"></xref> class for the specified stream by using the specified encoding and buffer size, and optionally leaves the stream open.
  remarks: "Unless you set the `leaveOpen` parameter to `true`, the <xref:System.IO.StreamWriter> object calls <xref:System.IO.Stream.Dispose> on the provided <xref:System.IO.Stream> object when <xref:System.IO.StreamWriter.Dispose%2A?displayProperty=fullName> is called.  \n  \n This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property by using the `encoding` parameter, and initializes the <xref:System.IO.StreamWriter.BaseStream%2A> property by using the `stream` parameter. The position of the stream is not reset. For additional information, see the <xref:System.IO.TextWriter.Encoding%2A> property.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown."
  example:
  - "The following example demonstrates this constructor.  \n  \n [!code-csharp[System.IO.StreamWriter.ctor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program4.cs#4)]\n [!code-vb[System.IO.StreamWriter.ctor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program4.vb#4)]"
  syntax:
    content: public StreamWriter (System.IO.Stream stream, System.Text.Encoding encoding, int bufferSize, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: The stream to write to.
    - id: encoding
      type: System.Text.Encoding
      description: The character encoding to use.
    - id: bufferSize
      type: System.Int32
      description: The buffer size, in bytes.
    - id: leaveOpen
      type: System.Boolean
      description: '`true` to leave the stream open after the <xref href="System.IO.StreamWriter"></xref> object is disposed; otherwise, `false`.'
  overload: System.IO.StreamWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>stream</code> or <code>encoding</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>bufferSize</code> is negative.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>stream</code> is not writable.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)
  commentId: M:System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)
  id: '#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)'
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: StreamWriter(String, Boolean, Encoding, Int32)
  nameWithType: StreamWriter.StreamWriter(String, Boolean, Encoding, Int32)
  fullName: StreamWriter.StreamWriter(String, Boolean, Encoding, Int32)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.StreamWriter"></xref> class for the specified file on the specified path, using the specified encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.
  remarks: "This constructor initializes the <xref:System.IO.StreamWriter.Encoding%2A> property using the encoding parameter. For additional information, see <xref:System.IO.TextWriter.Encoding%2A>.  \n  \n `path` can be a file name, including a file on a Universal Naming Convention (UNC) share.  \n  \n `path` is not required to be a file stored on disk; it can be any part of a system that supports access via streams.  \n  \n> [!CAUTION]\n>  When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and could cause an exception to be thrown.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following example demonstrates this constructor.  \n  \n [!code-csharp[System.IO.StreamWriter.ctor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.streamwriter.ctor/cs/program8.cs#8)]\n [!code-vb[System.IO.StreamWriter.ctor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.streamwriter.ctor/vb/program8.vb#8)]"
  syntax:
    content: public StreamWriter (string path, bool append, System.Text.Encoding encoding, int bufferSize);
    parameters:
    - id: path
      type: System.String
      description: The complete file path to write to.
    - id: append
      type: System.Boolean
      description: '`true` to append data to the file; `false` to overwrite the file. If the specified file does not exist, this parameter has no effect, and the constructor creates a new file.'
    - id: encoding
      type: System.Text.Encoding
      description: The character encoding to use.
    - id: bufferSize
      type: System.Int32
      description: The buffer size, in bytes.
  overload: System.IO.StreamWriter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>path</code> contains the name of a system device (com1, com2, and so on)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>path</code> or <code>encoding</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>bufferSize</code> is negative.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: <code>path</code> includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: The caller does not have the required permission.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: Access is denied.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: The specified path is invalid (for example, it is on an unmapped drive).
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must not exceed 248 characters, and file names must not exceed 260 characters.
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.AutoFlush
  commentId: P:System.IO.StreamWriter.AutoFlush
  id: AutoFlush
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: AutoFlush
  nameWithType: StreamWriter.AutoFlush
  fullName: StreamWriter.AutoFlush
  type: Property
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets or sets a value indicating whether the <xref href="System.IO.StreamWriter"></xref> will flush its buffer to the underlying stream after every call to <xref href="System.IO.StreamWriter.Write(System.Char)"></xref>.
  remarks: "Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \n  \n When `AutoFlush` is set to `false`, `StreamWriter` will do a limited amount of buffering, both internally and potentially in the encoder from the encoding you passed in. You can get better performance by setting `AutoFlush` to `false`, assuming that you always call `Close` (or at least `Flush`) when you're done writing with a `StreamWriter`.  \n  \n For example, set `AutoFlush` to `true` when you are writing to a device where the user expects immediate feedback. `Console.Out` is one of these cases: The `StreamWriter` used internally for writing to `Console` flushes all its internal state except the encoder state after every call to <xref:System.IO.StreamWriter.Write%2A?displayProperty=fullName>.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following example shows the syntax for using the `AutoFlush` property.  \n  \n [!code-cpp[System.IO.StreamWriter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#5)]\n [!code-csharp[System.IO.StreamWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#5)]\n [!code-vb[System.IO.StreamWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#5)]"
  syntax:
    content: public virtual bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: '`true` to force <xref href="System.IO.StreamWriter"></xref> to flush its buffer; otherwise, `false`.'
  overload: System.IO.StreamWriter.AutoFlush*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.BaseStream
  commentId: P:System.IO.StreamWriter.BaseStream
  id: BaseStream
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: BaseStream
  nameWithType: StreamWriter.BaseStream
  fullName: StreamWriter.BaseStream
  type: Property
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets the underlying stream that interfaces with a backing store.
  remarks: For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md).
  syntax:
    content: public virtual System.IO.Stream BaseStream { get; }
    return:
      type: System.IO.Stream
      description: The stream this `StreamWriter` is writing to.
  overload: System.IO.StreamWriter.BaseStream*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.Close
  commentId: M:System.IO.StreamWriter.Close
  id: Close
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: Close()
  nameWithType: StreamWriter.Close()
  fullName: StreamWriter.Close()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Closes the current `StreamWriter` object and the underlying stream.
  remarks: "This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=fullName>.  \n  \n This implementation of <xref:System.IO.StreamWriter.Close%2A> calls the <xref:System.IO.StreamWriter.Dispose%2A> method passing a `true` value.  \n  \n You must call <xref:System.IO.StreamWriter.Close%2A> to ensure that all data is correctly written out to the underlying stream. Following a call to <xref:System.IO.StreamWriter.Close%2A>, any operations on the <xref:System.IO.StreamWriter> might raise exceptions. If there is insufficient space on the disk, calling <xref:System.IO.StreamWriter.Close%2A> will raise an exception.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call <xref:System.IO.StreamWriter.Flush%2A> or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters."
  example:
  - "The following code example demonstrates the `Close` method.  \n  \n [!code-cpp[System.IO.StreamWriter#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#17)]\n [!code-csharp[System.IO.StreamWriter#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#17)]\n [!code-vb[System.IO.StreamWriter#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#17)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.IO.StreamWriter.Close*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: The current encoding does not support displaying half of a Unicode surrogate pair.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.Dispose(System.Boolean)
  commentId: M:System.IO.StreamWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: StreamWriter.Dispose(Boolean)
  fullName: StreamWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Releases the unmanaged resources used by the <xref href="System.IO.StreamWriter"></xref> and optionally releases the managed resources.
  remarks: When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StreamWriter> references. This method invokes the `Dispose` method of each referenced object.
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.IO.StreamWriter.Dispose*
  exceptions:
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: The current encoding does not support displaying half of a Unicode surrogate pair.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.Encoding
  commentId: P:System.IO.StreamWriter.Encoding
  id: Encoding
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: Encoding
  nameWithType: StreamWriter.Encoding
  fullName: StreamWriter.Encoding
  type: Property
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Gets the <xref href="System.Text.Encoding"></xref> in which the output is written.
  remarks: "This property is necessary for some XML scenarios where a header must be written containing the encoding used by the <xref:System.IO.StreamWriter>. This allows the XML code to consume an arbitrary <xref:System.IO.StreamWriter> and generate the correct XML header.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following example retrieves the encoding of the specified <xref:System.IO.StreamWriter> instance.  \n  \n [!code-cpp[System.IO.StreamWriter#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#11)]\n [!code-csharp[System.IO.StreamWriter#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#11)]\n [!code-vb[System.IO.StreamWriter#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#11)]"
  syntax:
    content: public override System.Text.Encoding Encoding { get; }
    return:
      type: System.Text.Encoding
      description: The <xref href="System.Text.Encoding"></xref> specified in the constructor for the current instance, or <xref href="System.Text.UTF8Encoding"></xref> if an encoding was not specified.
  overload: System.IO.StreamWriter.Encoding*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.Flush
  commentId: M:System.IO.StreamWriter.Flush
  id: Flush
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: Flush()
  nameWithType: StreamWriter.Flush()
  fullName: StreamWriter.Flush()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Clears all buffers for the current writer and causes any buffered data to be written to the underlying stream.
  remarks: "This method overrides <xref:System.IO.TextWriter.Flush%2A?displayProperty=fullName>.  \n  \n Flushing the stream will not flush its underlying encoder unless you explicitly call `Flush` or <xref:System.IO.StreamWriter.Close%2A>. Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream after each write operation, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.StreamWriter.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current writer is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error has occurred.
  - type: System.Text.EncoderFallbackException
    commentId: T:System.Text.EncoderFallbackException
    description: The current encoding does not support displaying half of a Unicode surrogate pair.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.FlushAsync
  commentId: M:System.IO.StreamWriter.FlushAsync
  id: FlushAsync
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: FlushAsync()
  nameWithType: StreamWriter.FlushAsync()
  fullName: StreamWriter.FlushAsync()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Clears all buffers for this stream asynchronously and causes any buffered data to be written to the underlying device.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override System.Threading.Tasks.Task FlushAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous flush operation.
  overload: System.IO.StreamWriter.FlushAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream has been disposed.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.Null
  commentId: F:System.IO.StreamWriter.Null
  id: "Null"
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: "Null"
  nameWithType: StreamWriter.Null
  fullName: StreamWriter.Null
  type: Field
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Provides a `StreamWriter` with no backing store that can be written to, but not read from.
  remarks: "Use `Null` to redirect output to a `StreamWriter` that will not consume any operating system resources.  \n  \n When the `StreamWriter.Write` methods are invoked on `Null`, the call simply returns, and no data is actually written to any backing store.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "The following example demonstrates a use of the `Null` field.  \n  \n [!code-cpp[System.IO.StreamWriter#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StreamWriter/CPP/logger.cpp#6)]\n [!code-csharp[System.IO.StreamWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/logger.cs#6)]\n [!code-vb[System.IO.StreamWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/logger.vb#6)]"
  syntax:
    content: public static readonly System.IO.StreamWriter Null;
    return:
      type: System.IO.StreamWriter
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.Write(System.Char)
  commentId: M:System.IO.StreamWriter.Write(System.Char)
  id: Write(System.Char)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: Write(Char)
  nameWithType: StreamWriter.Write(Char)
  fullName: StreamWriter.Write(Char)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character to the stream.
  remarks: "This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \n  \n The specified character is written to the underlying stream unless the end of the stream is reached prematurely. If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public override void Write (char value);
    parameters:
    - id: value
      type: System.Char
      description: The character to write to the stream.
  overload: System.IO.StreamWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: <xref href="System.IO.StreamWriter.AutoFlush"></xref> is true or the <xref href="System.IO.StreamWriter"></xref> buffer is full, and current writer is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <xref href="System.IO.StreamWriter.AutoFlush"></xref> is true or the <xref href="System.IO.StreamWriter"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href="System.IO.StreamWriter"></xref> is at the end the stream.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.Write(System.Char[])
  commentId: M:System.IO.StreamWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: Write(Char[])
  nameWithType: StreamWriter.Write(Char[])
  fullName: StreamWriter.Write(Char[])
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character array to the stream.
  remarks: "This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \n  \n The specified characters are written to the underlying stream unless the end of the stream is reached prematurely. If <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`, <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically.  \n  \n This method might provide faster performance than `Write` (`char[],``int,``int`) because it has fewer arguments to check.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public override void Write (char[] buffer);
    parameters:
    - id: buffer
      type: System.Char[]
      description: A character array containing the data to write. If <code>buffer</code> is `null`, nothing is written.
  overload: System.IO.StreamWriter.Write*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: <xref href="System.IO.StreamWriter.AutoFlush"></xref> is true or the <xref href="System.IO.StreamWriter"></xref> buffer is full, and current writer is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <xref href="System.IO.StreamWriter.AutoFlush"></xref> is true or the <xref href="System.IO.StreamWriter"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href="System.IO.StreamWriter"></xref> is at the end the stream.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.Write(System.String)
  commentId: M:System.IO.StreamWriter.Write(System.String)
  id: Write(System.String)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: Write(String)
  nameWithType: StreamWriter.Write(String)
  fullName: StreamWriter.Write(String)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a string to the stream.
  remarks: "This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \n  \n The specified <xref:System.String> is written to the underlying stream unless the end of the stream is reached prematurely.  \n  \n <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`. If `value` is `null`, no entries are written.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  syntax:
    content: public override void Write (string value);
    parameters:
    - id: value
      type: System.String
      description: The string to write to the stream. If <code>value</code> is null, nothing is written.
  overload: System.IO.StreamWriter.Write*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: <xref href="System.IO.StreamWriter.AutoFlush"></xref> is true or the <xref href="System.IO.StreamWriter"></xref> buffer is full, and current writer is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <xref href="System.IO.StreamWriter.AutoFlush"></xref> is true or the <xref href="System.IO.StreamWriter"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href="System.IO.StreamWriter"></xref> is at the end the stream.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)
  id: Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: Write(Char[], Int32, Int32)
  nameWithType: StreamWriter.Write(Char[], Int32, Int32)
  fullName: StreamWriter.Write(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a subarray of characters to the stream.
  remarks: "This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=fullName>.  \n  \n The characters are read from `buffer` beginning at `index` and continuing through `index` + (`count` - 1). All characters are written to the underlying stream unless the end of the underlying stream is reached prematurely. <xref:System.IO.StreamWriter.Flush%2A> is invoked automatically if <xref:System.IO.StreamWriter.AutoFlush%2A> is `true`.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/docs/standard/io/common-i-o-tasks.md)."
  example:
  - "This example writes eight characters from a 13-element array to a file, beginning at the third element of the array.  \n  \n [!code-cpp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic StreamWriter.Write2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/CS/source.cs#1)]\n [!code-vb[Classic StreamWriter.Write2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic StreamWriter.Write2 Example/VB/source.vb#1)]"
  syntax:
    content: public override void Write (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: A character array that contains the data to write.
    - id: index
      type: System.Int32
      description: The character position in the buffer at which to start reading data.
    - id: count
      type: System.Int32
      description: The maximum number of characters to write.
  overload: System.IO.StreamWriter.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The buffer length minus <code>index</code> is less than <code>count</code>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: <xref href="System.IO.StreamWriter.AutoFlush"></xref> is true or the <xref href="System.IO.StreamWriter"></xref> buffer is full, and current writer is closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <xref href="System.IO.StreamWriter.AutoFlush"></xref> is true or the <xref href="System.IO.StreamWriter"></xref> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <xref href="System.IO.StreamWriter"></xref> is at the end the stream.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.WriteAsync(System.Char)
  commentId: M:System.IO.StreamWriter.WriteAsync(System.Char)
  id: WriteAsync(System.Char)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: WriteAsync(Char)
  nameWithType: StreamWriter.WriteAsync(Char)
  fullName: StreamWriter.WriteAsync(Char)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character to the stream asynchronously.
  remarks: ''
  example:
  - "The following example shows how to write a single character (the letter \"a\") to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%29> method.  \n  \n [!code-csharp[System.IO.StreamWriter#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example20.cs#20)]\n [!code-vb[System.IO.StreamWriter#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example20.vb#20)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override System.Threading.Tasks.Task WriteAsync (char value);
    parameters:
    - id: value
      type: System.Char
      description: The character to write to the stream.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.StreamWriter.WriteAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.WriteAsync(System.String)
  commentId: M:System.IO.StreamWriter.WriteAsync(System.String)
  id: WriteAsync(System.String)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: WriteAsync(String)
  nameWithType: StreamWriter.WriteAsync(String)
  fullName: StreamWriter.WriteAsync(String)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a string to the stream asynchronously.
  remarks: ''
  example:
  - "The following example shows how to write a string to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.String%29> method.  \n  \n [!code-csharp[System.IO.StreamWriter#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example21.cs#21)]\n [!code-vb[System.IO.StreamWriter#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example21.vb#21)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override System.Threading.Tasks.Task WriteAsync (string value);
    parameters:
    - id: value
      type: System.String
      description: The string to write to the stream. If <code>value</code> is `null`, nothing is written.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.StreamWriter.WriteAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  id: WriteAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: WriteAsync(Char[], Int32, Int32)
  nameWithType: StreamWriter.WriteAsync(Char[], Int32, Int32)
  fullName: StreamWriter.WriteAsync(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a subarray of characters to the stream asynchronously.
  remarks: ''
  example:
  - "The following example shows how to write multiple characters to a text file by using the <xref:System.IO.StreamWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.  \n  \n [!code-csharp[System.IO.StreamWriter#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example24.cs#24)]\n [!code-vb[System.IO.StreamWriter#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example24.vb#24)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: A character array that contains the data to write.
    - id: index
      type: System.Int32
      description: The character position in the buffer at which to begin reading data.
    - id: count
      type: System.Int32
      description: The maximum number of characters to write.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.StreamWriter.WriteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>index</code> plus <code>count</code> is greater than the buffer length.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.WriteLineAsync
  commentId: M:System.IO.StreamWriter.WriteLineAsync
  id: WriteLineAsync
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: WriteLineAsync()
  nameWithType: StreamWriter.WriteLineAsync()
  fullName: StreamWriter.WriteLineAsync()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a line terminator asynchronously to the stream.
  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override System.Threading.Tasks.Task WriteLineAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.StreamWriter.WriteLineAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.WriteLineAsync(System.Char)
  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char)
  id: WriteLineAsync(System.Char)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: WriteLineAsync(Char)
  nameWithType: StreamWriter.WriteLineAsync(Char)
  fullName: StreamWriter.WriteLineAsync(Char)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a character followed by a line terminator asynchronously to the stream.
  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.
  example:
  - "The following example shows how to write a single character (the letter \"a\") to a line in a text file, followed by another line that contains a single character (the letter \"b\"), by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%29> method.  \n  \n [!code-csharp[System.IO.StreamWriter#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example22.cs#22)]\n [!code-vb[System.IO.StreamWriter#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example22.vb#22)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override System.Threading.Tasks.Task WriteLineAsync (char value);
    parameters:
    - id: value
      type: System.Char
      description: The character to write to the stream.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.StreamWriter.WriteLineAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.WriteLineAsync(System.String)
  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.String)
  id: WriteLineAsync(System.String)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: WriteLineAsync(String)
  nameWithType: StreamWriter.WriteLineAsync(String)
  fullName: StreamWriter.WriteLineAsync(String)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a string followed by a line terminator asynchronously to the stream.
  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.
  example:
  - "The following example shows how to write two lines that consist of string values to a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.String%29> method.  \n  \n [!code-csharp[System.IO.StreamWriter#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example23.cs#23)]\n [!code-vb[System.IO.StreamWriter#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example23.vb#23)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override System.Threading.Tasks.Task WriteLineAsync (string value);
    parameters:
    - id: value
      type: System.String
      description: The string to write. If the value is `null`, only a line terminator is written.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.StreamWriter.WriteLineAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  id: WriteLineAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StreamWriter
  langs:
  - csharp
  name: WriteLineAsync(Char[], Int32, Int32)
  nameWithType: StreamWriter.WriteLineAsync(Char[], Int32, Int32)
  fullName: StreamWriter.WriteLineAsync(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Writes a subarray of characters followed by a line terminator asynchronously to the stream.
  remarks: The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=fullName> property.
  example:
  - "The following example shows how to write characters to two separate lines in a text file by using the <xref:System.IO.StreamWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method. The first line contains the first 11 characters from the string (the letters \"First line\" followed by a space). The second line contains the remaining characters from the string (the letters \"and second line\").  \n  \n [!code-csharp[System.IO.StreamWriter#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamWriter/CS/example25.cs#25)]\n [!code-vb[System.IO.StreamWriter#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamWriter/VB/example25.vb#25)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The character array to write data from.
    - id: index
      type: System.Int32
      description: The character position in the buffer at which to start reading data.
    - id: count
      type: System.Int32
      description: The maximum number of characters to write.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
  overload: System.IO.StreamWriter.WriteLineAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>index</code> plus <code>count</code> is greater than the buffer length.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream writer is disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream writer is currently in use by a previous write operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: false
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  name: UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.IO.DirectoryNotFoundException
  parent: System.IO
  isExternal: false
  name: DirectoryNotFoundException
  nameWithType: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: System.IO.PathTooLongException
  parent: System.IO
  isExternal: false
  name: PathTooLongException
  nameWithType: PathTooLongException
  fullName: System.IO.PathTooLongException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.Security.SecurityException
  parent: System.Security
  isExternal: false
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Text.EncoderFallbackException
  parent: System.Text
  isExternal: false
  name: EncoderFallbackException
  nameWithType: EncoderFallbackException
  fullName: System.Text.EncoderFallbackException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream)
  parent: System.IO.StreamWriter
  isExternal: false
  name: StreamWriter(Stream)
  nameWithType: StreamWriter.StreamWriter(Stream)
  fullName: StreamWriter.StreamWriter(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.StreamWriter.#ctor(System.String)
  parent: System.IO.StreamWriter
  isExternal: false
  name: StreamWriter(String)
  nameWithType: StreamWriter.StreamWriter(String)
  fullName: StreamWriter.StreamWriter(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)
  parent: System.IO.StreamWriter
  isExternal: false
  name: StreamWriter(Stream, Encoding)
  nameWithType: StreamWriter.StreamWriter(Stream, Encoding)
  fullName: StreamWriter.StreamWriter(Stream, Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean)
  parent: System.IO.StreamWriter
  isExternal: false
  name: StreamWriter(String, Boolean)
  nameWithType: StreamWriter.StreamWriter(String, Boolean)
  fullName: StreamWriter.StreamWriter(String, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32)
  parent: System.IO.StreamWriter
  isExternal: false
  name: StreamWriter(Stream, Encoding, Int32)
  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32)
  fullName: StreamWriter.StreamWriter(Stream, Encoding, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)
  parent: System.IO.StreamWriter
  isExternal: false
  name: StreamWriter(String, Boolean, Encoding)
  nameWithType: StreamWriter.StreamWriter(String, Boolean, Encoding)
  fullName: StreamWriter.StreamWriter(String, Boolean, Encoding)
- uid: System.IO.StreamWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Int32,System.Boolean)
  parent: System.IO.StreamWriter
  isExternal: false
  name: StreamWriter(Stream, Encoding, Int32, Boolean)
  nameWithType: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)
  fullName: StreamWriter.StreamWriter(Stream, Encoding, Int32, Boolean)
- uid: System.IO.StreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding,System.Int32)
  parent: System.IO.StreamWriter
  isExternal: false
  name: StreamWriter(String, Boolean, Encoding, Int32)
  nameWithType: StreamWriter.StreamWriter(String, Boolean, Encoding, Int32)
  fullName: StreamWriter.StreamWriter(String, Boolean, Encoding, Int32)
- uid: System.IO.StreamWriter.AutoFlush
  parent: System.IO.StreamWriter
  isExternal: false
  name: AutoFlush
  nameWithType: StreamWriter.AutoFlush
  fullName: StreamWriter.AutoFlush
- uid: System.IO.StreamWriter.BaseStream
  parent: System.IO.StreamWriter
  isExternal: false
  name: BaseStream
  nameWithType: StreamWriter.BaseStream
  fullName: StreamWriter.BaseStream
- uid: System.IO.StreamWriter.Close
  parent: System.IO.StreamWriter
  isExternal: false
  name: Close()
  nameWithType: StreamWriter.Close()
  fullName: StreamWriter.Close()
- uid: System.IO.StreamWriter.Dispose(System.Boolean)
  parent: System.IO.StreamWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: StreamWriter.Dispose(Boolean)
  fullName: StreamWriter.Dispose(Boolean)
- uid: System.IO.StreamWriter.Encoding
  parent: System.IO.StreamWriter
  isExternal: false
  name: Encoding
  nameWithType: StreamWriter.Encoding
  fullName: StreamWriter.Encoding
- uid: System.IO.StreamWriter.Flush
  parent: System.IO.StreamWriter
  isExternal: false
  name: Flush()
  nameWithType: StreamWriter.Flush()
  fullName: StreamWriter.Flush()
- uid: System.IO.StreamWriter.FlushAsync
  parent: System.IO.StreamWriter
  isExternal: false
  name: FlushAsync()
  nameWithType: StreamWriter.FlushAsync()
  fullName: StreamWriter.FlushAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.StreamWriter.Null
  parent: System.IO.StreamWriter
  isExternal: false
  name: "Null"
  nameWithType: StreamWriter.Null
  fullName: StreamWriter.Null
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: false
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.StreamWriter.Write(System.Char)
  parent: System.IO.StreamWriter
  isExternal: false
  name: Write(Char)
  nameWithType: StreamWriter.Write(Char)
  fullName: StreamWriter.Write(Char)
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.IO.StreamWriter.Write(System.Char[])
  parent: System.IO.StreamWriter
  isExternal: false
  name: Write(Char[])
  nameWithType: StreamWriter.Write(Char[])
  fullName: StreamWriter.Write(Char[])
- uid: System.Char[]
  parent: System
  isExternal: false
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.StreamWriter.Write(System.String)
  parent: System.IO.StreamWriter
  isExternal: false
  name: Write(String)
  nameWithType: StreamWriter.Write(String)
  fullName: StreamWriter.Write(String)
- uid: System.IO.StreamWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StreamWriter
  isExternal: false
  name: Write(Char[], Int32, Int32)
  nameWithType: StreamWriter.Write(Char[], Int32, Int32)
  fullName: StreamWriter.Write(Char[], Int32, Int32)
- uid: System.IO.StreamWriter.WriteAsync(System.Char)
  parent: System.IO.StreamWriter
  isExternal: false
  name: WriteAsync(Char)
  nameWithType: StreamWriter.WriteAsync(Char)
  fullName: StreamWriter.WriteAsync(Char)
- uid: System.IO.StreamWriter.WriteAsync(System.String)
  parent: System.IO.StreamWriter
  isExternal: false
  name: WriteAsync(String)
  nameWithType: StreamWriter.WriteAsync(String)
  fullName: StreamWriter.WriteAsync(String)
- uid: System.IO.StreamWriter.WriteAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StreamWriter
  isExternal: false
  name: WriteAsync(Char[], Int32, Int32)
  nameWithType: StreamWriter.WriteAsync(Char[], Int32, Int32)
  fullName: StreamWriter.WriteAsync(Char[], Int32, Int32)
- uid: System.IO.StreamWriter.WriteLineAsync
  parent: System.IO.StreamWriter
  isExternal: false
  name: WriteLineAsync()
  nameWithType: StreamWriter.WriteLineAsync()
  fullName: StreamWriter.WriteLineAsync()
- uid: System.IO.StreamWriter.WriteLineAsync(System.Char)
  parent: System.IO.StreamWriter
  isExternal: false
  name: WriteLineAsync(Char)
  nameWithType: StreamWriter.WriteLineAsync(Char)
  fullName: StreamWriter.WriteLineAsync(Char)
- uid: System.IO.StreamWriter.WriteLineAsync(System.String)
  parent: System.IO.StreamWriter
  isExternal: false
  name: WriteLineAsync(String)
  nameWithType: StreamWriter.WriteLineAsync(String)
  fullName: StreamWriter.WriteLineAsync(String)
- uid: System.IO.StreamWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.StreamWriter
  isExternal: false
  name: WriteLineAsync(Char[], Int32, Int32)
  nameWithType: StreamWriter.WriteLineAsync(Char[], Int32, Int32)
  fullName: StreamWriter.WriteLineAsync(Char[], Int32, Int32)
- uid: System.IO.StreamWriter.#ctor*
  parent: System.IO.StreamWriter
  isExternal: false
  name: StreamWriter
  nameWithType: StreamWriter.StreamWriter
  fullName: StreamWriter.StreamWriter
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.AutoFlush*
  parent: System.IO.StreamWriter
  isExternal: false
  name: AutoFlush
  nameWithType: StreamWriter.AutoFlush
  fullName: StreamWriter.AutoFlush
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.BaseStream*
  parent: System.IO.StreamWriter
  isExternal: false
  name: BaseStream
  nameWithType: StreamWriter.BaseStream
  fullName: StreamWriter.BaseStream
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.Close*
  parent: System.IO.StreamWriter
  isExternal: false
  name: Close
  nameWithType: StreamWriter.Close
  fullName: StreamWriter.Close
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.Dispose*
  parent: System.IO.StreamWriter
  isExternal: false
  name: Dispose
  nameWithType: StreamWriter.Dispose
  fullName: StreamWriter.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.Encoding*
  parent: System.IO.StreamWriter
  isExternal: false
  name: Encoding
  nameWithType: StreamWriter.Encoding
  fullName: StreamWriter.Encoding
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.Flush*
  parent: System.IO.StreamWriter
  isExternal: false
  name: Flush
  nameWithType: StreamWriter.Flush
  fullName: StreamWriter.Flush
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.FlushAsync*
  parent: System.IO.StreamWriter
  isExternal: false
  name: FlushAsync
  nameWithType: StreamWriter.FlushAsync
  fullName: StreamWriter.FlushAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.Write*
  parent: System.IO.StreamWriter
  isExternal: false
  name: Write
  nameWithType: StreamWriter.Write
  fullName: StreamWriter.Write
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.WriteAsync*
  parent: System.IO.StreamWriter
  isExternal: false
  name: WriteAsync
  nameWithType: StreamWriter.WriteAsync
  fullName: StreamWriter.WriteAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.IO.StreamWriter.WriteLineAsync*
  parent: System.IO.StreamWriter
  isExternal: false
  name: WriteLineAsync
  nameWithType: StreamWriter.WriteLineAsync
  fullName: StreamWriter.WriteLineAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/StreamWriter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IO.TextWriter.CoreNewLine
  parent: System.IO.TextWriter
  isExternal: false
  name: CoreNewLine
  nameWithType: TextWriter.CoreNewLine
  fullName: TextWriter.CoreNewLine
- uid: System.IO.TextWriter.Dispose
  parent: System.IO.TextWriter
  isExternal: false
  name: Dispose()
  nameWithType: TextWriter.Dispose()
  fullName: TextWriter.Dispose()
- uid: System.IO.TextWriter.FormatProvider
  parent: System.IO.TextWriter
  isExternal: false
  name: FormatProvider
  nameWithType: TextWriter.FormatProvider
  fullName: TextWriter.FormatProvider
- uid: System.IO.TextWriter.NewLine
  parent: System.IO.TextWriter
  isExternal: false
  name: NewLine
  nameWithType: TextWriter.NewLine
  fullName: TextWriter.NewLine
- uid: System.IO.TextWriter.Synchronized(System.IO.TextWriter)
  parent: System.IO.TextWriter
  isExternal: false
  name: Synchronized(TextWriter)
  nameWithType: TextWriter.Synchronized(TextWriter)
  fullName: TextWriter.Synchronized(TextWriter)
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(String, Object, Object, Object)
  nameWithType: TextWriter.Write(String, Object, Object, Object)
  fullName: TextWriter.Write(String, Object, Object, Object)
- uid: System.IO.TextWriter.Write(System.String,System.Object[])
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(String, Object[])
  nameWithType: TextWriter.Write(String, Object[])
  fullName: TextWriter.Write(String, Object[])
- uid: System.IO.TextWriter.Write(System.String,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(String, Object)
  nameWithType: TextWriter.Write(String, Object)
  fullName: TextWriter.Write(String, Object)
- uid: System.IO.TextWriter.Write(System.UInt64)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(UInt64)
  nameWithType: TextWriter.Write(UInt64)
  fullName: TextWriter.Write(UInt64)
- uid: System.IO.TextWriter.Write(System.UInt32)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(UInt32)
  nameWithType: TextWriter.Write(UInt32)
  fullName: TextWriter.Write(UInt32)
- uid: System.IO.TextWriter.Write(System.Single)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Single)
  nameWithType: TextWriter.Write(Single)
  fullName: TextWriter.Write(Single)
- uid: System.IO.TextWriter.Write(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(String, Object, Object)
  nameWithType: TextWriter.Write(String, Object, Object)
  fullName: TextWriter.Write(String, Object, Object)
- uid: System.IO.TextWriter.Write(System.Int64)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Int64)
  nameWithType: TextWriter.Write(Int64)
  fullName: TextWriter.Write(Int64)
- uid: System.IO.TextWriter.Write(System.Int32)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Int32)
  nameWithType: TextWriter.Write(Int32)
  fullName: TextWriter.Write(Int32)
- uid: System.IO.TextWriter.Write(System.Double)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Double)
  nameWithType: TextWriter.Write(Double)
  fullName: TextWriter.Write(Double)
- uid: System.IO.TextWriter.Write(System.Decimal)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Decimal)
  nameWithType: TextWriter.Write(Decimal)
  fullName: TextWriter.Write(Decimal)
- uid: System.IO.TextWriter.Write(System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Object)
  nameWithType: TextWriter.Write(Object)
  fullName: TextWriter.Write(Object)
- uid: System.IO.TextWriter.Write(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: false
  name: Write(Boolean)
  nameWithType: TextWriter.Write(Boolean)
  fullName: TextWriter.Write(Boolean)
- uid: System.IO.TextWriter.WriteAsync(System.Char[])
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteAsync(Char[])
  nameWithType: TextWriter.WriteAsync(Char[])
  fullName: TextWriter.WriteAsync(Char[])
- uid: System.IO.TextWriter.WriteLine(System.String)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String)
  nameWithType: TextWriter.WriteLine(String)
  fullName: TextWriter.WriteLine(String)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String, Object, Object)
  nameWithType: TextWriter.WriteLine(String, Object, Object)
  fullName: TextWriter.WriteLine(String, Object, Object)
- uid: System.IO.TextWriter.WriteLine(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Char[], Int32, Int32)
  nameWithType: TextWriter.WriteLine(Char[], Int32, Int32)
  fullName: TextWriter.WriteLine(Char[], Int32, Int32)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object[])
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String, Object[])
  nameWithType: TextWriter.WriteLine(String, Object[])
  fullName: TextWriter.WriteLine(String, Object[])
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String, Object)
  nameWithType: TextWriter.WriteLine(String, Object)
  fullName: TextWriter.WriteLine(String, Object)
- uid: System.IO.TextWriter.WriteLine(System.UInt64)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(UInt64)
  nameWithType: TextWriter.WriteLine(UInt64)
  fullName: TextWriter.WriteLine(UInt64)
- uid: System.IO.TextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(String, Object, Object, Object)
  nameWithType: TextWriter.WriteLine(String, Object, Object, Object)
  fullName: TextWriter.WriteLine(String, Object, Object, Object)
- uid: System.IO.TextWriter.WriteLine(System.UInt32)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(UInt32)
  nameWithType: TextWriter.WriteLine(UInt32)
  fullName: TextWriter.WriteLine(UInt32)
- uid: System.IO.TextWriter.WriteLine(System.Single)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Single)
  nameWithType: TextWriter.WriteLine(Single)
  fullName: TextWriter.WriteLine(Single)
- uid: System.IO.TextWriter.WriteLine(System.Double)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Double)
  nameWithType: TextWriter.WriteLine(Double)
  fullName: TextWriter.WriteLine(Double)
- uid: System.IO.TextWriter.WriteLine(System.Int64)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Int64)
  nameWithType: TextWriter.WriteLine(Int64)
  fullName: TextWriter.WriteLine(Int64)
- uid: System.IO.TextWriter.WriteLine(System.Int32)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Int32)
  nameWithType: TextWriter.WriteLine(Int32)
  fullName: TextWriter.WriteLine(Int32)
- uid: System.IO.TextWriter.WriteLine(System.Decimal)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Decimal)
  nameWithType: TextWriter.WriteLine(Decimal)
  fullName: TextWriter.WriteLine(Decimal)
- uid: System.IO.TextWriter.WriteLine(System.Char[])
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Char[])
  nameWithType: TextWriter.WriteLine(Char[])
  fullName: TextWriter.WriteLine(Char[])
- uid: System.IO.TextWriter.WriteLine(System.Char)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Char)
  nameWithType: TextWriter.WriteLine(Char)
  fullName: TextWriter.WriteLine(Char)
- uid: System.IO.TextWriter.WriteLine(System.Boolean)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Boolean)
  nameWithType: TextWriter.WriteLine(Boolean)
  fullName: TextWriter.WriteLine(Boolean)
- uid: System.IO.TextWriter.WriteLine
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine()
  nameWithType: TextWriter.WriteLine()
  fullName: TextWriter.WriteLine()
- uid: System.IO.TextWriter.WriteLine(System.Object)
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLine(Object)
  nameWithType: TextWriter.WriteLine(Object)
  fullName: TextWriter.WriteLine(Object)
- uid: System.IO.TextWriter.WriteLineAsync(System.Char[])
  parent: System.IO.TextWriter
  isExternal: false
  name: WriteLineAsync(Char[])
  nameWithType: TextWriter.WriteLineAsync(Char[])
  fullName: TextWriter.WriteLineAsync(Char[])
