### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  commentId: T:System.DirectoryServices.ActiveDirectory.DomainController
  id: DomainController
  children:
  - System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  - System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  - System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  - System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.DomainController.Domain
  - System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  - System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  - System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.DomainController.Forest
  - System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  - System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  - System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  - System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  - System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  - System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  - System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  - System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  - System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  - System.DirectoryServices.ActiveDirectory.DomainController.Roles
  - System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  - System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  - System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  - System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  - System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  - System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  langs:
  - csharp
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
  type: Class
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: The <xref href="System.DirectoryServices.ActiveDirectory.DomainController"></xref> class represents a domain controller in an Active Directory domain.
  syntax:
    content: 'public class DomainController : System.DirectoryServices.ActiveDirectory.DirectoryServer'
  inheritance:
  - System.Object
  - System.DirectoryServices.ActiveDirectory.DirectoryServer
  derivedClasses:
  - System.DirectoryServices.ActiveDirectory.GlobalCatalog
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Name
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: DomainController()
  nameWithType: DomainController.DomainController()
  fullName: DomainController.DomainController()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Initializes a new instance of the <xref href="System.DirectoryServices.ActiveDirectory.DomainController"></xref> class.
  syntax:
    content: protected DomainController ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.DomainController.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  id: CheckReplicationConsistency
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: CheckReplicationConsistency()
  nameWithType: DomainController.CheckReplicationConsistency()
  fullName: DomainController.CheckReplicationConsistency()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Uses the Knowledge Consistency Checker (KCC) to verify the replication topology for this domain controller.
  syntax:
    content: public override void CheckReplicationConsistency ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  id: CurrentTime
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: CurrentTime
  nameWithType: DomainController.CurrentTime
  fullName: DomainController.CurrentTime
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the current date and time from this domain controller.
  syntax:
    content: public DateTime CurrentTime { get; }
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> object that contains the current date and time from this domain controller.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DomainController.Dispose(Boolean)
  fullName: DomainController.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Causes the object to release all managed and/or unmanaged resources.
  remarks: The `disposing` parameter affects only the release of the managed resources. The unmanaged resources are always released by this method.
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: Determines if the managed resources should be released. `true` if the managed resources are released; otherwise, `false`.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Dispose*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.Domain
  id: Domain
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Domain
  nameWithType: DomainController.Domain
  fullName: DomainController.Domain
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the domain that this domain controller is a member of.
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Domain Domain { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: A <xref href="System.DirectoryServices.ActiveDirectory.Domain"></xref> object that represents the domain that this domain controller is a member of.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Domain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  id: EnableGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: EnableGlobalCatalog()
  nameWithType: DomainController.EnableGlobalCatalog()
  fullName: DomainController.EnableGlobalCatalog()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Promotes this domain controller to a global catalog server.
  remarks: The <xref:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog%2A?displayProperty=fullName> method is used to demote the domain controller from a global catalog server.
  syntax:
    content: public virtual System.DirectoryServices.ActiveDirectory.GlobalCatalog EnableGlobalCatalog ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: A <xref href="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></xref> object that represents the global catalog server.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  id: Finalize
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Finalize()
  nameWithType: DomainController.Finalize()
  fullName: DomainController.Finalize()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Overrides the <xref href="System.Object.Finalize"></xref> method.
  syntax:
    content: ~DomainController ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Finalize*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindAll(DirectoryContext, String)
  nameWithType: DomainController.FindAll(DirectoryContext, String)
  fullName: DomainController.FindAll(DirectoryContext, String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Finds all domain controllers in the specified context and site.
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that contains the target and credentials to use for the search.
    - id: siteName
      type: System.String
      description: The name of the site to search for domain controllers.
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></xref> object that contains the domain controllers that were found by the search.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> or <code>siteName</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindAll(DirectoryContext)
  nameWithType: DomainController.FindAll(DirectoryContext)
  fullName: DomainController.FindAll(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Finds all domain controllers in the specified context.
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that contains the target and credentials to use for the search. The target of this <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object is the name of the domain that will be searched for domain controllers.
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></xref> object that contains the domain controllers found by the search.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>context</code> is not valid.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext)
  nameWithType: DomainController.FindOne(DirectoryContext)
  fullName: DomainController.FindOne(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Finds a single domain controller in the specified context.
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that contains the target and credentials to use for the search.
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DomainController"></xref> object that represents the domain controller that was found by the search.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: No domain controller was found.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext, LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext, LocatorOptions)
  fullName: DomainController.FindOne(DirectoryContext, LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Finds a single domain controller in the specified context, allowing for additional search options.
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that contains the target and credentials to use for the search.
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: A combination of one or more of the <xref href="System.DirectoryServices.ActiveDirectory.LocatorOptions"></xref> members that defines the type of domain controller to find.
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DomainController"></xref> object that represents the domain controller that was found by the search.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: No domain controller was found.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>context</code> or <code>flag</code> is not valid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext, String)
  nameWithType: DomainController.FindOne(DirectoryContext, String)
  fullName: DomainController.FindOne(DirectoryContext, String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Finds a single domain controller in the specified context and site.
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that contains the target and credentials to use for the search.
    - id: siteName
      type: System.String
      description: The name of the site to search for a domain controller.
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DomainController"></xref> object that represents the domain controller that was found by the search.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: No domain controller was found.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>context</code> or <code>siteName</code> is not valid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> or <code>siteName</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext, String, LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext, String, LocatorOptions)
  fullName: DomainController.FindOne(DirectoryContext, String, LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Finds a single domain controller in the specified context and site, allowing for additional search options.
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that contains the target and credentials to use for the search.
    - id: siteName
      type: System.String
      description: The name of the site to search for a domain controller.
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: A combination of one or more of the <xref href="System.DirectoryServices.ActiveDirectory.LocatorOptions"></xref> members that defines the type of domain controller to find.
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DomainController"></xref> object that represents the domain controller that was found by the search.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: No domain controller was found.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>context</code>, <code>siteName</code>, or <code>flag</code> is not valid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> or <code>siteName</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.Forest
  id: Forest
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Forest
  nameWithType: DomainController.Forest
  fullName: DomainController.Forest
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the forest that this domain controller is a member of.
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: A <xref href="System.DirectoryServices.ActiveDirectory.Forest"></xref> object that represents the forest that this domain controller is a member of.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Forest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  id: GetAllReplicationNeighbors
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetAllReplicationNeighbors()
  nameWithType: DomainController.GetAllReplicationNeighbors()
  fullName: DomainController.GetAllReplicationNeighbors()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Retrieves the replication neighbors for this domain controller.
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
      description: A <xref href="System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection"></xref> object that contains the replication neighbors for this domain controller.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  id: GetDirectorySearcher
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetDirectorySearcher()
  nameWithType: DomainController.GetDirectorySearcher()
  fullName: DomainController.GetDirectorySearcher()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Retrieves a <xref href="System.DirectoryServices.DirectorySearcher"></xref> object for the domain controller.
  syntax:
    content: public virtual System.DirectoryServices.DirectorySearcher GetDirectorySearcher ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectorySearcher
      description: A <xref href="System.DirectoryServices.DirectorySearcher"></xref> object for the domain controller.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetDomainController(DirectoryContext)
  nameWithType: DomainController.GetDomainController(DirectoryContext)
  fullName: DomainController.GetDomainController(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Retrieves a <xref href="System.DirectoryServices.ActiveDirectory.DomainController"></xref> object for the specified context.
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController GetDomainController (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DirectoryContext"></xref> object that contains the target and credentials to use to retrieve the object. The target of this context must be a domain controller.
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: A <xref href="System.DirectoryServices.ActiveDirectory.DomainController"></xref> object that represents the domain controller that was found.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: A connection to the target specified in <code>context</code> could not be made.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>context</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>context</code> is not valid.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  id: GetReplicationConnectionFailures
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationConnectionFailures()
  nameWithType: DomainController.GetReplicationConnectionFailures()
  fullName: DomainController.GetReplicationConnectionFailures()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Retrieves a list of the replication connection failures recorded by this domain controller.
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection
      description: A <xref href="System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection"></xref> object that contains the replication connection failures that were recorded by this domain controller.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  id: GetReplicationCursors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationCursors(String)
  nameWithType: DomainController.GetReplicationCursors(String)
  fullName: DomainController.GetReplicationCursors(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Retrieves the replication cursor information for the specified partition.
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors (string partition);
    parameters:
    - id: partition
      type: System.String
      description: The distinguished name of the partition for which to retrieve the replication cursor information.
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection
      description: A <xref href="System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection"></xref> that contains the replication cursor information.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>partition</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>partition</code> is an empty string.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  id: GetReplicationMetadata(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationMetadata(String)
  nameWithType: DomainController.GetReplicationMetadata(String)
  fullName: DomainController.GetReplicationMetadata(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Retrieves the replication metadata for a specific Active Directory Domain Services object.
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata (string objectPath);
    parameters:
    - id: objectPath
      type: System.String
      description: The path to the object for which to retrieve the replication metadata.
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata
      description: A <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata"></xref> object that contains the replication metadata for the specified object.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>objectPath</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>objectPath</code> is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  id: GetReplicationNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationNeighbors(String)
  nameWithType: DomainController.GetReplicationNeighbors(String)
  fullName: DomainController.GetReplicationNeighbors(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Retrieves the replication neighbors for the specified partition.
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors (string partition);
    parameters:
    - id: partition
      type: System.String
      description: The distinguished name of the partition for which to retrieve the replication neighbors.
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
      description: A <xref href="System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection"></xref> object that contains the replication neighbors for this object.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>partition</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>partition</code> is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  id: GetReplicationOperationInformation
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationOperationInformation()
  nameWithType: DomainController.GetReplicationOperationInformation()
  fullName: DomainController.GetReplicationOperationInformation()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Retrieves the current and pending replication operations for this domain controller.
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation
      description: A <xref href="System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation"></xref> object that contains the current and pending replication operations.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  id: HighestCommittedUsn
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: HighestCommittedUsn
  nameWithType: DomainController.HighestCommittedUsn
  fullName: DomainController.HighestCommittedUsn
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the highest update sequence number that has been committed to this domain controller.
  syntax:
    content: public long HighestCommittedUsn { get; }
    return:
      type: System.Int64
      description: The highest update sequence number (USN) that has been committed to this domain controller.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  id: InboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: InboundConnections
  nameWithType: DomainController.InboundConnections
  fullName: DomainController.InboundConnections
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the inbound replication connections for this domain controller.
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
      description: A <xref href="System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection"></xref> object that contains the inbound replication connections for this domain controller.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  id: IPAddress
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: IPAddress
  nameWithType: DomainController.IPAddress
  fullName: DomainController.IPAddress
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the IP address of this domain controller.
  syntax:
    content: public override string IPAddress { get; }
    return:
      type: System.String
      description: The Internet protocol (IP) address of this domain controller in string form.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  id: IsGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: IsGlobalCatalog()
  nameWithType: DomainController.IsGlobalCatalog()
  fullName: DomainController.IsGlobalCatalog()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Determines if this domain controller is a global catalog server.
  syntax:
    content: public virtual bool IsGlobalCatalog ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if this domain controller is a global catalog server or `false` otherwise.'
  overload: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  id: OSVersion
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: OSVersion
  nameWithType: DomainController.OSVersion
  fullName: DomainController.OSVersion
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the operating system version of this domain controller.
  syntax:
    content: public string OSVersion { get; }
    return:
      type: System.String
      description: The version of the operating system that is in use on this domain controller.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  id: OutboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: OutboundConnections
  nameWithType: DomainController.OutboundConnections
  fullName: DomainController.OutboundConnections
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the outbound replication connections for this domain controller.
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
      description: A <xref href="System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection"></xref> object that contains the outbound replication connections for this domain controller.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.Roles
  id: Roles
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Roles
  nameWithType: DomainController.Roles
  fullName: DomainController.Roles
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the roles that this domain controller serves.
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection Roles { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection
      description: A <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection"></xref> object that contains a collection of <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></xref> members that indicate the roles that this domain controller serves.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.Roles*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  id: SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SeizeRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
  fullName: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Causes this domain controller to take ownership of the specified role.
  remarks: This method is a destructive operation because it causes the role to be taken without the cooperation of the server that currently holds the role. The <xref:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership%2A?displayProperty=fullName> method should be used instead whenever possible.
  syntax:
    content: public void SeizeRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
      description: One of the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></xref> members that specifies which role the domain controller should take ownership of.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: <code>role</code> is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  id: SiteName
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SiteName
  nameWithType: DomainController.SiteName
  fullName: DomainController.SiteName
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets the name of the site that this domain controller belongs to.
  syntax:
    content: public override string SiteName { get; }
    return:
      type: System.String
      description: The name of the site that this domain controller belongs to.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SiteName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: The site name was not found.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  commentId: P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  id: SyncFromAllServersCallback
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SyncFromAllServersCallback
  nameWithType: DomainController.SyncFromAllServersCallback
  fullName: DomainController.SyncFromAllServersCallback
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Gets or sets the synchronization delegate for this domain controller.
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback { get; set; }
    return:
      type: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback
      description: A <xref href="System.DirectoryServices.ActiveDirectory.SyncUpdateCallback"></xref> delegate that will be used for synchronization notifications.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  id: SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SyncReplicaFromAllServers(String, SyncFromAllServersOptions)
  nameWithType: DomainController.SyncReplicaFromAllServers(String, SyncFromAllServersOptions)
  fullName: DomainController.SyncReplicaFromAllServers(String, SyncFromAllServersOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Causes this domain controller to synchronize the specified partition with all other domain controllers.
  remarks: By default, the replication will only occur with the other domain controllers in the same site. If the `options` parameter contains the <xref:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite> value, then the replication will occur with all domain controllers in the forest.
  syntax:
    content: public override void SyncReplicaFromAllServers (string partition, System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options);
    parameters:
    - id: partition
      type: System.String
      description: The distinguished name of the partition for the domain controller to synchronize.
    - id: options
      type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions
      description: A combination of one or more of the <xref href="System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions"></xref> members.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>partition</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>partition</code> is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  - type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException
    description: An error occurred in the synchronization operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  id: SyncReplicaFromServer(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SyncReplicaFromServer(String, String)
  nameWithType: DomainController.SyncReplicaFromServer(String, String)
  fullName: DomainController.SyncReplicaFromServer(String, String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Causes this domain controller to synchronize the specified partition with the specified domain controller.
  syntax:
    content: public override void SyncReplicaFromServer (string partition, string sourceServer);
    parameters:
    - id: partition
      type: System.String
      description: The distinguished name of the partition with which to synchronize the domain controller.
    - id: sourceServer
      type: System.String
      description: The name of the server with which to synchronize the partition.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>partition</code> or <code>sourceServer</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>partition</code> or <code>sourceServer</code> is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  id: TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: TransferRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.TransferRoleOwnership(ActiveDirectoryRole)
  fullName: DomainController.TransferRoleOwnership(ActiveDirectoryRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Causes ownership of the specified role to be transferred to this domain controller.
  syntax:
    content: public void TransferRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
      description: One of the <xref href="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></xref> members that specifies which role will be transferred to this domain controller.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: <code>role</code> is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  commentId: M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  id: TriggerSyncReplicaFromNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: TriggerSyncReplicaFromNeighbors(String)
  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors(String)
  fullName: DomainController.TriggerSyncReplicaFromNeighbors(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: Begins a synchronization of the specified partition.
  syntax:
    content: public override void TriggerSyncReplicaFromNeighbors (string partition);
    parameters:
    - id: partition
      type: System.String
      description: The distinguished name of the partition to synchronize.
  overload: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: A call to the underlying directory service resulted in an error.
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: The target server is either busy or unavailable.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>partition</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>partition</code> is not valid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The current object has been disposed.
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: The specified account does not have permission to perform this operation.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
  author: BrucePerlerMS
  ms.author: bruceper
  manager: mbaldwin
references:
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryServer
  nameWithType: DirectoryServer
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryServerDownException
  nameWithType: ActiveDirectoryServerDownException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  parent: System
  isExternal: false
  name: UnauthorizedAccessException
  nameWithType: UnauthorizedAccessException
  fullName: System.UnauthorizedAccessException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SyncFromAllServersOperationException
  nameWithType: SyncFromAllServersOperationException
  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException
- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: DomainController()
  nameWithType: DomainController.DomainController()
  fullName: DomainController.DomainController()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CheckReplicationConsistency()
  nameWithType: DomainController.CheckReplicationConsistency()
  fullName: DomainController.CheckReplicationConsistency()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CurrentTime
  nameWithType: DomainController.CurrentTime
  fullName: DomainController.CurrentTime
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DomainController.Dispose(Boolean)
  fullName: DomainController.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Domain
  nameWithType: DomainController.Domain
  fullName: DomainController.Domain
- uid: System.DirectoryServices.ActiveDirectory.Domain
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: EnableGlobalCatalog()
  nameWithType: DomainController.EnableGlobalCatalog()
  fullName: DomainController.EnableGlobalCatalog()
- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: GlobalCatalog
  nameWithType: GlobalCatalog
  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Finalize()
  nameWithType: DomainController.Finalize()
  fullName: DomainController.Finalize()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindAll(DirectoryContext, String)
  nameWithType: DomainController.FindAll(DirectoryContext, String)
  fullName: DomainController.FindAll(DirectoryContext, String)
- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainControllerCollection
  nameWithType: DomainControllerCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindAll(DirectoryContext)
  nameWithType: DomainController.FindAll(DirectoryContext)
  fullName: DomainController.FindAll(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext)
  nameWithType: DomainController.FindOne(DirectoryContext)
  fullName: DomainController.FindOne(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext, LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext, LocatorOptions)
  fullName: DomainController.FindOne(DirectoryContext, LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: LocatorOptions
  nameWithType: LocatorOptions
  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext, String)
  nameWithType: DomainController.FindOne(DirectoryContext, String)
  fullName: DomainController.FindOne(DirectoryContext, String)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext, String, LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext, String, LocatorOptions)
  fullName: DomainController.FindOne(DirectoryContext, String, LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Forest
  nameWithType: DomainController.Forest
  fullName: DomainController.Forest
- uid: System.DirectoryServices.ActiveDirectory.Forest
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetAllReplicationNeighbors()
  nameWithType: DomainController.GetAllReplicationNeighbors()
  fullName: DomainController.GetAllReplicationNeighbors()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationNeighborCollection
  nameWithType: ReplicationNeighborCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDirectorySearcher()
  nameWithType: DomainController.GetDirectorySearcher()
  fullName: DomainController.GetDirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDomainController(DirectoryContext)
  nameWithType: DomainController.GetDomainController(DirectoryContext)
  fullName: DomainController.GetDomainController(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationConnectionFailures()
  nameWithType: DomainController.GetReplicationConnectionFailures()
  fullName: DomainController.GetReplicationConnectionFailures()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationFailureCollection
  nameWithType: ReplicationFailureCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationCursors(String)
  nameWithType: DomainController.GetReplicationCursors(String)
  fullName: DomainController.GetReplicationCursors(String)
- uid: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationCursorCollection
  nameWithType: ReplicationCursorCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationMetadata(String)
  nameWithType: DomainController.GetReplicationMetadata(String)
  fullName: DomainController.GetReplicationMetadata(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryReplicationMetadata
  nameWithType: ActiveDirectoryReplicationMetadata
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationNeighbors(String)
  nameWithType: DomainController.GetReplicationNeighbors(String)
  fullName: DomainController.GetReplicationNeighbors(String)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationOperationInformation()
  nameWithType: DomainController.GetReplicationOperationInformation()
  fullName: DomainController.GetReplicationOperationInformation()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationOperationInformation
  nameWithType: ReplicationOperationInformation
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation
- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: HighestCommittedUsn
  nameWithType: DomainController.HighestCommittedUsn
  fullName: DomainController.HighestCommittedUsn
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: InboundConnections
  nameWithType: DomainController.InboundConnections
  fullName: DomainController.InboundConnections
- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationConnectionCollection
  nameWithType: ReplicationConnectionCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IPAddress
  nameWithType: DomainController.IPAddress
  fullName: DomainController.IPAddress
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IsGlobalCatalog()
  nameWithType: DomainController.IsGlobalCatalog()
  fullName: DomainController.IsGlobalCatalog()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OSVersion
  nameWithType: DomainController.OSVersion
  fullName: DomainController.OSVersion
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OutboundConnections
  nameWithType: DomainController.OutboundConnections
  fullName: DomainController.OutboundConnections
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Roles
  nameWithType: DomainController.Roles
  fullName: DomainController.Roles
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryRoleCollection
  nameWithType: ActiveDirectoryRoleCollection
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SeizeRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
  fullName: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SiteName
  nameWithType: DomainController.SiteName
  fullName: DomainController.SiteName
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncFromAllServersCallback
  nameWithType: DomainController.SyncFromAllServersCallback
  fullName: DomainController.SyncFromAllServersCallback
- uid: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SyncUpdateCallback
  nameWithType: SyncUpdateCallback
  fullName: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromAllServers(String, SyncFromAllServersOptions)
  nameWithType: DomainController.SyncReplicaFromAllServers(String, SyncFromAllServersOptions)
  fullName: DomainController.SyncReplicaFromAllServers(String, SyncFromAllServersOptions)
- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SyncFromAllServersOptions
  nameWithType: SyncFromAllServersOptions
  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromServer(String, String)
  nameWithType: DomainController.SyncReplicaFromServer(String, String)
  fullName: DomainController.SyncReplicaFromServer(String, String)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TransferRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.TransferRoleOwnership(ActiveDirectoryRole)
  fullName: DomainController.TransferRoleOwnership(ActiveDirectoryRole)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TriggerSyncReplicaFromNeighbors(String)
  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors(String)
  fullName: DomainController.TriggerSyncReplicaFromNeighbors(String)
- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: DomainController
  nameWithType: DomainController.DomainController
  fullName: DomainController.DomainController
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CheckReplicationConsistency
  nameWithType: DomainController.CheckReplicationConsistency
  fullName: DomainController.CheckReplicationConsistency
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CurrentTime
  nameWithType: DomainController.CurrentTime
  fullName: DomainController.CurrentTime
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Dispose
  nameWithType: DomainController.Dispose
  fullName: DomainController.Dispose
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Domain
  nameWithType: DomainController.Domain
  fullName: DomainController.Domain
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: EnableGlobalCatalog
  nameWithType: DomainController.EnableGlobalCatalog
  fullName: DomainController.EnableGlobalCatalog
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Finalize
  nameWithType: DomainController.Finalize
  fullName: DomainController.Finalize
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindAll
  nameWithType: DomainController.FindAll
  fullName: DomainController.FindAll
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne
  nameWithType: DomainController.FindOne
  fullName: DomainController.FindOne
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Forest
  nameWithType: DomainController.Forest
  fullName: DomainController.Forest
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetAllReplicationNeighbors
  nameWithType: DomainController.GetAllReplicationNeighbors
  fullName: DomainController.GetAllReplicationNeighbors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDirectorySearcher
  nameWithType: DomainController.GetDirectorySearcher
  fullName: DomainController.GetDirectorySearcher
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDomainController
  nameWithType: DomainController.GetDomainController
  fullName: DomainController.GetDomainController
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationConnectionFailures
  nameWithType: DomainController.GetReplicationConnectionFailures
  fullName: DomainController.GetReplicationConnectionFailures
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationCursors
  nameWithType: DomainController.GetReplicationCursors
  fullName: DomainController.GetReplicationCursors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationMetadata
  nameWithType: DomainController.GetReplicationMetadata
  fullName: DomainController.GetReplicationMetadata
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationNeighbors
  nameWithType: DomainController.GetReplicationNeighbors
  fullName: DomainController.GetReplicationNeighbors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationOperationInformation
  nameWithType: DomainController.GetReplicationOperationInformation
  fullName: DomainController.GetReplicationOperationInformation
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: HighestCommittedUsn
  nameWithType: DomainController.HighestCommittedUsn
  fullName: DomainController.HighestCommittedUsn
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: InboundConnections
  nameWithType: DomainController.InboundConnections
  fullName: DomainController.InboundConnections
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IPAddress
  nameWithType: DomainController.IPAddress
  fullName: DomainController.IPAddress
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IsGlobalCatalog
  nameWithType: DomainController.IsGlobalCatalog
  fullName: DomainController.IsGlobalCatalog
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OSVersion
  nameWithType: DomainController.OSVersion
  fullName: DomainController.OSVersion
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OutboundConnections
  nameWithType: DomainController.OutboundConnections
  fullName: DomainController.OutboundConnections
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Roles
  nameWithType: DomainController.Roles
  fullName: DomainController.Roles
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SeizeRoleOwnership
  nameWithType: DomainController.SeizeRoleOwnership
  fullName: DomainController.SeizeRoleOwnership
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SiteName
  nameWithType: DomainController.SiteName
  fullName: DomainController.SiteName
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncFromAllServersCallback
  nameWithType: DomainController.SyncFromAllServersCallback
  fullName: DomainController.SyncFromAllServersCallback
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromAllServers
  nameWithType: DomainController.SyncReplicaFromAllServers
  fullName: DomainController.SyncReplicaFromAllServers
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromServer
  nameWithType: DomainController.SyncReplicaFromServer
  fullName: DomainController.SyncReplicaFromServer
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TransferRoleOwnership
  nameWithType: DomainController.TransferRoleOwnership
  fullName: DomainController.TransferRoleOwnership
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TriggerSyncReplicaFromNeighbors
  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors
  fullName: DomainController.TriggerSyncReplicaFromNeighbors
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/DomainController.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString
  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer
  isExternal: false
  name: ToString()
  nameWithType: DirectoryServer.ToString()
  fullName: DirectoryServer.ToString()
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose
  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer
  isExternal: false
  name: Dispose()
  nameWithType: DirectoryServer.Dispose()
  fullName: DirectoryServer.Dispose()
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: DirectoryServer.GetDirectoryEntry()
  fullName: DirectoryServer.GetDirectoryEntry()
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer
  isExternal: false
  name: MoveToAnotherSite(String)
  nameWithType: DirectoryServer.MoveToAnotherSite(String)
  fullName: DirectoryServer.MoveToAnotherSite(String)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Name
  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer
  isExternal: false
  name: Name
  nameWithType: DirectoryServer.Name
  fullName: DirectoryServer.Name
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions
  parent: System.DirectoryServices.ActiveDirectory.DirectoryServer
  isExternal: false
  name: Partitions
  nameWithType: DirectoryServer.Partitions
  fullName: DirectoryServer.Partitions
