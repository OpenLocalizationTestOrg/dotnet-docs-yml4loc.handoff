{"nodes":[{"content":"Reports the information returned from <xref href=\"System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)\"></xref>.","nodes":[{"pos":[0,181],"content":"Reports the information returned from <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)\"&gt;&lt;/xref&gt;</ph>.","source":"Reports the information returned from <xref href=\"System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)\"></xref>."}],"pos":[852,1034],"yaml":true},{"content":"Most of the information that <xref:System.Windows.ValueSource> transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property. This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property.  \n  \n Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference). This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively. Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.","nodes":[{"pos":[0,406],"content":"Most of the information that <xref:System.Windows.ValueSource> transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property. This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property.","nodes":[{"content":"Most of the information that <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource&gt;</ph> transmits is contained in the <ph id=\"ph2\">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> property.","pos":[0,155],"source":"Most of the information that <xref:System.Windows.ValueSource> transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property."},{"content":"This property contains an enumeration value that specifies exactly one aspect of the overall <ph id=\"ph1\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system that is responsible for the effective value of a dependency property.","pos":[156,406],"source":" This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property."}]},{"pos":[413,1150],"content":"Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference). This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively. Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.","nodes":[{"content":"Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).","pos":[0,244]},{"content":"This information is reported by <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> respectively.","pos":[245,392],"source":" This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively."},{"content":"Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.","pos":[393,610]},{"content":"A coerced property that is not at its desired value will report that <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>.","pos":[611,737],"source":" A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`."}]}],"pos":[1045,2200],"yaml":true,"extradata":"MT"},{"content":"Gets a value of the <xref href=\"System.Windows.BaseValueSource\"></xref> enumeration, which reports the source that provided the dependency property system with a value.","nodes":[{"pos":[0,168],"content":"Gets a value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.BaseValueSource\"&gt;&lt;/xref&gt;</ph> enumeration, which reports the source that provided the dependency property system with a value.","source":"Gets a value of the <xref href=\"System.Windows.BaseValueSource\"></xref> enumeration, which reports the source that provided the dependency property system with a value."}],"pos":[3210,3379],"yaml":true},{"content":"The base value is not the effective value if either coercion or animation is acting on the property. Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.  \n  \n You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression.","nodes":[{"pos":[0,277],"content":"The base value is not the effective value if either coercion or animation is acting on the property. Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.","nodes":[{"content":"The base value is not the effective value if either coercion or animation is acting on the property. Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.","pos":[0,277],"nodes":[{"content":"The base value is not the effective value if either coercion or animation is acting on the property.","pos":[0,100]},{"content":"Check <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> if you want to determine whether the base value is the effective value.","pos":[101,277],"source":" Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value."}]}]},{"pos":[284,423],"content":"You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression.","nodes":[{"content":"You might also want to check <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> to see if the base value was evaluated out of an expression.","pos":[0,139],"source":"You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression."}]}],"pos":[3390,3818],"yaml":true,"extradata":"MT"},{"content":"A value of the enumeration.","nodes":[{"pos":[0,27],"content":"A value of the enumeration.","nodes":[{"content":"A value of the enumeration.","pos":[0,27]}]}],"pos":[3978,4006],"yaml":true},{"content":"Returns a value indicating whether this <xref href=\"System.Windows.ValueSource\"></xref> is equal to a specified object.","nodes":[{"pos":[0,119],"content":"Returns a value indicating whether this <ph id=\"ph1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph> is equal to a specified object.","source":"Returns a value indicating whether this <xref href=\"System.Windows.ValueSource\"></xref> is equal to a specified object."}],"pos":[5004,5124],"yaml":true},{"content":"This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure.","nodes":[{"pos":[0,134],"content":"This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure.","nodes":[{"content":"This implementation supports value equality, based on each of the property values of each <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource&gt;</ph> structure.","pos":[0,134],"source":"This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure."}]}],"pos":[5135,5270],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this <xref href=\"System.Windows.ValueSource\"></xref>.","nodes":[{"pos":[0,80],"content":"The object to compare with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph>.","source":"The object to compare with this <xref href=\"System.Windows.ValueSource\"></xref>."}],"pos":[5406,5487],"yaml":true},{"content":"`true` if the provided object is equivalent to the current <xref href=\"System.Windows.ValueSource\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,127],"content":"<ph id=\"ph1\">`true`</ph> if the provided object is equivalent to the current <ph id=\"ph2\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the provided object is equivalent to the current <xref href=\"System.Windows.ValueSource\"></xref>; otherwise, `false`."}],"pos":[5545,5675],"yaml":true},{"content":"Returns the hash code for this <xref href=\"System.Windows.ValueSource\"></xref>.","nodes":[{"pos":[0,79],"content":"Returns the hash code for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the hash code for this <xref href=\"System.Windows.ValueSource\"></xref>."}],"pos":[6631,6711],"yaml":true},{"content":"This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value.","nodes":[{"pos":[0,90],"content":"This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value.","nodes":[{"content":"This hash code is based on the <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> value.","pos":[0,90],"source":"This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value."}]}],"pos":[6722,6813],"yaml":true,"extradata":"MT"},{"content":"A 32-bit unsigned integer hash code.","nodes":[{"pos":[0,36],"content":"A 32-bit unsigned integer hash code.","nodes":[{"content":"A 32-bit unsigned integer hash code.","pos":[0,36]}]}],"pos":[6947,6984],"yaml":true},{"content":"Gets a value that declares whether the property is being animated.","nodes":[{"pos":[0,66],"content":"Gets a value that declares whether the property is being animated.","nodes":[{"content":"Gets a value that declares whether the property is being animated.","pos":[0,66]}]}],"pos":[7935,8002],"yaml":true},{"content":"For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value. For more information about precedence and animations, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).","nodes":[{"pos":[0,417],"content":"For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value. For more information about precedence and animations, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).","nodes":[{"content":"For any property that is currently being animated, the source reported by <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.","pos":[0,248],"source":"For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value."},{"content":"For more information about precedence and animations, see <bpt id=\"p1\">[</bpt>Dependency Property Value Precedence<ept id=\"p1\">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.","pos":[249,417],"source":" For more information about precedence and animations, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)."}]}],"pos":[8013,8431],"yaml":true,"extradata":"MT"},{"content":"`true` if the property is animated; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the property is animated; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the property is animated; otherwise, `false`."}],"pos":[8544,8602],"yaml":true},{"content":"Gets a value that declares whether this value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property.","nodes":[{"pos":[0,166],"content":"Gets a value that declares whether this value resulted from a <ph id=\"ph1\">&lt;xref href=\"System.Windows.CoerceValueCallback\"&gt;&lt;/xref&gt;</ph> implementation applied to a dependency property.","source":"Gets a value that declares whether this value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property."}],"pos":[9546,9713],"yaml":true},{"content":"If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.  \n  \n Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set. Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration. For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).","nodes":[{"pos":[0,338],"content":"If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.","nodes":[{"content":"If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.","pos":[0,211]},{"content":"A coerced property that is not at its desired value will report that <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>.","pos":[212,338],"source":" A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`."}]},{"pos":[345,802],"content":"Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set. Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration. For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).","nodes":[{"content":"Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.","pos":[0,128]},{"content":"Therefore the state of being coerced is reported by this property, rather than by a value of the <ph id=\"ph1\">&lt;xref:System.Windows.BaseValueSource&gt;</ph> enumeration.","pos":[129,276],"source":" Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration."},{"content":"For more information about coercion, base values, and precedence, see <bpt id=\"p1\">[</bpt>Dependency Property Value Precedence<ept id=\"p1\">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.","pos":[277,457],"source":" For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)."}]}],"pos":[9724,10531],"yaml":true,"extradata":"MT"},{"content":"`true` if the value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property; otherwise, `false`.","nodes":[{"pos":[0,160],"content":"<ph id=\"ph1\">`true`</ph> if the value resulted from a <ph id=\"ph2\">&lt;xref href=\"System.Windows.CoerceValueCallback\"&gt;&lt;/xref&gt;</ph> implementation applied to a dependency property; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property; otherwise, `false`."}],"pos":[10643,10806],"yaml":true},{"content":"Gets whether the value was set by the <xref href=\"System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\"></xref> method.","nodes":[{"pos":[0,163],"content":"Gets whether the value was set by the <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"Gets whether the value was set by the <xref href=\"System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\"></xref> method."}],"pos":[11749,11913],"yaml":true},{"content":"`true` if the value was set by the <xref href=\"System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\"></xref> method; otherwise, `false`.","nodes":[{"pos":[0,180],"content":"<ph id=\"ph1\">`true`</ph> if the value was set by the <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\"&gt;&lt;/xref&gt;</ph> method; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the value was set by the <xref href=\"System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\"></xref> method; otherwise, `false`."}],"pos":[12025,12208],"yaml":true},{"content":"Gets a value that declares whether this value resulted from an evaluated expression. This might be a <xref href=\"System.Windows.Data.BindingExpression\"></xref> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).","nodes":[{"pos":[0,341],"content":"Gets a value that declares whether this value resulted from an evaluated expression. This might be a <xref href=\"System.Windows.Data.BindingExpression\"></xref> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).","nodes":[{"content":"Gets a value that declares whether this value resulted from an evaluated expression.","pos":[0,84]},{"content":"This might be a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Data.BindingExpression\"&gt;&lt;/xref&gt;</ph> supporting a binding, or an internal expression such as those that support the <bpt id=\"p1\">[</bpt>DynamicResource Markup Extension<ept id=\"p1\">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept>.","pos":[85,341],"source":" This might be a <xref href=\"System.Windows.Data.BindingExpression\"></xref> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)."}]}],"pos":[13169,13511],"yaml":true},{"content":"An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>. The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where <xref:System.Windows.ValueSource.IsExpression%2A> is `true`. Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.  \n  \n If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value. That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>. Failed expression evaluations will return `false` for <xref:System.Windows.ValueSource.IsExpression%2A>.","nodes":[{"pos":[0,518],"content":"An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>. The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where <xref:System.Windows.ValueSource.IsExpression%2A> is `true`. Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.","nodes":[{"content":"An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.","pos":[0,184],"source":"An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is still very relevant for any property where <ph id=\"ph2\">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> is <ph id=\"ph3\">`true`</ph>.","pos":[185,348],"source":" The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where <xref:System.Windows.ValueSource.IsExpression%2A> is `true`."},{"content":"Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.","pos":[349,518]}]},{"pos":[525,916],"content":"If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value. That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>. Failed expression evaluations will return `false` for <xref:System.Windows.ValueSource.IsExpression%2A>.","nodes":[{"content":"If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.","pos":[0,200]},{"content":"That source is then reported in <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.","pos":[201,286],"source":" That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>."},{"content":"Failed expression evaluations will return <ph id=\"ph1\">`false`</ph> for <ph id=\"ph2\">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>.","pos":[287,391],"source":" Failed expression evaluations will return `false` for <xref:System.Windows.ValueSource.IsExpression%2A>."}]}],"pos":[13522,14443],"yaml":true,"extradata":"MT"},{"content":"`true` if the value came from an evaluated expression; otherwise, `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the value came from an evaluated expression; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value came from an evaluated expression; otherwise, `false`."}],"pos":[14558,14635],"yaml":true},{"content":"Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances have the same value.","nodes":[{"pos":[0,101],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph> instances have the same value.","source":"Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances have the same value."}],"pos":[15814,15916],"yaml":true},{"content":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.","nodes":[{"pos":[0,160],"content":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.","nodes":[{"content":"This implementation calls <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, and supports value equality based on all properties of <ph id=\"ph2\">&lt;xref:System.Windows.ValueSource&gt;</ph>.","pos":[0,160],"source":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>."}]}],"pos":[15927,16088],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Windows.ValueSource\"></xref> to compare.","nodes":[{"pos":[0,69],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Windows.ValueSource\"></xref> to compare."}],"pos":[16296,16366],"yaml":true},{"content":"The second <xref href=\"System.Windows.ValueSource\"></xref> to compare.","nodes":[{"pos":[0,70],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Windows.ValueSource\"></xref> to compare."}],"pos":[16438,16509],"yaml":true},{"content":"`true` if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are equivalent; otherwise, `false`.","nodes":[{"pos":[0,111],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph> instances are equivalent; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are equivalent; otherwise, `false`."}],"pos":[16567,16681],"yaml":true},{"content":"Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances do not have the same value.","nodes":[{"pos":[0,108],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph> instances do not have the same value.","source":"Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances do not have the same value."}],"pos":[17893,18002],"yaml":true},{"content":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.","nodes":[{"pos":[0,184],"content":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.","nodes":[{"content":"This implementation calls <ph id=\"ph1\">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, returning its negation, and supports value equality based on all properties of <ph id=\"ph2\">&lt;xref:System.Windows.ValueSource&gt;</ph>.","pos":[0,184],"source":"This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>."}]}],"pos":[18013,18198],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Windows.ValueSource\"></xref> to compare.","nodes":[{"pos":[0,69],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Windows.ValueSource\"></xref> to compare."}],"pos":[18408,18478],"yaml":true},{"content":"The second <xref href=\"System.Windows.ValueSource\"></xref> to compare.","nodes":[{"pos":[0,70],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Windows.ValueSource\"></xref> to compare."}],"pos":[18550,18621],"yaml":true},{"content":"`true` if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are not equivalent; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Windows.ValueSource\"&gt;&lt;/xref&gt;</ph> instances are not equivalent; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are not equivalent; otherwise, `false`."}],"pos":[18679,18797],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.ValueSource\n  commentId: T:System.Windows.ValueSource\n  id: ValueSource\n  children:\n  - System.Windows.ValueSource.BaseValueSource\n  - System.Windows.ValueSource.Equals(System.Object)\n  - System.Windows.ValueSource.GetHashCode\n  - System.Windows.ValueSource.IsAnimated\n  - System.Windows.ValueSource.IsCoerced\n  - System.Windows.ValueSource.IsCurrent\n  - System.Windows.ValueSource.IsExpression\n  - System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)\n  - System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)\n  langs:\n  - csharp\n  name: ValueSource\n  nameWithType: ValueSource\n  fullName: System.Windows.ValueSource\n  type: Struct\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Reports the information returned from <xref href=\"System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)\"></xref>.\n  remarks: \"Most of the information that <xref:System.Windows.ValueSource> transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property. This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property.  \\n  \\n Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference). This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively. Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.\"\n  syntax:\n    content: public struct ValueSource\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.ValueSource.BaseValueSource\n  commentId: P:System.Windows.ValueSource.BaseValueSource\n  id: BaseValueSource\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: BaseValueSource\n  nameWithType: ValueSource.BaseValueSource\n  fullName: ValueSource.BaseValueSource\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value of the <xref href=\"System.Windows.BaseValueSource\"></xref> enumeration, which reports the source that provided the dependency property system with a value.\n  remarks: \"The base value is not the effective value if either coercion or animation is acting on the property. Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.  \\n  \\n You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression.\"\n  syntax:\n    content: public System.Windows.BaseValueSource BaseValueSource { get; }\n    return:\n      type: System.Windows.BaseValueSource\n      description: A value of the enumeration.\n  overload: System.Windows.ValueSource.BaseValueSource*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.ValueSource.Equals(System.Object)\n  commentId: M:System.Windows.ValueSource.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueSource.Equals(Object)\n  fullName: ValueSource.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns a value indicating whether this <xref href=\"System.Windows.ValueSource\"></xref> is equal to a specified object.\n  remarks: This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The object to compare with this <xref href=\"System.Windows.ValueSource\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the provided object is equivalent to the current <xref href=\"System.Windows.ValueSource\"></xref>; otherwise, `false`.'\n  overload: System.Windows.ValueSource.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.ValueSource.GetHashCode\n  commentId: M:System.Windows.ValueSource.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueSource.GetHashCode()\n  fullName: ValueSource.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Returns the hash code for this <xref href=\"System.Windows.ValueSource\"></xref>.\n  remarks: This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit unsigned integer hash code.\n  overload: System.Windows.ValueSource.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.ValueSource.IsAnimated\n  commentId: P:System.Windows.ValueSource.IsAnimated\n  id: IsAnimated\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: IsAnimated\n  nameWithType: ValueSource.IsAnimated\n  fullName: ValueSource.IsAnimated\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that declares whether the property is being animated.\n  remarks: For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value. For more information about precedence and animations, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).\n  syntax:\n    content: public bool IsAnimated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the property is animated; otherwise, `false`.'\n  overload: System.Windows.ValueSource.IsAnimated*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.ValueSource.IsCoerced\n  commentId: P:System.Windows.ValueSource.IsCoerced\n  id: IsCoerced\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: IsCoerced\n  nameWithType: ValueSource.IsCoerced\n  fullName: ValueSource.IsCoerced\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that declares whether this value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property.\n  remarks: \"If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted. A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.  \\n  \\n Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set. Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration. For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).\"\n  syntax:\n    content: public bool IsCoerced { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the value resulted from a <xref href=\"System.Windows.CoerceValueCallback\"></xref> implementation applied to a dependency property; otherwise, `false`.'\n  overload: System.Windows.ValueSource.IsCoerced*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.ValueSource.IsCurrent\n  commentId: P:System.Windows.ValueSource.IsCurrent\n  id: IsCurrent\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: IsCurrent\n  nameWithType: ValueSource.IsCurrent\n  fullName: ValueSource.IsCurrent\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets whether the value was set by the <xref href=\"System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\"></xref> method.\n  syntax:\n    content: public bool IsCurrent { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the value was set by the <xref href=\"System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\"></xref> method; otherwise, `false`.'\n  overload: System.Windows.ValueSource.IsCurrent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.ValueSource.IsExpression\n  commentId: P:System.Windows.ValueSource.IsExpression\n  id: IsExpression\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: IsExpression\n  nameWithType: ValueSource.IsExpression\n  fullName: ValueSource.IsExpression\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets a value that declares whether this value resulted from an evaluated expression. This might be a <xref href=\"System.Windows.Data.BindingExpression\"></xref> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).\n  remarks: \"An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>. The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where <xref:System.Windows.ValueSource.IsExpression%2A> is `true`. Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.  \\n  \\n If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value. That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>. Failed expression evaluations will return `false` for <xref:System.Windows.ValueSource.IsExpression%2A>.\"\n  syntax:\n    content: public bool IsExpression { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the value came from an evaluated expression; otherwise, `false`.'\n  overload: System.Windows.ValueSource.IsExpression*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)\n  commentId: M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)\n  id: op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: op_Equality(ValueSource, ValueSource)\n  nameWithType: ValueSource.op_Equality(ValueSource, ValueSource)\n  fullName: ValueSource.op_Equality(ValueSource, ValueSource)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances have the same value.\n  remarks: This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.\n  syntax:\n    content: public static bool op_Equality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);\n    parameters:\n    - id: vs1\n      type: System.Windows.ValueSource\n      description: The first <xref href=\"System.Windows.ValueSource\"></xref> to compare.\n    - id: vs2\n      type: System.Windows.ValueSource\n      description: The second <xref href=\"System.Windows.ValueSource\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are equivalent; otherwise, `false`.'\n  overload: System.Windows.ValueSource.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)\n  commentId: M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)\n  id: op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)\n  parent: System.Windows.ValueSource\n  langs:\n  - csharp\n  name: op_Inequality(ValueSource, ValueSource)\n  nameWithType: ValueSource.op_Inequality(ValueSource, ValueSource)\n  fullName: ValueSource.op_Inequality(ValueSource, ValueSource)\n  type: Operator\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Determines whether two <xref href=\"System.Windows.ValueSource\"></xref> instances do not have the same value.\n  remarks: This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);\n    parameters:\n    - id: vs1\n      type: System.Windows.ValueSource\n      description: The first <xref href=\"System.Windows.ValueSource\"></xref> to compare.\n    - id: vs2\n      type: System.Windows.ValueSource\n      description: The second <xref href=\"System.Windows.ValueSource\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Windows.ValueSource\"></xref> instances are not equivalent; otherwise, `false`.'\n  overload: System.Windows.ValueSource.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Windows.ValueSource.BaseValueSource\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: BaseValueSource\n  nameWithType: ValueSource.BaseValueSource\n  fullName: ValueSource.BaseValueSource\n- uid: System.Windows.BaseValueSource\n  parent: System.Windows\n  isExternal: false\n  name: BaseValueSource\n  nameWithType: BaseValueSource\n  fullName: System.Windows.BaseValueSource\n- uid: System.Windows.ValueSource.Equals(System.Object)\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueSource.Equals(Object)\n  fullName: ValueSource.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.ValueSource.GetHashCode\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueSource.GetHashCode()\n  fullName: ValueSource.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.ValueSource.IsAnimated\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsAnimated\n  nameWithType: ValueSource.IsAnimated\n  fullName: ValueSource.IsAnimated\n- uid: System.Windows.ValueSource.IsCoerced\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsCoerced\n  nameWithType: ValueSource.IsCoerced\n  fullName: ValueSource.IsCoerced\n- uid: System.Windows.ValueSource.IsCurrent\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsCurrent\n  nameWithType: ValueSource.IsCurrent\n  fullName: ValueSource.IsCurrent\n- uid: System.Windows.ValueSource.IsExpression\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsExpression\n  nameWithType: ValueSource.IsExpression\n  fullName: ValueSource.IsExpression\n- uid: System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: op_Equality(ValueSource, ValueSource)\n  nameWithType: ValueSource.op_Equality(ValueSource, ValueSource)\n  fullName: ValueSource.op_Equality(ValueSource, ValueSource)\n- uid: System.Windows.ValueSource\n  parent: System.Windows\n  isExternal: false\n  name: ValueSource\n  nameWithType: ValueSource\n  fullName: System.Windows.ValueSource\n- uid: System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: op_Inequality(ValueSource, ValueSource)\n  nameWithType: ValueSource.op_Inequality(ValueSource, ValueSource)\n  fullName: ValueSource.op_Inequality(ValueSource, ValueSource)\n- uid: System.Windows.ValueSource.BaseValueSource*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: BaseValueSource\n  nameWithType: ValueSource.BaseValueSource\n  fullName: ValueSource.BaseValueSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n- uid: System.Windows.ValueSource.Equals*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: Equals\n  nameWithType: ValueSource.Equals\n  fullName: ValueSource.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n- uid: System.Windows.ValueSource.GetHashCode*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ValueSource.GetHashCode\n  fullName: ValueSource.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n- uid: System.Windows.ValueSource.IsAnimated*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsAnimated\n  nameWithType: ValueSource.IsAnimated\n  fullName: ValueSource.IsAnimated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n- uid: System.Windows.ValueSource.IsCoerced*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsCoerced\n  nameWithType: ValueSource.IsCoerced\n  fullName: ValueSource.IsCoerced\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n- uid: System.Windows.ValueSource.IsCurrent*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsCurrent\n  nameWithType: ValueSource.IsCurrent\n  fullName: ValueSource.IsCurrent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n- uid: System.Windows.ValueSource.IsExpression*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: IsExpression\n  nameWithType: ValueSource.IsExpression\n  fullName: ValueSource.IsExpression\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n- uid: System.Windows.ValueSource.op_Equality*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: op_Equality\n  nameWithType: ValueSource.op_Equality\n  fullName: ValueSource.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n- uid: System.Windows.ValueSource.op_Inequality*\n  parent: System.Windows.ValueSource\n  isExternal: false\n  name: op_Inequality\n  nameWithType: ValueSource.op_Inequality\n  fullName: ValueSource.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/ValueSource.xml\n"}