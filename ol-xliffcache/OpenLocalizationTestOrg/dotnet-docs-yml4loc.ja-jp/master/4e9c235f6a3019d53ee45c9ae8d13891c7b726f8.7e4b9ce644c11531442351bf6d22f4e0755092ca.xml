{"nodes":[{"content":"Provides a way to access a managed object from unmanaged memory.","nodes":[{"pos":[0,64],"content":"Provides a way to access a managed object from unmanaged memory.","nodes":[{"content":"Provides a way to access a managed object from unmanaged memory.","pos":[0,64]}]}],"pos":[1610,1675],"yaml":true},{"content":"The <xref:System.Runtime.InteropServices.GCHandle> structure is used with the <xref:System.Runtime.InteropServices.GCHandleType> enumeration to create a handle corresponding to any managed object. This handle can be one of four types: `Weak`, `WeakTrackResurrection`, `Normal`, or `Pinned`. When the handle has been allocated, you can use it to prevent the managed object from being collected by the garbage collector when an unmanaged client holds the only reference. Without such a handle, the object can be collected by the garbage collector before completing its work on behalf of the unmanaged client.  \n  \n You can also use <xref:System.Runtime.InteropServices.GCHandle> to create a pinned object that returns a memory address to prevent the garbage collector from moving the object in memory.  \n  \n When the handle goes out of scope you must explicitly release it by calling the <xref:System.Runtime.InteropServices.GCHandle.Free%2A> method; otherwise, memory leaks may occur. When you free a pinned handle, the associated object will be unpinned and will become eligible for garbage collection, if there are no other references to it.","nodes":[{"pos":[0,606],"content":"The <xref:System.Runtime.InteropServices.GCHandle> structure is used with the <xref:System.Runtime.InteropServices.GCHandleType> enumeration to create a handle corresponding to any managed object. This handle can be one of four types: `Weak`, `WeakTrackResurrection`, `Normal`, or `Pinned`. When the handle has been allocated, you can use it to prevent the managed object from being collected by the garbage collector when an unmanaged client holds the only reference. Without such a handle, the object can be collected by the garbage collector before completing its work on behalf of the unmanaged client.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> structure is used with the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.GCHandleType&gt;</ph> enumeration to create a handle corresponding to any managed object.","pos":[0,196],"source":"The <xref:System.Runtime.InteropServices.GCHandle> structure is used with the <xref:System.Runtime.InteropServices.GCHandleType> enumeration to create a handle corresponding to any managed object."},{"content":"This handle can be one of four types: <ph id=\"ph1\">`Weak`</ph>, <ph id=\"ph2\">`WeakTrackResurrection`</ph>, <ph id=\"ph3\">`Normal`</ph>, or <ph id=\"ph4\">`Pinned`</ph>.","pos":[197,290],"source":" This handle can be one of four types: `Weak`, `WeakTrackResurrection`, `Normal`, or `Pinned`."},{"content":"When the handle has been allocated, you can use it to prevent the managed object from being collected by the garbage collector when an unmanaged client holds the only reference.","pos":[291,468]},{"content":"Without such a handle, the object can be collected by the garbage collector before completing its work on behalf of the unmanaged client.","pos":[469,606]}]},{"pos":[613,799],"content":"You can also use <xref:System.Runtime.InteropServices.GCHandle> to create a pinned object that returns a memory address to prevent the garbage collector from moving the object in memory.","nodes":[{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> to create a pinned object that returns a memory address to prevent the garbage collector from moving the object in memory.","pos":[0,186],"source":"You can also use <xref:System.Runtime.InteropServices.GCHandle> to create a pinned object that returns a memory address to prevent the garbage collector from moving the object in memory."}]},{"pos":[806,1142],"content":"When the handle goes out of scope you must explicitly release it by calling the <xref:System.Runtime.InteropServices.GCHandle.Free%2A> method; otherwise, memory leaks may occur. When you free a pinned handle, the associated object will be unpinned and will become eligible for garbage collection, if there are no other references to it.","nodes":[{"content":"When the handle goes out of scope you must explicitly release it by calling the <xref:System.Runtime.InteropServices.GCHandle.Free%2A> method; otherwise, memory leaks may occur. When you free a pinned handle, the associated object will be unpinned and will become eligible for garbage collection, if there are no other references to it.","pos":[0,336],"nodes":[{"content":"When the handle goes out of scope you must explicitly release it by calling the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A&gt;</ph> method; otherwise, memory leaks may occur.","pos":[0,177],"source":"When the handle goes out of scope you must explicitly release it by calling the <xref:System.Runtime.InteropServices.GCHandle.Free%2A> method; otherwise, memory leaks may occur."},{"content":"When you free a pinned handle, the associated object will be unpinned and will become eligible for garbage collection, if there are no other references to it.","pos":[178,336]}]}]}],"pos":[1686,2835],"yaml":true,"extradata":"MT"},{"content":"Retrieves the address of an object in a <xref href=\"System.Runtime.InteropServices.GCHandleType.Pinned\"></xref> handle.","nodes":[{"pos":[0,119],"content":"Retrieves the address of an object in a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandleType.Pinned\"&gt;&lt;/xref&gt;</ph> handle.","source":"Retrieves the address of an object in a <xref href=\"System.Runtime.InteropServices.GCHandleType.Pinned\"></xref> handle."}],"pos":[5434,5554],"yaml":true},{"content":"This method is used to get a stable pointer to the object. Pinning an object prevents the garbage collector from moving it around in memory, thereby reducing the efficiency of the garbage collector.","nodes":[{"pos":[0,198],"content":"This method is used to get a stable pointer to the object. Pinning an object prevents the garbage collector from moving it around in memory, thereby reducing the efficiency of the garbage collector.","nodes":[{"content":"This method is used to get a stable pointer to the object. Pinning an object prevents the garbage collector from moving it around in memory, thereby reducing the efficiency of the garbage collector.","pos":[0,198],"nodes":[{"content":"This method is used to get a stable pointer to the object.","pos":[0,58]},{"content":"Pinning an object prevents the garbage collector from moving it around in memory, thereby reducing the efficiency of the garbage collector.","pos":[59,198]}]}]}],"pos":[5565,5764],"yaml":true,"extradata":"MT"},{"content":"The address of the pinned object as an <xref href=\"System.IntPtr\"></xref>.","nodes":[{"pos":[0,74],"content":"The address of the pinned object as an <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph>.","source":"The address of the pinned object as an <xref href=\"System.IntPtr\"></xref>."}],"pos":[5900,5975],"yaml":true},{"content":"The handle is any type other than <xref href=\"System.Runtime.InteropServices.GCHandleType.Pinned\"></xref>.","nodes":[{"pos":[0,106],"content":"The handle is any type other than <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandleType.Pinned\"&gt;&lt;/xref&gt;</ph>.","source":"The handle is any type other than <xref href=\"System.Runtime.InteropServices.GCHandleType.Pinned\"></xref>."}],"pos":[6171,6278],"yaml":true},{"content":"Allocates a <xref href=\"System.Runtime.InteropServices.GCHandleType.Normal\"></xref> handle for the specified object.","nodes":[{"pos":[0,116],"content":"Allocates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandleType.Normal\"&gt;&lt;/xref&gt;</ph> handle for the specified object.","source":"Allocates a <xref href=\"System.Runtime.InteropServices.GCHandleType.Normal\"></xref> handle for the specified object."}],"pos":[7803,7920],"yaml":true},{"content":"<xref:System.Runtime.InteropServices.GCHandleType.Normal> handles are opaque, which means that you cannot resolve the address of the object it contains through the handle.","nodes":[{"pos":[0,171],"content":"<xref:System.Runtime.InteropServices.GCHandleType.Normal> handles are opaque, which means that you cannot resolve the address of the object it contains through the handle.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandleType.Normal&gt;</ph> handles are opaque, which means that you cannot resolve the address of the object it contains through the handle.","pos":[0,171],"source":"<xref:System.Runtime.InteropServices.GCHandleType.Normal> handles are opaque, which means that you cannot resolve the address of the object it contains through the handle."}]}],"pos":[7931,8103],"yaml":true,"extradata":"MT"},{"content":"The object that uses the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref>.","nodes":[{"pos":[0,86],"content":"The object that uses the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph>.","source":"The object that uses the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref>."}],"pos":[9080,9167],"yaml":true},{"content":"A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> that protects the object from garbage collection. This <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> must be released with <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> when it is no longer needed.","nodes":[{"pos":[0,299],"content":"A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> that protects the object from garbage collection. This <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> must be released with <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> when it is no longer needed.","nodes":[{"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> that protects the object from garbage collection.","pos":[0,116],"source":"A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> that protects the object from garbage collection."},{"content":"This <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> must be released with <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle.Free\"&gt;&lt;/xref&gt;</ph> when it is no longer needed.","pos":[117,299],"source":" This <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> must be released with <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> when it is no longer needed."}]}],"pos":[9250,9550],"yaml":true},{"content":"An instance with nonprimitive (non-blittable) members cannot be pinned.","nodes":[{"pos":[0,71],"content":"An instance with nonprimitive (non-blittable) members cannot be pinned.","nodes":[{"content":"An instance with nonprimitive (non-blittable) members cannot be pinned.","pos":[0,71]}]}],"pos":[9717,9789],"yaml":true},{"content":"Allocates a handle of the specified type for the specified object.","nodes":[{"pos":[0,66],"content":"Allocates a handle of the specified type for the specified object.","nodes":[{"content":"Allocates a handle of the specified type for the specified object.","pos":[0,66]}]}],"pos":[11488,11555],"yaml":true},{"content":"The object that uses the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref>.","nodes":[{"pos":[0,86],"content":"The object that uses the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph>.","source":"The object that uses the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref>."}],"pos":[11781,11868],"yaml":true},{"content":"One of the <xref href=\"System.Runtime.InteropServices.GCHandleType\"></xref> values, indicating the type of <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> to create.","nodes":[{"pos":[0,178],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandleType\"&gt;&lt;/xref&gt;</ph> values, indicating the type of <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> to create.","source":"One of the <xref href=\"System.Runtime.InteropServices.GCHandleType\"></xref> values, indicating the type of <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> to create."}],"pos":[11958,12137],"yaml":true},{"content":"A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> of the specified type. This <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> must be released with <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> when it is no longer needed.","nodes":[{"pos":[0,272],"content":"A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> of the specified type. This <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> must be released with <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> when it is no longer needed.","nodes":[{"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> of the specified type.","pos":[0,89],"source":"A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> of the specified type."},{"content":"This <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> must be released with <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle.Free\"&gt;&lt;/xref&gt;</ph> when it is no longer needed.","pos":[90,272],"source":" This <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> must be released with <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> when it is no longer needed."}]}],"pos":[12220,12493],"yaml":true},{"content":"An instance with nonprimitive (non-blittable) members cannot be pinned.","nodes":[{"pos":[0,71],"content":"An instance with nonprimitive (non-blittable) members cannot be pinned.","nodes":[{"content":"An instance with nonprimitive (non-blittable) members cannot be pinned.","pos":[0,71]}]}],"pos":[12660,12732],"yaml":true},{"content":"Determines whether the specified <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object is equal to the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.","nodes":[{"pos":[0,193],"content":"Determines whether the specified <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object is equal to the current <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object.","source":"Determines whether the specified <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object is equal to the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object."}],"pos":[14263,14457],"yaml":true},{"content":"Two <xref:System.Runtime.InteropServices.GCHandle> objects are equal if they point to the same memory handle.","nodes":[{"pos":[0,109],"content":"Two <xref:System.Runtime.InteropServices.GCHandle> objects are equal if they point to the same memory handle.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> objects are equal if they point to the same memory handle.","pos":[0,109],"source":"Two <xref:System.Runtime.InteropServices.GCHandle> objects are equal if they point to the same memory handle."}]}],"pos":[14468,14578],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.","nodes":[{"pos":[0,168],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object to compare with the current <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object.","source":"The <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object."}],"pos":[14714,14883],"yaml":true},{"content":"`true` if the specified <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object is equal to the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,204],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object is equal to the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object; otherwise, `false`."}],"pos":[14941,15148],"yaml":true},{"content":"Releases a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref>.","nodes":[{"pos":[0,72],"content":"Releases a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph>.","source":"Releases a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref>."}],"pos":[16681,16754],"yaml":true},{"content":"The caller must ensure that for a given handle, <xref:System.Runtime.InteropServices.GCHandle.Free%2A> is called only once.","nodes":[{"pos":[0,123],"content":"The caller must ensure that for a given handle, <xref:System.Runtime.InteropServices.GCHandle.Free%2A> is called only once.","nodes":[{"content":"The caller must ensure that for a given handle, <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A&gt;</ph> is called only once.","pos":[0,123],"source":"The caller must ensure that for a given handle, <xref:System.Runtime.InteropServices.GCHandle.Free%2A> is called only once."}]}],"pos":[16765,16889],"yaml":true,"extradata":"MT"},{"content":"The handle was freed or never initialized.","nodes":[{"pos":[0,42],"content":"The handle was freed or never initialized.","nodes":[{"content":"The handle was freed or never initialized.","pos":[0,42]}]}],"pos":[17935,17978],"yaml":true},{"content":"Returns a new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object created from a handle to a managed object.","nodes":[{"pos":[0,124],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object created from a handle to a managed object.","source":"Returns a new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object created from a handle to a managed object."}],"pos":[19533,19658],"yaml":true},{"content":"An <xref href=\"System.IntPtr\"></xref> handle to a managed object to create a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object from.","nodes":[{"pos":[0,150],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> handle to a managed object to create a <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object from.","source":"An <xref href=\"System.IntPtr\"></xref> handle to a managed object to create a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object from."}],"pos":[20666,20817],"yaml":true},{"content":"A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object that corresponds to the value parameter.","nodes":[{"pos":[0,114],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object that corresponds to the value parameter.","source":"A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object that corresponds to the value parameter."}],"pos":[20900,21015],"yaml":true},{"content":"The value of the <code>value</code> parameter is <xref href=\"System.IntPtr.Zero\"></xref>.","nodes":[{"pos":[0,89],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">&lt;xref href=\"System.IntPtr.Zero\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <code>value</code> parameter is <xref href=\"System.IntPtr.Zero\"></xref>."}],"pos":[21203,21293],"yaml":true},{"content":"Returns an identifier for the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.","nodes":[{"pos":[0,106],"content":"Returns an identifier for the current <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns an identifier for the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object."}],"pos":[22791,22898],"yaml":true},{"content":"The <xref:System.Runtime.InteropServices.GCHandle.GetHashCode%2A> method returns an integer representation of the internal memory handle encapsulated by the <xref:System.Runtime.InteropServices.GCHandle> structure.","nodes":[{"pos":[0,214],"content":"The <xref:System.Runtime.InteropServices.GCHandle.GetHashCode%2A> method returns an integer representation of the internal memory handle encapsulated by the <xref:System.Runtime.InteropServices.GCHandle> structure.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandle.GetHashCode%2A&gt;</ph> method returns an integer representation of the internal memory handle encapsulated by the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> structure.","pos":[0,214],"source":"The <xref:System.Runtime.InteropServices.GCHandle.GetHashCode%2A> method returns an integer representation of the internal memory handle encapsulated by the <xref:System.Runtime.InteropServices.GCHandle> structure."}]}],"pos":[22909,23124],"yaml":true,"extradata":"MT"},{"content":"An identifier for the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.","nodes":[{"pos":[0,98],"content":"An identifier for the current <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object.","source":"An identifier for the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object."}],"pos":[23258,23357],"yaml":true},{"content":"Gets a value indicating whether the handle is allocated.","nodes":[{"pos":[0,56],"content":"Gets a value indicating whether the handle is allocated.","nodes":[{"content":"Gets a value indicating whether the handle is allocated.","pos":[0,56]}]}],"pos":[24933,24990],"yaml":true},{"content":"Use this property when using <xref:System.Runtime.InteropServices.GCHandleType.Weak> handles to determine if the <xref:System.Runtime.InteropServices.GCHandle> is still available. When the garbage collector collects the object, the <xref:System.Runtime.InteropServices.GCHandleType.Weak> handle can still be resurrected in the finalizer. In that case, the handle is not allocated (it is lost when the garbage collector attempts to collect the object), even though the target object is valid.","nodes":[{"pos":[0,491],"content":"Use this property when using <xref:System.Runtime.InteropServices.GCHandleType.Weak> handles to determine if the <xref:System.Runtime.InteropServices.GCHandle> is still available. When the garbage collector collects the object, the <xref:System.Runtime.InteropServices.GCHandleType.Weak> handle can still be resurrected in the finalizer. In that case, the handle is not allocated (it is lost when the garbage collector attempts to collect the object), even though the target object is valid.","nodes":[{"content":"Use this property when using <xref:System.Runtime.InteropServices.GCHandleType.Weak> handles to determine if the <xref:System.Runtime.InteropServices.GCHandle> is still available. When the garbage collector collects the object, the <xref:System.Runtime.InteropServices.GCHandleType.Weak> handle can still be resurrected in the finalizer. In that case, the handle is not allocated (it is lost when the garbage collector attempts to collect the object), even though the target object is valid.","pos":[0,491],"nodes":[{"content":"Use this property when using <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandleType.Weak&gt;</ph> handles to determine if the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> is still available.","pos":[0,179],"source":"Use this property when using <xref:System.Runtime.InteropServices.GCHandleType.Weak> handles to determine if the <xref:System.Runtime.InteropServices.GCHandle> is still available."},{"content":"When the garbage collector collects the object, the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandleType.Weak&gt;</ph> handle can still be resurrected in the finalizer.","pos":[180,337],"source":" When the garbage collector collects the object, the <xref:System.Runtime.InteropServices.GCHandleType.Weak> handle can still be resurrected in the finalizer."},{"content":"In that case, the handle is not allocated (it is lost when the garbage collector attempts to collect the object), even though the target object is valid.","pos":[338,491]}]}]}],"pos":[25001,25493],"yaml":true,"extradata":"MT"},{"content":"`true` if the handle is allocated; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the handle is allocated; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the handle is allocated; otherwise, `false`."}],"pos":[25607,25664],"yaml":true},{"content":"Returns a value indicating whether two <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> objects are equal.","nodes":[{"pos":[0,118],"content":"Returns a value indicating whether two <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> objects are equal.","source":"Returns a value indicating whether two <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> objects are equal."}],"pos":[27543,27662],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Equals%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName>","nodes":[{"pos":[0,208],"content":"The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Equals%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandle.Equals%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName&gt;</ph>","pos":[0,208],"source":"The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Equals%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName>"}]}],"pos":[27673,27882],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>b</code> parameter.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object to compare with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>b</code> parameter."}],"pos":[28123,28239],"yaml":true},{"content":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>a</code> parameter.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object to compare with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>a</code> parameter."}],"pos":[28322,28438],"yaml":true},{"content":"`true` if the <code>a</code> and <code>b</code> parameters are equal; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">b</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters are equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <code>a</code> and <code>b</code> parameters are equal; otherwise, `false`."}],"pos":[28496,28588],"yaml":true},{"content":"Returns a value indicating whether two <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> objects are not equal.","nodes":[{"pos":[0,122],"content":"Returns a value indicating whether two <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> objects are not equal.","source":"Returns a value indicating whether two <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> objects are not equal."}],"pos":[34419,34542],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Compare%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName>","nodes":[{"pos":[0,209],"content":"The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Compare%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.GCHandle.Compare%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName&gt;</ph>","pos":[0,209],"source":"The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Compare%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName>"}]}],"pos":[34553,34763],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>b</code> parameter.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object to compare with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>b</code> parameter."}],"pos":[35006,35122],"yaml":true},{"content":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>a</code> parameter.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object to compare with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>a</code> parameter."}],"pos":[35205,35321],"yaml":true},{"content":"`true` if the <code>a</code> and <code>b</code> parameters are not equal; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">b</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters are not equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <code>a</code> and <code>b</code> parameters are not equal; otherwise, `false`."}],"pos":[35379,35475],"yaml":true},{"content":"Gets or sets the object this handle represents.","nodes":[{"pos":[0,47],"content":"Gets or sets the object this handle represents.","nodes":[{"content":"Gets or sets the object this handle represents.","pos":[0,47]}]}],"pos":[37023,37071],"yaml":true},{"content":"The object this handle represents.","nodes":[{"pos":[0,34],"content":"The object this handle represents.","nodes":[{"content":"The object this handle represents.","pos":[0,34]}]}],"pos":[38001,38036],"yaml":true},{"content":"The handle was freed, or never initialized.","nodes":[{"pos":[0,43],"content":"The handle was freed, or never initialized.","nodes":[{"content":"The handle was freed, or never initialized.","pos":[0,43]}]}],"pos":[38220,38264],"yaml":true},{"content":"Returns the internal integer representation of a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.","nodes":[{"pos":[0,117],"content":"Returns the internal integer representation of a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the internal integer representation of a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object."}],"pos":[39891,40009],"yaml":true},{"content":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to retrieve an internal integer representation from.","nodes":[{"pos":[0,122],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object to retrieve an internal integer representation from.","source":"A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to retrieve an internal integer representation from."}],"pos":[41041,41164],"yaml":true},{"content":"An <xref href=\"System.IntPtr\"></xref> object that represents a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.","nodes":[{"pos":[0,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> object that represents a <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.GCHandle\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.IntPtr\"></xref> object that represents a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object."}],"pos":[41221,41353],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.GCHandle\n  commentId: T:System.Runtime.InteropServices.GCHandle\n  id: GCHandle\n  children:\n  - System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject\n  - System.Runtime.InteropServices.GCHandle.Alloc(System.Object)\n  - System.Runtime.InteropServices.GCHandle.Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)\n  - System.Runtime.InteropServices.GCHandle.Equals(System.Object)\n  - System.Runtime.InteropServices.GCHandle.Free\n  - System.Runtime.InteropServices.GCHandle.FromIntPtr(System.IntPtr)\n  - System.Runtime.InteropServices.GCHandle.GetHashCode\n  - System.Runtime.InteropServices.GCHandle.IsAllocated\n  - System.Runtime.InteropServices.GCHandle.op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  - System.Runtime.InteropServices.GCHandle.op_Explicit(System.IntPtr to System.Runtime.InteropServices.GCHandle)\n  - System.Runtime.InteropServices.GCHandle.op_Explicit(System.Runtime.InteropServices.GCHandle to System.IntPtr)\n  - System.Runtime.InteropServices.GCHandle.op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  - System.Runtime.InteropServices.GCHandle.Target\n  - System.Runtime.InteropServices.GCHandle.ToIntPtr(System.Runtime.InteropServices.GCHandle)\n  langs:\n  - csharp\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n  type: Struct\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Provides a way to access a managed object from unmanaged memory.\n  remarks: \"The <xref:System.Runtime.InteropServices.GCHandle> structure is used with the <xref:System.Runtime.InteropServices.GCHandleType> enumeration to create a handle corresponding to any managed object. This handle can be one of four types: `Weak`, `WeakTrackResurrection`, `Normal`, or `Pinned`. When the handle has been allocated, you can use it to prevent the managed object from being collected by the garbage collector when an unmanaged client holds the only reference. Without such a handle, the object can be collected by the garbage collector before completing its work on behalf of the unmanaged client.  \\n  \\n You can also use <xref:System.Runtime.InteropServices.GCHandle> to create a pinned object that returns a memory address to prevent the garbage collector from moving the object in memory.  \\n  \\n When the handle goes out of scope you must explicitly release it by calling the <xref:System.Runtime.InteropServices.GCHandle.Free%2A> method; otherwise, memory leaks may occur. When you free a pinned handle, the associated object will be unpinned and will become eligible for garbage collection, if there are no other references to it.\"\n  example:\n  - \"The following example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected. A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr>. The unmanaged function passes the type back to the caller as a parameter of the callback function.  \\n  \\n [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]\\n [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct GCHandle\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject\n  commentId: M:System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject\n  id: AddrOfPinnedObject\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: AddrOfPinnedObject()\n  nameWithType: GCHandle.AddrOfPinnedObject()\n  fullName: GCHandle.AddrOfPinnedObject()\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the address of an object in a <xref href=\"System.Runtime.InteropServices.GCHandleType.Pinned\"></xref> handle.\n  remarks: This method is used to get a stable pointer to the object. Pinning an object prevents the garbage collector from moving it around in memory, thereby reducing the efficiency of the garbage collector.\n  syntax:\n    content: public IntPtr AddrOfPinnedObject ();\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: The address of the pinned object as an <xref href=\"System.IntPtr\"></xref>.\n  overload: System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The handle is any type other than <xref href=\"System.Runtime.InteropServices.GCHandleType.Pinned\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.Alloc(System.Object)\n  commentId: M:System.Runtime.InteropServices.GCHandle.Alloc(System.Object)\n  id: Alloc(System.Object)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Alloc(Object)\n  nameWithType: GCHandle.Alloc(Object)\n  fullName: GCHandle.Alloc(Object)\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Allocates a <xref href=\"System.Runtime.InteropServices.GCHandleType.Normal\"></xref> handle for the specified object.\n  remarks: <xref:System.Runtime.InteropServices.GCHandleType.Normal> handles are opaque, which means that you cannot resolve the address of the object it contains through the handle.\n  example:\n  - \"The following example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected. A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr>. The unmanaged function passes the type back to the caller as a parameter of the callback function.  \\n  \\n [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]\\n [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]\"\n  syntax:\n    content: public static System.Runtime.InteropServices.GCHandle Alloc (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object that uses the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref>.\n    return:\n      type: System.Runtime.InteropServices.GCHandle\n      description: A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> that protects the object from garbage collection. This <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> must be released with <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> when it is no longer needed.\n  overload: System.Runtime.InteropServices.GCHandle.Alloc*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An instance with nonprimitive (non-blittable) members cannot be pinned.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)\n  commentId: M:System.Runtime.InteropServices.GCHandle.Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)\n  id: Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Alloc(Object, GCHandleType)\n  nameWithType: GCHandle.Alloc(Object, GCHandleType)\n  fullName: GCHandle.Alloc(Object, GCHandleType)\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Allocates a handle of the specified type for the specified object.\n  syntax:\n    content: public static System.Runtime.InteropServices.GCHandle Alloc (object value, System.Runtime.InteropServices.GCHandleType type);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object that uses the <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref>.\n    - id: type\n      type: System.Runtime.InteropServices.GCHandleType\n      description: One of the <xref href=\"System.Runtime.InteropServices.GCHandleType\"></xref> values, indicating the type of <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> to create.\n    return:\n      type: System.Runtime.InteropServices.GCHandle\n      description: A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> of the specified type. This <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> must be released with <xref href=\"System.Runtime.InteropServices.GCHandle.Free\"></xref> when it is no longer needed.\n  overload: System.Runtime.InteropServices.GCHandle.Alloc*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An instance with nonprimitive (non-blittable) members cannot be pinned.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.Equals(System.Object)\n  commentId: M:System.Runtime.InteropServices.GCHandle.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: GCHandle.Equals(Object)\n  fullName: GCHandle.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Determines whether the specified <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object is equal to the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.\n  remarks: Two <xref:System.Runtime.InteropServices.GCHandle> objects are equal if they point to the same memory handle.\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: The <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object is equal to the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object; otherwise, `false`.'\n  overload: System.Runtime.InteropServices.GCHandle.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.Free\n  commentId: M:System.Runtime.InteropServices.GCHandle.Free\n  id: Free\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Free()\n  nameWithType: GCHandle.Free()\n  fullName: GCHandle.Free()\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Releases a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref>.\n  remarks: The caller must ensure that for a given handle, <xref:System.Runtime.InteropServices.GCHandle.Free%2A> is called only once.\n  example:\n  - \"The following example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected. A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr>. The unmanaged function passes the type back to the caller as a parameter of the callback function.  \\n  \\n [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]\\n [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]\"\n  syntax:\n    content: public void Free ();\n    parameters: []\n  overload: System.Runtime.InteropServices.GCHandle.Free*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The handle was freed or never initialized.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.FromIntPtr(System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.GCHandle.FromIntPtr(System.IntPtr)\n  id: FromIntPtr(System.IntPtr)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: FromIntPtr(IntPtr)\n  nameWithType: GCHandle.FromIntPtr(IntPtr)\n  fullName: GCHandle.FromIntPtr(IntPtr)\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Returns a new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object created from a handle to a managed object.\n  remarks: ''\n  example:\n  - \"The following code example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected. A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr> object. The unmanaged function passes the type back to the caller as a parameter of the callback function.  \\n  \\n [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]\\n [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]\"\n  syntax:\n    content: public static System.Runtime.InteropServices.GCHandle FromIntPtr (IntPtr value);\n    parameters:\n    - id: value\n      type: System.IntPtr\n      description: An <xref href=\"System.IntPtr\"></xref> handle to a managed object to create a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object from.\n    return:\n      type: System.Runtime.InteropServices.GCHandle\n      description: A new <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object that corresponds to the value parameter.\n  overload: System.Runtime.InteropServices.GCHandle.FromIntPtr*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The value of the <code>value</code> parameter is <xref href=\"System.IntPtr.Zero\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.GetHashCode\n  commentId: M:System.Runtime.InteropServices.GCHandle.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: GCHandle.GetHashCode()\n  fullName: GCHandle.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Returns an identifier for the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.\n  remarks: The <xref:System.Runtime.InteropServices.GCHandle.GetHashCode%2A> method returns an integer representation of the internal memory handle encapsulated by the <xref:System.Runtime.InteropServices.GCHandle> structure.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: An identifier for the current <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.\n  overload: System.Runtime.InteropServices.GCHandle.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.IsAllocated\n  commentId: P:System.Runtime.InteropServices.GCHandle.IsAllocated\n  id: IsAllocated\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: IsAllocated\n  nameWithType: GCHandle.IsAllocated\n  fullName: GCHandle.IsAllocated\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets a value indicating whether the handle is allocated.\n  remarks: Use this property when using <xref:System.Runtime.InteropServices.GCHandleType.Weak> handles to determine if the <xref:System.Runtime.InteropServices.GCHandle> is still available. When the garbage collector collects the object, the <xref:System.Runtime.InteropServices.GCHandleType.Weak> handle can still be resurrected in the finalizer. In that case, the handle is not allocated (it is lost when the garbage collector attempts to collect the object), even though the target object is valid.\n  syntax:\n    content: public bool IsAllocated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the handle is allocated; otherwise, `false`.'\n  overload: System.Runtime.InteropServices.GCHandle.IsAllocated*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  commentId: M:System.Runtime.InteropServices.GCHandle.op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  id: op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: op_Equality(GCHandle, GCHandle)\n  nameWithType: GCHandle.op_Equality(GCHandle, GCHandle)\n  fullName: GCHandle.op_Equality(GCHandle, GCHandle)\n  type: Operator\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Returns a value indicating whether two <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> objects are equal.\n  remarks: The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Equals%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Equality (System.Runtime.InteropServices.GCHandle a, System.Runtime.InteropServices.GCHandle b);\n    parameters:\n    - id: a\n      type: System.Runtime.InteropServices.GCHandle\n      description: A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>b</code> parameter.\n    - id: b\n      type: System.Runtime.InteropServices.GCHandle\n      description: A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>a</code> parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>a</code> and <code>b</code> parameters are equal; otherwise, `false`.'\n  overload: System.Runtime.InteropServices.GCHandle.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.op_Explicit(System.IntPtr to System.Runtime.InteropServices.GCHandle)\n  commentId: M:System.Runtime.InteropServices.GCHandle.op_Explicit(System.IntPtr)~System.Runtime.InteropServices.GCHandle\n  id: op_Explicit(System.IntPtr to System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: op_Explicit(IntPtr to GCHandle)\n  nameWithType: GCHandle.op_Explicit(IntPtr to GCHandle)\n  fullName: GCHandle.op_Explicit(IntPtr to GCHandle)\n  type: Operator\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static System.Runtime.InteropServices.GCHandle op_Explicit (IntPtr value);\n    parameters:\n    - id: value\n      type: System.IntPtr\n      description: ''\n    return:\n      type: System.Runtime.InteropServices.GCHandle\n      description: ''\n  overload: System.Runtime.InteropServices.GCHandle.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.op_Explicit(System.Runtime.InteropServices.GCHandle to System.IntPtr)\n  commentId: M:System.Runtime.InteropServices.GCHandle.op_Explicit(System.Runtime.InteropServices.GCHandle)~System.IntPtr\n  id: op_Explicit(System.Runtime.InteropServices.GCHandle to System.IntPtr)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: op_Explicit(GCHandle to IntPtr)\n  nameWithType: GCHandle.op_Explicit(GCHandle to IntPtr)\n  fullName: GCHandle.op_Explicit(GCHandle to IntPtr)\n  type: Operator\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static IntPtr op_Explicit (System.Runtime.InteropServices.GCHandle value);\n    parameters:\n    - id: value\n      type: System.Runtime.InteropServices.GCHandle\n      description: ''\n    return:\n      type: System.IntPtr\n      description: ''\n  overload: System.Runtime.InteropServices.GCHandle.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  commentId: M:System.Runtime.InteropServices.GCHandle.op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  id: op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: op_Inequality(GCHandle, GCHandle)\n  nameWithType: GCHandle.op_Inequality(GCHandle, GCHandle)\n  fullName: GCHandle.op_Inequality(GCHandle, GCHandle)\n  type: Operator\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Returns a value indicating whether two <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> objects are not equal.\n  remarks: The equivalent method for this operator is <xref:System.Runtime.InteropServices.GCHandle.Compare%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (System.Runtime.InteropServices.GCHandle a, System.Runtime.InteropServices.GCHandle b);\n    parameters:\n    - id: a\n      type: System.Runtime.InteropServices.GCHandle\n      description: A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>b</code> parameter.\n    - id: b\n      type: System.Runtime.InteropServices.GCHandle\n      description: A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to compare with the <code>a</code> parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>a</code> and <code>b</code> parameters are not equal; otherwise, `false`.'\n  overload: System.Runtime.InteropServices.GCHandle.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.Target\n  commentId: P:System.Runtime.InteropServices.GCHandle.Target\n  id: Target\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Target\n  nameWithType: GCHandle.Target\n  fullName: GCHandle.Target\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets or sets the object this handle represents.\n  remarks: ''\n  example:\n  - \"The following example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected. A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr>. The unmanaged function passes the type back to the caller as a parameter of the callback function.  \\n  \\n [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]\\n [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]\"\n  syntax:\n    content: public object Target { get; set; }\n    return:\n      type: System.Object\n      description: The object this handle represents.\n  overload: System.Runtime.InteropServices.GCHandle.Target*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The handle was freed, or never initialized.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.GCHandle.ToIntPtr(System.Runtime.InteropServices.GCHandle)\n  commentId: M:System.Runtime.InteropServices.GCHandle.ToIntPtr(System.Runtime.InteropServices.GCHandle)\n  id: ToIntPtr(System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: ToIntPtr(GCHandle)\n  nameWithType: GCHandle.ToIntPtr(GCHandle)\n  fullName: GCHandle.ToIntPtr(GCHandle)\n  type: Method\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Returns the internal integer representation of a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following code example shows an `App` class that creates a handle to a managed object using the `GCHandle.Alloc` method, which prevents the managed object from being collected. A call to the `EnumWindows` method passes a delegate and a managed object (both declared as managed types, but not shown), and casts the handle to an <xref:System.IntPtr> object. The unmanaged function passes the type back to the caller as a parameter of the callback function.  \\n  \\n [!code-csharp[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/cs/sample.cs#1)]\\n [!code-vb[System.Runtime.InteropServices.GCHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.GCHandle/vb/sample.vb#1)]\"\n  syntax:\n    content: public static IntPtr ToIntPtr (System.Runtime.InteropServices.GCHandle value);\n    parameters:\n    - id: value\n      type: System.Runtime.InteropServices.GCHandle\n      description: A <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object to retrieve an internal integer representation from.\n    return:\n      type: System.IntPtr\n      description: An <xref href=\"System.IntPtr\"></xref> object that represents a <xref href=\"System.Runtime.InteropServices.GCHandle\"></xref> object.\n  overload: System.Runtime.InteropServices.GCHandle.ToIntPtr*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: AddrOfPinnedObject()\n  nameWithType: GCHandle.AddrOfPinnedObject()\n  fullName: GCHandle.AddrOfPinnedObject()\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.GCHandle.Alloc(System.Object)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Alloc(Object)\n  nameWithType: GCHandle.Alloc(Object)\n  fullName: GCHandle.Alloc(Object)\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.GCHandle.Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Alloc(Object, GCHandleType)\n  nameWithType: GCHandle.Alloc(Object, GCHandleType)\n  fullName: GCHandle.Alloc(Object, GCHandleType)\n- uid: System.Runtime.InteropServices.GCHandleType\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandleType\n  nameWithType: GCHandleType\n  fullName: System.Runtime.InteropServices.GCHandleType\n- uid: System.Runtime.InteropServices.GCHandle.Equals(System.Object)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: GCHandle.Equals(Object)\n  fullName: GCHandle.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.GCHandle.Free\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Free()\n  nameWithType: GCHandle.Free()\n  fullName: GCHandle.Free()\n- uid: System.Runtime.InteropServices.GCHandle.FromIntPtr(System.IntPtr)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: FromIntPtr(IntPtr)\n  nameWithType: GCHandle.FromIntPtr(IntPtr)\n  fullName: GCHandle.FromIntPtr(IntPtr)\n- uid: System.Runtime.InteropServices.GCHandle.GetHashCode\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: GCHandle.GetHashCode()\n  fullName: GCHandle.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.GCHandle.IsAllocated\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: IsAllocated\n  nameWithType: GCHandle.IsAllocated\n  fullName: GCHandle.IsAllocated\n- uid: System.Runtime.InteropServices.GCHandle.op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Equality(GCHandle, GCHandle)\n  nameWithType: GCHandle.op_Equality(GCHandle, GCHandle)\n  fullName: GCHandle.op_Equality(GCHandle, GCHandle)\n- uid: System.Runtime.InteropServices.GCHandle.op_Explicit(System.IntPtr to System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Explicit(IntPtr to GCHandle)\n  nameWithType: GCHandle.op_Explicit(IntPtr to GCHandle)\n  fullName: GCHandle.op_Explicit(IntPtr to GCHandle)\n- uid: System.Runtime.InteropServices.GCHandle.op_Explicit(System.Runtime.InteropServices.GCHandle to System.IntPtr)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Explicit(GCHandle to IntPtr)\n  nameWithType: GCHandle.op_Explicit(GCHandle to IntPtr)\n  fullName: GCHandle.op_Explicit(GCHandle to IntPtr)\n- uid: System.Runtime.InteropServices.GCHandle.op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Inequality(GCHandle, GCHandle)\n  nameWithType: GCHandle.op_Inequality(GCHandle, GCHandle)\n  fullName: GCHandle.op_Inequality(GCHandle, GCHandle)\n- uid: System.Runtime.InteropServices.GCHandle.Target\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Target\n  nameWithType: GCHandle.Target\n  fullName: GCHandle.Target\n- uid: System.Runtime.InteropServices.GCHandle.ToIntPtr(System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: ToIntPtr(GCHandle)\n  nameWithType: GCHandle.ToIntPtr(GCHandle)\n  fullName: GCHandle.ToIntPtr(GCHandle)\n- uid: System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: AddrOfPinnedObject\n  nameWithType: GCHandle.AddrOfPinnedObject\n  fullName: GCHandle.AddrOfPinnedObject\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.Alloc*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Alloc\n  nameWithType: GCHandle.Alloc\n  fullName: GCHandle.Alloc\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.Equals*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Equals\n  nameWithType: GCHandle.Equals\n  fullName: GCHandle.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.Free*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Free\n  nameWithType: GCHandle.Free\n  fullName: GCHandle.Free\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.FromIntPtr*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: FromIntPtr\n  nameWithType: GCHandle.FromIntPtr\n  fullName: GCHandle.FromIntPtr\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.GetHashCode*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: GetHashCode\n  nameWithType: GCHandle.GetHashCode\n  fullName: GCHandle.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.IsAllocated*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: IsAllocated\n  nameWithType: GCHandle.IsAllocated\n  fullName: GCHandle.IsAllocated\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.op_Equality*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Equality\n  nameWithType: GCHandle.op_Equality\n  fullName: GCHandle.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.op_Explicit*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Explicit\n  nameWithType: GCHandle.op_Explicit\n  fullName: GCHandle.op_Explicit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.op_Inequality*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Inequality\n  nameWithType: GCHandle.op_Inequality\n  fullName: GCHandle.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.Target*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Target\n  nameWithType: GCHandle.Target\n  fullName: GCHandle.Target\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n- uid: System.Runtime.InteropServices.GCHandle.ToIntPtr*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: ToIntPtr\n  nameWithType: GCHandle.ToIntPtr\n  fullName: GCHandle.ToIntPtr\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/GCHandle.xml\n"}