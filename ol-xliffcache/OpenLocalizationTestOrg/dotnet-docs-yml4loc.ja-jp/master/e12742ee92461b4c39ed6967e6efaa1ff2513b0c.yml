### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.QueryContinueDragEventArgs
  commentId: T:System.Windows.Forms.QueryContinueDragEventArgs
  id: QueryContinueDragEventArgs
  children:
  - System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  - System.Windows.Forms.QueryContinueDragEventArgs.Action
  - System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  - System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  langs:
  - csharp
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.Forms.QueryContinueDragEventArgs
  type: Class
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Provides data for the <xref href="System.Windows.Forms.Control.QueryContinueDrag"></xref> event.
  remarks: "The <xref:System.Windows.Forms.Control.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled. A <xref:System.Windows.Forms.QueryContinueDragEventArgs> specifies whether and how the drag-and-drop operation should proceed, whether any modifier keys are pressed, and whether the user has pressed the ESC key.  \n  \n By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the left, middle, or right mouse button is pressed.  \n  \n For information about the event model, see [Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."
  example:
  - "This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class QueryContinueDragEventArgs : EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/QueryContinueDragEventArgs.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  commentId: M:System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  id: '#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)'
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: QueryContinueDragEventArgs(Int32, Boolean, DragAction)
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32, Boolean, DragAction)
  fullName: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32, Boolean, DragAction)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Initializes a new instance of the <xref href="System.Windows.Forms.QueryContinueDragEventArgs"></xref> class.
  syntax:
    content: public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);
    parameters:
    - id: keyState
      type: System.Int32
      description: The current state of the SHIFT, CTRL, and ALT keys.
    - id: escapePressed
      type: System.Boolean
      description: '`true` if the ESC key was pressed; otherwise, `false`.'
    - id: action
      type: System.Windows.Forms.DragAction
      description: A <xref href="System.Windows.Forms.DragAction"></xref> value.
  overload: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/QueryContinueDragEventArgs.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action
  commentId: P:System.Windows.Forms.QueryContinueDragEventArgs.Action
  id: Action
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: QueryContinueDragEventArgs.Action
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets or sets the status of a drag-and-drop operation.
  remarks: By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the left, middle, or right mouse button is pressed.
  example:
  - "This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]\n [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]"
  syntax:
    content: public System.Windows.Forms.DragAction Action { get; set; }
    return:
      type: System.Windows.Forms.DragAction
      description: A <xref href="System.Windows.Forms.DragAction"></xref> value.
  overload: System.Windows.Forms.QueryContinueDragEventArgs.Action*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/QueryContinueDragEventArgs.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  commentId: P:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  id: EscapePressed
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: QueryContinueDragEventArgs.EscapePressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets whether the user pressed the ESC key.
  remarks: By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> is true.
  example:
  - "The following code example demonstrates the use of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed%2A> . In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \n  \n [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]\n [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]"
  syntax:
    content: public bool EscapePressed { get; }
    return:
      type: System.Boolean
      description: '`true` if the ESC key was pressed; otherwise, `false`.'
  overload: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/QueryContinueDragEventArgs.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  commentId: P:System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  id: KeyState
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
  fullName: QueryContinueDragEventArgs.KeyState
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: Gets the current state of the SHIFT, CTRL, and ALT keys.
  remarks: "The bits that are set in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property identify the keys or mouse buttons that were pressed during the operation. For example, if the left mouse button is pressed, the first bit in the <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> property is set. You can use the bitwise `AND` operator to test for a given key state.  \n  \n The following table lists the bits that are set for a specified event.  \n  \n|Bit|Key|  \n|---------|---------|  \n|1|The left mouse button.|  \n|2|The right mouse button.|  \n|4|The SHIFT key.|  \n|8|The CTL key.|  \n|16|The middle mouse button.|  \n|32|The ALT key.|  \n  \n By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if <xref:System.Windows.Forms.QueryContinueDragEventArgs.KeyState%2A> indicates that the left, middle, or right mouse button is pressed."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \n  \n [!code-csharp[System.Windows.Forms.EventExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#43)]\n [!code-vb[System.Windows.Forms.EventExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#43)]"
  syntax:
    content: public int KeyState { get; }
    return:
      type: System.Int32
      description: The current state of the SHIFT, CTRL, and ALT keys.
  overload: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/QueryContinueDragEventArgs.xml
  ms.technology:
  - dotnet-winforms
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: QueryContinueDragEventArgs(Int32, Boolean, DragAction)
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32, Boolean, DragAction)
  fullName: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32, Boolean, DragAction)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DragAction
  parent: System.Windows.Forms
  isExternal: false
  name: DragAction
  nameWithType: DragAction
  fullName: System.Windows.Forms.DragAction
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: QueryContinueDragEventArgs.Action
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: QueryContinueDragEventArgs.EscapePressed
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
  fullName: QueryContinueDragEventArgs.KeyState
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs
  fullName: QueryContinueDragEventArgs.QueryContinueDragEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/QueryContinueDragEventArgs.xml
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: QueryContinueDragEventArgs.Action
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/QueryContinueDragEventArgs.xml
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: QueryContinueDragEventArgs.EscapePressed
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/QueryContinueDragEventArgs.xml
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
  fullName: QueryContinueDragEventArgs.KeyState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/QueryContinueDragEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
