{"nodes":[{"content":"Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>3</sup>.","nodes":[{"pos":[0,137],"content":"Represents an easing function that creates an animation that accelerates and/or decelerates using the formula <bpt id=\"p1\">*</bpt>f<ept id=\"p1\">*</ept>(<bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>) = <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept><bpt id=\"p4\">&lt;sup&gt;</bpt>3<ept id=\"p4\">&lt;/sup&gt;</ept>.","source":"Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>3</sup>."}],"pos":[575,713],"yaml":true},{"content":"You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.  \n  \n ![CubicEase EasingMode graphs.](~/add/media/cubicease-graph.png \"CubicEase EasingMode graphs.\")  \n  \n The formula used for this function is the following.  \n  \n *f*(*t*) = *t*<sup>3</sup>  \n  \n There are several other easing functions besides <xref:System.Windows.Media.Animation.CubicEase> which you can explore using the following Silverlight sample.  \n  \n [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  \n  \n In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.  \n  \n<a name=\"xamlObjectElementUsage_CubicEase\"></a>   \n## XAML Object Element Usage  \n  \n```  \n<CubicEase .../>  \n```","nodes":[{"pos":[0,364],"content":"You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.","nodes":[{"content":"You can control whether the animation accelerates, decelerates, or both by specifying the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph>.","pos":[0,161],"source":"You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>."},{"content":"The following graph demonstrates the different values of <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph>, where <bpt id=\"p1\">*</bpt>f<ept id=\"p1\">*</ept>(<bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>) represents the animation progress and <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept> represents time.","pos":[162,364],"source":" The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time."}]},{"pos":[371,466],"content":"<bpt id=\"p1\">![</bpt>CubicEase EasingMode graphs.<ept id=\"p1\">]</ept><bpt id=\"p2\">(~/add/media/cubicease-graph.png \"</bpt>CubicEase EasingMode graphs.<ept id=\"p2\">\")</ept>","source":"![CubicEase EasingMode graphs.](~/add/media/cubicease-graph.png \"CubicEase EasingMode graphs.\")"},{"pos":[473,525],"content":"The formula used for this function is the following.","nodes":[{"content":"The formula used for this function is the following.","pos":[0,52]}]},{"pos":[532,558],"content":"<bpt id=\"p1\">*</bpt>f<ept id=\"p1\">*</ept>(<bpt id=\"p2\">*</bpt>t<ept id=\"p2\">*</ept>) = <bpt id=\"p3\">*</bpt>t<ept id=\"p3\">*</ept><bpt id=\"p4\">&lt;sup&gt;</bpt>3<ept id=\"p4\">&lt;/sup&gt;</ept>","source":"*f*(*t*) = *t*<sup>3</sup>"},{"pos":[565,723],"content":"There are several other easing functions besides <xref:System.Windows.Media.Animation.CubicEase> which you can explore using the following Silverlight sample.","nodes":[{"content":"There are several other easing functions besides <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.CubicEase&gt;</ph> which you can explore using the following Silverlight sample.","pos":[0,158],"source":"There are several other easing functions besides <xref:System.Windows.Media.Animation.CubicEase> which you can explore using the following Silverlight sample."}]},{"pos":[730,824],"content":"<bpt id=\"p1\">[</bpt>Run this sample<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=139798&amp;sref=easing_functions_gallery)</ept>","source":"[Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)"},{"pos":[831,1023],"content":"In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.","nodes":[{"content":"In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase&gt;</ph>.","pos":[0,192],"source":"In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>."}]},{"pos":[1083,1108],"content":"XAML Object Element Usage","linkify":"XAML Object Element Usage","nodes":[{"content":"XAML Object Element Usage","pos":[0,25]}]}],"pos":[724,1892],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.CubicEase\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.CubicEase\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.CubicEase\"></xref> class."}],"pos":[6586,6689],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.","nodes":[{"pos":[0,152],"content":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.","nodes":[{"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable\"&gt;&lt;/xref&gt;</ph> derived class.","pos":[0,90],"source":"Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class."},{"content":"When creating a derived class, you must override this method.","pos":[91,152]}]}],"pos":[7826,7979],"yaml":true},{"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","nodes":[{"pos":[0,232],"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","nodes":[{"content":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.","pos":[0,232],"nodes":[{"content":"Animation classes inherit indirectly from <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph>.","pos":[0,74],"source":"Animation classes inherit indirectly from <xref:System.Windows.Freezable>."},{"content":"Because of this, you need to override the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A&gt;</ph> method to construct a custom animation object.","pos":[75,232],"source":" Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object."}]}]}],"pos":[7990,8223],"yaml":true,"extradata":"MT"},{"content":"The new instance.","nodes":[{"pos":[0,17],"content":"The new instance.","nodes":[{"content":"The new instance.","pos":[0,17]}]}],"pos":[8926,8944],"yaml":true},{"content":"Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"></xref> mode of the custom easing function.","nodes":[{"pos":[0,192],"content":"Provides the logic portion of the easing function that you can override to produce the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"&gt;&lt;/xref&gt;</ph> mode of the custom easing function.","source":"Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"></xref> mode of the custom easing function."}],"pos":[10046,10239],"yaml":true},{"content":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  \n  \n You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.","nodes":[{"pos":[0,218],"content":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.","nodes":[{"content":"This method transforms normalized time to control the pace of an animation for the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseIn&gt;</ph> case of <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A&gt;</ph>.","pos":[0,218],"source":"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>."}]},{"pos":[225,608],"content":"You only have to specify your easing function for the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseIn&gt;</ph> case because the implementation of the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A&gt;</ph> method transforms <ph id=\"ph3\">`normalizedTime`</ph> for the <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseOut&gt;</ph> and <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.EasingMode.EaseInOut&gt;</ph> cases.","source":"You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases."}],"pos":[10250,10863],"yaml":true,"extradata":"MT"},{"content":"Normalized time (progress) of the animation.","nodes":[{"pos":[0,44],"content":"Normalized time (progress) of the animation.","nodes":[{"content":"Normalized time (progress) of the animation.","pos":[0,44]}]}],"pos":[11034,11079],"yaml":true},{"content":"A double that represents the transformed progress.","nodes":[{"pos":[0,50],"content":"A double that represents the transformed progress.","nodes":[{"content":"A double that represents the transformed progress.","pos":[0,50]}]}],"pos":[11136,11187],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.CubicEase\n  commentId: T:System.Windows.Media.Animation.CubicEase\n  id: CubicEase\n  children:\n  - System.Windows.Media.Animation.CubicEase.#ctor\n  - System.Windows.Media.Animation.CubicEase.CreateInstanceCore\n  - System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)\n  langs:\n  - csharp\n  name: CubicEase\n  nameWithType: CubicEase\n  fullName: System.Windows.Media.Animation.CubicEase\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Represents an easing function that creates an animation that accelerates and/or decelerates using the formula *f*(*t*) = *t*<sup>3</sup>.\n  remarks: \"You can control whether the animation accelerates, decelerates, or both by specifying the <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>. The following graph demonstrates the different values of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, where *f*(*t*) represents the animation progress and *t* represents time.  \\n  \\n ![CubicEase EasingMode graphs.](~/add/media/cubicease-graph.png \\\"CubicEase EasingMode graphs.\\\")  \\n  \\n The formula used for this function is the following.  \\n  \\n *f*(*t*) = *t*<sup>3</sup>  \\n  \\n There are several other easing functions besides <xref:System.Windows.Media.Animation.CubicEase> which you can explore using the following Silverlight sample.  \\n  \\n [Run this sample](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery)  \\n  \\n In addition to using the easing functions included in the run-time, you can create your own custom easing functions by inheriting from <xref:System.Windows.Media.Animation.EasingFunctionBase>.  \\n  \\n<a name=\\\"xamlObjectElementUsage_CubicEase\\\"></a>   \\n## XAML Object Element Usage  \\n  \\n```  \\n<CubicEase .../>  \\n```\"\n  example:\n  - \"The following example applies a <xref:System.Windows.Media.Animation.CubicEase> easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.  \\n  \\n [!code-xml[CubicEase#CubicEase](~/samples/snippets/csharp/VS_Snippets_Wpf/cubicease/CS/window1.xaml#cubicease)]\"\n  syntax:\n    content: 'public class CubicEase : System.Windows.Media.Animation.EasingFunctionBase'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.EasingFunctionBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.Clone\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValue\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.FreezeCore(System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode\n  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.CubicEase.#ctor\n  commentId: M:System.Windows.Media.Animation.CubicEase.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.CubicEase\n  langs:\n  - csharp\n  name: CubicEase()\n  nameWithType: CubicEase.CubicEase()\n  fullName: CubicEase.CubicEase()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.CubicEase\"></xref> class.\n  syntax:\n    content: public CubicEase ();\n    parameters: []\n  overload: System.Windows.Media.Animation.CubicEase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.CubicEase.CreateInstanceCore\n  commentId: M:System.Windows.Media.Animation.CubicEase.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.CubicEase\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: CubicEase.CreateInstanceCore()\n  fullName: CubicEase.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a new instance of the <xref href=\"System.Windows.Freezable\"></xref> derived class. When creating a derived class, you must override this method.\n  remarks: Animation classes inherit indirectly from <xref:System.Windows.Freezable>. Because of this, you need to override the <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A> method to construct a custom animation object.\n  example:\n  - \"The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \\n  \\n [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]\\n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]\"\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.Media.Animation.CubicEase.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)\n  commentId: M:System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)\n  id: EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.CubicEase\n  langs:\n  - csharp\n  name: EaseInCore(Double)\n  nameWithType: CubicEase.EaseInCore(Double)\n  fullName: CubicEase.EaseInCore(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Provides the logic portion of the easing function that you can override to produce the <xref href=\"System.Windows.Media.Animation.EasingMode.EaseIn\"></xref> mode of the custom easing function.\n  remarks: \"This method transforms normalized time to control the pace of an animation for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case of <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.  \\n  \\n You only have to specify your easing function for the <xref:System.Windows.Media.Animation.EasingMode.EaseIn> case because the implementation of the <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> method transforms `normalizedTime` for the <xref:System.Windows.Media.Animation.EasingMode.EaseOut> and <xref:System.Windows.Media.Animation.EasingMode.EaseInOut> cases.\"\n  syntax:\n    content: protected override double EaseInCore (double normalizedTime);\n    parameters:\n    - id: normalizedTime\n      type: System.Double\n      description: Normalized time (progress) of the animation.\n    return:\n      type: System.Double\n      description: A double that represents the transformed progress.\n  overload: System.Windows.Media.Animation.CubicEase.EaseInCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.Animation.EasingFunctionBase\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: EasingFunctionBase\n  nameWithType: EasingFunctionBase\n  fullName: System.Windows.Media.Animation.EasingFunctionBase\n- uid: System.Windows.Media.Animation.CubicEase.#ctor\n  parent: System.Windows.Media.Animation.CubicEase\n  isExternal: false\n  name: CubicEase()\n  nameWithType: CubicEase.CubicEase()\n  fullName: CubicEase.CubicEase()\n- uid: System.Windows.Media.Animation.CubicEase.CreateInstanceCore\n  parent: System.Windows.Media.Animation.CubicEase\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: CubicEase.CreateInstanceCore()\n  fullName: CubicEase.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)\n  parent: System.Windows.Media.Animation.CubicEase\n  isExternal: false\n  name: EaseInCore(Double)\n  nameWithType: CubicEase.EaseInCore(Double)\n  fullName: CubicEase.EaseInCore(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Animation.CubicEase.#ctor*\n  parent: System.Windows.Media.Animation.CubicEase\n  isExternal: false\n  name: CubicEase\n  nameWithType: CubicEase.CubicEase\n  fullName: CubicEase.CubicEase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml\n- uid: System.Windows.Media.Animation.CubicEase.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.CubicEase\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: CubicEase.CreateInstanceCore\n  fullName: CubicEase.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml\n- uid: System.Windows.Media.Animation.CubicEase.EaseInCore*\n  parent: System.Windows.Media.Animation.CubicEase\n  isExternal: false\n  name: EaseInCore\n  nameWithType: CubicEase.EaseInCore\n  fullName: CubicEase.EaseInCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/CubicEase.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.Clone\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Clone()\n  nameWithType: Freezable.Clone()\n  fullName: Freezable.Clone()\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Freezable.CloneCurrentValue\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Freezable.CloneCurrentValue()\n  fullName: Freezable.CloneCurrentValue()\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Freezable.FreezeCore(System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Freezable.FreezeCore(Boolean)\n  fullName: Freezable.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetAsFrozenCore(Freezable)\n  fullName: Freezable.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Freezable.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)\n  parent: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: Ease(Double)\n  nameWithType: EasingFunctionBase.Ease(Double)\n  fullName: EasingFunctionBase.Ease(Double)\n- uid: System.Windows.Media.Animation.EasingFunctionBase.EasingMode\n  parent: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: EasingMode\n  nameWithType: EasingFunctionBase.EasingMode\n  fullName: EasingFunctionBase.EasingMode\n- uid: System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty\n  parent: System.Windows.Media.Animation.EasingFunctionBase\n  isExternal: false\n  name: EasingModeProperty\n  nameWithType: EasingFunctionBase.EasingModeProperty\n  fullName: EasingFunctionBase.EasingModeProperty\n"}