### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.X509Certificates.X509Chain
  commentId: T:System.Security.Cryptography.X509Certificates.X509Chain
  id: X509Chain
  children:
  - System.Security.Cryptography.X509Certificates.X509Chain.#ctor
  - System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.IntPtr)
  - System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.Security.Cryptography.X509Certificates.X509Chain.ChainContext
  - System.Security.Cryptography.X509Certificates.X509Chain.ChainElements
  - System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy
  - System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus
  - System.Security.Cryptography.X509Certificates.X509Chain.Create
  - System.Security.Cryptography.X509Certificates.X509Chain.Dispose
  - System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)
  - System.Security.Cryptography.X509Certificates.X509Chain.Finalize
  - System.Security.Cryptography.X509Certificates.X509Chain.Reset
  - System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle
  langs:
  - csharp
  name: X509Chain
  nameWithType: X509Chain
  fullName: System.Security.Cryptography.X509Certificates.X509Chain
  type: Class
  assemblies:
  - System.Security.Cryptography.X509Certificates
  - System
  - netstandard
  namespace: System.Security.Cryptography.X509Certificates
  summary: Represents a chain-building engine for <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2"></xref> certificates.
  remarks: "The <xref:System.Security.Cryptography.X509Certificates.X509Chain> object has a global error status called <xref:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus%2A> that should be used for certificate validation. The rules governing certificate validation are complex, and it is easy to oversimplify the validation logic by ignoring the error status of one or more of the elements involved. The global error status takes into consideration the status of each element in the chain.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n>   \n>  For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Chain> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method."
  example:
  - "The following code example opens the current user's personal certificate store, allows you to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  \n  \n [!code-cpp[x509chaintest#1](~/samples/snippets/cpp/VS_Snippets_CLR/x509chaintest/CPP/x509chaintest.cpp#1)]\n [!code-csharp[x509chaintest#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509chaintest/CS/x509chaintest.cs#1)]\n [!code-vb[x509chaintest#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509chaintest/vb/x509chaintest.vb#1)]"
  syntax:
    content: 'public class X509Chain : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.#ctor
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: X509Chain()
  nameWithType: X509Chain.X509Chain()
  fullName: X509Chain.X509Chain()
  type: Constructor
  assemblies:
  - System.Security.Cryptography.X509Certificates
  - System
  - netstandard
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref> class.
  remarks: ''
  example:
  - "The following code example opens the current user's personal certificate store, allows you to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  \n  \n [!code-cpp[x509chaintest#3](~/samples/snippets/cpp/VS_Snippets_CLR/x509chaintest/CPP/x509chaintest.cpp#3)]\n [!code-csharp[x509chaintest#3](~/samples/snippets/csharp/VS_Snippets_CLR/x509chaintest/CS/x509chaintest.cs#3)]\n [!code-vb[x509chaintest#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509chaintest/vb/x509chaintest.vb#3)]"
  syntax:
    content: public X509Chain ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Chain.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: X509Chain(Boolean)
  nameWithType: X509Chain.X509Chain(Boolean)
  fullName: X509Chain.X509Chain(Boolean)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref> class specifying a value that indicates whether the machine context should be used.
  remarks: This constructor can be used when the user profile is not loaded and the machine context needs to be used. When the `useMachineContext` parameter is set to `true`, the local machine context (HCCE_LOCAL_MACHINE flag) is used to create the chain. If the parameter is set to `false`, the current user context (HCCE_CURRENT_USER flag) is used.
  example:
  - "The following code example opens the current user's personal certificate store, allows you to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  \n  \n [!code-cpp[x509chaintest#3](~/samples/snippets/cpp/VS_Snippets_CLR/x509chaintest/CPP/x509chaintest.cpp#3)]\n [!code-csharp[x509chaintest#3](~/samples/snippets/csharp/VS_Snippets_CLR/x509chaintest/CS/x509chaintest.cs#3)]\n [!code-vb[x509chaintest#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509chaintest/vb/x509chaintest.vb#3)]"
  syntax:
    content: public X509Chain (bool useMachineContext);
    parameters:
    - id: useMachineContext
      type: System.Boolean
      description: '`true` to use the machine context; `false` to use the current user context.'
  overload: System.Security.Cryptography.X509Certificates.X509Chain.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.IntPtr)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: X509Chain(IntPtr)
  nameWithType: X509Chain.X509Chain(IntPtr)
  fullName: X509Chain.X509Chain(IntPtr)
  type: Constructor
  assemblies:
  - System
  - netstandard
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref> class using an <xref href="System.IntPtr"></xref> handle to an X.509 chain.
  remarks: Use this constructor to provide compatibility with the unmanaged Microsoft Cryptographic API (CAPI).
  syntax:
    content: >-
      [System.MonoTODO("Mono's X509Chain is fully managed. All handles are invalid.")]

      public X509Chain (IntPtr chainContext);
    parameters:
    - id: chainContext
      type: System.IntPtr
      description: An <xref href="System.IntPtr"></xref> handle to an X.509 chain.
  overload: System.Security.Cryptography.X509Certificates.X509Chain.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>chainContext</code> parameter is `null`.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: The <code>chainContext</code> parameter points to an invalid context.
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: Build(X509Certificate2)
  nameWithType: X509Chain.Build(X509Certificate2)
  fullName: X509Chain.Build(X509Certificate2)
  type: Method
  assemblies:
  - System.Security.Cryptography.X509Certificates
  - System
  - netstandard
  namespace: System.Security.Cryptography.X509Certificates
  summary: Builds an X.509 chain using the policy specified in <xref href="System.Security.Cryptography.X509Certificates.X509ChainPolicy"></xref>.
  remarks: Note that a valid X.509 certificate from a trusted issuer is valid only for the use specified in the <xref:System.Security.Cryptography.X509Certificates.X509ChainPolicy> object. Certificates that meet these chain policy rules might still be invalid for specific uses with such features as Security/MIME (SMIME), Authenticode, or Secure Sockets Layer (SSL). If further processing is required to determine whether the certificate is valid for a specific policy, derive a class from <xref:System.Security.Cryptography.X509Certificates.X509Chain> and override the <xref:System.Security.Cryptography.X509Certificates.X509Chain.Build%2A> method so that it calls the base class `Build` method first, and then does the additional processing.
  example:
  - "The following code example opens the current user's personal certificate store, allows you to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  \n  \n [!code-cpp[x509chaintest#3](~/samples/snippets/cpp/VS_Snippets_CLR/x509chaintest/CPP/x509chaintest.cpp#3)]\n [!code-csharp[x509chaintest#3](~/samples/snippets/csharp/VS_Snippets_CLR/x509chaintest/CS/x509chaintest.cs#3)]\n [!code-vb[x509chaintest#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509chaintest/vb/x509chaintest.vb#3)]"
  syntax:
    content: >-
      [System.MonoTODO("Not totally RFC3280 compliant, but neither is MS implementation...")]

      public bool Build (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: An <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the X.509 certificate is valid; otherwise, `false`.'
  overload: System.Security.Cryptography.X509Certificates.X509Chain.Build*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The <code>certificate</code> is not a valid certificate or is `null`.
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: The <code>certificate</code> is unreadable.
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainContext
  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainContext
  id: ChainContext
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: ChainContext
  nameWithType: X509Chain.ChainContext
  fullName: X509Chain.ChainContext
  type: Property
  assemblies:
  - System
  - netstandard
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets a handle to an X.509 chain.
  remarks: Use this property to return a handle that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).
  syntax:
    content: >-
      [System.MonoTODO("Mono's X509Chain is fully managed. Always returns IntPtr.Zero.")]

      public IntPtr ChainContext { get; }
    return:
      type: System.IntPtr
      description: An <xref href="System.IntPtr"></xref> handle to an X.509 chain.
  overload: System.Security.Cryptography.X509Certificates.X509Chain.ChainContext*
  exceptions: []
  attributes:
  - type: System.MonoTODO
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainElements
  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainElements
  id: ChainElements
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: ChainElements
  nameWithType: X509Chain.ChainElements
  fullName: X509Chain.ChainElements
  type: Property
  assemblies:
  - System.Security.Cryptography.X509Certificates
  - System
  - netstandard
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets a collection of <xref href="System.Security.Cryptography.X509Certificates.X509ChainElement"></xref> objects.
  remarks: "Each <xref:System.Security.Cryptography.X509Certificates.X509ChainElement> object is a representation of an element in the chain that was built during a call to the <xref:System.Security.Cryptography.X509Certificates.X509Chain.Build%2A> method.  \n  \n A chain element consists of an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, an <xref:System.Security.Cryptography.X509Certificates.X509ChainStatus> structure, and an extra information string (available only on Windows XP platforms)."
  example:
  - "The following code example opens the current user's personal certificate store, allows you to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  \n  \n [!code-cpp[x509chaintest#4](~/samples/snippets/cpp/VS_Snippets_CLR/x509chaintest/CPP/x509chaintest.cpp#4)]\n [!code-csharp[x509chaintest#4](~/samples/snippets/csharp/VS_Snippets_CLR/x509chaintest/CS/x509chaintest.cs#4)]\n [!code-vb[x509chaintest#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509chaintest/vb/x509chaintest.vb#4)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509ChainElementCollection ChainElements { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
      description: An <xref href="System.Security.Cryptography.X509Certificates.X509ChainElementCollection"></xref> object.
  overload: System.Security.Cryptography.X509Certificates.X509Chain.ChainElements*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy
  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy
  id: ChainPolicy
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: ChainPolicy
  nameWithType: X509Chain.ChainPolicy
  fullName: X509Chain.ChainPolicy
  type: Property
  assemblies:
  - System.Security.Cryptography.X509Certificates
  - System
  - netstandard
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets or sets the <xref href="System.Security.Cryptography.X509Certificates.X509ChainPolicy"></xref> to use when building an X.509 certificate chain.
  remarks: Use this property to set chain policy. For example, you can specify the Enhanced Key Usage (EKU) for which the chain should be validated, or specify revocation checking.
  example:
  - "The following code example opens the current user's personal certificate store, allows you to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  \n  \n [!code-cpp[x509chaintest#3](~/samples/snippets/cpp/VS_Snippets_CLR/x509chaintest/CPP/x509chaintest.cpp#3)]\n [!code-csharp[x509chaintest#3](~/samples/snippets/csharp/VS_Snippets_CLR/x509chaintest/CS/x509chaintest.cs#3)]\n [!code-vb[x509chaintest#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509chaintest/vb/x509chaintest.vb#3)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509ChainPolicy ChainPolicy { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
      description: The <xref href="System.Security.Cryptography.X509Certificates.X509ChainPolicy"></xref> object associated with this X.509 chain.
  overload: System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value being set for this property is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus
  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus
  id: ChainStatus
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: ChainStatus
  nameWithType: X509Chain.ChainStatus
  fullName: X509Chain.ChainStatus
  type: Property
  assemblies:
  - System.Security.Cryptography.X509Certificates
  - System
  - netstandard
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets the status of each element in an <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref> object.
  remarks: Use this property to get detailed error information for the status of the chain.
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509ChainStatus[] ChainStatus { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509ChainStatus[]
      description: An array of <xref href="System.Security.Cryptography.X509Certificates.X509ChainStatus"></xref> objects.
  overload: System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Create
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Create
  id: Create
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: Create()
  nameWithType: X509Chain.Create()
  fullName: X509Chain.Create()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Creates an <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref> object after querying for the mapping defined in the CryptoConfig file, and maps the chain to that mapping.
  remarks: By default, this method will create an X.509 chain. You can also use this method when the default chain-building engine is overridden in the Machine.config file. Note that for compatibility, any chain engine must attempt to honor the call and return semantics of the default chain engine.
  syntax:
    content: public static System.Security.Cryptography.X509Certificates.X509Chain Create ();
    parameters: []
    return:
      type: System.Security.Cryptography.X509Certificates.X509Chain
      description: An <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref> object.
  overload: System.Security.Cryptography.X509Certificates.X509Chain.Create*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Dispose
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Dispose
  id: Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: Dispose()
  nameWithType: X509Chain.Dispose()
  fullName: X509Chain.Dispose()
  type: Method
  assemblies:
  - System.Security.Cryptography.X509Certificates
  - System
  - netstandard
  namespace: System.Security.Cryptography.X509Certificates
  summary: Releases all of the resources used by this <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref>.
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Chain> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Chain> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Chain.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: X509Chain.Dispose(Boolean)
  fullName: X509Chain.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Security.Cryptography.X509Certificates
  - System
  - netstandard
  namespace: System.Security.Cryptography.X509Certificates
  summary: Releases the unmanaged resources used by this <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref>, and optionally releases the managed resources.
  remarks: >-
    > [!NOTE]

    >  <xref:System.Security.Cryptography.X509Certificates.X509Chain> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Chain> class does not implement this interface, and therefore the `Dispose` method does not exist.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.Security.Cryptography.X509Certificates.X509Chain.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Finalize
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Finalize
  id: Finalize
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: Finalize()
  nameWithType: X509Chain.Finalize()
  fullName: X509Chain.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography.X509Certificates
  syntax:
    content: ~X509Chain ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Chain.Finalize*
  exceptions: []
  version:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Reset
  commentId: M:System.Security.Cryptography.X509Certificates.X509Chain.Reset
  id: Reset
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: Reset()
  nameWithType: X509Chain.Reset()
  fullName: X509Chain.Reset()
  type: Method
  assemblies:
  - System
  - netstandard
  - System.Security.Cryptography.X509Certificates
  namespace: System.Security.Cryptography.X509Certificates
  summary: Clears the current <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref> object.
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Cryptography.X509Certificates.X509Chain.Reset*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle
  commentId: P:System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle
  id: SafeHandle
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  langs:
  - csharp
  name: SafeHandle
  nameWithType: X509Chain.SafeHandle
  fullName: X509Chain.SafeHandle
  type: Property
  assemblies:
  - System.Security.Cryptography.X509Certificates
  - System
  - netstandard
  namespace: System.Security.Cryptography.X509Certificates
  summary: Gets a safe handle for this <xref href="System.Security.Cryptography.X509Certificates.X509Chain"></xref> instance.
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeX509ChainHandle SafeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeX509ChainHandle
      description: Returns the <xref href="Microsoft.Win32.SafeHandles.SafeX509ChainHandle"></xref>.
  overload: System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Cryptography.X509Certificates.X509Chain.#ctor
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: X509Chain()
  nameWithType: X509Chain.X509Chain()
  fullName: X509Chain.X509Chain()
- uid: System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: X509Chain(Boolean)
  nameWithType: X509Chain.X509Chain(Boolean)
  fullName: X509Chain.X509Chain(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Chain.#ctor(System.IntPtr)
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: X509Chain(IntPtr)
  nameWithType: X509Chain.X509Chain(IntPtr)
  fullName: X509Chain.X509Chain(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Build(X509Certificate2)
  nameWithType: X509Chain.Build(X509Certificate2)
  fullName: X509Chain.Build(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainContext
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: ChainContext
  nameWithType: X509Chain.ChainContext
  fullName: X509Chain.ChainContext
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainElements
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: ChainElements
  nameWithType: X509Chain.ChainElements
  fullName: X509Chain.ChainElements
- uid: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainElementCollection
  nameWithType: X509ChainElementCollection
  fullName: System.Security.Cryptography.X509Certificates.X509ChainElementCollection
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: ChainPolicy
  nameWithType: X509Chain.ChainPolicy
  fullName: X509Chain.ChainPolicy
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainPolicy
  nameWithType: X509ChainPolicy
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: ChainStatus
  nameWithType: X509Chain.ChainStatus
  fullName: X509Chain.ChainStatus
- uid: System.Security.Cryptography.X509Certificates.X509ChainStatus
  name: X509ChainStatus
  nameWithType: X509ChainStatus
  fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus
- uid: System.Security.Cryptography.X509Certificates.X509ChainStatus[]
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainStatus[]
  nameWithType: X509ChainStatus[]
  fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus[]
  spec.csharp:
  - uid: System.Security.Cryptography.X509Certificates.X509ChainStatus
    name: X509ChainStatus
    nameWithType: X509ChainStatus
    fullName: System.Security.Cryptography.X509Certificates.X509ChainStatus
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Create
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Create()
  nameWithType: X509Chain.Create()
  fullName: X509Chain.Create()
- uid: System.Security.Cryptography.X509Certificates.X509Chain
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Chain
  nameWithType: X509Chain
  fullName: System.Security.Cryptography.X509Certificates.X509Chain
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Dispose
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Dispose()
  nameWithType: X509Chain.Dispose()
  fullName: X509Chain.Dispose()
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Dispose(System.Boolean)
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: X509Chain.Dispose(Boolean)
  fullName: X509Chain.Dispose(Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Finalize
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Finalize()
  nameWithType: X509Chain.Finalize()
  fullName: X509Chain.Finalize()
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Reset
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Reset()
  nameWithType: X509Chain.Reset()
  fullName: X509Chain.Reset()
- uid: System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: SafeHandle
  nameWithType: X509Chain.SafeHandle
  fullName: X509Chain.SafeHandle
- uid: Microsoft.Win32.SafeHandles.SafeX509ChainHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeX509ChainHandle
  nameWithType: SafeX509ChainHandle
  fullName: Microsoft.Win32.SafeHandles.SafeX509ChainHandle
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Dispose*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Dispose
  nameWithType: X509Chain.Dispose
  fullName: X509Chain.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.#ctor*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: X509Chain
  nameWithType: X509Chain.X509Chain
  fullName: X509Chain.X509Chain
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Build*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Build
  nameWithType: X509Chain.Build
  fullName: X509Chain.Build
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainContext*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: ChainContext
  nameWithType: X509Chain.ChainContext
  fullName: X509Chain.ChainContext
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainElements*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: ChainElements
  nameWithType: X509Chain.ChainElements
  fullName: X509Chain.ChainElements
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: ChainPolicy
  nameWithType: X509Chain.ChainPolicy
  fullName: X509Chain.ChainPolicy
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: ChainStatus
  nameWithType: X509Chain.ChainStatus
  fullName: X509Chain.ChainStatus
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Create*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Create
  nameWithType: X509Chain.Create
  fullName: X509Chain.Create
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Finalize*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Finalize
  nameWithType: X509Chain.Finalize
  fullName: X509Chain.Finalize
  monikers:
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.Reset*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: Reset
  nameWithType: X509Chain.Reset
  fullName: X509Chain.Reset
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Security.Cryptography.X509Certificates.X509Chain.SafeHandle*
  parent: System.Security.Cryptography.X509Certificates.X509Chain
  isExternal: false
  name: SafeHandle
  nameWithType: X509Chain.SafeHandle
  fullName: X509Chain.SafeHandle
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Chain.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
