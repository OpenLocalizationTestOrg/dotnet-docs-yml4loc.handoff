{"nodes":[{"content":"Models a strongly typed <xref href=\"System.Collections.ICollection\"></xref> of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,145],"content":"Models a strongly typed <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"Models a strongly typed <xref href=\"System.Collections.ICollection\"></xref> of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[4832,4978],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n This class is used to represent the list of child activities for a <xref:System.Workflow.ComponentModel.CompositeActivity>.  \n  \n> [!NOTE]\n>  Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>. Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,208],"content":"This class is used to represent the list of child activities for a <xref:System.Workflow.ComponentModel.CompositeActivity>.","nodes":[{"content":"This class is used to represent the list of child activities for a <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph>.","pos":[0,123],"source":"This class is used to represent the list of child activities for a <xref:System.Workflow.ComponentModel.CompositeActivity>."}]},{"pos":[216,623],"content":"[!NOTE]\n Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>. Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences.","leadings":["","> "],"nodes":[{"content":" Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>. Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences.","pos":[8,405],"nodes":[{"content":"Only call methods derived from <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> and not <ph id=\"ph2\">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, such as using <ph id=\"ph3\">&lt;xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A&gt;</ph> to add activities instead of <ph id=\"ph4\">&lt;xref:System.Collections.Generic.List%601.AddRange%2A&gt;</ph>.","pos":[1,290],"source":" Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>."},{"content":"Calling methods derived from <ph id=\"ph1\">&lt;xref:System.Collections.Generic.List%601&gt;</ph> will have unexpected consequences.","pos":[291,397],"source":" Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences."}]}]}],"pos":[4989,5621],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref> class, initializing an owner <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,195],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.ActivityCollection\"&gt;&lt;/xref&gt;</ph> class, initializing an owner <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref> class, initializing an owner <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[38762,38958],"yaml":true},{"content":"Example","nodes":[{"pos":[0,7],"content":"Example","nodes":[{"content":"Example","pos":[0,7]}]}],"pos":[38969,38977],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> designated as owning this instance.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> designated as owning this instance.","source":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> designated as owning this instance."}],"pos":[39178,39279],"yaml":true},{"content":"<code>owner</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">&lt;code&gt;owner&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>owner</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[39464,39532],"yaml":true},{"content":"<code>owner</code> is not a descendent of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,103],"content":"<ph id=\"ph1\">&lt;code&gt;owner&lt;/code&gt;</ph> is not a descendent of <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"<code>owner</code> is not a descendent of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[39626,39730],"yaml":true},{"content":"Adds the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,129],"content":"Adds the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Adds the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[40816,40946],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to be added to the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,136],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> to be added to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to be added to the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[41893,42030],"yaml":true},{"content":"Removes every <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,136],"content":"Removes every <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> from the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes every <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[43065,43202],"yaml":true},{"content":"Provides a test for membership of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,158],"content":"Provides a test for membership of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Provides a test for membership of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[44468,44627],"yaml":true},{"content":"This <xref:System.Collections.ICollection> is type-safe. A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"pos":[0,162],"content":"This <xref:System.Collections.ICollection> is type-safe. A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"content":"This <xref:System.Collections.ICollection> is type-safe. A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>.","pos":[0,162],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Collections.ICollection&gt;</ph> is type-safe.","pos":[0,56],"source":"This <xref:System.Collections.ICollection> is type-safe."},{"content":"A run-time exception is raised if the item is not of type <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph>.","pos":[57,162],"source":" A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>."}]}]}],"pos":[44638,44801],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> being tested for membership.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> being tested for membership.","source":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> being tested for membership."}],"pos":[44995,45089],"yaml":true},{"content":"`true` if the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> belongs to the <xref href=\"System.Collections.ICollection\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,162],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> belongs to the <ph id=\"ph3\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> belongs to the <xref href=\"System.Collections.ICollection\"></xref>; otherwise, `false`."}],"pos":[45147,45312],"yaml":true},{"content":"Gets the number of members of the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,86],"content":"Gets the number of members of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the number of members of the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[46348,46435],"yaml":true},{"content":"The number of members of the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,81],"content":"The number of members of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"The number of members of the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[46540,46622],"yaml":true},{"content":"Implements an enumeration interface to the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,95],"content":"Implements an enumeration interface to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Implements an enumeration interface to the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[47707,47803],"yaml":true},{"content":"Enumerators only enable reading the data in the collection. You cannot use enumerators to modify the underlying collection.  \n  \n To begin, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A>raises an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \n  \n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \n  \n After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.  \n  \n To set `Current` to the first element of the collection again, you can call `Reset` followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or `Reset` raises an <xref:System.InvalidOperationException> . If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection. This causes the enumerator to raise an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"pos":[0,123],"content":"Enumerators only enable reading the data in the collection. You cannot use enumerators to modify the underlying collection.","nodes":[{"content":"Enumerators only enable reading the data in the collection. You cannot use enumerators to modify the underlying collection.","pos":[0,123],"nodes":[{"content":"Enumerators only enable reading the data in the collection.","pos":[0,59]},{"content":"You cannot use enumerators to modify the underlying collection.","pos":[60,123]}]}]},{"pos":[130,622],"content":"To begin, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A>raises an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","nodes":[{"content":"To begin, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A>raises an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.","pos":[0,492],"nodes":[{"content":"To begin, the enumerator is positioned before the first element in the collection.","pos":[0,82]},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.","pos":[83,179],"source":" <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position."},{"content":"At this position, calling <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>raises an exception.","pos":[180,274],"source":" At this position, calling <xref:System.Collections.IEnumerator.Current%2A>raises an exception."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.","pos":[275,492],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>."}]}]},{"pos":[629,950],"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.","pos":[0,321],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.","pos":[0,196],"source":"<xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.","pos":[197,321],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element."}]}]},{"pos":[957,1315],"content":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.","nodes":[{"content":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id=\"ph2\">`false`</ph>.","pos":[0,192],"source":"After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id=\"ph2\">`false`</ph>, calling <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> raises an exception.","pos":[193,358],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception."}]},{"pos":[1322,1468],"content":"To set <ph id=\"ph1\">`Current`</ph> to the first element of the collection again, you can call <ph id=\"ph2\">`Reset`</ph> followed by <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.","source":"To set `Current` to the first element of the collection again, you can call `Reset` followed by <xref:System.Collections.IEnumerator.MoveNext%2A>."},{"pos":[1475,2092],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or `Reset` raises an <xref:System.InvalidOperationException> . If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id=\"ph2\">`Reset`</ph> raises an <ph id=\"ph3\">&lt;xref:System.InvalidOperationException&gt;</ph> .","pos":[73,336],"source":" If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or `Reset` raises an <xref:System.InvalidOperationException> ."},{"content":"If the collection is modified between <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> will return the element that it is set to, even if the enumerator is already invalidated.","pos":[337,617],"source":" If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated."}]},{"pos":[2099,2574],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection. This causes the enumerator to raise an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection. This causes the enumerator to raise an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,475],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,154]},{"content":"Even when a collection is synchronized, other threads could still modify the collection.","pos":[155,243]},{"content":"This causes the enumerator to raise an exception.","pos":[244,293]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[294,475]}]}]}],"pos":[47814,50403],"yaml":true,"extradata":"MT"},{"content":"Returns an enumerator that can iterate through the <xref href=\"System.Collections.ReadOnlyCollectionBase\"></xref> instance.","nodes":[{"pos":[0,123],"content":"Returns an enumerator that can iterate through the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ReadOnlyCollectionBase\"&gt;&lt;/xref&gt;</ph> instance.","source":"Returns an enumerator that can iterate through the <xref href=\"System.Collections.ReadOnlyCollectionBase\"></xref> instance."}],"pos":[50673,50797],"yaml":true},{"content":"Gets the index of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,142],"content":"Gets the index of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the index of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[52001,52144],"yaml":true},{"content":"This collection is type-safe. A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"pos":[0,139],"content":"This collection is type-safe. A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"content":"This collection is type-safe. A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.","pos":[0,139],"nodes":[{"content":"This collection is type-safe.","pos":[0,29]},{"content":"A run-time exception will be raised if an item is not of type <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph>.","pos":[30,139],"source":" A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>."}]}]}],"pos":[52155,52295],"yaml":true,"extradata":"MT"},{"content":"The activity for which to acquire the index.","nodes":[{"pos":[0,44],"content":"The activity for which to acquire the index.","nodes":[{"content":"The activity for which to acquire the index.","pos":[0,44]}]}],"pos":[52487,52532],"yaml":true},{"content":"The index of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>. Otherwise -1 (if <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> is not in the <xref href=\"System.Collections.ICollection\"></xref>).","nodes":[{"pos":[0,283],"content":"The index of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>. Otherwise -1 (if <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> is not in the <xref href=\"System.Collections.ICollection\"></xref>).","nodes":[{"content":"The index of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,137],"source":"The index of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>."},{"content":"Otherwise -1 (if <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> is not in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>).","pos":[138,283],"source":" Otherwise -1 (if <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> is not in the <xref href=\"System.Collections.ICollection\"></xref>)."}]}],"pos":[52588,52872],"yaml":true},{"content":"Inserts the item at the index in the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,89],"content":"Inserts the item at the index in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Inserts the item at the index in the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[54124,54214],"yaml":true},{"content":"This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"pos":[0,161],"content":"This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"content":"This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.","pos":[0,161],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Collections.ICollection&gt;</ph> is type safe.","pos":[0,56],"source":"This <xref:System.Collections.ICollection> is type safe."},{"content":"A run-time exception is raised if an item is not of type <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph>.","pos":[57,161],"source":" A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>."}]}]}],"pos":[54225,54387],"yaml":true,"extradata":"MT"},{"content":"Zero-based index of the collection at which to insert the item.","nodes":[{"pos":[0,63],"content":"Zero-based index of the collection at which to insert the item.","nodes":[{"content":"Zero-based index of the collection at which to insert the item.","pos":[0,63]}]}],"pos":[54564,54628],"yaml":true},{"content":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to be inserted into the collection.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> to be inserted into the collection.","source":"The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to be inserted into the collection."}],"pos":[54714,54815],"yaml":true},{"content":"Gets the activity in the <xref href=\"System.Collections.ICollection\"></xref> based on the string which is a unique key.","nodes":[{"pos":[0,119],"content":"Gets the activity in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> based on the string which is a unique key.","source":"Gets the activity in the <xref href=\"System.Collections.ICollection\"></xref> based on the string which is a unique key."}],"pos":[55912,56032],"yaml":true},{"content":"If there is no <xref:System.Workflow.ComponentModel.Activity> in the <xref:System.Collections.ICollection> with specified key, an exception is raised.","nodes":[{"pos":[0,150],"content":"If there is no <xref:System.Workflow.ComponentModel.Activity> in the <xref:System.Collections.ICollection> with specified key, an exception is raised.","nodes":[{"content":"If there is no <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph> in the <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> with specified key, an exception is raised.","pos":[0,150],"source":"If there is no <xref:System.Workflow.ComponentModel.Activity> in the <xref:System.Collections.ICollection> with specified key, an exception is raised."}]}],"pos":[56043,56194],"yaml":true,"extradata":"MT"},{"content":"Unique identifier for activity in the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,90],"content":"Unique identifier for activity in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Unique identifier for activity in the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[56365,56456],"yaml":true},{"content":"A member <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> of the <xref href=\"System.Collections.ICollection\"></xref>; the key in the <xref href=\"System.Collections.ICollection\"></xref> which was specified in the call.","nodes":[{"pos":[0,229],"content":"A member <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>; the key in the <ph id=\"ph3\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> which was specified in the call.","source":"A member <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> of the <xref href=\"System.Collections.ICollection\"></xref>; the key in the <xref href=\"System.Collections.ICollection\"></xref> which was specified in the call."}],"pos":[56539,56769],"yaml":true},{"content":"Gets or sets the activity in the <xref href=\"System.Collections.ICollection\"></xref> based on the index.","nodes":[{"pos":[0,104],"content":"Gets or sets the activity in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> based on the index.","source":"Gets or sets the activity in the <xref href=\"System.Collections.ICollection\"></xref> based on the index."}],"pos":[57858,57963],"yaml":true},{"content":"Zero-based index into the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,78],"content":"Zero-based index into the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Zero-based index into the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[58139,58218],"yaml":true},{"content":"A member activity of the <xref href=\"System.Collections.ICollection\"></xref>, whose index in the <xref href=\"System.Collections.ICollection\"></xref> was specified in the call.","nodes":[{"pos":[0,175],"content":"A member activity of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>, whose index in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> was specified in the call.","source":"A member activity of the <xref href=\"System.Collections.ICollection\"></xref>, whose index in the <xref href=\"System.Collections.ICollection\"></xref> was specified in the call."}],"pos":[58301,58477],"yaml":true},{"content":"<code>index</code> is not a valid index in <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is not a valid index in <xref href=\"System.Collections.IList\"></xref>."}],"pos":[58673,58763],"yaml":true},{"content":"The property is set and the <xref href=\"System.Collections.IList\"></xref> is read-only.","nodes":[{"pos":[0,87],"content":"The property is set and the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The property is set and the <xref href=\"System.Collections.IList\"></xref> is read-only."}],"pos":[58865,58953],"yaml":true},{"content":"An attempt to set to an <xref href=\"System.Object\"></xref> that is not an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,135],"content":"An attempt to set to an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that is not an <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","source":"An attempt to set to an <xref href=\"System.Object\"></xref> that is not an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}],"pos":[59031,59167],"yaml":true},{"content":"Raised whenever a change is made to the contents of this <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,109],"content":"Raised whenever a change is made to the contents of this <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Raised whenever a change is made to the contents of this <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[60147,60257],"yaml":true},{"content":"In this context, adding or removing members raises the event. Modifying a member does not raise this event.  \n  \n When you create an <xref:System.Workflow.ComponentModel.ActivityCollection> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).","nodes":[{"pos":[0,107],"content":"In this context, adding or removing members raises the event. Modifying a member does not raise this event.","nodes":[{"content":"In this context, adding or removing members raises the event. Modifying a member does not raise this event.","pos":[0,107],"nodes":[{"content":"In this context, adding or removing members raises the event.","pos":[0,61]},{"content":"Modifying a member does not raise this event.","pos":[62,107]}]}]},{"pos":[114,587],"content":"When you create an <xref:System.Workflow.ComponentModel.ActivityCollection> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).","nodes":[{"content":"When you create an <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.ActivityCollection&gt;</ph> delegate, you identify the method that will handle the event.","pos":[0,137],"source":"When you create an <xref:System.Workflow.ComponentModel.ActivityCollection> delegate, you identify the method that will handle the event."},{"content":"To associate the event with your event handler, add an instance of the delegate to the event.","pos":[138,231]},{"content":"The event handler is called whenever the event occurs, unless you remove the delegate.","pos":[232,318]},{"content":"For more information about event-handler delegates, see <bpt id=\"p1\">[</bpt>NIB: Events and Delegates<ept id=\"p1\">](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.","pos":[319,473],"source":" For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."}]}],"pos":[60268,60860],"yaml":true,"extradata":"MT"},{"content":"Removes the activity specified in the call from the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,104],"content":"Removes the activity specified in the call from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the activity specified in the call from the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[62241,62346],"yaml":true},{"content":"This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"pos":[0,161],"content":"This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"content":"This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.","pos":[0,161],"nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.Collections.ICollection&gt;</ph> is type safe.","pos":[0,56],"source":"This <xref:System.Collections.ICollection> is type safe."},{"content":"A run-time exception is raised if an item is not of type <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph>.","pos":[57,161],"source":" A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>."}]}]}],"pos":[62357,62519],"yaml":true,"extradata":"MT"},{"content":"The activity to remove from the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,84],"content":"The activity to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"The activity to remove from the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[62711,62796],"yaml":true},{"content":"`true` if the operation succeeded; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the operation succeeded; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the operation succeeded; otherwise, `false`."}],"pos":[62854,62911],"yaml":true},{"content":"Removes the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref> at the specified <code>index</code>.","nodes":[{"pos":[0,168],"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> at the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Removes the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref> at the specified <code>index</code>."}],"pos":[64024,64193],"yaml":true},{"content":"A run-time exception occurs if the index is not valid (out of range).","nodes":[{"pos":[0,69],"content":"A run-time exception occurs if the index is not valid (out of range).","nodes":[{"content":"A run-time exception occurs if the index is not valid (out of range).","pos":[0,69]}]}],"pos":[64204,64274],"yaml":true,"extradata":"MT"},{"content":"Position in a zero-based index to remove the activity from the collection.","nodes":[{"pos":[0,74],"content":"Position in a zero-based index to remove the activity from the collection.","nodes":[{"content":"Position in a zero-based index to remove the activity from the collection.","pos":[0,74]}]}],"pos":[64407,64482],"yaml":true},{"content":"Adds an object to the <xref href=\"System.Collections.IList\"></xref> at the end of the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,132],"content":"Adds an object to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> at the end of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Adds an object to the <xref href=\"System.Collections.IList\"></xref> at the end of the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[65977,66110],"yaml":true},{"content":"Raises an exception with the error message \"Error_InvalidListItem\" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"pos":[0,157],"content":"Raises an exception with the error message \"Error_InvalidListItem\" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"content":"Raises an exception with the error message \"Error_InvalidListItem\" if the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> is not of type <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph>.","pos":[0,157],"source":"Raises an exception with the error message \"Error_InvalidListItem\" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>."}]}],"pos":[66121,66279],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to add to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[66483,66583],"yaml":true},{"content":"Clears all activities from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,77],"content":"Clears all activities from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Clears all activities from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[68018,68096],"yaml":true},{"content":"The <xref:System.Collections.CollectionBase.Count%2A> property is zero after this operation is finished.","nodes":[{"pos":[0,104],"content":"The <xref:System.Collections.CollectionBase.Count%2A> property is zero after this operation is finished.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph> property is zero after this operation is finished.","pos":[0,104],"source":"The <xref:System.Collections.CollectionBase.Count%2A> property is zero after this operation is finished."}]}],"pos":[68107,68212],"yaml":true,"extradata":"MT"},{"content":"Gets a value that indicates whether the <xref href=\"System.Object\"></xref> is a member of the collection.","nodes":[{"pos":[0,105],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is a member of the collection.","source":"Gets a value that indicates whether the <xref href=\"System.Object\"></xref> is a member of the collection."}],"pos":[69893,69999],"yaml":true},{"content":"Raises an exception with the error message \"Error_InvalidListItem\" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"pos":[0,157],"content":"Raises an exception with the error message \"Error_InvalidListItem\" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.","nodes":[{"content":"Raises an exception with the error message \"Error_InvalidListItem\" if the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> is not of type <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph>.","pos":[0,157],"source":"Raises an exception with the error message \"Error_InvalidListItem\" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>."}]}],"pos":[70010,70168],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[70377,70480],"yaml":true},{"content":"`true` if value is in the collection; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if value is in the collection; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if value is in the collection; otherwise, `false`."}],"pos":[70538,70598],"yaml":true},{"content":"Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index.","nodes":[{"pos":[0,185],"content":"Copies the elements of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> to an <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at a particular <ph id=\"ph3\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> index.","source":"Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index."}],"pos":[72263,72449],"yaml":true},{"content":"The <xref href=\"System.Array\"></xref> which is the target of the copy operation.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> which is the target of the copy operation.","source":"The <xref href=\"System.Array\"></xref> which is the target of the copy operation."}],"pos":[72678,72759],"yaml":true},{"content":"The zero-based index within the <xref href=\"System.Collections.ICollection\"></xref> where the copy starts.","nodes":[{"pos":[0,106],"content":"The zero-based index within the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> where the copy starts.","source":"The zero-based index within the <xref href=\"System.Collections.ICollection\"></xref> where the copy starts."}],"pos":[72824,72931],"yaml":true},{"content":"<code>array</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,67],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>array</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[73197,73265],"yaml":true},{"content":"<code>index</code> is less than zero.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> is less than zero."}],"pos":[73379,73417],"yaml":true},{"content":"<code>array</code> is multidimensional.  \n  \n <code>index</code> is equal to or greater than the length of <code>array</code>.  \n  \n The number of elements in the source <xref href=\"System.Collections.ICollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination array.","nodes":[{"pos":[0,126],"content":"<code>array</code> is multidimensional.  \n  \n <code>index</code> is equal to or greater than the length of <code>array</code>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is multidimensional.","pos":[0,39],"source":"<code>array</code> is multidimensional."},{"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than the length of <ph id=\"ph2\">&lt;code&gt;array&lt;/code&gt;</ph>.","pos":[46,126],"source":"<code>index</code> is equal to or greater than the length of <code>array</code>."}]},{"pos":[133,318],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> is greater than the available space from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> to the end of the destination array.","source":"The number of elements in the source <xref href=\"System.Collections.ICollection\"></xref> is greater than the available space from <code>index</code> to the end of the destination array."}],"pos":[73511,73838],"yaml":true},{"content":"The type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.","nodes":[{"pos":[0,149],"content":"The type <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> cannot be cast automatically to the type of the destination <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> cannot be cast automatically to the type of the destination <code>array</code>."}],"pos":[73938,74088],"yaml":true},{"content":"Gets the number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,107],"content":"Gets the number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[75355,75463],"yaml":true},{"content":"The number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,102],"content":"The number of elements contained in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[75641,75744],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Collections.IList\"></xref> is read-only.","nodes":[{"pos":[0,99],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value that indicates whether the <xref href=\"System.Collections.IList\"></xref> is read-only."}],"pos":[77207,77307],"yaml":true},{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","nodes":[{"pos":[0,129],"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","nodes":[{"content":"A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.","pos":[0,129]}]}],"pos":[77318,77448],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`."}],"pos":[77634,77730],"yaml":true},{"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,121],"content":"Removes the first occurrence of a specific object from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[79325,79447],"yaml":true},{"content":"Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas, <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.  \n  \n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"pos":[0,366],"content":"Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas, <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.","nodes":[{"content":"Implementations can vary in how they determine equality of objects; for example, <ph id=\"ph1\">&lt;xref:System.Collections.Generic.List%601&gt;</ph> uses <ph id=\"ph2\">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A&gt;</ph>, whereas, <ph id=\"ph3\">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> allows the user to specify the <ph id=\"ph4\">&lt;xref:System.Collections.Generic.IComparer%601&gt;</ph> implementation to use for comparing keys.","pos":[0,366],"source":"Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas, <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys."}]},{"pos":[373,718],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,345],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]}]}]}],"pos":[79458,80181],"yaml":true,"extradata":"MT"},{"content":"The object to remove from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,92],"content":"The object to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to remove from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[80388,80481],"yaml":true},{"content":"`true` if <code>item</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`. This method also returns `false` if <code>item</code> is not found in the original <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,290],"content":"`true` if <code>item</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`. This method also returns `false` if <code>item</code> is not found in the original <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> was successfully removed from the <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","pos":[0,144],"source":"`true` if <code>item</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`."},{"content":"This method also returns <ph id=\"ph1\">`false`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not found in the original <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","pos":[145,290],"source":" This method also returns `false` if <code>item</code> is not found in the original <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}]}],"pos":[80539,80832],"yaml":true},{"content":"The `ICollection` is read-only.","nodes":[{"pos":[0,31],"content":"The <ph id=\"ph1\">`ICollection`</ph> is read-only.","source":"The `ICollection` is read-only."}],"pos":[81098,81130],"yaml":true},{"content":"Returns an enumerator that iterates through the collection.","nodes":[{"pos":[0,59],"content":"Returns an enumerator that iterates through the collection.","nodes":[{"content":"Returns an enumerator that iterates through the collection.","pos":[0,59]}]}],"pos":[82449,82509],"yaml":true},{"content":"The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators. Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \n  \n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \n  \n Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.  \n  \n <xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.  \n  \n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.  \n  \n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \n  \n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration. To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \n  \n Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized.","nodes":[{"pos":[0,223],"content":"The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators. Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.","nodes":[{"content":"The <ph id=\"ph1\">`foreach`</ph> statement of the C# language (<ph id=\"ph2\">`for each`</ph> in C++, <ph id=\"ph3\">`For Each`</ph> in Visual Basic) hides the complexity of the enumerators.","pos":[0,131],"source":"The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators."},{"content":"Therefore, using <ph id=\"ph1\">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.","pos":[132,223],"source":" Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator."}]},{"pos":[230,350],"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","nodes":[{"content":"Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.","pos":[0,120]}]},{"pos":[357,763],"content":"Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.","nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.","pos":[0,406],"nodes":[{"content":"Initially, the enumerator is positioned before the first element in the collection.","pos":[0,83]},{"content":"At this position, <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.","pos":[84,176],"source":" At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined."},{"content":"Therefore, you must call <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph>.","pos":[177,406],"source":" Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>."}]}]},{"pos":[770,1058],"content":"<xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.","nodes":[{"content":"<xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.","pos":[0,288],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> returns the same object until <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> is called.","pos":[0,151],"source":"<xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called."},{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the next element.","pos":[152,288],"source":" <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element."}]}]},{"pos":[1065,1754],"content":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.","nodes":[{"content":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.","pos":[0,689],"nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns false.","pos":[0,225],"source":"If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false."},{"content":"When the enumerator is at this position, subsequent calls to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return false.","pos":[226,355],"source":" When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false."},{"content":"If the last call to <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned false, <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> is undefined.","pos":[356,516],"source":" If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined."},{"content":"You cannot set <ph id=\"ph1\">&lt;xref:System.Collections.Generic.IEnumerator%601.Current%2A&gt;</ph> to the first element of the collection again; you must create a new enumerator instance instead.","pos":[517,689],"source":" You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead."}]}]},{"pos":[1761,1996],"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[0,235],"nodes":[{"content":"An enumerator remains valid as long as the collection remains unchanged.","pos":[0,72]},{"content":"If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.","pos":[73,235]}]}]},{"pos":[2003,2392],"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration. To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration. To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[0,389],"nodes":[{"content":"The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,154]},{"content":"To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.","pos":[155,260]},{"content":"To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.","pos":[261,389]}]}]},{"pos":[2399,2510],"content":"Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized.","nodes":[{"content":"Default implementations of collections in the <ph id=\"ph1\">&lt;xref:System.Collections.Generic&gt;</ph> namespace are not synchronized.","pos":[0,111],"source":"Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized."}]}],"pos":[82520,85047],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> that can be used to iterate through the collection.","nodes":[{"pos":[0,116],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the collection.","source":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> that can be used to iterate through the collection."}],"pos":[85332,85449],"yaml":true},{"content":"Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"Determines the index of a specific item in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[87017,87111],"yaml":true},{"content":"If an object occurs multiple times in the list, the `IndexOf` method always returns the first instance found.","nodes":[{"pos":[0,109],"content":"If an object occurs multiple times in the list, the <ph id=\"ph1\">`IndexOf`</ph> method always returns the first instance found.","source":"If an object occurs multiple times in the list, the `IndexOf` method always returns the first instance found."}],"pos":[87122,87232],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,74],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[87433,87508],"yaml":true},{"content":"The index of <code>item</code> if found in the list; otherwise, -1.","nodes":[{"pos":[0,67],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">item</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","source":"The index of <code>item</code> if found in the list; otherwise, -1."}],"pos":[87564,87632],"yaml":true},{"content":"Inserts an <xref href=\"System.Object\"></xref> into the <xref href=\"System.Collections.IList\"></xref> at the zero-based index specified.","nodes":[{"pos":[0,135],"content":"Inserts an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> at the zero-based index specified.","source":"Inserts an <xref href=\"System.Object\"></xref> into the <xref href=\"System.Collections.IList\"></xref> at the zero-based index specified."}],"pos":[89242,89378],"yaml":true},{"content":"If the <xref:System.Object> cannot be cast to an <xref:System.Workflow.ComponentModel.Activity>, a custom <xref:System.Exception> is raised.","nodes":[{"pos":[0,140],"content":"If the <xref:System.Object> cannot be cast to an <xref:System.Workflow.ComponentModel.Activity>, a custom <xref:System.Exception> is raised.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Object&gt;</ph> cannot be cast to an <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.Activity&gt;</ph>, a custom <ph id=\"ph3\">&lt;xref:System.Exception&gt;</ph> is raised.","pos":[0,140],"source":"If the <xref:System.Object> cannot be cast to an <xref:System.Workflow.ComponentModel.Activity>, a custom <xref:System.Exception> is raised."}]}],"pos":[89389,89530],"yaml":true,"extradata":"MT"},{"content":"The zero-based position of the insertion.","nodes":[{"pos":[0,41],"content":"The zero-based position of the insertion.","nodes":[{"content":"The zero-based position of the insertion.","pos":[0,41]}]}],"pos":[89716,89758],"yaml":true},{"content":"The object to insert. It must be of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,102],"content":"The object to insert. It must be of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"content":"The object to insert.","pos":[0,21]},{"content":"It must be of type <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","pos":[22,102],"source":" It must be of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}]}],"pos":[89844,89947],"yaml":true},{"content":"Gets or sets the element at the specified index.","nodes":[{"pos":[0,48],"content":"Gets or sets the element at the specified index.","nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]}],"pos":[91396,91445],"yaml":true},{"content":"This property provides the ability to access a specific element in the collection by using the following syntax: myCollection[index].  \n  \n The C# language uses the `this` keyword to define the indexers instead of implementing the `Item` property. Visual Basic implements `Item` as a default property, which provides the same indexing functionality.","nodes":[{"pos":[0,133],"content":"This property provides the ability to access a specific element in the collection by using the following syntax: myCollection[index].","nodes":[{"content":"This property provides the ability to access a specific element in the collection by using the following syntax: myCollection[index].","pos":[0,133]}]},{"pos":[140,349],"content":"The C# language uses the `this` keyword to define the indexers instead of implementing the `Item` property. Visual Basic implements `Item` as a default property, which provides the same indexing functionality.","nodes":[{"content":"The C# language uses the <ph id=\"ph1\">`this`</ph> keyword to define the indexers instead of implementing the <ph id=\"ph2\">`Item`</ph> property.","pos":[0,107],"source":"The C# language uses the `this` keyword to define the indexers instead of implementing the `Item` property."},{"content":"Visual Basic implements <ph id=\"ph1\">`Item`</ph> as a default property, which provides the same indexing functionality.","pos":[108,209],"source":" Visual Basic implements `Item` as a default property, which provides the same indexing functionality."}]}],"pos":[91456,91810],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the element to get or set.","nodes":[{"pos":[0,50],"content":"The zero-based index of the element to get or set.","nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]}],"pos":[92053,92104],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> at the specified index.","nodes":[{"pos":[0,62],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"The <xref href=\"System.Object\"></xref> at the specified index."}],"pos":[92187,92250],"yaml":true},{"content":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[92520,92614],"yaml":true},{"content":"The `ICollection` is read-only.","nodes":[{"pos":[0,31],"content":"The <ph id=\"ph1\">`ICollection`</ph> is read-only.","source":"The `ICollection` is read-only."}],"pos":[92716,92748],"yaml":true},{"content":"Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index.","nodes":[{"pos":[0,86],"content":"Removes the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> item at the specified index.","source":"Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index."}],"pos":[94003,94090],"yaml":true},{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"pos":[0,345],"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[0,345],"nodes":[{"content":"In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.","pos":[0,134]},{"content":"If the collection is indexed, the indexes of the elements that are moved are also updated.","pos":[135,225]},{"content":"This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.","pos":[226,345]}]}]}],"pos":[94101,94447],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the item to remove.","nodes":[{"pos":[0,43],"content":"The zero-based index of the item to remove.","nodes":[{"content":"The zero-based index of the item to remove.","pos":[0,43]}]}],"pos":[94589,94633],"yaml":true},{"content":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is not a valid index in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[94907,95001],"yaml":true},{"content":"The `ICollection` is read-only.","nodes":[{"pos":[0,31],"content":"The <ph id=\"ph1\">`ICollection`</ph> is read-only.","source":"The `ICollection` is read-only."}],"pos":[95103,95135],"yaml":true},{"content":"Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index.","nodes":[{"pos":[0,185],"content":"Copies the elements of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> to an <ph id=\"ph2\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph>, starting at a particular <ph id=\"ph3\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> index.","source":"Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index."}],"pos":[96352,96538],"yaml":true},{"content":"The <xref href=\"System.Array\"></xref> which is the target of the copy operation.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> which is the target of the copy operation.","source":"The <xref href=\"System.Array\"></xref> which is the target of the copy operation."}],"pos":[96687,96768],"yaml":true},{"content":"The zero-based index within the <xref href=\"System.Collections.ICollection\"></xref> where the copy starts.","nodes":[{"pos":[0,106],"content":"The zero-based index within the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> where the copy starts.","source":"The zero-based index within the <xref href=\"System.Collections.ICollection\"></xref> where the copy starts."}],"pos":[96828,96935],"yaml":true},{"content":"Gets a value that indicates whether access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is synchronized, that is thread-safe.","nodes":[{"pos":[0,149],"content":"Gets a value that indicates whether access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> is synchronized, that is thread-safe.","source":"Gets a value that indicates whether access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is synchronized, that is thread-safe."}],"pos":[98197,98347],"yaml":true},{"content":"<xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.Generic.ICollection%601>.  \n  \n Most collection classes in the <xref:System.Collections?displayProperty=fullName> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.  \n  \n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"pos":[0,166],"content":"<xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.Generic.ICollection%601>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph>.","pos":[0,166],"source":"<xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.Generic.ICollection%601>."}]},{"pos":[173,376],"content":"Most collection classes in the <ph id=\"ph1\">&lt;xref:System.Collections?displayProperty=fullName&gt;</ph> namespace also implement a <ph id=\"ph2\">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.","source":"Most collection classes in the <xref:System.Collections?displayProperty=fullName> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection."},{"pos":[383,781],"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[0,398],"nodes":[{"content":"Enumerating through a collection is intrinsically not a thread-safe procedure.","pos":[0,78]},{"content":"Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.","pos":[79,216]},{"content":"To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.","pos":[217,398]}]}]}],"pos":[98358,99146],"yaml":true,"extradata":"MT"},{"content":"`true` if access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is synchronized, that is, thread-safe; otherwise, `false`.","nodes":[{"pos":[0,144],"content":"<ph id=\"ph1\">`true`</ph> if access to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> is synchronized, that is, thread-safe; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is synchronized, that is, thread-safe; otherwise, `false`."}],"pos":[99287,99434],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,123],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[100668,100792],"yaml":true},{"content":"For collections whose underlying store is not publicly available, the expected implementation is to return the current instance. Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property.  \n  \n Most collection classes in the <xref:System.Collections?displayProperty=fullName> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection. However, derived classes can provide their own synchronized version of the collection using the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property. The synchronizing code must perform operations on the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property of the collection, not directly on the collection. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.","nodes":[{"pos":[0,349],"content":"For collections whose underlying store is not publicly available, the expected implementation is to return the current instance. Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property.","nodes":[{"content":"For collections whose underlying store is not publicly available, the expected implementation is to return the current instance. Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property.","pos":[0,349],"nodes":[{"content":"For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.","pos":[0,128]},{"content":"Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <ph id=\"ph1\">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.","pos":[129,349],"source":" Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property."}]}]},{"pos":[356,1200],"content":"Most collection classes in the <xref:System.Collections?displayProperty=fullName> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection. However, derived classes can provide their own synchronized version of the collection using the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property. The synchronizing code must perform operations on the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property of the collection, not directly on the collection. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.","nodes":[{"content":"Most collection classes in the <ph id=\"ph1\">&lt;xref:System.Collections?displayProperty=fullName&gt;</ph> namespace also implement a <ph id=\"ph2\">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.","pos":[0,203],"source":"Most collection classes in the <xref:System.Collections?displayProperty=fullName> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection."},{"content":"However, derived classes can provide their own synchronized version of the collection using the <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot&gt;</ph> property.","pos":[204,412],"source":" However, derived classes can provide their own synchronized version of the collection using the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property."},{"content":"The synchronizing code must perform operations on the <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot&gt;</ph> property of the collection, not directly on the collection.","pos":[413,629],"source":" The synchronizing code must perform operations on the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property of the collection, not directly on the collection."},{"content":"This ensures proper operation of collections that are derived from other objects.","pos":[630,711]},{"content":"Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.","pos":[712,844]}]}],"pos":[100803,102008],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to synchronize access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.","nodes":[{"pos":[0,118],"content":"An object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"An object that can be used to synchronize access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>."}],"pos":[102144,102263],"yaml":true},{"content":"Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the underlying <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,146],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that iterates through the underlying <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the underlying <xref href=\"System.Collections.IList\"></xref>."}],"pos":[103525,103672],"yaml":true},{"content":"An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection. You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection.","nodes":[{"pos":[0,185],"content":"An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection. You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection.","nodes":[{"content":"An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection. You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection.","pos":[0,185],"nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator&gt;</ph> only allows for reading the data in the collection.","pos":[0,92],"source":"An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection."},{"content":"You cannot use an <ph id=\"ph1\">&lt;xref:System.Collections.IEnumerator&gt;</ph> to modify the underlying collection.","pos":[93,185],"source":" You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection."}]}]}],"pos":[103683,103869],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the collection.","nodes":[{"pos":[0,106],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the collection.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the collection."}],"pos":[104046,104153],"yaml":true},{"content":"Adds an object to the <xref href=\"System.Collections.IList\"></xref> at the end of the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,132],"content":"Adds an object to the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> at the end of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Adds an object to the <xref href=\"System.Collections.IList\"></xref> at the end of the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[105387,105520],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to add to the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[105650,105750],"yaml":true},{"content":"Returns <xref href=\"System.Int32\"></xref>.  \n  \n The zero-based index of the <xref href=\"System.Object\"></xref> that was just added.","nodes":[{"pos":[0,42],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Int32\"></xref>."},{"pos":[49,132],"content":"The zero-based index of the <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that was just added.","source":"The zero-based index of the <xref href=\"System.Object\"></xref> that was just added."}],"pos":[105806,105947],"yaml":true},{"content":"Removes all <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,134],"content":"Removes all <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> from the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes all <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[107114,107249],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Object\"></xref> is a member of the collection.","nodes":[{"pos":[0,105],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is a member of the collection.","source":"Gets a value that indicates whether the <xref href=\"System.Object\"></xref> is a member of the collection."}],"pos":[108562,108668],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[108804,108907],"yaml":true},{"content":"Returns <xref href=\"System.Boolean\"></xref>`true` if <code>value</code> is in the collection; otherwise, `false`.","nodes":[{"pos":[0,113],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is in the collection; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"Returns <xref href=\"System.Boolean\"></xref>`true` if <code>value</code> is in the collection; otherwise, `false`."}],"pos":[108965,109079],"yaml":true},{"content":"Gets the zero-based index of the <xref href=\"System.Object\"></xref> in the underlying activities collection.","nodes":[{"pos":[0,108],"content":"Gets the zero-based index of the <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> in the underlying activities collection.","source":"Gets the zero-based index of the <xref href=\"System.Object\"></xref> in the underlying activities collection."}],"pos":[110326,110435],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to be indexed.","nodes":[{"pos":[0,53],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to be indexed.","source":"The <xref href=\"System.Object\"></xref> to be indexed."}],"pos":[110569,110623],"yaml":true},{"content":"The zero-based index of the <code>value</code> in the underlying activities collection or -1 if not found in the collection.","nodes":[{"pos":[0,124],"content":"The zero-based index of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the underlying activities collection or -1 if not found in the collection.","source":"The zero-based index of the <code>value</code> in the underlying activities collection or -1 if not found in the collection."}],"pos":[110679,110804],"yaml":true},{"content":"The <code>value</code> is not of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> and the exception object contains \"Error_InvalidListItem\" error message.","nodes":[{"pos":[0,171],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not of type <ph id=\"ph2\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> and the exception object contains \"Error_InvalidListItem\" error message.","source":"The <code>value</code> is not of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> and the exception object contains \"Error_InvalidListItem\" error message."}],"pos":[111008,111180],"yaml":true},{"content":"Inserts an <xref href=\"System.Object\"></xref> into the <xref href=\"System.Collections.IList\"></xref> at the zero-based index specified.","nodes":[{"pos":[0,135],"content":"Inserts an <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> into the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> at the zero-based index specified.","source":"Inserts an <xref href=\"System.Object\"></xref> into the <xref href=\"System.Collections.IList\"></xref> at the zero-based index specified."}],"pos":[112367,112503],"yaml":true},{"content":"The zero-based position of the insertion.","nodes":[{"pos":[0,41],"content":"The zero-based position of the insertion.","nodes":[{"content":"The zero-based position of the insertion.","pos":[0,41]}]}],"pos":[112647,112689],"yaml":true},{"content":"The object to insert. It must be of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"pos":[0,102],"content":"The object to insert. It must be of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.","nodes":[{"content":"The object to insert.","pos":[0,21]},{"content":"It must be of type <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph>.","pos":[22,102],"source":" It must be of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>."}]}],"pos":[112750,112853],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size.","nodes":[{"pos":[0,99],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size."}],"pos":[114055,114155],"yaml":true},{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.","nodes":[{"pos":[0,167],"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.","nodes":[{"content":"A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.","pos":[0,167]}]}],"pos":[114166,114334],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`.","nodes":[{"pos":[0,97],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`."}],"pos":[114466,114566],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only.","nodes":[{"pos":[0,111],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"Gets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only."}],"pos":[115767,115879],"yaml":true},{"content":"Returns <xref href=\"System.Boolean\"></xref>`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`.","nodes":[{"pos":[0,152],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph><ph id=\"ph2\">`true`</ph> if the <ph id=\"ph3\">&lt;xref href=\"System.Collections.Generic.ICollection`1\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"Returns <xref href=\"System.Boolean\"></xref>`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`."}],"pos":[116010,116163],"yaml":true},{"content":"Gets or sets the activity in the <xref href=\"System.Collections.ICollection\"></xref> based on the index.","nodes":[{"pos":[0,104],"content":"Gets or sets the activity in the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> based on the index.","source":"Gets or sets the activity in the <xref href=\"System.Collections.ICollection\"></xref> based on the index."}],"pos":[117390,117495],"yaml":true},{"content":"Zero-based index into the <xref href=\"System.Collections.ICollection\"></xref>.","nodes":[{"pos":[0,78],"content":"Zero-based index into the <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>.","source":"Zero-based index into the <xref href=\"System.Collections.ICollection\"></xref>."}],"pos":[117656,117735],"yaml":true},{"content":"Returns <xref href=\"System.Object\"></xref>, a member activity of the <xref href=\"System.Collections.ICollection\"></xref>, whose index in the <xref href=\"System.Collections.ICollection\"></xref> was specified in the call.","nodes":[{"pos":[0,219],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>, a member activity of the <ph id=\"ph2\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph>, whose index in the <ph id=\"ph3\">&lt;xref href=\"System.Collections.ICollection\"&gt;&lt;/xref&gt;</ph> was specified in the call.","source":"Returns <xref href=\"System.Object\"></xref>, a member activity of the <xref href=\"System.Collections.ICollection\"></xref>, whose index in the <xref href=\"System.Collections.ICollection\"></xref> was specified in the call."}],"pos":[117792,118012],"yaml":true},{"content":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,105],"content":"Removes the first occurrence of a specific object from the <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[119249,119355],"yaml":true},{"content":"The elements that follow the removed element move up to occupy the vacated spot.","nodes":[{"pos":[0,80],"content":"The elements that follow the removed element move up to occupy the vacated spot.","nodes":[{"content":"The elements that follow the removed element move up to occupy the vacated spot.","pos":[0,80]}]}],"pos":[119366,119447],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.IList\"></xref>.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to remove from the <ph id=\"ph2\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.IList\"></xref>."}],"pos":[119581,119686],"yaml":true},{"content":"The <xref href=\"System.Collections.IList\"></xref> is read-only.  \n  \n <xref href=\"System.Collections.IList\"></xref> has a fixed size.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> is read-only.","source":"The <xref href=\"System.Collections.IList\"></xref> is read-only."},{"pos":[70,133],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Collections.IList\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"<xref href=\"System.Collections.IList\"></xref> has a fixed size."}],"pos":[119897,120039],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.ComponentModel.ActivityCollection\n  commentId: T:System.Workflow.ComponentModel.ActivityCollection\n  id: ActivityCollection\n  children:\n  - System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.Clear\n  - System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.Count\n  - System.Workflow.ComponentModel.ActivityCollection.GetEnumerator\n  - System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.Item(System.String)\n  - System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)\n  - System.Workflow.ComponentModel.ActivityCollection.ListChanged\n  - System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)\n  - System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: ActivityCollection\n  nameWithType: ActivityCollection\n  fullName: System.Workflow.ComponentModel.ActivityCollection\n  type: Class\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Models a strongly typed <xref href=\"System.Collections.ICollection\"></xref> of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n This class is used to represent the list of child activities for a <xref:System.Workflow.ComponentModel.CompositeActivity>.  \\n  \\n> [!NOTE]\\n>  Only call methods derived from <xref:System.Collections.Generic.IList%601> and not <xref:System.Collections.Generic.List%601>, such as using <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A> to add activities instead of <xref:System.Collections.Generic.List%601.AddRange%2A>. Calling methods derived from <xref:System.Collections.Generic.List%601> will have unexpected consequences.\"\n  example:\n  - \"The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities. This code example is part of the Using Throw SDK Sample and is from the ThrowWorkflow.cs file. For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/en-us/82bc0fef-d78a-4750-82b4-e4cb397a10f1).  \\n  \\n [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]\\n [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public sealed class ActivityCollection : System.Collections.Generic.List<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>, System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>\n  inheritance:\n  - System.Object\n  - System.Collections.Generic.List`1\n  implements:\n  - System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity}\n  - System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}\n  - System.Collections.Generic.IList{System.Workflow.ComponentModel.Activity}\n  inheritedMembers:\n  - System.Collections.Generic.List`1.Add(`0)\n  - System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.List`1.AsReadOnly\n  - System.Collections.Generic.List`1.BinarySearch(`0)\n  - System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.List`1.Capacity\n  - System.Collections.Generic.List`1.Contains(`0)\n  - System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})\n  - System.Collections.Generic.List`1.CopyTo(`0[])\n  - System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)\n  - System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Exists(System.Predicate{`0})\n  - System.Collections.Generic.List`1.Find(System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindAll(System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindLast(System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})\n  - System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})\n  - System.Collections.Generic.List`1.ForEach(System.Action{`0})\n  - System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.IndexOf(`0)\n  - System.Collections.Generic.List`1.IndexOf(`0,System.Int32)\n  - System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Insert(System.Int32,`0)\n  - System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})\n  - System.Collections.Generic.List`1.LastIndexOf(`0)\n  - System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)\n  - System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Remove(`0)\n  - System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})\n  - System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Reverse\n  - System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Sort\n  - System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.List`1.Sort(System.Comparison{`0})\n  - System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})\n  - System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Collections.Generic.List`1.ToArray\n  - System.Collections.Generic.List`1.TrimExcess\n  - System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)\n  id: '#ctor(System.Workflow.ComponentModel.Activity)'\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ActivityCollection(Activity)\n  nameWithType: ActivityCollection.ActivityCollection(Activity)\n  fullName: ActivityCollection.ActivityCollection(Activity)\n  type: Constructor\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.ComponentModel.ActivityCollection\"></xref> class, initializing an owner <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  remarks: Example\n  syntax:\n    content: public ActivityCollection (System.Workflow.ComponentModel.Activity owner);\n    parameters:\n    - id: owner\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> designated as owning this instance.\n  overload: System.Workflow.ComponentModel.ActivityCollection.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>owner</code> is a null reference (`Nothing` in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>owner</code> is not a descendent of <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)\n  id: Add(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: Add(Activity)\n  nameWithType: ActivityCollection.Add(Activity)\n  fullName: ActivityCollection.Add(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Adds the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to the <xref href=\"System.Collections.ICollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example shows access of the <xref:System.Workflow.ComponentModel.ActivityCollection> which is the member of a composite activity class containing all child activities. This example illustrates the use of <xref:System.Workflow.ComponentModel.ActivityCollection.Add%2A>. This code example is part of the Throw SDK sample and is from the ThrowWorkflow.cs file. For more information, see [Using the ThrowActivity Activity](http://msdn.microsoft.com/en-us/82bc0fef-d78a-4750-82b4-e4cb397a10f1).  \\n  \\n [!code-csharp[WF_Samples#179](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#179)]\\n [!code-vb[WF_Samples#179](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#179)]\"\n  syntax:\n    content: public void Add (System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to be added to the <xref href=\"System.Collections.ICollection\"></xref>.\n  overload: System.Workflow.ComponentModel.ActivityCollection.Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.Clear\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.Clear\n  id: Clear\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ActivityCollection.Clear()\n  fullName: ActivityCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Removes every <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from the <xref href=\"System.Collections.ICollection\"></xref>.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.ActivityCollection.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)\n  id: Contains(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: Contains(Activity)\n  nameWithType: ActivityCollection.Contains(Activity)\n  fullName: ActivityCollection.Contains(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Provides a test for membership of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>.\n  remarks: This <xref:System.Collections.ICollection> is type-safe. A run-time exception is raised if the item is not of type <xref:System.Workflow.ComponentModel.Activity>.\n  syntax:\n    content: public bool Contains (System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> being tested for membership.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> belongs to the <xref href=\"System.Collections.ICollection\"></xref>; otherwise, `false`.'\n  overload: System.Workflow.ComponentModel.ActivityCollection.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.Count\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.Count\n  id: Count\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ActivityCollection.Count\n  fullName: ActivityCollection.Count\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the number of members of the <xref href=\"System.Collections.ICollection\"></xref>.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of members of the <xref href=\"System.Collections.ICollection\"></xref>.\n  overload: System.Workflow.ComponentModel.ActivityCollection.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ActivityCollection.GetEnumerator()\n  fullName: ActivityCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Implements an enumeration interface to the <xref href=\"System.Collections.ICollection\"></xref>.\n  remarks: \"Enumerators only enable reading the data in the collection. You cannot use enumerators to modify the underlying collection.  \\n  \\n To begin, the enumerator is positioned before the first element in the collection. <xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position. At this position, calling <xref:System.Collections.IEnumerator.Current%2A>raises an exception. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.  \\n  \\n <xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.  \\n  \\n After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> raises an exception.  \\n  \\n To set `Current` to the first element of the collection again, you can call `Reset` followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying or deleting elements, the enumerator is irreversibly invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or `Reset` raises an <xref:System.InvalidOperationException> . If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the element that it is set to, even if the enumerator is already invalidated.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads could still modify the collection. This causes the enumerator to raise an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}\n      description: Returns an enumerator that can iterate through the <xref href=\"System.Collections.ReadOnlyCollectionBase\"></xref> instance.\n  overload: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)\n  id: IndexOf(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IndexOf(Activity)\n  nameWithType: ActivityCollection.IndexOf(Activity)\n  fullName: ActivityCollection.IndexOf(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the index of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>.\n  remarks: This collection is type-safe. A run-time exception will be raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.\n  syntax:\n    content: public int IndexOf (System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The activity for which to acquire the index.\n    return:\n      type: System.Int32\n      description: The index of the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref>. Otherwise -1 (if <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> is not in the <xref href=\"System.Collections.ICollection\"></xref>).\n  overload: System.Workflow.ComponentModel.ActivityCollection.IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  id: Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: Insert(Int32, Activity)\n  nameWithType: ActivityCollection.Insert(Int32, Activity)\n  fullName: ActivityCollection.Insert(Int32, Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Inserts the item at the index in the <xref href=\"System.Collections.ICollection\"></xref>.\n  remarks: This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.\n  syntax:\n    content: public void Insert (int index, System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Zero-based index of the collection at which to insert the item.\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> to be inserted into the collection.\n  overload: System.Workflow.ComponentModel.ActivityCollection.Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.String)\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: ActivityCollection.Item(String)\n  fullName: ActivityCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the activity in the <xref href=\"System.Collections.ICollection\"></xref> based on the string which is a unique key.\n  remarks: If there is no <xref:System.Workflow.ComponentModel.Activity> in the <xref:System.Collections.ICollection> with specified key, an exception is raised.\n  syntax:\n    content: public System.Workflow.ComponentModel.Activity this[string key] { get; }\n    parameters:\n    - id: key\n      type: System.String\n      description: Unique identifier for activity in the <xref href=\"System.Collections.ICollection\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: A member <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> of the <xref href=\"System.Collections.ICollection\"></xref>; the key in the <xref href=\"System.Collections.ICollection\"></xref> which was specified in the call.\n  overload: System.Workflow.ComponentModel.ActivityCollection.Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ActivityCollection.Item(Int32)\n  fullName: ActivityCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets the activity in the <xref href=\"System.Collections.ICollection\"></xref> based on the index.\n  syntax:\n    content: public System.Workflow.ComponentModel.Activity this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Zero-based index into the <xref href=\"System.Collections.ICollection\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: A member activity of the <xref href=\"System.Collections.ICollection\"></xref>, whose index in the <xref href=\"System.Collections.ICollection\"></xref> was specified in the call.\n  overload: System.Workflow.ComponentModel.ActivityCollection.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a valid index in <xref href=\"System.Collections.IList\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The property is set and the <xref href=\"System.Collections.IList\"></xref> is read-only.\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: An attempt to set to an <xref href=\"System.Object\"></xref> that is not an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.ListChanged\n  commentId: E:System.Workflow.ComponentModel.ActivityCollection.ListChanged\n  id: ListChanged\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ListChanged\n  nameWithType: ActivityCollection.ListChanged\n  fullName: ActivityCollection.ListChanged\n  type: Event\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Raised whenever a change is made to the contents of this <xref href=\"System.Collections.ICollection\"></xref>.\n  remarks: \"In this context, adding or removing members raises the event. Modifying a member does not raise this event.  \\n  \\n When you create an <xref:System.Workflow.ComponentModel.ActivityCollection> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information about event-handler delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115).\"\n  syntax:\n    content: public event EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs> ListChanged;\n    return:\n      type: System.EventHandler{System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)\n  id: Remove(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: Remove(Activity)\n  nameWithType: ActivityCollection.Remove(Activity)\n  fullName: ActivityCollection.Remove(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Removes the activity specified in the call from the <xref href=\"System.Collections.ICollection\"></xref>.\n  remarks: This <xref:System.Collections.ICollection> is type safe. A run-time exception is raised if an item is not of type <xref:System.Workflow.ComponentModel.Activity>.\n  syntax:\n    content: public bool Remove (System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The activity to remove from the <xref href=\"System.Collections.ICollection\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the operation succeeded; otherwise, `false`.'\n  overload: System.Workflow.ComponentModel.ActivityCollection.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: ActivityCollection.RemoveAt(Int32)\n  fullName: ActivityCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Removes the <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> in the <xref href=\"System.Collections.ICollection\"></xref> at the specified <code>index</code>.\n  remarks: A run-time exception occurs if the index is not valid (out of range).\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Position in a zero-based index to remove the activity from the collection.\n  overload: System.Workflow.ComponentModel.ActivityCollection.RemoveAt*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Add(System.Workflow.ComponentModel.Activity)\n  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection<Activity>.Add(Activity)\n  nameWithType: ActivityCollection.ICollection<Activity>.Add(Activity)\n  fullName: ActivityCollection.ICollection<Activity>.Add(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Adds an object to the <xref href=\"System.Collections.IList\"></xref> at the end of the <xref href=\"System.Collections.IList\"></xref>.\n  remarks: Raises an exception with the error message \"Error_InvalidListItem\" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.\n  syntax:\n    content: void ICollection<Activity>.Add (System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Collections.IList\"></xref>.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Clear\n  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection<Activity>.Clear()\n  nameWithType: ActivityCollection.ICollection<Activity>.Clear()\n  fullName: ActivityCollection.ICollection<Activity>.Clear()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Clears all activities from the <xref href=\"System.Collections.IList\"></xref>.\n  remarks: The <xref:System.Collections.CollectionBase.Count%2A> property is zero after this operation is finished.\n  syntax:\n    content: void ICollection<Activity>.Clear ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Contains(System.Workflow.ComponentModel.Activity)\n  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection<Activity>.Contains(Activity)\n  nameWithType: ActivityCollection.ICollection<Activity>.Contains(Activity)\n  fullName: ActivityCollection.ICollection<Activity>.Contains(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets a value that indicates whether the <xref href=\"System.Object\"></xref> is a member of the collection.\n  remarks: Raises an exception with the error message \"Error_InvalidListItem\" if the <xref:System.Object> is not of type <xref:System.Workflow.ComponentModel.Activity>.\n  syntax:\n    content: bool ICollection<Activity>.Contains (System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if value is in the collection; otherwise, `false`.'\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection<Activity>.CopyTo(Activity[], Int32)\n  nameWithType: ActivityCollection.ICollection<Activity>.CopyTo(Activity[], Int32)\n  fullName: ActivityCollection.ICollection<Activity>.CopyTo(Activity[], Int32)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index.\n  syntax:\n    content: void ICollection<Activity>.CopyTo (System.Workflow.ComponentModel.Activity[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Workflow.ComponentModel.Activity[]\n      description: The <xref href=\"System.Array\"></xref> which is the target of the copy operation.\n    - id: arrayIndex\n      type: System.Int32\n      description: The zero-based index within the <xref href=\"System.Collections.ICollection\"></xref> where the copy starts.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is a null reference (`Nothing` in Visual Basic).\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than zero.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>array</code> is multidimensional.  \\n  \\n <code>index</code> is equal to or greater than the length of <code>array</code>.  \\n  \\n The number of elements in the source <xref href=\\\"System.Collections.ICollection\\\"></xref> is greater than the available space from <code>index</code> to the end of the destination array.\"\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> cannot be cast automatically to the type of the destination <code>array</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Count\n  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection<Activity>.Count\n  nameWithType: ActivityCollection.ICollection<Activity>.Count\n  fullName: ActivityCollection.ICollection<Activity>.Count\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  syntax:\n    content: int System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained in the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection<Activity>.IsReadOnly\n  nameWithType: ActivityCollection.ICollection<Activity>.IsReadOnly\n  fullName: ActivityCollection.ICollection<Activity>.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets a value that indicates whether the <xref href=\"System.Collections.IList\"></xref> is read-only.\n  remarks: A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.IList\"></xref> is read-only; otherwise, `false`.'\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection<System#Workflow#ComponentModel#Activity>#Remove(System.Workflow.ComponentModel.Activity)\n  id: System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection<Activity>.Remove(Activity)\n  nameWithType: ActivityCollection.ICollection<Activity>.Remove(Activity)\n  fullName: ActivityCollection.ICollection<Activity>.Remove(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Removes the first occurrence of a specific object from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  remarks: \"Implementations can vary in how they determine equality of objects; for example, <xref:System.Collections.Generic.List%601> uses <xref:System.Collections.Generic.Comparer%601.Default%2A>, whereas, <xref:System.Collections.Generic.Dictionary%602> allows the user to specify the <xref:System.Collections.Generic.IComparer%601> implementation to use for comparing keys.  \\n  \\n In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.\"\n  syntax:\n    content: bool ICollection<Activity>.Remove (System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The object to remove from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>item</code> was successfully removed from the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>; otherwise, `false`. This method also returns `false` if <code>item</code> is not found in the original <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.'\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The `ICollection` is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable<System#Workflow#ComponentModel#Activity>#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IEnumerable<Activity>.GetEnumerator()\n  nameWithType: ActivityCollection.IEnumerable<Activity>.GetEnumerator()\n  fullName: ActivityCollection.IEnumerable<Activity>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns an enumerator that iterates through the collection.\n  remarks: \"The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators. Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.  \\n  \\n Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.  \\n  \\n Initially, the enumerator is positioned before the first element in the collection. At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.  \\n  \\n <xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called. <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.  \\n  \\n If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns false. When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return false. If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned false, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined. You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.  \\n  \\n An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.  \\n  \\n The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure. To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration. To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.  \\n  \\n Default implementations of collections in the <xref:System.Collections.Generic> namespace are not synchronized.\"\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity> IEnumerable<Activity>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}\n      description: An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> that can be used to iterate through the collection.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#IndexOf(System.Workflow.ComponentModel.Activity)\n  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList<Activity>.IndexOf(Activity)\n  nameWithType: ActivityCollection.IList<Activity>.IndexOf(Activity)\n  fullName: ActivityCollection.IList<Activity>.IndexOf(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Determines the index of a specific item in the <xref href=\"System.Collections.IList\"></xref>.\n  remarks: If an object occurs multiple times in the list, the `IndexOf` method always returns the first instance found.\n  syntax:\n    content: int IList<Activity>.IndexOf (System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The object to locate in the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>item</code> if found in the list; otherwise, -1.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList<Activity>.Insert(Int32, Activity)\n  nameWithType: ActivityCollection.IList<Activity>.Insert(Int32, Activity)\n  fullName: ActivityCollection.IList<Activity>.Insert(Int32, Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Inserts an <xref href=\"System.Object\"></xref> into the <xref href=\"System.Collections.IList\"></xref> at the zero-based index specified.\n  remarks: If the <xref:System.Object> cannot be cast to an <xref:System.Workflow.ComponentModel.Activity>, a custom <xref:System.Exception> is raised.\n  syntax:\n    content: void IList<Activity>.Insert (int index, System.Workflow.ComponentModel.Activity item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based position of the insertion.\n    - id: item\n      type: System.Workflow.ComponentModel.Activity\n      description: The object to insert. It must be of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#Item(System.Int32)\n  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList<Activity>.Item(Int32)\n  nameWithType: ActivityCollection.IList<Activity>.Item(Int32)\n  fullName: ActivityCollection.IList<Activity>.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets the element at the specified index.\n  remarks: \"This property provides the ability to access a specific element in the collection by using the following syntax: myCollection[index].  \\n  \\n The C# language uses the `this` keyword to define the indexers instead of implementing the `Item` property. Visual Basic implements `Item` as a default property, which provides the same indexing functionality.\"\n  syntax:\n    content: System.Workflow.ComponentModel.Activity System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: The <xref href=\"System.Object\"></xref> at the specified index.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The `ICollection` is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList<System#Workflow#ComponentModel#Activity>#RemoveAt(System.Int32)\n  id: System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList<Activity>.RemoveAt(Int32)\n  nameWithType: ActivityCollection.IList<Activity>.RemoveAt(Int32)\n  fullName: ActivityCollection.IList<Activity>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Removes the <xref href=\"System.Collections.IList\"></xref> item at the specified index.\n  remarks: In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot. If the collection is indexed, the indexes of the elements that are moved are also updated. This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.\n  syntax:\n    content: void IList<Activity>.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the item to remove.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is not a valid index in the <xref href=\"System.Collections.IList\"></xref>.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The `ICollection` is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: ActivityCollection.ICollection.CopyTo(Array, Int32)\n  fullName: ActivityCollection.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Copies the elements of the <xref href=\"System.Collections.ICollection\"></xref> to an <xref href=\"System.Array\"></xref>, starting at a particular <xref href=\"System.Array\"></xref> index.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The <xref href=\"System.Array\"></xref> which is the target of the copy operation.\n    - id: index\n      type: System.Int32\n      description: The zero-based index within the <xref href=\"System.Collections.ICollection\"></xref> where the copy starts.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: ActivityCollection.ICollection.IsSynchronized\n  fullName: ActivityCollection.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets a value that indicates whether access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is synchronized, that is thread-safe.\n  remarks: \"<xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.Generic.ICollection%601>.  \\n  \\n Most collection classes in the <xref:System.Collections?displayProperty=fullName> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.  \\n  \\n Enumerating through a collection is intrinsically not a thread-safe procedure. Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception. To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.\"\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is synchronized, that is, thread-safe; otherwise, `false`.'\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: ActivityCollection.ICollection.SyncRoot\n  fullName: ActivityCollection.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  remarks: \"For collections whose underlying store is not publicly available, the expected implementation is to return the current instance. Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection <xref:System.Collections.ICollection.SyncRoot%2A> property.  \\n  \\n Most collection classes in the <xref:System.Collections?displayProperty=fullName> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection. However, derived classes can provide their own synchronized version of the collection using the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property. The synchronizing code must perform operations on the <xref:System.Workflow.ComponentModel.ActivityCollection.System%23Collections%23ICollection%23SyncRoot> property of the collection, not directly on the collection. This ensures proper operation of collections that are derived from other objects. Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.\"\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Collections.Generic.ICollection`1\"></xref>.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: ActivityCollection.IEnumerable.GetEnumerator()\n  fullName: ActivityCollection.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Returns an <xref href=\"System.Collections.IEnumerator\"></xref> that iterates through the underlying <xref href=\"System.Collections.IList\"></xref>.\n  remarks: An <xref:System.Collections.IEnumerator> only allows for reading the data in the collection. You cannot use an <xref:System.Collections.IEnumerator> to modify the underlying collection.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> that can be used to iterate through the collection.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: ActivityCollection.IList.Add(Object)\n  fullName: ActivityCollection.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Adds an object to the <xref href=\"System.Collections.IList\"></xref> at the end of the <xref href=\"System.Collections.IList\"></xref>.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Int32\n      description: \"Returns <xref href=\\\"System.Int32\\\"></xref>.  \\n  \\n The zero-based index of the <xref href=\\\"System.Object\\\"></xref> that was just added.\"\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList.Clear()\n  nameWithType: ActivityCollection.IList.Clear()\n  fullName: ActivityCollection.IList.Clear()\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Removes all <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> from the <xref href=\"System.Collections.ICollection\"></xref>.\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: ActivityCollection.IList.Contains(Object)\n  fullName: ActivityCollection.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets a value that indicates whether the <xref href=\"System.Object\"></xref> is a member of the collection.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Collections.IList\"></xref>.\n    return:\n      type: System.Boolean\n      description: Returns <xref href=\"System.Boolean\"></xref>`true` if <code>value</code> is in the collection; otherwise, `false`.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: ActivityCollection.IList.IndexOf(Object)\n  fullName: ActivityCollection.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets the zero-based index of the <xref href=\"System.Object\"></xref> in the underlying activities collection.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to be indexed.\n    return:\n      type: System.Int32\n      description: The zero-based index of the <code>value</code> in the underlying activities collection or -1 if not found in the collection.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>value</code> is not of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> and the exception object contains \"Error_InvalidListItem\" error message.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: ActivityCollection.IList.Insert(Int32, Object)\n  fullName: ActivityCollection.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Inserts an <xref href=\"System.Object\"></xref> into the <xref href=\"System.Collections.IList\"></xref> at the zero-based index specified.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based position of the insertion.\n    - id: value\n      type: System.Object\n      description: The object to insert. It must be of type <xref href=\"System.Workflow.ComponentModel.Activity\"></xref>.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList.IsFixedSize\n  nameWithType: ActivityCollection.IList.IsFixedSize\n  fullName: ActivityCollection.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.IList\"></xref> has a fixed size.\n  remarks: A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Collections.IList\"></xref> has a fixed size; otherwise, `false`.'\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList.IsReadOnly\n  nameWithType: ActivityCollection.IList.IsReadOnly\n  fullName: ActivityCollection.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets a value indicating whether the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only.\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Returns <xref href=\"System.Boolean\"></xref>`true` if the <xref href=\"System.Collections.Generic.ICollection`1\"></xref> is read-only; otherwise, `false`.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList.Item(Int32)\n  nameWithType: ActivityCollection.IList.Item(Int32)\n  fullName: ActivityCollection.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Gets or sets the activity in the <xref href=\"System.Collections.ICollection\"></xref> based on the index.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Zero-based index into the <xref href=\"System.Collections.ICollection\"></xref>.\n    return:\n      type: System.Object\n      description: Returns <xref href=\"System.Object\"></xref>, a member activity of the <xref href=\"System.Collections.ICollection\"></xref>, whose index in the <xref href=\"System.Collections.ICollection\"></xref> was specified in the call.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: ActivityCollection.IList.Remove(Object)\n  fullName: ActivityCollection.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Workflow.ComponentModel\n  namespace: System.Workflow.ComponentModel\n  summary: Removes the first occurrence of a specific object from the <xref href=\"System.Collections.IList\"></xref>.\n  remarks: The elements that follow the removed element move up to occupy the vacated spot.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Collections.IList\"></xref>.\n  overload: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"The <xref href=\\\"System.Collections.IList\\\"></xref> is read-only.  \\n  \\n <xref href=\\\"System.Collections.IList\\\"></xref> has a fixed size.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Collections.Generic.List`1\n  name: List<T>\n  nameWithType: List<T>\n  fullName: System.Collections.Generic.List<T>\n- uid: System.Workflow.ComponentModel.Activity\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Collections.Generic.List{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: List<Activity>\n  nameWithType: List<Activity>\n  fullName: System.Collections.Generic.List<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.List`1\n    name: List\n    nameWithType: List\n    fullName: System.Collections.Generic.List\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Workflow.ComponentModel.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ActivityCollection(Activity)\n  nameWithType: ActivityCollection.ActivityCollection(Activity)\n  fullName: ActivityCollection.ActivityCollection(Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Add(Activity)\n  nameWithType: ActivityCollection.Add(Activity)\n  fullName: ActivityCollection.Add(Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.Clear\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: ActivityCollection.Clear()\n  fullName: ActivityCollection.Clear()\n- uid: System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Contains(Activity)\n  nameWithType: ActivityCollection.Contains(Activity)\n  fullName: ActivityCollection.Contains(Activity)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Workflow.ComponentModel.ActivityCollection.Count\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Count\n  nameWithType: ActivityCollection.Count\n  fullName: ActivityCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ActivityCollection.GetEnumerator()\n  fullName: ActivityCollection.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.IEnumerator{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<Activity>\n  nameWithType: IEnumerator<Activity>\n  fullName: System.Collections.Generic.IEnumerator<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerator`1\n    name: IEnumerator\n    nameWithType: IEnumerator\n    fullName: System.Collections.Generic.IEnumerator\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Workflow.ComponentModel.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IndexOf(Activity)\n  nameWithType: ActivityCollection.IndexOf(Activity)\n  fullName: ActivityCollection.IndexOf(Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Insert(Int32, Activity)\n  nameWithType: ActivityCollection.Insert(Int32, Activity)\n  fullName: ActivityCollection.Insert(Int32, Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.String)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: ActivityCollection.Item(String)\n  fullName: ActivityCollection.Item(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ActivityCollection.Item(Int32)\n  fullName: ActivityCollection.Item(Int32)\n- uid: System.Workflow.ComponentModel.ActivityCollection.ListChanged\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ListChanged\n  nameWithType: ActivityCollection.ListChanged\n  fullName: ActivityCollection.ListChanged\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n  name: ActivityCollectionChangeEventArgs\n  nameWithType: ActivityCollectionChangeEventArgs\n  fullName: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n- uid: System.EventHandler{System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<ActivityCollectionChangeEventArgs>\n  nameWithType: EventHandler<ActivityCollectionChangeEventArgs>\n  fullName: System.EventHandler<System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n    name: ActivityCollectionChangeEventArgs\n    nameWithType: ActivityCollectionChangeEventArgs\n    fullName: System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Remove(Activity)\n  nameWithType: ActivityCollection.Remove(Activity)\n  fullName: ActivityCollection.Remove(Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: ActivityCollection.RemoveAt(Int32)\n  fullName: ActivityCollection.RemoveAt(Int32)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection<Activity>.Add(Activity)\n  nameWithType: ActivityCollection.ICollection<Activity>.Add(Activity)\n  fullName: ActivityCollection.ICollection<Activity>.Add(Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection<Activity>.Clear()\n  nameWithType: ActivityCollection.ICollection<Activity>.Clear()\n  fullName: ActivityCollection.ICollection<Activity>.Clear()\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection<Activity>.Contains(Activity)\n  nameWithType: ActivityCollection.ICollection<Activity>.Contains(Activity)\n  fullName: ActivityCollection.ICollection<Activity>.Contains(Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection<Activity>.CopyTo(Activity[], Int32)\n  nameWithType: ActivityCollection.ICollection<Activity>.CopyTo(Activity[], Int32)\n  fullName: ActivityCollection.ICollection<Activity>.CopyTo(Activity[], Int32)\n- uid: System.Workflow.ComponentModel.Activity[]\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity[]\n  nameWithType: Activity[]\n  fullName: System.Workflow.ComponentModel.Activity[]\n  spec.csharp:\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Workflow.ComponentModel.Activity\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection<Activity>.Count\n  nameWithType: ActivityCollection.ICollection<Activity>.Count\n  fullName: ActivityCollection.ICollection<Activity>.Count\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection<Activity>.IsReadOnly\n  nameWithType: ActivityCollection.ICollection<Activity>.IsReadOnly\n  fullName: ActivityCollection.ICollection<Activity>.IsReadOnly\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection<Activity>.Remove(Activity)\n  nameWithType: ActivityCollection.ICollection<Activity>.Remove(Activity)\n  fullName: ActivityCollection.ICollection<Activity>.Remove(Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IEnumerable<Activity>.GetEnumerator()\n  nameWithType: ActivityCollection.IEnumerable<Activity>.GetEnumerator()\n  fullName: ActivityCollection.IEnumerable<Activity>.GetEnumerator()\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList<Activity>.IndexOf(Activity)\n  nameWithType: ActivityCollection.IList<Activity>.IndexOf(Activity)\n  fullName: ActivityCollection.IList<Activity>.IndexOf(Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList<Activity>.Insert(Int32, Activity)\n  nameWithType: ActivityCollection.IList<Activity>.Insert(Int32, Activity)\n  fullName: ActivityCollection.IList<Activity>.Insert(Int32, Activity)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList<Activity>.Item(Int32)\n  nameWithType: ActivityCollection.IList<Activity>.Item(Int32)\n  fullName: ActivityCollection.IList<Activity>.Item(Int32)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList<Activity>.RemoveAt(Int32)\n  nameWithType: ActivityCollection.IList<Activity>.RemoveAt(Int32)\n  fullName: ActivityCollection.IList<Activity>.RemoveAt(Int32)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: ActivityCollection.ICollection.CopyTo(Array, Int32)\n  fullName: ActivityCollection.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: ActivityCollection.ICollection.IsSynchronized\n  fullName: ActivityCollection.ICollection.IsSynchronized\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: ActivityCollection.ICollection.SyncRoot\n  fullName: ActivityCollection.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: ActivityCollection.IEnumerable.GetEnumerator()\n  fullName: ActivityCollection.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: ActivityCollection.IList.Add(Object)\n  fullName: ActivityCollection.IList.Add(Object)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList.Clear()\n  nameWithType: ActivityCollection.IList.Clear()\n  fullName: ActivityCollection.IList.Clear()\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: ActivityCollection.IList.Contains(Object)\n  fullName: ActivityCollection.IList.Contains(Object)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: ActivityCollection.IList.IndexOf(Object)\n  fullName: ActivityCollection.IList.IndexOf(Object)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: ActivityCollection.IList.Insert(Int32, Object)\n  fullName: ActivityCollection.IList.Insert(Int32, Object)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: ActivityCollection.IList.IsFixedSize\n  fullName: ActivityCollection.IList.IsFixedSize\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: ActivityCollection.IList.IsReadOnly\n  fullName: ActivityCollection.IList.IsReadOnly\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: ActivityCollection.IList.Item(Int32)\n  fullName: ActivityCollection.IList.Item(Int32)\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: ActivityCollection.IList.Remove(Object)\n  fullName: ActivityCollection.IList.Remove(Object)\n- uid: System.Workflow.ComponentModel.ActivityCollection.#ctor*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: ActivityCollection\n  nameWithType: ActivityCollection.ActivityCollection\n  fullName: ActivityCollection.ActivityCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.Add*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Add\n  nameWithType: ActivityCollection.Add\n  fullName: ActivityCollection.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.Clear*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Clear\n  nameWithType: ActivityCollection.Clear\n  fullName: ActivityCollection.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.Contains*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Contains\n  nameWithType: ActivityCollection.Contains\n  fullName: ActivityCollection.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.Count*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Count\n  nameWithType: ActivityCollection.Count\n  fullName: ActivityCollection.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.GetEnumerator*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: ActivityCollection.GetEnumerator\n  fullName: ActivityCollection.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.IndexOf*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: ActivityCollection.IndexOf\n  fullName: ActivityCollection.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.Insert*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Insert\n  nameWithType: ActivityCollection.Insert\n  fullName: ActivityCollection.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.Item*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Item\n  nameWithType: ActivityCollection.Item\n  fullName: ActivityCollection.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.Remove*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: Remove\n  nameWithType: ActivityCollection.Remove\n  fullName: ActivityCollection.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.RemoveAt*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: ActivityCollection.RemoveAt\n  fullName: ActivityCollection.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Add\n  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Add\n  fullName: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Clear\n  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Clear\n  fullName: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Contains\n  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Contains\n  fullName: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.CopyTo\n  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.CopyTo\n  fullName: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count\n  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count\n  fullName: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly\n  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly\n  fullName: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Remove\n  nameWithType: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Remove\n  fullName: ActivityCollection.System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>.GetEnumerator\n  nameWithType: ActivityCollection.System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>.GetEnumerator\n  fullName: ActivityCollection.System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.IndexOf\n  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.IndexOf\n  fullName: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Insert\n  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Insert\n  fullName: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item\n  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item\n  fullName: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.RemoveAt\n  nameWithType: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.RemoveAt\n  fullName: ActivityCollection.System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: ActivityCollection.System.Collections.ICollection.CopyTo\n  fullName: ActivityCollection.System.Collections.ICollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ActivityCollection.System.Collections.ICollection.IsSynchronized\n  fullName: ActivityCollection.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ActivityCollection.System.Collections.ICollection.SyncRoot\n  fullName: ActivityCollection.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: ActivityCollection.System.Collections.IEnumerable.GetEnumerator\n  fullName: ActivityCollection.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: ActivityCollection.System.Collections.IList.Add\n  fullName: ActivityCollection.System.Collections.IList.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IList.Clear\n  nameWithType: ActivityCollection.System.Collections.IList.Clear\n  fullName: ActivityCollection.System.Collections.IList.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: ActivityCollection.System.Collections.IList.Contains\n  fullName: ActivityCollection.System.Collections.IList.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: ActivityCollection.System.Collections.IList.IndexOf\n  fullName: ActivityCollection.System.Collections.IList.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: ActivityCollection.System.Collections.IList.Insert\n  fullName: ActivityCollection.System.Collections.IList.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ActivityCollection.System.Collections.IList.IsFixedSize\n  fullName: ActivityCollection.System.Collections.IList.IsFixedSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ActivityCollection.System.Collections.IList.IsReadOnly\n  fullName: ActivityCollection.System.Collections.IList.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: ActivityCollection.System.Collections.IList.Item\n  fullName: ActivityCollection.System.Collections.IList.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove*\n  parent: System.Workflow.ComponentModel.ActivityCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: ActivityCollection.System.Collections.IList.Remove\n  fullName: ActivityCollection.System.Collections.IList.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.ComponentModel/ActivityCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.Generic.List`1.Add(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: List<T>.Add(T)\n  fullName: List<T>.Add(T)\n- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: AddRange(IEnumerable<T>)\n  nameWithType: List<T>.AddRange(IEnumerable<T>)\n  fullName: List<T>.AddRange(IEnumerable<T>)\n- uid: System.Collections.Generic.List`1.AsReadOnly\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: AsReadOnly()\n  nameWithType: List<T>.AsReadOnly()\n  fullName: List<T>.AsReadOnly()\n- uid: System.Collections.Generic.List`1.BinarySearch(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: BinarySearch(T)\n  nameWithType: List<T>.BinarySearch(T)\n  fullName: List<T>.BinarySearch(T)\n- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: BinarySearch(T, IComparer<T>)\n  nameWithType: List<T>.BinarySearch(T, IComparer<T>)\n  fullName: List<T>.BinarySearch(T, IComparer<T>)\n- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: BinarySearch(Int32, Int32, T, IComparer<T>)\n  nameWithType: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)\n  fullName: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)\n- uid: System.Collections.Generic.List`1.Capacity\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Capacity\n  nameWithType: List<T>.Capacity\n  fullName: List<T>.Capacity\n- uid: System.Collections.Generic.List`1.Contains(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: List<T>.Contains(T)\n  fullName: List<T>.Contains(T)\n- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: ConvertAll<TOutput>(Converter<T,TOutput>)\n  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T,TOutput>)\n  fullName: List<T>.ConvertAll<TOutput>(Converter<T,TOutput>)\n- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: CopyTo(T[], Int32)\n  nameWithType: List<T>.CopyTo(T[], Int32)\n  fullName: List<T>.CopyTo(T[], Int32)\n- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: CopyTo(Int32, T[], Int32, Int32)\n  nameWithType: List<T>.CopyTo(Int32, T[], Int32, Int32)\n  fullName: List<T>.CopyTo(Int32, T[], Int32, Int32)\n- uid: System.Collections.Generic.List`1.CopyTo(`0[])\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: CopyTo(T[])\n  nameWithType: List<T>.CopyTo(T[])\n  fullName: List<T>.CopyTo(T[])\n- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Exists(Predicate<T>)\n  nameWithType: List<T>.Exists(Predicate<T>)\n  fullName: List<T>.Exists(Predicate<T>)\n- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Find(Predicate<T>)\n  nameWithType: List<T>.Find(Predicate<T>)\n  fullName: List<T>.Find(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindAll(Predicate<T>)\n  nameWithType: List<T>.FindAll(Predicate<T>)\n  fullName: List<T>.FindAll(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindIndex(Predicate<T>)\n  nameWithType: List<T>.FindIndex(Predicate<T>)\n  fullName: List<T>.FindIndex(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindIndex(Int32, Predicate<T>)\n  nameWithType: List<T>.FindIndex(Int32, Predicate<T>)\n  fullName: List<T>.FindIndex(Int32, Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindIndex(Int32, Int32, Predicate<T>)\n  nameWithType: List<T>.FindIndex(Int32, Int32, Predicate<T>)\n  fullName: List<T>.FindIndex(Int32, Int32, Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindLast(Predicate<T>)\n  nameWithType: List<T>.FindLast(Predicate<T>)\n  fullName: List<T>.FindLast(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindLastIndex(Predicate<T>)\n  nameWithType: List<T>.FindLastIndex(Predicate<T>)\n  fullName: List<T>.FindLastIndex(Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindLastIndex(Int32, Predicate<T>)\n  nameWithType: List<T>.FindLastIndex(Int32, Predicate<T>)\n  fullName: List<T>.FindLastIndex(Int32, Predicate<T>)\n- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: FindLastIndex(Int32, Int32, Predicate<T>)\n  nameWithType: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)\n  fullName: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)\n- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: ForEach(Action<T>)\n  nameWithType: List<T>.ForEach(Action<T>)\n  fullName: List<T>.ForEach(Action<T>)\n- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: GetRange(Int32, Int32)\n  nameWithType: List<T>.GetRange(Int32, Int32)\n  fullName: List<T>.GetRange(Int32, Int32)\n- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: IndexOf(T, Int32)\n  nameWithType: List<T>.IndexOf(T, Int32)\n  fullName: List<T>.IndexOf(T, Int32)\n- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: IndexOf(T, Int32, Int32)\n  nameWithType: List<T>.IndexOf(T, Int32, Int32)\n  fullName: List<T>.IndexOf(T, Int32, Int32)\n- uid: System.Collections.Generic.List`1.IndexOf(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: List<T>.IndexOf(T)\n  fullName: List<T>.IndexOf(T)\n- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Insert(Int32, T)\n  nameWithType: List<T>.Insert(Int32, T)\n  fullName: List<T>.Insert(Int32, T)\n- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: InsertRange(Int32, IEnumerable<T>)\n  nameWithType: List<T>.InsertRange(Int32, IEnumerable<T>)\n  fullName: List<T>.InsertRange(Int32, IEnumerable<T>)\n- uid: System.Collections.Generic.List`1.LastIndexOf(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: LastIndexOf(T)\n  nameWithType: List<T>.LastIndexOf(T)\n  fullName: List<T>.LastIndexOf(T)\n- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: LastIndexOf(T, Int32)\n  nameWithType: List<T>.LastIndexOf(T, Int32)\n  fullName: List<T>.LastIndexOf(T, Int32)\n- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: LastIndexOf(T, Int32, Int32)\n  nameWithType: List<T>.LastIndexOf(T, Int32, Int32)\n  fullName: List<T>.LastIndexOf(T, Int32, Int32)\n- uid: System.Collections.Generic.List`1.Remove(`0)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: List<T>.Remove(T)\n  fullName: List<T>.Remove(T)\n- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: RemoveAll(Predicate<T>)\n  nameWithType: List<T>.RemoveAll(Predicate<T>)\n  fullName: List<T>.RemoveAll(Predicate<T>)\n- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: RemoveRange(Int32, Int32)\n  nameWithType: List<T>.RemoveRange(Int32, Int32)\n  fullName: List<T>.RemoveRange(Int32, Int32)\n- uid: System.Collections.Generic.List`1.Reverse\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Reverse()\n  nameWithType: List<T>.Reverse()\n  fullName: List<T>.Reverse()\n- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Reverse(Int32, Int32)\n  nameWithType: List<T>.Reverse(Int32, Int32)\n  fullName: List<T>.Reverse(Int32, Int32)\n- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Sort(Comparison<T>)\n  nameWithType: List<T>.Sort(Comparison<T>)\n  fullName: List<T>.Sort(Comparison<T>)\n- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Sort(Int32, Int32, IComparer<T>)\n  nameWithType: List<T>.Sort(Int32, Int32, IComparer<T>)\n  fullName: List<T>.Sort(Int32, Int32, IComparer<T>)\n- uid: System.Collections.Generic.List`1.Sort\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Sort()\n  nameWithType: List<T>.Sort()\n  fullName: List<T>.Sort()\n- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: Sort(IComparer<T>)\n  nameWithType: List<T>.Sort(IComparer<T>)\n  fullName: List<T>.Sort(IComparer<T>)\n- uid: System.Collections.Generic.List`1.ToArray\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: ToArray()\n  nameWithType: List<T>.ToArray()\n  fullName: List<T>.ToArray()\n- uid: System.Collections.Generic.List`1.TrimExcess\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: TrimExcess()\n  nameWithType: List<T>.TrimExcess()\n  fullName: List<T>.TrimExcess()\n- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: TrueForAll(Predicate<T>)\n  nameWithType: List<T>.TrueForAll(Predicate<T>)\n  fullName: List<T>.TrueForAll(Predicate<T>)\n- uid: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: ICollection<T>.IsReadOnly\n  nameWithType: List<T>.ICollection<T>.IsReadOnly\n  fullName: List<T>.ICollection<T>.IsReadOnly\n- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Collections.Generic.List`1\n  isExternal: false\n  name: IEnumerable<T>.GetEnumerator()\n  nameWithType: List<T>.IEnumerable<T>.GetEnumerator()\n  fullName: List<T>.IEnumerable<T>.GetEnumerator()\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection`1\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<Activity>\n  nameWithType: ICollection<Activity>\n  fullName: System.Collections.Generic.ICollection<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.ICollection`1\n    name: ICollection\n    nameWithType: ICollection\n    fullName: System.Collections.Generic.ICollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Workflow.ComponentModel.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Activity>\n  nameWithType: IEnumerable<Activity>\n  fullName: System.Collections.Generic.IEnumerable<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Workflow.ComponentModel.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.Generic.IList{System.Workflow.ComponentModel.Activity}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<Activity>\n  nameWithType: IList<Activity>\n  fullName: System.Collections.Generic.IList<System.Workflow.ComponentModel.Activity>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.Activity\n    name: Activity\n    nameWithType: Activity\n    fullName: System.Workflow.ComponentModel.Activity\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}