{"nodes":[{"content":"Represents a collection of <xref href=\"System.Windows.DependencyObject\"></xref>, <xref href=\"System.Windows.Freezable\"></xref>, or <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> objects. <xref href=\"System.Windows.FreezableCollection`1\"></xref> is itself an <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> type.","nodes":[{"pos":[0,342],"content":"Represents a collection of <xref href=\"System.Windows.DependencyObject\"></xref>, <xref href=\"System.Windows.Freezable\"></xref>, or <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> objects. <xref href=\"System.Windows.FreezableCollection`1\"></xref> is itself an <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> type.","nodes":[{"content":"Represents a collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Windows.Freezable\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;&lt;/xref&gt;</ph> objects.","pos":[0,202],"source":"Represents a collection of <xref href=\"System.Windows.DependencyObject\"></xref>, <xref href=\"System.Windows.Freezable\"></xref>, or <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> objects."},{"content":"<ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is itself an <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Animatable\"&gt;&lt;/xref&gt;</ph> type.","pos":[203,342],"source":"<xref href=\"System.Windows.FreezableCollection`1\"></xref> is itself an <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> type."}]}],"pos":[3034,3377],"yaml":true},{"content":"This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.  \n  \n### XAML Usage for FreezableCollection  \n <xref:System.Windows.FreezableCollection%601> supports a limited [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.  \n  \n-   As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint. However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element. This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  \n  \n-   If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages. This is possible because the constraint in your derivation eliminates the need to pass .  \n  \n    -   The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax. Collections that support certain interfaces do not need to specify the collection itself as an object element. For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md). For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:  \n  \n        ```  \n        <object>  \n          <object.property>  \n            oneOrMoreDependencyObjectElements  \n          </object.property>  \n        </object>  \n        ```  \n  \n    -   As long as you do not hide the default constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above). It does not need to be the root element. Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.  \n  \n-   Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .  \n  \n<a name=\"xamlTextUsage_FreezableCollection_g\"></a>   \n## XAML Text Usage  \n See Remarks.","nodes":[{"pos":[0,180],"content":"This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.","nodes":[{"content":"This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.","pos":[0,180]}]},{"pos":[190,224],"content":"XAML Usage for FreezableCollection","linkify":"XAML Usage for FreezableCollection","nodes":[{"content":"XAML Usage for FreezableCollection","pos":[0,34]}]},{"pos":[228,362],"content":"<ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> supports a limited <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax.","source":"<xref:System.Windows.FreezableCollection%601> supports a limited [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax."},{"pos":[372,1486],"content":"As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint. However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element. This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"content":"As an object element at the root, you can theoretically specify an unconstrained <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> object element, which must also specify the <bpt id=\"p1\">[</bpt>x:TypeArguments Directive<ept id=\"p1\">](~/docs/framework/xaml-services/x-typearguments-directive.md)</ept> to declare the constraint.","pos":[0,286],"source":"As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint."},{"content":"However, this is not a common scenario, because to do this, the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> must be the root element.","pos":[287,422],"source":" However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element."},{"content":"This limitation exists because the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> processor implementation in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> can only support <bpt id=\"p1\">[</bpt>x:TypeArguments Directive<ept id=\"p1\">](~/docs/framework/xaml-services/x-typearguments-directive.md)</ept> when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in <ph id=\"ph3\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[423,939],"source":" This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."},{"content":"It is unlikely that you want a <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> as the root element, even as loose <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","pos":[940,1114],"source":" It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}]},{"pos":[1496,1760],"content":"If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages. This is possible because the constraint in your derivation eliminates the need to pass .","nodes":[{"content":"If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages. This is possible because the constraint in your derivation eliminates the need to pass .","pos":[0,264],"nodes":[{"content":"If you derive from <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> and apply a type constraint in the derived collection, the derived collection can support a variety of usages.","pos":[0,175],"source":"If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages."},{"content":"This is possible because the constraint in your derivation eliminates the need to pass .","pos":[176,264]}]}]},{"pos":[1774,2430],"content":"The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax. Collections that support certain interfaces do not need to specify the collection itself as an object element. For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md). For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:","nodes":[{"content":"The typical <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage for such a derived collection is through implicit collection syntax.","pos":[0,148],"source":"The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax."},{"content":"Collections that support certain interfaces do not need to specify the collection itself as an object element.","pos":[149,259]},{"content":"For details on collection syntax in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, see <bpt id=\"p1\">[</bpt>XAML Syntax In Detail<ept id=\"p1\">](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)</ept>.","pos":[260,443],"source":" For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)."},{"content":"For instance, an <bpt id=\"p1\">*</bpt>object<ept id=\"p1\">*</ept> with a <bpt id=\"p2\">*</bpt>property<ept id=\"p2\">*</ept> where the <bpt id=\"p3\">*</bpt>property<ept id=\"p3\">*</ept> was of type <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> constrained by <ph id=\"ph2\">&lt;xref:System.Windows.DependencyObject&gt;</ph> could support the following syntax:","pos":[444,656],"source":" For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:"}]},{"pos":[2623,3017],"content":"As long as you do not hide the default constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above). It does not need to be the root element. Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.","nodes":[{"content":"As long as you do not hide the default constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above). It does not need to be the root element. Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.","pos":[0,394],"nodes":[{"content":"As long as you do not hide the default constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above).","pos":[0,202]},{"content":"It does not need to be the root element.","pos":[203,243]},{"content":"Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.","pos":[244,394]}]}]},{"pos":[3027,3175],"content":"Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .","nodes":[{"content":"Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .","pos":[0,148]}]},{"pos":[3238,3253],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]},{"pos":[3257,3269],"content":"See Remarks.","nodes":[{"content":"See Remarks.","pos":[0,12]}]}],"pos":[3388,6687],"yaml":true,"extradata":"MT"},{"content":"The type of collection. This type must be a <xref href=\"System.Windows.DependencyObject\"></xref> or a derived class.","nodes":[{"pos":[0,116],"content":"The type of collection. This type must be a <xref href=\"System.Windows.DependencyObject\"></xref> or a derived class.","nodes":[{"content":"The type of collection.","pos":[0,23]},{"content":"This type must be a <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyObject\"&gt;&lt;/xref&gt;</ph> or a derived class.","pos":[24,116],"source":" This type must be a <xref href=\"System.Windows.DependencyObject\"></xref> or a derived class."}]}],"pos":[7122,7239],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Windows.FreezableCollection`1\"></xref> that is empty and has the default initial capacity.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> that is empty and has the default initial capacity.","source":"Initializes a new instance of <xref href=\"System.Windows.FreezableCollection`1\"></xref> that is empty and has the default initial capacity."}],"pos":[39202,39342],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.FreezableCollection`1\"></xref> class that contains the same elements as the specified collection.","nodes":[{"pos":[0,158],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> class that contains the same elements as the specified collection.","source":"Initializes a new instance of the <xref href=\"System.Windows.FreezableCollection`1\"></xref> class that contains the same elements as the specified collection."}],"pos":[40633,40792],"yaml":true},{"content":"This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned. Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`.  \n  \n The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection.","nodes":[{"pos":[0,287],"content":"This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned. Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`.","nodes":[{"content":"This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned.","pos":[0,164]},{"content":"Modifying an element of the new <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> also modifies that element for <ph id=\"ph2\">`collection`</ph>.","pos":[165,287],"source":" Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`."}]},{"pos":[294,453],"content":"The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection.","nodes":[{"content":"The elements are placed in the new <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> in the same order they are read by the enumerator of the specified collection.","pos":[0,159],"source":"The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection."}]}],"pos":[40803,41261],"yaml":true,"extradata":"MT"},{"content":"The collection whose items should be added to the new <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,112],"content":"The collection whose items should be added to the new <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The collection whose items should be added to the new <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[41476,41589],"yaml":true},{"content":"<code>collection</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;collection&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>collection</code> is `null`."}],"pos":[41753,41788],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.FreezableCollection`1\"></xref> that is empty and has the specified initial capacity.","nodes":[{"pos":[0,145],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> that is empty and has the specified initial capacity.","source":"Initializes a new instance of the <xref href=\"System.Windows.FreezableCollection`1\"></xref> that is empty and has the specified initial capacity."}],"pos":[42816,42962],"yaml":true},{"content":"A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.","nodes":[{"pos":[0,120],"content":"A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.","nodes":[{"content":"A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.","pos":[0,120]}]}],"pos":[43107,43228],"yaml":true},{"content":"<code>capacity</code> is less than 0.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than 0.","source":"<code>capacity</code> is less than 0."}],"pos":[43412,43450],"yaml":true},{"content":"Adds the specified object to the end of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,102],"content":"Adds the specified object to the end of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Adds the specified object to the end of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[44344,44447],"yaml":true},{"content":"The object to be added to the end of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>. This value cannot be `null`.","nodes":[{"pos":[0,128],"content":"The object to be added to the end of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>. This value cannot be `null`.","nodes":[{"content":"The object to be added to the end of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","pos":[0,99],"source":"The object to be added to the end of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."},{"content":"This value cannot be <ph id=\"ph1\">`null`</ph>.","pos":[100,128],"source":" This value cannot be `null`."}]}],"pos":[44562,44691],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[44853,44883],"yaml":true},{"content":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is frozen (its <ph id=\"ph2\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph3\">`true`</ph>).","source":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`)."}],"pos":[44993,45146],"yaml":true},{"content":"Removes all elements from the collection.","nodes":[{"pos":[0,41],"content":"Removes all elements from the collection.","nodes":[{"content":"Removes all elements from the collection.","pos":[0,41]}]}],"pos":[46059,46101],"yaml":true},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.FreezableCollection`1\"></xref> and its contents, making deep copies. If this collection (or its contents) has animated dependency properties, the property’s base value is copied, not its current animated value.","nodes":[{"pos":[0,272],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.FreezableCollection`1\"></xref> and its contents, making deep copies. If this collection (or its contents) has animated dependency properties, the property’s base value is copied, not its current animated value.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> and its contents, making deep copies.","pos":[0,130],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.FreezableCollection`1\"></xref> and its contents, making deep copies."},{"content":"If this collection (or its contents) has animated dependency properties, the property’s base value is copied, not its current animated value.","pos":[131,272]}]}],"pos":[47151,47424],"yaml":true},{"content":"This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=fullName> method with a strongly typed implementation for convenience.","nodes":[{"pos":[0,177],"content":"This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=fullName> method with a strongly typed implementation for convenience.","nodes":[{"content":"This method shadows the inherited <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=fullName&gt;</ph> method with a strongly typed implementation for convenience.","pos":[0,177],"source":"This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=fullName> method with a strongly typed implementation for convenience."}]}],"pos":[47435,47613],"yaml":true,"extradata":"MT"},{"content":"A modifiable copy of this collection and its contents. The copy's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> value is `false`.","nodes":[{"pos":[0,138],"content":"A modifiable copy of this collection and its contents. The copy's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> value is `false`.","nodes":[{"content":"A modifiable copy of this collection and its contents.","pos":[0,54]},{"content":"The copy's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> value is <ph id=\"ph2\">`false`</ph>.","pos":[55,138],"source":" The copy's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> value is `false`."}]}],"pos":[47790,47929],"yaml":true},{"content":"Makes this instance a clone (deep copy) of the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> using base (non-animated) property values.","nodes":[{"pos":[0,157],"content":"Makes this instance a clone (deep copy) of the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> using base (non-animated) property values.","source":"Makes this instance a clone (deep copy) of the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> using base (non-animated) property values."}],"pos":[49044,49202],"yaml":true},{"content":"This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.","nodes":[{"pos":[0,366],"content":"This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.","nodes":[{"content":"This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.","pos":[0,366],"nodes":[{"content":"This method is called by the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601.Clone%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,214],"source":"This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601.Clone%2A&gt;</ph> instead of calling this method directly.","pos":[215,366],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly."}]}]}],"pos":[49213,49580],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to copy.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> to copy.","source":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to copy."}],"pos":[49761,49832],"yaml":true},{"content":"Creates a modifiable copy of this <xref href=\"System.Windows.FreezableCollection`1\"></xref> and its contents, making deep copies of this object's current values. If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.","nodes":[{"pos":[0,288],"content":"Creates a modifiable copy of this <xref href=\"System.Windows.FreezableCollection`1\"></xref> and its contents, making deep copies of this object's current values. If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.","nodes":[{"content":"Creates a modifiable copy of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> and its contents, making deep copies of this object's current values.","pos":[0,161],"source":"Creates a modifiable copy of this <xref href=\"System.Windows.FreezableCollection`1\"></xref> and its contents, making deep copies of this object's current values."},{"content":"If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.","pos":[162,288]}]}],"pos":[50894,51183],"yaml":true},{"content":"This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> method with a strongly typed implementation for convenience.","nodes":[{"pos":[0,172],"content":"This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> method with a strongly typed implementation for convenience.","nodes":[{"content":"This method shadows the inherited <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph> method with a strongly typed implementation for convenience.","pos":[0,172],"source":"This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> method with a strongly typed implementation for convenience."}]}],"pos":[51194,51367],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the collection and its contents. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"pos":[0,251],"content":"A modifiable clone of the collection and its contents. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"content":"A modifiable clone of the collection and its contents.","pos":[0,54]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property will be <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property was <ph id=\"ph4\">`true.`</ph>","pos":[55,251],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`"}]}],"pos":[51556,51808],"yaml":true},{"content":"Makes this instance a modifiable clone (deep copy) of the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> using current property values.","nodes":[{"pos":[0,156],"content":"Makes this instance a modifiable clone (deep copy) of the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> using current property values.","source":"Makes this instance a modifiable clone (deep copy) of the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> using current property values."}],"pos":[52985,53142],"yaml":true},{"content":"This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.","nodes":[{"pos":[0,390],"content":"This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.","nodes":[{"content":"This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.","pos":[0,390],"nodes":[{"content":"This method is called by the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,226],"source":"This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a modifiable copy of the current object, call <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A&gt;</ph> instead of calling this method directly.","pos":[227,390],"source":" To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly."}]}]}],"pos":[53153,53544],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to clone.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> to clone.","source":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to clone."}],"pos":[53737,53809],"yaml":true},{"content":"Determines whether this <xref href=\"System.Windows.FreezableCollection`1\"></xref> contains the specified value.","nodes":[{"pos":[0,111],"content":"Determines whether this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> contains the specified value.","source":"Determines whether this <xref href=\"System.Windows.FreezableCollection`1\"></xref> contains the specified value."}],"pos":[54844,54956],"yaml":true},{"content":"The object to locate in this collection. This object may be `null`.","nodes":[{"pos":[0,67],"content":"The object to locate in this collection. This object may be `null`.","nodes":[{"content":"The object to locate in this collection.","pos":[0,40]},{"content":"This object may be <ph id=\"ph1\">`null`</ph>.","pos":[41,67],"source":" This object may be `null`."}]}],"pos":[55076,55144],"yaml":true},{"content":"`true` if value is found in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,110],"content":"<ph id=\"ph1\">`true`</ph> if value is found in the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if value is found in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>; otherwise, `false`."}],"pos":[55202,55315],"yaml":true},{"content":"Copies the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref> to a compatible one-dimensional array, starting at the specified index of the target array.","nodes":[{"pos":[0,167],"content":"Copies the entire <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> to a compatible one-dimensional array, starting at the specified index of the target array.","source":"Copies the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref> to a compatible one-dimensional array, starting at the specified index of the target array."}],"pos":[56397,56565],"yaml":true},{"content":"Note that this operation performs a shallow copy. The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.","nodes":[{"pos":[0,204],"content":"Note that this operation performs a shallow copy. The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.","nodes":[{"content":"Note that this operation performs a shallow copy. The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.","pos":[0,204],"nodes":[{"content":"Note that this operation performs a shallow copy.","pos":[0,49]},{"content":"The elements are copied to the target array in the same order in which the enumerator iterates through this <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph>.","pos":[50,204],"source":" The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>."}]}]}],"pos":[56576,56781],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional array that is the destination of the elements copied from <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,136],"content":"The one-dimensional array that is the destination of the elements copied from <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The one-dimensional array that is the destination of the elements copied from <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[56914,57051],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[57111,57179],"yaml":true},{"content":"<code>array</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>array</code> is `null`."}],"pos":[57352,57382],"yaml":true},{"content":"<code>index</code> is less than 0.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0.","source":"<code>index</code> is less than 0."}],"pos":[57496,57531],"yaml":true},{"content":"The number of elements in the source <xref href=\"System.Windows.FreezableCollection`1\"></xref> is greater than the available space from index to the end of the destination <code>array</code>.","nodes":[{"pos":[0,191],"content":"The number of elements in the source <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is greater than the available space from index to the end of the destination <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The number of elements in the source <xref href=\"System.Windows.FreezableCollection`1\"></xref> is greater than the available space from index to the end of the destination <code>array</code>."}],"pos":[57625,57817],"yaml":true},{"content":"Gets the number of elements contained by this <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,104],"content":"Gets the number of elements contained by this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the number of elements contained by this <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[58726,58831],"yaml":true},{"content":"The number of elements contained by this <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,99],"content":"The number of elements contained by this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The number of elements contained by this <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[58936,59036],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,88],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new instance of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[60100,60189],"yaml":true},{"content":"Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.","nodes":[{"pos":[0,243],"content":"Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.","nodes":[{"content":"Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.","pos":[0,243],"nodes":[{"content":"Do not call this method directly (except when calling base in an implementation).","pos":[0,81]},{"content":"This method is called internally by <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CreateInstance%2A&gt;</ph>, whenever a new instance of the <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> is created.","pos":[82,243],"source":" This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created."}]}]}],"pos":[60200,60444],"yaml":true,"extradata":"MT"},{"content":"The new instance.","nodes":[{"pos":[0,17],"content":"The new instance.","nodes":[{"content":"The new instance.","pos":[0,17]}]}],"pos":[61147,61165],"yaml":true},{"content":"Makes this <xref href=\"System.Windows.FreezableCollection`1\"></xref> object unmodifiable or determines whether it can be made unmodifiable.","nodes":[{"pos":[0,139],"content":"Makes this <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> object unmodifiable or determines whether it can be made unmodifiable.","source":"Makes this <xref href=\"System.Windows.FreezableCollection`1\"></xref> object unmodifiable or determines whether it can be made unmodifiable."}],"pos":[62263,62403],"yaml":true},{"content":"Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).","nodes":[{"pos":[0,283],"content":"Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).","nodes":[{"content":"Do not call this method directly (except when calling base in an implementation).","pos":[0,81]},{"content":"This method is called internally by <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> (with <ph id=\"ph2\">`isChecking`</ph> equal to <ph id=\"ph3\">`true`</ph>) and  <ph id=\"ph4\">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> (with <ph id=\"ph5\">`isChecking`</ph> equal to <ph id=\"ph6\">`false`</ph>).","pos":[82,283],"source":" This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`)."}]}],"pos":[62414,62698],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> should simply return whether it can be frozen. `false` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> instance should actually freeze itself when this method is called.","nodes":[{"pos":[0,258],"content":"`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> should simply return whether it can be frozen. `false` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> instance should actually freeze itself when this method is called.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> should simply return whether it can be frozen.","pos":[0,118],"source":"`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> should simply return whether it can be frozen."},{"content":"<ph id=\"ph1\">`false`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> instance should actually freeze itself when this method is called.","pos":[119,258],"source":"`false` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> instance should actually freeze itself when this method is called."}]}],"pos":[62858,63119],"yaml":true},{"content":"If <code>isChecking</code> is `true`, this method returns `true` if this <xref href=\"System.Windows.FreezableCollection`1\"></xref> can be made unmodifiable, or `false` if it cannot be made unmodifiable.  \n  \n If <code>isChecking</code> is `false`, this method returns `true` if the if the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> is now unmodifiable, or `false` if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.","nodes":[{"pos":[0,202],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`true`</ph>, this method returns <ph id=\"ph3\">`true`</ph> if this <ph id=\"ph4\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> can be made unmodifiable, or <ph id=\"ph5\">`false`</ph> if it cannot be made unmodifiable.","source":"If <code>isChecking</code> is `true`, this method returns `true` if this <xref href=\"System.Windows.FreezableCollection`1\"></xref> can be made unmodifiable, or `false` if it cannot be made unmodifiable."},{"pos":[209,504],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">isChecking</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`false`</ph>, this method returns <ph id=\"ph3\">`true`</ph> if the if the specified <ph id=\"ph4\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is now unmodifiable, or <ph id=\"ph5\">`false`</ph> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.","source":"If <code>isChecking</code> is `false`, this method returns `true` if the if the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> is now unmodifiable, or `false` if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object."}],"pos":[63177,63690],"yaml":true},{"content":"Makes this instance a frozen clone of the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> using base (non-animated) property values.","nodes":[{"pos":[0,152],"content":"Makes this instance a frozen clone of the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> using base (non-animated) property values.","source":"Makes this instance a frozen clone of the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> using base (non-animated) property values."}],"pos":[64846,64999],"yaml":true},{"content":"This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.","nodes":[{"pos":[0,335],"content":"This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.","nodes":[{"content":"This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.","pos":[0,335],"nodes":[{"content":"This method is called by <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,195],"source":"This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a frozen copy of the current object, call <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> instead of calling this method directly.","pos":[196,335],"source":" To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly."}]}]}],"pos":[65010,65346],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to copy.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> to copy.","source":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to copy."}],"pos":[65533,65604],"yaml":true},{"content":"Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Freezable\"></xref>. If this object has animated dependency properties, their current animated values are copied.","nodes":[{"pos":[0,191],"content":"Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Freezable\"></xref>. If this object has animated dependency properties, their current animated values are copied.","nodes":[{"content":"Makes this instance a frozen clone of the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable\"&gt;&lt;/xref&gt;</ph>.","pos":[0,98],"source":"Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Freezable\"></xref>."},{"content":"If this object has animated dependency properties, their current animated values are copied.","pos":[99,191]}]}],"pos":[66837,67029],"yaml":true},{"content":"This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.","nodes":[{"pos":[0,359],"content":"This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.","nodes":[{"content":"This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.","pos":[0,359],"nodes":[{"content":"This method is called by <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> and should not be called directly from your code, except when calling the base implementation while overriding this method.","pos":[0,207],"source":"This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method."},{"content":"To create a frozen copy of the current object, call <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> instead of calling this method directly.","pos":[208,359],"source":" To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly."}]}]}],"pos":[67040,67400],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to copy.","nodes":[{"pos":[0,70],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> to copy.","source":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to copy."}],"pos":[67599,67670],"yaml":true},{"content":"Returns an enumerator for the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,95],"content":"Returns an enumerator for the entire <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns an enumerator for the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[68726,68822],"yaml":true},{"content":"An enumerator for the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,87],"content":"An enumerator for the entire <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerator for the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[69019,69107],"yaml":true},{"content":"Searches for the specified object and returns the zero-based index of the first occurrence within the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,167],"content":"Searches for the specified object and returns the zero-based index of the first occurrence within the entire <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Searches for the specified object and returns the zero-based index of the first occurrence within the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[70128,70296],"yaml":true},{"content":"The object to locate in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,86],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[70414,70501],"yaml":true},{"content":"The zero-based index of the first occurrence of <code>value</code> within the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>, if found; otherwise, -1.","nodes":[{"pos":[0,168],"content":"The zero-based index of the first occurrence of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> within the entire <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>, if found; otherwise, -1.","source":"The zero-based index of the first occurrence of <code>value</code> within the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>, if found; otherwise, -1."}],"pos":[70557,70726],"yaml":true},{"content":"Inserts the specified object into the <xref href=\"System.Windows.FreezableCollection`1\"></xref> at the specified index.","nodes":[{"pos":[0,119],"content":"Inserts the specified object into the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts the specified object into the <xref href=\"System.Windows.FreezableCollection`1\"></xref> at the specified index."}],"pos":[71795,71915],"yaml":true},{"content":"The zero-based index at which <code>value</code> should be inserted.","nodes":[{"pos":[0,68],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>value</code> should be inserted."}],"pos":[72055,72124],"yaml":true},{"content":"The object to insert.","nodes":[{"pos":[0,21],"content":"The object to insert.","nodes":[{"content":"The object to insert.","pos":[0,21]}]}],"pos":[72173,72195],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[72360,72390],"yaml":true},{"content":"<code>index</code> is less than 0.  \n  \n \\- or -  \n  \n <code>index</code> is greater than <xref href=\"System.Windows.FreezableCollection`1.Count\"></xref>.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0.","source":"<code>index</code> is less than 0."},{"pos":[41,48],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[55,154],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is greater than <xref href=\"System.Windows.FreezableCollection`1.Count\"></xref>."}],"pos":[72504,72668],"yaml":true},{"content":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is frozen (its <ph id=\"ph2\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph3\">`true`</ph>).","source":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`)."}],"pos":[72778,72931],"yaml":true},{"content":"Gets or sets the element at the specified index.","nodes":[{"pos":[0,48],"content":"Gets or sets the element at the specified index.","nodes":[{"content":"Gets or sets the element at the specified index.","pos":[0,48]}]}],"pos":[73897,73946],"yaml":true},{"content":"The zero-based index of the element to get or set.","nodes":[{"pos":[0,50],"content":"The zero-based index of the element to get or set.","nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]}],"pos":[74084,74135],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[74180,74216],"yaml":true},{"content":"<code>index</code> is less than 0.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref href=\"System.Windows.FreezableCollection`1.Count\"></xref>.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0.","source":"<code>index</code> is less than 0."},{"pos":[41,48],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[55,166],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is equal to or greater than <xref href=\"System.Windows.FreezableCollection`1.Count\"></xref>."}],"pos":[74399,74575],"yaml":true},{"content":"The specified element is `null`.","nodes":[{"pos":[0,32],"content":"The specified element is <ph id=\"ph1\">`null`</ph>.","source":"The specified element is `null`."}],"pos":[74669,74702],"yaml":true},{"content":"Attempting to set an item in the collection when the collection is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).","nodes":[{"pos":[0,154],"content":"Attempting to set an item in the collection when the collection is frozen (its <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`true`</ph>).","source":"Attempting to set an item in the collection when the collection is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`)."}],"pos":[74812,74967],"yaml":true},{"content":"Removes the first occurrence of the specified object from the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,120],"content":"Removes the first occurrence of the specified object from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the first occurrence of the specified object from the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[75901,76022],"yaml":true},{"content":"The object to remove.","nodes":[{"pos":[0,21],"content":"The object to remove.","nodes":[{"content":"The object to remove.","pos":[0,21]}]}],"pos":[76140,76162],"yaml":true},{"content":"`true` if an occurrence of <code>value</code> was found in the collection and removed; `false` if <code>value</code> could not be found in the collection.","nodes":[{"pos":[0,154],"content":"<ph id=\"ph1\">`true`</ph> if an occurrence of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> was found in the collection and removed; <ph id=\"ph3\">`false`</ph> if <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> could not be found in the collection.","source":"`true` if an occurrence of <code>value</code> was found in the collection and removed; `false` if <code>value</code> could not be found in the collection."}],"pos":[76220,76377],"yaml":true},{"content":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is frozen (its <ph id=\"ph2\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph3\">`true`</ph>).","source":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`)."}],"pos":[76558,76711],"yaml":true},{"content":"Removes the object at the specified zero-based index of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,118],"content":"Removes the object at the specified zero-based index of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the object at the specified zero-based index of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[77699,77818],"yaml":true},{"content":"The zero-based index of the object to remove.","nodes":[{"pos":[0,45],"content":"The zero-based index of the object to remove.","nodes":[{"content":"The zero-based index of the object to remove.","pos":[0,45]}]}],"pos":[77951,77997],"yaml":true},{"content":"<code>index</code> is less than 0.  \n  \n \\- or -  \n  \n <code>index</code> is greater than <xref href=\"System.Windows.FreezableCollection`1.Count\"></xref>.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0.","source":"<code>index</code> is less than 0."},{"pos":[41,48],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[55,154],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1.Count\"&gt;&lt;/xref&gt;</ph>.","source":"<code>index</code> is greater than <xref href=\"System.Windows.FreezableCollection`1.Count\"></xref>."}],"pos":[78184,78348],"yaml":true},{"content":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).","nodes":[{"pos":[0,152],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is frozen (its <ph id=\"ph2\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph3\">`true`</ph>).","source":"The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`)."}],"pos":[78458,78611],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.Generic.ICollection`1.IsReadOnly\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.ICollection`1.IsReadOnly\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.Generic.ICollection`1.IsReadOnly\"></xref>."}],"pos":[79713,79825],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"pos":[0,218],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.","pos":[0,218],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.ICollection%601&gt;</ph> interface.","pos":[60,218],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface."}]}]}],"pos":[79836,80055],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> is read-only; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> is read-only; otherwise, `false`."}],"pos":[80203,80311],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.Generic.IEnumerable`1.GetEnumerator\"></xref>.","nodes":[{"pos":[0,114],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1.GetEnumerator\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.Generic.IEnumerable`1.GetEnumerator\"></xref>."}],"pos":[81523,81638],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.","nodes":[{"pos":[0,218],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.","pos":[0,218],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.","pos":[60,218],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface."}]}]}],"pos":[81649,81868],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> object that can be used to iterate through the collection.","nodes":[{"pos":[0,123],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerator`1\"&gt;&lt;/xref&gt;</ph> object that can be used to iterate through the collection.","source":"An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> object that can be used to iterate through the collection."}],"pos":[82069,82193],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.ICollection.CopyTo(System.Array,System.Int32)\"></xref>.","nodes":[{"pos":[0,124],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection.CopyTo(System.Array,System.Int32)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.ICollection.CopyTo(System.Array,System.Int32)\"></xref>."}],"pos":[83495,83620],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"pos":[0,206],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,206],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,206],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]}],"pos":[83631,83838],"yaml":true,"extradata":"MT"},{"content":"A zero-based <xref href=\"System.Array\"></xref> that receives the copied items from the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,145],"content":"A zero-based <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> that receives the copied items from the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"A zero-based <xref href=\"System.Array\"></xref> that receives the copied items from the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[83987,84133],"yaml":true},{"content":"The first position in the specified <xref href=\"System.Array\"></xref> to receive the copied contents.","nodes":[{"pos":[0,101],"content":"The first position in the specified <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> to receive the copied contents.","source":"The first position in the specified <xref href=\"System.Array\"></xref> to receive the copied contents."}],"pos":[84193,84295],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.ICollection.IsSynchronized\"></xref>.","nodes":[{"pos":[0,105],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection.IsSynchronized\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.ICollection.IsSynchronized\"></xref>."}],"pos":[85506,85612],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"pos":[0,206],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,206],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,206],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]}],"pos":[85623,85830],"yaml":true,"extradata":"MT"},{"content":"`true` if access to the <xref href=\"System.Windows.FreezableCollection`1\"></xref> is synchronized (thread safe); otherwise, `false`.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">`true`</ph> if access to the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe); otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if access to the <xref href=\"System.Windows.FreezableCollection`1\"></xref> is synchronized (thread safe); otherwise, `false`."}],"pos":[85971,86106],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.ICollection.SyncRoot\"></xref>.","nodes":[{"pos":[0,99],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.ICollection.SyncRoot\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.ICollection.SyncRoot\"></xref>."}],"pos":[87235,87335],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"pos":[0,206],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.","pos":[0,206],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.ICollection&gt;</ph> interface.","pos":[60,206],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface."}]}]}],"pos":[87346,87553],"yaml":true,"extradata":"MT"},{"content":"An object that can be used to synchronize access to the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,114],"content":"An object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"An object that can be used to synchronize access to the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[87689,87804],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>.","nodes":[{"pos":[0,104],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerable.GetEnumerator\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>."}],"pos":[88983,89088],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.","nodes":[{"pos":[0,206],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.","pos":[0,206],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.","pos":[60,206],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface."}]}]}],"pos":[89099,89306],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through the collection.","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph> object that can be used to iterate through the collection.","source":"An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through the collection."}],"pos":[89483,89597],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Add(System.Object)\"></xref>.","nodes":[{"pos":[0,103],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Add(System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Add(System.Object)\"></xref>."}],"pos":[90758,90862],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,200],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[90873,91074],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to add to the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[91204,91316],"yaml":true},{"content":"The position into which the new element was inserted.","nodes":[{"pos":[0,53],"content":"The position into which the new element was inserted.","nodes":[{"content":"The position into which the new element was inserted.","pos":[0,53]}]}],"pos":[91372,91426],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Contains(System.Object)\"></xref>.","nodes":[{"pos":[0,108],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Contains(System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Contains(System.Object)\"></xref>."}],"pos":[92623,92732],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,200],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[92743,92944],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[93080,93195],"yaml":true},{"content":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>; otherwise, `false`."}],"pos":[93253,93399],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.IndexOf(System.Object)\"></xref>.","nodes":[{"pos":[0,107],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.IndexOf(System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.IndexOf(System.Object)\"></xref>."}],"pos":[94595,94703],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,200],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[94714,94915],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[95049,95164],"yaml":true},{"content":"The index of <code>value</code> if found in the list; otherwise, -1.","nodes":[{"pos":[0,68],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the list; otherwise, -1.","source":"The index of <code>value</code> if found in the list; otherwise, -1."}],"pos":[95220,95289],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Insert(System.Int32,System.Object)\"></xref>.","nodes":[{"pos":[0,119],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Insert(System.Int32,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Insert(System.Int32,System.Object)\"></xref>."}],"pos":[96516,96636],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,200],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[96647,96848],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which to insert the <xref href=\"System.Object\"></xref>.","nodes":[{"pos":[0,79],"content":"The zero-based index at which to insert the <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph>.","source":"The zero-based index at which to insert the <xref href=\"System.Object\"></xref>."}],"pos":[96992,97072],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to insert into the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to insert into the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to insert into the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[97133,97250],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.IsFixedSize\"></xref>.","nodes":[{"pos":[0,96],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.IsFixedSize\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.IsFixedSize\"></xref>."}],"pos":[98401,98498],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,200],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[98509,98710],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> has a fixed size; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> has a fixed size; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> has a fixed size; otherwise, `false`."}],"pos":[98842,98954],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.IsReadOnly\"></xref>.","nodes":[{"pos":[0,95],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.IsReadOnly\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.IsReadOnly\"></xref>."}],"pos":[100072,100168],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,200],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[100179,100380],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> is read-only; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> is read-only; otherwise, `false`."}],"pos":[100511,100619],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Item(System.Int32)\"></xref>.","nodes":[{"pos":[0,103],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Item(System.Int32)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Item(System.Int32)\"></xref>."}],"pos":[101741,101845],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,200],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[101856,102057],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the element to get or set.","nodes":[{"pos":[0,50],"content":"The zero-based index of the element to get or set.","nodes":[{"content":"The zero-based index of the element to get or set.","pos":[0,50]}]}],"pos":[102218,102269],"yaml":true},{"content":"The element at the specified index.","nodes":[{"pos":[0,35],"content":"The element at the specified index.","nodes":[{"content":"The element at the specified index.","pos":[0,35]}]}],"pos":[102326,102362],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Collections.IList.Remove(System.Object)\"></xref>.","nodes":[{"pos":[0,106],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Collections.IList.Remove(System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Collections.IList.Remove(System.Object)\"></xref>."}],"pos":[103494,103601],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"pos":[0,200],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.","pos":[0,200],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Windows.FreezableCollection%601&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Collections.IList&gt;</ph> interface.","pos":[60,200],"source":" It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface."}]}]}],"pos":[103612,103813],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,116],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to remove from the <ph id=\"ph2\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[103947,104064],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.FreezableCollection`1\n  commentId: T:System.Windows.FreezableCollection`1\n  id: FreezableCollection`1\n  children:\n  - System.Windows.FreezableCollection`1.#ctor\n  - System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  - System.Windows.FreezableCollection`1.#ctor(System.Int32)\n  - System.Windows.FreezableCollection`1.Add(`0)\n  - System.Windows.FreezableCollection`1.Clear\n  - System.Windows.FreezableCollection`1.Clone\n  - System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)\n  - System.Windows.FreezableCollection`1.CloneCurrentValue\n  - System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.FreezableCollection`1.Contains(`0)\n  - System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)\n  - System.Windows.FreezableCollection`1.Count\n  - System.Windows.FreezableCollection`1.CreateInstanceCore\n  - System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)\n  - System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.FreezableCollection`1.GetEnumerator\n  - System.Windows.FreezableCollection`1.IndexOf(`0)\n  - System.Windows.FreezableCollection`1.Insert(System.Int32,`0)\n  - System.Windows.FreezableCollection`1.Item(System.Int32)\n  - System.Windows.FreezableCollection`1.Remove(`0)\n  - System.Windows.FreezableCollection`1.RemoveAt(System.Int32)\n  - System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized\n  - System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot\n  - System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize\n  - System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: FreezableCollection<T>\n  nameWithType: FreezableCollection<T>\n  fullName: System.Windows.FreezableCollection<T>\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Represents a collection of <xref href=\"System.Windows.DependencyObject\"></xref>, <xref href=\"System.Windows.Freezable\"></xref>, or <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> objects. <xref href=\"System.Windows.FreezableCollection`1\"></xref> is itself an <xref href=\"System.Windows.Media.Animation.Animatable\"></xref> type.\n  remarks: \"This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.  \\n  \\n### XAML Usage for FreezableCollection  \\n <xref:System.Windows.FreezableCollection%601> supports a limited [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.  \\n  \\n-   As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint. However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element. This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  \\n  \\n-   If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages. This is possible because the constraint in your derivation eliminates the need to pass .  \\n  \\n    -   The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax. Collections that support certain interfaces do not need to specify the collection itself as an object element. For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md). For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:  \\n  \\n        ```  \\n        <object>  \\n          <object.property>  \\n            oneOrMoreDependencyObjectElements  \\n          </object.property>  \\n        </object>  \\n        ```  \\n  \\n    -   As long as you do not hide the default constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above). It does not need to be the root element. Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.  \\n  \\n-   Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .  \\n  \\n<a name=\\\"xamlTextUsage_FreezableCollection_g\\\"></a>   \\n## XAML Text Usage  \\n See Remarks.\"\n  syntax:\n    content: 'public class FreezableCollection<T> : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged where T : DependencyObject'\n    typeParameters:\n    - id: T\n      description: The type of collection. This type must be a <xref href=\"System.Windows.DependencyObject\"></xref> or a derived class.\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  derivedClasses:\n  - System.Windows.Controls.Ribbon.RibbonControlSizeDefinitionCollection\n  - System.Windows.Controls.Ribbon.RibbonGroupSizeDefinitionBaseCollection\n  - System.Windows.Shell.ThumbButtonInfoCollection\n  implements:\n  - System.Collections.Generic.ICollection{T}\n  - System.Collections.Generic.IEnumerable{T}\n  - System.Collections.Generic.IList{T}\n  - System.Collections.IList\n  - System.Collections.Specialized.INotifyCollectionChanged\n  - System.ComponentModel.INotifyPropertyChanged\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnChanged\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.#ctor\n  commentId: M:System.Windows.FreezableCollection`1.#ctor\n  id: '#ctor'\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: FreezableCollection<T>()\n  nameWithType: FreezableCollection<T>.FreezableCollection<T>()\n  fullName: FreezableCollection<T>.FreezableCollection<T>()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Initializes a new instance of <xref href=\"System.Windows.FreezableCollection`1\"></xref> that is empty and has the default initial capacity.\n  syntax:\n    content: public FreezableCollection ();\n    parameters: []\n  overload: System.Windows.FreezableCollection`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  commentId: M:System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: FreezableCollection<T>(IEnumerable<T>)\n  nameWithType: FreezableCollection<T>.FreezableCollection<T>(IEnumerable<T>)\n  fullName: FreezableCollection<T>.FreezableCollection<T>(IEnumerable<T>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.FreezableCollection`1\"></xref> class that contains the same elements as the specified collection.\n  remarks: \"This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned. Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`.  \\n  \\n The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection.\"\n  syntax:\n    content: public FreezableCollection (System.Collections.Generic.IEnumerable<T> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable`1\n      description: The collection whose items should be added to the new <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  overload: System.Windows.FreezableCollection`1.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>collection</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.#ctor(System.Int32)\n  commentId: M:System.Windows.FreezableCollection`1.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: FreezableCollection<T>(Int32)\n  nameWithType: FreezableCollection<T>.FreezableCollection<T>(Int32)\n  fullName: FreezableCollection<T>.FreezableCollection<T>(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.FreezableCollection`1\"></xref> that is empty and has the specified initial capacity.\n  syntax:\n    content: public FreezableCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.\n  overload: System.Windows.FreezableCollection`1.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>capacity</code> is less than 0.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FreezableCollection`1.Add(`0)\n  commentId: M:System.Windows.FreezableCollection`1.Add(`0)\n  id: Add(`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: FreezableCollection<T>.Add(T)\n  fullName: FreezableCollection<T>.Add(T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Adds the specified object to the end of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  syntax:\n    content: public void Add (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The object to be added to the end of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>. This value cannot be `null`.\n  overload: System.Windows.FreezableCollection`1.Add*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Clear\n  commentId: M:System.Windows.FreezableCollection`1.Clear\n  id: Clear\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: FreezableCollection<T>.Clear()\n  fullName: FreezableCollection<T>.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Removes all elements from the collection.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Windows.FreezableCollection`1.Clear*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Clone\n  commentId: M:System.Windows.FreezableCollection`1.Clone\n  id: Clone\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: FreezableCollection<T>.Clone()\n  fullName: FreezableCollection<T>.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.FreezableCollection`1\"></xref> and its contents, making deep copies. If this collection (or its contents) has animated dependency properties, the property’s base value is copied, not its current animated value.\n  remarks: This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=fullName> method with a strongly typed implementation for convenience.\n  syntax:\n    content: public System.Windows.FreezableCollection<T> Clone ();\n    parameters: []\n    return:\n      type: System.Windows.FreezableCollection`1\n      description: A modifiable copy of this collection and its contents. The copy's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> value is `false`.\n  overload: System.Windows.FreezableCollection`1.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)\n  commentId: M:System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: FreezableCollection<T>.CloneCore(Freezable)\n  fullName: FreezableCollection<T>.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Makes this instance a clone (deep copy) of the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> using base (non-animated) property values.\n  remarks: This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to copy.\n  overload: System.Windows.FreezableCollection`1.CloneCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValue\n  commentId: M:System.Windows.FreezableCollection`1.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: FreezableCollection<T>.CloneCurrentValue()\n  fullName: FreezableCollection<T>.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Creates a modifiable copy of this <xref href=\"System.Windows.FreezableCollection`1\"></xref> and its contents, making deep copies of this object's current values. If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.\n  remarks: This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName> method with a strongly typed implementation for convenience.\n  syntax:\n    content: public System.Windows.FreezableCollection<T> CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.FreezableCollection`1\n      description: A modifiable clone of the collection and its contents. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`\n  overload: System.Windows.FreezableCollection`1.CloneCurrentValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)\n  commentId: M:System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: FreezableCollection<T>.CloneCurrentValueCore(Freezable)\n  fullName: FreezableCollection<T>.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Makes this instance a modifiable clone (deep copy) of the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> using current property values.\n  remarks: This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to clone.\n  overload: System.Windows.FreezableCollection`1.CloneCurrentValueCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Contains(`0)\n  commentId: M:System.Windows.FreezableCollection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: FreezableCollection<T>.Contains(T)\n  fullName: FreezableCollection<T>.Contains(T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Determines whether this <xref href=\"System.Windows.FreezableCollection`1\"></xref> contains the specified value.\n  syntax:\n    content: public bool Contains (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The object to locate in this collection. This object may be `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if value is found in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>; otherwise, `false`.'\n  overload: System.Windows.FreezableCollection`1.Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)\n  commentId: M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CopyTo(T[], Int32)\n  nameWithType: FreezableCollection<T>.CopyTo(T[], Int32)\n  fullName: FreezableCollection<T>.CopyTo(T[], Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Copies the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref> to a compatible one-dimensional array, starting at the specified index of the target array.\n  remarks: Note that this operation performs a shallow copy. The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.\n  syntax:\n    content: public void CopyTo (T[] array, int index);\n    parameters:\n    - id: array\n      type: T[]\n      description: The one-dimensional array that is the destination of the elements copied from <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Windows.FreezableCollection`1.CopyTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>array</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> is less than 0.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of elements in the source <xref href=\"System.Windows.FreezableCollection`1\"></xref> is greater than the available space from index to the end of the destination <code>array</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Count\n  commentId: P:System.Windows.FreezableCollection`1.Count\n  id: Count\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: FreezableCollection<T>.Count\n  fullName: FreezableCollection<T>.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets the number of elements contained by this <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of elements contained by this <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  overload: System.Windows.FreezableCollection`1.Count*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.CreateInstanceCore\n  commentId: M:System.Windows.FreezableCollection`1.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: FreezableCollection<T>.CreateInstanceCore()\n  fullName: FreezableCollection<T>.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Creates a new instance of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  remarks: Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.\n  example:\n  - \"The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \\n  \\n [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]\\n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]\"\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.FreezableCollection`1.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)\n  commentId: M:System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: FreezableCollection<T>.FreezeCore(Boolean)\n  fullName: FreezableCollection<T>.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Makes this <xref href=\"System.Windows.FreezableCollection`1\"></xref> object unmodifiable or determines whether it can be made unmodifiable.\n  remarks: Do not call this method directly (except when calling base in an implementation). This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> should simply return whether it can be frozen. `false` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> instance should actually freeze itself when this method is called.'\n    return:\n      type: System.Boolean\n      description: \"If <code>isChecking</code> is `true`, this method returns `true` if this <xref href=\\\"System.Windows.FreezableCollection`1\\\"></xref> can be made unmodifiable, or `false` if it cannot be made unmodifiable.  \\n  \\n If <code>isChecking</code> is `false`, this method returns `true` if the if the specified <xref href=\\\"System.Windows.FreezableCollection`1\\\"></xref> is now unmodifiable, or `false` if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.\"\n  overload: System.Windows.FreezableCollection`1.FreezeCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)\n  commentId: M:System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: FreezableCollection<T>.GetAsFrozenCore(Freezable)\n  fullName: FreezableCollection<T>.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Makes this instance a frozen clone of the specified <xref href=\"System.Windows.FreezableCollection`1\"></xref> using base (non-animated) property values.\n  remarks: This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to copy.\n  overload: System.Windows.FreezableCollection`1.GetAsFrozenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  commentId: M:System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: FreezableCollection<T>.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: FreezableCollection<T>.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Makes this instance a frozen clone of the specified <xref href=\"System.Windows.Freezable\"></xref>. If this object has animated dependency properties, their current animated values are copied.\n  remarks: This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method. To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: The <xref href=\"System.Windows.FreezableCollection`1\"></xref> to copy.\n  overload: System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.GetEnumerator\n  commentId: M:System.Windows.FreezableCollection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: FreezableCollection<T>.GetEnumerator()\n  fullName: FreezableCollection<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Returns an enumerator for the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  syntax:\n    content: public System.Windows.FreezableCollection<T>.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.FreezableCollection{T}\n      description: An enumerator for the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  overload: System.Windows.FreezableCollection`1.GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.IndexOf(`0)\n  commentId: M:System.Windows.FreezableCollection`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: FreezableCollection<T>.IndexOf(T)\n  fullName: FreezableCollection<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Searches for the specified object and returns the zero-based index of the first occurrence within the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  syntax:\n    content: public int IndexOf (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The object to locate in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n    return:\n      type: System.Int32\n      description: The zero-based index of the first occurrence of <code>value</code> within the entire <xref href=\"System.Windows.FreezableCollection`1\"></xref>, if found; otherwise, -1.\n  overload: System.Windows.FreezableCollection`1.IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Insert(System.Int32,`0)\n  commentId: M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Insert(Int32, T)\n  nameWithType: FreezableCollection<T>.Insert(Int32, T)\n  fullName: FreezableCollection<T>.Insert(Int32, T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Inserts the specified object into the <xref href=\"System.Windows.FreezableCollection`1\"></xref> at the specified index.\n  syntax:\n    content: public void Insert (int index, T value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted.\n    - id: value\n      type: T\n      description: The object to insert.\n  overload: System.Windows.FreezableCollection`1.Insert*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than 0.  \\n  \\n \\\\- or -  \\n  \\n <code>index</code> is greater than <xref href=\\\"System.Windows.FreezableCollection`1.Count\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Item(System.Int32)\n  commentId: P:System.Windows.FreezableCollection`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: FreezableCollection<T>.Item(Int32)\n  fullName: FreezableCollection<T>.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets or sets the element at the specified index.\n  syntax:\n    content: public T this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: T\n      description: The element at the specified index.\n  overload: System.Windows.FreezableCollection`1.Item*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than 0.  \\n  \\n \\\\- or -  \\n  \\n <code>index</code> is equal to or greater than <xref href=\\\"System.Windows.FreezableCollection`1.Count\\\"></xref>.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The specified element is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Attempting to set an item in the collection when the collection is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Remove(`0)\n  commentId: M:System.Windows.FreezableCollection`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: FreezableCollection<T>.Remove(T)\n  fullName: FreezableCollection<T>.Remove(T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Removes the first occurrence of the specified object from the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  syntax:\n    content: public bool Remove (T value);\n    parameters:\n    - id: value\n      type: T\n      description: The object to remove.\n    return:\n      type: System.Boolean\n      description: '`true` if an occurrence of <code>value</code> was found in the collection and removed; `false` if <code>value</code> could not be found in the collection.'\n  overload: System.Windows.FreezableCollection`1.Remove*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.RemoveAt(System.Int32)\n  commentId: M:System.Windows.FreezableCollection`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: FreezableCollection<T>.RemoveAt(Int32)\n  fullName: FreezableCollection<T>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Removes the object at the specified zero-based index of the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the object to remove.\n  overload: System.Windows.FreezableCollection`1.RemoveAt*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> is less than 0.  \\n  \\n \\\\- or -  \\n  \\n <code>index</code> is greater than <xref href=\\\"System.Windows.FreezableCollection`1.Count\\\"></xref>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Windows.FreezableCollection`1\"></xref> is frozen (its <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property is `true`).\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  commentId: P:System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection<T>#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: ICollection<T>.IsReadOnly\n  nameWithType: FreezableCollection<T>.ICollection<T>.IsReadOnly\n  fullName: FreezableCollection<T>.ICollection<T>.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.Generic.ICollection`1.IsReadOnly\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.\n  syntax:\n    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> is read-only; otherwise, `false`.'\n  overload: System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  commentId: M:System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable<T>#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IEnumerable<T>.GetEnumerator()\n  nameWithType: FreezableCollection<T>.IEnumerable<T>.GetEnumerator()\n  fullName: FreezableCollection<T>.IEnumerable<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.Generic.IEnumerable`1.GetEnumerator\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.\n  syntax:\n    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: An <xref href=\"System.Collections.Generic.IEnumerator`1\"></xref> object that can be used to iterate through the collection.\n  overload: System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: FreezableCollection<T>.ICollection.CopyTo(Array, Int32)\n  fullName: FreezableCollection<T>.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.ICollection.CopyTo(System.Array,System.Int32)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: A zero-based <xref href=\"System.Array\"></xref> that receives the copied items from the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n    - id: index\n      type: System.Int32\n      description: The first position in the specified <xref href=\"System.Array\"></xref> to receive the copied contents.\n  overload: System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: FreezableCollection<T>.ICollection.IsSynchronized\n  fullName: FreezableCollection<T>.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.ICollection.IsSynchronized\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if access to the <xref href=\"System.Windows.FreezableCollection`1\"></xref> is synchronized (thread safe); otherwise, `false`.'\n  overload: System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: FreezableCollection<T>.ICollection.SyncRoot\n  fullName: FreezableCollection<T>.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.ICollection.SyncRoot\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: An object that can be used to synchronize access to the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  overload: System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator\n  commentId: M:System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IEnumerable.GetEnumerator()\n  nameWithType: FreezableCollection<T>.IEnumerable.GetEnumerator()\n  fullName: FreezableCollection<T>.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.IEnumerable.GetEnumerator\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An <xref href=\"System.Collections.IEnumerator\"></xref> object that can be used to iterate through the collection.\n  overload: System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: FreezableCollection<T>.IList.Add(Object)\n  fullName: FreezableCollection<T>.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Add(System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to add to the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n    return:\n      type: System.Int32\n      description: The position into which the new element was inserted.\n  overload: System.Windows.FreezableCollection`1.System#Collections#IList#Add*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: FreezableCollection<T>.IList.Contains(Object)\n  fullName: FreezableCollection<T>.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Contains(System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>; otherwise, `false`.'\n  overload: System.Windows.FreezableCollection`1.System#Collections#IList#Contains*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: FreezableCollection<T>.IList.IndexOf(Object)\n  fullName: FreezableCollection<T>.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.IndexOf(System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to locate in the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the list; otherwise, -1.\n  overload: System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: FreezableCollection<T>.IList.Insert(Int32, Object)\n  fullName: FreezableCollection<T>.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Insert(System.Int32,System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which to insert the <xref href=\"System.Object\"></xref>.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to insert into the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  overload: System.Windows.FreezableCollection`1.System#Collections#IList#Insert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize\n  commentId: P:System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IList.IsFixedSize\n  nameWithType: FreezableCollection<T>.IList.IsFixedSize\n  fullName: FreezableCollection<T>.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.IsFixedSize\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> has a fixed size; otherwise, `false`.'\n  overload: System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly\n  commentId: P:System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IList.IsReadOnly\n  nameWithType: FreezableCollection<T>.IList.IsReadOnly\n  fullName: FreezableCollection<T>.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.IsReadOnly\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Windows.FreezableCollection`1\"></xref> is read-only; otherwise, `false`.'\n  overload: System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IList.Item(Int32)\n  nameWithType: FreezableCollection<T>.IList.Item(Int32)\n  fullName: FreezableCollection<T>.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Item(System.Int32)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the element to get or set.\n    return:\n      type: System.Object\n      description: The element at the specified index.\n  overload: System.Windows.FreezableCollection`1.System#Collections#IList#Item*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: FreezableCollection<T>.IList.Remove(Object)\n  fullName: FreezableCollection<T>.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: For a description of this member, see <xref href=\"System.Collections.IList.Remove(System.Object)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to remove from the <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  overload: System.Windows.FreezableCollection`1.System#Collections#IList#Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: Animatable\n  nameWithType: Animatable\n  fullName: System.Windows.Media.Animation.Animatable\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.FreezableCollection`1.#ctor\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezableCollection<T>()\n  nameWithType: FreezableCollection<T>.FreezableCollection<T>()\n  fullName: FreezableCollection<T>.FreezableCollection<T>()\n- uid: System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezableCollection<T>(IEnumerable<T>)\n  nameWithType: FreezableCollection<T>.FreezableCollection<T>(IEnumerable<T>)\n  fullName: FreezableCollection<T>.FreezableCollection<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Windows.FreezableCollection`1.#ctor(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezableCollection<T>(Int32)\n  nameWithType: FreezableCollection<T>.FreezableCollection<T>(Int32)\n  fullName: FreezableCollection<T>.FreezableCollection<T>(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FreezableCollection`1.Add(`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: FreezableCollection<T>.Add(T)\n  fullName: FreezableCollection<T>.Add(T)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Windows.FreezableCollection`1.Clear\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Clear()\n  nameWithType: FreezableCollection<T>.Clear()\n  fullName: FreezableCollection<T>.Clear()\n- uid: System.Windows.FreezableCollection`1.Clone\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Clone()\n  nameWithType: FreezableCollection<T>.Clone()\n  fullName: FreezableCollection<T>.Clone()\n- uid: System.Windows.FreezableCollection`1\n  parent: System.Windows\n  isExternal: false\n  name: FreezableCollection<T>\n  nameWithType: FreezableCollection<T>\n  fullName: System.Windows.FreezableCollection<T>\n- uid: System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: FreezableCollection<T>.CloneCore(Freezable)\n  fullName: FreezableCollection<T>.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValue\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: FreezableCollection<T>.CloneCurrentValue()\n  fullName: FreezableCollection<T>.CloneCurrentValue()\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: FreezableCollection<T>.CloneCurrentValueCore(Freezable)\n  fullName: FreezableCollection<T>.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.FreezableCollection`1.Contains(`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: FreezableCollection<T>.Contains(T)\n  fullName: FreezableCollection<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CopyTo(T[], Int32)\n  nameWithType: FreezableCollection<T>.CopyTo(T[], Int32)\n  fullName: FreezableCollection<T>.CopyTo(T[], Int32)\n- uid: T[]\n  isExternal: true\n  name: T[]\n  nameWithType: T[]\n  fullName: T[]\n  spec.csharp:\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.FreezableCollection`1.Count\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: FreezableCollection<T>.Count\n  fullName: FreezableCollection<T>.Count\n- uid: System.Windows.FreezableCollection`1.CreateInstanceCore\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: FreezableCollection<T>.CreateInstanceCore()\n  fullName: FreezableCollection<T>.CreateInstanceCore()\n- uid: System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: FreezableCollection<T>.FreezeCore(Boolean)\n  fullName: FreezableCollection<T>.FreezeCore(Boolean)\n- uid: System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: FreezableCollection<T>.GetAsFrozenCore(Freezable)\n  fullName: FreezableCollection<T>.GetAsFrozenCore(Freezable)\n- uid: System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: FreezableCollection<T>.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: FreezableCollection<T>.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.FreezableCollection`1.GetEnumerator\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: FreezableCollection<T>.GetEnumerator()\n  fullName: FreezableCollection<T>.GetEnumerator()\n- uid: System.Windows.FreezableCollection{T}\n  parent: System.Windows\n  isExternal: false\n  name: FreezableCollection<T>\n  nameWithType: FreezableCollection<T>\n  fullName: System.Windows.FreezableCollection<T>+Enumerator\n  spec.csharp:\n  - uid: System.Windows.FreezableCollection`1\n    name: FreezableCollection\n    nameWithType: FreezableCollection\n    fullName: System.Windows.FreezableCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.FreezableCollection`1.IndexOf(`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: FreezableCollection<T>.IndexOf(T)\n  fullName: FreezableCollection<T>.IndexOf(T)\n- uid: System.Windows.FreezableCollection`1.Insert(System.Int32,`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Insert(Int32, T)\n  nameWithType: FreezableCollection<T>.Insert(Int32, T)\n  fullName: FreezableCollection<T>.Insert(Int32, T)\n- uid: System.Windows.FreezableCollection`1.Item(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: FreezableCollection<T>.Item(Int32)\n  fullName: FreezableCollection<T>.Item(Int32)\n- uid: System.Windows.FreezableCollection`1.Remove(`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: FreezableCollection<T>.Remove(T)\n  fullName: FreezableCollection<T>.Remove(T)\n- uid: System.Windows.FreezableCollection`1.RemoveAt(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: FreezableCollection<T>.RemoveAt(Int32)\n  fullName: FreezableCollection<T>.RemoveAt(Int32)\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: ICollection<T>.IsReadOnly\n  nameWithType: FreezableCollection<T>.ICollection<T>.IsReadOnly\n  fullName: FreezableCollection<T>.ICollection<T>.IsReadOnly\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IEnumerable<T>.GetEnumerator()\n  nameWithType: FreezableCollection<T>.IEnumerable<T>.GetEnumerator()\n  fullName: FreezableCollection<T>.IEnumerable<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: FreezableCollection<T>.ICollection.CopyTo(Array, Int32)\n  fullName: FreezableCollection<T>.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: FreezableCollection<T>.ICollection.IsSynchronized\n  fullName: FreezableCollection<T>.ICollection.IsSynchronized\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: FreezableCollection<T>.ICollection.SyncRoot\n  fullName: FreezableCollection<T>.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: FreezableCollection<T>.IEnumerable.GetEnumerator()\n  fullName: FreezableCollection<T>.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: FreezableCollection<T>.IList.Add(Object)\n  fullName: FreezableCollection<T>.IList.Add(Object)\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: FreezableCollection<T>.IList.Contains(Object)\n  fullName: FreezableCollection<T>.IList.Contains(Object)\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: FreezableCollection<T>.IList.IndexOf(Object)\n  fullName: FreezableCollection<T>.IList.IndexOf(Object)\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: FreezableCollection<T>.IList.Insert(Int32, Object)\n  fullName: FreezableCollection<T>.IList.Insert(Int32, Object)\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: FreezableCollection<T>.IList.IsFixedSize\n  fullName: FreezableCollection<T>.IList.IsFixedSize\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: FreezableCollection<T>.IList.IsReadOnly\n  fullName: FreezableCollection<T>.IList.IsReadOnly\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: FreezableCollection<T>.IList.Item(Int32)\n  fullName: FreezableCollection<T>.IList.Item(Int32)\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: FreezableCollection<T>.IList.Remove(Object)\n  fullName: FreezableCollection<T>.IList.Remove(Object)\n- uid: System.Windows.FreezableCollection`1.#ctor*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezableCollection<T>\n  nameWithType: FreezableCollection<T>.FreezableCollection<T>\n  fullName: FreezableCollection<T>.FreezableCollection<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.Add*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Add\n  nameWithType: FreezableCollection<T>.Add\n  fullName: FreezableCollection<T>.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.Clear*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Clear\n  nameWithType: FreezableCollection<T>.Clear\n  fullName: FreezableCollection<T>.Clear\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.Clone*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Clone\n  nameWithType: FreezableCollection<T>.Clone\n  fullName: FreezableCollection<T>.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.CloneCore*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CloneCore\n  nameWithType: FreezableCollection<T>.CloneCore\n  fullName: FreezableCollection<T>.CloneCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValue*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CloneCurrentValue\n  nameWithType: FreezableCollection<T>.CloneCurrentValue\n  fullName: FreezableCollection<T>.CloneCurrentValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValueCore*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CloneCurrentValueCore\n  nameWithType: FreezableCollection<T>.CloneCurrentValueCore\n  fullName: FreezableCollection<T>.CloneCurrentValueCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.Contains*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Contains\n  nameWithType: FreezableCollection<T>.Contains\n  fullName: FreezableCollection<T>.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.CopyTo*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CopyTo\n  nameWithType: FreezableCollection<T>.CopyTo\n  fullName: FreezableCollection<T>.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.Count*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: FreezableCollection<T>.Count\n  fullName: FreezableCollection<T>.Count\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.CreateInstanceCore*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: FreezableCollection<T>.CreateInstanceCore\n  fullName: FreezableCollection<T>.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.FreezeCore*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezeCore\n  nameWithType: FreezableCollection<T>.FreezeCore\n  fullName: FreezableCollection<T>.FreezeCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.GetAsFrozenCore*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: GetAsFrozenCore\n  nameWithType: FreezableCollection<T>.GetAsFrozenCore\n  fullName: FreezableCollection<T>.GetAsFrozenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore\n  nameWithType: FreezableCollection<T>.GetCurrentValueAsFrozenCore\n  fullName: FreezableCollection<T>.GetCurrentValueAsFrozenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.GetEnumerator*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: FreezableCollection<T>.GetEnumerator\n  fullName: FreezableCollection<T>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.IndexOf*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IndexOf\n  nameWithType: FreezableCollection<T>.IndexOf\n  fullName: FreezableCollection<T>.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.Insert*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Insert\n  nameWithType: FreezableCollection<T>.Insert\n  fullName: FreezableCollection<T>.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.Item*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Item\n  nameWithType: FreezableCollection<T>.Item\n  fullName: FreezableCollection<T>.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.Remove*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Remove\n  nameWithType: FreezableCollection<T>.Remove\n  fullName: FreezableCollection<T>.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.RemoveAt*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: RemoveAt\n  nameWithType: FreezableCollection<T>.RemoveAt\n  fullName: FreezableCollection<T>.RemoveAt\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection<T>.IsReadOnly\n  nameWithType: FreezableCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly\n  fullName: FreezableCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  nameWithType: FreezableCollection<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  fullName: FreezableCollection<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: FreezableCollection<T>.System.Collections.ICollection.CopyTo\n  fullName: FreezableCollection<T>.System.Collections.ICollection.CopyTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: FreezableCollection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: FreezableCollection<T>.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: FreezableCollection<T>.System.Collections.ICollection.SyncRoot\n  fullName: FreezableCollection<T>.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator\n  nameWithType: FreezableCollection<T>.System.Collections.IEnumerable.GetEnumerator\n  fullName: FreezableCollection<T>.System.Collections.IEnumerable.GetEnumerator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Add*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Add\n  fullName: FreezableCollection<T>.System.Collections.IList.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Contains*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Contains\n  fullName: FreezableCollection<T>.System.Collections.IList.Contains\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: FreezableCollection<T>.System.Collections.IList.IndexOf\n  fullName: FreezableCollection<T>.System.Collections.IList.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Insert*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Insert\n  fullName: FreezableCollection<T>.System.Collections.IList.Insert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: FreezableCollection<T>.System.Collections.IList.IsFixedSize\n  fullName: FreezableCollection<T>.System.Collections.IList.IsFixedSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: FreezableCollection<T>.System.Collections.IList.IsReadOnly\n  fullName: FreezableCollection<T>.System.Collections.IList.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Item*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Item\n  fullName: FreezableCollection<T>.System.Collections.IList.Item\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Remove*\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Remove\n  fullName: FreezableCollection<T>.System.Collections.IList.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnChanged\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnChanged()\n  nameWithType: Freezable.OnChanged()\n  fullName: Freezable.OnChanged()\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Generic.ICollection`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<T>\n  nameWithType: ICollection<T>\n  fullName: System.Collections.Generic.ICollection<T>\n- uid: System.Collections.Generic.IList`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Collections.Specialized.INotifyCollectionChanged\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: INotifyCollectionChanged\n  nameWithType: INotifyCollectionChanged\n  fullName: System.Collections.Specialized.INotifyCollectionChanged\n- uid: System.ComponentModel.INotifyPropertyChanged\n  parent: System.ComponentModel\n  isExternal: false\n  name: INotifyPropertyChanged\n  nameWithType: INotifyPropertyChanged\n  fullName: System.ComponentModel.INotifyPropertyChanged\n"}