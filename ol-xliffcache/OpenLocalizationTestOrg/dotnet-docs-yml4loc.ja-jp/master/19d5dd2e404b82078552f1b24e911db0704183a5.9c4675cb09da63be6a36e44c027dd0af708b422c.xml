{"nodes":[{"content":"Defines and represents a module in a dynamic assembly.","nodes":[{"pos":[0,54],"content":"Defines and represents a module in a dynamic assembly.","nodes":[{"content":"Defines and represents a module in a dynamic assembly.","pos":[0,54]}]}],"pos":[8152,8207],"yaml":true},{"content":"To get an instance of <xref:System.Reflection.Emit.ModuleBuilder>, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,176],"content":"To get an instance of <xref:System.Reflection.Emit.ModuleBuilder>, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=fullName> method.","nodes":[{"content":"To get an instance of <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder&gt;</ph>, use the <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,176],"source":"To get an instance of <xref:System.Reflection.Emit.ModuleBuilder>, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=fullName> method."}]}],"pos":[8218,8395],"yaml":true,"extradata":"MT"},{"content":"Gets the dynamic assembly that defined this instance of <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>.","nodes":[{"pos":[0,114],"content":"Gets the dynamic assembly that defined this instance of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the dynamic assembly that defined this instance of <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>."}],"pos":[14701,14816],"yaml":true},{"content":"The <xref:System.Reflection.Assembly> object that is returned is the <xref:System.Reflection.Emit.AssemblyBuilder> that defined this instance of <xref:System.Reflection.Emit.ModuleBuilder>.","nodes":[{"pos":[0,189],"content":"The <xref:System.Reflection.Assembly> object that is returned is the <xref:System.Reflection.Emit.AssemblyBuilder> that defined this instance of <xref:System.Reflection.Emit.ModuleBuilder>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly&gt;</ph> object that is returned is the <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.AssemblyBuilder&gt;</ph> that defined this instance of <ph id=\"ph3\">&lt;xref:System.Reflection.Emit.ModuleBuilder&gt;</ph>.","pos":[0,189],"source":"The <xref:System.Reflection.Assembly> object that is returned is the <xref:System.Reflection.Emit.AssemblyBuilder> that defined this instance of <xref:System.Reflection.Emit.ModuleBuilder>."}]}],"pos":[14827,15017],"yaml":true,"extradata":"MT"},{"content":"The dynamic assembly that defined the current dynamic module.","nodes":[{"pos":[0,61],"content":"The dynamic assembly that defined the current dynamic module.","nodes":[{"content":"The dynamic assembly that defined the current dynamic module.","pos":[0,61]}]}],"pos":[15171,15233],"yaml":true},{"content":"Completes the global function definitions and global data definitions for this dynamic module.","nodes":[{"pos":[0,94],"content":"Completes the global function definitions and global data definitions for this dynamic module.","nodes":[{"content":"Completes the global function definitions and global data definitions for this dynamic module.","pos":[0,94]}]}],"pos":[16513,16608],"yaml":true},{"content":"This method should be called when the user is done with defining all the global functions within this dynamic module. After calling this function, no more new global functions or new global data are allowed.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,207],"content":"This method should be called when the user is done with defining all the global functions within this dynamic module. After calling this function, no more new global functions or new global data are allowed.","nodes":[{"content":"This method should be called when the user is done with defining all the global functions within this dynamic module. After calling this function, no more new global functions or new global data are allowed.","pos":[0,207],"nodes":[{"content":"This method should be called when the user is done with defining all the global functions within this dynamic module.","pos":[0,117]},{"content":"After calling this function, no more new global functions or new global data are allowed.","pos":[118,207]}]}]},{"pos":[215,744],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[16619,17369],"yaml":true,"extradata":"MT"},{"content":"This method was called previously.","nodes":[{"pos":[0,34],"content":"This method was called previously.","nodes":[{"content":"This method was called previously.","pos":[0,34]}]}],"pos":[18438,18473],"yaml":true},{"content":"Defines a document for source.","nodes":[{"pos":[0,30],"content":"Defines a document for source.","nodes":[{"content":"Defines a document for source.","pos":[0,30]}]}],"pos":[19873,19904],"yaml":true},{"content":"> [!IMPORTANT]\n>  Earlier versions of the .NET Framework throw <xref:System.ArgumentException> instead of <xref:System.ArgumentNullException> when `url` is `null`.","nodes":[{"pos":[2,163],"content":"[!IMPORTANT]\n Earlier versions of the .NET Framework throw <xref:System.ArgumentException> instead of <xref:System.ArgumentNullException> when `url` is `null`.","leadings":["","> "],"nodes":[{"content":"Earlier versions of the .NET Framework throw <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> instead of <ph id=\"ph2\">&lt;xref:System.ArgumentNullException&gt;</ph> when <ph id=\"ph3\">`url`</ph> is <ph id=\"ph4\">`null`</ph>.","pos":[14,159],"source":" Earlier versions of the .NET Framework throw <xref:System.ArgumentException> instead of <xref:System.ArgumentNullException> when `url` is `null`."}]}],"pos":[19915,20091],"yaml":true,"extradata":"MT"},{"content":"The URL for the document.","nodes":[{"pos":[0,25],"content":"The URL for the document.","nodes":[{"content":"The URL for the document.","pos":[0,25]}]}],"pos":[20982,21008],"yaml":true},{"content":"The GUID that identifies the document language. This can be <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"pos":[0,99],"content":"The GUID that identifies the document language. This can be <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"content":"The GUID that identifies the document language.","pos":[0,47]},{"content":"This can be <ph id=\"ph1\">&lt;xref href=\"System.Guid.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[48,99],"source":" This can be <xref href=\"System.Guid.Empty\"></xref>."}]}],"pos":[21070,21170],"yaml":true},{"content":"The GUID that identifies the document language vendor. This can be <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"pos":[0,106],"content":"The GUID that identifies the document language vendor. This can be <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"content":"The GUID that identifies the document language vendor.","pos":[0,54]},{"content":"This can be <ph id=\"ph1\">&lt;xref href=\"System.Guid.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[55,106],"source":" This can be <xref href=\"System.Guid.Empty\"></xref>."}]}],"pos":[21238,21345],"yaml":true},{"content":"The GUID that identifies the document type. This can be <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"pos":[0,95],"content":"The GUID that identifies the document type. This can be <xref href=\"System.Guid.Empty\"></xref>.","nodes":[{"content":"The GUID that identifies the document type.","pos":[0,43]},{"content":"This can be <ph id=\"ph1\">&lt;xref href=\"System.Guid.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[44,95],"source":" This can be <xref href=\"System.Guid.Empty\"></xref>."}]}],"pos":[21411,21507],"yaml":true},{"content":"The defined document.","nodes":[{"pos":[0,21],"content":"The defined document.","nodes":[{"content":"The defined document.","pos":[0,21]}]}],"pos":[21603,21625],"yaml":true},{"content":"<code>url</code> is `null`. This is a change from earlier versions of the .NET Framework.","nodes":[{"pos":[0,89],"content":"<code>url</code> is `null`. This is a change from earlier versions of the .NET Framework.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[0,27],"source":"<code>url</code> is `null`."},{"content":"This is a change from earlier versions of the .NET Framework.","pos":[28,89]}]}],"pos":[21806,21896],"yaml":true},{"content":"This method is called on a dynamic module that is not a debug module.","nodes":[{"pos":[0,69],"content":"This method is called on a dynamic module that is not a debug module.","nodes":[{"content":"This method is called on a dynamic module that is not a debug module.","pos":[0,69]}]}],"pos":[22006,22076],"yaml":true},{"content":"Defines an enumeration type that is a value type with a single non-static field called <code>value__</code> of the specified type.","nodes":[{"pos":[0,130],"content":"Defines an enumeration type that is a value type with a single non-static field called <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value__</ph><ept id=\"p1\">&lt;/code&gt;</ept> of the specified type.","source":"Defines an enumeration type that is a value type with a single non-static field called <code>value__</code> of the specified type."}],"pos":[23382,23513],"yaml":true},{"content":"The defined enum is a derived class of <xref:System.Enum>. The `value__` field has <xref:System.Reflection.FieldAttributes.Private> and <xref:System.Reflection.FieldAttributes.SpecialName> attributes set.  \n  \n For more information about the built-in integer types that can be specified as the underlying types of enumerations, see [Class Library Overview](~/docs/standard/class-library-overview.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type. In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,204],"content":"The defined enum is a derived class of <xref:System.Enum>. The `value__` field has <xref:System.Reflection.FieldAttributes.Private> and <xref:System.Reflection.FieldAttributes.SpecialName> attributes set.","nodes":[{"content":"The defined enum is a derived class of <ph id=\"ph1\">&lt;xref:System.Enum&gt;</ph>.","pos":[0,58],"source":"The defined enum is a derived class of <xref:System.Enum>."},{"content":"The <ph id=\"ph1\">`value__`</ph> field has <ph id=\"ph2\">&lt;xref:System.Reflection.FieldAttributes.Private&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Reflection.FieldAttributes.SpecialName&gt;</ph> attributes set.","pos":[59,204],"source":" The `value__` field has <xref:System.Reflection.FieldAttributes.Private> and <xref:System.Reflection.FieldAttributes.SpecialName> attributes set."}]},{"pos":[211,400],"content":"For more information about the built-in integer types that can be specified as the underlying types of enumerations, see <bpt id=\"p1\">[</bpt>Class Library Overview<ept id=\"p1\">](~/docs/standard/class-library-overview.md)</ept>.","source":"For more information about the built-in integer types that can be specified as the underlying types of enumerations, see [Class Library Overview](~/docs/standard/class-library-overview.md)."},{"pos":[408,832],"content":"[!NOTE]\n In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type. In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type.","leadings":["","> "],"nodes":[{"content":" In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type. In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type.","pos":[8,422],"nodes":[{"content":"In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder&gt;</ph> because <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.EnumBuilder&gt;</ph> emits enumerations whose elements are of type <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> instead of the enumeration type.","pos":[1,280],"source":" In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type."},{"content":"In the .NET Framework version 2.0, <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.EnumBuilder&gt;</ph> emits enumerations whose elements have the correct type.","pos":[281,414],"source":" In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type."}]}]},{"pos":[840,1369],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[23524,24904],"yaml":true,"extradata":"MT"},{"content":"The full path of the enumeration type. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,87],"content":"The full path of the enumeration type. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The full path of the enumeration type.","pos":[0,38]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[39,87],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[26248,26336],"yaml":true},{"content":"The type attributes for the enumeration. The attributes are any bits defined by <xref href=\"System.Reflection.TypeAttributes.VisibilityMask\"></xref>.","nodes":[{"pos":[0,149],"content":"The type attributes for the enumeration. The attributes are any bits defined by <xref href=\"System.Reflection.TypeAttributes.VisibilityMask\"></xref>.","nodes":[{"content":"The type attributes for the enumeration.","pos":[0,40]},{"content":"The attributes are any bits defined by <ph id=\"ph1\">&lt;xref href=\"System.Reflection.TypeAttributes.VisibilityMask\"&gt;&lt;/xref&gt;</ph>.","pos":[41,149],"source":" The attributes are any bits defined by <xref href=\"System.Reflection.TypeAttributes.VisibilityMask\"></xref>."}]}],"pos":[26421,26571],"yaml":true},{"content":"The underlying type for the enumeration. This must be a built-in integer type.","nodes":[{"pos":[0,78],"content":"The underlying type for the enumeration. This must be a built-in integer type.","nodes":[{"content":"The underlying type for the enumeration. This must be a built-in integer type.","pos":[0,78],"nodes":[{"content":"The underlying type for the enumeration.","pos":[0,40]},{"content":"This must be a built-in integer type.","pos":[41,78]}]}]}],"pos":[26639,26718],"yaml":true},{"content":"The defined enumeration.","nodes":[{"pos":[0,24],"content":"The defined enumeration.","nodes":[{"content":"The defined enumeration.","pos":[0,24]}]}],"pos":[26796,26821],"yaml":true},{"content":"Attributes other than visibility attributes are provided.  \n  \n -or-  \n  \n An enumeration with the given name exists in the parent assembly of this module.  \n  \n -or-  \n  \n The visibility attributes do not match the scope of the enumeration. For example, <xref href=\"System.Reflection.TypeAttributes.NestedPublic\"></xref> is specified for <code>visibility</code>, but the enumeration is not a nested type.","nodes":[{"pos":[0,57],"content":"Attributes other than visibility attributes are provided.","nodes":[{"content":"Attributes other than visibility attributes are provided.","pos":[0,57]}]},{"pos":[64,68],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[75,155],"content":"An enumeration with the given name exists in the parent assembly of this module.","nodes":[{"content":"An enumeration with the given name exists in the parent assembly of this module.","pos":[0,80]}]},{"pos":[162,166],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[173,405],"content":"The visibility attributes do not match the scope of the enumeration. For example, <xref href=\"System.Reflection.TypeAttributes.NestedPublic\"></xref> is specified for <code>visibility</code>, but the enumeration is not a nested type.","nodes":[{"content":"The visibility attributes do not match the scope of the enumeration.","pos":[0,68]},{"content":"For example, <ph id=\"ph1\">&lt;xref href=\"System.Reflection.TypeAttributes.NestedPublic\"&gt;&lt;/xref&gt;</ph> is specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">visibility</ph><ept id=\"p1\">&lt;/code&gt;</ept>, but the enumeration is not a nested type.","pos":[69,232],"source":" For example, <xref href=\"System.Reflection.TypeAttributes.NestedPublic\"></xref> is specified for <code>visibility</code>, but the enumeration is not a nested type."}]}],"pos":[26990,27408],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[27510,27539],"yaml":true},{"content":"Defines a global method with the specified name, attributes, return type, and parameter types.","nodes":[{"pos":[0,94],"content":"Defines a global method with the specified name, attributes, return type, and parameter types.","nodes":[{"content":"Defines a global method with the specified name, attributes, return type, and parameter types.","pos":[0,94]}]}],"pos":[29107,29202],"yaml":true},{"content":"The global method that this method defines is not usable until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,141],"content":"The global method that this method defines is not usable until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.","nodes":[{"content":"The global method that this method defines is not usable until you call <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A&gt;</ph>.","pos":[0,141],"source":"The global method that this method defines is not usable until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>."}]},{"pos":[149,678],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[29213,29897],"yaml":true,"extradata":"MT"},{"content":"The name of the method. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,72],"content":"The name of the method. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The name of the method.","pos":[0,23]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[24,72],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[31028,31101],"yaml":true},{"content":"The attributes of the method. <code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.","nodes":[{"pos":[0,130],"content":"The attributes of the method. <code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.","nodes":[{"content":"The attributes of the method.","pos":[0,29]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">attributes</ph><ept id=\"p1\">&lt;/code&gt;</ept> must include <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MethodAttributes.Static\"&gt;&lt;/xref&gt;</ph>.","pos":[30,130],"source":"<code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>."}]}],"pos":[31188,31319],"yaml":true},{"content":"The return type of the method.","nodes":[{"pos":[0,30],"content":"The return type of the method.","nodes":[{"content":"The return type of the method.","pos":[0,30]}]}],"pos":[31383,31414],"yaml":true},{"content":"The types of the method's parameters.","nodes":[{"pos":[0,37],"content":"The types of the method's parameters.","nodes":[{"content":"The types of the method's parameters.","pos":[0,37]}]}],"pos":[31484,31522],"yaml":true},{"content":"The defined global method.","nodes":[{"pos":[0,26],"content":"The defined global method.","nodes":[{"content":"The defined global method.","pos":[0,26]}]}],"pos":[31602,31629],"yaml":true},{"content":"The method is not static. That is, <code>attributes</code> does not include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.  \n  \n -or-  \n  \n The length of <code>name</code> is zero  \n  \n -or-  \n  \n An element in the <xref href=\"System.Type\"></xref> array is `null`.","nodes":[{"pos":[0,139],"content":"The method is not static. That is, <code>attributes</code> does not include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.","nodes":[{"content":"The method is not static.","pos":[0,25]},{"content":"That is, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">attributes</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not include <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MethodAttributes.Static\"&gt;&lt;/xref&gt;</ph>.","pos":[26,139],"source":" That is, <code>attributes</code> does not include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>."}]},{"pos":[146,150],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[157,196],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero","source":"The length of <code>name</code> is zero"},{"pos":[203,207],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[214,281],"content":"An element in the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> array is <ph id=\"ph2\">`null`</ph>.","source":"An element in the <xref href=\"System.Type\"></xref> array is `null`."}],"pos":[31806,32102],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[32204,32233],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"&gt;&lt;/xref&gt;</ph> has been previously called.","source":"<xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called."}],"pos":[32343,32451],"yaml":true},{"content":"Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.","nodes":[{"pos":[0,114],"content":"Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.","nodes":[{"content":"Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.","pos":[0,114]}]}],"pos":[34190,34305],"yaml":true},{"content":"You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,142],"content":"You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.","nodes":[{"content":"You cannot use the global method that this method defines until you call <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A&gt;</ph>.","pos":[0,142],"source":"You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>."}]},{"pos":[150,679],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[34316,35001],"yaml":true,"extradata":"MT"},{"content":"The name of the method. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,72],"content":"The name of the method. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The name of the method.","pos":[0,23]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[24,72],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[36192,36265],"yaml":true},{"content":"The attributes of the method. <code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.","nodes":[{"pos":[0,130],"content":"The attributes of the method. <code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.","nodes":[{"content":"The attributes of the method.","pos":[0,29]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">attributes</ph><ept id=\"p1\">&lt;/code&gt;</ept> must include <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MethodAttributes.Static\"&gt;&lt;/xref&gt;</ph>.","pos":[30,130],"source":"<code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>."}]}],"pos":[36352,36483],"yaml":true},{"content":"The calling convention for the method.","nodes":[{"pos":[0,38],"content":"The calling convention for the method.","nodes":[{"content":"The calling convention for the method.","pos":[0,38]}]}],"pos":[36579,36618],"yaml":true},{"content":"The return type of the method.","nodes":[{"pos":[0,30],"content":"The return type of the method.","nodes":[{"content":"The return type of the method.","pos":[0,30]}]}],"pos":[36682,36713],"yaml":true},{"content":"The types of the method's parameters.","nodes":[{"pos":[0,37],"content":"The types of the method's parameters.","nodes":[{"content":"The types of the method's parameters.","pos":[0,37]}]}],"pos":[36783,36821],"yaml":true},{"content":"The defined global method.","nodes":[{"pos":[0,26],"content":"The defined global method.","nodes":[{"content":"The defined global method.","pos":[0,26]}]}],"pos":[36901,36928],"yaml":true},{"content":"The method is not static. That is, <code>attributes</code> does not include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.  \n  \n -or-  \n  \n An element in the <xref href=\"System.Type\"></xref> array is `null`.","nodes":[{"pos":[0,139],"content":"The method is not static. That is, <code>attributes</code> does not include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.","nodes":[{"content":"The method is not static.","pos":[0,25]},{"content":"That is, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">attributes</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not include <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MethodAttributes.Static\"&gt;&lt;/xref&gt;</ph>.","pos":[26,139],"source":" That is, <code>attributes</code> does not include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>."}]},{"pos":[146,150],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[157,224],"content":"An element in the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> array is <ph id=\"ph2\">`null`</ph>.","source":"An element in the <xref href=\"System.Type\"></xref> array is `null`."}],"pos":[37105,37340],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[37442,37471],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"&gt;&lt;/xref&gt;</ph> has been previously called.","source":"<xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called."}],"pos":[37581,37689],"yaml":true},{"content":"Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.","nodes":[{"pos":[0,194],"content":"Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.","nodes":[{"content":"Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.","pos":[0,194]}]}],"pos":[39716,39911],"yaml":true},{"content":"This overload is provided for designers of managed compilers.  \n  \n You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,61],"content":"This overload is provided for designers of managed compilers.","nodes":[{"content":"This overload is provided for designers of managed compilers.","pos":[0,61]}]},{"pos":[68,210],"content":"You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.","nodes":[{"content":"You cannot use the global method that this method defines until you call <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A&gt;</ph>.","pos":[0,142],"source":"You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>."}]},{"pos":[218,747],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[39922,40677],"yaml":true,"extradata":"MT"},{"content":"The name of the method. <code>name</code> cannot contain embedded null characters.","nodes":[{"pos":[0,82],"content":"The name of the method. <code>name</code> cannot contain embedded null characters.","nodes":[{"content":"The name of the method.","pos":[0,23]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded null characters.","pos":[24,82],"source":"<code>name</code> cannot contain embedded null characters."}]}],"pos":[41175,41258],"yaml":true},{"content":"The attributes of the method. <code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.","nodes":[{"pos":[0,130],"content":"The attributes of the method. <code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.","nodes":[{"content":"The attributes of the method.","pos":[0,29]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">attributes</ph><ept id=\"p1\">&lt;/code&gt;</ept> must include <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MethodAttributes.Static\"&gt;&lt;/xref&gt;</ph>.","pos":[30,130],"source":"<code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>."}]}],"pos":[41345,41476],"yaml":true},{"content":"The calling convention for the method.","nodes":[{"pos":[0,38],"content":"The calling convention for the method.","nodes":[{"content":"The calling convention for the method.","pos":[0,38]}]}],"pos":[41572,41611],"yaml":true},{"content":"The return type of the method.","nodes":[{"pos":[0,30],"content":"The return type of the method.","nodes":[{"content":"The return type of the method.","pos":[0,30]}]}],"pos":[41675,41706],"yaml":true},{"content":"An array of types representing the required custom modifiers for the return type, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsBoxed\"></xref>. If the return type has no required custom modifiers, specify `null`.","nodes":[{"pos":[0,284],"content":"An array of types representing the required custom modifiers for the return type, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsBoxed\"></xref>. If the return type has no required custom modifiers, specify `null`.","nodes":[{"content":"An array of types representing the required custom modifiers for the return type, such as <ph id=\"ph1\">&lt;xref href=\"System.Runtime.CompilerServices.IsConst\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Runtime.CompilerServices.IsBoxed\"&gt;&lt;/xref&gt;</ph>.","pos":[0,215],"source":"An array of types representing the required custom modifiers for the return type, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsBoxed\"></xref>."},{"content":"If the return type has no required custom modifiers, specify <ph id=\"ph1\">`null`</ph>.","pos":[216,284],"source":" If the return type has no required custom modifiers, specify `null`."}]}],"pos":[41795,42080],"yaml":true},{"content":"An array of types representing the optional custom modifiers for the return type, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsBoxed\"></xref>. If the return type has no optional custom modifiers, specify `null`.","nodes":[{"pos":[0,284],"content":"An array of types representing the optional custom modifiers for the return type, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsBoxed\"></xref>. If the return type has no optional custom modifiers, specify `null`.","nodes":[{"content":"An array of types representing the optional custom modifiers for the return type, such as <ph id=\"ph1\">&lt;xref href=\"System.Runtime.CompilerServices.IsConst\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Runtime.CompilerServices.IsBoxed\"&gt;&lt;/xref&gt;</ph>.","pos":[0,215],"source":"An array of types representing the optional custom modifiers for the return type, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsBoxed\"></xref>."},{"content":"If the return type has no optional custom modifiers, specify <ph id=\"ph1\">`null`</ph>.","pos":[216,284],"source":" If the return type has no optional custom modifiers, specify `null`."}]}],"pos":[42169,42454],"yaml":true},{"content":"The types of the method's parameters.","nodes":[{"pos":[0,37],"content":"The types of the method's parameters.","nodes":[{"content":"The types of the method's parameters.","pos":[0,37]}]}],"pos":[42524,42562],"yaml":true},{"content":"An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter of the global method. If a particular argument has no required custom modifiers, specify `null` instead of an array of types. If the global method has no arguments, or if none of the arguments have required custom modifiers, specify `null` instead of an array of arrays.","nodes":[{"pos":[0,392],"content":"An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter of the global method. If a particular argument has no required custom modifiers, specify `null` instead of an array of types. If the global method has no arguments, or if none of the arguments have required custom modifiers, specify `null` instead of an array of arrays.","nodes":[{"content":"An array of arrays of types.","pos":[0,28]},{"content":"Each array of types represents the required custom modifiers for the corresponding parameter of the global method.","pos":[29,143]},{"content":"If a particular argument has no required custom modifiers, specify <ph id=\"ph1\">`null`</ph> instead of an array of types.","pos":[144,247],"source":" If a particular argument has no required custom modifiers, specify `null` instead of an array of types."},{"content":"If the global method has no arguments, or if none of the arguments have required custom modifiers, specify <ph id=\"ph1\">`null`</ph> instead of an array of arrays.","pos":[248,392],"source":" If the global method has no arguments, or if none of the arguments have required custom modifiers, specify `null` instead of an array of arrays."}]}],"pos":[42656,43049],"yaml":true},{"content":"An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter. If a particular argument has no optional custom modifiers, specify `null` instead of an array of types. If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify `null` instead of an array of arrays.","nodes":[{"pos":[0,371],"content":"An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter. If a particular argument has no optional custom modifiers, specify `null` instead of an array of types. If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify `null` instead of an array of arrays.","nodes":[{"content":"An array of arrays of types.","pos":[0,28]},{"content":"Each array of types represents the optional custom modifiers for the corresponding parameter.","pos":[29,122]},{"content":"If a particular argument has no optional custom modifiers, specify <ph id=\"ph1\">`null`</ph> instead of an array of types.","pos":[123,226],"source":" If a particular argument has no optional custom modifiers, specify `null` instead of an array of types."},{"content":"If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify <ph id=\"ph1\">`null`</ph> instead of an array of arrays.","pos":[227,371],"source":" If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify `null` instead of an array of arrays."}]}],"pos":[43143,43515],"yaml":true},{"content":"The defined global method.","nodes":[{"pos":[0,26],"content":"The defined global method.","nodes":[{"content":"The defined global method.","pos":[0,26]}]}],"pos":[43595,43622],"yaml":true},{"content":"The method is not static. That is, <code>attributes</code> does not include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.  \n  \n -or-  \n  \n An element in the <xref href=\"System.Type\"></xref> array is `null`.","nodes":[{"pos":[0,139],"content":"The method is not static. That is, <code>attributes</code> does not include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.","nodes":[{"content":"The method is not static.","pos":[0,25]},{"content":"That is, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">attributes</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not include <ph id=\"ph2\">&lt;xref href=\"System.Reflection.MethodAttributes.Static\"&gt;&lt;/xref&gt;</ph>.","pos":[26,139],"source":" That is, <code>attributes</code> does not include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>."}]},{"pos":[146,150],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[157,224],"content":"An element in the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> array is <ph id=\"ph2\">`null`</ph>.","source":"An element in the <xref href=\"System.Type\"></xref> array is `null`."}],"pos":[43799,44034],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[44136,44165],"yaml":true},{"content":"The <xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> method has been previously called.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"&gt;&lt;/xref&gt;</ph> method has been previously called.","source":"The <xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> method has been previously called."}],"pos":[44275,44394],"yaml":true},{"content":"Defines an initialized data field in the .sdata section of the portable executable (PE) file.","nodes":[{"pos":[0,93],"content":"Defines an initialized data field in the .sdata section of the portable executable (PE) file.","nodes":[{"content":"Defines an initialized data field in the .sdata section of the portable executable (PE) file.","pos":[0,93]}]}],"pos":[45920,46014],"yaml":true},{"content":"<xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.  \n  \n The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.FieldAttributes.Static&gt;</ph> is automatically included in <ph id=\"ph2\">`attributes`</ph>.","source":"<xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`."},{"pos":[97,240],"content":"The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.","nodes":[{"content":"The data defined by this method is not created until the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A&gt;</ph> method is called.","pos":[0,143],"source":"The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called."}]},{"pos":[248,777],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[46025,46810],"yaml":true,"extradata":"MT"},{"content":"The name used to refer to the data. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,84],"content":"The name used to refer to the data. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The name used to refer to the data.","pos":[0,35]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[36,84],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[47810,47895],"yaml":true},{"content":"The binary large object (BLOB) of data.","nodes":[{"pos":[0,39],"content":"The binary large object (BLOB) of data.","nodes":[{"content":"The binary large object (BLOB) of data.","pos":[0,39]}]}],"pos":[47955,47995],"yaml":true},{"content":"The attributes for the field. The default is `Static`.","nodes":[{"pos":[0,54],"content":"The attributes for the field. The default is `Static`.","nodes":[{"content":"The attributes for the field.","pos":[0,29]},{"content":"The default is <ph id=\"ph1\">`Static`</ph>.","pos":[30,54],"source":" The default is `Static`."}]}],"pos":[48081,48136],"yaml":true},{"content":"A field to reference the data.","nodes":[{"pos":[0,30],"content":"A field to reference the data.","nodes":[{"content":"A field to reference the data.","pos":[0,30]}]}],"pos":[48215,48246],"yaml":true},{"content":"The length of <code>name</code> is zero.  \n  \n -or-  \n  \n The size of <code>data</code> is less than or equal to zero or greater than or equal to 0x3f0000.","nodes":[{"pos":[0,40],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> is zero."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,155],"content":"The size of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">data</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than or equal to zero or greater than or equal to 0x3f0000.","source":"The size of <code>data</code> is less than or equal to zero or greater than or equal to 0x3f0000."}],"pos":[48426,48588],"yaml":true},{"content":"<code>name</code> or <code>data</code> is `null`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>data</code> is `null`."}],"pos":[48690,48740],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"&gt;&lt;/xref&gt;</ph> has been previously called.","source":"<xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called."}],"pos":[48850,48958],"yaml":true},{"content":"Defines a binary large object (BLOB) that represents a manifest resource to be embedded in the dynamic assembly.","nodes":[{"pos":[0,112],"content":"Defines a binary large object (BLOB) that represents a manifest resource to be embedded in the dynamic assembly.","nodes":[{"content":"Defines a binary large object (BLOB) that represents a manifest resource to be embedded in the dynamic assembly.","pos":[0,112]}]}],"pos":[50490,50603],"yaml":true},{"content":"Resources that are recorded in the assembly manifest can be managed resources or manifest resource BLOBs, and each of these can be included in the assembly either by linking or by embedding. All four scenarios are supported for dynamic assemblies.  \n  \n-   This method allows you to embed a manifest resource BLOB into a dynamic assembly.  \n  \n-   To embed a managed resource into the manifest module of a dynamic assembly or into a satellite module, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=fullName> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName> method to add the resource.  \n  \n-   To link a managed resource into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=fullName> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName> method to add the linked resource.  \n  \n-   To link a manifest resource BLOB into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=fullName> method to add the linked resource.  \n  \n In addition, a single Win32 resource can be attached to an assembly by using the <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method or the <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method. This resource does not appear in the assembly manifest.","nodes":[{"pos":[0,247],"content":"Resources that are recorded in the assembly manifest can be managed resources or manifest resource BLOBs, and each of these can be included in the assembly either by linking or by embedding. All four scenarios are supported for dynamic assemblies.","nodes":[{"content":"Resources that are recorded in the assembly manifest can be managed resources or manifest resource BLOBs, and each of these can be included in the assembly either by linking or by embedding. All four scenarios are supported for dynamic assemblies.","pos":[0,247],"nodes":[{"content":"Resources that are recorded in the assembly manifest can be managed resources or manifest resource BLOBs, and each of these can be included in the assembly either by linking or by embedding.","pos":[0,190]},{"content":"All four scenarios are supported for dynamic assemblies.","pos":[191,247]}]}]},{"pos":[257,338],"content":"This method allows you to embed a manifest resource BLOB into a dynamic assembly.","nodes":[{"content":"This method allows you to embed a manifest resource BLOB into a dynamic assembly.","pos":[0,81]}]},{"pos":[348,697],"content":"To embed a managed resource into the manifest module of a dynamic assembly or into a satellite module, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=fullName> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName> method to add the resource.","nodes":[{"content":"To embed a managed resource into the manifest module of a dynamic assembly or into a satellite module, use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=fullName&gt;</ph> method to get a resource writer, and use the <ph id=\"ph2\">&lt;xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName&gt;</ph> method to add the resource.","pos":[0,349],"source":"To embed a managed resource into the manifest module of a dynamic assembly or into a satellite module, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=fullName> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName> method to add the resource."}]},{"pos":[707,1014],"content":"To link a managed resource into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=fullName> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName> method to add the linked resource.","nodes":[{"content":"To link a managed resource into a dynamic assembly, use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=fullName&gt;</ph> method to get a resource writer, and use the <ph id=\"ph2\">&lt;xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName&gt;</ph> method to add the linked resource.","pos":[0,307],"source":"To link a managed resource into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=fullName> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName> method to add the linked resource."}]},{"pos":[1024,1214],"content":"To link a manifest resource BLOB into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=fullName> method to add the linked resource.","nodes":[{"content":"To link a manifest resource BLOB into a dynamic assembly, use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=fullName&gt;</ph> method to add the linked resource.","pos":[0,190],"source":"To link a manifest resource BLOB into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=fullName> method to add the linked resource."}]},{"pos":[1221,1573],"content":"In addition, a single Win32 resource can be attached to an assembly by using the <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method or the <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method. This resource does not appear in the assembly manifest.","nodes":[{"content":"In addition, a single Win32 resource can be attached to an assembly by using the <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method or the <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method. This resource does not appear in the assembly manifest.","pos":[0,352],"nodes":[{"content":"In addition, a single Win32 resource can be attached to an assembly by using the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,296],"source":"In addition, a single Win32 resource can be attached to an assembly by using the <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method or the <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method."},{"content":"This resource does not appear in the assembly manifest.","pos":[297,352]}]}]}],"pos":[50614,52200],"yaml":true,"extradata":"MT"},{"content":"The case-sensitive name for the resource.","nodes":[{"pos":[0,41],"content":"The case-sensitive name for the resource.","nodes":[{"content":"The case-sensitive name for the resource.","pos":[0,41]}]}],"pos":[53936,53978],"yaml":true},{"content":"A stream that contains the bytes for the resource.","nodes":[{"pos":[0,50],"content":"A stream that contains the bytes for the resource.","nodes":[{"content":"A stream that contains the bytes for the resource.","pos":[0,50]}]}],"pos":[54043,54094],"yaml":true},{"content":"An enumeration value that specifies whether the resource is public or private.","nodes":[{"pos":[0,78],"content":"An enumeration value that specifies whether the resource is public or private.","nodes":[{"content":"An enumeration value that specifies whether the resource is public or private.","pos":[0,78]}]}],"pos":[54182,54261],"yaml":true},{"content":"<code>name</code> is `null`.  \n  \n -or-  \n  \n <code>stream</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,76],"content":"<ph id=\"ph1\">&lt;code&gt;stream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>stream</code> is `null`."}],"pos":[54450,54533],"yaml":true},{"content":"<code>name</code> is a zero-length string.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is a zero-length string.","source":"<code>name</code> is a zero-length string."}],"pos":[54627,54670],"yaml":true},{"content":"The dynamic assembly that contains the current module is transient; that is, no file name was specified when <xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)\"></xref> was called.","nodes":[{"pos":[0,229],"content":"The dynamic assembly that contains the current module is transient; that is, no file name was specified when <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)\"&gt;&lt;/xref&gt;</ph> was called.","source":"The dynamic assembly that contains the current module is transient; that is, no file name was specified when <xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)\"></xref> was called."}],"pos":[54780,55010],"yaml":true},{"content":"Defines a `PInvoke` method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the `PInvoke` flags.","nodes":[{"pos":[0,270],"content":"Defines a <ph id=\"ph1\">`PInvoke`</ph> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <ph id=\"ph2\">`PInvoke`</ph> flags.","source":"Defines a `PInvoke` method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the `PInvoke` flags."}],"pos":[57006,57277],"yaml":true},{"content":"Some DLL import attributes (see the description of System.Runtime.InteropServices.DllImportAttribute) cannot be specified as arguments to this method. Such attributes should be set by emitting a custom attribute for the method. For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,318],"content":"Some DLL import attributes (see the description of System.Runtime.InteropServices.DllImportAttribute) cannot be specified as arguments to this method. Such attributes should be set by emitting a custom attribute for the method. For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.","nodes":[{"content":"Some DLL import attributes (see the description of System.Runtime.InteropServices.DllImportAttribute) cannot be specified as arguments to this method.","pos":[0,150]},{"content":"Such attributes should be set by emitting a custom attribute for the method.","pos":[151,227]},{"content":"For example, the DLL import attribute <ph id=\"ph1\">`PreserveSig`</ph> is set by emitting a custom attribute.","pos":[228,318],"source":" For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute."}]},{"pos":[326,855],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[57288,58149],"yaml":true,"extradata":"MT"},{"content":"The name of the `PInvoke` method. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,82],"content":"The name of the `PInvoke` method. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The name of the <ph id=\"ph1\">`PInvoke`</ph> method.","pos":[0,33],"source":"The name of the `PInvoke` method."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[34,82],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[59945,60028],"yaml":true},{"content":"The name of the DLL in which the `PInvoke` method is defined.","nodes":[{"pos":[0,61],"content":"The name of the DLL in which the <ph id=\"ph1\">`PInvoke`</ph> method is defined.","source":"The name of the DLL in which the `PInvoke` method is defined."}],"pos":[60091,60153],"yaml":true},{"content":"The attributes of the method.","nodes":[{"pos":[0,29],"content":"The attributes of the method.","nodes":[{"content":"The attributes of the method.","pos":[0,29]}]}],"pos":[60240,60270],"yaml":true},{"content":"The method's calling convention.","nodes":[{"pos":[0,32],"content":"The method's calling convention.","nodes":[{"content":"The method's calling convention.","pos":[0,32]}]}],"pos":[60366,60399],"yaml":true},{"content":"The method's return type.","nodes":[{"pos":[0,25],"content":"The method's return type.","nodes":[{"content":"The method's return type.","pos":[0,25]}]}],"pos":[60463,60489],"yaml":true},{"content":"The types of the method's parameters.","nodes":[{"pos":[0,37],"content":"The types of the method's parameters.","nodes":[{"content":"The types of the method's parameters.","pos":[0,37]}]}],"pos":[60559,60597],"yaml":true},{"content":"The native calling convention.","nodes":[{"pos":[0,30],"content":"The native calling convention.","nodes":[{"content":"The native calling convention.","pos":[0,30]}]}],"pos":[60702,60733],"yaml":true},{"content":"The method's native character set.","nodes":[{"pos":[0,34],"content":"The method's native character set.","nodes":[{"content":"The method's native character set.","pos":[0,34]}]}],"pos":[60827,60862],"yaml":true},{"content":"The defined `PInvoke` method.","nodes":[{"pos":[0,29],"content":"The defined <ph id=\"ph1\">`PInvoke`</ph> method.","source":"The defined `PInvoke` method."}],"pos":[60942,60972],"yaml":true},{"content":"The method is not static or if the containing type is an interface.  \n  \n -or-  \n  \n The method is abstract.  \n  \n -or-  \n  \n The method was previously defined.","nodes":[{"pos":[0,67],"content":"The method is not static or if the containing type is an interface.","nodes":[{"content":"The method is not static or if the containing type is an interface.","pos":[0,67]}]},{"pos":[74,78],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[85,108],"content":"The method is abstract.","nodes":[{"content":"The method is abstract.","pos":[0,23]}]},{"pos":[115,119],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[126,160],"content":"The method was previously defined.","nodes":[{"content":"The method was previously defined.","pos":[0,34]}]}],"pos":[61150,61321],"yaml":true},{"content":"<code>name</code> or <code>dllName</code> is `null`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;dllName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>dllName</code> is `null`."}],"pos":[61423,61476],"yaml":true},{"content":"The containing type has been previously created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>","nodes":[{"pos":[0,120],"content":"The containing type has been previously created using <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph>","source":"The containing type has been previously created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>"}],"pos":[61586,61707],"yaml":true},{"content":"Defines a `PInvoke` method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the `PInvoke` flags.","nodes":[{"pos":[0,270],"content":"Defines a <ph id=\"ph1\">`PInvoke`</ph> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <ph id=\"ph2\">`PInvoke`</ph> flags.","source":"Defines a `PInvoke` method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the `PInvoke` flags."}],"pos":[63769,64040],"yaml":true},{"content":"Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method. Such attributes should be set by emitting a custom attribute for the method. For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,325],"content":"Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method. Such attributes should be set by emitting a custom attribute for the method. For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.","nodes":[{"content":"Some DLL import attributes (see the description of <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph>) cannot be specified as arguments to this method.","pos":[0,157],"source":"Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method."},{"content":"Such attributes should be set by emitting a custom attribute for the method.","pos":[158,234]},{"content":"For example, the DLL import attribute <ph id=\"ph1\">`PreserveSig`</ph> is set by emitting a custom attribute.","pos":[235,325],"source":" For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute."}]},{"pos":[333,862],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[64051,64919],"yaml":true,"extradata":"MT"},{"content":"The name of the `PInvoke` method. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,82],"content":"The name of the `PInvoke` method. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The name of the <ph id=\"ph1\">`PInvoke`</ph> method.","pos":[0,33],"source":"The name of the `PInvoke` method."},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[34,82],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[66893,66976],"yaml":true},{"content":"The name of the DLL in which the `PInvoke` method is defined.","nodes":[{"pos":[0,61],"content":"The name of the DLL in which the <ph id=\"ph1\">`PInvoke`</ph> method is defined.","source":"The name of the DLL in which the `PInvoke` method is defined."}],"pos":[67039,67101],"yaml":true},{"content":"The name of the entry point in the DLL.","nodes":[{"pos":[0,39],"content":"The name of the entry point in the DLL.","nodes":[{"content":"The name of the entry point in the DLL.","pos":[0,39]}]}],"pos":[67166,67206],"yaml":true},{"content":"The attributes of the method.","nodes":[{"pos":[0,29],"content":"The attributes of the method.","nodes":[{"content":"The attributes of the method.","pos":[0,29]}]}],"pos":[67293,67323],"yaml":true},{"content":"The method's calling convention.","nodes":[{"pos":[0,32],"content":"The method's calling convention.","nodes":[{"content":"The method's calling convention.","pos":[0,32]}]}],"pos":[67419,67452],"yaml":true},{"content":"The method's return type.","nodes":[{"pos":[0,25],"content":"The method's return type.","nodes":[{"content":"The method's return type.","pos":[0,25]}]}],"pos":[67516,67542],"yaml":true},{"content":"The types of the method's parameters.","nodes":[{"pos":[0,37],"content":"The types of the method's parameters.","nodes":[{"content":"The types of the method's parameters.","pos":[0,37]}]}],"pos":[67612,67650],"yaml":true},{"content":"The native calling convention.","nodes":[{"pos":[0,30],"content":"The native calling convention.","nodes":[{"content":"The native calling convention.","pos":[0,30]}]}],"pos":[67755,67786],"yaml":true},{"content":"The method's native character set.","nodes":[{"pos":[0,34],"content":"The method's native character set.","nodes":[{"content":"The method's native character set.","pos":[0,34]}]}],"pos":[67880,67915],"yaml":true},{"content":"The defined `PInvoke` method.","nodes":[{"pos":[0,29],"content":"The defined <ph id=\"ph1\">`PInvoke`</ph> method.","source":"The defined `PInvoke` method."}],"pos":[67995,68025],"yaml":true},{"content":"The method is not static or if the containing type is an interface or if the method is abstract of if the method was previously defined.","nodes":[{"pos":[0,136],"content":"The method is not static or if the containing type is an interface or if the method is abstract of if the method was previously defined.","nodes":[{"content":"The method is not static or if the containing type is an interface or if the method is abstract of if the method was previously defined.","pos":[0,136]}]}],"pos":[68203,68340],"yaml":true},{"content":"<code>name</code> or <code>dllName</code> is `null`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;dllName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>name</code> or <code>dllName</code> is `null`."}],"pos":[68442,68495],"yaml":true},{"content":"The containing type has been previously created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>","nodes":[{"pos":[0,120],"content":"The containing type has been previously created using <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"&gt;&lt;/xref&gt;</ph>","source":"The containing type has been previously created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>"}],"pos":[68605,68726],"yaml":true},{"content":"Defines the named managed embedded resource to be stored in this module.","nodes":[{"pos":[0,72],"content":"Defines the named managed embedded resource to be stored in this module.","nodes":[{"content":"Defines the named managed embedded resource to be stored in this module.","pos":[0,72]}]}],"pos":[69894,69967],"yaml":true},{"content":"The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.  \n  \n Use this method to embed a managed resource. To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method. For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,197],"content":"The caller must not call the <ph id=\"ph1\">`ResourceWriter.Generate()`</ph> and <ph id=\"ph2\">`ResourceWriter.Close()`</ph> methods, because these methods are called by <ph id=\"ph3\">`ModuleBuilder.Save`</ph> when the dynamic assembly is written to disk.","source":"The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk."},{"pos":[204,541],"content":"Use this method to embed a managed resource. To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method. For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.","nodes":[{"content":"Use this method to embed a managed resource. To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method. For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.","pos":[0,337],"nodes":[{"content":"Use this method to embed a managed resource.","pos":[0,44]},{"content":"To embed a manifest resource blob, use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A&gt;</ph> method.","pos":[45,165],"source":" To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method."},{"content":"For a summary of embedding and linking managed resources and manifest resource blobs, see the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A&gt;</ph> method.","pos":[166,337],"source":" For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method."}]}]},{"pos":[549,1078],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[69978,71064],"yaml":true,"extradata":"MT"},{"content":"The name of the resource. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,74],"content":"The name of the resource. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The name of the resource.","pos":[0,25]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[26,74],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[71906,71981],"yaml":true},{"content":"The description of the resource.","nodes":[{"pos":[0,32],"content":"The description of the resource.","nodes":[{"content":"The description of the resource.","pos":[0,32]}]}],"pos":[72048,72081],"yaml":true},{"content":"A resource writer for the defined resource.","nodes":[{"pos":[0,43],"content":"A resource writer for the defined resource.","nodes":[{"content":"A resource writer for the defined resource.","pos":[0,43]}]}],"pos":[72157,72201],"yaml":true},{"content":"Length of <code>name</code> is zero.","nodes":[{"pos":[0,36],"content":"Length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"Length of <code>name</code> is zero."}],"pos":[72374,72411],"yaml":true},{"content":"<code>name</code> is null.","nodes":[{"pos":[0,26],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is null.","source":"<code>name</code> is null."}],"pos":[72513,72540],"yaml":true},{"content":"This module is transient.  \n  \n -or-  \n  \n The containing assembly is not persistable.","nodes":[{"pos":[0,25],"content":"This module is transient.","nodes":[{"content":"This module is transient.","pos":[0,25]}]},{"pos":[32,36],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[43,86],"content":"The containing assembly is not persistable.","nodes":[{"content":"The containing assembly is not persistable.","pos":[0,43]}]}],"pos":[72650,72743],"yaml":true},{"content":"Defines the named managed embedded resource with the given attributes that is to be stored in this module.","nodes":[{"pos":[0,106],"content":"Defines the named managed embedded resource with the given attributes that is to be stored in this module.","nodes":[{"content":"Defines the named managed embedded resource with the given attributes that is to be stored in this module.","pos":[0,106]}]}],"pos":[74082,74189],"yaml":true},{"content":"The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.  \n  \n Use this method to embed a managed resource. To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method. For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,197],"content":"The caller must not call the <ph id=\"ph1\">`ResourceWriter.Generate()`</ph> and <ph id=\"ph2\">`ResourceWriter.Close()`</ph> methods, because these methods are called by <ph id=\"ph3\">`ModuleBuilder.Save`</ph> when the dynamic assembly is written to disk.","source":"The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk."},{"pos":[204,541],"content":"Use this method to embed a managed resource. To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method. For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.","nodes":[{"content":"Use this method to embed a managed resource. To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method. For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.","pos":[0,337],"nodes":[{"content":"Use this method to embed a managed resource.","pos":[0,44]},{"content":"To embed a manifest resource blob, use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A&gt;</ph> method.","pos":[45,165],"source":" To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method."},{"content":"For a summary of embedding and linking managed resources and manifest resource blobs, see the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A&gt;</ph> method.","pos":[166,337],"source":" For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method."}]}]},{"pos":[549,1078],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[74200,75286],"yaml":true,"extradata":"MT"},{"content":"The name of the resource. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,74],"content":"The name of the resource. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The name of the resource.","pos":[0,25]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[26,74],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[76174,76249],"yaml":true},{"content":"The description of the resource.","nodes":[{"pos":[0,32],"content":"The description of the resource.","nodes":[{"content":"The description of the resource.","pos":[0,32]}]}],"pos":[76316,76349],"yaml":true},{"content":"The resource attributes.","nodes":[{"pos":[0,24],"content":"The resource attributes.","nodes":[{"content":"The resource attributes.","pos":[0,24]}]}],"pos":[76437,76462],"yaml":true},{"content":"A resource writer for the defined resource.","nodes":[{"pos":[0,43],"content":"A resource writer for the defined resource.","nodes":[{"content":"A resource writer for the defined resource.","pos":[0,43]}]}],"pos":[76538,76582],"yaml":true},{"content":"Length of <code>name</code> is zero.","nodes":[{"pos":[0,36],"content":"Length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"Length of <code>name</code> is zero."}],"pos":[76755,76792],"yaml":true},{"content":"<code>name</code> is null.","nodes":[{"pos":[0,26],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is null.","source":"<code>name</code> is null."}],"pos":[76894,76921],"yaml":true},{"content":"This module is transient.  \n  \n -or-  \n  \n The containing assembly is not persistable.","nodes":[{"pos":[0,25],"content":"This module is transient.","nodes":[{"content":"This module is transient.","pos":[0,25]}]},{"pos":[32,36],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[43,86],"content":"The containing assembly is not persistable.","nodes":[{"content":"The containing assembly is not persistable.","pos":[0,43]}]}],"pos":[77031,77124],"yaml":true},{"content":"Constructs a `TypeBuilder` given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.","nodes":[{"pos":[0,177],"content":"Constructs a <ph id=\"ph1\">`TypeBuilder`</ph> given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.","source":"Constructs a `TypeBuilder` given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type."}],"pos":[78634,78812],"yaml":true},{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,131],"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","nodes":[{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","pos":[0,131],"nodes":[{"content":"Type names must be unique within an assembly.","pos":[0,45]},{"content":"You cannot have two types with the same name in two different modules of an assembly.","pos":[46,131]}]}]},{"pos":[139,668],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[78823,79497],"yaml":true,"extradata":"MT"},{"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,75],"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The full path of the type.","pos":[0,26]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[27,75],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[80481,80557],"yaml":true},{"content":"The attributes of the defined type.","nodes":[{"pos":[0,35],"content":"The attributes of the defined type.","nodes":[{"content":"The attributes of the defined type.","pos":[0,35]}]}],"pos":[80636,80672],"yaml":true},{"content":"The type that the defined type extends.","nodes":[{"pos":[0,39],"content":"The type that the defined type extends.","nodes":[{"content":"The type that the defined type extends.","pos":[0,39]}]}],"pos":[80732,80772],"yaml":true},{"content":"The packing size of the type.","nodes":[{"pos":[0,29],"content":"The packing size of the type.","nodes":[{"content":"The packing size of the type.","pos":[0,29]}]}],"pos":[80860,80890],"yaml":true},{"content":"The total size of the type.","nodes":[{"pos":[0,27],"content":"The total size of the type.","nodes":[{"content":"The total size of the type.","pos":[0,27]}]}],"pos":[80953,80981],"yaml":true},{"content":"A `TypeBuilder` created with all of the requested attributes.","nodes":[{"pos":[0,61],"content":"A <ph id=\"ph1\">`TypeBuilder`</ph> created with all of the requested attributes.","source":"A `TypeBuilder` created with all of the requested attributes."}],"pos":[81059,81121],"yaml":true},{"content":"A type with the given name exists in the parent assembly of this module.  \n  \n -or-  \n  \n Nested type attributes are set on a type that is not nested.","nodes":[{"pos":[0,72],"content":"A type with the given name exists in the parent assembly of this module.","nodes":[{"content":"A type with the given name exists in the parent assembly of this module.","pos":[0,72]}]},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,150],"content":"Nested type attributes are set on a type that is not nested.","nodes":[{"content":"Nested type attributes are set on a type that is not nested.","pos":[0,60]}]}],"pos":[81290,81447],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[81549,81578],"yaml":true},{"content":"Constructs a `TypeBuilder` given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.","nodes":[{"pos":[0,152],"content":"Constructs a <ph id=\"ph1\">`TypeBuilder`</ph> given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.","source":"Constructs a `TypeBuilder` given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements."}],"pos":[83086,83239],"yaml":true},{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,131],"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","nodes":[{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","pos":[0,131],"nodes":[{"content":"Type names must be unique within an assembly.","pos":[0,45]},{"content":"You cannot have two types with the same name in two different modules of an assembly.","pos":[46,131]}]}]},{"pos":[139,668],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[83250,83924],"yaml":true,"extradata":"MT"},{"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,75],"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The full path of the type.","pos":[0,26]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[27,75],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[84931,85007],"yaml":true},{"content":"The attributes to be associated with the type.","nodes":[{"pos":[0,46],"content":"The attributes to be associated with the type.","nodes":[{"content":"The attributes to be associated with the type.","pos":[0,46]}]}],"pos":[85086,85133],"yaml":true},{"content":"The type that the defined type extends.","nodes":[{"pos":[0,39],"content":"The type that the defined type extends.","nodes":[{"content":"The type that the defined type extends.","pos":[0,39]}]}],"pos":[85193,85233],"yaml":true},{"content":"The list of interfaces that the type implements.","nodes":[{"pos":[0,48],"content":"The list of interfaces that the type implements.","nodes":[{"content":"The list of interfaces that the type implements.","pos":[0,48]}]}],"pos":[85299,85348],"yaml":true},{"content":"A `TypeBuilder` created with all of the requested attributes.","nodes":[{"pos":[0,61],"content":"A <ph id=\"ph1\">`TypeBuilder`</ph> created with all of the requested attributes.","source":"A `TypeBuilder` created with all of the requested attributes."}],"pos":[85426,85488],"yaml":true},{"content":"A type with the given name exists in the parent assembly of this module.  \n  \n -or-  \n  \n Nested type attributes are set on a type that is not nested.","nodes":[{"pos":[0,72],"content":"A type with the given name exists in the parent assembly of this module.","nodes":[{"content":"A type with the given name exists in the parent assembly of this module.","pos":[0,72]}]},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,150],"content":"Nested type attributes are set on a type that is not nested.","nodes":[{"content":"Nested type attributes are set on a type that is not nested.","pos":[0,60]}]}],"pos":[85657,85814],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[85916,85945],"yaml":true},{"content":"Constructs a `TypeBuilder` given the type name, the attributes, the type that the defined type extends, and the total size of the type.","nodes":[{"pos":[0,135],"content":"Constructs a <ph id=\"ph1\">`TypeBuilder`</ph> given the type name, the attributes, the type that the defined type extends, and the total size of the type.","source":"Constructs a `TypeBuilder` given the type name, the attributes, the type that the defined type extends, and the total size of the type."}],"pos":[87522,87658],"yaml":true},{"content":"Type names must be unique within an assembly. It is forbidden to have two types with the same name in two different modules of an assembly.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,139],"content":"Type names must be unique within an assembly. It is forbidden to have two types with the same name in two different modules of an assembly.","nodes":[{"content":"Type names must be unique within an assembly. It is forbidden to have two types with the same name in two different modules of an assembly.","pos":[0,139],"nodes":[{"content":"Type names must be unique within an assembly.","pos":[0,45]},{"content":"It is forbidden to have two types with the same name in two different modules of an assembly.","pos":[46,139]}]}]},{"pos":[147,676],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[87669,88351],"yaml":true,"extradata":"MT"},{"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,75],"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The full path of the type.","pos":[0,26]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[27,75],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[89287,89363],"yaml":true},{"content":"The attributes of the defined type.","nodes":[{"pos":[0,35],"content":"The attributes of the defined type.","nodes":[{"content":"The attributes of the defined type.","pos":[0,35]}]}],"pos":[89442,89478],"yaml":true},{"content":"The type that the defined type extends.","nodes":[{"pos":[0,39],"content":"The type that the defined type extends.","nodes":[{"content":"The type that the defined type extends.","pos":[0,39]}]}],"pos":[89538,89578],"yaml":true},{"content":"The total size of the type.","nodes":[{"pos":[0,27],"content":"The total size of the type.","nodes":[{"content":"The total size of the type.","pos":[0,27]}]}],"pos":[89641,89669],"yaml":true},{"content":"A `TypeBuilder` object.","nodes":[{"pos":[0,23],"content":"A <ph id=\"ph1\">`TypeBuilder`</ph> object.","source":"A `TypeBuilder` object."}],"pos":[89747,89771],"yaml":true},{"content":"A type with the given name exists in the parent assembly of this module.  \n  \n -or-  \n  \n Nested type attributes are set on a type that is not nested.","nodes":[{"pos":[0,72],"content":"A type with the given name exists in the parent assembly of this module.","nodes":[{"content":"A type with the given name exists in the parent assembly of this module.","pos":[0,72]}]},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,150],"content":"Nested type attributes are set on a type that is not nested.","nodes":[{"content":"Nested type attributes are set on a type that is not nested.","pos":[0,60]}]}],"pos":[89940,90097],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[90199,90228],"yaml":true},{"content":"Constructs a `TypeBuilder` given the type name, the attributes, the type that the defined type extends, and the packing size of the type.","nodes":[{"pos":[0,137],"content":"Constructs a <ph id=\"ph1\">`TypeBuilder`</ph> given the type name, the attributes, the type that the defined type extends, and the packing size of the type.","source":"Constructs a `TypeBuilder` given the type name, the attributes, the type that the defined type extends, and the packing size of the type."}],"pos":[91814,91952],"yaml":true},{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,131],"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","nodes":[{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","pos":[0,131],"nodes":[{"content":"Type names must be unique within an assembly.","pos":[0,45]},{"content":"You cannot have two types with the same name in two different modules of an assembly.","pos":[46,131]}]}]},{"pos":[139,668],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[91963,92637],"yaml":true,"extradata":"MT"},{"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,75],"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The full path of the type.","pos":[0,26]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[27,75],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[93604,93680],"yaml":true},{"content":"The attributes of the defined type.","nodes":[{"pos":[0,35],"content":"The attributes of the defined type.","nodes":[{"content":"The attributes of the defined type.","pos":[0,35]}]}],"pos":[93759,93795],"yaml":true},{"content":"The type that the defined type extends.","nodes":[{"pos":[0,39],"content":"The type that the defined type extends.","nodes":[{"content":"The type that the defined type extends.","pos":[0,39]}]}],"pos":[93855,93895],"yaml":true},{"content":"The packing size of the type.","nodes":[{"pos":[0,29],"content":"The packing size of the type.","nodes":[{"content":"The packing size of the type.","pos":[0,29]}]}],"pos":[93980,94010],"yaml":true},{"content":"A `TypeBuilder` object.","nodes":[{"pos":[0,23],"content":"A <ph id=\"ph1\">`TypeBuilder`</ph> object.","source":"A `TypeBuilder` object."}],"pos":[94088,94112],"yaml":true},{"content":"A type with the given name exists in the parent assembly of this module.  \n  \n -or-  \n  \n Nested type attributes are set on a type that is not nested.","nodes":[{"pos":[0,72],"content":"A type with the given name exists in the parent assembly of this module.","nodes":[{"content":"A type with the given name exists in the parent assembly of this module.","pos":[0,72]}]},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,150],"content":"Nested type attributes are set on a type that is not nested.","nodes":[{"content":"Nested type attributes are set on a type that is not nested.","pos":[0,60]}]}],"pos":[94281,94438],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[94540,94569],"yaml":true},{"content":"Constructs a `TypeBuilder` given the type name and the type attributes.","nodes":[{"pos":[0,71],"content":"Constructs a <ph id=\"ph1\">`TypeBuilder`</ph> given the type name and the type attributes.","source":"Constructs a `TypeBuilder` given the type name and the type attributes."}],"pos":[95957,96029],"yaml":true},{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,131],"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","nodes":[{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","pos":[0,131],"nodes":[{"content":"Type names must be unique within an assembly.","pos":[0,45]},{"content":"You cannot have two types with the same name in two different modules of an assembly.","pos":[46,131]}]}]},{"pos":[139,668],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[96040,96714],"yaml":true,"extradata":"MT"},{"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,75],"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The full path of the type.","pos":[0,26]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[27,75],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[97623,97699],"yaml":true},{"content":"The attributes of the defined type.","nodes":[{"pos":[0,35],"content":"The attributes of the defined type.","nodes":[{"content":"The attributes of the defined type.","pos":[0,35]}]}],"pos":[97778,97814],"yaml":true},{"content":"A `TypeBuilder` created with all of the requested attributes.","nodes":[{"pos":[0,61],"content":"A <ph id=\"ph1\">`TypeBuilder`</ph> created with all of the requested attributes.","source":"A `TypeBuilder` created with all of the requested attributes."}],"pos":[97892,97954],"yaml":true},{"content":"A type with the given name exists in the parent assembly of this module.  \n  \n -or-  \n  \n Nested type attributes are set on a type that is not nested.","nodes":[{"pos":[0,72],"content":"A type with the given name exists in the parent assembly of this module.","nodes":[{"content":"A type with the given name exists in the parent assembly of this module.","pos":[0,72]}]},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,150],"content":"Nested type attributes are set on a type that is not nested.","nodes":[{"content":"Nested type attributes are set on a type that is not nested.","pos":[0,60]}]}],"pos":[98123,98280],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[98382,98411],"yaml":true},{"content":"Constructs a `TypeBuilder` for a private type with the specified name in this module.","nodes":[{"pos":[0,85],"content":"Constructs a <ph id=\"ph1\">`TypeBuilder`</ph> for a private type with the specified name in this module.","source":"Constructs a `TypeBuilder` for a private type with the specified name in this module."}],"pos":[99652,99738],"yaml":true},{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,131],"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","nodes":[{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","pos":[0,131],"nodes":[{"content":"Type names must be unique within an assembly.","pos":[0,45]},{"content":"You cannot have two types with the same name in two different modules of an assembly.","pos":[46,131]}]}]},{"pos":[139,668],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[99749,100423],"yaml":true,"extradata":"MT"},{"content":"The full path of the type, including the namespace. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,100],"content":"The full path of the type, including the namespace. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The full path of the type, including the namespace.","pos":[0,51]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[52,100],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[101293,101394],"yaml":true},{"content":"A private type with the specified name.","nodes":[{"pos":[0,39],"content":"A private type with the specified name.","nodes":[{"content":"A private type with the specified name.","pos":[0,39]}]}],"pos":[101472,101512],"yaml":true},{"content":"A type with the given name exists in the parent assembly of this module.  \n  \n -or-  \n  \n Nested type attributes are set on a type that is not nested.","nodes":[{"pos":[0,72],"content":"A type with the given name exists in the parent assembly of this module.","nodes":[{"content":"A type with the given name exists in the parent assembly of this module.","pos":[0,72]}]},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,150],"content":"Nested type attributes are set on a type that is not nested.","nodes":[{"content":"Nested type attributes are set on a type that is not nested.","pos":[0,60]}]}],"pos":[101681,101838],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[101940,101969],"yaml":true},{"content":"Constructs a `TypeBuilder` given type name, its attributes, and the type that the defined type extends.","nodes":[{"pos":[0,103],"content":"Constructs a <ph id=\"ph1\">`TypeBuilder`</ph> given type name, its attributes, and the type that the defined type extends.","source":"Constructs a `TypeBuilder` given type name, its attributes, and the type that the defined type extends."}],"pos":[103411,103515],"yaml":true},{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,131],"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","nodes":[{"content":"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.","pos":[0,131],"nodes":[{"content":"Type names must be unique within an assembly.","pos":[0,45]},{"content":"You cannot have two types with the same name in two different modules of an assembly.","pos":[46,131]}]}]},{"pos":[139,668],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[103526,104200],"yaml":true,"extradata":"MT"},{"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,75],"content":"The full path of the type. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The full path of the type.","pos":[0,26]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[27,75],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[105122,105198],"yaml":true},{"content":"The attribute to be associated with the type.","nodes":[{"pos":[0,45],"content":"The attribute to be associated with the type.","nodes":[{"content":"The attribute to be associated with the type.","pos":[0,45]}]}],"pos":[105277,105323],"yaml":true},{"content":"The type that the defined type extends.","nodes":[{"pos":[0,39],"content":"The type that the defined type extends.","nodes":[{"content":"The type that the defined type extends.","pos":[0,39]}]}],"pos":[105383,105423],"yaml":true},{"content":"A `TypeBuilder` created with all of the requested attributes.","nodes":[{"pos":[0,61],"content":"A <ph id=\"ph1\">`TypeBuilder`</ph> created with all of the requested attributes.","source":"A `TypeBuilder` created with all of the requested attributes."}],"pos":[105501,105563],"yaml":true},{"content":"A type with the given name exists in the parent assembly of this module.  \n  \n -or-  \n  \n Nested type attributes are set on a type that is not nested.","nodes":[{"pos":[0,72],"content":"A type with the given name exists in the parent assembly of this module.","nodes":[{"content":"A type with the given name exists in the parent assembly of this module.","pos":[0,72]}]},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,150],"content":"Nested type attributes are set on a type that is not nested.","nodes":[{"content":"Nested type attributes are set on a type that is not nested.","pos":[0,60]}]}],"pos":[105732,105889],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[105991,106020],"yaml":true},{"content":"Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.","nodes":[{"pos":[0,95],"content":"Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.","nodes":[{"content":"Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.","pos":[0,95]}]}],"pos":[107552,107648],"yaml":true},{"content":"<xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.  \n  \n The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">&lt;xref:System.Reflection.FieldAttributes.Static&gt;</ph> is automatically included in <ph id=\"ph2\">`attributes`</ph>.","source":"<xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`."},{"pos":[97,240],"content":"The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.","nodes":[{"content":"The data defined by this method is not created until the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A&gt;</ph> method is called.","pos":[0,143],"source":"The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called."}]},{"pos":[248,777],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[107659,108444],"yaml":true,"extradata":"MT"},{"content":"The name used to refer to the data. <code>name</code> cannot contain embedded nulls.","nodes":[{"pos":[0,84],"content":"The name used to refer to the data. <code>name</code> cannot contain embedded nulls.","nodes":[{"content":"The name used to refer to the data.","pos":[0,35]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot contain embedded nulls.","pos":[36,84],"source":"<code>name</code> cannot contain embedded nulls."}]}],"pos":[108681,108766],"yaml":true},{"content":"The size of the data field.","nodes":[{"pos":[0,27],"content":"The size of the data field.","nodes":[{"content":"The size of the data field.","pos":[0,27]}]}],"pos":[108825,108853],"yaml":true},{"content":"The attributes for the field.","nodes":[{"pos":[0,29],"content":"The attributes for the field.","nodes":[{"content":"The attributes for the field.","pos":[0,29]}]}],"pos":[108939,108969],"yaml":true},{"content":"A field to reference the data.","nodes":[{"pos":[0,30],"content":"A field to reference the data.","nodes":[{"content":"A field to reference the data.","pos":[0,30]}]}],"pos":[109048,109079],"yaml":true},{"content":"The length of <code>name</code> is zero.  \n  \n -or-  \n  \n <code>size</code> is less than or equal to zero, or greater than or equal to 0x003f0000.","nodes":[{"pos":[0,40],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>name</code> is zero."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,146],"content":"<ph id=\"ph1\">&lt;code&gt;size&lt;/code&gt;</ph> is less than or equal to zero, or greater than or equal to 0x003f0000.","source":"<code>size</code> is less than or equal to zero, or greater than or equal to 0x003f0000."}],"pos":[109261,109414],"yaml":true},{"content":"<code>name</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."}],"pos":[109516,109545],"yaml":true},{"content":"<xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"&gt;&lt;/xref&gt;</ph> has been previously called.","source":"<xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called."}],"pos":[109655,109763],"yaml":true},{"content":"Defines an unmanaged embedded resource given an opaque binary large object (BLOB) of bytes.","nodes":[{"pos":[0,91],"content":"Defines an unmanaged embedded resource given an opaque binary large object (BLOB) of bytes.","nodes":[{"content":"Defines an unmanaged embedded resource given an opaque binary large object (BLOB) of bytes.","pos":[0,91]}]}],"pos":[111055,111147],"yaml":true},{"content":"An assembly can be associated with only one unmanaged resource. This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,385],"content":"An assembly can be associated with only one unmanaged resource. This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","nodes":[{"content":"An assembly can be associated with only one unmanaged resource.","pos":[0,63]},{"content":"This means that calling <ph id=\"ph1\">`DefineVersionInfoResource`</ph> or <ph id=\"ph2\">`DefineUnmanagedResource`</ph> after either one of the methods was called previously throws <ph id=\"ph3\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[64,238],"source":" This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>."},{"content":"Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","pos":[239,385]}]},{"pos":[393,922],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[111158,112086],"yaml":true,"extradata":"MT"},{"content":"An opaque BLOB that represents an unmanaged resource","nodes":[{"pos":[0,52],"content":"An opaque BLOB that represents an unmanaged resource","nodes":[{"content":"An opaque BLOB that represents an unmanaged resource","pos":[0,52]}]}],"pos":[112244,112297],"yaml":true},{"content":"An unmanaged resource has already been defined in the module's assembly.","nodes":[{"pos":[0,72],"content":"An unmanaged resource has already been defined in the module's assembly.","nodes":[{"content":"An unmanaged resource has already been defined in the module's assembly.","pos":[0,72]}]}],"pos":[112479,112552],"yaml":true},{"content":"<code>resource</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;resource&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>resource</code> is `null`."}],"pos":[112654,112687],"yaml":true},{"content":"Defines an unmanaged resource given the name of Win32 resource file.","nodes":[{"pos":[0,68],"content":"Defines an unmanaged resource given the name of Win32 resource file.","nodes":[{"content":"Defines an unmanaged resource given the name of Win32 resource file.","pos":[0,68]}]}],"pos":[113843,113912],"yaml":true},{"content":"An assembly can be associated with only one unmanaged resource. This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,385],"content":"An assembly can be associated with only one unmanaged resource. This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","nodes":[{"content":"An assembly can be associated with only one unmanaged resource.","pos":[0,63]},{"content":"This means that calling <ph id=\"ph1\">`DefineVersionInfoResource`</ph> or <ph id=\"ph2\">`DefineUnmanagedResource`</ph> after either one of the methods was called previously throws <ph id=\"ph3\">&lt;xref:System.ArgumentException&gt;</ph>.","pos":[64,238],"source":" This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>."},{"content":"Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).","pos":[239,385]}]},{"pos":[393,922],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[113923,114851],"yaml":true,"extradata":"MT"},{"content":"The name of the unmanaged resource file.","nodes":[{"pos":[0,40],"content":"The name of the unmanaged resource file.","nodes":[{"content":"The name of the unmanaged resource file.","pos":[0,40]}]}],"pos":[115025,115066],"yaml":true},{"content":"An unmanaged resource has already been defined in the module's assembly.  \n  \n -or-  \n  \n <code>resourceFileName</code> is the empty string (\"\").","nodes":[{"pos":[0,72],"content":"An unmanaged resource has already been defined in the module's assembly.","nodes":[{"content":"An unmanaged resource has already been defined in the module's assembly.","pos":[0,72]}]},{"pos":[79,83],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[90,145],"content":"<ph id=\"ph1\">&lt;code&gt;resourceFileName&lt;/code&gt;</ph> is the empty string (\"\").","source":"<code>resourceFileName</code> is the empty string (\"\")."}],"pos":[115248,115402],"yaml":true},{"content":"<code>resourceFileName</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;resourceFileName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>resourceFileName</code> is `null`."}],"pos":[115504,115545],"yaml":true},{"content":"<code>resourceFileName</code> is not found.  \n  \n -or-  \n  \n <code>resourceFileName</code> is a directory.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;resourceFileName&lt;/code&gt;</ph> is not found.","source":"<code>resourceFileName</code> is not found."},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,106],"content":"<ph id=\"ph1\">&lt;code&gt;resourceFileName&lt;/code&gt;</ph> is a directory.","source":"<code>resourceFileName</code> is a directory."}],"pos":[115653,115766],"yaml":true},{"content":"Returns a value that indicates whether this instance is equal to the specified object.","nodes":[{"pos":[0,86],"content":"Returns a value that indicates whether this instance is equal to the specified object.","nodes":[{"content":"Returns a value that indicates whether this instance is equal to the specified object.","pos":[0,86]}]}],"pos":[116847,116934],"yaml":true},{"content":"An object to compare with this instance, or `null`.","nodes":[{"pos":[0,51],"content":"An object to compare with this instance, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare with this instance, or `null`."}],"pos":[117074,117126],"yaml":true},{"content":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> equals the type and value of this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`."}],"pos":[117184,117277],"yaml":true},{"content":"Gets a `String` representing the fully qualified name and path to this module.","nodes":[{"pos":[0,78],"content":"Gets a <ph id=\"ph1\">`String`</ph> representing the fully qualified name and path to this module.","source":"Gets a `String` representing the fully qualified name and path to this module."}],"pos":[118533,118612],"yaml":true},{"content":"To get the name without the path, use `Name`.  \n  \n> [!NOTE]\n>  The case of a module name is platform dependent.","nodes":[{"pos":[0,45],"content":"To get the name without the path, use <ph id=\"ph1\">`Name`</ph>.","source":"To get the name without the path, use `Name`."},{"pos":[53,112],"content":"[!NOTE]\n The case of a module name is platform dependent.","leadings":["","> "],"nodes":[{"content":"The case of a module name is platform dependent.","pos":[9,57]}]}],"pos":[118623,118741],"yaml":true,"extradata":"MT"},{"content":"The fully qualified module name.","nodes":[{"pos":[0,32],"content":"The fully qualified module name.","nodes":[{"content":"The fully qualified module name.","pos":[0,32]}]}],"pos":[118872,118905],"yaml":true},{"content":"Returns the named method on an array class.","nodes":[{"pos":[0,43],"content":"Returns the named method on an array class.","nodes":[{"content":"Returns the named method on an array class.","pos":[0,43]}]}],"pos":[120561,120605],"yaml":true},{"content":"`GetArrayMethod` is useful when you have an array of a type whose definition has not been completed and you want to access methods defined on <xref:System.Array>. For example, you might define a type and want to define a method that takes an array of the type as a parameter. In order to access the elements of the array, you will need to call methods of the <xref:System.Array> class.","nodes":[{"pos":[0,385],"content":"`GetArrayMethod` is useful when you have an array of a type whose definition has not been completed and you want to access methods defined on <xref:System.Array>. For example, you might define a type and want to define a method that takes an array of the type as a parameter. In order to access the elements of the array, you will need to call methods of the <xref:System.Array> class.","nodes":[{"content":"<ph id=\"ph1\">`GetArrayMethod`</ph> is useful when you have an array of a type whose definition has not been completed and you want to access methods defined on <ph id=\"ph2\">&lt;xref:System.Array&gt;</ph>.","pos":[0,162],"source":"`GetArrayMethod` is useful when you have an array of a type whose definition has not been completed and you want to access methods defined on <xref:System.Array>."},{"content":"For example, you might define a type and want to define a method that takes an array of the type as a parameter.","pos":[163,275]},{"content":"In order to access the elements of the array, you will need to call methods of the <ph id=\"ph1\">&lt;xref:System.Array&gt;</ph> class.","pos":[276,385],"source":" In order to access the elements of the array, you will need to call methods of the <xref:System.Array> class."}]}],"pos":[120616,121004],"yaml":true,"extradata":"MT"},{"content":"An array class.","nodes":[{"pos":[0,15],"content":"An array class.","nodes":[{"content":"An array class.","pos":[0,15]}]}],"pos":[121999,122015],"yaml":true},{"content":"The name of a method on the array class.","nodes":[{"pos":[0,40],"content":"The name of a method on the array class.","nodes":[{"content":"The name of a method on the array class.","pos":[0,40]}]}],"pos":[122081,122122],"yaml":true},{"content":"The method's calling convention.","nodes":[{"pos":[0,32],"content":"The method's calling convention.","nodes":[{"content":"The method's calling convention.","pos":[0,32]}]}],"pos":[122218,122251],"yaml":true},{"content":"The return type of the method.","nodes":[{"pos":[0,30],"content":"The return type of the method.","nodes":[{"content":"The return type of the method.","pos":[0,30]}]}],"pos":[122315,122346],"yaml":true},{"content":"The types of the method's parameters.","nodes":[{"pos":[0,37],"content":"The types of the method's parameters.","nodes":[{"content":"The types of the method's parameters.","pos":[0,37]}]}],"pos":[122416,122454],"yaml":true},{"content":"The named method on an array class.","nodes":[{"pos":[0,35],"content":"The named method on an array class.","nodes":[{"content":"The named method on an array class.","pos":[0,35]}]}],"pos":[122526,122562],"yaml":true},{"content":"<code>arrayClass</code> is not an array.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;arrayClass&lt;/code&gt;</ph> is not an array.","source":"<code>arrayClass</code> is not an array."}],"pos":[122735,122776],"yaml":true},{"content":"<code>arrayClass</code> or <code>methodName</code> is `null`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">&lt;code&gt;arrayClass&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;methodName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>arrayClass</code> or <code>methodName</code> is `null`."}],"pos":[122878,122940],"yaml":true},{"content":"Returns the token for the named method on an array class.","nodes":[{"pos":[0,57],"content":"Returns the token for the named method on an array class.","nodes":[{"content":"Returns the token for the named method on an array class.","pos":[0,57]}]}],"pos":[124553,124611],"yaml":true},{"content":"This method is similar to <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, except that it returns the token of the array method instead of the method itself.","nodes":[{"pos":[0,171],"content":"This method is similar to <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, except that it returns the token of the array method instead of the method itself.","nodes":[{"content":"This method is similar to <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A&gt;</ph>, except that it returns the token of the array method instead of the method itself.","pos":[0,171],"source":"This method is similar to <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, except that it returns the token of the array method instead of the method itself."}]}],"pos":[124622,124794],"yaml":true,"extradata":"MT"},{"content":"The object for the array.","nodes":[{"pos":[0,25],"content":"The object for the array.","nodes":[{"content":"The object for the array.","pos":[0,25]}]}],"pos":[125806,125832],"yaml":true},{"content":"A string that contains the name of the method.","nodes":[{"pos":[0,46],"content":"A string that contains the name of the method.","nodes":[{"content":"A string that contains the name of the method.","pos":[0,46]}]}],"pos":[125898,125945],"yaml":true},{"content":"The calling convention for the method.","nodes":[{"pos":[0,38],"content":"The calling convention for the method.","nodes":[{"content":"The calling convention for the method.","pos":[0,38]}]}],"pos":[126041,126080],"yaml":true},{"content":"The return type of the method.","nodes":[{"pos":[0,30],"content":"The return type of the method.","nodes":[{"content":"The return type of the method.","pos":[0,30]}]}],"pos":[126144,126175],"yaml":true},{"content":"The types of the parameters of the method.","nodes":[{"pos":[0,42],"content":"The types of the parameters of the method.","nodes":[{"content":"The types of the parameters of the method.","pos":[0,42]}]}],"pos":[126245,126288],"yaml":true},{"content":"The token for the named method on an array class.","nodes":[{"pos":[0,49],"content":"The token for the named method on an array class.","nodes":[{"content":"The token for the named method on an array class.","pos":[0,49]}]}],"pos":[126366,126416],"yaml":true},{"content":"<code>arrayClass</code> is not an array.  \n  \n -or-  \n  \n The length of <code>methodName</code> is zero.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;arrayClass&lt;/code&gt;</ph> is not an array.","source":"<code>arrayClass</code> is not an array."},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,104],"content":"The length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">methodName</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"The length of <code>methodName</code> is zero."}],"pos":[126594,126705],"yaml":true},{"content":"<code>arrayClass</code> or <code>methodName</code> is `null`.","nodes":[{"pos":[0,61],"content":"<ph id=\"ph1\">&lt;code&gt;arrayClass&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;methodName&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>arrayClass</code> or <code>methodName</code> is `null`."}],"pos":[126807,126869],"yaml":true},{"content":"Returns the token used to identify the specified constructor within this module.","nodes":[{"pos":[0,80],"content":"Returns the token used to identify the specified constructor within this module.","nodes":[{"content":"Returns the token used to identify the specified constructor within this module.","pos":[0,80]}]}],"pos":[128088,128169],"yaml":true},{"content":"The constructor to get a token for.","nodes":[{"pos":[0,35],"content":"The constructor to get a token for.","nodes":[{"content":"The constructor to get a token for.","pos":[0,35]}]}],"pos":[128456,128492],"yaml":true},{"content":"The token used to identify the specified constructor within this module.","nodes":[{"pos":[0,72],"content":"The token used to identify the specified constructor within this module.","nodes":[{"content":"The token used to identify the specified constructor within this module.","pos":[0,72]}]}],"pos":[128570,128643],"yaml":true},{"content":"<code>con</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>con</code> is `null`."}],"pos":[128829,128857],"yaml":true},{"content":"Returns the token used to identify the constructor that has the specified attributes and parameter types within this module.","nodes":[{"pos":[0,124],"content":"Returns the token used to identify the constructor that has the specified attributes and parameter types within this module.","nodes":[{"content":"Returns the token used to identify the constructor that has the specified attributes and parameter types within this module.","pos":[0,124]}]}],"pos":[130364,130489],"yaml":true},{"content":"The constructor to get a token for.","nodes":[{"pos":[0,35],"content":"The constructor to get a token for.","nodes":[{"content":"The constructor to get a token for.","pos":[0,35]}]}],"pos":[130795,130831],"yaml":true},{"content":"A collection of the types of the optional parameters to the constructor.","nodes":[{"pos":[0,72],"content":"A collection of the types of the optional parameters to the constructor.","nodes":[{"content":"A collection of the types of the optional parameters to the constructor.","pos":[0,72]}]}],"pos":[130947,131020],"yaml":true},{"content":"The token used to identify the specified constructor within this module.","nodes":[{"pos":[0,72],"content":"The token used to identify the specified constructor within this module.","nodes":[{"content":"The token used to identify the specified constructor within this module.","pos":[0,72]}]}],"pos":[131098,131171],"yaml":true},{"content":"<code>constructor</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;constructor&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>constructor</code> is `null`."}],"pos":[131357,131393],"yaml":true},{"content":"Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>.","nodes":[{"pos":[0,130],"content":"Returns all the custom attributes that have been applied to the current <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder\"&gt;&lt;/xref&gt;</ph>.","source":"Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>."}],"pos":[132531,132662],"yaml":true},{"content":"This argument is ignored for objects of this type.","nodes":[{"pos":[0,50],"content":"This argument is ignored for objects of this type.","nodes":[{"content":"This argument is ignored for objects of this type.","pos":[0,50]}]}],"pos":[132826,132877],"yaml":true},{"content":"An array that contains the custom attributes; the array is empty if there are no attributes.","nodes":[{"pos":[0,92],"content":"An array that contains the custom attributes; the array is empty if there are no attributes.","nodes":[{"content":"An array that contains the custom attributes; the array is empty if there are no attributes.","pos":[0,92]}]}],"pos":[132936,133029],"yaml":true},{"content":"Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>, and that derive from a specified attribute type.","nodes":[{"pos":[0,179],"content":"Returns all the custom attributes that have been applied to the current <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder\"&gt;&lt;/xref&gt;</ph>, and that derive from a specified attribute type.","source":"Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>, and that derive from a specified attribute type."}],"pos":[134308,134488],"yaml":true},{"content":"The base type from which attributes derive.","nodes":[{"pos":[0,43],"content":"The base type from which attributes derive.","nodes":[{"content":"The base type from which attributes derive.","pos":[0,43]}]}],"pos":[134675,134719],"yaml":true},{"content":"This argument is ignored for objects of this type.","nodes":[{"pos":[0,50],"content":"This argument is ignored for objects of this type.","nodes":[{"content":"This argument is ignored for objects of this type.","pos":[0,50]}]}],"pos":[134783,134834],"yaml":true},{"content":"An array that contains the custom attributes that are derived, at any level, from <code>attributeType</code>; the array is empty if there are no such attributes.","nodes":[{"pos":[0,161],"content":"An array that contains the custom attributes that are derived, at any level, from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">attributeType</ph><ept id=\"p1\">&lt;/code&gt;</ept>; the array is empty if there are no such attributes.","source":"An array that contains the custom attributes that are derived, at any level, from <code>attributeType</code>; the array is empty if there are no such attributes."}],"pos":[134893,135055],"yaml":true},{"content":"<code>attributeType</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>attributeType</code> is `null`."}],"pos":[135241,135279],"yaml":true},{"content":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime. For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object.","nodes":[{"pos":[0,209],"content":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime. For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object supplied by the runtime.","pos":[0,100],"source":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime."},{"content":"For example, <ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is a <ph id=\"ph2\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder\"&gt;&lt;/xref&gt;</ph> object.","pos":[101,209],"source":" For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object."}]}],"pos":[135373,135583],"yaml":true},{"content":"Returns information about the attributes that have been applied to the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>, expressed as <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects.","nodes":[{"pos":[0,218],"content":"Returns information about the attributes that have been applied to the current <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder\"&gt;&lt;/xref&gt;</ph>, expressed as <ph id=\"ph2\">&lt;xref href=\"System.Reflection.CustomAttributeData\"&gt;&lt;/xref&gt;</ph> objects.","source":"Returns information about the attributes that have been applied to the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>, expressed as <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects."}],"pos":[136676,136895],"yaml":true},{"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.","nodes":[{"pos":[0,614],"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.","nodes":[{"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.","pos":[0,614],"nodes":[{"content":"Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.","pos":[0,205]},{"content":"Methods like <ph id=\"ph1\">&lt;xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName&gt;</ph> cannot be used in such cases, because they create instances of the attributes.","pos":[206,455],"source":" Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes."},{"content":"Code in the reflection-only context cannot be executed.","pos":[456,511]},{"content":"For more information and for example code, see the <ph id=\"ph1\">&lt;xref:System.Reflection.CustomAttributeData&gt;</ph> class.","pos":[512,614],"source":" For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class."}]}]}],"pos":[136906,137521],"yaml":true,"extradata":"MT"},{"content":"A generic list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects representing data about the attributes that have been applied to the current module.","nodes":[{"pos":[0,169],"content":"A generic list of <ph id=\"ph1\">&lt;xref href=\"System.Reflection.CustomAttributeData\"&gt;&lt;/xref&gt;</ph> objects representing data about the attributes that have been applied to the current module.","source":"A generic list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects representing data about the attributes that have been applied to the current module."}],"pos":[137794,137964],"yaml":true},{"content":"Returns a module-level field, defined in the .sdata region of the portable executable (PE) file, that has the specified name and binding attributes.","nodes":[{"pos":[0,148],"content":"Returns a module-level field, defined in the .sdata region of the portable executable (PE) file, that has the specified name and binding attributes.","nodes":[{"content":"Returns a module-level field, defined in the .sdata region of the portable executable (PE) file, that has the specified name and binding attributes.","pos":[0,148]}]}],"pos":[139172,139321],"yaml":true},{"content":"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.  \n  \n> [!IMPORTANT]\n>  Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.","nodes":[{"pos":[0,275],"content":"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.","nodes":[{"content":"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A&gt;</ph> methods.","pos":[0,275],"source":"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods."}]},{"pos":[283,462],"content":"[!IMPORTANT]\n Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.","leadings":["","> "],"nodes":[{"content":"Module-level fields cannot be retrieved until after the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A&gt;</ph> method has been called for the module.","pos":[14,177],"source":" Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module."}]}],"pos":[139332,139800],"yaml":true,"extradata":"MT"},{"content":"The field name.","nodes":[{"pos":[0,15],"content":"The field name.","nodes":[{"content":"The field name.","pos":[0,15]}]}],"pos":[140011,140027],"yaml":true},{"content":"A combination of the `BindingFlags` bit flags used to control the search.","nodes":[{"pos":[0,73],"content":"A combination of the <ph id=\"ph1\">`BindingFlags`</ph> bit flags used to control the search.","source":"A combination of the `BindingFlags` bit flags used to control the search."}],"pos":[140111,140185],"yaml":true},{"content":"A field that has the specified name and binding attributes, or `null` if the field does not exist.","nodes":[{"pos":[0,98],"content":"A field that has the specified name and binding attributes, or <ph id=\"ph1\">`null`</ph> if the field does not exist.","source":"A field that has the specified name and binding attributes, or `null` if the field does not exist."}],"pos":[140256,140355],"yaml":true},{"content":"The <code>name</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>name</code> parameter is `null`."}],"pos":[140530,140573],"yaml":true},{"content":"Returns all fields defined in the .sdata region of the portable executable (PE) file that match the specified binding flags.","nodes":[{"pos":[0,124],"content":"Returns all fields defined in the .sdata region of the portable executable (PE) file that match the specified binding flags.","nodes":[{"content":"Returns all fields defined in the .sdata region of the portable executable (PE) file that match the specified binding flags.","pos":[0,124]}]}],"pos":[141714,141839],"yaml":true},{"content":"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.  \n  \n> [!IMPORTANT]\n>  Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.","nodes":[{"pos":[0,275],"content":"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.","nodes":[{"content":"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A&gt;</ph> methods.","pos":[0,275],"source":"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods."}]},{"pos":[283,462],"content":"[!IMPORTANT]\n Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.","leadings":["","> "],"nodes":[{"content":"Module-level fields cannot be retrieved until after the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A&gt;</ph> method has been called for the module.","pos":[14,177],"source":" Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module."}]}],"pos":[141850,142318],"yaml":true,"extradata":"MT"},{"content":"A combination of the `BindingFlags` bit flags used to control the search.","nodes":[{"pos":[0,73],"content":"A combination of the <ph id=\"ph1\">`BindingFlags`</ph> bit flags used to control the search.","source":"A combination of the `BindingFlags` bit flags used to control the search."}],"pos":[142545,142619],"yaml":true},{"content":"An array of fields that match the specified flags; the array is empty if no such fields exist.","nodes":[{"pos":[0,94],"content":"An array of fields that match the specified flags; the array is empty if no such fields exist.","nodes":[{"content":"An array of fields that match the specified flags; the array is empty if no such fields exist.","pos":[0,94]}]}],"pos":[142692,142787],"yaml":true},{"content":"The <code>name</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>name</code> parameter is `null`."}],"pos":[142963,143006],"yaml":true},{"content":"Returns the token used to identify the specified field within this module.","nodes":[{"pos":[0,74],"content":"Returns the token used to identify the specified field within this module.","nodes":[{"content":"Returns the token used to identify the specified field within this module.","pos":[0,74]}]}],"pos":[144153,144228],"yaml":true},{"content":"The field to get a token for.","nodes":[{"pos":[0,29],"content":"The field to get a token for.","nodes":[{"content":"The field to get a token for.","pos":[0,29]}]}],"pos":[144434,144464],"yaml":true},{"content":"The token used to identify the specified field within this module.","nodes":[{"pos":[0,66],"content":"The token used to identify the specified field within this module.","nodes":[{"content":"The token used to identify the specified field within this module.","pos":[0,66]}]}],"pos":[144541,144608],"yaml":true},{"content":"<code>field</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;field&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>field</code> is `null`."}],"pos":[144788,144818],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[145866,145907],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[146041,146076],"yaml":true},{"content":"Returns the module-level method that matches the specified criteria.","nodes":[{"pos":[0,68],"content":"Returns the module-level method that matches the specified criteria.","nodes":[{"content":"Returns the module-level method that matches the specified criteria.","pos":[0,68]}]}],"pos":[147995,148064],"yaml":true},{"content":"This method provides the implementation for all overloads of the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method. Use the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method to get methods that have been declared at the module level. Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.  \n  \n> [!IMPORTANT]\n>  Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.","nodes":[{"pos":[0,443],"content":"This method provides the implementation for all overloads of the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method. Use the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method to get methods that have been declared at the module level. Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.","nodes":[{"content":"This method provides the implementation for all overloads of the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method. Use the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method to get methods that have been declared at the module level. Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.","pos":[0,443],"nodes":[{"content":"This method provides the implementation for all overloads of the inherited <ph id=\"ph1\">&lt;xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName&gt;</ph> method.","pos":[0,152],"source":"This method provides the implementation for all overloads of the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method."},{"content":"Use the inherited <ph id=\"ph1\">&lt;xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName&gt;</ph> method to get methods that have been declared at the module level.","pos":[153,307],"source":" Use the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method to get methods that have been declared at the module level."},{"content":"Module-level methods are defined in emitted code by using the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A&gt;</ph> method.","pos":[308,443],"source":" Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method."}]}]},{"pos":[451,631],"content":"[!IMPORTANT]\n Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.","leadings":["","> "],"nodes":[{"content":"Module-level methods cannot be retrieved until after the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A&gt;</ph> method has been called for the module.","pos":[14,178],"source":" Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module."}]}],"pos":[148075,148712],"yaml":true,"extradata":"MT"},{"content":"The method name.","nodes":[{"pos":[0,16],"content":"The method name.","nodes":[{"content":"The method name.","pos":[0,16]}]}],"pos":[149081,149098],"yaml":true},{"content":"A combination of `BindingFlags` bit flags used to control the search.","nodes":[{"pos":[0,69],"content":"A combination of <ph id=\"ph1\">`BindingFlags`</ph> bit flags used to control the search.","source":"A combination of `BindingFlags` bit flags used to control the search."}],"pos":[149182,149252],"yaml":true},{"content":"An object that implements `Binder`, containing properties related to this method.","nodes":[{"pos":[0,81],"content":"An object that implements <ph id=\"ph1\">`Binder`</ph>, containing properties related to this method.","source":"An object that implements `Binder`, containing properties related to this method."}],"pos":[149325,149407],"yaml":true},{"content":"The calling convention for the method.","nodes":[{"pos":[0,38],"content":"The calling convention for the method.","nodes":[{"content":"The calling convention for the method.","pos":[0,38]}]}],"pos":[149500,149539],"yaml":true},{"content":"The parameter types of the method.","nodes":[{"pos":[0,34],"content":"The parameter types of the method.","nodes":[{"content":"The parameter types of the method.","pos":[0,34]}]}],"pos":[149600,149635],"yaml":true},{"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","nodes":[{"pos":[0,122],"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","nodes":[{"content":"An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.","pos":[0,122]}]}],"pos":[149724,149847],"yaml":true},{"content":"A method that is defined at the module level, and matches the specified criteria; or `null` if such a method does not exist.","nodes":[{"pos":[0,124],"content":"A method that is defined at the module level, and matches the specified criteria; or <ph id=\"ph1\">`null`</ph> if such a method does not exist.","source":"A method that is defined at the module level, and matches the specified criteria; or `null` if such a method does not exist."}],"pos":[149919,150044],"yaml":true},{"content":"<code>name</code> is `null`, <code>types</code> is `null`, or an element of <code>types</code> is `null`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>, <ph id=\"ph3\">&lt;code&gt;types&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>, or an element of <ph id=\"ph5\">&lt;code&gt;types&lt;/code&gt;</ph> is <ph id=\"ph6\">`null`</ph>.","source":"<code>name</code> is `null`, <code>types</code> is `null`, or an element of <code>types</code> is `null`."}],"pos":[150224,150330],"yaml":true},{"content":"Returns all the methods that have been defined at the module level for the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>, and that match the specified binding flags.","nodes":[{"pos":[0,185],"content":"Returns all the methods that have been defined at the module level for the current <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.ModuleBuilder\"&gt;&lt;/xref&gt;</ph>, and that match the specified binding flags.","source":"Returns all the methods that have been defined at the module level for the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>, and that match the specified binding flags."}],"pos":[151477,151663],"yaml":true},{"content":"Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.  \n  \n> [!IMPORTANT]\n>  Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.","nodes":[{"pos":[0,135],"content":"Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.","nodes":[{"content":"Module-level methods are defined in emitted code by using the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A&gt;</ph> method.","pos":[0,135],"source":"Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method."}]},{"pos":[143,323],"content":"[!IMPORTANT]\n Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.","leadings":["","> "],"nodes":[{"content":"Module-level methods cannot be retrieved until after the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A&gt;</ph> method has been called for the module.","pos":[14,178],"source":" Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module."}]}],"pos":[151674,152003],"yaml":true,"extradata":"MT"},{"content":"A combination of `BindingFlags` bit flags used to control the search.","nodes":[{"pos":[0,69],"content":"A combination of <ph id=\"ph1\">`BindingFlags`</ph> bit flags used to control the search.","source":"A combination of `BindingFlags` bit flags used to control the search."}],"pos":[152232,152302],"yaml":true},{"content":"An array that contains all the module-level methods that match <code>bindingFlags</code>.","nodes":[{"pos":[0,89],"content":"An array that contains all the module-level methods that match <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">bindingFlags</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An array that contains all the module-level methods that match <code>bindingFlags</code>."}],"pos":[152376,152466],"yaml":true},{"content":"Returns the token used to identify the specified method within this module.","nodes":[{"pos":[0,75],"content":"Returns the token used to identify the specified method within this module.","nodes":[{"content":"Returns the token used to identify the specified method within this module.","pos":[0,75]}]}],"pos":[153703,153779],"yaml":true},{"content":"The method to get a token for.","nodes":[{"pos":[0,30],"content":"The method to get a token for.","nodes":[{"content":"The method to get a token for.","pos":[0,30]}]}],"pos":[153991,154022],"yaml":true},{"content":"The token used to identify the specified method within this module.","nodes":[{"pos":[0,67],"content":"The token used to identify the specified method within this module.","nodes":[{"content":"The token used to identify the specified method within this module.","pos":[0,67]}]}],"pos":[154100,154168],"yaml":true},{"content":"<code>method</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;method&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>method</code> is `null`."}],"pos":[154349,154380],"yaml":true},{"content":"The declaring type for the method is not in this module.","nodes":[{"pos":[0,56],"content":"The declaring type for the method is not in this module.","nodes":[{"content":"The declaring type for the method is not in this module.","pos":[0,56]}]}],"pos":[154490,154547],"yaml":true},{"content":"Returns the token used to identify the method that has the specified attributes and parameter types within this module.","nodes":[{"pos":[0,119],"content":"Returns the token used to identify the method that has the specified attributes and parameter types within this module.","nodes":[{"content":"Returns the token used to identify the method that has the specified attributes and parameter types within this module.","pos":[0,119]}]}],"pos":[155919,156039],"yaml":true},{"content":"The method to get a token for.","nodes":[{"pos":[0,30],"content":"The method to get a token for.","nodes":[{"content":"The method to get a token for.","pos":[0,30]}]}],"pos":[156320,156351],"yaml":true},{"content":"A collection of the types of the optional parameters to the method.","nodes":[{"pos":[0,67],"content":"A collection of the types of the optional parameters to the method.","nodes":[{"content":"A collection of the types of the optional parameters to the method.","pos":[0,67]}]}],"pos":[156467,156535],"yaml":true},{"content":"The token used to identify the specified method within this module.","nodes":[{"pos":[0,67],"content":"The token used to identify the specified method within this module.","nodes":[{"content":"The token used to identify the specified method within this module.","pos":[0,67]}]}],"pos":[156613,156681],"yaml":true},{"content":"<code>method</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;method&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>method</code> is `null`."}],"pos":[156862,156893],"yaml":true},{"content":"The declaring type for the method is not in this module.","nodes":[{"pos":[0,56],"content":"The declaring type for the method is not in this module.","nodes":[{"content":"The declaring type for the method is not in this module.","pos":[0,56]}]}],"pos":[157003,157060],"yaml":true},{"content":"Gets a pair of values indicating the nature of the code in a module and the platform targeted by the module.","nodes":[{"pos":[0,108],"content":"Gets a pair of values indicating the nature of the code in a module and the platform targeted by the module.","nodes":[{"content":"Gets a pair of values indicating the nature of the code in a module and the platform targeted by the module.","pos":[0,108]}]}],"pos":[158432,158541],"yaml":true},{"content":"For dynamic modules, `peKind` is always <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName> and `machine` is always 0 (zero).","nodes":[{"pos":[0,147],"content":"For dynamic modules, <ph id=\"ph1\">`peKind`</ph> is always <ph id=\"ph2\">&lt;xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">`machine`</ph> is always 0 (zero).","source":"For dynamic modules, `peKind` is always <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName> and `machine` is always 0 (zero)."}],"pos":[158552,158700],"yaml":true,"extradata":"MT"},{"content":"When this method returns, a combination of the <xref href=\"System.Reflection.PortableExecutableKinds\"></xref> values indicating the nature of the code in the module.","nodes":[{"pos":[0,165],"content":"When this method returns, a combination of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.PortableExecutableKinds\"&gt;&lt;/xref&gt;</ph> values indicating the nature of the code in the module.","source":"When this method returns, a combination of the <xref href=\"System.Reflection.PortableExecutableKinds\"></xref> values indicating the nature of the code in the module."}],"pos":[158964,159130],"yaml":true},{"content":"When this method returns, one of the <xref href=\"System.Reflection.ImageFileMachine\"></xref> values indicating the platform targeted by the module.","nodes":[{"pos":[0,147],"content":"When this method returns, one of the <ph id=\"ph1\">&lt;xref href=\"System.Reflection.ImageFileMachine\"&gt;&lt;/xref&gt;</ph> values indicating the platform targeted by the module.","source":"When this method returns, one of the <xref href=\"System.Reflection.ImageFileMachine\"></xref> values indicating the platform targeted by the module."}],"pos":[159214,159362],"yaml":true},{"content":"Defines a token for the signature that is defined by the specified <xref href=\"System.Reflection.Emit.SignatureHelper\"></xref>.","nodes":[{"pos":[0,127],"content":"Defines a token for the signature that is defined by the specified <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.SignatureHelper\"&gt;&lt;/xref&gt;</ph>.","source":"Defines a token for the signature that is defined by the specified <xref href=\"System.Reflection.Emit.SignatureHelper\"></xref>."}],"pos":[160577,160705],"yaml":true},{"content":"This method defines a metadata token for the signature described by `sigHelper`.","nodes":[{"pos":[0,80],"content":"This method defines a metadata token for the signature described by <ph id=\"ph1\">`sigHelper`</ph>.","source":"This method defines a metadata token for the signature described by `sigHelper`."}],"pos":[160716,160797],"yaml":true,"extradata":"MT"},{"content":"The signature.","nodes":[{"pos":[0,14],"content":"The signature.","nodes":[{"content":"The signature.","pos":[0,14]}]}],"pos":[161041,161056],"yaml":true},{"content":"A token for the defined signature.","nodes":[{"pos":[0,34],"content":"A token for the defined signature.","nodes":[{"content":"A token for the defined signature.","pos":[0,34]}]}],"pos":[161137,161172],"yaml":true},{"content":"<code>sigHelper</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;sigHelper&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>sigHelper</code> is `null`."}],"pos":[161356,161390],"yaml":true},{"content":"Defines a token for the signature that has the specified character array and signature length.","nodes":[{"pos":[0,94],"content":"Defines a token for the signature that has the specified character array and signature length.","nodes":[{"content":"Defines a token for the signature that has the specified character array and signature length.","pos":[0,94]}]}],"pos":[162570,162665],"yaml":true},{"content":"The signature binary large object (BLOB).","nodes":[{"pos":[0,41],"content":"The signature binary large object (BLOB).","nodes":[{"content":"The signature binary large object (BLOB).","pos":[0,41]}]}],"pos":[162865,162907],"yaml":true},{"content":"The length of the signature BLOB.","nodes":[{"pos":[0,33],"content":"The length of the signature BLOB.","nodes":[{"content":"The length of the signature BLOB.","pos":[0,33]}]}],"pos":[162971,163005],"yaml":true},{"content":"A token for the specified signature.","nodes":[{"pos":[0,36],"content":"A token for the specified signature.","nodes":[{"content":"A token for the specified signature.","pos":[0,36]}]}],"pos":[163086,163123],"yaml":true},{"content":"<code>sigBytes</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;sigBytes&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>sigBytes</code> is `null`."}],"pos":[163307,163340],"yaml":true},{"content":"Returns an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to. If the assembly has not been Authenticode signed, `null` is returned.","nodes":[{"pos":[0,288],"content":"Returns an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to. If the assembly has not been Authenticode signed, `null` is returned.","nodes":[{"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to.","pos":[0,218],"source":"Returns an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to."},{"content":"If the assembly has not been Authenticode signed, <ph id=\"ph1\">`null`</ph> is returned.","pos":[219,288],"source":" If the assembly has not been Authenticode signed, `null` is returned."}]}],"pos":[164415,164704],"yaml":true},{"content":"A certificate, or `null` if the assembly to which this module belongs has not been Authenticode signed.","nodes":[{"pos":[0,103],"content":"A certificate, or <ph id=\"ph1\">`null`</ph> if the assembly to which this module belongs has not been Authenticode signed.","source":"A certificate, or `null` if the assembly to which this module belongs has not been Authenticode signed."}],"pos":[164954,165058],"yaml":true},{"content":"Returns the token of the given string in the module’s constant pool.","nodes":[{"pos":[0,68],"content":"Returns the token of the given string in the module’s constant pool.","nodes":[{"content":"Returns the token of the given string in the module’s constant pool.","pos":[0,68]}]}],"pos":[166182,166251],"yaml":true},{"content":"If `str` has already been defined, the existing token will be returned.","nodes":[{"pos":[0,71],"content":"If <ph id=\"ph1\">`str`</ph> has already been defined, the existing token will be returned.","source":"If `str` has already been defined, the existing token will be returned."}],"pos":[166262,166334],"yaml":true,"extradata":"MT"},{"content":"The string to add to the module's constant pool.","nodes":[{"pos":[0,48],"content":"The string to add to the module's constant pool.","nodes":[{"content":"The string to add to the module's constant pool.","pos":[0,48]}]}],"pos":[166506,166555],"yaml":true},{"content":"The token of the string in the constant pool.","nodes":[{"pos":[0,45],"content":"The token of the string in the constant pool.","nodes":[{"content":"The token of the string in the constant pool.","pos":[0,45]}]}],"pos":[166633,166679],"yaml":true},{"content":"<code>str</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;str&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>str</code> is `null`."}],"pos":[166863,166891],"yaml":true},{"content":"Returns the symbol writer associated with this dynamic module.","nodes":[{"pos":[0,62],"content":"Returns the symbol writer associated with this dynamic module.","nodes":[{"content":"Returns the symbol writer associated with this dynamic module.","pos":[0,62]}]}],"pos":[167918,167981],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[2,531],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[167992,168536],"yaml":true,"extradata":"MT"},{"content":"The symbol writer associated with this dynamic module.","nodes":[{"pos":[0,54],"content":"The symbol writer associated with this dynamic module.","nodes":[{"content":"The symbol writer associated with this dynamic module.","pos":[0,54]}]}],"pos":[168735,168790],"yaml":true},{"content":"Gets the named type defined in the module.","nodes":[{"pos":[0,42],"content":"Gets the named type defined in the module.","nodes":[{"content":"Gets the named type defined in the module.","pos":[0,42]}]}],"pos":[169930,169973],"yaml":true},{"content":"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,363],"content":"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.","nodes":[{"content":"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.","pos":[0,363],"nodes":[{"content":"Do not use this method to generate array types, pointer types, or byref types.","pos":[0,78]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName&gt;</ph> methods instead.","pos":[79,363],"source":" Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead."}]}]},{"pos":[371,900],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[169984,170890],"yaml":true,"extradata":"MT"},{"content":"The name of the <xref href=\"System.Type\"></xref> to get.","nodes":[{"pos":[0,56],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to get.","source":"The name of the <xref href=\"System.Type\"></xref> to get."}],"pos":[171109,171166],"yaml":true},{"content":"The requested type, if the type is defined in this module; otherwise, `null`.","nodes":[{"pos":[0,77],"content":"The requested type, if the type is defined in this module; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"The requested type, if the type is defined in this module; otherwise, `null`."}],"pos":[171221,171299],"yaml":true},{"content":"Length of <code>className</code> is zero or is greater than 1023.","nodes":[{"pos":[0,65],"content":"Length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">className</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero or is greater than 1023.","source":"Length of <code>className</code> is zero or is greater than 1023."}],"pos":[171465,171531],"yaml":true},{"content":"<code>className</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;className&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>className</code> is `null`."}],"pos":[171633,171667],"yaml":true},{"content":"The requested <xref href=\"System.Type\"></xref> is non-public and the caller does not have <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref> to reflect non-public objects outside the current assembly.","nodes":[{"pos":[0,219],"content":"The requested <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is non-public and the caller does not have <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.ReflectionPermission\"&gt;&lt;/xref&gt;</ph> to reflect non-public objects outside the current assembly.","source":"The requested <xref href=\"System.Type\"></xref> is non-public and the caller does not have <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref> to reflect non-public objects outside the current assembly."}],"pos":[171779,171999],"yaml":true},{"content":"A class initializer is invoked and throws an exception.","nodes":[{"pos":[0,55],"content":"A class initializer is invoked and throws an exception.","nodes":[{"content":"A class initializer is invoked and throws an exception.","pos":[0,55]}]}],"pos":[172131,172187],"yaml":true},{"content":"An error is encountered while loading the <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,75],"content":"An error is encountered while loading the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"An error is encountered while loading the <xref href=\"System.Type\"></xref>."}],"pos":[172281,172357],"yaml":true},{"content":"Gets the named type defined in the module, optionally ignoring the case of the type name.","nodes":[{"pos":[0,89],"content":"Gets the named type defined in the module, optionally ignoring the case of the type name.","nodes":[{"content":"Gets the named type defined in the module, optionally ignoring the case of the type name.","pos":[0,89]}]}],"pos":[173564,173654],"yaml":true},{"content":"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,363],"content":"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.","nodes":[{"content":"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.","pos":[0,363],"nodes":[{"content":"Do not use this method to generate array types, pointer types, or byref types.","pos":[0,78]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName&gt;</ph> methods instead.","pos":[79,363],"source":" Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead."}]}]},{"pos":[371,900],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[173665,174571],"yaml":true,"extradata":"MT"},{"content":"The name of the <xref href=\"System.Type\"></xref> to get.","nodes":[{"pos":[0,56],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to get.","source":"The name of the <xref href=\"System.Type\"></xref> to get."}],"pos":[174807,174864],"yaml":true},{"content":"If `true`, the search is case-insensitive. If `false`, the search is case-sensitive.","nodes":[{"pos":[0,84],"content":"If `true`, the search is case-insensitive. If `false`, the search is case-sensitive.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the search is case-insensitive.","pos":[0,42],"source":"If `true`, the search is case-insensitive."},{"content":"If <ph id=\"ph1\">`false`</ph>, the search is case-sensitive.","pos":[43,84],"source":" If `false`, the search is case-sensitive."}]}],"pos":[174931,175016],"yaml":true},{"content":"The requested type, if the type is defined in this module; otherwise, `null`.","nodes":[{"pos":[0,77],"content":"The requested type, if the type is defined in this module; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"The requested type, if the type is defined in this module; otherwise, `null`."}],"pos":[175071,175149],"yaml":true},{"content":"Length of <code>className</code> is zero or is greater than 1023.","nodes":[{"pos":[0,65],"content":"Length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">className</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero or is greater than 1023.","source":"Length of <code>className</code> is zero or is greater than 1023."}],"pos":[175315,175381],"yaml":true},{"content":"<code>className</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;className&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>className</code> is `null`."}],"pos":[175483,175517],"yaml":true},{"content":"The requested <xref href=\"System.Type\"></xref> is non-public and the caller does not have <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref> to reflect non-public objects outside the current assembly.","nodes":[{"pos":[0,219],"content":"The requested <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is non-public and the caller does not have <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.ReflectionPermission\"&gt;&lt;/xref&gt;</ph> to reflect non-public objects outside the current assembly.","source":"The requested <xref href=\"System.Type\"></xref> is non-public and the caller does not have <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref> to reflect non-public objects outside the current assembly."}],"pos":[175629,175849],"yaml":true},{"content":"A class initializer is invoked and throws an exception.","nodes":[{"pos":[0,55],"content":"A class initializer is invoked and throws an exception.","nodes":[{"content":"A class initializer is invoked and throws an exception.","pos":[0,55]}]}],"pos":[175981,176037],"yaml":true},{"content":"Gets the named type defined in the module, optionally ignoring the case of the type name. Optionally throws an exception if the type is not found.","nodes":[{"pos":[0,146],"content":"Gets the named type defined in the module, optionally ignoring the case of the type name. Optionally throws an exception if the type is not found.","nodes":[{"content":"Gets the named type defined in the module, optionally ignoring the case of the type name. Optionally throws an exception if the type is not found.","pos":[0,146],"nodes":[{"content":"Gets the named type defined in the module, optionally ignoring the case of the type name.","pos":[0,89]},{"content":"Optionally throws an exception if the type is not found.","pos":[90,146]}]}]}],"pos":[177316,177463],"yaml":true},{"content":"The `throwOnError` parameter only affects what happens when the type is not found. It does not affect any other exceptions that might be thrown. In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.  \n  \n Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,283],"content":"The `throwOnError` parameter only affects what happens when the type is not found. It does not affect any other exceptions that might be thrown. In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.","nodes":[{"content":"The <ph id=\"ph1\">`throwOnError`</ph> parameter only affects what happens when the type is not found.","pos":[0,82],"source":"The `throwOnError` parameter only affects what happens when the type is not found."},{"content":"It does not affect any other exceptions that might be thrown.","pos":[83,144]},{"content":"In particular, if the type is found but cannot be loaded, <ph id=\"ph1\">&lt;xref:System.TypeLoadException&gt;</ph> can be thrown even if <ph id=\"ph2\">`throwOnError`</ph> is <ph id=\"ph3\">`false`</ph>.","pos":[145,283],"source":" In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`."}]},{"pos":[290,653],"content":"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.","nodes":[{"content":"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.","pos":[0,363],"nodes":[{"content":"Do not use this method to generate array types, pointer types, or byref types.","pos":[0,78]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName&gt;</ph> methods instead.","pos":[79,363],"source":" Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead."}]}]},{"pos":[661,1190],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[177474,178672],"yaml":true,"extradata":"MT"},{"content":"The name of the <xref href=\"System.Type\"></xref> to get.","nodes":[{"pos":[0,56],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to get.","source":"The name of the <xref href=\"System.Type\"></xref> to get."}],"pos":[178927,178984],"yaml":true},{"content":"`true` to throw an exception if the type cannot be found; `false` to return `null`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> to throw an exception if the type cannot be found; <ph id=\"ph2\">`false`</ph> to return <ph id=\"ph3\">`null`</ph>.","source":"`true` to throw an exception if the type cannot be found; `false` to return `null`."}],"pos":[179053,179139],"yaml":true},{"content":"If `true`, the search is case-insensitive. If `false`, the search is case-sensitive.","nodes":[{"pos":[0,84],"content":"If `true`, the search is case-insensitive. If `false`, the search is case-sensitive.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the search is case-insensitive.","pos":[0,42],"source":"If `true`, the search is case-insensitive."},{"content":"If <ph id=\"ph1\">`false`</ph>, the search is case-sensitive.","pos":[43,84],"source":" If `false`, the search is case-sensitive."}]}],"pos":[179206,179291],"yaml":true},{"content":"The specified type, if the type is declared in this module; otherwise, `null`.","nodes":[{"pos":[0,78],"content":"The specified type, if the type is declared in this module; otherwise, <ph id=\"ph1\">`null`</ph>.","source":"The specified type, if the type is declared in this module; otherwise, `null`."}],"pos":[179346,179425],"yaml":true},{"content":"Length of <code>className</code> is zero or is greater than 1023.","nodes":[{"pos":[0,65],"content":"Length of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">className</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero or is greater than 1023.","source":"Length of <code>className</code> is zero or is greater than 1023."}],"pos":[179591,179657],"yaml":true},{"content":"<code>className</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;className&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>className</code> is `null`."}],"pos":[179759,179793],"yaml":true},{"content":"The requested <xref href=\"System.Type\"></xref> is non-public and the caller does not have <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref> to reflect non-public objects outside the current assembly.","nodes":[{"pos":[0,219],"content":"The requested <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is non-public and the caller does not have <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.ReflectionPermission\"&gt;&lt;/xref&gt;</ph> to reflect non-public objects outside the current assembly.","source":"The requested <xref href=\"System.Type\"></xref> is non-public and the caller does not have <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref> to reflect non-public objects outside the current assembly."}],"pos":[179905,180125],"yaml":true},{"content":"A class initializer is invoked and throws an exception.","nodes":[{"pos":[0,55],"content":"A class initializer is invoked and throws an exception.","nodes":[{"content":"A class initializer is invoked and throws an exception.","pos":[0,55]}]}],"pos":[180257,180313],"yaml":true},{"content":"<code>throwOnError</code> is `true` and the specified type is not found.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">&lt;code&gt;throwOnError&lt;/code&gt;</ph> is <ph id=\"ph2\">`true`</ph> and the specified type is not found.","source":"<code>throwOnError</code> is `true` and the specified type is not found."}],"pos":[180407,180480],"yaml":true},{"content":"Returns all the classes defined within this module.","nodes":[{"pos":[0,51],"content":"Returns all the classes defined within this module.","nodes":[{"content":"Returns all the classes defined within this module.","pos":[0,51]}]}],"pos":[181558,181610],"yaml":true},{"content":"`ReflectionTypeLoadException` is a special class load exception. The `ReflectionTypeLoadException.Types` property contains the array of classes that were defined in the module and loaded. This array can contain some null values. The `ReflectionTypeLoadException.LoaderExceptions` property is an array of exceptions that represent the exceptions that were thrown by the class loader. The holes in the class array line up with the exceptions.  \n  \n For example, if the class initializers of one of the classes throws an exception while it is being loaded, a `TargetInvocationException` is stored in the corresponding element of the `LoaderExceptions` array.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,440],"content":"`ReflectionTypeLoadException` is a special class load exception. The `ReflectionTypeLoadException.Types` property contains the array of classes that were defined in the module and loaded. This array can contain some null values. The `ReflectionTypeLoadException.LoaderExceptions` property is an array of exceptions that represent the exceptions that were thrown by the class loader. The holes in the class array line up with the exceptions.","nodes":[{"content":"<ph id=\"ph1\">`ReflectionTypeLoadException`</ph> is a special class load exception.","pos":[0,64],"source":"`ReflectionTypeLoadException` is a special class load exception."},{"content":"The <ph id=\"ph1\">`ReflectionTypeLoadException.Types`</ph> property contains the array of classes that were defined in the module and loaded.","pos":[65,187],"source":" The `ReflectionTypeLoadException.Types` property contains the array of classes that were defined in the module and loaded."},{"content":"This array can contain some null values.","pos":[188,228]},{"content":"The <ph id=\"ph1\">`ReflectionTypeLoadException.LoaderExceptions`</ph> property is an array of exceptions that represent the exceptions that were thrown by the class loader.","pos":[229,382],"source":" The `ReflectionTypeLoadException.LoaderExceptions` property is an array of exceptions that represent the exceptions that were thrown by the class loader."},{"content":"The holes in the class array line up with the exceptions.","pos":[383,440]}]},{"pos":[447,655],"content":"For example, if the class initializers of one of the classes throws an exception while it is being loaded, a <ph id=\"ph1\">`TargetInvocationException`</ph> is stored in the corresponding element of the <ph id=\"ph2\">`LoaderExceptions`</ph> array.","source":"For example, if the class initializers of one of the classes throws an exception while it is being loaded, a `TargetInvocationException` is stored in the corresponding element of the `LoaderExceptions` array."},{"pos":[663,1192],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[181621,182821],"yaml":true,"extradata":"MT"},{"content":"An array that contains the types defined within the module that is reflected by this instance.","nodes":[{"pos":[0,94],"content":"An array that contains the types defined within the module that is reflected by this instance.","nodes":[{"content":"An array that contains the types defined within the module that is reflected by this instance.","pos":[0,94]}]}],"pos":[182956,183051],"yaml":true},{"content":"One or more classes in a module could not be loaded.","nodes":[{"pos":[0,52],"content":"One or more classes in a module could not be loaded.","nodes":[{"content":"One or more classes in a module could not be loaded.","pos":[0,52]}]}],"pos":[183260,183313],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[183425,183475],"yaml":true},{"content":"Returns the token used to identify the type with the specified name.","nodes":[{"pos":[0,68],"content":"Returns the token used to identify the type with the specified name.","nodes":[{"content":"Returns the token used to identify the type with the specified name.","pos":[0,68]}]}],"pos":[184565,184634],"yaml":true},{"content":"This method is useful for clients of the <xref:System.Reflection.Emit.MethodRental> class who want to directly modify the body of a method.","nodes":[{"pos":[0,139],"content":"This method is useful for clients of the <xref:System.Reflection.Emit.MethodRental> class who want to directly modify the body of a method.","nodes":[{"content":"This method is useful for clients of the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.MethodRental&gt;</ph> class who want to directly modify the body of a method.","pos":[0,139],"source":"This method is useful for clients of the <xref:System.Reflection.Emit.MethodRental> class who want to directly modify the body of a method."}]}],"pos":[184645,184785],"yaml":true,"extradata":"MT"},{"content":"The name of the class, including the namespace.","nodes":[{"pos":[0,47],"content":"The name of the class, including the namespace.","nodes":[{"content":"The name of the class, including the namespace.","pos":[0,47]}]}],"pos":[184952,185000],"yaml":true},{"content":"The token used to identify the type with the specified name within this module.","nodes":[{"pos":[0,79],"content":"The token used to identify the type with the specified name within this module.","nodes":[{"content":"The token used to identify the type with the specified name within this module.","pos":[0,79]}]}],"pos":[185076,185156],"yaml":true},{"content":"<code>name</code> is the empty string (\"\").  \n  \n -or-  \n  \n <code>name</code> represents a `ByRef` type.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is the empty string (\"\").","source":"<code>name</code> is the empty string (\"\")."},{"pos":[50,54],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[61,105],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> represents a <ph id=\"ph2\">`ByRef`</ph> type.","source":"<code>name</code> represents a `ByRef` type."}],"pos":[185327,185441],"yaml":true},{"content":"<code>name</code> is `null`.  \n  \n -or-  \n  \n The type specified by <code>name</code> could not be found.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>name</code> is `null`."},{"pos":[35,39],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[46,105],"content":"The type specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> could not be found.","source":"The type specified by <code>name</code> could not be found."}],"pos":[185543,185655],"yaml":true},{"content":"This is a non-transient module that references a transient module.","nodes":[{"pos":[0,66],"content":"This is a non-transient module that references a transient module.","nodes":[{"content":"This is a non-transient module that references a transient module.","pos":[0,66]}]}],"pos":[185765,185832],"yaml":true},{"content":"Returns the token used to identify the specified type within this module.","nodes":[{"pos":[0,73],"content":"Returns the token used to identify the specified type within this module.","nodes":[{"content":"Returns the token used to identify the specified type within this module.","pos":[0,73]}]}],"pos":[186910,186984],"yaml":true},{"content":"Tokens are used in Microsoft intermediate language (MSIL) instructions to identify objects. Tokens are relative to the module in which they are contained. For example, the token value for `String` is likely to be different from module to module. When `GetTypeToken` is invoked, a reference is added to the module. The reference becomes a permanent part of the module; multiple calls with the same argument have no additional effect.","nodes":[{"pos":[0,432],"content":"Tokens are used in Microsoft intermediate language (MSIL) instructions to identify objects. Tokens are relative to the module in which they are contained. For example, the token value for `String` is likely to be different from module to module. When `GetTypeToken` is invoked, a reference is added to the module. The reference becomes a permanent part of the module; multiple calls with the same argument have no additional effect.","nodes":[{"content":"Tokens are used in Microsoft intermediate language (MSIL) instructions to identify objects.","pos":[0,91]},{"content":"Tokens are relative to the module in which they are contained.","pos":[92,154]},{"content":"For example, the token value for <ph id=\"ph1\">`String`</ph> is likely to be different from module to module.","pos":[155,245],"source":" For example, the token value for `String` is likely to be different from module to module."},{"content":"When <ph id=\"ph1\">`GetTypeToken`</ph> is invoked, a reference is added to the module.","pos":[246,313],"source":" When `GetTypeToken` is invoked, a reference is added to the module."},{"content":"The reference becomes a permanent part of the module; multiple calls with the same argument have no additional effect.","pos":[314,432]}]}],"pos":[186995,187428],"yaml":true,"extradata":"MT"},{"content":"The type object that represents the class type.","nodes":[{"pos":[0,47],"content":"The type object that represents the class type.","nodes":[{"content":"The type object that represents the class type.","pos":[0,47]}]}],"pos":[187591,187639],"yaml":true},{"content":"The token used to identify the given type within this module.","nodes":[{"pos":[0,61],"content":"The token used to identify the given type within this module.","nodes":[{"content":"The token used to identify the given type within this module.","pos":[0,61]}]}],"pos":[187715,187777],"yaml":true},{"content":"<code>type</code> is a `ByRef` type.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is a <ph id=\"ph2\">`ByRef`</ph> type.","source":"<code>type</code> is a `ByRef` type."}],"pos":[187948,187985],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[188087,188116],"yaml":true},{"content":"This is a non-transient module that references a transient module.","nodes":[{"pos":[0,66],"content":"This is a non-transient module that references a transient module.","nodes":[{"content":"This is a non-transient module that references a transient module.","pos":[0,66]}]}],"pos":[188226,188293],"yaml":true},{"content":"Returns a value that indicates whether the specified attribute type has been applied to this module.","nodes":[{"pos":[0,100],"content":"Returns a value that indicates whether the specified attribute type has been applied to this module.","nodes":[{"content":"Returns a value that indicates whether the specified attribute type has been applied to this module.","pos":[0,100]}]}],"pos":[189425,189526],"yaml":true},{"content":"The type of custom attribute to test for.","nodes":[{"pos":[0,41],"content":"The type of custom attribute to test for.","nodes":[{"content":"The type of custom attribute to test for.","pos":[0,41]}]}],"pos":[189699,189741],"yaml":true},{"content":"This argument is ignored for objects of this type.","nodes":[{"pos":[0,50],"content":"This argument is ignored for objects of this type.","nodes":[{"content":"This argument is ignored for objects of this type.","pos":[0,50]}]}],"pos":[189805,189856],"yaml":true},{"content":"`true` if one or more instances of <code>attributeType</code> have been applied to this module; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if one or more instances of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">attributeType</ph><ept id=\"p1\">&lt;/code&gt;</ept> have been applied to this module; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if one or more instances of <code>attributeType</code> have been applied to this module; otherwise, `false`."}],"pos":[189914,190032],"yaml":true},{"content":"<code>attributeType</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>attributeType</code> is `null`."}],"pos":[190208,190246],"yaml":true},{"content":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime. For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object.","nodes":[{"pos":[0,209],"content":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime. For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object supplied by the runtime.","pos":[0,100],"source":"<code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime."},{"content":"For example, <ph id=\"ph1\">&lt;code&gt;attributeType&lt;/code&gt;</ph> is a <ph id=\"ph2\">&lt;xref href=\"System.Reflection.Emit.TypeBuilder\"&gt;&lt;/xref&gt;</ph> object.","pos":[101,209],"source":" For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object."}]}],"pos":[190340,190550],"yaml":true},{"content":"Gets a value indicating whether the object is a resource.","nodes":[{"pos":[0,57],"content":"Gets a value indicating whether the object is a resource.","nodes":[{"content":"Gets a value indicating whether the object is a resource.","pos":[0,57]}]}],"pos":[191565,191623],"yaml":true},{"content":"`true` if the object is a resource; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the object is a resource; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the object is a resource; otherwise, `false`."}],"pos":[191759,191817],"yaml":true},{"content":"Returns a value that indicates whether this dynamic module is transient.","nodes":[{"pos":[0,72],"content":"Returns a value that indicates whether this dynamic module is transient.","nodes":[{"content":"Returns a value that indicates whether this dynamic module is transient.","pos":[0,72]}]}],"pos":[192916,192989],"yaml":true},{"content":"`true` if this dynamic module is transient; otherwise, `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if this dynamic module is transient; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this dynamic module is transient; otherwise, `false`."}],"pos":[193117,193183],"yaml":true},{"content":"Gets the metadata stream version.","nodes":[{"pos":[0,33],"content":"Gets the metadata stream version.","nodes":[{"content":"Gets the metadata stream version.","pos":[0,33]}]}],"pos":[194303,194337],"yaml":true},{"content":"> [!NOTE]\n>  For more information on the metadata header, see \"Partition II: Metadata Definition and Semantics\" in the Common Language Infrastructure (CLI) documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","nodes":[{"pos":[2,453],"content":"[!NOTE]\n For more information on the metadata header, see \"Partition II: Metadata Definition and Semantics\" in the Common Language Infrastructure (CLI) documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","leadings":["","> "],"nodes":[{"content":" For more information on the metadata header, see \"Partition II: Metadata Definition and Semantics\" in the Common Language Infrastructure (CLI) documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","pos":[8,449],"nodes":[{"content":"For more information on the metadata header, see \"Partition II: Metadata Definition and Semantics\" in the Common Language Infrastructure (CLI) documentation.","pos":[1,158]},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the ECMA Web site.","pos":[159,441],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site."}]}]}],"pos":[194348,194814],"yaml":true,"extradata":"MT"},{"content":"A 32-bit integer representing the metadata stream version. The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.","nodes":[{"pos":[0,183],"content":"A 32-bit integer representing the metadata stream version. The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.","nodes":[{"content":"A 32-bit integer representing the metadata stream version. The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.","pos":[0,183],"nodes":[{"content":"A 32-bit integer representing the metadata stream version.","pos":[0,58]},{"content":"The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.","pos":[59,183]}]}]}],"pos":[194938,195122],"yaml":true},{"content":"Gets a token that identifies the current dynamic module in metadata.","nodes":[{"pos":[0,68],"content":"Gets a token that identifies the current dynamic module in metadata.","nodes":[{"content":"Gets a token that identifies the current dynamic module in metadata.","pos":[0,68]}]}],"pos":[196150,196219],"yaml":true},{"content":"The tokens obtained using this property can be passed to the unmanaged Reflection API. For more information, see [Unmanaged Reflection API](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).  \n  \n> [!NOTE]\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","nodes":[{"pos":[0,210],"content":"The tokens obtained using this property can be passed to the unmanaged Reflection API. For more information, see [Unmanaged Reflection API](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).","nodes":[{"content":"The tokens obtained using this property can be passed to the unmanaged Reflection API.","pos":[0,86]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Unmanaged Reflection API<ept id=\"p1\">](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8)</ept>.","pos":[87,210],"source":" For more information, see [Unmanaged Reflection API](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8)."}]},{"pos":[218,679],"content":"[!NOTE]\n Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","leadings":["","> "],"nodes":[{"content":" Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","pos":[8,459],"nodes":[{"content":"Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\".","pos":[1,168]},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the ECMA Web site.","pos":[169,451],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site."}]}]}],"pos":[196230,196917],"yaml":true,"extradata":"MT"},{"content":"An integer token that identifies the current module in metadata.","nodes":[{"pos":[0,64],"content":"An integer token that identifies the current module in metadata.","nodes":[{"content":"An integer token that identifies the current module in metadata.","pos":[0,64]}]}],"pos":[197039,197104],"yaml":true},{"content":"Gets a universally unique identifier (UUID) that can be used to distinguish between two versions of a module.","nodes":[{"pos":[0,109],"content":"Gets a universally unique identifier (UUID) that can be used to distinguish between two versions of a module.","nodes":[{"content":"Gets a universally unique identifier (UUID) that can be used to distinguish between two versions of a module.","pos":[0,109]}]}],"pos":[198226,198336],"yaml":true},{"content":"In unmanaged metadata, the GUID returned by the <xref:System.Reflection.Module.ModuleVersionId%2A> property is referred to as the `mvid`, and is stored in the GUID heap.  \n  \n> [!NOTE]\n>  More information about metadata can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","nodes":[{"pos":[0,169],"content":"In unmanaged metadata, the GUID returned by the <ph id=\"ph1\">&lt;xref:System.Reflection.Module.ModuleVersionId%2A&gt;</ph> property is referred to as the <ph id=\"ph2\">`mvid`</ph>, and is stored in the GUID heap.","source":"In unmanaged metadata, the GUID returned by the <xref:System.Reflection.Module.ModuleVersionId%2A> property is referred to as the `mvid`, and is stored in the GUID heap."},{"pos":[177,636],"content":"[!NOTE]\n More information about metadata can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","leadings":["","> "],"nodes":[{"content":" More information about metadata can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","pos":[8,457],"nodes":[{"content":"More information about metadata can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\".","pos":[1,166]},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the ECMA Web site.","pos":[167,449],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site."}]}]}],"pos":[198347,198991],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Guid\"></xref> that can be used to distinguish between two versions of a module.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> that can be used to distinguish between two versions of a module.","source":"A <xref href=\"System.Guid\"></xref> that can be used to distinguish between two versions of a module."}],"pos":[199115,199216],"yaml":true},{"content":"A string that indicates that this is an in-memory module.","nodes":[{"pos":[0,57],"content":"A string that indicates that this is an in-memory module.","nodes":[{"content":"A string that indicates that this is an in-memory module.","pos":[0,57]}]}],"pos":[200301,200359],"yaml":true},{"content":"The name of a dynamic module cannot be obtained until the module has been saved and reloaded from disk.","nodes":[{"pos":[0,103],"content":"The name of a dynamic module cannot be obtained until the module has been saved and reloaded from disk.","nodes":[{"content":"The name of a dynamic module cannot be obtained until the module has been saved and reloaded from disk.","pos":[0,103]}]}],"pos":[200370,200474],"yaml":true,"extradata":"MT"},{"content":"Text that indicates that this is an in-memory module.","nodes":[{"pos":[0,53],"content":"Text that indicates that this is an in-memory module.","nodes":[{"content":"Text that indicates that this is an in-memory module.","pos":[0,53]}]}],"pos":[200591,200645],"yaml":true},{"content":"Returns the field identified by the specified metadata token, in the context defined by the specified generic type parameters.","nodes":[{"pos":[0,126],"content":"Returns the field identified by the specified metadata token, in the context defined by the specified generic type parameters.","nodes":[{"content":"Returns the field identified by the specified metadata token, in the context defined by the specified generic type parameters.","pos":[0,126]}]}],"pos":[202029,202156],"yaml":true},{"content":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. It is always safe to provide these arguments, even when they are not needed.  \n  \n> [!NOTE]\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.  \n  \n For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.","nodes":[{"pos":[0,497],"content":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. It is always safe to provide these arguments, even when they are not needed.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method on the type where <ph id=\"ph2\">`metadataToken`</ph> is in scope to obtain an array of generic type arguments for <ph id=\"ph3\">`genericTypeArguments`</ph>.","pos":[0,200],"source":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method on the method where <ph id=\"ph2\">`metadataToken`</ph> is in scope to obtain an array of generic type arguments for <ph id=\"ph3\">`genericTypeArguments`</ph>.","pos":[201,420],"source":" Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`."},{"content":"It is always safe to provide these arguments, even when they are not needed.","pos":[421,497]}]},{"pos":[505,966],"content":"[!NOTE]\n Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","leadings":["","> "],"nodes":[{"content":" Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","pos":[8,459],"nodes":[{"content":"Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\".","pos":[1,168]},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the ECMA Web site.","pos":[169,451],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site."}]}]},{"pos":[973,1303],"content":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.","nodes":[{"content":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <ph id=\"ph1\">&lt;xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName&gt;</ph> method.","pos":[0,330],"source":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method."}]}],"pos":[202167,203480],"yaml":true,"extradata":"MT"},{"content":"A metadata token that identifies a field in the module.","nodes":[{"pos":[0,55],"content":"A metadata token that identifies a field in the module.","nodes":[{"content":"A metadata token that identifies a field in the module.","pos":[0,55]}]}],"pos":[203725,203781],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.","nodes":[{"pos":[0,172],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the generic type arguments of the type where the token is in scope, or <ph id=\"ph2\">`null`</ph> if that type is not generic.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic."}],"pos":[203857,204030],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.","nodes":[{"pos":[0,176],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the generic type arguments of the method where the token is in scope, or <ph id=\"ph2\">`null`</ph> if that method is not generic.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic."}],"pos":[204108,204285],"yaml":true},{"content":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object representing the field that is identified by the specified metadata token.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.FieldInfo\"&gt;&lt;/xref&gt;</ph> object representing the field that is identified by the specified metadata token.","source":"A <xref href=\"System.Reflection.FieldInfo\"></xref> object representing the field that is identified by the specified metadata token."}],"pos":[204356,204489],"yaml":true},{"content":"<code>metadataToken</code> is not a token for a field in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> identifies a field whose parent `TypeSpec` has a signature containing element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a field in the scope of the current module.","source":"<code>metadataToken</code> is not a token for a field in the scope of the current module."},{"pos":[96,100],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[107,465],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> identifies a field whose parent <ph id=\"ph2\">`TypeSpec`</ph> has a signature containing element type <ph id=\"ph3\">`var`</ph> (a type parameter of a generic type) or <ph id=\"ph4\">`mvar`</ph> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <ph id=\"ph5\">&lt;code&gt;genericTypeArguments&lt;/code&gt;</ph> and <ph id=\"ph6\">&lt;code&gt;genericMethodArguments&lt;/code&gt;</ph>.","source":"<code>metadataToken</code> identifies a field whose parent `TypeSpec` has a signature containing element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>."}],"pos":[204660,205132],"yaml":true},{"content":"<code>metadataToken</code> is not a valid token in the scope of the current module.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a valid token in the scope of the current module.","source":"<code>metadataToken</code> is not a valid token in the scope of the current module."}],"pos":[205246,205330],"yaml":true},{"content":"Returns the type or member identified by the specified metadata token, in the context defined by the specified generic type parameters.","nodes":[{"pos":[0,135],"content":"Returns the type or member identified by the specified metadata token, in the context defined by the specified generic type parameters.","nodes":[{"content":"Returns the type or member identified by the specified metadata token, in the context defined by the specified generic type parameters.","pos":[0,135]}]}],"pos":[206552,206688],"yaml":true},{"content":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. It is always safe to provide these arguments, even when they are not needed.  \n  \n> [!NOTE]\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.  \n  \n For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.","nodes":[{"pos":[0,497],"content":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. It is always safe to provide these arguments, even when they are not needed.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method on the type where <ph id=\"ph2\">`metadataToken`</ph> is in scope to obtain an array of generic type arguments for <ph id=\"ph3\">`genericTypeArguments`</ph>.","pos":[0,200],"source":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method on the method where <ph id=\"ph2\">`metadataToken`</ph> is in scope to obtain an array of generic type arguments for <ph id=\"ph3\">`genericTypeArguments`</ph>.","pos":[201,420],"source":" Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`."},{"content":"It is always safe to provide these arguments, even when they are not needed.","pos":[421,497]}]},{"pos":[505,966],"content":"[!NOTE]\n Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","leadings":["","> "],"nodes":[{"content":" Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","pos":[8,459],"nodes":[{"content":"Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\".","pos":[1,168]},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the ECMA Web site.","pos":[169,451],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site."}]}]},{"pos":[973,1303],"content":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.","nodes":[{"content":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <ph id=\"ph1\">&lt;xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName&gt;</ph> method.","pos":[0,330],"source":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method."}]}],"pos":[206699,208012],"yaml":true,"extradata":"MT"},{"content":"A metadata token that identifies a type or member in the module.","nodes":[{"pos":[0,64],"content":"A metadata token that identifies a type or member in the module.","nodes":[{"content":"A metadata token that identifies a type or member in the module.","pos":[0,64]}]}],"pos":[208259,208324],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.","nodes":[{"pos":[0,172],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the generic type arguments of the type where the token is in scope, or <ph id=\"ph2\">`null`</ph> if that type is not generic.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic."}],"pos":[208400,208573],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.","nodes":[{"pos":[0,176],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the generic type arguments of the method where the token is in scope, or <ph id=\"ph2\">`null`</ph> if that method is not generic.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic."}],"pos":[208651,208828],"yaml":true},{"content":"A <xref href=\"System.Reflection.MemberInfo\"></xref> object representing the type or member that is identified by the specified metadata token.","nodes":[{"pos":[0,142],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MemberInfo\"&gt;&lt;/xref&gt;</ph> object representing the type or member that is identified by the specified metadata token.","source":"A <xref href=\"System.Reflection.MemberInfo\"></xref> object representing the type or member that is identified by the specified metadata token."}],"pos":[208900,209043],"yaml":true},{"content":"<code>metadataToken</code> is not a token for a type or member in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is a `MethodSpec` or `TypeSpec` whose signature contains element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>.  \n  \n -or-  \n  \n <code>metadataToken</code> identifies a property or event.","nodes":[{"pos":[0,98],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a type or member in the scope of the current module.","source":"<code>metadataToken</code> is not a token for a type or member in the scope of the current module."},{"pos":[105,109],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[116,461],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is a <ph id=\"ph2\">`MethodSpec`</ph> or <ph id=\"ph3\">`TypeSpec`</ph> whose signature contains element type <ph id=\"ph4\">`var`</ph> (a type parameter of a generic type) or <ph id=\"ph5\">`mvar`</ph> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <ph id=\"ph6\">&lt;code&gt;genericTypeArguments&lt;/code&gt;</ph> and <ph id=\"ph7\">&lt;code&gt;genericMethodArguments&lt;/code&gt;</ph>.","source":"<code>metadataToken</code> is a `MethodSpec` or `TypeSpec` whose signature contains element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>."},{"pos":[468,472],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[479,537],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> identifies a property or event.","source":"<code>metadataToken</code> identifies a property or event."}],"pos":[209215,209763],"yaml":true},{"content":"<code>metadataToken</code> is not a valid token in the scope of the current module.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a valid token in the scope of the current module.","source":"<code>metadataToken</code> is not a valid token in the scope of the current module."}],"pos":[209877,209961],"yaml":true},{"content":"Returns the method or constructor identified by the specified metadata token, in the context defined by the specified generic type parameters.","nodes":[{"pos":[0,142],"content":"Returns the method or constructor identified by the specified metadata token, in the context defined by the specified generic type parameters.","nodes":[{"content":"Returns the method or constructor identified by the specified metadata token, in the context defined by the specified generic type parameters.","pos":[0,142]}]}],"pos":[211183,211326],"yaml":true},{"content":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericMethodArguments`. It is always safe to provide these arguments, even when they are not needed.  \n  \n> [!NOTE]\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.  \n  \n For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.","nodes":[{"pos":[0,499],"content":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericMethodArguments`. It is always safe to provide these arguments, even when they are not needed.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method on the type where <ph id=\"ph2\">`metadataToken`</ph> is in scope to obtain an array of generic type arguments for <ph id=\"ph3\">`genericTypeArguments`</ph>.","pos":[0,200],"source":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method on the method where <ph id=\"ph2\">`metadataToken`</ph> is in scope to obtain an array of generic type arguments for <ph id=\"ph3\">`genericMethodArguments`</ph>.","pos":[201,422],"source":" Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericMethodArguments`."},{"content":"It is always safe to provide these arguments, even when they are not needed.","pos":[423,499]}]},{"pos":[507,968],"content":"[!NOTE]\n Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","leadings":["","> "],"nodes":[{"content":" Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","pos":[8,459],"nodes":[{"content":"Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\".","pos":[1,168]},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the ECMA Web site.","pos":[169,451],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site."}]}]},{"pos":[975,1305],"content":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.","nodes":[{"content":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <ph id=\"ph1\">&lt;xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName&gt;</ph> method.","pos":[0,330],"source":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method."}]}],"pos":[211337,212652],"yaml":true,"extradata":"MT"},{"content":"A metadata token that identifies a method or constructor in the module.","nodes":[{"pos":[0,71],"content":"A metadata token that identifies a method or constructor in the module.","nodes":[{"content":"A metadata token that identifies a method or constructor in the module.","pos":[0,71]}]}],"pos":[212899,212971],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.","nodes":[{"pos":[0,172],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the generic type arguments of the type where the token is in scope, or <ph id=\"ph2\">`null`</ph> if that type is not generic.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic."}],"pos":[213047,213220],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.","nodes":[{"pos":[0,176],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the generic type arguments of the method where the token is in scope, or <ph id=\"ph2\">`null`</ph> if that method is not generic.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic."}],"pos":[213298,213475],"yaml":true},{"content":"A <xref href=\"System.Reflection.MethodBase\"></xref> object representing the method that is identified by the specified metadata token.","nodes":[{"pos":[0,134],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Reflection.MethodBase\"&gt;&lt;/xref&gt;</ph> object representing the method that is identified by the specified metadata token.","source":"A <xref href=\"System.Reflection.MethodBase\"></xref> object representing the method that is identified by the specified metadata token."}],"pos":[213547,213682],"yaml":true},{"content":"<code>metadataToken</code> is not a token for a method or constructor in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is a `MethodSpec` whose signature contains element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a method or constructor in the scope of the current module.","source":"<code>metadataToken</code> is not a token for a method or constructor in the scope of the current module."},{"pos":[112,116],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[123,454],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is a <ph id=\"ph2\">`MethodSpec`</ph> whose signature contains element type <ph id=\"ph3\">`var`</ph> (a type parameter of a generic type) or <ph id=\"ph4\">`mvar`</ph> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <ph id=\"ph5\">&lt;code&gt;genericTypeArguments&lt;/code&gt;</ph> and <ph id=\"ph6\">&lt;code&gt;genericMethodArguments&lt;/code&gt;</ph>.","source":"<code>metadataToken</code> is a `MethodSpec` whose signature contains element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>."}],"pos":[213854,214315],"yaml":true},{"content":"<code>metadataToken</code> is not a valid token in the scope of the current module.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a valid token in the scope of the current module.","source":"<code>metadataToken</code> is not a valid token in the scope of the current module."}],"pos":[214429,214513],"yaml":true},{"content":"Returns the signature blob identified by a metadata token.","nodes":[{"pos":[0,58],"content":"Returns the signature blob identified by a metadata token.","nodes":[{"content":"Returns the signature blob identified by a metadata token.","pos":[0,58]}]}],"pos":[215621,215680],"yaml":true},{"content":"> [!NOTE]\n>  Information about metadata tokens and signatures can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","nodes":[{"pos":[2,478],"content":"[!NOTE]\n Information about metadata tokens and signatures can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","leadings":["","> "],"nodes":[{"content":" Information about metadata tokens and signatures can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","pos":[8,474],"nodes":[{"content":"Information about metadata tokens and signatures can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\".","pos":[1,183]},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the ECMA Web site.","pos":[184,466],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site."}]}]}],"pos":[215691,216182],"yaml":true,"extradata":"MT"},{"content":"A metadata token that identifies a signature in the module.","nodes":[{"pos":[0,59],"content":"A metadata token that identifies a signature in the module.","nodes":[{"content":"A metadata token that identifies a signature in the module.","pos":[0,59]}]}],"pos":[216350,216410],"yaml":true},{"content":"An array of bytes representing the signature blob.","nodes":[{"pos":[0,50],"content":"An array of bytes representing the signature blob.","nodes":[{"content":"An array of bytes representing the signature blob.","pos":[0,50]}]}],"pos":[216467,216518],"yaml":true},{"content":"<code>metadataToken</code> is not a valid `MemberRef`, `MethodDef`, `TypeSpec`, signature, or `FieldDef` token in the scope of the current module.","nodes":[{"pos":[0,146],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">`MemberRef`</ph>, <ph id=\"ph3\">`MethodDef`</ph>, <ph id=\"ph4\">`TypeSpec`</ph>, signature, or <ph id=\"ph5\">`FieldDef`</ph> token in the scope of the current module.","source":"<code>metadataToken</code> is not a valid `MemberRef`, `MethodDef`, `TypeSpec`, signature, or `FieldDef` token in the scope of the current module."}],"pos":[216693,216840],"yaml":true},{"content":"<code>metadataToken</code> is not a valid token in the scope of the current module.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a valid token in the scope of the current module.","source":"<code>metadataToken</code> is not a valid token in the scope of the current module."}],"pos":[216954,217038],"yaml":true},{"content":"Returns the string identified by the specified metadata token.","nodes":[{"pos":[0,62],"content":"Returns the string identified by the specified metadata token.","nodes":[{"content":"Returns the string identified by the specified metadata token.","pos":[0,62]}]}],"pos":[218128,218191],"yaml":true},{"content":"> [!NOTE]\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","nodes":[{"pos":[2,463],"content":"[!NOTE]\n Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","leadings":["","> "],"nodes":[{"content":" Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","pos":[8,459],"nodes":[{"content":"Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\".","pos":[1,168]},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the ECMA Web site.","pos":[169,451],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site."}]}]}],"pos":[218202,218678],"yaml":true,"extradata":"MT"},{"content":"A metadata token that identifies a string in the string heap of the module.","nodes":[{"pos":[0,75],"content":"A metadata token that identifies a string in the string heap of the module.","nodes":[{"content":"A metadata token that identifies a string in the string heap of the module.","pos":[0,75]}]}],"pos":[218843,218919],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> containing a string value from the metadata string heap.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing a string value from the metadata string heap.","source":"A <xref href=\"System.String\"></xref> containing a string value from the metadata string heap."}],"pos":[218976,219070],"yaml":true},{"content":"<code>metadataToken</code> is not a token for a string in the scope of the current module.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a string in the scope of the current module.","source":"<code>metadataToken</code> is not a token for a string in the scope of the current module."}],"pos":[219242,219333],"yaml":true},{"content":"<code>metadataToken</code> is not a valid token in the scope of the current module.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a valid token in the scope of the current module.","source":"<code>metadataToken</code> is not a valid token in the scope of the current module."}],"pos":[219447,219531],"yaml":true},{"content":"Returns the type identified by the specified metadata token, in the context defined by the specified generic type parameters.","nodes":[{"pos":[0,125],"content":"Returns the type identified by the specified metadata token, in the context defined by the specified generic type parameters.","nodes":[{"content":"Returns the type identified by the specified metadata token, in the context defined by the specified generic type parameters.","pos":[0,125]}]}],"pos":[220741,220867],"yaml":true},{"content":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. It is always safe to provide these arguments, even when they are not needed.  \n  \n> [!NOTE]\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.  \n  \n For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.","nodes":[{"pos":[0,497],"content":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. It is always safe to provide these arguments, even when they are not needed.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Type.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method on the type where <ph id=\"ph2\">`metadataToken`</ph> is in scope to obtain an array of generic type arguments for <ph id=\"ph3\">`genericTypeArguments`</ph>.","pos":[0,200],"source":"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName&gt;</ph> method on the method where <ph id=\"ph2\">`metadataToken`</ph> is in scope to obtain an array of generic type arguments for <ph id=\"ph3\">`genericTypeArguments`</ph>.","pos":[201,420],"source":" Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`."},{"content":"It is always safe to provide these arguments, even when they are not needed.","pos":[421,497]}]},{"pos":[505,966],"content":"[!NOTE]\n Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","leadings":["","> "],"nodes":[{"content":" Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.","pos":[8,459],"nodes":[{"content":"Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\".","pos":[1,168]},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the ECMA Web site.","pos":[169,451],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site."}]}]},{"pos":[973,1303],"content":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.","nodes":[{"content":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <ph id=\"ph1\">&lt;xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName&gt;</ph> method.","pos":[0,330],"source":"For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method."}]}],"pos":[220878,222191],"yaml":true,"extradata":"MT"},{"content":"A metadata token that identifies a type in the module.","nodes":[{"pos":[0,54],"content":"A metadata token that identifies a type in the module.","nodes":[{"content":"A metadata token that identifies a type in the module.","pos":[0,54]}]}],"pos":[222412,222467],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.","nodes":[{"pos":[0,172],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the generic type arguments of the type where the token is in scope, or <ph id=\"ph2\">`null`</ph> if that type is not generic.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic."}],"pos":[222543,222716],"yaml":true},{"content":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.","nodes":[{"pos":[0,176],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects representing the generic type arguments of the method where the token is in scope, or <ph id=\"ph2\">`null`</ph> if that method is not generic.","source":"An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic."}],"pos":[222794,222971],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> object representing the type that is identified by the specified metadata token.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> object representing the type that is identified by the specified metadata token.","source":"A <xref href=\"System.Type\"></xref> object representing the type that is identified by the specified metadata token."}],"pos":[223026,223142],"yaml":true},{"content":"<code>metadataToken</code> is not a token for a type in the scope of the current module.  \n  \n -or-  \n  \n <code>metadataToken</code> is a `TypeSpec` whose signature contains element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a type in the scope of the current module.","source":"<code>metadataToken</code> is not a token for a type in the scope of the current module."},{"pos":[95,99],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[106,435],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is a <ph id=\"ph2\">`TypeSpec`</ph> whose signature contains element type <ph id=\"ph3\">`var`</ph> (a type parameter of a generic type) or <ph id=\"ph4\">`mvar`</ph> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <ph id=\"ph5\">&lt;code&gt;genericTypeArguments&lt;/code&gt;</ph> and <ph id=\"ph6\">&lt;code&gt;genericMethodArguments&lt;/code&gt;</ph>.","source":"<code>metadataToken</code> is a `TypeSpec` whose signature contains element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>."}],"pos":[223312,223754],"yaml":true},{"content":"<code>metadataToken</code> is not a valid token in the scope of the current module.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a valid token in the scope of the current module.","source":"<code>metadataToken</code> is not a valid token in the scope of the current module."}],"pos":[223868,223952],"yaml":true},{"content":"Gets a string that represents the name of the dynamic module.","nodes":[{"pos":[0,61],"content":"Gets a string that represents the name of the dynamic module.","nodes":[{"content":"Gets a string that represents the name of the dynamic module.","pos":[0,61]}]}],"pos":[224957,225019],"yaml":true},{"content":"The name of the dynamic module.","nodes":[{"pos":[0,31],"content":"The name of the dynamic module.","nodes":[{"content":"The name of the dynamic module.","pos":[0,31]}]}],"pos":[225141,225173],"yaml":true},{"content":"Applies a custom attribute to this module by using a custom attribute builder.","nodes":[{"pos":[0,78],"content":"Applies a custom attribute to this module by using a custom attribute builder.","nodes":[{"content":"Applies a custom attribute to this module by using a custom attribute builder.","pos":[0,78]}]}],"pos":[226547,226626],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[2,531],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[226637,227181],"yaml":true,"extradata":"MT"},{"content":"An instance of a helper class that specifies the custom attribute to apply.","nodes":[{"pos":[0,75],"content":"An instance of a helper class that specifies the custom attribute to apply.","nodes":[{"content":"An instance of a helper class that specifies the custom attribute to apply.","pos":[0,75]}]}],"pos":[227415,227491],"yaml":true},{"content":"<code>customBuilder</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;customBuilder&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>customBuilder</code> is `null`."}],"pos":[227676,227714],"yaml":true},{"content":"Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.","nodes":[{"pos":[0,120],"content":"Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.","nodes":[{"content":"Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.","pos":[0,120]}]}],"pos":[229156,229277],"yaml":true},{"content":"For more information about how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,478],"content":"For more information about how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.","nodes":[{"content":"For more information about how to format <ph id=\"ph1\">`binaryAttribute`</ph>, see the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\".","pos":[0,181],"source":"For more information about how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\"."},{"content":"The documentation is available online; see <bpt id=\"p1\">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id=\"p2\">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id=\"p2\">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.","pos":[182,478],"source":" The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site."}]},{"pos":[486,1015],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[229288,230311],"yaml":true,"extradata":"MT"},{"content":"The constructor for the custom attribute.","nodes":[{"pos":[0,41],"content":"The constructor for the custom attribute.","nodes":[{"content":"The constructor for the custom attribute.","pos":[0,41]}]}],"pos":[230591,230633],"yaml":true},{"content":"A byte BLOB representing the attribute.","nodes":[{"pos":[0,39],"content":"A byte BLOB representing the attribute.","nodes":[{"content":"A byte BLOB representing the attribute.","pos":[0,39]}]}],"pos":[230704,230744],"yaml":true},{"content":"<code>con</code> or <code>binaryAttribute</code> is `null`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;con&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;binaryAttribute&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>con</code> or <code>binaryAttribute</code> is `null`."}],"pos":[230929,230989],"yaml":true},{"content":"This method does nothing.","nodes":[{"pos":[0,25],"content":"This method does nothing.","nodes":[{"content":"This method does nothing.","pos":[0,25]}]}],"pos":[232410,232436],"yaml":true},{"content":"This method does nothing.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,25],"content":"This method does nothing.","nodes":[{"content":"This method does nothing.","pos":[0,25]}]},{"pos":[33,562],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[232447,233015],"yaml":true,"extradata":"MT"},{"content":"The name of the custom attribute","nodes":[{"pos":[0,32],"content":"The name of the custom attribute","nodes":[{"content":"The name of the custom attribute","pos":[0,32]}]}],"pos":[233176,233209],"yaml":true},{"content":"An opaque binary large object (BLOB) of bytes that represents the value of the custom attribute.","nodes":[{"pos":[0,96],"content":"An opaque binary large object (BLOB) of bytes that represents the value of the custom attribute.","nodes":[{"content":"An opaque binary large object (BLOB) of bytes that represents the value of the custom attribute.","pos":[0,96]}]}],"pos":[233269,233366],"yaml":true},{"content":"<code>url</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>url</code> is `null`."}],"pos":[233554,233582],"yaml":true},{"content":"Sets the user entry point.","nodes":[{"pos":[0,26],"content":"Sets the user entry point.","nodes":[{"content":"Sets the user entry point.","pos":[0,26]}]}],"pos":[234759,234786],"yaml":true},{"content":"The compiler might generate a startup stub before calling user main. The startup stub will be the entry point. While the user main will be the user entry point so that debugger will not step into the compiler entry point.  \n  \n> [!NOTE]\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","nodes":[{"pos":[0,221],"content":"The compiler might generate a startup stub before calling user main. The startup stub will be the entry point. While the user main will be the user entry point so that debugger will not step into the compiler entry point.","nodes":[{"content":"The compiler might generate a startup stub before calling user main. The startup stub will be the entry point. While the user main will be the user entry point so that debugger will not step into the compiler entry point.","pos":[0,221],"nodes":[{"content":"The compiler might generate a startup stub before calling user main.","pos":[0,68]},{"content":"The startup stub will be the entry point.","pos":[69,110]},{"content":"While the user main will be the user entry point so that debugger will not step into the compiler entry point.","pos":[111,221]}]}]},{"pos":[229,758],"content":"[!NOTE]\n Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.","pos":[8,527],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>, this member no longer requires <ph id=\"ph2\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName&gt;</ph> flag.","pos":[1,268],"source":" Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag."},{"content":"(See <bpt id=\"p1\">[</bpt>Security Issues in Reflection Emit<ept id=\"p1\">](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)</ept>.) To use this functionality, your application should target the <ph id=\"ph1\">[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]</ph> or later.","pos":[269,519],"source":" (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later."}]}]}],"pos":[234797,235561],"yaml":true,"extradata":"MT"},{"content":"The user entry point.","nodes":[{"pos":[0,21],"content":"The user entry point.","nodes":[{"content":"The user entry point.","pos":[0,21]}]}],"pos":[235754,235776],"yaml":true},{"content":"<code>entryPoint</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;entryPoint&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>entryPoint</code> is `null`."}],"pos":[235960,235995],"yaml":true},{"content":"This method is called on a dynamic module that is not a debug module.  \n  \n -or-  \n  \n <code>entryPoint</code> is not contained in this dynamic module.","nodes":[{"pos":[0,69],"content":"This method is called on a dynamic module that is not a debug module.","nodes":[{"content":"This method is called on a dynamic module that is not a debug module.","pos":[0,69]}]},{"pos":[76,80],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[87,151],"content":"<ph id=\"ph1\">&lt;code&gt;entryPoint&lt;/code&gt;</ph> is not contained in this dynamic module.","source":"<code>entryPoint</code> is not contained in this dynamic module."}],"pos":[236105,236263],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\"></xref>.","nodes":[{"pos":[0,189],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\"></xref>."}],"pos":[237811,238001],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","nodes":[{"pos":[0,186],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetIDsOfNames`</ph>, see the MSDN Library.","pos":[110,186],"source":" For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."}]},{"pos":[193,412],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","pos":[0,219],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices._ModuleBuilder&gt;</ph> interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface."}]}]}],"pos":[238012,238429],"yaml":true,"extradata":"MT"},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[238636,238679],"yaml":true},{"content":"Passed-in array of names to be mapped.","nodes":[{"pos":[0,38],"content":"Passed-in array of names to be mapped.","nodes":[{"content":"Passed-in array of names to be mapped.","pos":[0,38]}]}],"pos":[238744,238783],"yaml":true},{"content":"Count of the names to be mapped.","nodes":[{"pos":[0,32],"content":"Count of the names to be mapped.","nodes":[{"content":"Count of the names to be mapped.","pos":[0,32]}]}],"pos":[238845,238878],"yaml":true},{"content":"The locale context in which to interpret the names.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret the names.","nodes":[{"content":"The locale context in which to interpret the names.","pos":[0,51]}]}],"pos":[238938,238990],"yaml":true},{"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"pos":[0,73],"content":"Caller-allocated array which receives the IDs corresponding to the names.","nodes":[{"content":"Caller-allocated array which receives the IDs corresponding to the names.","pos":[0,73]}]}],"pos":[239054,239128],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[239358,239438],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\"></xref>.","nodes":[{"pos":[0,160],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\"></xref>."}],"pos":[240851,241012],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","nodes":[{"pos":[0,184],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfo`</ph>, see the MSDN Library.","pos":[110,184],"source":" For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."}]},{"pos":[191,410],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","pos":[0,219],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices._ModuleBuilder&gt;</ph> interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface."}]}]}],"pos":[241023,241438],"yaml":true,"extradata":"MT"},{"content":"The type information to return.","nodes":[{"pos":[0,31],"content":"The type information to return.","nodes":[{"content":"The type information to return.","pos":[0,31]}]}],"pos":[241613,241645],"yaml":true},{"content":"The locale identifier for the type information.","nodes":[{"pos":[0,47],"content":"The locale identifier for the type information.","nodes":[{"content":"The locale identifier for the type information.","pos":[0,47]}]}],"pos":[241705,241753],"yaml":true},{"content":"A pointer to the requested type information object.","nodes":[{"pos":[0,51],"content":"A pointer to the requested type information object.","nodes":[{"content":"A pointer to the requested type information object.","pos":[0,51]}]}],"pos":[241816,241868],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[242096,242176],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)\"></xref>.","nodes":[{"pos":[0,138],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)\"></xref>."}],"pos":[243490,243629],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","nodes":[{"pos":[0,189],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::GetTypeInfoCount`</ph>, see the MSDN Library.","pos":[110,189],"source":" For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."}]},{"pos":[196,415],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","pos":[0,219],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices._ModuleBuilder&gt;</ph> interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface."}]}]}],"pos":[243640,244060],"yaml":true,"extradata":"MT"},{"content":"The location that receives the number of type information interfaces provided by the object.","nodes":[{"pos":[0,92],"content":"The location that receives the number of type information interfaces provided by the object.","nodes":[{"content":"The location that receives the number of type information interfaces provided by the object.","pos":[0,92]}]}],"pos":[244219,244312],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[244545,244625],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\"></xref>.","nodes":[{"pos":[0,223],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\"></xref>."}],"pos":[246323,246547],"yaml":true},{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.  \n  \n This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","nodes":[{"pos":[0,179],"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.","nodes":[{"content":"This method is for access to managed classes from unmanaged code, and should not be called from managed code.","pos":[0,109]},{"content":"For more information about <ph id=\"ph1\">`IDispatch::Invoke`</ph>, see the MSDN Library.","pos":[110,179],"source":" For more information about `IDispatch::Invoke`, see the MSDN Library."}]},{"pos":[186,405],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.","pos":[0,219],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.ModuleBuilder&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices._ModuleBuilder&gt;</ph> interface.","pos":[60,219],"source":" It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface."}]}]}],"pos":[246558,246968],"yaml":true,"extradata":"MT"},{"content":"The member ID.","nodes":[{"pos":[0,14],"content":"The member ID.","nodes":[{"content":"The member ID.","pos":[0,14]}]}],"pos":[247238,247253],"yaml":true},{"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"pos":[0,42],"content":"Reserved for future use. Must be IID_NULL.","nodes":[{"content":"Reserved for future use. Must be IID_NULL.","pos":[0,42],"nodes":[{"content":"Reserved for future use.","pos":[0,24]},{"content":"Must be IID_NULL.","pos":[25,42]}]}]}],"pos":[247311,247354],"yaml":true},{"content":"The locale context in which to interpret arguments.","nodes":[{"pos":[0,51],"content":"The locale context in which to interpret arguments.","nodes":[{"content":"The locale context in which to interpret arguments.","pos":[0,51]}]}],"pos":[247414,247466],"yaml":true},{"content":"Flags describing the context of the call.","nodes":[{"pos":[0,41],"content":"Flags describing the context of the call.","nodes":[{"content":"Flags describing the context of the call.","pos":[0,41]}]}],"pos":[247527,247569],"yaml":true},{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"pos":[0,159],"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","nodes":[{"content":"Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.","pos":[0,159]}]}],"pos":[247636,247796],"yaml":true},{"content":"Pointer to the location where the result is to be stored.","nodes":[{"pos":[0,57],"content":"Pointer to the location where the result is to be stored.","nodes":[{"content":"Pointer to the location where the result is to be stored.","pos":[0,57]}]}],"pos":[247862,247920],"yaml":true},{"content":"Pointer to a structure that contains exception information.","nodes":[{"pos":[0,59],"content":"Pointer to a structure that contains exception information.","nodes":[{"content":"Pointer to a structure that contains exception information.","pos":[0,59]}]}],"pos":[247986,248046],"yaml":true},{"content":"The index of the first argument that has an error.","nodes":[{"pos":[0,50],"content":"The index of the first argument that has an error.","nodes":[{"content":"The index of the first argument that has an error.","pos":[0,50]}]}],"pos":[248110,248161],"yaml":true},{"content":"The method is called late-bound using the COM <code>IDispatch</code> interface.","nodes":[{"pos":[0,79],"content":"The method is called late-bound using the COM <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">IDispatch</ph><ept id=\"p1\">&lt;/code&gt;</ept> interface.","source":"The method is called late-bound using the COM <code>IDispatch</code> interface."}],"pos":[248384,248464],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.ModuleBuilder\n  commentId: T:System.Reflection.Emit.ModuleBuilder\n  id: ModuleBuilder\n  children:\n  - System.Reflection.Emit.ModuleBuilder.#ctor\n  - System.Reflection.Emit.ModuleBuilder.Assembly\n  - System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\n  - System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)\n  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  - System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)\n  - System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  - System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  - System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)\n  - System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String)\n  - System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)\n  - System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  - System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])\n  - System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)\n  - System.Reflection.Emit.ModuleBuilder.Equals(System.Object)\n  - System.Reflection.Emit.ModuleBuilder.FullyQualifiedName\n  - System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)\n  - System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})\n  - System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)\n  - System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData\n  - System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)\n  - System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)\n  - System.Reflection.Emit.ModuleBuilder.GetHashCode\n  - System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)\n  - System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)\n  - System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})\n  - System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  - System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)\n  - System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)\n  - System.Reflection.Emit.ModuleBuilder.GetSignerCertificate\n  - System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)\n  - System.Reflection.Emit.ModuleBuilder.GetSymWriter\n  - System.Reflection.Emit.ModuleBuilder.GetType(System.String)\n  - System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)\n  - System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)\n  - System.Reflection.Emit.ModuleBuilder.GetTypes\n  - System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)\n  - System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)\n  - System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Emit.ModuleBuilder.IsResource\n  - System.Reflection.Emit.ModuleBuilder.IsTransient\n  - System.Reflection.Emit.ModuleBuilder.MDStreamVersion\n  - System.Reflection.Emit.ModuleBuilder.MetadataToken\n  - System.Reflection.Emit.ModuleBuilder.ModuleVersionId\n  - System.Reflection.Emit.ModuleBuilder.Name\n  - System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)\n  - System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)\n  - System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Emit.ModuleBuilder.ScopeName\n  - System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  - System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  - System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])\n  - System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)\n  - System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  langs:\n  - csharp\n  name: ModuleBuilder\n  nameWithType: ModuleBuilder\n  fullName: System.Reflection.Emit.ModuleBuilder\n  type: Class\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines and represents a module in a dynamic assembly.\n  remarks: To get an instance of <xref:System.Reflection.Emit.ModuleBuilder>, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=fullName> method.\n  example:\n  - \"The following code sample demonstrates the use of `ModuleBuilder` to create a dynamic module. Note that the ModuleBuilder is created by calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> in <xref:System.Reflection.Emit.AssemblyBuilder>, rather than through a constructor.  \\n  \\n [!code-cpp[ModuleBuilder_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_Class/CPP/modulebuilder.cpp#1)]\\n [!code-csharp[ModuleBuilder_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_Class/CS/modulebuilder.cs#1)]\\n [!code-vb[ModuleBuilder_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_Class/VB/modulebuilder.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ModuleBuilder : System.Reflection.Module, System.Runtime.InteropServices._ModuleBuilder\n  inheritance:\n  - System.Object\n  - System.Reflection.Module\n  implements:\n  - System.Runtime.InteropServices._ModuleBuilder\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Reflection.Module.CustomAttributes\n  - System.Reflection.Module.FilterTypeName\n  - System.Reflection.Module.FilterTypeNameIgnoreCase\n  - System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n  - System.Reflection.Module.GetField(System.String)\n  - System.Reflection.Module.GetFields\n  - System.Reflection.Module.GetMethod(System.String)\n  - System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.Module.GetMethod(System.String,System.Type[])\n  - System.Reflection.Module.GetMethods\n  - System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.Module.ModuleHandle\n  - System.Reflection.Module.op_Equality(System.Reflection.Module,System.Reflection.Module)\n  - System.Reflection.Module.op_Inequality(System.Reflection.Module,System.Reflection.Module)\n  - System.Reflection.Module.ResolveField(System.Int32)\n  - System.Reflection.Module.ResolveMember(System.Int32)\n  - System.Reflection.Module.ResolveMethod(System.Int32)\n  - System.Reflection.Module.ResolveType(System.Int32)\n  - System.Reflection.Module.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  - System.Reflection.Module.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Module.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.Module.ToString\n  extensionMethods:\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)\n  - System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)\n  - System.Reflection.ModuleExtensions.GetModuleVersionId(System.Reflection.Module)\n  - System.Reflection.ModuleExtensions.HasModuleVersionId(System.Reflection.Module)\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.#ctor\n  commentId: M:System.Reflection.Emit.ModuleBuilder.#ctor\n  id: '#ctor'\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: ModuleBuilder()\n  nameWithType: ModuleBuilder.ModuleBuilder()\n  fullName: ModuleBuilder.ModuleBuilder()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: protected ModuleBuilder ();\n    parameters: []\n  overload: System.Reflection.Emit.ModuleBuilder.#ctor*\n  exceptions: []\n  version:\n  - xamarinios-10.8\n  monikers:\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.Assembly\n  commentId: P:System.Reflection.Emit.ModuleBuilder.Assembly\n  id: Assembly\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: ModuleBuilder.Assembly\n  fullName: ModuleBuilder.Assembly\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the dynamic assembly that defined this instance of <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>.\n  remarks: The <xref:System.Reflection.Assembly> object that is returned is the <xref:System.Reflection.Emit.AssemblyBuilder> that defined this instance of <xref:System.Reflection.Emit.ModuleBuilder>.\n  syntax:\n    content: public override System.Reflection.Assembly Assembly { get; }\n    return:\n      type: System.Reflection.Assembly\n      description: The dynamic assembly that defined the current dynamic module.\n  overload: System.Reflection.Emit.ModuleBuilder.Assembly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\n  commentId: M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\n  id: CreateGlobalFunctions\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: CreateGlobalFunctions()\n  nameWithType: ModuleBuilder.CreateGlobalFunctions()\n  fullName: ModuleBuilder.CreateGlobalFunctions()\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Completes the global function definitions and global data definitions for this dynamic module.\n  remarks: \"This method should be called when the user is done with defining all the global functions within this dynamic module. After calling this function, no more new global functions or new global data are allowed.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following sample illustrates the use of `CreateGlobalFunctions` to create a static global method from a <xref:System.Reflection.Emit.MethodBuilder> implemented with <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A>.  \\n  \\n [!code-cpp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#2)]\\n [!code-csharp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#2)]\\n [!code-vb[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#2)]\"\n  syntax:\n    content: public void CreateGlobalFunctions ();\n    parameters: []\n  overload: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method was called previously.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  id: DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineDocument(String, Guid, Guid, Guid)\n  nameWithType: ModuleBuilder.DefineDocument(String, Guid, Guid, Guid)\n  fullName: ModuleBuilder.DefineDocument(String, Guid, Guid, Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a document for source.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Earlier versions of the .NET Framework throw <xref:System.ArgumentException> instead of <xref:System.ArgumentNullException> when `url` is `null`.\n  example:\n  - \"The following code sample illustrates the use of `DefineDocument` to attach an external symbol document (in this case, a raw IL file) to a dynamic module.  \\n  \\n [!code-cpp[ModuleBuilder_DefineDocument#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CPP/modulebuilder_definedocument.cpp#1)]\\n [!code-csharp[ModuleBuilder_DefineDocument#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CS/modulebuilder_definedocument.cs#1)]\\n [!code-vb[ModuleBuilder_DefineDocument#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineDocument/VB/modulebuilder_definedocument.vb#1)]\"\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);\n    parameters:\n    - id: url\n      type: System.String\n      description: The URL for the document.\n    - id: language\n      type: System.Guid\n      description: The GUID that identifies the document language. This can be <xref href=\"System.Guid.Empty\"></xref>.\n    - id: languageVendor\n      type: System.Guid\n      description: The GUID that identifies the document language vendor. This can be <xref href=\"System.Guid.Empty\"></xref>.\n    - id: documentType\n      type: System.Guid\n      description: The GUID that identifies the document type. This can be <xref href=\"System.Guid.Empty\"></xref>.\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: The defined document.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineDocument*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>url</code> is `null`. This is a change from earlier versions of the .NET Framework.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method is called on a dynamic module that is not a debug module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)\n  id: DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineEnum(String, TypeAttributes, Type)\n  nameWithType: ModuleBuilder.DefineEnum(String, TypeAttributes, Type)\n  fullName: ModuleBuilder.DefineEnum(String, TypeAttributes, Type)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines an enumeration type that is a value type with a single non-static field called <code>value__</code> of the specified type.\n  remarks: \"The defined enum is a derived class of <xref:System.Enum>. The `value__` field has <xref:System.Reflection.FieldAttributes.Private> and <xref:System.Reflection.FieldAttributes.SpecialName> attributes set.  \\n  \\n For more information about the built-in integer types that can be specified as the underlying types of enumerations, see [Class Library Overview](~/docs/standard/class-library-overview.md).  \\n  \\n> [!NOTE]\\n>  In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type. In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example illustrates the use of `DefineEnum` to implement an enumeration class in a dynamic module. The example defines an enumeration named `Elevation` that has an underlying type of <xref:System.Int32>, and creates two elements: `Low`, with a value of 0, and `High`, with a value of 1. After the type has been created, the assembly is saved with the name `TempAssembly.dll`. You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the contents of this assembly.  \\n  \\n> [!NOTE]\\n>  Prior to the .NET Framework version 2.0, this code example does not produce a correct enumeration.  \\n  \\n [!code-cpp[ModuleBuilder_DefineEnum#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CPP/modulebuilder_defineenum.cpp#1)]\\n [!code-csharp[ModuleBuilder_DefineEnum#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CS/modulebuilder_defineenum.cs#1)]\\n [!code-vb[ModuleBuilder_DefineEnum#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineEnum/VB/modulebuilder_defineenum.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.EnumBuilder DefineEnum (string name, System.Reflection.TypeAttributes visibility, Type underlyingType);\n    parameters:\n    - id: name\n      type: System.String\n      description: The full path of the enumeration type. <code>name</code> cannot contain embedded nulls.\n    - id: visibility\n      type: System.Reflection.TypeAttributes\n      description: The type attributes for the enumeration. The attributes are any bits defined by <xref href=\"System.Reflection.TypeAttributes.VisibilityMask\"></xref>.\n    - id: underlyingType\n      type: System.Type\n      description: The underlying type for the enumeration. This must be a built-in integer type.\n    return:\n      type: System.Reflection.Emit.EnumBuilder\n      description: The defined enumeration.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineEnum*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"Attributes other than visibility attributes are provided.  \\n  \\n -or-  \\n  \\n An enumeration with the given name exists in the parent assembly of this module.  \\n  \\n -or-  \\n  \\n The visibility attributes do not match the scope of the enumeration. For example, <xref href=\\\"System.Reflection.TypeAttributes.NestedPublic\\\"></xref> is specified for <code>visibility</code>, but the enumeration is not a nested type.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineGlobalMethod(String, MethodAttributes, Type, Type[])\n  nameWithType: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, Type, Type[])\n  fullName: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, Type, Type[])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a global method with the specified name, attributes, return type, and parameter types.\n  remarks: \"The global method that this method defines is not usable until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>. After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.  \\n  \\n [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]\\n [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]\\n [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, Type[] parameterTypes);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the method. <code>name</code> cannot contain embedded nulls.\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: The attributes of the method. <code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.\n    - id: returnType\n      type: System.Type\n      description: The return type of the method.\n    - id: parameterTypes\n      type: System.Type[]\n      description: The types of the method's parameters.\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: The defined global method.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The method is not static. That is, <code>attributes</code> does not include <xref href=\\\"System.Reflection.MethodAttributes.Static\\\"></xref>.  \\n  \\n -or-  \\n  \\n The length of <code>name</code> is zero  \\n  \\n -or-  \\n  \\n An element in the <xref href=\\\"System.Type\\\"></xref> array is `null`.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n  nameWithType: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n  fullName: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.\n  remarks: \"You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following code sample illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>. After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.  \\n  \\n [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]\\n [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]\\n [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the method. <code>name</code> cannot contain embedded nulls.\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: The attributes of the method. <code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: The calling convention for the method.\n    - id: returnType\n      type: System.Type\n      description: The return type of the method.\n    - id: parameterTypes\n      type: System.Type[]\n      description: The types of the method's parameters.\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: The defined global method.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The method is not static. That is, <code>attributes</code> does not include <xref href=\\\"System.Reflection.MethodAttributes.Static\\\"></xref>.  \\n  \\n -or-  \\n  \\n An element in the <xref href=\\\"System.Type\\\"></xref> array is `null`.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  id: DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  nameWithType: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  fullName: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.\n  remarks: \"This overload is provided for designers of managed compilers.  \\n  \\n You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the method. <code>name</code> cannot contain embedded null characters.\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: The attributes of the method. <code>attributes</code> must include <xref href=\"System.Reflection.MethodAttributes.Static\"></xref>.\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: The calling convention for the method.\n    - id: returnType\n      type: System.Type\n      description: The return type of the method.\n    - id: requiredReturnTypeCustomModifiers\n      type: System.Type[]\n      description: An array of types representing the required custom modifiers for the return type, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsBoxed\"></xref>. If the return type has no required custom modifiers, specify `null`.\n    - id: optionalReturnTypeCustomModifiers\n      type: System.Type[]\n      description: An array of types representing the optional custom modifiers for the return type, such as <xref href=\"System.Runtime.CompilerServices.IsConst\"></xref> or <xref href=\"System.Runtime.CompilerServices.IsBoxed\"></xref>. If the return type has no optional custom modifiers, specify `null`.\n    - id: parameterTypes\n      type: System.Type[]\n      description: The types of the method's parameters.\n    - id: requiredParameterTypeCustomModifiers\n      type: System.Type[][]\n      description: An array of arrays of types. Each array of types represents the required custom modifiers for the corresponding parameter of the global method. If a particular argument has no required custom modifiers, specify `null` instead of an array of types. If the global method has no arguments, or if none of the arguments have required custom modifiers, specify `null` instead of an array of arrays.\n    - id: optionalParameterTypeCustomModifiers\n      type: System.Type[][]\n      description: An array of arrays of types. Each array of types represents the optional custom modifiers for the corresponding parameter. If a particular argument has no optional custom modifiers, specify `null` instead of an array of types. If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify `null` instead of an array of arrays.\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: The defined global method.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The method is not static. That is, <code>attributes</code> does not include <xref href=\\\"System.Reflection.MethodAttributes.Static\\\"></xref>.  \\n  \\n -or-  \\n  \\n An element in the <xref href=\\\"System.Type\\\"></xref> array is `null`.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> method has been previously called.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  id: DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineInitializedData(String, Byte[], FieldAttributes)\n  nameWithType: ModuleBuilder.DefineInitializedData(String, Byte[], FieldAttributes)\n  fullName: ModuleBuilder.DefineInitializedData(String, Byte[], FieldAttributes)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines an initialized data field in the .sdata section of the portable executable (PE) file.\n  remarks: \"<xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.  \\n  \\n The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example uses the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> method to define an initialized data field in the `.sdata` section of the portable executable (PE) file.  \\n  \\n [!code-cpp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CPP/modulebuilder_defineinitializeddata.cpp#1)]\\n [!code-csharp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CS/modulebuilder_defineinitializeddata.cs#1)]\\n [!code-vb[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/VB/modulebuilder_defineinitializeddata.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.FieldBuilder DefineInitializedData (string name, byte[] data, System.Reflection.FieldAttributes attributes);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used to refer to the data. <code>name</code> cannot contain embedded nulls.\n    - id: data\n      type: System.Byte[]\n      description: The binary large object (BLOB) of data.\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: The attributes for the field. The default is `Static`.\n    return:\n      type: System.Reflection.Emit.FieldBuilder\n      description: A field to reference the data.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineInitializedData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of <code>name</code> is zero.  \\n  \\n -or-  \\n  \\n The size of <code>data</code> is less than or equal to zero or greater than or equal to 0x3f0000.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>data</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)\n  id: DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineManifestResource(String, Stream, ResourceAttributes)\n  nameWithType: ModuleBuilder.DefineManifestResource(String, Stream, ResourceAttributes)\n  fullName: ModuleBuilder.DefineManifestResource(String, Stream, ResourceAttributes)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a binary large object (BLOB) that represents a manifest resource to be embedded in the dynamic assembly.\n  remarks: \"Resources that are recorded in the assembly manifest can be managed resources or manifest resource BLOBs, and each of these can be included in the assembly either by linking or by embedding. All four scenarios are supported for dynamic assemblies.  \\n  \\n-   This method allows you to embed a manifest resource BLOB into a dynamic assembly.  \\n  \\n-   To embed a managed resource into the manifest module of a dynamic assembly or into a satellite module, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=fullName> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName> method to add the resource.  \\n  \\n-   To link a managed resource into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=fullName> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=fullName> method to add the linked resource.  \\n  \\n-   To link a manifest resource BLOB into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=fullName> method to add the linked resource.  \\n  \\n In addition, a single Win32 resource can be attached to an assembly by using the <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method or the <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=fullName> method. This resource does not appear in the assembly manifest.\"\n  example:\n  - \"The following example generates and saves a dynamic assembly named `EmittedManifestResourceAssembly.exe`, which contains an embedded unmanaged resource. The example creates the assembly, which consists of one module, and opens a memory stream to contain the unmanaged resource. The code then calls the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method to define the resource.  \\n  \\n> [!NOTE]\\n>  You can use any kind of stream for your resource; for example, you can read the unmanaged binary data from a file.  \\n  \\n The example defines a type in the dynamic module with a `Main` method, and generates MSIL for the method body. After the body for the `Main` method has been generated and the type has been created, the code example writes five bytes to the stream associated with the manifest resource. When the assembly is saved, the resource is appended to it.  \\n  \\n After running the example, you can run the emitted assembly. The code in the emitted assembly's `Main` method reads the embedded manifest resource and prints the byte values to the console. You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the information in the assembly manifest.  \\n  \\n [!code-csharp[DefineManifestResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/DefineManifestResource/cs/source.cs#1)]\\n [!code-vb[DefineManifestResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DefineManifestResource/vb/source.vb#1)]\"\n  syntax:\n    content: public void DefineManifestResource (string name, System.IO.Stream stream, System.Reflection.ResourceAttributes attribute);\n    parameters:\n    - id: name\n      type: System.String\n      description: The case-sensitive name for the resource.\n    - id: stream\n      type: System.IO.Stream\n      description: A stream that contains the bytes for the resource.\n    - id: attribute\n      type: System.Reflection.ResourceAttributes\n      description: An enumeration value that specifies whether the resource is public or private.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineManifestResource*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>name</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>stream</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> is a zero-length string.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The dynamic assembly that contains the current module is transient; that is, no file name was specified when <xref href=\"System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)\"></xref> was called.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  id: DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefinePInvokeMethod(String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  nameWithType: ModuleBuilder.DefinePInvokeMethod(String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  fullName: ModuleBuilder.DefinePInvokeMethod(String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a `PInvoke` method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the `PInvoke` flags.\n  remarks: \"Some DLL import attributes (see the description of System.Runtime.InteropServices.DllImportAttribute) cannot be specified as arguments to this method. Such attributes should be set by emitting a custom attribute for the method. For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Win32 API. The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.  \\n  \\n> [!IMPORTANT]\\n>  To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes?displayProperty=fullName> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=fullName> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=fullName> methods.  \\n  \\n [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]\\n [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]\\n [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the `PInvoke` method. <code>name</code> cannot contain embedded nulls.\n    - id: dllName\n      type: System.String\n      description: The name of the DLL in which the `PInvoke` method is defined.\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: The attributes of the method.\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: The method's calling convention.\n    - id: returnType\n      type: System.Type\n      description: The method's return type.\n    - id: parameterTypes\n      type: System.Type[]\n      description: The types of the method's parameters.\n    - id: nativeCallConv\n      type: System.Runtime.InteropServices.CallingConvention\n      description: The native calling convention.\n    - id: nativeCharSet\n      type: System.Runtime.InteropServices.CharSet\n      description: The method's native character set.\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: The defined `PInvoke` method.\n  overload: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The method is not static or if the containing type is an interface.  \\n  \\n -or-  \\n  \\n The method is abstract.  \\n  \\n -or-  \\n  \\n The method was previously defined.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>dllName</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The containing type has been previously created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  id: DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  nameWithType: ModuleBuilder.DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  fullName: ModuleBuilder.DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a `PInvoke` method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the `PInvoke` flags.\n  remarks: \"Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method. Such attributes should be set by emitting a custom attribute for the method. For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Win32 API. The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.  \\n  \\n> [!IMPORTANT]\\n>  To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes?displayProperty=fullName> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=fullName> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=fullName> methods.  \\n  \\n This example uses a different overload of the <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A> method, but the technique is the same.  \\n  \\n [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]\\n [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]\\n [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the `PInvoke` method. <code>name</code> cannot contain embedded nulls.\n    - id: dllName\n      type: System.String\n      description: The name of the DLL in which the `PInvoke` method is defined.\n    - id: entryName\n      type: System.String\n      description: The name of the entry point in the DLL.\n    - id: attributes\n      type: System.Reflection.MethodAttributes\n      description: The attributes of the method.\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: The method's calling convention.\n    - id: returnType\n      type: System.Type\n      description: The method's return type.\n    - id: parameterTypes\n      type: System.Type[]\n      description: The types of the method's parameters.\n    - id: nativeCallConv\n      type: System.Runtime.InteropServices.CallingConvention\n      description: The native calling convention.\n    - id: nativeCharSet\n      type: System.Runtime.InteropServices.CharSet\n      description: The method's native character set.\n    return:\n      type: System.Reflection.Emit.MethodBuilder\n      description: The defined `PInvoke` method.\n  overload: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The method is not static or if the containing type is an interface or if the method is abstract of if the method was previously defined.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> or <code>dllName</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The containing type has been previously created using <xref href=\"System.Reflection.Emit.TypeBuilder.CreateType\"></xref>\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)\n  id: DefineResource(System.String,System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineResource(String, String)\n  nameWithType: ModuleBuilder.DefineResource(String, String)\n  fullName: ModuleBuilder.DefineResource(String, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines the named managed embedded resource to be stored in this module.\n  remarks: \"The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.  \\n  \\n Use this method to embed a managed resource. To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method. For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example illustrates the use of `DefineResource` to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.  \\n  \\n [!code-cpp[ModuleBuilder_DefineResource1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CPP/modulebuilder_defineresource1.cpp#1)]\\n [!code-csharp[ModuleBuilder_DefineResource1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CS/modulebuilder_defineresource1.cs#1)]\\n [!code-vb[ModuleBuilder_DefineResource1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource1/VB/modulebuilder_defineresource1.vb#1)]\"\n  syntax:\n    content: public System.Resources.IResourceWriter DefineResource (string name, string description);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the resource. <code>name</code> cannot contain embedded nulls.\n    - id: description\n      type: System.String\n      description: The description of the resource.\n    return:\n      type: System.Resources.IResourceWriter\n      description: A resource writer for the defined resource.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Length of <code>name</code> is zero.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is null.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"This module is transient.  \\n  \\n -or-  \\n  \\n The containing assembly is not persistable.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)\n  id: DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineResource(String, String, ResourceAttributes)\n  nameWithType: ModuleBuilder.DefineResource(String, String, ResourceAttributes)\n  fullName: ModuleBuilder.DefineResource(String, String, ResourceAttributes)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines the named managed embedded resource with the given attributes that is to be stored in this module.\n  remarks: \"The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.  \\n  \\n Use this method to embed a managed resource. To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method. For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example illustrates the use of DefineResource to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.  \\n  \\n [!code-cpp[ModuleBuilder_DefineResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CPP/modulebuilder_defineresource2.cpp#1)]\\n [!code-csharp[ModuleBuilder_DefineResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CS/modulebuilder_defineresource2.cs#1)]\\n [!code-vb[ModuleBuilder_DefineResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource2/VB/modulebuilder_defineresource2.vb#1)]\"\n  syntax:\n    content: public System.Resources.IResourceWriter DefineResource (string name, string description, System.Reflection.ResourceAttributes attribute);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the resource. <code>name</code> cannot contain embedded nulls.\n    - id: description\n      type: System.String\n      description: The description of the resource.\n    - id: attribute\n      type: System.Reflection.ResourceAttributes\n      description: The resource attributes.\n    return:\n      type: System.Resources.IResourceWriter\n      description: A resource writer for the defined resource.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Length of <code>name</code> is zero.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is null.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"This module is transient.  \\n  \\n -or-  \\n  \\n The containing assembly is not persistable.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineType(String, TypeAttributes, Type, PackingSize, Int32)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize, Int32)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize, Int32)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Constructs a `TypeBuilder` given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.\n  remarks: \"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.  \\n  \\n [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]\\n [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packingSize, int typesize);\n    parameters:\n    - id: name\n      type: System.String\n      description: The full path of the type. <code>name</code> cannot contain embedded nulls.\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: The attributes of the defined type.\n    - id: parent\n      type: System.Type\n      description: The type that the defined type extends.\n    - id: packingSize\n      type: System.Reflection.Emit.PackingSize\n      description: The packing size of the type.\n    - id: typesize\n      type: System.Int32\n      description: The total size of the type.\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: A `TypeBuilder` created with all of the requested attributes.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"A type with the given name exists in the parent assembly of this module.  \\n  \\n -or-  \\n  \\n Nested type attributes are set on a type that is not nested.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineType(String, TypeAttributes, Type, Type[])\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, Type[])\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type, Type[])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Constructs a `TypeBuilder` given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.\n  remarks: \"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.  \\n  \\n [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]\\n [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, Type[] interfaces);\n    parameters:\n    - id: name\n      type: System.String\n      description: The full path of the type. <code>name</code> cannot contain embedded nulls.\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: The attributes to be associated with the type.\n    - id: parent\n      type: System.Type\n      description: The type that the defined type extends.\n    - id: interfaces\n      type: System.Type[]\n      description: The list of interfaces that the type implements.\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: A `TypeBuilder` created with all of the requested attributes.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"A type with the given name exists in the parent assembly of this module.  \\n  \\n -or-  \\n  \\n Nested type attributes are set on a type that is not nested.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineType(String, TypeAttributes, Type, Int32)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, Int32)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type, Int32)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Constructs a `TypeBuilder` given the type name, the attributes, the type that the defined type extends, and the total size of the type.\n  remarks: \"Type names must be unique within an assembly. It is forbidden to have two types with the same name in two different modules of an assembly.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.  \\n  \\n [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]\\n [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, int typesize);\n    parameters:\n    - id: name\n      type: System.String\n      description: The full path of the type. <code>name</code> cannot contain embedded nulls.\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: The attributes of the defined type.\n    - id: parent\n      type: System.Type\n      description: The type that the defined type extends.\n    - id: typesize\n      type: System.Int32\n      description: The total size of the type.\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: A `TypeBuilder` object.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"A type with the given name exists in the parent assembly of this module.  \\n  \\n -or-  \\n  \\n Nested type attributes are set on a type that is not nested.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineType(String, TypeAttributes, Type, PackingSize)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Constructs a `TypeBuilder` given the type name, the attributes, the type that the defined type extends, and the packing size of the type.\n  remarks: \"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.  \\n  \\n [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]\\n [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packsize);\n    parameters:\n    - id: name\n      type: System.String\n      description: The full path of the type. <code>name</code> cannot contain embedded nulls.\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: The attributes of the defined type.\n    - id: parent\n      type: System.Type\n      description: The type that the defined type extends.\n    - id: packsize\n      type: System.Reflection.Emit.PackingSize\n      description: The packing size of the type.\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: A `TypeBuilder` object.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"A type with the given name exists in the parent assembly of this module.  \\n  \\n -or-  \\n  \\n Nested type attributes are set on a type that is not nested.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)\n  id: DefineType(System.String,System.Reflection.TypeAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineType(String, TypeAttributes)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Constructs a `TypeBuilder` given the type name and the type attributes.\n  remarks: \"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.  \\n  \\n [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]\\n [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The full path of the type. <code>name</code> cannot contain embedded nulls.\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: The attributes of the defined type.\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: A `TypeBuilder` created with all of the requested attributes.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"A type with the given name exists in the parent assembly of this module.  \\n  \\n -or-  \\n  \\n Nested type attributes are set on a type that is not nested.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String)\n  id: DefineType(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineType(String)\n  nameWithType: ModuleBuilder.DefineType(String)\n  fullName: ModuleBuilder.DefineType(String)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Constructs a `TypeBuilder` for a private type with the specified name in this module.\n  remarks: \"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.  \\n  \\n [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]\\n [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.TypeBuilder DefineType (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The full path of the type, including the namespace. <code>name</code> cannot contain embedded nulls.\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: A private type with the specified name.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"A type with the given name exists in the parent assembly of this module.  \\n  \\n -or-  \\n  \\n Nested type attributes are set on a type that is not nested.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)\n  id: DefineType(System.String,System.Reflection.TypeAttributes,System.Type)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineType(String, TypeAttributes, Type)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Constructs a `TypeBuilder` given type name, its attributes, and the type that the defined type extends.\n  remarks: \"Type names must be unique within an assembly. You cannot have two types with the same name in two different modules of an assembly.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  example:\n  - \"The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.  \\n  \\n [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]\\n [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent);\n    parameters:\n    - id: name\n      type: System.String\n      description: The full path of the type. <code>name</code> cannot contain embedded nulls.\n    - id: attr\n      type: System.Reflection.TypeAttributes\n      description: The attribute to be associated with the type.\n    - id: parent\n      type: System.Type\n      description: The type that the defined type extends.\n    return:\n      type: System.Reflection.Emit.TypeBuilder\n      description: A `TypeBuilder` created with all of the requested attributes.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"A type with the given name exists in the parent assembly of this module.  \\n  \\n -or-  \\n  \\n Nested type attributes are set on a type that is not nested.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  id: DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineUninitializedData(String, Int32, FieldAttributes)\n  nameWithType: ModuleBuilder.DefineUninitializedData(String, Int32, FieldAttributes)\n  fullName: ModuleBuilder.DefineUninitializedData(String, Int32, FieldAttributes)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.\n  remarks: \"<xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.  \\n  \\n The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public System.Reflection.Emit.FieldBuilder DefineUninitializedData (string name, int size, System.Reflection.FieldAttributes attributes);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name used to refer to the data. <code>name</code> cannot contain embedded nulls.\n    - id: size\n      type: System.Int32\n      description: The size of the data field.\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: The attributes for the field.\n    return:\n      type: System.Reflection.Emit.FieldBuilder\n      description: A field to reference the data.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of <code>name</code> is zero.  \\n  \\n -or-  \\n  \\n <code>size</code> is less than or equal to zero, or greater than or equal to 0x003f0000.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\"></xref> has been previously called.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])\n  id: DefineUnmanagedResource(System.Byte[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineUnmanagedResource(Byte[])\n  nameWithType: ModuleBuilder.DefineUnmanagedResource(Byte[])\n  fullName: ModuleBuilder.DefineUnmanagedResource(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines an unmanaged embedded resource given an opaque binary large object (BLOB) of bytes.\n  remarks: \"An assembly can be associated with only one unmanaged resource. This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public void DefineUnmanagedResource (byte[] resource);\n    parameters:\n    - id: resource\n      type: System.Byte[]\n      description: An opaque BLOB that represents an unmanaged resource\n  overload: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An unmanaged resource has already been defined in the module's assembly.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>resource</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)\n  id: DefineUnmanagedResource(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: DefineUnmanagedResource(String)\n  nameWithType: ModuleBuilder.DefineUnmanagedResource(String)\n  fullName: ModuleBuilder.DefineUnmanagedResource(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines an unmanaged resource given the name of Win32 resource file.\n  remarks: \"An assembly can be associated with only one unmanaged resource. This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>. Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public void DefineUnmanagedResource (string resourceFileName);\n    parameters:\n    - id: resourceFileName\n      type: System.String\n      description: The name of the unmanaged resource file.\n  overload: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"An unmanaged resource has already been defined in the module's assembly.  \\n  \\n -or-  \\n  \\n <code>resourceFileName</code> is the empty string (\\\"\\\").\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>resourceFileName</code> is `null`.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: \"<code>resourceFileName</code> is not found.  \\n  \\n -or-  \\n  \\n <code>resourceFileName</code> is a directory.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.Equals(System.Object)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ModuleBuilder.Equals(Object)\n  fullName: ModuleBuilder.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns a value that indicates whether this instance is equal to the specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with this instance, or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.'\n  overload: System.Reflection.Emit.ModuleBuilder.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName\n  commentId: P:System.Reflection.Emit.ModuleBuilder.FullyQualifiedName\n  id: FullyQualifiedName\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: FullyQualifiedName\n  nameWithType: ModuleBuilder.FullyQualifiedName\n  fullName: ModuleBuilder.FullyQualifiedName\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a `String` representing the fully qualified name and path to this module.\n  remarks: \"To get the name without the path, use `Name`.  \\n  \\n> [!NOTE]\\n>  The case of a module name is platform dependent.\"\n  syntax:\n    content: public override string FullyQualifiedName { get; }\n    return:\n      type: System.String\n      description: The fully qualified module name.\n  overload: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  id: GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetArrayMethod(Type, String, CallingConventions, Type, Type[])\n  nameWithType: ModuleBuilder.GetArrayMethod(Type, String, CallingConventions, Type, Type[])\n  fullName: ModuleBuilder.GetArrayMethod(Type, String, CallingConventions, Type, Type[])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the named method on an array class.\n  remarks: '`GetArrayMethod` is useful when you have an array of a type whose definition has not been completed and you want to access methods defined on <xref:System.Array>. For example, you might define a type and want to define a method that takes an array of the type as a parameter. In order to access the elements of the array, you will need to call methods of the <xref:System.Array> class.'\n  example:\n  - \"The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.MethodInfo> corresponding to a method that returns an array value.  \\n  \\n [!code-cpp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#1)]\\n [!code-csharp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#1)]\\n [!code-vb[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#1)]\"\n  syntax:\n    content: public System.Reflection.MethodInfo GetArrayMethod (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);\n    parameters:\n    - id: arrayClass\n      type: System.Type\n      description: An array class.\n    - id: methodName\n      type: System.String\n      description: The name of a method on the array class.\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: The method's calling convention.\n    - id: returnType\n      type: System.Type\n      description: The return type of the method.\n    - id: parameterTypes\n      type: System.Type[]\n      description: The types of the method's parameters.\n    return:\n      type: System.Reflection.MethodInfo\n      description: The named method on an array class.\n  overload: System.Reflection.Emit.ModuleBuilder.GetArrayMethod*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>arrayClass</code> is not an array.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>arrayClass</code> or <code>methodName</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  id: GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetArrayMethodToken(Type, String, CallingConventions, Type, Type[])\n  nameWithType: ModuleBuilder.GetArrayMethodToken(Type, String, CallingConventions, Type, Type[])\n  fullName: ModuleBuilder.GetArrayMethodToken(Type, String, CallingConventions, Type, Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token for the named method on an array class.\n  remarks: This method is similar to <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, except that it returns the token of the array method instead of the method itself.\n  example:\n  - \"The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.Emit.MethodToken> corresponding to a method that returns an array value.  \\n  \\n [!code-cpp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#2)]\\n [!code-csharp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#2)]\\n [!code-vb[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#2)]\"\n  syntax:\n    content: public System.Reflection.Emit.MethodToken GetArrayMethodToken (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);\n    parameters:\n    - id: arrayClass\n      type: System.Type\n      description: The object for the array.\n    - id: methodName\n      type: System.String\n      description: A string that contains the name of the method.\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: The calling convention for the method.\n    - id: returnType\n      type: System.Type\n      description: The return type of the method.\n    - id: parameterTypes\n      type: System.Type[]\n      description: The types of the parameters of the method.\n    return:\n      type: System.Reflection.Emit.MethodToken\n      description: The token for the named method on an array class.\n  overload: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>arrayClass</code> is not an array.  \\n  \\n -or-  \\n  \\n The length of <code>methodName</code> is zero.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>arrayClass</code> or <code>methodName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)\n  id: GetConstructorToken(System.Reflection.ConstructorInfo)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetConstructorToken(ConstructorInfo)\n  nameWithType: ModuleBuilder.GetConstructorToken(ConstructorInfo)\n  fullName: ModuleBuilder.GetConstructorToken(ConstructorInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token used to identify the specified constructor within this module.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo con);\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: The constructor to get a token for.\n    return:\n      type: System.Reflection.Emit.MethodToken\n      description: The token used to identify the specified constructor within this module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetConstructorToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>con</code> is `null`.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})\n  id: GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetConstructorToken(ConstructorInfo, IEnumerable<Type>)\n  nameWithType: ModuleBuilder.GetConstructorToken(ConstructorInfo, IEnumerable<Type>)\n  fullName: ModuleBuilder.GetConstructorToken(ConstructorInfo, IEnumerable<Type>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token used to identify the constructor that has the specified attributes and parameter types within this module.\n  syntax:\n    content: public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable<Type> optionalParameterTypes);\n    parameters:\n    - id: constructor\n      type: System.Reflection.ConstructorInfo\n      description: The constructor to get a token for.\n    - id: optionalParameterTypes\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: A collection of the types of the optional parameters to the constructor.\n    return:\n      type: System.Reflection.Emit.MethodToken\n      description: The token used to identify the specified constructor within this module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetConstructorToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>constructor</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: ModuleBuilder.GetCustomAttributes(Boolean)\n  fullName: ModuleBuilder.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>.\n  syntax:\n    content: public override object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: This argument is ignored for objects of this type.\n    return:\n      type: System.Object[]\n      description: An array that contains the custom attributes; the array is empty if there are no attributes.\n  overload: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: ModuleBuilder.GetCustomAttributes(Type, Boolean)\n  fullName: ModuleBuilder.GetCustomAttributes(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns all the custom attributes that have been applied to the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>, and that derive from a specified attribute type.\n  syntax:\n    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The base type from which attributes derive.\n    - id: inherit\n      type: System.Boolean\n      description: This argument is ignored for objects of this type.\n    return:\n      type: System.Object[]\n      description: An array that contains the custom attributes that are derived, at any level, from <code>attributeType</code>; the array is empty if there are no such attributes.\n  overload: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>attributeType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime. For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData\n  id: GetCustomAttributesData\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetCustomAttributesData()\n  nameWithType: ModuleBuilder.GetCustomAttributesData()\n  fullName: ModuleBuilder.GetCustomAttributesData()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns information about the attributes that have been applied to the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>, expressed as <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects.\n  remarks: Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context. Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=fullName> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> cannot be used in such cases, because they create instances of the attributes. Code in the reflection-only context cannot be executed. For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.\n  syntax:\n    content: public override System.Collections.Generic.IList<System.Reflection.CustomAttributeData> GetCustomAttributesData ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n      description: A generic list of <xref href=\"System.Reflection.CustomAttributeData\"></xref> objects representing data about the attributes that have been applied to the current module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)\n  id: GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetField(String, BindingFlags)\n  nameWithType: ModuleBuilder.GetField(String, BindingFlags)\n  fullName: ModuleBuilder.GetField(String, BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns a module-level field, defined in the .sdata region of the portable executable (PE) file, that has the specified name and binding attributes.\n  remarks: \"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.  \\n  \\n> [!IMPORTANT]\\n>  Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.\"\n  syntax:\n    content: public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: The field name.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: A combination of the `BindingFlags` bit flags used to control the search.\n    return:\n      type: System.Reflection.FieldInfo\n      description: A field that has the specified name and binding attributes, or `null` if the field does not exist.\n  overload: System.Reflection.Emit.ModuleBuilder.GetField*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)\n  id: GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetFields(BindingFlags)\n  nameWithType: ModuleBuilder.GetFields(BindingFlags)\n  fullName: ModuleBuilder.GetFields(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns all fields defined in the .sdata region of the portable executable (PE) file that match the specified binding flags.\n  remarks: \"When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.  \\n  \\n> [!IMPORTANT]\\n>  Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.\"\n  syntax:\n    content: public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingFlags);\n    parameters:\n    - id: bindingFlags\n      type: System.Reflection.BindingFlags\n      description: A combination of the `BindingFlags` bit flags used to control the search.\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: An array of fields that match the specified flags; the array is empty if no such fields exist.\n  overload: System.Reflection.Emit.ModuleBuilder.GetFields*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>name</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)\n  id: GetFieldToken(System.Reflection.FieldInfo)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetFieldToken(FieldInfo)\n  nameWithType: ModuleBuilder.GetFieldToken(FieldInfo)\n  fullName: ModuleBuilder.GetFieldToken(FieldInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token used to identify the specified field within this module.\n  syntax:\n    content: public System.Reflection.Emit.FieldToken GetFieldToken (System.Reflection.FieldInfo field);\n    parameters:\n    - id: field\n      type: System.Reflection.FieldInfo\n      description: The field to get a token for.\n    return:\n      type: System.Reflection.Emit.FieldToken\n      description: The token used to identify the specified field within this module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetFieldToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>field</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetHashCode\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ModuleBuilder.GetHashCode()\n  fullName: ModuleBuilder.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Reflection.Emit.ModuleBuilder.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType: ModuleBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: ModuleBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the module-level method that matches the specified criteria.\n  remarks: \"This method provides the implementation for all overloads of the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method. Use the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=fullName> method to get methods that have been declared at the module level. Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.  \\n  \\n> [!IMPORTANT]\\n>  Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.\"\n  syntax:\n    content: protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: The method name.\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: A combination of `BindingFlags` bit flags used to control the search.\n    - id: binder\n      type: System.Reflection.Binder\n      description: An object that implements `Binder`, containing properties related to this method.\n    - id: callConvention\n      type: System.Reflection.CallingConventions\n      description: The calling convention for the method.\n    - id: types\n      type: System.Type[]\n      description: The parameter types of the method.\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.\n    return:\n      type: System.Reflection.MethodInfo\n      description: A method that is defined at the module level, and matches the specified criteria; or `null` if such a method does not exist.\n  overload: System.Reflection.Emit.ModuleBuilder.GetMethodImpl*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>name</code> is `null`, <code>types</code> is `null`, or an element of <code>types</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)\n  id: GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetMethods(BindingFlags)\n  nameWithType: ModuleBuilder.GetMethods(BindingFlags)\n  fullName: ModuleBuilder.GetMethods(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns all the methods that have been defined at the module level for the current <xref href=\"System.Reflection.Emit.ModuleBuilder\"></xref>, and that match the specified binding flags.\n  remarks: \"Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.  \\n  \\n> [!IMPORTANT]\\n>  Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.\"\n  syntax:\n    content: public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingFlags);\n    parameters:\n    - id: bindingFlags\n      type: System.Reflection.BindingFlags\n      description: A combination of `BindingFlags` bit flags used to control the search.\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: An array that contains all the module-level methods that match <code>bindingFlags</code>.\n  overload: System.Reflection.Emit.ModuleBuilder.GetMethods*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)\n  id: GetMethodToken(System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetMethodToken(MethodInfo)\n  nameWithType: ModuleBuilder.GetMethodToken(MethodInfo)\n  fullName: ModuleBuilder.GetMethodToken(MethodInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token used to identify the specified method within this module.\n  syntax:\n    content: public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method);\n    parameters:\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: The method to get a token for.\n    return:\n      type: System.Reflection.Emit.MethodToken\n      description: The token used to identify the specified method within this module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetMethodToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>method</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The declaring type for the method is not in this module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})\n  id: GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetMethodToken(MethodInfo, IEnumerable<Type>)\n  nameWithType: ModuleBuilder.GetMethodToken(MethodInfo, IEnumerable<Type>)\n  fullName: ModuleBuilder.GetMethodToken(MethodInfo, IEnumerable<Type>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token used to identify the method that has the specified attributes and parameter types within this module.\n  syntax:\n    content: public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable<Type> optionalParameterTypes);\n    parameters:\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: The method to get a token for.\n    - id: optionalParameterTypes\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: A collection of the types of the optional parameters to the method.\n    return:\n      type: System.Reflection.Emit.MethodToken\n      description: The token used to identify the specified method within this module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetMethodToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>method</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The declaring type for the method is not in this module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  id: GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetPEKind(PortableExecutableKinds, ImageFileMachine)\n  nameWithType: ModuleBuilder.GetPEKind(PortableExecutableKinds, ImageFileMachine)\n  fullName: ModuleBuilder.GetPEKind(PortableExecutableKinds, ImageFileMachine)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a pair of values indicating the nature of the code in a module and the platform targeted by the module.\n  remarks: For dynamic modules, `peKind` is always <xref:System.Reflection.PortableExecutableKinds?displayProperty=fullName> and `machine` is always 0 (zero).\n  syntax:\n    content: public override void GetPEKind (out System.Reflection.PortableExecutableKinds peKind, out System.Reflection.ImageFileMachine machine);\n    parameters:\n    - id: peKind\n      type: System.Reflection.PortableExecutableKinds\n      description: When this method returns, a combination of the <xref href=\"System.Reflection.PortableExecutableKinds\"></xref> values indicating the nature of the code in the module.\n    - id: machine\n      type: System.Reflection.ImageFileMachine\n      description: When this method returns, one of the <xref href=\"System.Reflection.ImageFileMachine\"></xref> values indicating the platform targeted by the module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetPEKind*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)\n  id: GetSignatureToken(System.Reflection.Emit.SignatureHelper)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetSignatureToken(SignatureHelper)\n  nameWithType: ModuleBuilder.GetSignatureToken(SignatureHelper)\n  fullName: ModuleBuilder.GetSignatureToken(SignatureHelper)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a token for the signature that is defined by the specified <xref href=\"System.Reflection.Emit.SignatureHelper\"></xref>.\n  remarks: This method defines a metadata token for the signature described by `sigHelper`.\n  syntax:\n    content: public System.Reflection.Emit.SignatureToken GetSignatureToken (System.Reflection.Emit.SignatureHelper sigHelper);\n    parameters:\n    - id: sigHelper\n      type: System.Reflection.Emit.SignatureHelper\n      description: The signature.\n    return:\n      type: System.Reflection.Emit.SignatureToken\n      description: A token for the defined signature.\n  overload: System.Reflection.Emit.ModuleBuilder.GetSignatureToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sigHelper</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)\n  id: GetSignatureToken(System.Byte[],System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetSignatureToken(Byte[], Int32)\n  nameWithType: ModuleBuilder.GetSignatureToken(Byte[], Int32)\n  fullName: ModuleBuilder.GetSignatureToken(Byte[], Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Defines a token for the signature that has the specified character array and signature length.\n  syntax:\n    content: public System.Reflection.Emit.SignatureToken GetSignatureToken (byte[] sigBytes, int sigLength);\n    parameters:\n    - id: sigBytes\n      type: System.Byte[]\n      description: The signature binary large object (BLOB).\n    - id: sigLength\n      type: System.Int32\n      description: The length of the signature BLOB.\n    return:\n      type: System.Reflection.Emit.SignatureToken\n      description: A token for the specified signature.\n  overload: System.Reflection.Emit.ModuleBuilder.GetSignatureToken*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>sigBytes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetSignerCertificate\n  id: GetSignerCertificate\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetSignerCertificate()\n  nameWithType: ModuleBuilder.GetSignerCertificate()\n  fullName: ModuleBuilder.GetSignerCertificate()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to. If the assembly has not been Authenticode signed, `null` is returned.\n  syntax:\n    content: public override System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: A certificate, or `null` if the assembly to which this module belongs has not been Authenticode signed.\n  overload: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)\n  id: GetStringConstant(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetStringConstant(String)\n  nameWithType: ModuleBuilder.GetStringConstant(String)\n  fullName: ModuleBuilder.GetStringConstant(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token of the given string in the module’s constant pool.\n  remarks: If `str` has already been defined, the existing token will be returned.\n  syntax:\n    content: public System.Reflection.Emit.StringToken GetStringConstant (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: The string to add to the module's constant pool.\n    return:\n      type: System.Reflection.Emit.StringToken\n      description: The token of the string in the constant pool.\n  overload: System.Reflection.Emit.ModuleBuilder.GetStringConstant*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>str</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetSymWriter\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetSymWriter\n  id: GetSymWriter\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetSymWriter()\n  nameWithType: ModuleBuilder.GetSymWriter()\n  fullName: ModuleBuilder.GetSymWriter()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the symbol writer associated with this dynamic module.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolWriter\n      description: The symbol writer associated with this dynamic module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetSymWriter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetType(System.String)\n  id: GetType(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetType(String)\n  nameWithType: ModuleBuilder.GetType(String)\n  fullName: ModuleBuilder.GetType(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the named type defined in the module.\n  remarks: \"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public override Type GetType (string className);\n    parameters:\n    - id: className\n      type: System.String\n      description: The name of the <xref href=\"System.Type\"></xref> to get.\n    return:\n      type: System.Type\n      description: The requested type, if the type is defined in this module; otherwise, `null`.\n  overload: System.Reflection.Emit.ModuleBuilder.GetType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Length of <code>className</code> is zero or is greater than 1023.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>className</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The requested <xref href=\"System.Type\"></xref> is non-public and the caller does not have <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref> to reflect non-public objects outside the current assembly.\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: A class initializer is invoked and throws an exception.\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: An error is encountered while loading the <xref href=\"System.Type\"></xref>.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)\n  id: GetType(System.String,System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetType(String, Boolean)\n  nameWithType: ModuleBuilder.GetType(String, Boolean)\n  fullName: ModuleBuilder.GetType(String, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the named type defined in the module, optionally ignoring the case of the type name.\n  remarks: \"Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public override Type GetType (string className, bool ignoreCase);\n    parameters:\n    - id: className\n      type: System.String\n      description: The name of the <xref href=\"System.Type\"></xref> to get.\n    - id: ignoreCase\n      type: System.Boolean\n      description: If `true`, the search is case-insensitive. If `false`, the search is case-sensitive.\n    return:\n      type: System.Type\n      description: The requested type, if the type is defined in this module; otherwise, `null`.\n  overload: System.Reflection.Emit.ModuleBuilder.GetType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Length of <code>className</code> is zero or is greater than 1023.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>className</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The requested <xref href=\"System.Type\"></xref> is non-public and the caller does not have <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref> to reflect non-public objects outside the current assembly.\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: A class initializer is invoked and throws an exception.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)\n  id: GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetType(String, Boolean, Boolean)\n  nameWithType: ModuleBuilder.GetType(String, Boolean, Boolean)\n  fullName: ModuleBuilder.GetType(String, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the named type defined in the module, optionally ignoring the case of the type name. Optionally throws an exception if the type is not found.\n  remarks: \"The `throwOnError` parameter only affects what happens when the type is not found. It does not affect any other exceptions that might be thrown. In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.  \\n  \\n Do not use this method to generate array types, pointer types, or byref types. Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=fullName>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=fullName>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=fullName> methods instead.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public override Type GetType (string className, bool throwOnError, bool ignoreCase);\n    parameters:\n    - id: className\n      type: System.String\n      description: The name of the <xref href=\"System.Type\"></xref> to get.\n    - id: throwOnError\n      type: System.Boolean\n      description: '`true` to throw an exception if the type cannot be found; `false` to return `null`.'\n    - id: ignoreCase\n      type: System.Boolean\n      description: If `true`, the search is case-insensitive. If `false`, the search is case-sensitive.\n    return:\n      type: System.Type\n      description: The specified type, if the type is declared in this module; otherwise, `null`.\n  overload: System.Reflection.Emit.ModuleBuilder.GetType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Length of <code>className</code> is zero or is greater than 1023.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>className</code> is `null`.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The requested <xref href=\"System.Type\"></xref> is non-public and the caller does not have <xref href=\"System.Security.Permissions.ReflectionPermission\"></xref> to reflect non-public objects outside the current assembly.\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: A class initializer is invoked and throws an exception.\n  - type: System.TypeLoadException\n    commentId: T:System.TypeLoadException\n    description: <code>throwOnError</code> is `true` and the specified type is not found.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetTypes\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetTypes\n  id: GetTypes\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetTypes()\n  nameWithType: ModuleBuilder.GetTypes()\n  fullName: ModuleBuilder.GetTypes()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns all the classes defined within this module.\n  remarks: \"`ReflectionTypeLoadException` is a special class load exception. The `ReflectionTypeLoadException.Types` property contains the array of classes that were defined in the module and loaded. This array can contain some null values. The `ReflectionTypeLoadException.LoaderExceptions` property is an array of exceptions that represent the exceptions that were thrown by the class loader. The holes in the class array line up with the exceptions.  \\n  \\n For example, if the class initializers of one of the classes throws an exception while it is being loaded, a `TargetInvocationException` is stored in the corresponding element of the `LoaderExceptions` array.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public override Type[] GetTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: An array that contains the types defined within the module that is reflected by this instance.\n  overload: System.Reflection.Emit.ModuleBuilder.GetTypes*\n  exceptions:\n  - type: System.Reflection.ReflectionTypeLoadException\n    commentId: T:System.Reflection.ReflectionTypeLoadException\n    description: One or more classes in a module could not be loaded.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)\n  id: GetTypeToken(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetTypeToken(String)\n  nameWithType: ModuleBuilder.GetTypeToken(String)\n  fullName: ModuleBuilder.GetTypeToken(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token used to identify the type with the specified name.\n  remarks: This method is useful for clients of the <xref:System.Reflection.Emit.MethodRental> class who want to directly modify the body of a method.\n  syntax:\n    content: public System.Reflection.Emit.TypeToken GetTypeToken (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the class, including the namespace.\n    return:\n      type: System.Reflection.Emit.TypeToken\n      description: The token used to identify the type with the specified name within this module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetTypeToken*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> is the empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>name</code> represents a `ByRef` type.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>name</code> is `null`.  \\n  \\n -or-  \\n  \\n The type specified by <code>name</code> could not be found.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This is a non-transient module that references a transient module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)\n  id: GetTypeToken(System.Type)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: GetTypeToken(Type)\n  nameWithType: ModuleBuilder.GetTypeToken(Type)\n  fullName: ModuleBuilder.GetTypeToken(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the token used to identify the specified type within this module.\n  remarks: Tokens are used in Microsoft intermediate language (MSIL) instructions to identify objects. Tokens are relative to the module in which they are contained. For example, the token value for `String` is likely to be different from module to module. When `GetTypeToken` is invoked, a reference is added to the module. The reference becomes a permanent part of the module; multiple calls with the same argument have no additional effect.\n  syntax:\n    content: public System.Reflection.Emit.TypeToken GetTypeToken (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type object that represents the class type.\n    return:\n      type: System.Reflection.Emit.TypeToken\n      description: The token used to identify the given type within this module.\n  overload: System.Reflection.Emit.ModuleBuilder.GetTypeToken*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>type</code> is a `ByRef` type.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This is a non-transient module that references a transient module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: IsDefined(Type, Boolean)\n  nameWithType: ModuleBuilder.IsDefined(Type, Boolean)\n  fullName: ModuleBuilder.IsDefined(Type, Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns a value that indicates whether the specified attribute type has been applied to this module.\n  syntax:\n    content: public override bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: The type of custom attribute to test for.\n    - id: inherit\n      type: System.Boolean\n      description: This argument is ignored for objects of this type.\n    return:\n      type: System.Boolean\n      description: '`true` if one or more instances of <code>attributeType</code> have been applied to this module; otherwise, `false`.'\n  overload: System.Reflection.Emit.ModuleBuilder.IsDefined*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>attributeType</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>attributeType</code> is not a <xref href=\"System.Type\"></xref> object supplied by the runtime. For example, <code>attributeType</code> is a <xref href=\"System.Reflection.Emit.TypeBuilder\"></xref> object.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.IsResource\n  commentId: M:System.Reflection.Emit.ModuleBuilder.IsResource\n  id: IsResource\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: IsResource()\n  nameWithType: ModuleBuilder.IsResource()\n  fullName: ModuleBuilder.IsResource()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a value indicating whether the object is a resource.\n  syntax:\n    content: public override bool IsResource ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the object is a resource; otherwise, `false`.'\n  overload: System.Reflection.Emit.ModuleBuilder.IsResource*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.IsTransient\n  commentId: M:System.Reflection.Emit.ModuleBuilder.IsTransient\n  id: IsTransient\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: IsTransient()\n  nameWithType: ModuleBuilder.IsTransient()\n  fullName: ModuleBuilder.IsTransient()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns a value that indicates whether this dynamic module is transient.\n  syntax:\n    content: public bool IsTransient ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this dynamic module is transient; otherwise, `false`.'\n  overload: System.Reflection.Emit.ModuleBuilder.IsTransient*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.MDStreamVersion\n  commentId: P:System.Reflection.Emit.ModuleBuilder.MDStreamVersion\n  id: MDStreamVersion\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: MDStreamVersion\n  nameWithType: ModuleBuilder.MDStreamVersion\n  fullName: ModuleBuilder.MDStreamVersion\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets the metadata stream version.\n  remarks: >-\n    > [!NOTE]\n\n    >  For more information on the metadata header, see \"Partition II: Metadata Definition and Semantics\" in the Common Language Infrastructure (CLI) documentation. The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.\n  syntax:\n    content: public override int MDStreamVersion { get; }\n    return:\n      type: System.Int32\n      description: A 32-bit integer representing the metadata stream version. The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.\n  overload: System.Reflection.Emit.ModuleBuilder.MDStreamVersion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.MetadataToken\n  commentId: P:System.Reflection.Emit.ModuleBuilder.MetadataToken\n  id: MetadataToken\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: MetadataToken\n  nameWithType: ModuleBuilder.MetadataToken\n  fullName: ModuleBuilder.MetadataToken\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a token that identifies the current dynamic module in metadata.\n  remarks: \"The tokens obtained using this property can be passed to the unmanaged Reflection API. For more information, see [Unmanaged Reflection API](http://msdn.microsoft.com/en-us/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).  \\n  \\n> [!NOTE]\\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \\\"Partition II: Metadata Definition and Semantics\\\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.\"\n  syntax:\n    content: public override int MetadataToken { get; }\n    return:\n      type: System.Int32\n      description: An integer token that identifies the current module in metadata.\n  overload: System.Reflection.Emit.ModuleBuilder.MetadataToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.ModuleVersionId\n  commentId: P:System.Reflection.Emit.ModuleBuilder.ModuleVersionId\n  id: ModuleVersionId\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: ModuleVersionId\n  nameWithType: ModuleBuilder.ModuleVersionId\n  fullName: ModuleBuilder.ModuleVersionId\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a universally unique identifier (UUID) that can be used to distinguish between two versions of a module.\n  remarks: \"In unmanaged metadata, the GUID returned by the <xref:System.Reflection.Module.ModuleVersionId%2A> property is referred to as the `mvid`, and is stored in the GUID heap.  \\n  \\n> [!NOTE]\\n>  More information about metadata can be found in the Common Language Infrastructure (CLI) documentation, especially \\\"Partition II: Metadata Definition and Semantics\\\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.\"\n  syntax:\n    content: public override Guid ModuleVersionId { get; }\n    return:\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> that can be used to distinguish between two versions of a module.\n  overload: System.Reflection.Emit.ModuleBuilder.ModuleVersionId*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.Name\n  commentId: P:System.Reflection.Emit.ModuleBuilder.Name\n  id: Name\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ModuleBuilder.Name\n  fullName: ModuleBuilder.Name\n  type: Property\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: A string that indicates that this is an in-memory module.\n  remarks: The name of a dynamic module cannot be obtained until the module has been saved and reloaded from disk.\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: Text that indicates that this is an in-memory module.\n  overload: System.Reflection.Emit.ModuleBuilder.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])\n  id: ResolveField(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: ResolveField(Int32, Type[], Type[])\n  nameWithType: ModuleBuilder.ResolveField(Int32, Type[], Type[])\n  fullName: ModuleBuilder.ResolveField(Int32, Type[], Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the field identified by the specified metadata token, in the context defined by the specified generic type parameters.\n  remarks: \"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. It is always safe to provide these arguments, even when they are not needed.  \\n  \\n> [!NOTE]\\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \\\"Partition II: Metadata Definition and Semantics\\\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.  \\n  \\n For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.\"\n  syntax:\n    content: public override System.Reflection.FieldInfo ResolveField (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: A metadata token that identifies a field in the module.\n    - id: genericTypeArguments\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.\n    - id: genericMethodArguments\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.\n    return:\n      type: System.Reflection.FieldInfo\n      description: A <xref href=\"System.Reflection.FieldInfo\"></xref> object representing the field that is identified by the specified metadata token.\n  overload: System.Reflection.Emit.ModuleBuilder.ResolveField*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>metadataToken</code> is not a token for a field in the scope of the current module.  \\n  \\n -or-  \\n  \\n <code>metadataToken</code> identifies a field whose parent `TypeSpec` has a signature containing element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>metadataToken</code> is not a valid token in the scope of the current module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])\n  id: ResolveMember(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: ResolveMember(Int32, Type[], Type[])\n  nameWithType: ModuleBuilder.ResolveMember(Int32, Type[], Type[])\n  fullName: ModuleBuilder.ResolveMember(Int32, Type[], Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the type or member identified by the specified metadata token, in the context defined by the specified generic type parameters.\n  remarks: \"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. It is always safe to provide these arguments, even when they are not needed.  \\n  \\n> [!NOTE]\\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \\\"Partition II: Metadata Definition and Semantics\\\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.  \\n  \\n For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.\"\n  syntax:\n    content: public override System.Reflection.MemberInfo ResolveMember (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: A metadata token that identifies a type or member in the module.\n    - id: genericTypeArguments\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.\n    - id: genericMethodArguments\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.\n    return:\n      type: System.Reflection.MemberInfo\n      description: A <xref href=\"System.Reflection.MemberInfo\"></xref> object representing the type or member that is identified by the specified metadata token.\n  overload: System.Reflection.Emit.ModuleBuilder.ResolveMember*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>metadataToken</code> is not a token for a type or member in the scope of the current module.  \\n  \\n -or-  \\n  \\n <code>metadataToken</code> is a `MethodSpec` or `TypeSpec` whose signature contains element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>.  \\n  \\n -or-  \\n  \\n <code>metadataToken</code> identifies a property or event.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>metadataToken</code> is not a valid token in the scope of the current module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])\n  id: ResolveMethod(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: ResolveMethod(Int32, Type[], Type[])\n  nameWithType: ModuleBuilder.ResolveMethod(Int32, Type[], Type[])\n  fullName: ModuleBuilder.ResolveMethod(Int32, Type[], Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the method or constructor identified by the specified metadata token, in the context defined by the specified generic type parameters.\n  remarks: \"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericMethodArguments`. It is always safe to provide these arguments, even when they are not needed.  \\n  \\n> [!NOTE]\\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \\\"Partition II: Metadata Definition and Semantics\\\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.  \\n  \\n For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.\"\n  syntax:\n    content: public override System.Reflection.MethodBase ResolveMethod (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: A metadata token that identifies a method or constructor in the module.\n    - id: genericTypeArguments\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.\n    - id: genericMethodArguments\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.\n    return:\n      type: System.Reflection.MethodBase\n      description: A <xref href=\"System.Reflection.MethodBase\"></xref> object representing the method that is identified by the specified metadata token.\n  overload: System.Reflection.Emit.ModuleBuilder.ResolveMethod*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>metadataToken</code> is not a token for a method or constructor in the scope of the current module.  \\n  \\n -or-  \\n  \\n <code>metadataToken</code> is a `MethodSpec` whose signature contains element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>metadataToken</code> is not a valid token in the scope of the current module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)\n  id: ResolveSignature(System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: ResolveSignature(Int32)\n  nameWithType: ModuleBuilder.ResolveSignature(Int32)\n  fullName: ModuleBuilder.ResolveSignature(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the signature blob identified by a metadata token.\n  remarks: >-\n    > [!NOTE]\n\n    >  Information about metadata tokens and signatures can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.\n  syntax:\n    content: public override byte[] ResolveSignature (int metadataToken);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: A metadata token that identifies a signature in the module.\n    return:\n      type: System.Byte[]\n      description: An array of bytes representing the signature blob.\n  overload: System.Reflection.Emit.ModuleBuilder.ResolveSignature*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>metadataToken</code> is not a valid `MemberRef`, `MethodDef`, `TypeSpec`, signature, or `FieldDef` token in the scope of the current module.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>metadataToken</code> is not a valid token in the scope of the current module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)\n  id: ResolveString(System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: ResolveString(Int32)\n  nameWithType: ModuleBuilder.ResolveString(Int32)\n  fullName: ModuleBuilder.ResolveString(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the string identified by the specified metadata token.\n  remarks: >-\n    > [!NOTE]\n\n    >  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \"Partition II: Metadata Definition and Semantics\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.\n  syntax:\n    content: public override string ResolveString (int metadataToken);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: A metadata token that identifies a string in the string heap of the module.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing a string value from the metadata string heap.\n  overload: System.Reflection.Emit.ModuleBuilder.ResolveString*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>metadataToken</code> is not a token for a string in the scope of the current module.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>metadataToken</code> is not a valid token in the scope of the current module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])\n  id: ResolveType(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: ResolveType(Int32, Type[], Type[])\n  nameWithType: ModuleBuilder.ResolveType(Int32, Type[], Type[])\n  fullName: ModuleBuilder.ResolveType(Int32, Type[], Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Returns the type identified by the specified metadata token, in the context defined by the specified generic type parameters.\n  remarks: \"Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=fullName> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`. It is always safe to provide these arguments, even when they are not needed.  \\n  \\n> [!NOTE]\\n>  Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially \\\"Partition II: Metadata Definition and Semantics\\\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.  \\n  \\n For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=fullName> method.\"\n  syntax:\n    content: public override Type ResolveType (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: A metadata token that identifies a type in the module.\n    - id: genericTypeArguments\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the type where the token is in scope, or `null` if that type is not generic.\n    - id: genericMethodArguments\n      type: System.Type[]\n      description: An array of <xref href=\"System.Type\"></xref> objects representing the generic type arguments of the method where the token is in scope, or `null` if that method is not generic.\n    return:\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> object representing the type that is identified by the specified metadata token.\n  overload: System.Reflection.Emit.ModuleBuilder.ResolveType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>metadataToken</code> is not a token for a type in the scope of the current module.  \\n  \\n -or-  \\n  \\n <code>metadataToken</code> is a `TypeSpec` whose signature contains element type `var` (a type parameter of a generic type) or `mvar` (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <code>genericTypeArguments</code> and <code>genericMethodArguments</code>.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>metadataToken</code> is not a valid token in the scope of the current module.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.ScopeName\n  commentId: P:System.Reflection.Emit.ModuleBuilder.ScopeName\n  id: ScopeName\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: ScopeName\n  nameWithType: ModuleBuilder.ScopeName\n  fullName: ModuleBuilder.ScopeName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Gets a string that represents the name of the dynamic module.\n  syntax:\n    content: public override string ScopeName { get; }\n    return:\n      type: System.String\n      description: The name of the dynamic module.\n  overload: System.Reflection.Emit.ModuleBuilder.ScopeName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  id: SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: ModuleBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: ModuleBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Applies a custom attribute to this module by using a custom attribute builder.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\n  syntax:\n    content: public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);\n    parameters:\n    - id: customBuilder\n      type: System.Reflection.Emit.CustomAttributeBuilder\n      description: An instance of a helper class that specifies the custom attribute to apply.\n  overload: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>customBuilder</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  id: SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: ModuleBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: ModuleBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  type: Method\n  assemblies:\n  - System.Reflection.Emit\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.\n  remarks: \"For more information about how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially \\\"Partition II: Metadata Definition and Semantics\\\". The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);\n    parameters:\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: The constructor for the custom attribute.\n    - id: binaryAttribute\n      type: System.Byte[]\n      description: A byte BLOB representing the attribute.\n  overload: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>con</code> or <code>binaryAttribute</code> is `null`.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])\n  commentId: M:System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])\n  id: SetSymCustomAttribute(System.String,System.Byte[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: SetSymCustomAttribute(String, Byte[])\n  nameWithType: ModuleBuilder.SetSymCustomAttribute(String, Byte[])\n  fullName: ModuleBuilder.SetSymCustomAttribute(String, Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: This method does nothing.\n  remarks: \"This method does nothing.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public void SetSymCustomAttribute (string name, byte[] data);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the custom attribute\n    - id: data\n      type: System.Byte[]\n      description: An opaque binary large object (BLOB) of bytes that represents the value of the custom attribute.\n  overload: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>url</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)\n  id: SetUserEntryPoint(System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: SetUserEntryPoint(MethodInfo)\n  nameWithType: ModuleBuilder.SetUserEntryPoint(MethodInfo)\n  fullName: ModuleBuilder.SetUserEntryPoint(MethodInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: Sets the user entry point.\n  remarks: \"The compiler might generate a startup stub before calling user main. The startup stub will be the entry point. While the user main will be the user entry point so that debugger will not step into the compiler entry point.  \\n  \\n> [!NOTE]\\n>  Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag?displayProperty=fullName> flag. (See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.\"\n  syntax:\n    content: public void SetUserEntryPoint (System.Reflection.MethodInfo entryPoint);\n    parameters:\n    - id: entryPoint\n      type: System.Reflection.MethodInfo\n      description: The user entry point.\n  overload: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>entryPoint</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"This method is called on a dynamic module that is not a debug module.  \\n  \\n -or-  \\n  \\n <code>entryPoint</code> is not contained in this dynamic module.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: _ModuleBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ModuleBuilder._ModuleBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ModuleBuilder._ModuleBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\"></xref>.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.\"\n  syntax:\n    content: void _ModuleBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: rgszNames\n      type: System.IntPtr\n      description: Passed-in array of names to be mapped.\n    - id: cNames\n      type: System.UInt32\n      description: Count of the names to be mapped.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret the names.\n    - id: rgDispId\n      type: System.IntPtr\n      description: Caller-allocated array which receives the IDs corresponding to the names.\n  overload: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: _ModuleBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ModuleBuilder._ModuleBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ModuleBuilder._ModuleBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\"></xref>.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.\"\n  syntax:\n    content: void _ModuleBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: The type information to return.\n    - id: lcid\n      type: System.UInt32\n      description: The locale identifier for the type information.\n    - id: ppTInfo\n      type: System.IntPtr\n      description: A pointer to the requested type information object.\n  overload: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: _ModuleBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: ModuleBuilder._ModuleBuilder.GetTypeInfoCount(UInt32)\n  fullName: ModuleBuilder._ModuleBuilder.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)\"></xref>.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.\"\n  syntax:\n    content: void _ModuleBuilder.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: The location that receives the number of type information interfaces provided by the object.\n  overload: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  commentId: M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ModuleBuilder\n  langs:\n  - csharp\n  name: _ModuleBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ModuleBuilder._ModuleBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ModuleBuilder._ModuleBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  summary: For a description of this member, see <xref href=\"System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\"></xref>.\n  remarks: \"This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library.  \\n  \\n This member is an explicit interface member implementation. It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.\"\n  syntax:\n    content: void _ModuleBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: The member ID.\n    - id: riid\n      type: System.Guid\n      description: Reserved for future use. Must be IID_NULL.\n    - id: lcid\n      type: System.UInt32\n      description: The locale context in which to interpret arguments.\n    - id: wFlags\n      type: System.Int16\n      description: Flags describing the context of the call.\n    - id: pDispParams\n      type: System.IntPtr\n      description: Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.\n    - id: pVarResult\n      type: System.IntPtr\n      description: Pointer to the location where the result is to be stored.\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Pointer to a structure that contains exception information.\n    - id: puArgErr\n      type: System.IntPtr\n      description: The index of the first argument that has an error.\n  overload: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: The method is called late-bound using the COM <code>IDispatch</code> interface.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.Reflection.TargetInvocationException\n  parent: System.Reflection\n  isExternal: false\n  name: TargetInvocationException\n  nameWithType: TargetInvocationException\n  fullName: System.Reflection.TargetInvocationException\n- uid: System.TypeLoadException\n  parent: System\n  isExternal: false\n  name: TypeLoadException\n  nameWithType: TypeLoadException\n  fullName: System.TypeLoadException\n- uid: System.Reflection.ReflectionTypeLoadException\n  parent: System.Reflection\n  isExternal: false\n  name: ReflectionTypeLoadException\n  nameWithType: ReflectionTypeLoadException\n  fullName: System.Reflection.ReflectionTypeLoadException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.Reflection.Emit.ModuleBuilder.#ctor\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ModuleBuilder()\n  nameWithType: ModuleBuilder.ModuleBuilder()\n  fullName: ModuleBuilder.ModuleBuilder()\n- uid: System.Reflection.Emit.ModuleBuilder.Assembly\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: Assembly\n  nameWithType: ModuleBuilder.Assembly\n  fullName: ModuleBuilder.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: CreateGlobalFunctions()\n  nameWithType: ModuleBuilder.CreateGlobalFunctions()\n  fullName: ModuleBuilder.CreateGlobalFunctions()\n- uid: System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineDocument(String, Guid, Guid, Guid)\n  nameWithType: ModuleBuilder.DefineDocument(String, Guid, Guid, Guid)\n  fullName: ModuleBuilder.DefineDocument(String, Guid, Guid, Guid)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineEnum(String, TypeAttributes, Type)\n  nameWithType: ModuleBuilder.DefineEnum(String, TypeAttributes, Type)\n  fullName: ModuleBuilder.DefineEnum(String, TypeAttributes, Type)\n- uid: System.Reflection.Emit.EnumBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: EnumBuilder\n  nameWithType: EnumBuilder\n  fullName: System.Reflection.Emit.EnumBuilder\n- uid: System.Reflection.TypeAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: TypeAttributes\n  nameWithType: TypeAttributes\n  fullName: System.Reflection.TypeAttributes\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineGlobalMethod(String, MethodAttributes, Type, Type[])\n  nameWithType: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, Type, Type[])\n  fullName: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, Type, Type[])\n- uid: System.Reflection.Emit.MethodBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodBuilder\n  nameWithType: MethodBuilder\n  fullName: System.Reflection.Emit.MethodBuilder\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  nameWithType: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n  nameWithType: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n  fullName: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[])\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  nameWithType: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n  fullName: ModuleBuilder.DefineGlobalMethod(String, MethodAttributes, CallingConventions, Type, Type[], Type[], Type[], Type[][], Type[][])\n- uid: System.Type[][]\n  parent: System\n  isExternal: false\n  name: Type[][]\n  nameWithType: Type[][]\n  fullName: System.Type[][]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineInitializedData(String, Byte[], FieldAttributes)\n  nameWithType: ModuleBuilder.DefineInitializedData(String, Byte[], FieldAttributes)\n  fullName: ModuleBuilder.DefineInitializedData(String, Byte[], FieldAttributes)\n- uid: System.Reflection.Emit.FieldBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldBuilder\n  nameWithType: FieldBuilder\n  fullName: System.Reflection.Emit.FieldBuilder\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineManifestResource(String, Stream, ResourceAttributes)\n  nameWithType: ModuleBuilder.DefineManifestResource(String, Stream, ResourceAttributes)\n  fullName: ModuleBuilder.DefineManifestResource(String, Stream, ResourceAttributes)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Reflection.ResourceAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: ResourceAttributes\n  nameWithType: ResourceAttributes\n  fullName: System.Reflection.ResourceAttributes\n- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefinePInvokeMethod(String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  nameWithType: ModuleBuilder.DefinePInvokeMethod(String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  fullName: ModuleBuilder.DefinePInvokeMethod(String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n- uid: System.Runtime.InteropServices.CallingConvention\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: CallingConvention\n  nameWithType: CallingConvention\n  fullName: System.Runtime.InteropServices.CallingConvention\n- uid: System.Runtime.InteropServices.CharSet\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: CharSet\n  nameWithType: CharSet\n  fullName: System.Runtime.InteropServices.CharSet\n- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  nameWithType: ModuleBuilder.DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n  fullName: ModuleBuilder.DefinePInvokeMethod(String, String, String, MethodAttributes, CallingConventions, Type, Type[], CallingConvention, CharSet)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineResource(String, String)\n  nameWithType: ModuleBuilder.DefineResource(String, String)\n  fullName: ModuleBuilder.DefineResource(String, String)\n- uid: System.Resources.IResourceWriter\n  parent: System.Resources\n  isExternal: false\n  name: IResourceWriter\n  nameWithType: IResourceWriter\n  fullName: System.Resources.IResourceWriter\n- uid: System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineResource(String, String, ResourceAttributes)\n  nameWithType: ModuleBuilder.DefineResource(String, String, ResourceAttributes)\n  fullName: ModuleBuilder.DefineResource(String, String, ResourceAttributes)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineType(String, TypeAttributes, Type, PackingSize, Int32)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize, Int32)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize, Int32)\n- uid: System.Reflection.Emit.TypeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeBuilder\n  nameWithType: TypeBuilder\n  fullName: System.Reflection.Emit.TypeBuilder\n- uid: System.Reflection.Emit.PackingSize\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: PackingSize\n  nameWithType: PackingSize\n  fullName: System.Reflection.Emit.PackingSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineType(String, TypeAttributes, Type, Type[])\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, Type[])\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type, Type[])\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineType(String, TypeAttributes, Type, Int32)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, Int32)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type, Int32)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineType(String, TypeAttributes, Type, PackingSize)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type, PackingSize)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineType(String, TypeAttributes)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineType(String)\n  nameWithType: ModuleBuilder.DefineType(String)\n  fullName: ModuleBuilder.DefineType(String)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineType(String, TypeAttributes, Type)\n  nameWithType: ModuleBuilder.DefineType(String, TypeAttributes, Type)\n  fullName: ModuleBuilder.DefineType(String, TypeAttributes, Type)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineUninitializedData(String, Int32, FieldAttributes)\n  nameWithType: ModuleBuilder.DefineUninitializedData(String, Int32, FieldAttributes)\n  fullName: ModuleBuilder.DefineUninitializedData(String, Int32, FieldAttributes)\n- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineUnmanagedResource(Byte[])\n  nameWithType: ModuleBuilder.DefineUnmanagedResource(Byte[])\n  fullName: ModuleBuilder.DefineUnmanagedResource(Byte[])\n- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineUnmanagedResource(String)\n  nameWithType: ModuleBuilder.DefineUnmanagedResource(String)\n  fullName: ModuleBuilder.DefineUnmanagedResource(String)\n- uid: System.Reflection.Emit.ModuleBuilder.Equals(System.Object)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ModuleBuilder.Equals(Object)\n  fullName: ModuleBuilder.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: FullyQualifiedName\n  nameWithType: ModuleBuilder.FullyQualifiedName\n  fullName: ModuleBuilder.FullyQualifiedName\n- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetArrayMethod(Type, String, CallingConventions, Type, Type[])\n  nameWithType: ModuleBuilder.GetArrayMethod(Type, String, CallingConventions, Type, Type[])\n  fullName: ModuleBuilder.GetArrayMethod(Type, String, CallingConventions, Type, Type[])\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetArrayMethodToken(Type, String, CallingConventions, Type, Type[])\n  nameWithType: ModuleBuilder.GetArrayMethodToken(Type, String, CallingConventions, Type, Type[])\n  fullName: ModuleBuilder.GetArrayMethodToken(Type, String, CallingConventions, Type, Type[])\n- uid: System.Reflection.Emit.MethodToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetConstructorToken(ConstructorInfo)\n  nameWithType: ModuleBuilder.GetConstructorToken(ConstructorInfo)\n  fullName: ModuleBuilder.GetConstructorToken(ConstructorInfo)\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetConstructorToken(ConstructorInfo, IEnumerable<Type>)\n  nameWithType: ModuleBuilder.GetConstructorToken(ConstructorInfo, IEnumerable<Type>)\n  fullName: ModuleBuilder.GetConstructorToken(ConstructorInfo, IEnumerable<Type>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: ModuleBuilder.GetCustomAttributes(Boolean)\n  fullName: ModuleBuilder.GetCustomAttributes(Boolean)\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetCustomAttributes(Type, Boolean)\n  nameWithType: ModuleBuilder.GetCustomAttributes(Type, Boolean)\n  fullName: ModuleBuilder.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetCustomAttributesData()\n  nameWithType: ModuleBuilder.GetCustomAttributesData()\n  fullName: ModuleBuilder.GetCustomAttributesData()\n- uid: System.Collections.Generic.IList`1\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Reflection.CustomAttributeData\n  name: CustomAttributeData\n  nameWithType: CustomAttributeData\n  fullName: System.Reflection.CustomAttributeData\n- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<CustomAttributeData>\n  nameWithType: IList<CustomAttributeData>\n  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>\n  spec.csharp:\n  - uid: System.Collections.Generic.IList`1\n    name: IList\n    nameWithType: IList\n    fullName: System.Collections.Generic.IList\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.CustomAttributeData\n    name: CustomAttributeData\n    nameWithType: CustomAttributeData\n    fullName: System.Reflection.CustomAttributeData\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetField(String, BindingFlags)\n  nameWithType: ModuleBuilder.GetField(String, BindingFlags)\n  fullName: ModuleBuilder.GetField(String, BindingFlags)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetFields(BindingFlags)\n  nameWithType: ModuleBuilder.GetFields(BindingFlags)\n  fullName: ModuleBuilder.GetFields(BindingFlags)\n- uid: System.Reflection.FieldInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo[]\n  nameWithType: FieldInfo[]\n  fullName: System.Reflection.FieldInfo[]\n  spec.csharp:\n  - uid: System.Reflection.FieldInfo\n    name: FieldInfo\n    nameWithType: FieldInfo\n    fullName: System.Reflection.FieldInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetFieldToken(FieldInfo)\n  nameWithType: ModuleBuilder.GetFieldToken(FieldInfo)\n  fullName: ModuleBuilder.GetFieldToken(FieldInfo)\n- uid: System.Reflection.Emit.FieldToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldToken\n  nameWithType: FieldToken\n  fullName: System.Reflection.Emit.FieldToken\n- uid: System.Reflection.Emit.ModuleBuilder.GetHashCode\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ModuleBuilder.GetHashCode()\n  fullName: ModuleBuilder.GetHashCode()\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType: ModuleBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: ModuleBuilder.GetMethodImpl(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Reflection.ParameterModifier\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier\n- uid: System.Reflection.ParameterModifier[]\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier[]\n  nameWithType: ParameterModifier[]\n  fullName: System.Reflection.ParameterModifier[]\n  spec.csharp:\n  - uid: System.Reflection.ParameterModifier\n    name: ParameterModifier\n    nameWithType: ParameterModifier\n    fullName: System.Reflection.ParameterModifier\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetMethods(BindingFlags)\n  nameWithType: ModuleBuilder.GetMethods(BindingFlags)\n  fullName: ModuleBuilder.GetMethods(BindingFlags)\n- uid: System.Reflection.MethodInfo[]\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo[]\n  nameWithType: MethodInfo[]\n  fullName: System.Reflection.MethodInfo[]\n  spec.csharp:\n  - uid: System.Reflection.MethodInfo\n    name: MethodInfo\n    nameWithType: MethodInfo\n    fullName: System.Reflection.MethodInfo\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetMethodToken(MethodInfo)\n  nameWithType: ModuleBuilder.GetMethodToken(MethodInfo)\n  fullName: ModuleBuilder.GetMethodToken(MethodInfo)\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetMethodToken(MethodInfo, IEnumerable<Type>)\n  nameWithType: ModuleBuilder.GetMethodToken(MethodInfo, IEnumerable<Type>)\n  fullName: ModuleBuilder.GetMethodToken(MethodInfo, IEnumerable<Type>)\n- uid: System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetPEKind(PortableExecutableKinds, ImageFileMachine)\n  nameWithType: ModuleBuilder.GetPEKind(PortableExecutableKinds, ImageFileMachine)\n  fullName: ModuleBuilder.GetPEKind(PortableExecutableKinds, ImageFileMachine)\n- uid: System.Reflection.PortableExecutableKinds\n  parent: System.Reflection\n  isExternal: false\n  name: PortableExecutableKinds\n  nameWithType: PortableExecutableKinds\n  fullName: System.Reflection.PortableExecutableKinds\n- uid: System.Reflection.ImageFileMachine\n  parent: System.Reflection\n  isExternal: false\n  name: ImageFileMachine\n  nameWithType: ImageFileMachine\n  fullName: System.Reflection.ImageFileMachine\n- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetSignatureToken(SignatureHelper)\n  nameWithType: ModuleBuilder.GetSignatureToken(SignatureHelper)\n  fullName: ModuleBuilder.GetSignatureToken(SignatureHelper)\n- uid: System.Reflection.Emit.SignatureToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureToken\n  nameWithType: SignatureToken\n  fullName: System.Reflection.Emit.SignatureToken\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetSignatureToken(Byte[], Int32)\n  nameWithType: ModuleBuilder.GetSignatureToken(Byte[], Int32)\n  fullName: ModuleBuilder.GetSignatureToken(Byte[], Int32)\n- uid: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetSignerCertificate()\n  nameWithType: ModuleBuilder.GetSignerCertificate()\n  fullName: ModuleBuilder.GetSignerCertificate()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetStringConstant(String)\n  nameWithType: ModuleBuilder.GetStringConstant(String)\n  fullName: ModuleBuilder.GetStringConstant(String)\n- uid: System.Reflection.Emit.StringToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StringToken\n  nameWithType: StringToken\n  fullName: System.Reflection.Emit.StringToken\n- uid: System.Reflection.Emit.ModuleBuilder.GetSymWriter\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetSymWriter()\n  nameWithType: ModuleBuilder.GetSymWriter()\n  fullName: ModuleBuilder.GetSymWriter()\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolWriter\n  nameWithType: ISymbolWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter\n- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetType(String)\n  nameWithType: ModuleBuilder.GetType(String)\n  fullName: ModuleBuilder.GetType(String)\n- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetType(String, Boolean)\n  nameWithType: ModuleBuilder.GetType(String, Boolean)\n  fullName: ModuleBuilder.GetType(String, Boolean)\n- uid: System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetType(String, Boolean, Boolean)\n  nameWithType: ModuleBuilder.GetType(String, Boolean, Boolean)\n  fullName: ModuleBuilder.GetType(String, Boolean, Boolean)\n- uid: System.Reflection.Emit.ModuleBuilder.GetTypes\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetTypes()\n  nameWithType: ModuleBuilder.GetTypes()\n  fullName: ModuleBuilder.GetTypes()\n- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetTypeToken(String)\n  nameWithType: ModuleBuilder.GetTypeToken(String)\n  fullName: ModuleBuilder.GetTypeToken(String)\n- uid: System.Reflection.Emit.TypeToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: TypeToken\n  nameWithType: TypeToken\n  fullName: System.Reflection.Emit.TypeToken\n- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetTypeToken(Type)\n  nameWithType: ModuleBuilder.GetTypeToken(Type)\n  fullName: ModuleBuilder.GetTypeToken(Type)\n- uid: System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: IsDefined(Type, Boolean)\n  nameWithType: ModuleBuilder.IsDefined(Type, Boolean)\n  fullName: ModuleBuilder.IsDefined(Type, Boolean)\n- uid: System.Reflection.Emit.ModuleBuilder.IsResource\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: IsResource()\n  nameWithType: ModuleBuilder.IsResource()\n  fullName: ModuleBuilder.IsResource()\n- uid: System.Reflection.Emit.ModuleBuilder.IsTransient\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: IsTransient()\n  nameWithType: ModuleBuilder.IsTransient()\n  fullName: ModuleBuilder.IsTransient()\n- uid: System.Reflection.Emit.ModuleBuilder.MDStreamVersion\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: MDStreamVersion\n  nameWithType: ModuleBuilder.MDStreamVersion\n  fullName: ModuleBuilder.MDStreamVersion\n- uid: System.Reflection.Emit.ModuleBuilder.MetadataToken\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: MetadataToken\n  nameWithType: ModuleBuilder.MetadataToken\n  fullName: ModuleBuilder.MetadataToken\n- uid: System.Reflection.Emit.ModuleBuilder.ModuleVersionId\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ModuleVersionId\n  nameWithType: ModuleBuilder.ModuleVersionId\n  fullName: ModuleBuilder.ModuleVersionId\n- uid: System.Reflection.Emit.ModuleBuilder.Name\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: Name\n  nameWithType: ModuleBuilder.Name\n  fullName: ModuleBuilder.Name\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveField(Int32, Type[], Type[])\n  nameWithType: ModuleBuilder.ResolveField(Int32, Type[], Type[])\n  fullName: ModuleBuilder.ResolveField(Int32, Type[], Type[])\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveMember(Int32, Type[], Type[])\n  nameWithType: ModuleBuilder.ResolveMember(Int32, Type[], Type[])\n  fullName: ModuleBuilder.ResolveMember(Int32, Type[], Type[])\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveMethod(Int32, Type[], Type[])\n  nameWithType: ModuleBuilder.ResolveMethod(Int32, Type[], Type[])\n  fullName: ModuleBuilder.ResolveMethod(Int32, Type[], Type[])\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveSignature(Int32)\n  nameWithType: ModuleBuilder.ResolveSignature(Int32)\n  fullName: ModuleBuilder.ResolveSignature(Int32)\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveString(Int32)\n  nameWithType: ModuleBuilder.ResolveString(Int32)\n  fullName: ModuleBuilder.ResolveString(Int32)\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveType(Int32, Type[], Type[])\n  nameWithType: ModuleBuilder.ResolveType(Int32, Type[], Type[])\n  fullName: ModuleBuilder.ResolveType(Int32, Type[], Type[])\n- uid: System.Reflection.Emit.ModuleBuilder.ScopeName\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ScopeName\n  nameWithType: ModuleBuilder.ScopeName\n  fullName: ModuleBuilder.ScopeName\n- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: SetCustomAttribute(CustomAttributeBuilder)\n  nameWithType: ModuleBuilder.SetCustomAttribute(CustomAttributeBuilder)\n  fullName: ModuleBuilder.SetCustomAttribute(CustomAttributeBuilder)\n- uid: System.Reflection.Emit.CustomAttributeBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: CustomAttributeBuilder\n  nameWithType: CustomAttributeBuilder\n  fullName: System.Reflection.Emit.CustomAttributeBuilder\n- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: SetCustomAttribute(ConstructorInfo, Byte[])\n  nameWithType: ModuleBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n  fullName: ModuleBuilder.SetCustomAttribute(ConstructorInfo, Byte[])\n- uid: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: SetSymCustomAttribute(String, Byte[])\n  nameWithType: ModuleBuilder.SetSymCustomAttribute(String, Byte[])\n  fullName: ModuleBuilder.SetSymCustomAttribute(String, Byte[])\n- uid: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: SetUserEntryPoint(MethodInfo)\n  nameWithType: ModuleBuilder.SetUserEntryPoint(MethodInfo)\n  fullName: ModuleBuilder.SetUserEntryPoint(MethodInfo)\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: _ModuleBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: ModuleBuilder._ModuleBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: ModuleBuilder._ModuleBuilder.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: _ModuleBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: ModuleBuilder._ModuleBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: ModuleBuilder._ModuleBuilder.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: _ModuleBuilder.GetTypeInfoCount(UInt32)\n  nameWithType: ModuleBuilder._ModuleBuilder.GetTypeInfoCount(UInt32)\n  fullName: ModuleBuilder._ModuleBuilder.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: _ModuleBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: ModuleBuilder._ModuleBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: ModuleBuilder._ModuleBuilder.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.Emit.ModuleBuilder.#ctor*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ModuleBuilder\n  nameWithType: ModuleBuilder.ModuleBuilder\n  fullName: ModuleBuilder.ModuleBuilder\n  monikers:\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.Assembly*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: Assembly\n  nameWithType: ModuleBuilder.Assembly\n  fullName: ModuleBuilder.Assembly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: CreateGlobalFunctions\n  nameWithType: ModuleBuilder.CreateGlobalFunctions\n  fullName: ModuleBuilder.CreateGlobalFunctions\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefineDocument*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineDocument\n  nameWithType: ModuleBuilder.DefineDocument\n  fullName: ModuleBuilder.DefineDocument\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefineEnum*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineEnum\n  nameWithType: ModuleBuilder.DefineEnum\n  fullName: ModuleBuilder.DefineEnum\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineGlobalMethod\n  nameWithType: ModuleBuilder.DefineGlobalMethod\n  fullName: ModuleBuilder.DefineGlobalMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefineInitializedData*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineInitializedData\n  nameWithType: ModuleBuilder.DefineInitializedData\n  fullName: ModuleBuilder.DefineInitializedData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefineManifestResource*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineManifestResource\n  nameWithType: ModuleBuilder.DefineManifestResource\n  fullName: ModuleBuilder.DefineManifestResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefinePInvokeMethod\n  nameWithType: ModuleBuilder.DefinePInvokeMethod\n  fullName: ModuleBuilder.DefinePInvokeMethod\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefineResource*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineResource\n  nameWithType: ModuleBuilder.DefineResource\n  fullName: ModuleBuilder.DefineResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefineType*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineType\n  nameWithType: ModuleBuilder.DefineType\n  fullName: ModuleBuilder.DefineType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefineUninitializedData*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineUninitializedData\n  nameWithType: ModuleBuilder.DefineUninitializedData\n  fullName: ModuleBuilder.DefineUninitializedData\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: DefineUnmanagedResource\n  nameWithType: ModuleBuilder.DefineUnmanagedResource\n  fullName: ModuleBuilder.DefineUnmanagedResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.Equals*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: Equals\n  nameWithType: ModuleBuilder.Equals\n  fullName: ModuleBuilder.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.FullyQualifiedName*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: FullyQualifiedName\n  nameWithType: ModuleBuilder.FullyQualifiedName\n  fullName: ModuleBuilder.FullyQualifiedName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethod*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetArrayMethod\n  nameWithType: ModuleBuilder.GetArrayMethod\n  fullName: ModuleBuilder.GetArrayMethod\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetArrayMethodToken\n  nameWithType: ModuleBuilder.GetArrayMethodToken\n  fullName: ModuleBuilder.GetArrayMethodToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetConstructorToken*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetConstructorToken\n  nameWithType: ModuleBuilder.GetConstructorToken\n  fullName: ModuleBuilder.GetConstructorToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributes*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetCustomAttributes\n  nameWithType: ModuleBuilder.GetCustomAttributes\n  fullName: ModuleBuilder.GetCustomAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetCustomAttributesData\n  nameWithType: ModuleBuilder.GetCustomAttributesData\n  fullName: ModuleBuilder.GetCustomAttributesData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetField*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetField\n  nameWithType: ModuleBuilder.GetField\n  fullName: ModuleBuilder.GetField\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetFields*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetFields\n  nameWithType: ModuleBuilder.GetFields\n  fullName: ModuleBuilder.GetFields\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetFieldToken*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetFieldToken\n  nameWithType: ModuleBuilder.GetFieldToken\n  fullName: ModuleBuilder.GetFieldToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetHashCode*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ModuleBuilder.GetHashCode\n  fullName: ModuleBuilder.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethodImpl*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetMethodImpl\n  nameWithType: ModuleBuilder.GetMethodImpl\n  fullName: ModuleBuilder.GetMethodImpl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethods*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetMethods\n  nameWithType: ModuleBuilder.GetMethods\n  fullName: ModuleBuilder.GetMethods\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetMethodToken*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetMethodToken\n  nameWithType: ModuleBuilder.GetMethodToken\n  fullName: ModuleBuilder.GetMethodToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetPEKind*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetPEKind\n  nameWithType: ModuleBuilder.GetPEKind\n  fullName: ModuleBuilder.GetPEKind\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetSignatureToken*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetSignatureToken\n  nameWithType: ModuleBuilder.GetSignatureToken\n  fullName: ModuleBuilder.GetSignatureToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetSignerCertificate*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetSignerCertificate\n  nameWithType: ModuleBuilder.GetSignerCertificate\n  fullName: ModuleBuilder.GetSignerCertificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetStringConstant*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetStringConstant\n  nameWithType: ModuleBuilder.GetStringConstant\n  fullName: ModuleBuilder.GetStringConstant\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetSymWriter*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetSymWriter\n  nameWithType: ModuleBuilder.GetSymWriter\n  fullName: ModuleBuilder.GetSymWriter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetType*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetType\n  nameWithType: ModuleBuilder.GetType\n  fullName: ModuleBuilder.GetType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetTypes*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetTypes\n  nameWithType: ModuleBuilder.GetTypes\n  fullName: ModuleBuilder.GetTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.GetTypeToken*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: GetTypeToken\n  nameWithType: ModuleBuilder.GetTypeToken\n  fullName: ModuleBuilder.GetTypeToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.IsDefined*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: IsDefined\n  nameWithType: ModuleBuilder.IsDefined\n  fullName: ModuleBuilder.IsDefined\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.IsResource*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: IsResource\n  nameWithType: ModuleBuilder.IsResource\n  fullName: ModuleBuilder.IsResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.IsTransient*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: IsTransient\n  nameWithType: ModuleBuilder.IsTransient\n  fullName: ModuleBuilder.IsTransient\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.MDStreamVersion*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: MDStreamVersion\n  nameWithType: ModuleBuilder.MDStreamVersion\n  fullName: ModuleBuilder.MDStreamVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.MetadataToken*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: MetadataToken\n  nameWithType: ModuleBuilder.MetadataToken\n  fullName: ModuleBuilder.MetadataToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.ModuleVersionId*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ModuleVersionId\n  nameWithType: ModuleBuilder.ModuleVersionId\n  fullName: ModuleBuilder.ModuleVersionId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.Name*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: Name\n  nameWithType: ModuleBuilder.Name\n  fullName: ModuleBuilder.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveField*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveField\n  nameWithType: ModuleBuilder.ResolveField\n  fullName: ModuleBuilder.ResolveField\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveMember*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveMember\n  nameWithType: ModuleBuilder.ResolveMember\n  fullName: ModuleBuilder.ResolveMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveMethod*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveMethod\n  nameWithType: ModuleBuilder.ResolveMethod\n  fullName: ModuleBuilder.ResolveMethod\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveSignature*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveSignature\n  nameWithType: ModuleBuilder.ResolveSignature\n  fullName: ModuleBuilder.ResolveSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveString*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveString\n  nameWithType: ModuleBuilder.ResolveString\n  fullName: ModuleBuilder.ResolveString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.ResolveType*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ResolveType\n  nameWithType: ModuleBuilder.ResolveType\n  fullName: ModuleBuilder.ResolveType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.ScopeName*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: ScopeName\n  nameWithType: ModuleBuilder.ScopeName\n  fullName: ModuleBuilder.ScopeName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.SetCustomAttribute*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: SetCustomAttribute\n  nameWithType: ModuleBuilder.SetCustomAttribute\n  fullName: ModuleBuilder.SetCustomAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: SetSymCustomAttribute\n  nameWithType: ModuleBuilder.SetSymCustomAttribute\n  fullName: ModuleBuilder.SetSymCustomAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: SetUserEntryPoint\n  nameWithType: ModuleBuilder.SetUserEntryPoint\n  fullName: ModuleBuilder.SetUserEntryPoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames\n  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames\n  fullName: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo\n  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo\n  fullName: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount\n  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount\n  fullName: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke*\n  parent: System.Reflection.Emit.ModuleBuilder\n  isExternal: false\n  name: System.Runtime.InteropServices._ModuleBuilder.Invoke\n  nameWithType: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.Invoke\n  fullName: ModuleBuilder.System.Runtime.InteropServices._ModuleBuilder.Invoke\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/ModuleBuilder.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Reflection.Module.ToString\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ToString()\n  nameWithType: Module.ToString()\n  fullName: Module.ToString()\n- uid: System.Reflection.Module.CustomAttributes\n  parent: System.Reflection.Module\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: Module.CustomAttributes\n  fullName: Module.CustomAttributes\n- uid: System.Reflection.Module.FilterTypeName\n  parent: System.Reflection.Module\n  isExternal: false\n  name: FilterTypeName\n  nameWithType: Module.FilterTypeName\n  fullName: Module.FilterTypeName\n- uid: System.Reflection.Module.FilterTypeNameIgnoreCase\n  parent: System.Reflection.Module\n  isExternal: false\n  name: FilterTypeNameIgnoreCase\n  nameWithType: Module.FilterTypeNameIgnoreCase\n  fullName: Module.FilterTypeNameIgnoreCase\n- uid: System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: FindTypes(TypeFilter, Object)\n  nameWithType: Module.FindTypes(TypeFilter, Object)\n  fullName: Module.FindTypes(TypeFilter, Object)\n- uid: System.Reflection.Module.GetField(System.String)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetField(String)\n  nameWithType: Module.GetField(String)\n  fullName: Module.GetField(String)\n- uid: System.Reflection.Module.GetFields\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetFields()\n  nameWithType: Module.GetFields()\n  fullName: Module.GetFields()\n- uid: System.Reflection.Module.GetMethod(System.String)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethod(String)\n  nameWithType: Module.GetMethod(String)\n  fullName: Module.GetMethod(String)\n- uid: System.Reflection.Module.GetMethod(System.String,System.Type[])\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethod(String, Type[])\n  nameWithType: Module.GetMethod(String, Type[])\n  fullName: Module.GetMethod(String, Type[])\n- uid: System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  nameWithType: Module.GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n  fullName: Module.GetMethod(String, BindingFlags, Binder, CallingConventions, Type[], ParameterModifier[])\n- uid: System.Reflection.Module.GetMethods\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethods()\n  nameWithType: Module.GetMethods()\n  fullName: Module.GetMethods()\n- uid: System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Module.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Module.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Reflection.Module.ModuleHandle\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ModuleHandle\n  nameWithType: Module.ModuleHandle\n  fullName: Module.ModuleHandle\n- uid: System.Reflection.Module.op_Equality(System.Reflection.Module,System.Reflection.Module)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: op_Equality(Module, Module)\n  nameWithType: Module.op_Equality(Module, Module)\n  fullName: Module.op_Equality(Module, Module)\n- uid: System.Reflection.Module.op_Inequality(System.Reflection.Module,System.Reflection.Module)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: op_Inequality(Module, Module)\n  nameWithType: Module.op_Inequality(Module, Module)\n  fullName: Module.op_Inequality(Module, Module)\n- uid: System.Reflection.Module.ResolveField(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveField(Int32)\n  nameWithType: Module.ResolveField(Int32)\n  fullName: Module.ResolveField(Int32)\n- uid: System.Reflection.Module.ResolveMember(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveMember(Int32)\n  nameWithType: Module.ResolveMember(Int32)\n  fullName: Module.ResolveMember(Int32)\n- uid: System.Reflection.Module.ResolveMethod(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveMethod(Int32)\n  nameWithType: Module.ResolveMethod(Int32)\n  fullName: Module.ResolveMethod(Int32)\n- uid: System.Reflection.Module.ResolveType(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveType(Int32)\n  nameWithType: Module.ResolveType(Int32)\n  fullName: Module.ResolveType(Int32)\n- uid: System.Reflection.Module.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  nameWithType: Module.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n  fullName: Module.ICustomAttributeProvider.GetCustomAttributes(Boolean)\n- uid: System.Reflection.Module.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  nameWithType: Module.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n  fullName: Module.ICustomAttributeProvider.GetCustomAttributes(Type, Boolean)\n- uid: System.Reflection.Module.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ICustomAttributeProvider.IsDefined(Type, Boolean)\n  nameWithType: Module.ICustomAttributeProvider.IsDefined(Type, Boolean)\n  fullName: Module.ICustomAttributeProvider.IsDefined(Type, Boolean)\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: _Module.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Module._Module.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Module._Module.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: _Module.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Module._Module.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Module._Module.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: _Module.GetTypeInfoCount(UInt32)\n  nameWithType: Module._Module.GetTypeInfoCount(UInt32)\n  fullName: Module._Module.GetTypeInfoCount(UInt32)\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: _Module.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Module._Module.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Module._Module.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute(Module, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttribute(Module, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttribute<T>(Module)\n  nameWithType: CustomAttributeExtensions.GetCustomAttribute<T>(Module)\n  fullName: CustomAttributeExtensions.GetCustomAttribute<T>(Module)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(Module)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes(Module, Type)\n  fullName: CustomAttributeExtensions.GetCustomAttributes(Module, Type)\n- uid: System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: GetCustomAttributes<T>(Module)\n  nameWithType: CustomAttributeExtensions.GetCustomAttributes<T>(Module)\n  fullName: CustomAttributeExtensions.GetCustomAttributes<T>(Module)\n- uid: System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Reflection.CustomAttributeExtensions\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: CustomAttributeExtensions.IsDefined(Module, Type)\n  fullName: CustomAttributeExtensions.IsDefined(Module, Type)\n- uid: System.Reflection.ModuleExtensions.GetModuleVersionId(System.Reflection.Module)\n  parent: System.Reflection.ModuleExtensions\n  isExternal: false\n  name: GetModuleVersionId(Module)\n  nameWithType: ModuleExtensions.GetModuleVersionId(Module)\n  fullName: ModuleExtensions.GetModuleVersionId(Module)\n- uid: System.Reflection.ModuleExtensions.HasModuleVersionId(System.Reflection.Module)\n  parent: System.Reflection.ModuleExtensions\n  isExternal: false\n  name: HasModuleVersionId(Module)\n  nameWithType: ModuleExtensions.HasModuleVersionId(Module)\n  fullName: ModuleExtensions.HasModuleVersionId(Module)\n- uid: System.Runtime.InteropServices._ModuleBuilder\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: _ModuleBuilder\n  nameWithType: _ModuleBuilder\n  fullName: System.Runtime.InteropServices._ModuleBuilder\n"}