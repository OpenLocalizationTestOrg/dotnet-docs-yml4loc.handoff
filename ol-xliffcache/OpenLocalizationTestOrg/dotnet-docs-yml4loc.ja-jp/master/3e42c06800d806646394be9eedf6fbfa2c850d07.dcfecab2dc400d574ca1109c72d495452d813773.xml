{"nodes":[{"content":"Defines the interface that must be implemented by a channel listener to accept channels.","nodes":[{"pos":[0,88],"content":"Defines the interface that must be implemented by a channel listener to accept channels.","nodes":[{"content":"Defines the interface that must be implemented by a channel listener to accept channels.","pos":[0,88]}]}],"pos":[842,931],"yaml":true},{"content":"The <xref:System.ServiceModel.Channels.IChannelListener> interface represents the base interface for channel listeners.  \n  \n Channel listeners and their associated channels are generally used by services that receive communications initiated by clients. Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.","nodes":[{"pos":[0,119],"content":"The <xref:System.ServiceModel.Channels.IChannelListener> interface represents the base interface for channel listeners.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> interface represents the base interface for channel listeners.","pos":[0,119],"source":"The <xref:System.ServiceModel.Channels.IChannelListener> interface represents the base interface for channel listeners."}]},{"pos":[126,475],"content":"Channel listeners and their associated channels are generally used by services that receive communications initiated by clients. Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.","nodes":[{"content":"Channel listeners and their associated channels are generally used by services that receive communications initiated by clients. Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.","pos":[0,349],"nodes":[{"content":"Channel listeners and their associated channels are generally used by services that receive communications initiated by clients.","pos":[0,128]},{"content":"Channel factories that implement the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.","pos":[129,349],"source":" Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated."}]}]}],"pos":[942,1422],"yaml":true,"extradata":"MT"},{"content":"Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.","nodes":[{"pos":[0,124],"content":"Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.","nodes":[{"content":"Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.","pos":[0,124]}]}],"pos":[3032,3157],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the wait for a channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out."}],"pos":[3359,3492],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.","nodes":[{"pos":[0,153],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the wait for a channel operation."}],"pos":[3563,3717],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","nodes":[{"pos":[0,135],"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","pos":[0,135]}]}],"pos":[3778,3914],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous wait for a channel operation.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous wait for a channel operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous wait for a channel operation."}],"pos":[3977,4085],"yaml":true},{"content":"Completes an asynchronous operation to wait for channels to arrive.","nodes":[{"pos":[0,67],"content":"Completes an asynchronous operation to wait for channels to arrive.","nodes":[{"content":"Completes an asynchronous operation to wait for channels to arrive.","pos":[0,67]}]}],"pos":[5345,5413],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\"></xref> method.","nodes":[{"pos":[0,184],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\"></xref> method."}],"pos":[5573,5758],"yaml":true},{"content":"`true` if a message arrived; otherwise `false`.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">`true`</ph> if a message arrived; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if a message arrived; otherwise `false`."}],"pos":[5816,5866],"yaml":true},{"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"pos":[0,94],"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","pos":[0,94]}]}],"pos":[7007,7102],"yaml":true},{"content":"Use this method to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.","nodes":[{"pos":[0,409],"content":"Use this method to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.","nodes":[{"content":"Use this method to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.","pos":[0,152]},{"content":"If a layer supports returning the requested object, it returns it.","pos":[153,219]},{"content":"If not, it delegates the call down to the next layer in the stack.","pos":[220,286]},{"content":"If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id=\"ph1\">`null`</ph>.","pos":[287,409],"source":" If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`."}]}],"pos":[7113,7523],"yaml":true,"extradata":"MT"},{"content":"The typed object for which the method is querying.","nodes":[{"pos":[0,50],"content":"The typed object for which the method is querying.","nodes":[{"content":"The typed object for which the method is querying.","pos":[0,50]}]}],"pos":[7662,7713],"yaml":true},{"content":"The typed object <code>T</code> requested, if it is present or `null` if it is not.","nodes":[{"pos":[0,83],"content":"The typed object <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">T</ph><ept id=\"p1\">&lt;/code&gt;</ept> requested, if it is present or <ph id=\"ph2\">`null`</ph> if it is not.","source":"The typed object <code>T</code> requested, if it is present or `null` if it is not."}],"pos":[7758,7842],"yaml":true},{"content":"Gets the URI on which the listeners that are generated by the factory listen.","nodes":[{"pos":[0,77],"content":"Gets the URI on which the listeners that are generated by the factory listen.","nodes":[{"content":"Gets the URI on which the listeners that are generated by the factory listen.","pos":[0,77]}]}],"pos":[8910,8988],"yaml":true},{"content":"This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages.","nodes":[{"pos":[0,134],"content":"This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages.","nodes":[{"content":"This URI represents the transport address on which the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> is listening for messages.","pos":[0,134],"source":"This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages."}]}],"pos":[8999,9134],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Uri\"></xref> on which the listeners that are generated by the factory listen.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> on which the listeners that are generated by the factory listen.","source":"The <xref href=\"System.Uri\"></xref> on which the listeners that are generated by the factory listen."}],"pos":[9235,9336],"yaml":true},{"content":"Waits for a channel to arrive.","nodes":[{"pos":[0,30],"content":"Waits for a channel to arrive.","nodes":[{"content":"Waits for a channel to arrive.","pos":[0,30]}]}],"pos":[10538,10569],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the wait for a channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out."}],"pos":[10720,10853],"yaml":true},{"content":"`true` if a channel arrived before the interval of time specified by the <code>timeout</code>; otherwise `false`.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">`true`</ph> if a channel arrived before the interval of time specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">timeout</ph><ept id=\"p1\">&lt;/code&gt;</ept>; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if a channel arrived before the interval of time specified by the <code>timeout</code>; otherwise `false`."}],"pos":[10911,11027],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.IChannelListener\n  commentId: T:System.ServiceModel.Channels.IChannelListener\n  id: IChannelListener\n  children:\n  - System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.IChannelListener.GetProperty``1\n  - System.ServiceModel.Channels.IChannelListener.Uri\n  - System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)\n  langs:\n  - csharp\n  name: IChannelListener\n  nameWithType: IChannelListener\n  fullName: System.ServiceModel.Channels.IChannelListener\n  type: Interface\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Defines the interface that must be implemented by a channel listener to accept channels.\n  remarks: \"The <xref:System.ServiceModel.Channels.IChannelListener> interface represents the base interface for channel listeners.  \\n  \\n Channel listeners and their associated channels are generally used by services that receive communications initiated by clients. Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.\"\n  syntax:\n    content: 'public interface IChannelListener : System.ServiceModel.ICommunicationObject'\n  derivedClasses:\n  - System.ServiceModel.Channels.ChannelListenerBase\n  - System.ServiceModel.Channels.IChannelListener`1\n  implements:\n  - System.ServiceModel.ICommunicationObject\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  fullName: IChannelListener.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.\n  syntax:\n    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous wait for a channel operation.\n  overload: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\n  id: EndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: EndWaitForChannel(IAsyncResult)\n  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)\n  fullName: IChannelListener.EndWaitForChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Completes an asynchronous operation to wait for channels to arrive.\n  syntax:\n    content: public bool EndWaitForChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\"></xref> method.\n    return:\n      type: System.Boolean\n      description: '`true` if a message arrived; otherwise `false`.'\n  overload: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1\n  commentId: M:System.ServiceModel.Channels.IChannelListener.GetProperty``1\n  id: GetProperty``1\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: GetProperty<T>()\n  nameWithType: IChannelListener.GetProperty<T>()\n  fullName: IChannelListener.GetProperty<T>()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a typed object requested, if present, from the appropriate layer in the channel stack.\n  remarks: Use this method to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.\n  syntax:\n    content: 'public T GetProperty<T> () where T : class;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The typed object for which the method is querying.\n    return:\n      type: T\n      description: The typed object <code>T</code> requested, if it is present or `null` if it is not.\n  overload: System.ServiceModel.Channels.IChannelListener.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener.Uri\n  commentId: P:System.ServiceModel.Channels.IChannelListener.Uri\n  id: Uri\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: Uri\n  nameWithType: IChannelListener.Uri\n  fullName: IChannelListener.Uri\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the URI on which the listeners that are generated by the factory listen.\n  remarks: This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages.\n  syntax:\n    content: public Uri Uri { get; }\n    return:\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> on which the listeners that are generated by the factory listen.\n  overload: System.ServiceModel.Channels.IChannelListener.Uri*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)\n  commentId: M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)\n  id: WaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.IChannelListener\n  langs:\n  - csharp\n  name: WaitForChannel(TimeSpan)\n  nameWithType: IChannelListener.WaitForChannel(TimeSpan)\n  fullName: IChannelListener.WaitForChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Waits for a channel to arrive.\n  syntax:\n    content: public bool WaitForChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.\n    return:\n      type: System.Boolean\n      description: '`true` if a channel arrived before the interval of time specified by the <code>timeout</code>; otherwise `false`.'\n  overload: System.ServiceModel.Channels.IChannelListener.WaitForChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  fullName: IChannelListener.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: EndWaitForChannel(IAsyncResult)\n  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)\n  fullName: IChannelListener.EndWaitForChannel(IAsyncResult)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: IChannelListener.GetProperty<T>()\n  fullName: IChannelListener.GetProperty<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.IChannelListener.Uri\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: Uri\n  nameWithType: IChannelListener.Uri\n  fullName: IChannelListener.Uri\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: WaitForChannel(TimeSpan)\n  nameWithType: IChannelListener.WaitForChannel(TimeSpan)\n  fullName: IChannelListener.WaitForChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: BeginWaitForChannel\n  nameWithType: IChannelListener.BeginWaitForChannel\n  fullName: IChannelListener.BeginWaitForChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: EndWaitForChannel\n  nameWithType: IChannelListener.EndWaitForChannel\n  fullName: IChannelListener.EndWaitForChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: IChannelListener.GetProperty<T>\n  fullName: IChannelListener.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n- uid: System.ServiceModel.Channels.IChannelListener.Uri*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: Uri\n  nameWithType: IChannelListener.Uri\n  fullName: IChannelListener.Uri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel*\n  parent: System.ServiceModel.Channels.IChannelListener\n  isExternal: false\n  name: WaitForChannel\n  nameWithType: IChannelListener.WaitForChannel\n  fullName: IChannelListener.WaitForChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/IChannelListener.xml\n- uid: System.ServiceModel.ICommunicationObject\n  parent: System.ServiceModel\n  isExternal: false\n  name: ICommunicationObject\n  nameWithType: ICommunicationObject\n  fullName: System.ServiceModel.ICommunicationObject\n"}