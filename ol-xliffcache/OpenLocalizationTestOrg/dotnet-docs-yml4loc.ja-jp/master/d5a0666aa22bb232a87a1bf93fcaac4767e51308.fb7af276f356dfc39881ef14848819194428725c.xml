{"nodes":[{"content":"The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.  \n  \n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","nodes":[{"pos":[0,117],"content":"The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.","nodes":[{"content":"The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.","pos":[0,117]}]},{"pos":[124,440],"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.","nodes":[{"content":"Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.","pos":[0,193]},{"content":"The <bpt id=\"p1\">[</bpt>MI APIs<ept id=\"p1\">](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx)</ept> should be used for all new development.","pos":[194,316],"source":" The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development."}]}],"pos":[778,1223],"yaml":true},{"content":"The class marked by this attribute must be public.","nodes":[{"pos":[0,50],"content":"The class marked by this attribute must be public.","nodes":[{"content":"The class marked by this attribute must be public.","pos":[0,50]}]}],"pos":[1234,1285],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Management.ManagementEntityAttribute\"></xref> class. This is the default constructor.","nodes":[{"pos":[0,138],"content":"Initializes a new instance of the <xref href=\"System.Management.ManagementEntityAttribute\"></xref> class. This is the default constructor.","nodes":[{"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Management.ManagementEntityAttribute\"&gt;&lt;/xref&gt;</ph> class.","pos":[0,105],"source":"Initializes a new instance of the <xref href=\"System.Management.ManagementEntityAttribute\"></xref> class."},{"content":"This is the default constructor.","pos":[106,138]}]}],"pos":[6692,6831],"yaml":true},{"content":"This constructor does not take a name parameter. If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class.","nodes":[{"pos":[0,260],"content":"This constructor does not take a name parameter. If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class.","nodes":[{"content":"This constructor does not take a name parameter. If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class.","pos":[0,260],"nodes":[{"content":"This constructor does not take a name parameter.","pos":[0,48]},{"content":"If you do not specify a name by using the <ph id=\"ph1\">&lt;xref:System.Management.Instrumentation.ManagementEntityAttribute.Name&gt;</ph> parameter, the name of the associated WMI class will default to the name of the attributed class.","pos":[49,260],"source":" If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class."}]}]}],"pos":[6842,7103],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.","nodes":[{"pos":[0,136],"content":"Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.","nodes":[{"content":"Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.","pos":[0,136]}]}],"pos":[8282,8419],"yaml":true},{"content":"This is used when implementing providers that implement classes that extend existing abstract WMI classes.","nodes":[{"pos":[0,106],"content":"This is used when implementing providers that implement classes that extend existing abstract WMI classes.","nodes":[{"content":"This is used when implementing providers that implement classes that extend existing abstract WMI classes.","pos":[0,106]}]}],"pos":[8430,8537],"yaml":true,"extradata":"MT"},{"content":"A boolean value that is true if the class represents an external WMI class and false otherwise.","nodes":[{"pos":[0,95],"content":"A boolean value that is true if the class represents an external WMI class and false otherwise.","nodes":[{"content":"A boolean value that is true if the class represents an external WMI class and false otherwise.","pos":[0,95]}]}],"pos":[8653,8749],"yaml":true},{"content":"Gets or sets the name of the WMI class.","nodes":[{"pos":[0,39],"content":"Gets or sets the name of the WMI class.","nodes":[{"content":"Gets or sets the name of the WMI class.","pos":[0,39]}]}],"pos":[9828,9868],"yaml":true},{"content":"If you do not specify the name of the WMI class by setting this property, the WMI class will default to the name of the attributed class.","nodes":[{"pos":[0,137],"content":"If you do not specify the name of the WMI class by setting this property, the WMI class will default to the name of the attributed class.","nodes":[{"content":"If you do not specify the name of the WMI class by setting this property, the WMI class will default to the name of the attributed class.","pos":[0,137]}]}],"pos":[9879,10017],"yaml":true,"extradata":"MT"},{"content":"A string that contains the name of the WMI class.","nodes":[{"pos":[0,49],"content":"A string that contains the name of the WMI class.","nodes":[{"content":"A string that contains the name of the WMI class.","pos":[0,49]}]}],"pos":[10581,10631],"yaml":true},{"content":"Specifies whether the associated class represents a singleton WMI class.","nodes":[{"pos":[0,72],"content":"Specifies whether the associated class represents a singleton WMI class.","nodes":[{"content":"Specifies whether the associated class represents a singleton WMI class.","pos":[0,72]}]}],"pos":[11736,11809],"yaml":true},{"content":"A singleton WMI class is one for which there can only ever be a single instance. Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.  \n  \n When working with singleton WMI classes, client applications must use special syntax. For more information, see the Describing an Instance Object Path topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/).","nodes":[{"pos":[0,259],"content":"A singleton WMI class is one for which there can only ever be a single instance. Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.","nodes":[{"content":"A singleton WMI class is one for which there can only ever be a single instance. Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.","pos":[0,259],"nodes":[{"content":"A singleton WMI class is one for which there can only ever be a single instance.","pos":[0,80]},{"content":"Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.","pos":[81,259]}]}]},{"pos":[266,497],"content":"When working with singleton WMI classes, client applications must use special syntax. For more information, see the Describing an Instance Object Path topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/).","nodes":[{"content":"When working with singleton WMI classes, client applications must use special syntax.","pos":[0,85]},{"content":"For more information, see the Describing an Instance Object Path topic in the MSDN online library at <bpt id=\"p1\">[</bpt>http://www.msdn.com<ept id=\"p1\">](http://www.msdn.com/)</ept>.","pos":[86,231],"source":" For more information, see the Describing an Instance Object Path topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/)."}]}],"pos":[11820,12322],"yaml":true,"extradata":"MT"},{"content":"A boolean value that is true if the class represents a singleton WMI class and false otherwise.","nodes":[{"pos":[0,95],"content":"A boolean value that is true if the class represents a singleton WMI class and false otherwise.","nodes":[{"content":"A boolean value that is true if the class represents a singleton WMI class and false otherwise.","pos":[0,95]}]}],"pos":[12893,12989],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Management.Instrumentation.ManagementEntityAttribute\n  commentId: T:System.Management.Instrumentation.ManagementEntityAttribute\n  id: ManagementEntityAttribute\n  children:\n  - System.Management.Instrumentation.ManagementEntityAttribute.#ctor\n  - System.Management.Instrumentation.ManagementEntityAttribute.External\n  - System.Management.Instrumentation.ManagementEntityAttribute.Name\n  - System.Management.Instrumentation.ManagementEntityAttribute.Singleton\n  langs:\n  - csharp\n  name: ManagementEntityAttribute\n  nameWithType: ManagementEntityAttribute\n  fullName: System.Management.Instrumentation.ManagementEntityAttribute\n  type: Class\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: \"The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.  \\n  \\n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.\"\n  remarks: The class marked by this attribute must be public.\n  example:\n  - \"The following example shows how to use the ManagementEntity attribute to mark a class.  \\n  \\n```  \\n// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  \\n// provider.  \\n  \\n    [ManagementEntity(Name = \\\"MortgageCalc\\\")]  \\n    public class MortgageCalcWMIProvider  \\n    {  \\n    }  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]\n\n      public sealed class ManagementEntityAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/ManagementEntityAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor\n  commentId: M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor\n  id: '#ctor'\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  langs:\n  - csharp\n  name: ManagementEntityAttribute()\n  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()\n  fullName: ManagementEntityAttribute.ManagementEntityAttribute()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Initializes a new instance of the <xref href=\"System.Management.ManagementEntityAttribute\"></xref> class. This is the default constructor.\n  remarks: This constructor does not take a name parameter. If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class.\n  syntax:\n    content: public ManagementEntityAttribute ();\n    parameters: []\n  overload: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/ManagementEntityAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.External\n  commentId: P:System.Management.Instrumentation.ManagementEntityAttribute.External\n  id: External\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  langs:\n  - csharp\n  name: External\n  nameWithType: ManagementEntityAttribute.External\n  fullName: ManagementEntityAttribute.External\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.\n  remarks: This is used when implementing providers that implement classes that extend existing abstract WMI classes.\n  syntax:\n    content: public bool External { get; set; }\n    return:\n      type: System.Boolean\n      description: A boolean value that is true if the class represents an external WMI class and false otherwise.\n  overload: System.Management.Instrumentation.ManagementEntityAttribute.External*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/ManagementEntityAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name\n  commentId: P:System.Management.Instrumentation.ManagementEntityAttribute.Name\n  id: Name\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ManagementEntityAttribute.Name\n  fullName: ManagementEntityAttribute.Name\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Gets or sets the name of the WMI class.\n  remarks: If you do not specify the name of the WMI class by setting this property, the WMI class will default to the name of the attributed class.\n  example:\n  - \"In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class. It sets the name to MortgageCalculator. If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.  \\n  \\n```  \\n[ManagementEntity(Name = \\\"MortgageCalculator\\\")]  \\npublic class MortgageCalcWMIProvider  \\n{  \\n}  \\n```\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: A string that contains the name of the WMI class.\n  overload: System.Management.Instrumentation.ManagementEntityAttribute.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/ManagementEntityAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton\n  commentId: P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton\n  id: Singleton\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  langs:\n  - csharp\n  name: Singleton\n  nameWithType: ManagementEntityAttribute.Singleton\n  fullName: ManagementEntityAttribute.Singleton\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Management.Instrumentation\n  summary: Specifies whether the associated class represents a singleton WMI class.\n  remarks: \"A singleton WMI class is one for which there can only ever be a single instance. Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.  \\n  \\n When working with singleton WMI classes, client applications must use special syntax. For more information, see the Describing an Instance Object Path topic in the MSDN online library at [http://www.msdn.com](http://www.msdn.com/).\"\n  example:\n  - \"The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.  \\n  \\n```  \\n[ManagementEntity(Singleton=true)]  \\npublic class SingletonSample  \\n```  \\n  \\n For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](http://msdn.microsoft.com/en-us/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).\"\n  syntax:\n    content: public bool Singleton { get; set; }\n    return:\n      type: System.Boolean\n      description: A boolean value that is true if the class represents a singleton WMI class and false otherwise.\n  overload: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/ManagementEntityAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  manager: jillfra\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  isExternal: false\n  name: ManagementEntityAttribute()\n  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute()\n  fullName: ManagementEntityAttribute.ManagementEntityAttribute()\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.External\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  isExternal: false\n  name: External\n  nameWithType: ManagementEntityAttribute.External\n  fullName: ManagementEntityAttribute.External\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ManagementEntityAttribute.Name\n  fullName: ManagementEntityAttribute.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  isExternal: false\n  name: Singleton\n  nameWithType: ManagementEntityAttribute.Singleton\n  fullName: ManagementEntityAttribute.Singleton\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.#ctor*\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  isExternal: false\n  name: ManagementEntityAttribute\n  nameWithType: ManagementEntityAttribute.ManagementEntityAttribute\n  fullName: ManagementEntityAttribute.ManagementEntityAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/ManagementEntityAttribute.xml\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.External*\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  isExternal: false\n  name: External\n  nameWithType: ManagementEntityAttribute.External\n  fullName: ManagementEntityAttribute.External\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/ManagementEntityAttribute.xml\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.Name*\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ManagementEntityAttribute.Name\n  fullName: ManagementEntityAttribute.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/ManagementEntityAttribute.xml\n- uid: System.Management.Instrumentation.ManagementEntityAttribute.Singleton*\n  parent: System.Management.Instrumentation.ManagementEntityAttribute\n  isExternal: false\n  name: Singleton\n  nameWithType: ManagementEntityAttribute.Singleton\n  fullName: ManagementEntityAttribute.Singleton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Management.Instrumentation/ManagementEntityAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}