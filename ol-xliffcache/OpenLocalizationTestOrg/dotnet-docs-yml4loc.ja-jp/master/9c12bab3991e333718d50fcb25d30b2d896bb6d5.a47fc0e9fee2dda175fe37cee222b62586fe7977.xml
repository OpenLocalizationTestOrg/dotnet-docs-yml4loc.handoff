{"nodes":[{"content":"Provides a simple list of delegates. This class cannot be inherited.","nodes":[{"pos":[0,68],"content":"Provides a simple list of delegates. This class cannot be inherited.","nodes":[{"content":"Provides a simple list of delegates. This class cannot be inherited.","pos":[0,68],"nodes":[{"content":"Provides a simple list of delegates.","pos":[0,36]},{"content":"This class cannot be inherited.","pos":[37,68]}]}]}],"pos":[869,938],"yaml":true},{"content":"This class uses a linear search algorithm to find entries in the list of delegates. A linear search algorithm is inefficient when working with a large number of entries. Therefore, when you have a large list, finding entries is slow.","nodes":[{"pos":[0,233],"content":"This class uses a linear search algorithm to find entries in the list of delegates. A linear search algorithm is inefficient when working with a large number of entries. Therefore, when you have a large list, finding entries is slow.","nodes":[{"content":"This class uses a linear search algorithm to find entries in the list of delegates. A linear search algorithm is inefficient when working with a large number of entries. Therefore, when you have a large list, finding entries is slow.","pos":[0,233],"nodes":[{"content":"This class uses a linear search algorithm to find entries in the list of delegates.","pos":[0,83]},{"content":"A linear search algorithm is inefficient when working with a large number of entries.","pos":[84,169]},{"content":"Therefore, when you have a large list, finding entries is slow.","pos":[170,233]}]}]}],"pos":[949,1183],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.EventHandlerList\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.EventHandlerList\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.EventHandlerList\"></xref> class."}],"pos":[3119,3220],"yaml":true},{"content":"Adds a delegate to the list.","nodes":[{"pos":[0,28],"content":"Adds a delegate to the list.","nodes":[{"content":"Adds a delegate to the list.","pos":[0,28]}]}],"pos":[4760,4789],"yaml":true},{"content":"The object that owns the event.","nodes":[{"pos":[0,31],"content":"The object that owns the event.","nodes":[{"content":"The object that owns the event.","pos":[0,31]}]}],"pos":[4940,4972],"yaml":true},{"content":"The delegate to add to the list.","nodes":[{"pos":[0,32],"content":"The delegate to add to the list.","nodes":[{"content":"The delegate to add to the list.","pos":[0,32]}]}],"pos":[5035,5068],"yaml":true},{"content":"Adds a list of delegates to the current list.","nodes":[{"pos":[0,45],"content":"Adds a list of delegates to the current list.","nodes":[{"content":"Adds a list of delegates to the current list.","pos":[0,45]}]}],"pos":[6576,6622],"yaml":true},{"content":"The list to add.","nodes":[{"pos":[0,16],"content":"The list to add.","nodes":[{"content":"The list to add.","pos":[0,16]}]}],"pos":[6835,6852],"yaml":true},{"content":"Disposes the delegate list.","nodes":[{"pos":[0,27],"content":"Disposes the delegate list.","nodes":[{"content":"Disposes the delegate list.","pos":[0,27]}]}],"pos":[8169,8197],"yaml":true},{"content":"Call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> when you are finished using the <xref:System.ComponentModel.EventHandlerList>. The <xref:System.ComponentModel.EventHandlerList.Dispose%2A> method leaves the <xref:System.ComponentModel.EventHandlerList> in an unusable state. After calling <xref:System.ComponentModel.EventHandlerList.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.EventHandlerList> so the memory it was occupying can be reclaimed by garbage collection.  \n  \n> [!NOTE]\n>  Always call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.EventHandlerList>. Otherwise, the resources the <xref:System.ComponentModel.EventHandlerList> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.EventHandlerList> object's destructor.","nodes":[{"pos":[0,515],"content":"Call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> when you are finished using the <xref:System.ComponentModel.EventHandlerList>. The <xref:System.ComponentModel.EventHandlerList.Dispose%2A> method leaves the <xref:System.ComponentModel.EventHandlerList> in an unusable state. After calling <xref:System.ComponentModel.EventHandlerList.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.EventHandlerList> so the memory it was occupying can be reclaimed by garbage collection.","nodes":[{"content":"Call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> when you are finished using the <xref:System.ComponentModel.EventHandlerList>. The <xref:System.ComponentModel.EventHandlerList.Dispose%2A> method leaves the <xref:System.ComponentModel.EventHandlerList> in an unusable state. After calling <xref:System.ComponentModel.EventHandlerList.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.EventHandlerList> so the memory it was occupying can be reclaimed by garbage collection.","pos":[0,515],"nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph>.","pos":[0,140],"source":"Call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> when you are finished using the <xref:System.ComponentModel.EventHandlerList>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> in an unusable state.","pos":[141,287],"source":" The <xref:System.ComponentModel.EventHandlerList.Dispose%2A> method leaves the <xref:System.ComponentModel.EventHandlerList> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> so the memory it was occupying can be reclaimed by garbage collection.","pos":[288,515],"source":" After calling <xref:System.ComponentModel.EventHandlerList.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.EventHandlerList> so the memory it was occupying can be reclaimed by garbage collection."}]}]},{"pos":[523,899],"content":"[!NOTE]\n Always call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.EventHandlerList>. Otherwise, the resources the <xref:System.ComponentModel.EventHandlerList> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.EventHandlerList> object's destructor.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.EventHandlerList>. Otherwise, the resources the <xref:System.ComponentModel.EventHandlerList> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.EventHandlerList> object's destructor.","pos":[8,374],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.ComponentModel.EventHandlerList.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph>.","pos":[1,162],"source":" Always call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.EventHandlerList>."},{"content":"Otherwise, the resources the <ph id=\"ph1\">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> is using will not be freed until garbage collection calls the <ph id=\"ph2\">&lt;xref:System.ComponentModel.EventHandlerList&gt;</ph> object's destructor.","pos":[163,366],"source":" Otherwise, the resources the <xref:System.ComponentModel.EventHandlerList> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.EventHandlerList> object's destructor."}]}]}],"pos":[8208,9113],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the delegate for the specified object.","nodes":[{"pos":[0,51],"content":"Gets or sets the delegate for the specified object.","nodes":[{"content":"Gets or sets the delegate for the specified object.","pos":[0,51]}]}],"pos":[10539,10591],"yaml":true},{"content":"When the key is not found in the list and you provide a delegate to set the value of the key, then the key is added to the top of the list and assigned to the delegate as its value.","nodes":[{"pos":[0,181],"content":"When the key is not found in the list and you provide a delegate to set the value of the key, then the key is added to the top of the list and assigned to the delegate as its value.","nodes":[{"content":"When the key is not found in the list and you provide a delegate to set the value of the key, then the key is added to the top of the list and assigned to the delegate as its value.","pos":[0,181]}]}],"pos":[10602,10784],"yaml":true,"extradata":"MT"},{"content":"An object to find in the list.","nodes":[{"pos":[0,30],"content":"An object to find in the list.","nodes":[{"content":"An object to find in the list.","pos":[0,30]}]}],"pos":[10929,10960],"yaml":true},{"content":"The delegate for the specified key, or `null` if a delegate does not exist.","nodes":[{"pos":[0,75],"content":"The delegate for the specified key, or <ph id=\"ph1\">`null`</ph> if a delegate does not exist.","source":"The delegate for the specified key, or `null` if a delegate does not exist."}],"pos":[11019,11095],"yaml":true},{"content":"Removes a delegate from the list.","nodes":[{"pos":[0,33],"content":"Removes a delegate from the list.","nodes":[{"content":"Removes a delegate from the list.","pos":[0,33]}]}],"pos":[12582,12616],"yaml":true},{"content":"The object that owns the event.","nodes":[{"pos":[0,31],"content":"The object that owns the event.","nodes":[{"content":"The object that owns the event.","pos":[0,31]}]}],"pos":[12770,12802],"yaml":true},{"content":"The delegate to remove from the list.","nodes":[{"pos":[0,37],"content":"The delegate to remove from the list.","nodes":[{"content":"The delegate to remove from the list.","pos":[0,37]}]}],"pos":[12865,12903],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.EventHandlerList\n  commentId: T:System.ComponentModel.EventHandlerList\n  id: EventHandlerList\n  children:\n  - System.ComponentModel.EventHandlerList.#ctor\n  - System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)\n  - System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)\n  - System.ComponentModel.EventHandlerList.Dispose\n  - System.ComponentModel.EventHandlerList.Item(System.Object)\n  - System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)\n  langs:\n  - csharp\n  name: EventHandlerList\n  nameWithType: EventHandlerList\n  fullName: System.ComponentModel.EventHandlerList\n  type: Class\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Provides a simple list of delegates. This class cannot be inherited.\n  remarks: This class uses a linear search algorithm to find entries in the list of delegates. A linear search algorithm is inefficient when working with a large number of entries. Therefore, when you have a large list, finding entries is slow.\n  example:\n  - 'For an example of using an <xref:System.ComponentModel.EventHandlerList>, see [How to: Handle Multiple Events Using Event Properties](~/docs/standard/events/how-to-handle-multiple-events-using-event-properties.md).'\n  syntax:\n    content: 'public sealed class EventHandlerList : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.EventHandlerList.#ctor\n  commentId: M:System.ComponentModel.EventHandlerList.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  name: EventHandlerList()\n  nameWithType: EventHandlerList.EventHandlerList()\n  fullName: EventHandlerList.EventHandlerList()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.EventHandlerList\"></xref> class.\n  syntax:\n    content: public EventHandlerList ();\n    parameters: []\n  overload: System.ComponentModel.EventHandlerList.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)\n  commentId: M:System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)\n  id: AddHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  name: AddHandler(Object, Delegate)\n  nameWithType: EventHandlerList.AddHandler(Object, Delegate)\n  fullName: EventHandlerList.AddHandler(Object, Delegate)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Adds a delegate to the list.\n  syntax:\n    content: public void AddHandler (object key, Delegate value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The object that owns the event.\n    - id: value\n      type: System.Delegate\n      description: The delegate to add to the list.\n  overload: System.ComponentModel.EventHandlerList.AddHandler*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)\n  commentId: M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)\n  id: AddHandlers(System.ComponentModel.EventHandlerList)\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  name: AddHandlers(EventHandlerList)\n  nameWithType: EventHandlerList.AddHandlers(EventHandlerList)\n  fullName: EventHandlerList.AddHandlers(EventHandlerList)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Adds a list of delegates to the current list.\n  syntax:\n    content: public void AddHandlers (System.ComponentModel.EventHandlerList listToAddFrom);\n    parameters:\n    - id: listToAddFrom\n      type: System.ComponentModel.EventHandlerList\n      description: The list to add.\n  overload: System.ComponentModel.EventHandlerList.AddHandlers*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.EventHandlerList.Dispose\n  commentId: M:System.ComponentModel.EventHandlerList.Dispose\n  id: Dispose\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: EventHandlerList.Dispose()\n  fullName: EventHandlerList.Dispose()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Disposes the delegate list.\n  remarks: \"Call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> when you are finished using the <xref:System.ComponentModel.EventHandlerList>. The <xref:System.ComponentModel.EventHandlerList.Dispose%2A> method leaves the <xref:System.ComponentModel.EventHandlerList> in an unusable state. After calling <xref:System.ComponentModel.EventHandlerList.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.EventHandlerList> so the memory it was occupying can be reclaimed by garbage collection.  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.ComponentModel.EventHandlerList.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.EventHandlerList>. Otherwise, the resources the <xref:System.ComponentModel.EventHandlerList> is using will not be freed until garbage collection calls the <xref:System.ComponentModel.EventHandlerList> object's destructor.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.ComponentModel.EventHandlerList.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.EventHandlerList.Item(System.Object)\n  commentId: P:System.ComponentModel.EventHandlerList.Item(System.Object)\n  id: Item(System.Object)\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  name: Item(Object)\n  nameWithType: EventHandlerList.Item(Object)\n  fullName: EventHandlerList.Item(Object)\n  type: Property\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets or sets the delegate for the specified object.\n  remarks: When the key is not found in the list and you provide a delegate to set the value of the key, then the key is added to the top of the list and assigned to the delegate as its value.\n  syntax:\n    content: public Delegate this[object key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Object\n      description: An object to find in the list.\n    return:\n      type: System.Delegate\n      description: The delegate for the specified key, or `null` if a delegate does not exist.\n  overload: System.ComponentModel.EventHandlerList.Item*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)\n  commentId: M:System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)\n  id: RemoveHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventHandlerList\n  langs:\n  - csharp\n  name: RemoveHandler(Object, Delegate)\n  nameWithType: EventHandlerList.RemoveHandler(Object, Delegate)\n  fullName: EventHandlerList.RemoveHandler(Object, Delegate)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Removes a delegate from the list.\n  syntax:\n    content: public void RemoveHandler (object key, Delegate value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: The object that owns the event.\n    - id: value\n      type: System.Delegate\n      description: The delegate to remove from the list.\n  overload: System.ComponentModel.EventHandlerList.RemoveHandler*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.EventHandlerList.#ctor\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: EventHandlerList()\n  nameWithType: EventHandlerList.EventHandlerList()\n  fullName: EventHandlerList.EventHandlerList()\n- uid: System.ComponentModel.EventHandlerList.AddHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: AddHandler(Object, Delegate)\n  nameWithType: EventHandlerList.AddHandler(Object, Delegate)\n  fullName: EventHandlerList.AddHandler(Object, Delegate)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: AddHandlers(EventHandlerList)\n  nameWithType: EventHandlerList.AddHandlers(EventHandlerList)\n  fullName: EventHandlerList.AddHandlers(EventHandlerList)\n- uid: System.ComponentModel.EventHandlerList\n  parent: System.ComponentModel\n  isExternal: false\n  name: EventHandlerList\n  nameWithType: EventHandlerList\n  fullName: System.ComponentModel.EventHandlerList\n- uid: System.ComponentModel.EventHandlerList.Dispose\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: Dispose()\n  nameWithType: EventHandlerList.Dispose()\n  fullName: EventHandlerList.Dispose()\n- uid: System.ComponentModel.EventHandlerList.Item(System.Object)\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: Item(Object)\n  nameWithType: EventHandlerList.Item(Object)\n  fullName: EventHandlerList.Item(Object)\n- uid: System.ComponentModel.EventHandlerList.RemoveHandler(System.Object,System.Delegate)\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: RemoveHandler(Object, Delegate)\n  nameWithType: EventHandlerList.RemoveHandler(Object, Delegate)\n  fullName: EventHandlerList.RemoveHandler(Object, Delegate)\n- uid: System.ComponentModel.EventHandlerList.#ctor*\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: EventHandlerList\n  nameWithType: EventHandlerList.EventHandlerList\n  fullName: EventHandlerList.EventHandlerList\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n- uid: System.ComponentModel.EventHandlerList.AddHandler*\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: AddHandler\n  nameWithType: EventHandlerList.AddHandler\n  fullName: EventHandlerList.AddHandler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n- uid: System.ComponentModel.EventHandlerList.AddHandlers*\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: AddHandlers\n  nameWithType: EventHandlerList.AddHandlers\n  fullName: EventHandlerList.AddHandlers\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n- uid: System.ComponentModel.EventHandlerList.Dispose*\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: Dispose\n  nameWithType: EventHandlerList.Dispose\n  fullName: EventHandlerList.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n- uid: System.ComponentModel.EventHandlerList.Item*\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: Item\n  nameWithType: EventHandlerList.Item\n  fullName: EventHandlerList.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n- uid: System.ComponentModel.EventHandlerList.RemoveHandler*\n  parent: System.ComponentModel.EventHandlerList\n  isExternal: false\n  name: RemoveHandler\n  nameWithType: EventHandlerList.RemoveHandler\n  fullName: EventHandlerList.RemoveHandler\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/EventHandlerList.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}