{"nodes":[{"content":"Represents a set of access rights to be audited for a user or group. This class cannot be inherited.","nodes":[{"pos":[0,100],"content":"Represents a set of access rights to be audited for a user or group. This class cannot be inherited.","nodes":[{"content":"Represents a set of access rights to be audited for a user or group. This class cannot be inherited.","pos":[0,100],"nodes":[{"content":"Represents a set of access rights to be audited for a user or group.","pos":[0,68]},{"content":"This class cannot be inherited.","pos":[69,100]}]}]}],"pos":[686,787],"yaml":true},{"content":"The <xref:System.Security.AccessControl.MutexAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes. For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.MutexSecurity>.  \n  \n> [!NOTE]\n>  Windows access control security is meaningful only for named system mutexes. If a <xref:System.Threading.Mutex> object represents a local mutex, access control is irrelevant.  \n  \n To get a list of the audit rules currently applied to a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=fullName> method to get a <xref:System.Security.AccessControl.MutexSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.MutexAuditRule> objects.  \n  \n <xref:System.Security.AccessControl.MutexAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL). When you get the set of all audit rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.  \n  \n> [!NOTE]\n>  The underlying access control entries change as you apply and remove rules. The information in rules is merged if possible, to maintain the smallest number of access control entries. Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.  \n  \n Use <xref:System.Security.AccessControl.MutexAuditRule> objects to specify access rights to be audited for a user or group. To apply a rule to a named system mutex, use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to get the <xref:System.Security.AccessControl.MutexSecurity> object. Modify the <xref:System.Security.AccessControl.MutexSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to reattach the security object.  \n  \n> [!IMPORTANT]\n>  Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to assign the altered security object to the named mutex.  \n  \n <xref:System.Security.AccessControl.MutexAuditRule> objects are immutable. Security for a mutex is modified using the methods of the <xref:System.Security.AccessControl.MutexSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.  \n  \n> [!NOTE]\n>  Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.","nodes":[{"pos":[0,356],"content":"The <xref:System.Security.AccessControl.MutexAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes. For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.MutexSecurity>.","nodes":[{"content":"The <xref:System.Security.AccessControl.MutexAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes. For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.MutexSecurity>.","pos":[0,356],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes.","pos":[0,191],"source":"The <xref:System.Security.AccessControl.MutexAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes."},{"content":"For an overview of these classes and their relationship to the underlying Windows access control structures, see <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph>.","pos":[192,356],"source":" For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.MutexSecurity>."}]}]},{"pos":[364,549],"content":"[!NOTE]\n Windows access control security is meaningful only for named system mutexes. If a <xref:System.Threading.Mutex> object represents a local mutex, access control is irrelevant.","leadings":["","> "],"nodes":[{"content":" Windows access control security is meaningful only for named system mutexes. If a <xref:System.Threading.Mutex> object represents a local mutex, access control is irrelevant.","pos":[8,183],"nodes":[{"content":"Windows access control security is meaningful only for named system mutexes.","pos":[1,77]},{"content":"If a <ph id=\"ph1\">&lt;xref:System.Threading.Mutex&gt;</ph> object represents a local mutex, access control is irrelevant.","pos":[78,175],"source":" If a <xref:System.Threading.Mutex> object represents a local mutex, access control is irrelevant."}]}]},{"pos":[556,968],"content":"To get a list of the audit rules currently applied to a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=fullName> method to get a <xref:System.Security.AccessControl.MutexSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.MutexAuditRule> objects.","nodes":[{"content":"To get a list of the audit rules currently applied to a named mutex, use the <ph id=\"ph1\">&lt;xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=fullName&gt;</ph> method to get a <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object, and then use its <ph id=\"ph3\">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A&gt;</ph> method to obtain a collection of <ph id=\"ph4\">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> objects.","pos":[0,412],"source":"To get a list of the audit rules currently applied to a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=fullName> method to get a <xref:System.Security.AccessControl.MutexSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.MutexAuditRule> objects."}]},{"pos":[975,1304],"content":"<xref:System.Security.AccessControl.MutexAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL). When you get the set of all audit rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.","nodes":[{"content":"<xref:System.Security.AccessControl.MutexAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL). When you get the set of all audit rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.","pos":[0,329],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).","pos":[0,169],"source":"<xref:System.Security.AccessControl.MutexAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL)."},{"content":"When you get the set of all audit rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.","pos":[170,329]}]}]},{"pos":[1312,1625],"content":"[!NOTE]\n The underlying access control entries change as you apply and remove rules. The information in rules is merged if possible, to maintain the smallest number of access control entries. Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.","leadings":["","> "],"nodes":[{"content":" The underlying access control entries change as you apply and remove rules. The information in rules is merged if possible, to maintain the smallest number of access control entries. Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.","pos":[8,311],"nodes":[{"content":"The underlying access control entries change as you apply and remove rules.","pos":[1,76]},{"content":"The information in rules is merged if possible, to maintain the smallest number of access control entries.","pos":[77,183]},{"content":"Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.","pos":[184,303]}]}]},{"pos":[1632,2195],"content":"Use <xref:System.Security.AccessControl.MutexAuditRule> objects to specify access rights to be audited for a user or group. To apply a rule to a named system mutex, use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to get the <xref:System.Security.AccessControl.MutexSecurity> object. Modify the <xref:System.Security.AccessControl.MutexSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to reattach the security object.","nodes":[{"content":"Use <xref:System.Security.AccessControl.MutexAuditRule> objects to specify access rights to be audited for a user or group. To apply a rule to a named system mutex, use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to get the <xref:System.Security.AccessControl.MutexSecurity> object. Modify the <xref:System.Security.AccessControl.MutexSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to reattach the security object.","pos":[0,563],"nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> objects to specify access rights to be audited for a user or group.","pos":[0,123],"source":"Use <xref:System.Security.AccessControl.MutexAuditRule> objects to specify access rights to be audited for a user or group."},{"content":"To apply a rule to a named system mutex, use the <ph id=\"ph1\">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName&gt;</ph> method to get the <ph id=\"ph2\">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object.","pos":[124,324],"source":" To apply a rule to a named system mutex, use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to get the <xref:System.Security.AccessControl.MutexSecurity> object."},{"content":"Modify the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object by using its methods to add the rule, and then use the <ph id=\"ph2\">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName&gt;</ph> method to reattach the security object.","pos":[325,563],"source":" Modify the <xref:System.Security.AccessControl.MutexSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to reattach the security object."}]}]},{"pos":[2203,2508],"content":"[!IMPORTANT]\n Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to assign the altered security object to the named mutex.","leadings":["","> "],"nodes":[{"content":"Changes you make to a <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> object do not affect the access levels of the named mutex until you call the <ph id=\"ph2\">&lt;xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName&gt;</ph> method to assign the altered security object to the named mutex.","pos":[14,303],"source":" Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to assign the altered security object to the named mutex."}]},{"pos":[2515,2796],"content":"<xref:System.Security.AccessControl.MutexAuditRule> objects are immutable. Security for a mutex is modified using the methods of the <xref:System.Security.AccessControl.MutexSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.","nodes":[{"content":"<xref:System.Security.AccessControl.MutexAuditRule> objects are immutable. Security for a mutex is modified using the methods of the <xref:System.Security.AccessControl.MutexSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.","pos":[0,281],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> objects are immutable.","pos":[0,74],"source":"<xref:System.Security.AccessControl.MutexAuditRule> objects are immutable."},{"content":"Security for a mutex is modified using the methods of the <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.MutexSecurity&gt;</ph> class to add or remove rules; as you do this, the underlying access control entries are modified.","pos":[75,281],"source":" Security for a mutex is modified using the methods of the <xref:System.Security.AccessControl.MutexSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified."}]}]},{"pos":[2804,2913],"content":"[!NOTE]\n Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.","leadings":["","> "],"nodes":[{"content":"Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.","pos":[9,107]}]}],"pos":[798,3734],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.MutexAuditRule\"></xref> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.","nodes":[{"pos":[0,214],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.MutexAuditRule\"&gt;&lt;/xref&gt;</ph> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.","source":"Initializes a new instance of the <xref href=\"System.Security.AccessControl.MutexAuditRule\"></xref> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both."}],"pos":[6404,6619],"yaml":true},{"content":"To create an <xref:System.Security.Principal.NTAccount> object from a string representing a user or group name, use the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> constructor.","nodes":[{"pos":[0,227],"content":"To create an <xref:System.Security.Principal.NTAccount> object from a string representing a user or group name, use the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> constructor.","nodes":[{"content":"To create an <ph id=\"ph1\">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object from a string representing a user or group name, use the <ph id=\"ph2\">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor.","pos":[0,227],"source":"To create an <xref:System.Security.Principal.NTAccount> object from a string representing a user or group name, use the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> constructor."}]}],"pos":[6630,6858],"yaml":true,"extradata":"MT"},{"content":"The user or group the rule applies to. Must be of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> or a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,292],"content":"The user or group the rule applies to. Must be of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> or a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"content":"The user or group the rule applies to.","pos":[0,38]},{"content":"Must be of type <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> or a type such as <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> that can be converted to type <ph id=\"ph3\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","pos":[39,292],"source":" Must be of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> or a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}]}],"pos":[7172,7465],"yaml":true},{"content":"A bitwise combination of <xref href=\"System.Security.AccessControl.MutexRights\"></xref> values specifying the kinds of access to audit.","nodes":[{"pos":[0,135],"content":"A bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.MutexRights\"&gt;&lt;/xref&gt;</ph> values specifying the kinds of access to audit.","source":"A bitwise combination of <xref href=\"System.Security.AccessControl.MutexRights\"></xref> values specifying the kinds of access to audit."}],"pos":[7560,7696],"yaml":true},{"content":"A bitwise combination of <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values specifying whether to audit success, failure, or both.","nodes":[{"pos":[0,148],"content":"A bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.AuditFlags\"&gt;&lt;/xref&gt;</ph> values specifying whether to audit success, failure, or both.","source":"A bitwise combination of <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values specifying whether to audit success, failure, or both."}],"pos":[7784,7933],"yaml":true},{"content":"<code>eventRights</code> specifies an invalid value.  \n  \n -or-  \n  \n <code>flags</code> specifies an invalid value.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;eventRights&lt;/code&gt;</ph> specifies an invalid value.","source":"<code>eventRights</code> specifies an invalid value."},{"pos":[59,63],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[70,116],"content":"<ph id=\"ph1\">&lt;code&gt;flags&lt;/code&gt;</ph> specifies an invalid value.","source":"<code>flags</code> specifies an invalid value."}],"pos":[8125,8248],"yaml":true},{"content":"<code>identity</code> is `null`.  \n  \n -or-  \n  \n <code>eventRights</code> is zero.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>identity</code> is `null`."},{"pos":[39,43],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[50,83],"content":"<ph id=\"ph1\">&lt;code&gt;eventRights&lt;/code&gt;</ph> is zero.","source":"<code>eventRights</code> is zero."}],"pos":[8350,8440],"yaml":true},{"content":"<code>identity</code> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be translated to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.","nodes":[{"pos":[0,283],"content":"<ph id=\"ph1\">&lt;code&gt;identity&lt;/code&gt;</ph> is neither of type <ph id=\"ph2\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph> nor of a type such as <ph id=\"ph3\">&lt;xref href=\"System.Security.Principal.NTAccount\"&gt;&lt;/xref&gt;</ph> that can be translated to type <ph id=\"ph4\">&lt;xref href=\"System.Security.Principal.SecurityIdentifier\"&gt;&lt;/xref&gt;</ph>.","source":"<code>identity</code> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be translated to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>."}],"pos":[8534,8818],"yaml":true},{"content":"Gets the access rights affected by the audit rule.","nodes":[{"pos":[0,50],"content":"Gets the access rights affected by the audit rule.","nodes":[{"content":"Gets the access rights affected by the audit rule.","pos":[0,50]}]}],"pos":[10044,10095],"yaml":true},{"content":"<xref:System.Security.AccessControl.MutexAuditRule> objects are immutable. You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.","nodes":[{"pos":[0,286],"content":"<xref:System.Security.AccessControl.MutexAuditRule> objects are immutable. You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.","nodes":[{"content":"<xref:System.Security.AccessControl.MutexAuditRule> objects are immutable. You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.","pos":[0,286],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.AccessControl.MutexAuditRule&gt;</ph> objects are immutable.","pos":[0,74],"source":"<xref:System.Security.AccessControl.MutexAuditRule> objects are immutable."},{"content":"You can create a new audit rule representing a different user, different rights, or a different combination of <ph id=\"ph1\">&lt;xref:System.Security.AccessControl.AuditFlags&gt;</ph> flags, but you cannot modify an existing audit rule.","pos":[75,286],"source":" You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule."}]}]}],"pos":[10106,10393],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of <xref href=\"System.Security.AccessControl.MutexRights\"></xref> values that indicates the rights affected by the audit rule.","nodes":[{"pos":[0,148],"content":"A bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.MutexRights\"&gt;&lt;/xref&gt;</ph> values that indicates the rights affected by the audit rule.","source":"A bitwise combination of <xref href=\"System.Security.AccessControl.MutexRights\"></xref> values that indicates the rights affected by the audit rule."}],"pos":[10571,10720],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.MutexAuditRule\n  commentId: T:System.Security.AccessControl.MutexAuditRule\n  id: MutexAuditRule\n  children:\n  - System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.MutexAuditRule.MutexRights\n  langs:\n  - csharp\n  name: MutexAuditRule\n  nameWithType: MutexAuditRule\n  fullName: System.Security.AccessControl.MutexAuditRule\n  type: Class\n  assemblies:\n  - System.Threading.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Represents a set of access rights to be audited for a user or group. This class cannot be inherited.\n  remarks: \"The <xref:System.Security.AccessControl.MutexAuditRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system mutexes. For an overview of these classes and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.MutexSecurity>.  \\n  \\n> [!NOTE]\\n>  Windows access control security is meaningful only for named system mutexes. If a <xref:System.Threading.Mutex> object represents a local mutex, access control is irrelevant.  \\n  \\n To get a list of the audit rules currently applied to a named mutex, use the <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=fullName> method to get a <xref:System.Security.AccessControl.MutexSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.MutexAuditRule> objects.  \\n  \\n <xref:System.Security.AccessControl.MutexAuditRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL). When you get the set of all audit rules for a mutex, the set contains the minimum number of rules currently required to express all the access control entries.  \\n  \\n> [!NOTE]\\n>  The underlying access control entries change as you apply and remove rules. The information in rules is merged if possible, to maintain the smallest number of access control entries. Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.  \\n  \\n Use <xref:System.Security.AccessControl.MutexAuditRule> objects to specify access rights to be audited for a user or group. To apply a rule to a named system mutex, use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to get the <xref:System.Security.AccessControl.MutexSecurity> object. Modify the <xref:System.Security.AccessControl.MutexSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to reattach the security object.  \\n  \\n> [!IMPORTANT]\\n>  Changes you make to a <xref:System.Security.AccessControl.MutexSecurity> object do not affect the access levels of the named mutex until you call the <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=fullName> method to assign the altered security object to the named mutex.  \\n  \\n <xref:System.Security.AccessControl.MutexAuditRule> objects are immutable. Security for a mutex is modified using the methods of the <xref:System.Security.AccessControl.MutexSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.  \\n  \\n> [!NOTE]\\n>  Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.\"\n  syntax:\n    content: 'public sealed class MutexAuditRule : System.Security.AccessControl.AuditRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AuditRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AuditRule.AuditFlags\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/MutexAuditRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)\n  commentId: M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.MutexAuditRule\n  langs:\n  - csharp\n  name: MutexAuditRule(IdentityReference, MutexRights, AuditFlags)\n  nameWithType: MutexAuditRule.MutexAuditRule(IdentityReference, MutexRights, AuditFlags)\n  fullName: MutexAuditRule.MutexAuditRule(IdentityReference, MutexRights, AuditFlags)\n  type: Constructor\n  assemblies:\n  - System.Threading.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Initializes a new instance of the <xref href=\"System.Security.AccessControl.MutexAuditRule\"></xref> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.\n  remarks: To create an <xref:System.Security.Principal.NTAccount> object from a string representing a user or group name, use the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName> constructor.\n  syntax:\n    content: public MutexAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: The user or group the rule applies to. Must be of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> or a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be converted to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n    - id: eventRights\n      type: System.Security.AccessControl.MutexRights\n      description: A bitwise combination of <xref href=\"System.Security.AccessControl.MutexRights\"></xref> values specifying the kinds of access to audit.\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: A bitwise combination of <xref href=\"System.Security.AccessControl.AuditFlags\"></xref> values specifying whether to audit success, failure, or both.\n  overload: System.Security.AccessControl.MutexAuditRule.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>eventRights</code> specifies an invalid value.  \\n  \\n -or-  \\n  \\n <code>flags</code> specifies an invalid value.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>identity</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>eventRights</code> is zero.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>identity</code> is neither of type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref> nor of a type such as <xref href=\"System.Security.Principal.NTAccount\"></xref> that can be translated to type <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/MutexAuditRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.AccessControl.MutexAuditRule.MutexRights\n  commentId: P:System.Security.AccessControl.MutexAuditRule.MutexRights\n  id: MutexRights\n  parent: System.Security.AccessControl.MutexAuditRule\n  langs:\n  - csharp\n  name: MutexRights\n  nameWithType: MutexAuditRule.MutexRights\n  fullName: MutexAuditRule.MutexRights\n  type: Property\n  assemblies:\n  - System.Threading.AccessControl\n  - mscorlib\n  namespace: System.Security.AccessControl\n  summary: Gets the access rights affected by the audit rule.\n  remarks: <xref:System.Security.AccessControl.MutexAuditRule> objects are immutable. You can create a new audit rule representing a different user, different rights, or a different combination of <xref:System.Security.AccessControl.AuditFlags> flags, but you cannot modify an existing audit rule.\n  syntax:\n    content: public System.Security.AccessControl.MutexRights MutexRights { get; }\n    return:\n      type: System.Security.AccessControl.MutexRights\n      description: A bitwise combination of <xref href=\"System.Security.AccessControl.MutexRights\"></xref> values that indicates the rights affected by the audit rule.\n  overload: System.Security.AccessControl.MutexAuditRule.MutexRights*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/MutexAuditRule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.MutexAuditRule\n  isExternal: false\n  name: MutexAuditRule(IdentityReference, MutexRights, AuditFlags)\n  nameWithType: MutexAuditRule.MutexAuditRule(IdentityReference, MutexRights, AuditFlags)\n  fullName: MutexAuditRule.MutexAuditRule(IdentityReference, MutexRights, AuditFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Security.AccessControl.MutexRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexRights\n  fullName: System.Security.AccessControl.MutexRights\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.MutexAuditRule.MutexRights\n  parent: System.Security.AccessControl.MutexAuditRule\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexAuditRule.MutexRights\n  fullName: MutexAuditRule.MutexRights\n- uid: System.Security.AccessControl.MutexAuditRule.#ctor*\n  parent: System.Security.AccessControl.MutexAuditRule\n  isExternal: false\n  name: MutexAuditRule\n  nameWithType: MutexAuditRule.MutexAuditRule\n  fullName: MutexAuditRule.MutexAuditRule\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/MutexAuditRule.xml\n- uid: System.Security.AccessControl.MutexAuditRule.MutexRights*\n  parent: System.Security.AccessControl.MutexAuditRule\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexAuditRule.MutexRights\n  fullName: MutexAuditRule.MutexRights\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.AccessControl/MutexAuditRule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.AccessControl.AuthorizationRule.AccessMask\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: AccessMask\n  nameWithType: AuthorizationRule.AccessMask\n  fullName: AuthorizationRule.AccessMask\n- uid: System.Security.AccessControl.AuthorizationRule.IdentityReference\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IdentityReference\n  nameWithType: AuthorizationRule.IdentityReference\n  fullName: AuthorizationRule.IdentityReference\n- uid: System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: AuthorizationRule.InheritanceFlags\n  fullName: AuthorizationRule.InheritanceFlags\n- uid: System.Security.AccessControl.AuthorizationRule.IsInherited\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: IsInherited\n  nameWithType: AuthorizationRule.IsInherited\n  fullName: AuthorizationRule.IsInherited\n- uid: System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  parent: System.Security.AccessControl.AuthorizationRule\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: AuthorizationRule.PropagationFlags\n  fullName: AuthorizationRule.PropagationFlags\n- uid: System.Security.AccessControl.AuditRule.AuditFlags\n  parent: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditRule.AuditFlags\n  fullName: AuditRule.AuditFlags\n"}