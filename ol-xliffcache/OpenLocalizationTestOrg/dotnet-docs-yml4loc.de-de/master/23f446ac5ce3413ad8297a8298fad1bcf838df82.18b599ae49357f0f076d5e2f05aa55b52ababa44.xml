{"nodes":[{"content":"The exception that is thrown when the file image of a dynamic link library (DLL) or an executable program is invalid.","nodes":[{"pos":[0,117],"content":"The exception that is thrown when the file image of a dynamic link library (DLL) or an executable program is invalid.","nodes":[{"content":"The exception that is thrown when the file image of a dynamic link library (DLL) or an executable program is invalid.","pos":[0,117]}]}],"pos":[1185,1303],"yaml":true},{"content":"This exception is thrown when the file format of a dynamic link library (.dll file) or an executable (.exe file) doesn’t conform to the format that the common language runtime expects. In particular, the exception is thrown under the following conditions:  \n  \n-   An earlier version of a .NET Framework utility, such as ILDasm.exe or installutil.exe, is used with an assembly that was developed with a later version of the .NET Framework.  \n  \n     To address this exception, use the version of the tool that corresponds to the version of the .NET Framework that was used to develop the assembly. This may require modifying the `Path` environment variable or providing a fully qualified path to the correct executable.  \n  \n-   You try to load an unmanaged dynamic link library or executable (such as a Windows system DLL) as if it were a .NET Framework assembly. The following example illustrates this by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load Kernel32.dll.  \n  \n     [!code-csharp[System.BadImageFormatException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/condition1.cs#1)]\n     [!code-vb[System.BadImageFormatException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/condition1.vb#1)]  \n  \n     To address this exception, access the methods defined in the DLL by using the features provided by your development language, such as the `Declare` statement in Visual Basic or the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute with the `extern` keyword in C#.  \n  \n-   A DLL or executable is loaded as a 64-bit assembly, but it contains 32-bit features or resources. For example, it relies on COM interop or calls methods in a 32-bit dynamic link library.  \n  \n     To address this exception, set the project's **Platform target** property to x86 (instead of x64 or AnyCPU) and recompile.  \n  \n-   Your application’s components were created using different versions of the .NET Framework. Typically, this exception occurs when an application or component that was developed using the [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or the [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] tries to load an assembly that was developed using the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] or later, or when an application that was developed using the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] or [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] tries to load an assembly that was developed using the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] or later. The <xref:System.BadImageFormatException> may be reported as a compile-time error, or the exception may be thrown at run time. The following example defines a `StringLib` class that has a single member, `ToProperCase`, and that resides in an assembly named StringLib.dll.  \n  \n     [!code-csharp[System.BadImageFormatException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/stringlib.cs#2)]\n     [!code-vb[System.BadImageFormatException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/stringlib.vb#2)]  \n  \n     The following example uses reflection to load an assembly named StringLib.dll. If the source code is compiled with a [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] compiler, a <xref:System.BadImageFormatException> is thrown by the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method.  \n  \n     [!code-csharp[System.BadImageFormatException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/loadstringlib.cs#3)]\n     [!code-vb[System.BadImageFormatException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/loadstringlib.vb#3)]  \n  \n     To address this exception, make sure that the assembly whose code is executing and that throws the exception, and the assembly to be loaded both target compatible versions of the .NET Framework.  \n  \n-   The components of your application target different platforms. For example, you are trying to load ARM assemblies in an x86 application. You can use the following command-line utility to determine the target platforms of individual .NET Framework assemblies. The list of files should be provided as a space-delimited list at the command line.  \n  \n     [!code-csharp[System.BadImageFormatException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/targetplatform1.cs#4)]\n     [!code-vb[System.BadImageFormatException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/targetplatform1.vb#4)]  \n  \n-   Reflecting on C++ executable files may throw this exception. This is most likely caused by the C++ compiler stripping the relocation addresses or the .Reloc section from the executable file. To preserve the .relocation address in a C++ executable file, specify /fixed:no when linking.  \n  \n <xref:System.BadImageFormatException> uses the HRESULT COR_E_BADIMAGEFORMAT, which has the value 0x8007000B.  \n  \n For a list of initial property values for an instance of <xref:System.BadImageFormatException>, see the <xref:System.BadImageFormatException> constructors.","nodes":[{"pos":[0,255],"content":"This exception is thrown when the file format of a dynamic link library (.dll file) or an executable (.exe file) doesn’t conform to the format that the common language runtime expects. In particular, the exception is thrown under the following conditions:","nodes":[{"content":"This exception is thrown when the file format of a dynamic link library (.dll file) or an executable (.exe file) doesn’t conform to the format that the common language runtime expects. In particular, the exception is thrown under the following conditions:","pos":[0,255],"nodes":[{"content":"This exception is thrown when the file format of a dynamic link library (.dll file) or an executable (.exe file) doesn’t conform to the format that the common language runtime expects.","pos":[0,184]},{"content":"In particular, the exception is thrown under the following conditions:","pos":[185,255]}]}]},{"pos":[265,439],"content":"An earlier version of a .NET Framework utility, such as ILDasm.exe or installutil.exe, is used with an assembly that was developed with a later version of the .NET Framework.","nodes":[{"content":"An earlier version of a .NET Framework utility, such as ILDasm.exe or installutil.exe, is used with an assembly that was developed with a later version of the .NET Framework.","pos":[0,174]}]},{"pos":[450,719],"content":"To address this exception, use the version of the tool that corresponds to the version of the .NET Framework that was used to develop the assembly. This may require modifying the `Path` environment variable or providing a fully qualified path to the correct executable.","nodes":[{"content":"To address this exception, use the version of the tool that corresponds to the version of the .NET Framework that was used to develop the assembly.","pos":[0,147]},{"content":"This may require modifying the <ph id=\"ph1\">`Path`</ph> environment variable or providing a fully qualified path to the correct executable.","pos":[148,269],"source":" This may require modifying the `Path` environment variable or providing a fully qualified path to the correct executable."}]},{"pos":[729,1016],"content":"You try to load an unmanaged dynamic link library or executable (such as a Windows system DLL) as if it were a .NET Framework assembly. The following example illustrates this by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load Kernel32.dll.","nodes":[{"content":"You try to load an unmanaged dynamic link library or executable (such as a Windows system DLL) as if it were a .NET Framework assembly. The following example illustrates this by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load Kernel32.dll.","pos":[0,287],"nodes":[{"content":"You try to load an unmanaged dynamic link library or executable (such as a Windows system DLL) as if it were a .NET Framework assembly.","pos":[0,135]},{"content":"The following example illustrates this by using the <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName&gt;</ph> method to load Kernel32.dll.","pos":[136,287],"source":" The following example illustrates this by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load Kernel32.dll."}]}]},{"pos":[1027,1354],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.BadImageFormatException.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/condition1.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.BadImageFormatException.Class#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/condition1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.BadImageFormatException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/condition1.cs#1)]\n [!code-vb[System.BadImageFormatException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/condition1.vb#1)]"},{"pos":[1365,1645],"content":"To address this exception, access the methods defined in the DLL by using the features provided by your development language, such as the <ph id=\"ph1\">`Declare`</ph> statement in Visual Basic or the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</ph> attribute with the <ph id=\"ph3\">`extern`</ph> keyword in C#.","source":"To address this exception, access the methods defined in the DLL by using the features provided by your development language, such as the `Declare` statement in Visual Basic or the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute with the `extern` keyword in C#."},{"pos":[1655,1841],"content":"A DLL or executable is loaded as a 64-bit assembly, but it contains 32-bit features or resources. For example, it relies on COM interop or calls methods in a 32-bit dynamic link library.","nodes":[{"content":"A DLL or executable is loaded as a 64-bit assembly, but it contains 32-bit features or resources. For example, it relies on COM interop or calls methods in a 32-bit dynamic link library.","pos":[0,186],"nodes":[{"content":"A DLL or executable is loaded as a 64-bit assembly, but it contains 32-bit features or resources.","pos":[0,97]},{"content":"For example, it relies on COM interop or calls methods in a 32-bit dynamic link library.","pos":[98,186]}]}]},{"pos":[1852,1974],"content":"To address this exception, set the project's <bpt id=\"p1\">**</bpt>Platform target<ept id=\"p1\">**</ept> property to x86 (instead of x64 or AnyCPU) and recompile.","source":"To address this exception, set the project's **Platform target** property to x86 (instead of x64 or AnyCPU) and recompile."},{"pos":[1984,2993],"content":"Your application’s components were created using different versions of the .NET Framework. Typically, this exception occurs when an application or component that was developed using the [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or the [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] tries to load an assembly that was developed using the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] or later, or when an application that was developed using the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] or [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] tries to load an assembly that was developed using the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] or later. The <xref:System.BadImageFormatException> may be reported as a compile-time error, or the exception may be thrown at run time. The following example defines a `StringLib` class that has a single member, `ToProperCase`, and that resides in an assembly named StringLib.dll.","nodes":[{"content":"Your application’s components were created using different versions of the .NET Framework.","pos":[0,90]},{"content":"Typically, this exception occurs when an application or component that was developed using the <ph id=\"ph1\">[!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)]</ph> or the <ph id=\"ph2\">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> tries to load an assembly that was developed using the <ph id=\"ph3\">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph> or later, or when an application that was developed using the <ph id=\"ph4\">[!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)]</ph> or <ph id=\"ph5\">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> tries to load an assembly that was developed using the <ph id=\"ph6\">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> or later.","pos":[91,737],"source":" Typically, this exception occurs when an application or component that was developed using the [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or the [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] tries to load an assembly that was developed using the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] or later, or when an application that was developed using the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] or [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] tries to load an assembly that was developed using the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] or later."},{"content":"The <ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph> may be reported as a compile-time error, or the exception may be thrown at run time.","pos":[738,864],"source":" The <xref:System.BadImageFormatException> may be reported as a compile-time error, or the exception may be thrown at run time."},{"content":"The following example defines a <ph id=\"ph1\">`StringLib`</ph> class that has a single member, <ph id=\"ph2\">`ToProperCase`</ph>, and that resides in an assembly named StringLib.dll.","pos":[865,1009],"source":" The following example defines a `StringLib` class that has a single member, `ToProperCase`, and that resides in an assembly named StringLib.dll."}]},{"pos":[3004,3329],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.BadImageFormatException.Class#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/stringlib.cs#2)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.BadImageFormatException.Class#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/stringlib.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.BadImageFormatException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/stringlib.cs#2)]\n [!code-vb[System.BadImageFormatException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/stringlib.vb#2)]"},{"pos":[3340,3660],"content":"The following example uses reflection to load an assembly named StringLib.dll. If the source code is compiled with a [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] compiler, a <xref:System.BadImageFormatException> is thrown by the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method.","nodes":[{"content":"The following example uses reflection to load an assembly named StringLib.dll.","pos":[0,78]},{"content":"If the source code is compiled with a <ph id=\"ph1\">[!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)]</ph> compiler, a <ph id=\"ph2\">&lt;xref:System.BadImageFormatException&gt;</ph> is thrown by the <ph id=\"ph3\">&lt;xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName&gt;</ph> method.","pos":[79,320],"source":" If the source code is compiled with a [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] compiler, a <xref:System.BadImageFormatException> is thrown by the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method."}]},{"pos":[3671,4004],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.BadImageFormatException.Class#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/loadstringlib.cs#3)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.BadImageFormatException.Class#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/loadstringlib.vb#3)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.BadImageFormatException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/loadstringlib.cs#3)]\n [!code-vb[System.BadImageFormatException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/loadstringlib.vb#3)]"},{"pos":[4015,4209],"content":"To address this exception, make sure that the assembly whose code is executing and that throws the exception, and the assembly to be loaded both target compatible versions of the .NET Framework.","nodes":[{"content":"To address this exception, make sure that the assembly whose code is executing and that throws the exception, and the assembly to be loaded both target compatible versions of the .NET Framework.","pos":[0,194]}]},{"pos":[4219,4561],"content":"The components of your application target different platforms. For example, you are trying to load ARM assemblies in an x86 application. You can use the following command-line utility to determine the target platforms of individual .NET Framework assemblies. The list of files should be provided as a space-delimited list at the command line.","nodes":[{"content":"The components of your application target different platforms. For example, you are trying to load ARM assemblies in an x86 application. You can use the following command-line utility to determine the target platforms of individual .NET Framework assemblies. The list of files should be provided as a space-delimited list at the command line.","pos":[0,342],"nodes":[{"content":"The components of your application target different platforms.","pos":[0,62]},{"content":"For example, you are trying to load ARM assemblies in an x86 application.","pos":[63,136]},{"content":"You can use the following command-line utility to determine the target platforms of individual .NET Framework assemblies.","pos":[137,258]},{"content":"The list of files should be provided as a space-delimited list at the command line.","pos":[259,342]}]}]},{"pos":[4572,4909],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.BadImageFormatException.Class#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/targetplatform1.cs#4)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.BadImageFormatException.Class#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/targetplatform1.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.BadImageFormatException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/targetplatform1.cs#4)]\n [!code-vb[System.BadImageFormatException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/targetplatform1.vb#4)]"},{"pos":[4919,5203],"content":"Reflecting on C++ executable files may throw this exception. This is most likely caused by the C++ compiler stripping the relocation addresses or the .Reloc section from the executable file. To preserve the .relocation address in a C++ executable file, specify /fixed:no when linking.","nodes":[{"content":"Reflecting on C++ executable files may throw this exception. This is most likely caused by the C++ compiler stripping the relocation addresses or the .Reloc section from the executable file. To preserve the .relocation address in a C++ executable file, specify /fixed:no when linking.","pos":[0,284],"nodes":[{"content":"Reflecting on C++ executable files may throw this exception.","pos":[0,60]},{"content":"This is most likely caused by the C++ compiler stripping the relocation addresses or the .Reloc section from the executable file.","pos":[61,190]},{"content":"To preserve the .relocation address in a C++ executable file, specify /fixed:no when linking.","pos":[191,284]}]}]},{"pos":[5210,5318],"content":"<xref:System.BadImageFormatException> uses the HRESULT COR_E_BADIMAGEFORMAT, which has the value 0x8007000B.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph> uses the HRESULT COR_E_BADIMAGEFORMAT, which has the value 0x8007000B.","pos":[0,108],"source":"<xref:System.BadImageFormatException> uses the HRESULT COR_E_BADIMAGEFORMAT, which has the value 0x8007000B."}]},{"pos":[5325,5480],"content":"For a list of initial property values for an instance of <xref:System.BadImageFormatException>, see the <xref:System.BadImageFormatException> constructors.","nodes":[{"content":"For a list of initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph>, see the <ph id=\"ph2\">&lt;xref:System.BadImageFormatException&gt;</ph> constructors.","pos":[0,155],"source":"For a list of initial property values for an instance of <xref:System.BadImageFormatException>, see the <xref:System.BadImageFormatException> constructors."}]}],"pos":[1314,6835],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class.","nodes":[{"pos":[0,92],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.BadImageFormatException\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class."}],"pos":[9205,9298],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Format of the executable or library is invalid.\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|","nodes":[{"pos":[0,269],"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Format of the executable or library is invalid.\" This message takes into account the current system culture.","nodes":[{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Format of the executable or library is invalid.\" This message takes into account the current system culture.","pos":[0,269],"nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"Format of the executable or library is invalid.\"","pos":[0,209],"source":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"Format of the executable or library is invalid.\""},{"content":"This message takes into account the current system culture.","pos":[210,269]}]}]},{"pos":[276,387],"content":"The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph>.","pos":[0,111],"source":"The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>."}]},{"pos":[394,402],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[403,408],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[444,485],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[486,531],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[536,570],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[571,606],"content":"The localized error message string.","nodes":[{"content":"The localized error message string.","pos":[0,35]}]}],"pos":[9309,9928],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.BadImageFormatException\"&gt;&lt;/xref&gt;</ph> class with a specified error message.","source":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message."}],"pos":[11652,11776],"yaml":true},{"content":"The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,199],"content":"The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of the <ph id=\"ph1\">`message`</ph> parameter is intended to be understood by humans.","pos":[0,78],"source":"The content of the `message` parameter is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[79,199]}]},{"pos":[206,317],"content":"The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph>.","pos":[0,111],"source":"The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>."}]},{"pos":[324,332],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[333,338],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[374,415],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[416,461],"content":"A null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic).","source":"A null reference (`Nothing` in Visual Basic)."},{"pos":[466,500],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[501,526],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[11787,12324],"yaml":true,"extradata":"MT"},{"content":"The message that describes the error.","nodes":[{"pos":[0,37],"content":"The message that describes the error.","nodes":[{"content":"The message that describes the error.","pos":[0,37]}]}],"pos":[12475,12513],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with serialized data.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.BadImageFormatException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with serialized data."}],"pos":[14484,14598],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","nodes":[{"pos":[0,113],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]}]}],"pos":[14609,14723],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.","nodes":[{"pos":[0,143],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> that holds the serialized object data about the exception being thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown."}],"pos":[14999,15143],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.","nodes":[{"pos":[0,140],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination."}],"pos":[15238,15379],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,198],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.BadImageFormatException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[16766,16965],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.Exception.Message%2A>|The error message string.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,545],"content":"The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph>.","pos":[0,111],"source":"The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>."}]},{"pos":[552,560],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[561,566],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[602,643],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[644,674],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[679,713],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[714,739],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[16976,17726],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[17894,17956],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,203],"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a null reference, the current exception is raised in a <ph id=\"ph2\">`catch`</ph> block that handles the inner exception.","pos":[58,203],"source":" If the <code>inner</code> parameter is not a null reference, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[18020,18224],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message and file name.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.BadImageFormatException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and file name.","source":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message and file name."}],"pos":[19937,20075],"yaml":true},{"content":"The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.BadImageFormatException.FileName%2A>|The full name of the file with the invalid image.|  \n|<xref:System.BadImageFormatException.Message%2A>|The error message string.|","nodes":[{"pos":[0,199],"content":"The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The content of the <ph id=\"ph1\">`message`</ph> parameter is intended to be understood by humans.","pos":[0,78],"source":"The content of the `message` parameter is intended to be understood by humans."},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[79,199]}]},{"pos":[206,214],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[215,220],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[256,305],"content":"<xref:System.BadImageFormatException.FileName%2A>","nodes":[]},{"pos":[306,355],"content":"The full name of the file with the invalid image.","nodes":[{"content":"The full name of the file with the invalid image.","pos":[0,49]}]},{"pos":[360,408],"content":"<xref:System.BadImageFormatException.Message%2A>","nodes":[]},{"pos":[409,434],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[20086,20529],"yaml":true,"extradata":"MT"},{"content":"A message that describes the error.","nodes":[{"pos":[0,35],"content":"A message that describes the error.","nodes":[{"content":"A message that describes the error.","pos":[0,35]}]}],"pos":[20697,20733],"yaml":true},{"content":"The full name of the file with the invalid image.","nodes":[{"pos":[0,49],"content":"The full name of the file with the invalid image.","nodes":[{"content":"The full name of the file with the invalid image.","pos":[0,49]}]}],"pos":[20797,20847],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,198],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.BadImageFormatException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[22644,22843],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \n|<xref:System.BadImageFormatException.FileName%2A>|The full name of the file with the invalid image.|  \n|<xref:System.BadImageFormatException.Message%2A>|The error message string.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,545],"content":"The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.BadImageFormatException&gt;</ph>.","pos":[0,111],"source":"The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>."}]},{"pos":[552,560],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[561,566],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[602,643],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[644,674],"content":"The inner exception reference.","nodes":[{"content":"The inner exception reference.","pos":[0,30]}]},{"pos":[679,728],"content":"<xref:System.BadImageFormatException.FileName%2A>","nodes":[]},{"pos":[729,778],"content":"The full name of the file with the invalid image.","nodes":[{"content":"The full name of the file with the invalid image.","pos":[0,49]}]},{"pos":[783,831],"content":"<xref:System.BadImageFormatException.Message%2A>","nodes":[]},{"pos":[832,857],"content":"The error message string.","nodes":[{"content":"The error message string.","pos":[0,25]}]}],"pos":[22854,23723],"yaml":true,"extradata":"MT"},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[23908,23970],"yaml":true},{"content":"The full name of the file with the invalid image.","nodes":[{"pos":[0,49],"content":"The full name of the file with the invalid image.","nodes":[{"content":"The full name of the file with the invalid image.","pos":[0,49]}]}],"pos":[24034,24084],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,193],"content":"The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">inner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,193],"source":" If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[24148,24342],"yaml":true},{"content":"Gets the name of the file that causes this exception.","nodes":[{"pos":[0,53],"content":"Gets the name of the file that causes this exception.","nodes":[{"content":"Gets the name of the file that causes this exception.","pos":[0,53]}]}],"pos":[25879,25933],"yaml":true},{"content":"This property returns the name of the file supplied to the constructor for the current instance, if any. If the file name was not specified or is a null reference (`Nothing` in Visual Basic), this property returns a null reference.  \n  \n This property is read-only.","nodes":[{"pos":[0,231],"content":"This property returns the name of the file supplied to the constructor for the current instance, if any. If the file name was not specified or is a null reference (`Nothing` in Visual Basic), this property returns a null reference.","nodes":[{"content":"This property returns the name of the file supplied to the constructor for the current instance, if any.","pos":[0,104]},{"content":"If the file name was not specified or is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic), this property returns a null reference.","pos":[105,231],"source":" If the file name was not specified or is a null reference (`Nothing` in Visual Basic), this property returns a null reference."}]},{"pos":[238,265],"content":"This property is read-only.","nodes":[{"content":"This property is read-only.","pos":[0,27]}]}],"pos":[25944,26214],"yaml":true,"extradata":"MT"},{"content":"The name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.","nodes":[{"pos":[0,136],"content":"The name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.","nodes":[{"content":"The name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.","pos":[0,136]}]}],"pos":[26326,26463],"yaml":true},{"content":"Gets the log file that describes why an assembly load failed.","nodes":[{"pos":[0,61],"content":"Gets the log file that describes why an assembly load failed.","nodes":[{"content":"Gets the log file that describes why an assembly load failed.","pos":[0,61]}]}],"pos":[28009,28071],"yaml":true},{"content":"A `String` containing errors reported by the assembly cache.","nodes":[{"pos":[0,60],"content":"A <ph id=\"ph1\">`String`</ph> containing errors reported by the assembly cache.","source":"A `String` containing errors reported by the assembly cache."}],"pos":[28244,28305],"yaml":true},{"content":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the file name, assembly cache log, and additional exception information.","nodes":[{"pos":[0,161],"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with the file name, assembly cache log, and additional exception information.","source":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the file name, assembly cache log, and additional exception information."}],"pos":[29991,30153],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.","nodes":[{"pos":[0,143],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> that holds the serialized object data about the exception being thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown."}],"pos":[30481,30625],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.","nodes":[{"pos":[0,140],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination."}],"pos":[30720,30861],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[31045,31095],"yaml":true},{"content":"Gets the error message and the name of the file that caused this exception.","nodes":[{"pos":[0,75],"content":"Gets the error message and the name of the file that caused this exception.","nodes":[{"content":"Gets the error message and the name of the file that caused this exception.","pos":[0,75]}]}],"pos":[32281,32357],"yaml":true},{"content":"If no message was supplied to the constructor for the current exception, this property returns a system-supplied error message. If the <xref:System.BadImageFormatException.FileName%2A> property is not a null reference (`Nothing` in Visual Basic), the message includes the file name.  \n  \n This property is read-only.","nodes":[{"pos":[0,282],"content":"If no message was supplied to the constructor for the current exception, this property returns a system-supplied error message. If the <xref:System.BadImageFormatException.FileName%2A> property is not a null reference (`Nothing` in Visual Basic), the message includes the file name.","nodes":[{"content":"If no message was supplied to the constructor for the current exception, this property returns a system-supplied error message.","pos":[0,127]},{"content":"If the <ph id=\"ph1\">&lt;xref:System.BadImageFormatException.FileName%2A&gt;</ph> property is not a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic), the message includes the file name.","pos":[128,282],"source":" If the <xref:System.BadImageFormatException.FileName%2A> property is not a null reference (`Nothing` in Visual Basic), the message includes the file name."}]},{"pos":[289,316],"content":"This property is read-only.","nodes":[{"content":"This property is read-only.","pos":[0,27]}]}],"pos":[32368,32689],"yaml":true,"extradata":"MT"},{"content":"A string containing the error message and the name of the file that caused this exception.","nodes":[{"pos":[0,90],"content":"A string containing the error message and the name of the file that caused this exception.","nodes":[{"content":"A string containing the error message and the name of the file that caused this exception.","pos":[0,90]}]}],"pos":[32809,32900],"yaml":true},{"content":"Returns the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.","nodes":[{"pos":[0,136],"content":"Returns the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.","nodes":[{"content":"Returns the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.","pos":[0,136]}]}],"pos":[34443,34580],"yaml":true},{"content":"The string representation returned by this method includes the name of the exception, the value of the <xref:System.BadImageFormatException.Message%2A> property, the result of calling `ToString` on the inner exception, the value of the <xref:System.BadImageFormatException.FileName%2A> property, and the result of calling <xref:System.Environment.StackTrace%2A>. If any of these members is a null reference (`Nothing` in Visual Basic), its value is not included in the returned string.","nodes":[{"pos":[0,485],"content":"The string representation returned by this method includes the name of the exception, the value of the <xref:System.BadImageFormatException.Message%2A> property, the result of calling `ToString` on the inner exception, the value of the <xref:System.BadImageFormatException.FileName%2A> property, and the result of calling <xref:System.Environment.StackTrace%2A>. If any of these members is a null reference (`Nothing` in Visual Basic), its value is not included in the returned string.","nodes":[{"content":"The string representation returned by this method includes the name of the exception, the value of the <ph id=\"ph1\">&lt;xref:System.BadImageFormatException.Message%2A&gt;</ph> property, the result of calling <ph id=\"ph2\">`ToString`</ph> on the inner exception, the value of the <ph id=\"ph3\">&lt;xref:System.BadImageFormatException.FileName%2A&gt;</ph> property, and the result of calling <ph id=\"ph4\">&lt;xref:System.Environment.StackTrace%2A&gt;</ph>.","pos":[0,362],"source":"The string representation returned by this method includes the name of the exception, the value of the <xref:System.BadImageFormatException.Message%2A> property, the result of calling `ToString` on the inner exception, the value of the <xref:System.BadImageFormatException.FileName%2A> property, and the result of calling <xref:System.Environment.StackTrace%2A>."},{"content":"If any of these members is a null reference (<ph id=\"ph1\">`Nothing`</ph> in Visual Basic), its value is not included in the returned string.","pos":[363,485],"source":" If any of these members is a null reference (`Nothing` in Visual Basic), its value is not included in the returned string."}]}],"pos":[34591,35077],"yaml":true,"extradata":"MT"},{"content":"A string containing the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.","nodes":[{"pos":[0,148],"content":"A string containing the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.","nodes":[{"content":"A string containing the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.","pos":[0,148]}]}],"pos":[35212,35361],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.BadImageFormatException\n  commentId: T:System.BadImageFormatException\n  id: BadImageFormatException\n  children:\n  - System.BadImageFormatException.#ctor\n  - System.BadImageFormatException.#ctor(System.String)\n  - System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.BadImageFormatException.#ctor(System.String,System.Exception)\n  - System.BadImageFormatException.#ctor(System.String,System.String)\n  - System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)\n  - System.BadImageFormatException.FileName\n  - System.BadImageFormatException.FusionLog\n  - System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.BadImageFormatException.Message\n  - System.BadImageFormatException.ToString\n  langs:\n  - csharp\n  name: BadImageFormatException\n  nameWithType: BadImageFormatException\n  fullName: System.BadImageFormatException\n  type: Class\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: The exception that is thrown when the file image of a dynamic link library (DLL) or an executable program is invalid.\n  remarks: \"This exception is thrown when the file format of a dynamic link library (.dll file) or an executable (.exe file) doesn’t conform to the format that the common language runtime expects. In particular, the exception is thrown under the following conditions:  \\n  \\n-   An earlier version of a .NET Framework utility, such as ILDasm.exe or installutil.exe, is used with an assembly that was developed with a later version of the .NET Framework.  \\n  \\n     To address this exception, use the version of the tool that corresponds to the version of the .NET Framework that was used to develop the assembly. This may require modifying the `Path` environment variable or providing a fully qualified path to the correct executable.  \\n  \\n-   You try to load an unmanaged dynamic link library or executable (such as a Windows system DLL) as if it were a .NET Framework assembly. The following example illustrates this by using the <xref:System.Reflection.Assembly.LoadFile%2A?displayProperty=fullName> method to load Kernel32.dll.  \\n  \\n     [!code-csharp[System.BadImageFormatException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/condition1.cs#1)]\\n     [!code-vb[System.BadImageFormatException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/condition1.vb#1)]  \\n  \\n     To address this exception, access the methods defined in the DLL by using the features provided by your development language, such as the `Declare` statement in Visual Basic or the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute with the `extern` keyword in C#.  \\n  \\n-   A DLL or executable is loaded as a 64-bit assembly, but it contains 32-bit features or resources. For example, it relies on COM interop or calls methods in a 32-bit dynamic link library.  \\n  \\n     To address this exception, set the project's **Platform target** property to x86 (instead of x64 or AnyCPU) and recompile.  \\n  \\n-   Your application’s components were created using different versions of the .NET Framework. Typically, this exception occurs when an application or component that was developed using the [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or the [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] tries to load an assembly that was developed using the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] or later, or when an application that was developed using the [!INCLUDE[net_v20SP1_short](~/includes/net-v20sp1-short-md.md)] or [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] tries to load an assembly that was developed using the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] or later. The <xref:System.BadImageFormatException> may be reported as a compile-time error, or the exception may be thrown at run time. The following example defines a `StringLib` class that has a single member, `ToProperCase`, and that resides in an assembly named StringLib.dll.  \\n  \\n     [!code-csharp[System.BadImageFormatException.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/stringlib.cs#2)]\\n     [!code-vb[System.BadImageFormatException.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/stringlib.vb#2)]  \\n  \\n     The following example uses reflection to load an assembly named StringLib.dll. If the source code is compiled with a [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] compiler, a <xref:System.BadImageFormatException> is thrown by the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=fullName> method.  \\n  \\n     [!code-csharp[System.BadImageFormatException.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/loadstringlib.cs#3)]\\n     [!code-vb[System.BadImageFormatException.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/loadstringlib.vb#3)]  \\n  \\n     To address this exception, make sure that the assembly whose code is executing and that throws the exception, and the assembly to be loaded both target compatible versions of the .NET Framework.  \\n  \\n-   The components of your application target different platforms. For example, you are trying to load ARM assemblies in an x86 application. You can use the following command-line utility to determine the target platforms of individual .NET Framework assemblies. The list of files should be provided as a space-delimited list at the command line.  \\n  \\n     [!code-csharp[System.BadImageFormatException.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.badimageformatexception.class/cs/targetplatform1.cs#4)]\\n     [!code-vb[System.BadImageFormatException.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.badimageformatexception.class/vb/targetplatform1.vb#4)]  \\n  \\n-   Reflecting on C++ executable files may throw this exception. This is most likely caused by the C++ compiler stripping the relocation addresses or the .Reloc section from the executable file. To preserve the .relocation address in a C++ executable file, specify /fixed:no when linking.  \\n  \\n <xref:System.BadImageFormatException> uses the HRESULT COR_E_BADIMAGEFORMAT, which has the value 0x8007000B.  \\n  \\n For a list of initial property values for an instance of <xref:System.BadImageFormatException>, see the <xref:System.BadImageFormatException> constructors.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class BadImageFormatException : SystemException\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.#ctor\n  commentId: M:System.BadImageFormatException.#ctor\n  id: '#ctor'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: BadImageFormatException()\n  nameWithType: BadImageFormatException.BadImageFormatException()\n  fullName: BadImageFormatException.BadImageFormatException()\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \\\"Format of the executable or library is invalid.\\\" This message takes into account the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The localized error message string.|\"\n  syntax:\n    content: public BadImageFormatException ();\n    parameters: []\n  overload: System.BadImageFormatException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.#ctor(System.String)\n  commentId: M:System.BadImageFormatException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: BadImageFormatException(String)\n  nameWithType: BadImageFormatException.BadImageFormatException(String)\n  fullName: BadImageFormatException.BadImageFormatException(String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message.\n  remarks: \"The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|A null reference (`Nothing` in Visual Basic).|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public BadImageFormatException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the error.\n  overload: System.BadImageFormatException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: BadImageFormatException(SerializationInfo, StreamingContext)\n  nameWithType: BadImageFormatException.BadImageFormatException(SerializationInfo, StreamingContext)\n  fullName: BadImageFormatException.BadImageFormatException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.\n  syntax:\n    content: protected BadImageFormatException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.\n  overload: System.BadImageFormatException.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.#ctor(System.String,System.Exception)\n  commentId: M:System.BadImageFormatException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: BadImageFormatException(String, Exception)\n  nameWithType: BadImageFormatException.BadImageFormatException(String, Exception)\n  fullName: BadImageFormatException.BadImageFormatException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.Exception.Message%2A>|The error message string.|\"\n  syntax:\n    content: public BadImageFormatException (string message, Exception inner);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: inner\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not a null reference, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.BadImageFormatException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.#ctor(System.String,System.String)\n  commentId: M:System.BadImageFormatException.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: BadImageFormatException(String, String)\n  nameWithType: BadImageFormatException.BadImageFormatException(String, String)\n  fullName: BadImageFormatException.BadImageFormatException(String, String)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message and file name.\n  remarks: \"The content of the `message` parameter is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.BadImageFormatException.FileName%2A>|The full name of the file with the invalid image.|  \\n|<xref:System.BadImageFormatException.Message%2A>|The error message string.|\"\n  syntax:\n    content: public BadImageFormatException (string message, string fileName);\n    parameters:\n    - id: message\n      type: System.String\n      description: A message that describes the error.\n    - id: fileName\n      type: System.String\n      description: The full name of the file with the invalid image.\n  overload: System.BadImageFormatException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)\n  commentId: M:System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)\n  id: '#ctor(System.String,System.String,System.Exception)'\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: BadImageFormatException(String, String, Exception)\n  nameWithType: BadImageFormatException.BadImageFormatException(String, String, Exception)\n  fullName: BadImageFormatException.BadImageFormatException(String, String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.BadImageFormatException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.BadImageFormatException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|The inner exception reference.|  \\n|<xref:System.BadImageFormatException.FileName%2A>|The full name of the file with the invalid image.|  \\n|<xref:System.BadImageFormatException.Message%2A>|The error message string.|\"\n  syntax:\n    content: public BadImageFormatException (string message, string fileName, Exception inner);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: fileName\n      type: System.String\n      description: The full name of the file with the invalid image.\n    - id: inner\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>inner</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.BadImageFormatException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.FileName\n  commentId: P:System.BadImageFormatException.FileName\n  id: FileName\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: FileName\n  nameWithType: BadImageFormatException.FileName\n  fullName: BadImageFormatException.FileName\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the name of the file that causes this exception.\n  remarks: \"This property returns the name of the file supplied to the constructor for the current instance, if any. If the file name was not specified or is a null reference (`Nothing` in Visual Basic), this property returns a null reference.  \\n  \\n This property is read-only.\"\n  syntax:\n    content: public string FileName { get; }\n    return:\n      type: System.String\n      description: The name of the file with the invalid image, or a null reference if no file name was passed to the constructor for the current instance.\n  overload: System.BadImageFormatException.FileName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.FusionLog\n  commentId: P:System.BadImageFormatException.FusionLog\n  id: FusionLog\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: FusionLog\n  nameWithType: BadImageFormatException.FusionLog\n  fullName: BadImageFormatException.FusionLog\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets the log file that describes why an assembly load failed.\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public string FusionLog { get; }\n    return:\n      type: System.String\n      description: A `String` containing errors reported by the assembly cache.\n  overload: System.BadImageFormatException.FusionLog*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: BadImageFormatException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: BadImageFormatException.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the file name, assembly cache log, and additional exception information.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.\n  overload: System.BadImageFormatException.GetObjectData*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.Message\n  commentId: P:System.BadImageFormatException.Message\n  id: Message\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: Message\n  nameWithType: BadImageFormatException.Message\n  fullName: BadImageFormatException.Message\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the error message and the name of the file that caused this exception.\n  remarks: \"If no message was supplied to the constructor for the current exception, this property returns a system-supplied error message. If the <xref:System.BadImageFormatException.FileName%2A> property is not a null reference (`Nothing` in Visual Basic), the message includes the file name.  \\n  \\n This property is read-only.\"\n  syntax:\n    content: public override string Message { get; }\n    return:\n      type: System.String\n      description: A string containing the error message and the name of the file that caused this exception.\n  overload: System.BadImageFormatException.Message*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.BadImageFormatException.ToString\n  commentId: M:System.BadImageFormatException.ToString\n  id: ToString\n  parent: System.BadImageFormatException\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: BadImageFormatException.ToString()\n  fullName: BadImageFormatException.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.\n  remarks: The string representation returned by this method includes the name of the exception, the value of the <xref:System.BadImageFormatException.Message%2A> property, the result of calling `ToString` on the inner exception, the value of the <xref:System.BadImageFormatException.FileName%2A> property, and the result of calling <xref:System.Environment.StackTrace%2A>. If any of these members is a null reference (`Nothing` in Visual Basic), its value is not included in the returned string.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the fully qualified name of this exception and possibly the error message, the name of the inner exception, and the stack trace.\n  overload: System.BadImageFormatException.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.BadImageFormatException.#ctor\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: BadImageFormatException()\n  nameWithType: BadImageFormatException.BadImageFormatException()\n  fullName: BadImageFormatException.BadImageFormatException()\n- uid: System.BadImageFormatException.#ctor(System.String)\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: BadImageFormatException(String)\n  nameWithType: BadImageFormatException.BadImageFormatException(String)\n  fullName: BadImageFormatException.BadImageFormatException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: BadImageFormatException(SerializationInfo, StreamingContext)\n  nameWithType: BadImageFormatException.BadImageFormatException(SerializationInfo, StreamingContext)\n  fullName: BadImageFormatException.BadImageFormatException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.BadImageFormatException.#ctor(System.String,System.Exception)\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: BadImageFormatException(String, Exception)\n  nameWithType: BadImageFormatException.BadImageFormatException(String, Exception)\n  fullName: BadImageFormatException.BadImageFormatException(String, Exception)\n- uid: System.BadImageFormatException.#ctor(System.String,System.String)\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: BadImageFormatException(String, String)\n  nameWithType: BadImageFormatException.BadImageFormatException(String, String)\n  fullName: BadImageFormatException.BadImageFormatException(String, String)\n- uid: System.BadImageFormatException.#ctor(System.String,System.String,System.Exception)\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: BadImageFormatException(String, String, Exception)\n  nameWithType: BadImageFormatException.BadImageFormatException(String, String, Exception)\n  fullName: BadImageFormatException.BadImageFormatException(String, String, Exception)\n- uid: System.BadImageFormatException.FileName\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: FileName\n  nameWithType: BadImageFormatException.FileName\n  fullName: BadImageFormatException.FileName\n- uid: System.BadImageFormatException.FusionLog\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: FusionLog\n  nameWithType: BadImageFormatException.FusionLog\n  fullName: BadImageFormatException.FusionLog\n- uid: System.BadImageFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: BadImageFormatException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: BadImageFormatException.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.BadImageFormatException.Message\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: Message\n  nameWithType: BadImageFormatException.Message\n  fullName: BadImageFormatException.Message\n- uid: System.BadImageFormatException.ToString\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: ToString()\n  nameWithType: BadImageFormatException.ToString()\n  fullName: BadImageFormatException.ToString()\n- uid: System.BadImageFormatException.#ctor*\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: BadImageFormatException\n  nameWithType: BadImageFormatException.BadImageFormatException\n  fullName: BadImageFormatException.BadImageFormatException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n- uid: System.BadImageFormatException.FileName*\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: FileName\n  nameWithType: BadImageFormatException.FileName\n  fullName: BadImageFormatException.FileName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n- uid: System.BadImageFormatException.FusionLog*\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: FusionLog\n  nameWithType: BadImageFormatException.FusionLog\n  fullName: BadImageFormatException.FusionLog\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n- uid: System.BadImageFormatException.GetObjectData*\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: GetObjectData\n  nameWithType: BadImageFormatException.GetObjectData\n  fullName: BadImageFormatException.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n- uid: System.BadImageFormatException.Message*\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: Message\n  nameWithType: BadImageFormatException.Message\n  fullName: BadImageFormatException.Message\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n- uid: System.BadImageFormatException.ToString*\n  parent: System.BadImageFormatException\n  isExternal: false\n  name: ToString\n  nameWithType: BadImageFormatException.ToString\n  fullName: BadImageFormatException.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/BadImageFormatException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}