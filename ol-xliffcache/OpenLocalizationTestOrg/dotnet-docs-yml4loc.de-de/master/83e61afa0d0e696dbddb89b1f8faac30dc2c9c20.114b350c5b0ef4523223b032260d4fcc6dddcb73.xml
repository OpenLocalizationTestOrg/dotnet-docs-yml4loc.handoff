{"nodes":[{"content":"Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.","nodes":[{"pos":[0,115],"content":"Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.","nodes":[{"content":"Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.","pos":[0,115],"nodes":[{"content":"Declaratively instructs the .NET Framework to instantiate a configuration property.","pos":[0,83]},{"content":"This class cannot be inherited.","pos":[84,115]}]}]}],"pos":[1001,1117],"yaml":true},{"content":"You use the <xref:System.Configuration.ConfigurationPropertyAttribute> to decorate a configuration property, which will instruct the .NET Framework to instantiate and to initialize the property using the value of the decorating parameter.  \n  \n> [!NOTE]\n>  The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the custom public properties and decorate them with the <xref:System.Configuration.ConfigurationPropertyAttribute> attribute. For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationProperty> instance. You can also use the programmatic model, in which case it is your responsibility to declare the custom public properties and return their collection.  \n  \n The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attribute types:  \n  \n1.  The types instructing the .NET Framework how to instantiate the custom configuration-element properties. These types include:  \n  \n    -   <xref:System.Configuration.ConfigurationCollectionAttribute>  \n  \n    -   <xref:System.Configuration.ConfigurationPropertyAttribute>  \n  \n2.  The types instructing the .NET Framework how to validate the custom configuration-element properties. These types include:  \n  \n    -   <xref:System.Configuration.IntegerValidatorAttribute>  \n  \n    -   <xref:System.Configuration.LongValidatorAttribute>  \n  \n    -   <xref:System.Configuration.RegexStringValidatorAttribute>  \n  \n    -   <xref:System.Configuration.StringValidatorAttribute>  \n  \n    -   <xref:System.Configuration.TimeSpanValidatorAttribute>","nodes":[{"pos":[0,238],"content":"You use the <xref:System.Configuration.ConfigurationPropertyAttribute> to decorate a configuration property, which will instruct the .NET Framework to instantiate and to initialize the property using the value of the decorating parameter.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationPropertyAttribute&gt;</ph> to decorate a configuration property, which will instruct the .NET Framework to instantiate and to initialize the property using the value of the decorating parameter.","pos":[0,238],"source":"You use the <xref:System.Configuration.ConfigurationPropertyAttribute> to decorate a configuration property, which will instruct the .NET Framework to instantiate and to initialize the property using the value of the decorating parameter."}]},{"pos":[246,844],"content":"[!NOTE]\n The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the custom public properties and decorate them with the <xref:System.Configuration.ConfigurationPropertyAttribute> attribute. For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationProperty> instance. You can also use the programmatic model, in which case it is your responsibility to declare the custom public properties and return their collection.","leadings":["","> "],"nodes":[{"content":" The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the custom public properties and decorate them with the <xref:System.Configuration.ConfigurationPropertyAttribute> attribute. For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationProperty> instance. You can also use the programmatic model, in which case it is your responsibility to declare the custom public properties and return their collection.","pos":[8,596],"nodes":[{"content":"The simplest way to create a custom configuration element is to use the attributed (declarative) model.","pos":[1,104]},{"content":"You declare the custom public properties and decorate them with the <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationPropertyAttribute&gt;</ph> attribute.","pos":[105,242],"source":" You declare the custom public properties and decorate them with the <xref:System.Configuration.ConfigurationPropertyAttribute> attribute."},{"content":"For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph> instance.","pos":[243,438],"source":" For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationProperty> instance."},{"content":"You can also use the programmatic model, in which case it is your responsibility to declare the custom public properties and return their collection.","pos":[439,588]}]}]},{"pos":[851,1026],"content":"The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attribute types:","nodes":[{"content":"The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attribute types:","pos":[0,175],"nodes":[{"content":"The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements.","pos":[0,135]},{"content":"There are two kinds of attribute types:","pos":[136,175]}]}]},{"pos":[1036,1161],"content":"The types instructing the .NET Framework how to instantiate the custom configuration-element properties. These types include:","nodes":[{"content":"The types instructing the .NET Framework how to instantiate the custom configuration-element properties. These types include:","pos":[0,125],"nodes":[{"content":"The types instructing the .NET Framework how to instantiate the custom configuration-element properties.","pos":[0,104]},{"content":"These types include:","pos":[105,125]}]}]},{"pos":[1175,1235],"content":"<xref:System.Configuration.ConfigurationCollectionAttribute>","nodes":[]},{"pos":[1249,1307],"content":"<xref:System.Configuration.ConfigurationPropertyAttribute>","nodes":[]},{"pos":[1317,1439],"content":"The types instructing the .NET Framework how to validate the custom configuration-element properties. These types include:","nodes":[{"content":"The types instructing the .NET Framework how to validate the custom configuration-element properties. These types include:","pos":[0,122],"nodes":[{"content":"The types instructing the .NET Framework how to validate the custom configuration-element properties.","pos":[0,101]},{"content":"These types include:","pos":[102,122]}]}]},{"pos":[1453,1506],"content":"<xref:System.Configuration.IntegerValidatorAttribute>","nodes":[]},{"pos":[1520,1570],"content":"<xref:System.Configuration.LongValidatorAttribute>","nodes":[]},{"pos":[1584,1641],"content":"<xref:System.Configuration.RegexStringValidatorAttribute>","nodes":[]},{"pos":[1655,1707],"content":"<xref:System.Configuration.StringValidatorAttribute>","nodes":[]},{"pos":[1721,1775],"content":"<xref:System.Configuration.TimeSpanValidatorAttribute>","nodes":[]}],"pos":[1128,2929],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.Configuration.ConfigurationPropertyAttribute\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of <xref href=\"System.Configuration.ConfigurationPropertyAttribute\"></xref> class."}],"pos":[9972,10082],"yaml":true},{"content":"Name of the <xref href=\"System.Configuration.ConfigurationProperty\"></xref> object defined.","nodes":[{"pos":[0,91],"content":"Name of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationProperty\"&gt;&lt;/xref&gt;</ph> object defined.","source":"Name of the <xref href=\"System.Configuration.ConfigurationProperty\"></xref> object defined."}],"pos":[10234,10326],"yaml":true},{"content":"Gets or sets the default value for the decorated property.","nodes":[{"pos":[0,58],"content":"Gets or sets the default value for the decorated property.","nodes":[{"content":"Gets or sets the default value for the decorated property.","pos":[0,58]}]}],"pos":[11553,11612],"yaml":true},{"content":"The object representing the default value of the decorated configuration-element property.","nodes":[{"pos":[0,90],"content":"The object representing the default value of the decorated configuration-element property.","nodes":[{"content":"The object representing the default value of the decorated configuration-element property.","pos":[0,90]}]}],"pos":[12283,12374],"yaml":true},{"content":"Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.","nodes":[{"pos":[0,121],"content":"Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.","nodes":[{"content":"Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.","pos":[0,121]}]}],"pos":[13650,13772],"yaml":true},{"content":"The <xref:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection%2A> property value is ignored if the decorated property is not a collection.","nodes":[{"pos":[0,158],"content":"The <xref:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection%2A> property value is ignored if the decorated property is not a collection.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection%2A&gt;</ph> property value is ignored if the decorated property is not a collection.","pos":[0,158],"source":"The <xref:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection%2A> property value is ignored if the decorated property is not a collection."}]}],"pos":[13783,13942],"yaml":true,"extradata":"MT"},{"content":"`true` if the property represents the default collection of an element; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,115],"content":"`true` if the property represents the default collection of an element; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the property represents the default collection of an element; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,91],"source":"`true` if the property represents the default collection of an element; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[92,115],"source":" The default is `false`."}]}],"pos":[14069,14187],"yaml":true},{"content":"Gets or sets a value indicating whether this is a key property for the decorated element property.","nodes":[{"pos":[0,98],"content":"Gets or sets a value indicating whether this is a key property for the decorated element property.","nodes":[{"content":"Gets or sets a value indicating whether this is a key property for the decorated element property.","pos":[0,98]}]}],"pos":[15386,15485],"yaml":true},{"content":"The <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A> property applies only if the property you decorate is a collection. It does not have any effect if the property is not a collection. Multiple elements can be marked as <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A>.","nodes":[{"pos":[0,308],"content":"The <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A> property applies only if the property you decorate is a collection. It does not have any effect if the property is not a collection. Multiple elements can be marked as <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A>.","nodes":[{"content":"The <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A> property applies only if the property you decorate is a collection. It does not have any effect if the property is not a collection. Multiple elements can be marked as <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A>.","pos":[0,308],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A&gt;</ph> property applies only if the property you decorate is a collection.","pos":[0,139],"source":"The <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A> property applies only if the property you decorate is a collection."},{"content":"It does not have any effect if the property is not a collection.","pos":[140,204]},{"content":"Multiple elements can be marked as <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A&gt;</ph>.","pos":[205,308],"source":" Multiple elements can be marked as <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A>."}]}]}],"pos":[15496,15805],"yaml":true,"extradata":"MT"},{"content":"`true` if the property is a key property for an element of the collection; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,118],"content":"`true` if the property is a key property for an element of the collection; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the property is a key property for an element of the collection; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,94],"source":"`true` if the property is a key property for an element of the collection; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[95,118],"source":" The default is `false`."}]}],"pos":[16447,16568],"yaml":true},{"content":"Gets or sets a value indicating whether the decorated element property is required.","nodes":[{"pos":[0,83],"content":"Gets or sets a value indicating whether the decorated element property is required.","nodes":[{"content":"Gets or sets a value indicating whether the decorated element property is required.","pos":[0,83]}]}],"pos":[17783,17867],"yaml":true},{"content":"`true` if the property is required; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,79],"content":"`true` if the property is required; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the property is required; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,55],"source":"`true` if the property is required; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[56,79],"source":" The default is `false`."}]}],"pos":[18535,18617],"yaml":true},{"content":"Gets the name of the decorated configuration-element property.","nodes":[{"pos":[0,62],"content":"Gets the name of the decorated configuration-element property.","nodes":[{"content":"Gets the name of the decorated configuration-element property.","pos":[0,62]}]}],"pos":[19801,19864],"yaml":true},{"content":"The name of the decorated configuration-element property.","nodes":[{"pos":[0,57],"content":"The name of the decorated configuration-element property.","nodes":[{"content":"The name of the decorated configuration-element property.","pos":[0,57]}]}],"pos":[19972,20030],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> for the decorated configuration-element property.","nodes":[{"pos":[0,137],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyOptions\"&gt;&lt;/xref&gt;</ph> for the decorated configuration-element property.","source":"Gets or sets the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> for the decorated configuration-element property."}],"pos":[21226,21364],"yaml":true},{"content":"One of the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> enumeration values associated with the property.","nodes":[{"pos":[0,130],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationPropertyOptions\"&gt;&lt;/xref&gt;</ph> enumeration values associated with the property.","source":"One of the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> enumeration values associated with the property."}],"pos":[21559,21690],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ConfigurationPropertyAttribute\n  commentId: T:System.Configuration.ConfigurationPropertyAttribute\n  id: ConfigurationPropertyAttribute\n  children:\n  - System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)\n  - System.Configuration.ConfigurationPropertyAttribute.DefaultValue\n  - System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection\n  - System.Configuration.ConfigurationPropertyAttribute.IsKey\n  - System.Configuration.ConfigurationPropertyAttribute.IsRequired\n  - System.Configuration.ConfigurationPropertyAttribute.Name\n  - System.Configuration.ConfigurationPropertyAttribute.Options\n  langs:\n  - csharp\n  name: ConfigurationPropertyAttribute\n  nameWithType: ConfigurationPropertyAttribute\n  fullName: System.Configuration.ConfigurationPropertyAttribute\n  type: Class\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Declaratively instructs the .NET Framework to instantiate a configuration property. This class cannot be inherited.\n  remarks: \"You use the <xref:System.Configuration.ConfigurationPropertyAttribute> to decorate a configuration property, which will instruct the .NET Framework to instantiate and to initialize the property using the value of the decorating parameter.  \\n  \\n> [!NOTE]\\n>  The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the custom public properties and decorate them with the <xref:System.Configuration.ConfigurationPropertyAttribute> attribute. For each property marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationProperty> instance. You can also use the programmatic model, in which case it is your responsibility to declare the custom public properties and return their collection.  \\n  \\n The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attribute types:  \\n  \\n1.  The types instructing the .NET Framework how to instantiate the custom configuration-element properties. These types include:  \\n  \\n    -   <xref:System.Configuration.ConfigurationCollectionAttribute>  \\n  \\n    -   <xref:System.Configuration.ConfigurationPropertyAttribute>  \\n  \\n2.  The types instructing the .NET Framework how to validate the custom configuration-element properties. These types include:  \\n  \\n    -   <xref:System.Configuration.IntegerValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.LongValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.RegexStringValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.StringValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.TimeSpanValidatorAttribute>\"\n  example:\n  - \"The following example shows how to define the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the <xref:System.Configuration.ConfigurationPropertyAttribute> attribute.  \\n  \\n The example contains two classes. The `UrlsSection` custom class uses the <xref:System.Configuration.ConfigurationPropertyAttribute> to define its own properties. The `UsingConfigurationPropertyAttribute` class uses the `UrlsSection` to read and write the custom section in the application configuration file.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationPropertyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/CS/customsection.cs#1)]\\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/VB/customsection.vb#1)]  \\n  \\n [!code-csharp[System.Configuration.ConfigurationPropertyAttribute#21](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/CS/ConfigurationPropertyAttribute.cs#21)]\\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#21](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/VB/ConfigurationPropertyAttribute.vb#21)]  \\n  \\n The following is an excerpt of the configuration file containing the custom section as defined in the previous sample.  \\n  \\n```  \\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>  \\n<configuration>  \\n    <configSections>  \\n        <section name=\\\"CustomSection\\\" type=\\\"UrlsSection, UsingConfigurationPropertyAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\\\" />  \\n    </configSections>  \\n    <CustomSection name=\\\"Contoso\\\" url=\\\"http://www.contoso.com\\\" />  \\n</configuration>  \\n```\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property)]\n\n      public sealed class ConfigurationPropertyAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)\n  commentId: M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: ConfigurationPropertyAttribute(String)\n  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)\n  fullName: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of <xref href=\"System.Configuration.ConfigurationPropertyAttribute\"></xref> class.\n  syntax:\n    content: public ConfigurationPropertyAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name of the <xref href=\"System.Configuration.ConfigurationProperty\"></xref> object defined.\n  overload: System.Configuration.ConfigurationPropertyAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue\n  commentId: P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue\n  id: DefaultValue\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: DefaultValue\n  nameWithType: ConfigurationPropertyAttribute.DefaultValue\n  fullName: ConfigurationPropertyAttribute.DefaultValue\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets the default value for the decorated property.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyAttribute.DefaultValue%2A> property.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationPropertyAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/CS/customsection.cs#3)]\\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/VB/customsection.vb#3)]\"\n  syntax:\n    content: public object DefaultValue { get; set; }\n    return:\n      type: System.Object\n      description: The object representing the default value of the decorated configuration-element property.\n  overload: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection\n  commentId: P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection\n  id: IsDefaultCollection\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: IsDefaultCollection\n  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection\n  fullName: ConfigurationPropertyAttribute.IsDefaultCollection\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets a value indicating whether this is the default property collection for the decorated configuration property.\n  remarks: The <xref:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection%2A> property value is ignored if the decorated property is not a collection.\n  syntax:\n    content: public bool IsDefaultCollection { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the property represents the default collection of an element; otherwise, `false`. The default is `false`.'\n  overload: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey\n  commentId: P:System.Configuration.ConfigurationPropertyAttribute.IsKey\n  id: IsKey\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: IsKey\n  nameWithType: ConfigurationPropertyAttribute.IsKey\n  fullName: ConfigurationPropertyAttribute.IsKey\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets a value indicating whether this is a key property for the decorated element property.\n  remarks: The <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A> property applies only if the property you decorate is a collection. It does not have any effect if the property is not a collection. Multiple elements can be marked as <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A>.\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyAttribute.IsKey%2A> property.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationPropertyAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/CS/customsection.cs#2)]\\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/VB/customsection.vb#2)]\"\n  syntax:\n    content: public bool IsKey { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the property is a key property for an element of the collection; otherwise, `false`. The default is `false`.'\n  overload: System.Configuration.ConfigurationPropertyAttribute.IsKey*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired\n  commentId: P:System.Configuration.ConfigurationPropertyAttribute.IsRequired\n  id: IsRequired\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: IsRequired\n  nameWithType: ConfigurationPropertyAttribute.IsRequired\n  fullName: ConfigurationPropertyAttribute.IsRequired\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets a value indicating whether the decorated element property is required.\n  remarks: ''\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationPropertyAttribute.DefaultValue%2A> property.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationPropertyAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/CS/customsection.cs#3)]\\n [!code-vb[System.Configuration.ConfigurationPropertyAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationPropertyAttribute/VB/customsection.vb#3)]\"\n  syntax:\n    content: public bool IsRequired { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the property is required; otherwise, `false`. The default is `false`.'\n  overload: System.Configuration.ConfigurationPropertyAttribute.IsRequired*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationPropertyAttribute.Name\n  commentId: P:System.Configuration.ConfigurationPropertyAttribute.Name\n  id: Name\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ConfigurationPropertyAttribute.Name\n  fullName: ConfigurationPropertyAttribute.Name\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets the name of the decorated configuration-element property.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the decorated configuration-element property.\n  overload: System.Configuration.ConfigurationPropertyAttribute.Name*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationPropertyAttribute.Options\n  commentId: P:System.Configuration.ConfigurationPropertyAttribute.Options\n  id: Options\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  langs:\n  - csharp\n  name: Options\n  nameWithType: ConfigurationPropertyAttribute.Options\n  fullName: ConfigurationPropertyAttribute.Options\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> for the decorated configuration-element property.\n  syntax:\n    content: public System.Configuration.ConfigurationPropertyOptions Options { get; set; }\n    return:\n      type: System.Configuration.ConfigurationPropertyOptions\n      description: One of the <xref href=\"System.Configuration.ConfigurationPropertyOptions\"></xref> enumeration values associated with the property.\n  overload: System.Configuration.ConfigurationPropertyAttribute.Options*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: ConfigurationPropertyAttribute(String)\n  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)\n  fullName: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: DefaultValue\n  nameWithType: ConfigurationPropertyAttribute.DefaultValue\n  fullName: ConfigurationPropertyAttribute.DefaultValue\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsDefaultCollection\n  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection\n  fullName: ConfigurationPropertyAttribute.IsDefaultCollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsKey\n  nameWithType: ConfigurationPropertyAttribute.IsKey\n  fullName: ConfigurationPropertyAttribute.IsKey\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsRequired\n  nameWithType: ConfigurationPropertyAttribute.IsRequired\n  fullName: ConfigurationPropertyAttribute.IsRequired\n- uid: System.Configuration.ConfigurationPropertyAttribute.Name\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ConfigurationPropertyAttribute.Name\n  fullName: ConfigurationPropertyAttribute.Name\n- uid: System.Configuration.ConfigurationPropertyAttribute.Options\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: Options\n  nameWithType: ConfigurationPropertyAttribute.Options\n  fullName: ConfigurationPropertyAttribute.Options\n- uid: System.Configuration.ConfigurationPropertyOptions\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyOptions\n  nameWithType: ConfigurationPropertyOptions\n  fullName: System.Configuration.ConfigurationPropertyOptions\n- uid: System.Configuration.ConfigurationPropertyAttribute.#ctor*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: ConfigurationPropertyAttribute\n  nameWithType: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute\n  fullName: ConfigurationPropertyAttribute.ConfigurationPropertyAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n- uid: System.Configuration.ConfigurationPropertyAttribute.DefaultValue*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: DefaultValue\n  nameWithType: ConfigurationPropertyAttribute.DefaultValue\n  fullName: ConfigurationPropertyAttribute.DefaultValue\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsDefaultCollection\n  nameWithType: ConfigurationPropertyAttribute.IsDefaultCollection\n  fullName: ConfigurationPropertyAttribute.IsDefaultCollection\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsKey*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsKey\n  nameWithType: ConfigurationPropertyAttribute.IsKey\n  fullName: ConfigurationPropertyAttribute.IsKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n- uid: System.Configuration.ConfigurationPropertyAttribute.IsRequired*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: IsRequired\n  nameWithType: ConfigurationPropertyAttribute.IsRequired\n  fullName: ConfigurationPropertyAttribute.IsRequired\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n- uid: System.Configuration.ConfigurationPropertyAttribute.Name*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: Name\n  nameWithType: ConfigurationPropertyAttribute.Name\n  fullName: ConfigurationPropertyAttribute.Name\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n- uid: System.Configuration.ConfigurationPropertyAttribute.Options*\n  parent: System.Configuration.ConfigurationPropertyAttribute\n  isExternal: false\n  name: Options\n  nameWithType: ConfigurationPropertyAttribute.Options\n  fullName: ConfigurationPropertyAttribute.Options\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationPropertyAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}