### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ViewTechnology
  commentId: T:System.ComponentModel.Design.ViewTechnology
  id: ViewTechnology
  children:
  - System.ComponentModel.Design.ViewTechnology.Default
  - System.ComponentModel.Design.ViewTechnology.Passthrough
  - System.ComponentModel.Design.ViewTechnology.WindowsForms
  langs:
  - csharp
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
  type: Enum
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Defines identifiers for a set of technologies that designer hosts support.
  remarks: "The view adapter model replaces and adds functionality to the <xref:System.ComponentModel.Design.ViewTechnology> feature; however, the <xref:System.ComponentModel.Design.ViewTechnology> feature is retained for both backward compatibility and future use, if you choose. For more information, see \".NET Shape Library: A Sample Designer\" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx.  \n  \n <xref:System.ComponentModel.Design.ViewTechnology> defines identifiers that can indicate the mode to use for controlling the display of a designer-hosted document.  \n  \n You should only use the Default value in your designer hosting environment. In previous versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the <xref:System.ComponentModel.Design.ViewTechnology.Default> enumeration specified the type of UI model supported by a root designer. Because this model is not extensible, you should instead use a *view adapter* model. A view adapter is a type that adapts an object of one type to another.  \n  \n For example, an HTML designer might return a `DemoDOM` tree as its view. The HTML designer returns a view technology of Default. A Windows Forms hosting environment would have one or more view adapter classes available. If one such class could convert the `DemoDOM` into a Windows Forms control, the hosting application can support this type of designer. If no adapter can handle the data type returned from the designerâ€™s <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method, the load of the designer will fail, and the user will be presented with an error.  \n  \n [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] has an extensible scheme for providing view adapters, so it can adapt to any UI technology. Third-party technology providers can also offer an appropriate view adapter, and their object models are immediately consumable.  \n  \n For an example that uses view adapters, see \".NET Shape Library: A Sample Designer\" in the Windows Forms Knowledge Base at http://windowsforms.net/articles/shapedesigner.aspx."
  example:
  - "The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology.Default> class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> interface.  \n  \n [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]\n [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]\n [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ViewTechnology
  inheritance:
  - System.Object
  - System.ValueType
  - System.Enum
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ViewTechnology.xml
  ms.technology:
  - dotnet-standard
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.ComponentModel.Design.ViewTechnology.Default
  commentId: F:System.ComponentModel.Design.ViewTechnology.Default
  id: Default
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: ViewTechnology.Default
  type: Field
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Specifies the default view technology support.
  remarks: The root designer may return any type of object, but the object must be compatible with an adapter for the technology of the host. Hosting environments such as [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] provide a way to plug in new view technology adapters. The default view object for the Windows Forms designer is a <xref:System.Windows.Forms.Control?displayProperty=fullName> instance.
  example:
  - "The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology> class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cpp[IRootDesigner Sample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IRootDesigner Sample/CPP/class1.cpp#1)]\n [!code-csharp[IRootDesigner Sample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IRootDesigner Sample/CS/class1.cs#1)]\n [!code-vb[IRootDesigner Sample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IRootDesigner Sample/VB/class1.vb#1)]"
  syntax:
    content: Default
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ViewTechnology.xml
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  commentId: F:System.ComponentModel.Design.ViewTechnology.Passthrough
  id: Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: ViewTechnology.Passthrough
  type: Field
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Represents a mode in which the view object is passed directly to the development environment.
  remarks: The view object must implement any interfaces the development environment requires. The [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] development environment supports view objects that are either an ActiveX control, active document, or an object that implements the IVsWindowPane interface that is available through [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] VSI ([!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] Integration) program. The [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] development environment provides support for this view technology. Support for this view technology is not necessarily available in all development environments.
  syntax:
    content: >-
      [System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")]

      Passthrough
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: ''
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ViewTechnology.xml
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  commentId: F:System.ComponentModel.Design.ViewTechnology.WindowsForms
  id: WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: ViewTechnology.WindowsForms
  type: Field
  assemblies:
  - System
  - netstandard
  - System.ComponentModel.TypeConverter
  namespace: System.ComponentModel.Design
  summary: Represents a mode in which a Windows Forms control object provides the display for the root designer.
  remarks: The designer host fills the development environment document window with the Windows Forms control.
  example:
  - "The following code example demonstrates how to use the <xref:System.ComponentModel.Design.ViewTechnology> class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.  \n  \n [!code-cpp[LocalizationExtenderProviderExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CPP/class1.cpp#1)]\n [!code-csharp[LocalizationExtenderProviderExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/LocalizationExtenderProviderExample/CS/class1.cs#1)]\n [!code-vb[LocalizationExtenderProviderExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/LocalizationExtenderProviderExample/VB/class1.vb#1)]"
  syntax:
    content: >-
      [System.Obsolete("This value has been deprecated. Use ViewTechnology.Default instead.  http://go.microsoft.com/fwlink/?linkid=14202")]

      WindowsForms
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: ''
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/ViewTechnology.xml
references:
- uid: System.Enum
  parent: System
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.ComponentModel.Design.ViewTechnology.Default
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: ViewTechnology.Default
- uid: System.ComponentModel.Design.ViewTechnology
  parent: System.ComponentModel.Design
  isExternal: false
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: ViewTechnology.Passthrough
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: ViewTechnology.WindowsForms
