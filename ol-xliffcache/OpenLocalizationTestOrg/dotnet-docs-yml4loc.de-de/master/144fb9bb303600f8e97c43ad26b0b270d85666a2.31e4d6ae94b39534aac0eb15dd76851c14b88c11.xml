{"nodes":[{"content":"Identifies blocks of code to run in error handling scopes. This class belongs to the abstract syntax tree category.","nodes":[{"pos":[0,115],"content":"Identifies blocks of code to run in error handling scopes. This class belongs to the abstract syntax tree category.","nodes":[{"content":"Identifies blocks of code to run in error handling scopes. This class belongs to the abstract syntax tree category.","pos":[0,115],"nodes":[{"content":"Identifies blocks of code to run in error handling scopes.","pos":[0,58]},{"content":"This class belongs to the abstract syntax tree category.","pos":[59,115]}]}]}],"pos":[500,616],"yaml":true},{"content":"Returns the specified object as an exception, converting it to a specific <xref href=\"Microsoft.JScript.JScriptException\"></xref> if it can.","nodes":[{"pos":[0,140],"content":"Returns the specified object as an exception, converting it to a specific <ph id=\"ph1\">&lt;xref href=\"Microsoft.JScript.JScriptException\"&gt;&lt;/xref&gt;</ph> if it can.","source":"Returns the specified object as an exception, converting it to a specific <xref href=\"Microsoft.JScript.JScriptException\"></xref> if it can."}],"pos":[2121,2262],"yaml":true},{"content":"The object that represents the exception.","nodes":[{"pos":[0,41],"content":"The object that represents the exception.","nodes":[{"content":"The object that represents the exception.","pos":[0,41]}]}],"pos":[2453,2495],"yaml":true},{"content":"A reference to the scripting engine.","nodes":[{"pos":[0,36],"content":"A reference to the scripting engine.","nodes":[{"content":"A reference to the scripting engine.","pos":[0,36]}]}],"pos":[2575,2612],"yaml":true},{"content":"The exception <code>e</code>, converted to a specific <xref href=\"Microsoft.JScript.JScriptException\"></xref> if that is possible.","nodes":[{"pos":[0,130],"content":"The exception <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept>, converted to a specific <ph id=\"ph2\">&lt;xref href=\"Microsoft.JScript.JScriptException\"&gt;&lt;/xref&gt;</ph> if that is possible.","source":"The exception <code>e</code>, converted to a specific <xref href=\"Microsoft.JScript.JScriptException\"></xref> if that is possible."}],"pos":[2669,2800],"yaml":true},{"content":"Creates a new <xref href=\"Microsoft.JScript.BlockScope\"></xref> object for the `try` block and pushes it onto the global scope stack.","nodes":[{"pos":[0,133],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"Microsoft.JScript.BlockScope\"&gt;&lt;/xref&gt;</ph> object for the <ph id=\"ph2\">`try`</ph> block and pushes it onto the global scope stack.","source":"Creates a new <xref href=\"Microsoft.JScript.BlockScope\"></xref> object for the `try` block and pushes it onto the global scope stack."}],"pos":[3966,4100],"yaml":true},{"content":"A reference to the scripting engine.","nodes":[{"pos":[0,36],"content":"A reference to the scripting engine.","nodes":[{"content":"A reference to the scripting engine.","pos":[0,36]}]}],"pos":[4321,4358],"yaml":true},{"content":"The name of the scope of the `try` block.","nodes":[{"pos":[0,41],"content":"The name of the scope of the <ph id=\"ph1\">`try`</ph> block.","source":"The name of the scope of the `try` block."}],"pos":[4416,4458],"yaml":true},{"content":"The ID of the scope of the `try` block.","nodes":[{"pos":[0,39],"content":"The ID of the scope of the <ph id=\"ph1\">`try`</ph> block.","source":"The ID of the scope of the `try` block."}],"pos":[4520,4560],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.Try\n  commentId: T:Microsoft.JScript.Try\n  id: Try\n  children:\n  - Microsoft.JScript.Try.JScriptExceptionValue(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  - Microsoft.JScript.Try.PushHandlerScope(Microsoft.JScript.Vsa.VsaEngine,System.String,System.Int32)\n  langs:\n  - csharp\n  name: Try\n  nameWithType: Try\n  fullName: Microsoft.JScript.Try\n  type: Class\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Identifies blocks of code to run in error handling scopes. This class belongs to the abstract syntax tree category.\n  syntax:\n    content: 'public sealed class Try : Microsoft.JScript.AST'\n  inheritance:\n  - System.Object\n  - Microsoft.JScript.AST\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/Try.xml\n  ms.author: mikejo\n- uid: Microsoft.JScript.Try.JScriptExceptionValue(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  commentId: M:Microsoft.JScript.Try.JScriptExceptionValue(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  id: JScriptExceptionValue(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Try\n  langs:\n  - csharp\n  name: JScriptExceptionValue(Object, VsaEngine)\n  nameWithType: Try.JScriptExceptionValue(Object, VsaEngine)\n  fullName: Try.JScriptExceptionValue(Object, VsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Returns the specified object as an exception, converting it to a specific <xref href=\"Microsoft.JScript.JScriptException\"></xref> if it can.\n  syntax:\n    content: public static object JScriptExceptionValue (object e, Microsoft.JScript.Vsa.VsaEngine engine);\n    parameters:\n    - id: e\n      type: System.Object\n      description: The object that represents the exception.\n    - id: engine\n      type: Microsoft.JScript.Vsa.VsaEngine\n      description: A reference to the scripting engine.\n    return:\n      type: System.Object\n      description: The exception <code>e</code>, converted to a specific <xref href=\"Microsoft.JScript.JScriptException\"></xref> if that is possible.\n  overload: Microsoft.JScript.Try.JScriptExceptionValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/Try.xml\n  ms.author: mikejo\n- uid: Microsoft.JScript.Try.PushHandlerScope(Microsoft.JScript.Vsa.VsaEngine,System.String,System.Int32)\n  commentId: M:Microsoft.JScript.Try.PushHandlerScope(Microsoft.JScript.Vsa.VsaEngine,System.String,System.Int32)\n  id: PushHandlerScope(Microsoft.JScript.Vsa.VsaEngine,System.String,System.Int32)\n  parent: Microsoft.JScript.Try\n  langs:\n  - csharp\n  name: PushHandlerScope(VsaEngine, String, Int32)\n  nameWithType: Try.PushHandlerScope(VsaEngine, String, Int32)\n  fullName: Try.PushHandlerScope(VsaEngine, String, Int32)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Creates a new <xref href=\"Microsoft.JScript.BlockScope\"></xref> object for the `try` block and pushes it onto the global scope stack.\n  syntax:\n    content: public static void PushHandlerScope (Microsoft.JScript.Vsa.VsaEngine engine, string id, int scopeId);\n    parameters:\n    - id: engine\n      type: Microsoft.JScript.Vsa.VsaEngine\n      description: A reference to the scripting engine.\n    - id: id\n      type: System.String\n      description: The name of the scope of the `try` block.\n    - id: scopeId\n      type: System.Int32\n      description: The ID of the scope of the `try` block.\n  overload: Microsoft.JScript.Try.PushHandlerScope*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/Try.xml\n  ms.author: mikejo\nreferences:\n- uid: Microsoft.JScript.AST\n  parent: Microsoft.JScript\n  isExternal: false\n  name: AST\n  nameWithType: AST\n  fullName: Microsoft.JScript.AST\n- uid: Microsoft.JScript.Try.JScriptExceptionValue(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Try\n  isExternal: false\n  name: JScriptExceptionValue(Object, VsaEngine)\n  nameWithType: Try.JScriptExceptionValue(Object, VsaEngine)\n  fullName: Try.JScriptExceptionValue(Object, VsaEngine)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.JScript.Vsa.VsaEngine\n  parent: Microsoft.JScript.Vsa\n  isExternal: false\n  name: VsaEngine\n  nameWithType: VsaEngine\n  fullName: Microsoft.JScript.Vsa.VsaEngine\n- uid: Microsoft.JScript.Try.PushHandlerScope(Microsoft.JScript.Vsa.VsaEngine,System.String,System.Int32)\n  parent: Microsoft.JScript.Try\n  isExternal: false\n  name: PushHandlerScope(VsaEngine, String, Int32)\n  nameWithType: Try.PushHandlerScope(VsaEngine, String, Int32)\n  fullName: Try.PushHandlerScope(VsaEngine, String, Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.JScript.Try.JScriptExceptionValue*\n  parent: Microsoft.JScript.Try\n  isExternal: false\n  name: JScriptExceptionValue\n  nameWithType: Try.JScriptExceptionValue\n  fullName: Try.JScriptExceptionValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/Try.xml\n- uid: Microsoft.JScript.Try.PushHandlerScope*\n  parent: Microsoft.JScript.Try\n  isExternal: false\n  name: PushHandlerScope\n  nameWithType: Try.PushHandlerScope\n  fullName: Try.PushHandlerScope\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/Try.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}