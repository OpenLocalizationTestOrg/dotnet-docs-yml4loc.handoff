### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Hosting.WindowHelperService
  commentId: T:System.Activities.Presentation.Hosting.WindowHelperService
  id: WindowHelperService
  children:
  - System.Activities.Presentation.Hosting.WindowHelperService.#ctor(System.IntPtr)
  - System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd
  - System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  - System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)
  - System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  langs:
  - csharp
  name: WindowHelperService
  nameWithType: WindowHelperService
  fullName: System.Activities.Presentation.Hosting.WindowHelperService
  type: Class
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: Provides functionalities to register and unregister delegates for event notifications, as well as set ownership for windows.
  syntax:
    content: public class WindowHelperService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Hosting.WindowHelperService.#ctor(System.IntPtr)
  commentId: M:System.Activities.Presentation.Hosting.WindowHelperService.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  langs:
  - csharp
  name: WindowHelperService(IntPtr)
  nameWithType: WindowHelperService.WindowHelperService(IntPtr)
  fullName: WindowHelperService.WindowHelperService(IntPtr)
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: Initializes a new instance of the <xref href="System.Activities.Presentation.Hosting.WindowHelperService"></xref> class with the specific handle to a parent window.
  syntax:
    content: public WindowHelperService (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: A handle to a parent window.
  overload: System.Activities.Presentation.Hosting.WindowHelperService.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd
  commentId: P:System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd
  id: ParentWindowHwnd
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  langs:
  - csharp
  name: ParentWindowHwnd
  nameWithType: WindowHelperService.ParentWindowHwnd
  fullName: WindowHelperService.ParentWindowHwnd
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: Gets or sets the handle of the parent window.
  syntax:
    content: public IntPtr ParentWindowHwnd { get; }
    return:
      type: System.IntPtr
      description: Returns <xref href="System.IntPtr"></xref>.
  overload: System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  commentId: M:System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  id: RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  langs:
  - csharp
  name: RegisterWindowMessageHandler(WindowMessage)
  nameWithType: WindowHelperService.RegisterWindowMessageHandler(WindowMessage)
  fullName: WindowHelperService.RegisterWindowMessageHandler(WindowMessage)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: Registers the specified delegate for event notifications.
  syntax:
    content: public bool RegisterWindowMessageHandler (System.Activities.Presentation.Hosting.WindowMessage callback);
    parameters:
    - id: callback
      type: System.Activities.Presentation.Hosting.WindowMessage
      description: The delegate to be registered for event notifications.
    return:
      type: System.Boolean
      description: '`true` if the operation is successful; otherwise, `false`.'
  overload: System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>callback</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)
  commentId: M:System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)
  id: TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  langs:
  - csharp
  name: TrySetWindowOwner(DependencyObject, Window)
  nameWithType: WindowHelperService.TrySetWindowOwner(DependencyObject, Window)
  fullName: WindowHelperService.TrySetWindowOwner(DependencyObject, Window)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: Assigns the window to be the owner of the specified window.
  syntax:
    content: public bool TrySetWindowOwner (System.Windows.DependencyObject source, System.Windows.Window target);
    parameters:
    - id: source
      type: System.Windows.DependencyObject
      description: The owner of <code>target</code>.
    - id: target
      type: System.Windows.Window
      description: The window that is to be owned by <code>source</code>.
    return:
      type: System.Boolean
      description: '`true` if the operation is successful; otherwise, `false`.'
  overload: System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  commentId: M:System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  id: UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  langs:
  - csharp
  name: UnregisterWindowMessageHandler(WindowMessage)
  nameWithType: WindowHelperService.UnregisterWindowMessageHandler(WindowMessage)
  fullName: WindowHelperService.UnregisterWindowMessageHandler(WindowMessage)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: Unregisters the specified delegate for event notifications.
  syntax:
    content: public bool UnregisterWindowMessageHandler (System.Activities.Presentation.Hosting.WindowMessage callback);
    parameters:
    - id: callback
      type: System.Activities.Presentation.Hosting.WindowMessage
      description: The delegate to be removed from event notifications.
    return:
      type: System.Boolean
      description: '`true` if the operation is successful; otherwise, `false`.'
  overload: System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Activities.Presentation.Hosting.WindowHelperService.#ctor(System.IntPtr)
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: WindowHelperService(IntPtr)
  nameWithType: WindowHelperService.WindowHelperService(IntPtr)
  fullName: WindowHelperService.WindowHelperService(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: false
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: ParentWindowHwnd
  nameWithType: WindowHelperService.ParentWindowHwnd
  fullName: WindowHelperService.ParentWindowHwnd
- uid: System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: RegisterWindowMessageHandler(WindowMessage)
  nameWithType: WindowHelperService.RegisterWindowMessageHandler(WindowMessage)
  fullName: WindowHelperService.RegisterWindowMessageHandler(WindowMessage)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Hosting.WindowMessage
  parent: System.Activities.Presentation.Hosting
  isExternal: false
  name: WindowMessage
  nameWithType: WindowMessage
  fullName: System.Activities.Presentation.Hosting.WindowMessage
- uid: System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: TrySetWindowOwner(DependencyObject, Window)
  nameWithType: WindowHelperService.TrySetWindowOwner(DependencyObject, Window)
  fullName: WindowHelperService.TrySetWindowOwner(DependencyObject, Window)
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Window
  parent: System.Windows
  isExternal: false
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: UnregisterWindowMessageHandler(WindowMessage)
  nameWithType: WindowHelperService.UnregisterWindowMessageHandler(WindowMessage)
  fullName: WindowHelperService.UnregisterWindowMessageHandler(WindowMessage)
- uid: System.Activities.Presentation.Hosting.WindowHelperService.#ctor*
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: WindowHelperService
  nameWithType: WindowHelperService.WindowHelperService
  fullName: WindowHelperService.WindowHelperService
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
- uid: System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd*
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: ParentWindowHwnd
  nameWithType: WindowHelperService.ParentWindowHwnd
  fullName: WindowHelperService.ParentWindowHwnd
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
- uid: System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler*
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: RegisterWindowMessageHandler
  nameWithType: WindowHelperService.RegisterWindowMessageHandler
  fullName: WindowHelperService.RegisterWindowMessageHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
- uid: System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner*
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: TrySetWindowOwner
  nameWithType: WindowHelperService.TrySetWindowOwner
  fullName: WindowHelperService.TrySetWindowOwner
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
- uid: System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler*
  parent: System.Activities.Presentation.Hosting.WindowHelperService
  isExternal: false
  name: UnregisterWindowMessageHandler
  nameWithType: WindowHelperService.UnregisterWindowMessageHandler
  fullName: WindowHelperService.UnregisterWindowMessageHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Hosting/WindowHelperService.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
