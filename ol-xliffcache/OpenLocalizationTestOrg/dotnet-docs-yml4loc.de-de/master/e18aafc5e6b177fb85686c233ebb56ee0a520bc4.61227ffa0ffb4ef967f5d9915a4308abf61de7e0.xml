{"nodes":[{"content":"Provides compilation services for ASP.NET applications.","nodes":[{"pos":[0,55],"content":"Provides compilation services for ASP.NET applications.","nodes":[{"content":"Provides compilation services for ASP.NET applications.","pos":[0,55]}]}],"pos":[3524,3580],"yaml":true},{"content":"The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code. Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS). The class can be used to develop customized tools for compiling Web applications.  \n  \n The command-line tool `aspnet_compiler` uses the <xref:System.Web.Compilation.ClientBuildManager> class.","nodes":[{"pos":[0,455],"content":"The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code. Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS). The class can be used to develop customized tools for compiling Web applications.","nodes":[{"content":"The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code. Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS). The class can be used to develop customized tools for compiling Web applications.","pos":[0,455],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.","pos":[0,194],"source":"The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code."},{"content":"Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).","pos":[195,373]},{"content":"The class can be used to develop customized tools for compiling Web applications.","pos":[374,455]}]}]},{"pos":[462,566],"content":"The command-line tool <ph id=\"ph1\">`aspnet_compiler`</ph> uses the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> class.","source":"The command-line tool `aspnet_compiler` uses the <xref:System.Web.Compilation.ClientBuildManager> class."}],"pos":[3591,4162],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class without a specified target directory or precompilation flags.","nodes":[{"pos":[0,164],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Compilation.ClientBuildManager\"&gt;&lt;/xref&gt;</ph> class without a specified target directory or precompilation flags.","source":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class without a specified target directory or precompilation flags."}],"pos":[5930,6095],"yaml":true},{"content":"The virtual path to the application root.","nodes":[{"pos":[0,41],"content":"The virtual path to the application root.","nodes":[{"content":"The virtual path to the application root.","pos":[0,41]}]}],"pos":[6282,6324],"yaml":true},{"content":"The physical path to the application root.","nodes":[{"pos":[0,42],"content":"The physical path to the application root.","nodes":[{"content":"The physical path to the application root.","pos":[0,42]}]}],"pos":[6400,6443],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class with the specified target directory.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Compilation.ClientBuildManager\"&gt;&lt;/xref&gt;</ph> class with the specified target directory.","source":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class with the specified target directory."}],"pos":[7696,7836],"yaml":true},{"content":"This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.","nodes":[{"pos":[0,118],"content":"This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.","nodes":[{"content":"This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.","pos":[0,118]}]}],"pos":[7847,7966],"yaml":true,"extradata":"MT"},{"content":"The virtual path to the application root.","nodes":[{"pos":[0,41],"content":"The virtual path to the application root.","nodes":[{"content":"The virtual path to the application root.","pos":[0,41]}]}],"pos":[8182,8224],"yaml":true},{"content":"The physical path to the application root.","nodes":[{"pos":[0,42],"content":"The physical path to the application root.","nodes":[{"content":"The physical path to the application root.","pos":[0,42]}]}],"pos":[8300,8343],"yaml":true},{"content":"The target directory for precompilation.","nodes":[{"pos":[0,40],"content":"The target directory for precompilation.","nodes":[{"content":"The target directory for precompilation.","pos":[0,40]}]}],"pos":[8419,8460],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class with the specified target directory and compilation parameter.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Compilation.ClientBuildManager\"&gt;&lt;/xref&gt;</ph> class with the specified target directory and compilation parameter.","source":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class with the specified target directory and compilation parameter."}],"pos":[9953,10119],"yaml":true},{"content":"This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.","nodes":[{"pos":[0,143],"content":"This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.","nodes":[{"content":"This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.","pos":[0,143]}]}],"pos":[10130,10274],"yaml":true,"extradata":"MT"},{"content":"The virtual path to the application root.","nodes":[{"pos":[0,41],"content":"The virtual path to the application root.","nodes":[{"content":"The virtual path to the application root.","pos":[0,41]}]}],"pos":[10552,10594],"yaml":true},{"content":"The physical path to the application root.","nodes":[{"pos":[0,42],"content":"The physical path to the application root.","nodes":[{"content":"The physical path to the application root.","pos":[0,42]}]}],"pos":[10670,10713],"yaml":true},{"content":"The target directory for precompilation.","nodes":[{"pos":[0,40],"content":"The target directory for precompilation.","nodes":[{"content":"The target directory for precompilation.","pos":[0,40]}]}],"pos":[10789,10830],"yaml":true},{"content":"Values that determine the precompilation behavior.","nodes":[{"pos":[0,50],"content":"Values that determine the precompilation behavior.","nodes":[{"content":"Values that determine the precompilation behavior.","pos":[0,50]}]}],"pos":[10932,10983],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.","nodes":[{"pos":[0,234],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Compilation.ClientBuildManager\"&gt;&lt;/xref&gt;</ph> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.","source":"Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider."}],"pos":[12689,12924],"yaml":true},{"content":"The virtual path of the application root.","nodes":[{"pos":[0,41],"content":"The virtual path of the application root.","nodes":[{"content":"The virtual path of the application root.","pos":[0,41]}]}],"pos":[13273,13315],"yaml":true},{"content":"The physical path of the application root.","nodes":[{"pos":[0,42],"content":"The physical path of the application root.","nodes":[{"content":"The physical path of the application root.","pos":[0,42]}]}],"pos":[13391,13434],"yaml":true},{"content":"The target directory for precompilation.","nodes":[{"pos":[0,40],"content":"The target directory for precompilation.","nodes":[{"content":"The target directory for precompilation.","pos":[0,40]}]}],"pos":[13510,13551],"yaml":true},{"content":"Values that determine the precompilation behavior.","nodes":[{"pos":[0,50],"content":"Values that determine the precompilation behavior.","nodes":[{"content":"Values that determine the precompilation behavior.","pos":[0,50]}]}],"pos":[13653,13704],"yaml":true},{"content":"The type-description provider to use. This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio. It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.","nodes":[{"pos":[0,240],"content":"The type-description provider to use. This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio. It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.","nodes":[{"content":"The type-description provider to use. This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio. It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.","pos":[0,240],"nodes":[{"content":"The type-description provider to use.","pos":[0,37]},{"content":"This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.","pos":[38,134]},{"content":"It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.","pos":[135,240]}]}]}],"pos":[13815,14056],"yaml":true},{"content":"Occurs when an application domain is shut down.","nodes":[{"pos":[0,47],"content":"Occurs when an application domain is shut down.","nodes":[{"content":"Occurs when an application domain is shut down.","pos":[0,47]}]}],"pos":[15133,15181],"yaml":true},{"content":"Occurs when an application domain is started.","nodes":[{"pos":[0,45],"content":"Occurs when an application domain is started.","nodes":[{"content":"Occurs when an application domain is started.","pos":[0,45]}]}],"pos":[16408,16454],"yaml":true},{"content":"Occurs when an application domain is unloaded.","nodes":[{"pos":[0,46],"content":"Occurs when an application domain is unloaded.","nodes":[{"content":"Occurs when an application domain is unloaded.","pos":[0,46]}]}],"pos":[17603,17650],"yaml":true},{"content":"Gets the physical path to the directory used for code generation.","nodes":[{"pos":[0,65],"content":"Gets the physical path to the directory used for code generation.","nodes":[{"content":"Gets the physical path to the directory used for code generation.","pos":[0,65]}]}],"pos":[18844,18910],"yaml":true},{"content":"The directory for code generation is typically in the temporary ASP.NET files directory.","nodes":[{"pos":[0,88],"content":"The directory for code generation is typically in the temporary ASP.NET files directory.","nodes":[{"content":"The directory for code generation is typically in the temporary ASP.NET files directory.","pos":[0,88]}]}],"pos":[18921,19010],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> containing the directory path used for code generation.","nodes":[{"pos":[0,92],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the directory path used for code generation.","source":"A <xref href=\"System.String\"></xref> containing the directory path used for code generation."}],"pos":[19124,19217],"yaml":true},{"content":"Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.","nodes":[{"pos":[0,136],"content":"Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.","nodes":[{"content":"Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.","pos":[0,136]}]}],"pos":[20384,20521],"yaml":true},{"content":"The <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.","nodes":[{"pos":[0,251],"content":"The <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A&gt;</ph> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.","pos":[0,251],"source":"The <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled."}]}],"pos":[20532,20784],"yaml":true,"extradata":"MT"},{"content":"Compiles the file represented by the virtual path.","nodes":[{"pos":[0,50],"content":"Compiles the file represented by the virtual path.","nodes":[{"content":"Compiles the file represented by the virtual path.","pos":[0,50]}]}],"pos":[22009,22060],"yaml":true},{"content":"The path to the file to be compiled.","nodes":[{"pos":[0,36],"content":"The path to the file to be compiled.","nodes":[{"content":"The path to the file to be compiled.","pos":[0,36]}]}],"pos":[22212,22249],"yaml":true},{"content":"Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.","nodes":[{"pos":[0,126],"content":"Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.","nodes":[{"content":"Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.","pos":[0,126]}]}],"pos":[23600,23727],"yaml":true},{"content":"The path to the file to be compiled.","nodes":[{"pos":[0,36],"content":"The path to the file to be compiled.","nodes":[{"content":"The path to the file to be compiled.","pos":[0,36]}]}],"pos":[23939,23976],"yaml":true},{"content":"The object to receive status information from compilation.","nodes":[{"pos":[0,58],"content":"The object to receive status information from compilation.","nodes":[{"content":"The object to receive status information from compilation.","pos":[0,58]}]}],"pos":[24076,24135],"yaml":true},{"content":"<code>virtualPath</code> is null.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.","source":"<code>virtualPath</code> is null."}],"pos":[24318,24352],"yaml":true},{"content":"Creates an object in the application domain of the ASP.NET runtime.","nodes":[{"pos":[0,67],"content":"Creates an object in the application domain of the ASP.NET runtime.","nodes":[{"content":"Creates an object in the application domain of the ASP.NET runtime.","pos":[0,67]}]}],"pos":[25451,25519],"yaml":true},{"content":"The type of object to be created.","nodes":[{"pos":[0,33],"content":"The type of object to be created.","nodes":[{"content":"The type of object to be created.","pos":[0,33]}]}],"pos":[25705,25739],"yaml":true},{"content":"`true` to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, `false`.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`true`</ph> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, `false`."}],"pos":[25808,25948],"yaml":true},{"content":"An object in the application domain of the ASP.NET runtime.","nodes":[{"pos":[0,59],"content":"An object in the application domain of the ASP.NET runtime.","nodes":[{"content":"An object in the application domain of the ASP.NET runtime.","pos":[0,59]}]}],"pos":[26028,26088],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[26272,26301],"yaml":true},{"content":"The object already exists in the application domain and <code>failIfExists</code> is `true`.","nodes":[{"pos":[0,92],"content":"The object already exists in the application domain and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">failIfExists</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`true`</ph>.","source":"The object already exists in the application domain and <code>failIfExists</code> is `true`."}],"pos":[26411,26504],"yaml":true},{"content":"Generates code from the contents of a file.","nodes":[{"pos":[0,43],"content":"Generates code from the contents of a file.","nodes":[{"content":"Generates code from the contents of a file.","pos":[0,43]}]}],"pos":[27744,27788],"yaml":true},{"content":"The virtual path to the file.","nodes":[{"pos":[0,29],"content":"The virtual path to the file.","nodes":[{"content":"The virtual path to the file.","pos":[0,29]}]}],"pos":[28022,28052],"yaml":true},{"content":"The contents of the file.","nodes":[{"pos":[0,25],"content":"The contents of the file.","nodes":[{"content":"The contents of the file.","pos":[0,25]}]}],"pos":[28125,28151],"yaml":true},{"content":"When this method returns, contains a dictionary of line pragmas.","nodes":[{"pos":[0,64],"content":"When this method returns, contains a dictionary of line pragmas.","nodes":[{"content":"When this method returns, contains a dictionary of line pragmas.","pos":[0,64]}]}],"pos":[28240,28305],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> containing the generated code.","nodes":[{"pos":[0,67],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the generated code.","source":"A <xref href=\"System.String\"></xref> containing the generated code."}],"pos":[28362,28430],"yaml":true},{"content":"<code>virtualPath</code> is null.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.","source":"<code>virtualPath</code> is null."}],"pos":[28614,28648],"yaml":true},{"content":"Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.","nodes":[{"pos":[0,106],"content":"Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.","nodes":[{"content":"Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.","pos":[0,106]}]}],"pos":[30137,30244],"yaml":true},{"content":"The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file. In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters. The `codeDomProviderType` parameter returns the provider type for generating and compiling the file. The `compilerParameters` parameter contains properties that determine compilation behavior. The `linePragmasTable` parameter contains a dictionary of line pragmas.","nodes":[{"pos":[0,515],"content":"The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file. In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters. The `codeDomProviderType` parameter returns the provider type for generating and compiling the file. The `compilerParameters` parameter contains properties that determine compilation behavior. The `linePragmasTable` parameter contains a dictionary of line pragmas.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A&gt;</ph> method retrieves information needed to compile a file.","pos":[0,134],"source":"The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file."},{"content":"In addition to a <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> object as a return value, it returns three <ph id=\"ph2\">`out`</ph> parameters.","pos":[135,250],"source":" In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters."},{"content":"The <ph id=\"ph1\">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.","pos":[251,351],"source":" The `codeDomProviderType` parameter returns the provider type for generating and compiling the file."},{"content":"The <ph id=\"ph1\">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.","pos":[352,443],"source":" The `compilerParameters` parameter contains properties that determine compilation behavior."},{"content":"The <ph id=\"ph1\">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.","pos":[444,515],"source":" The `linePragmasTable` parameter contains a dictionary of line pragmas."}]}],"pos":[30255,30771],"yaml":true,"extradata":"MT"},{"content":"The virtual path to the file.","nodes":[{"pos":[0,29],"content":"The virtual path to the file.","nodes":[{"content":"The virtual path to the file.","pos":[0,29]}]}],"pos":[31111,31141],"yaml":true},{"content":"When this method returns, contains the codeDOM provider type used for code generation and compilation.","nodes":[{"pos":[0,102],"content":"When this method returns, contains the codeDOM provider type used for code generation and compilation.","nodes":[{"content":"When this method returns, contains the codeDOM provider type used for code generation and compilation.","pos":[0,102]}]}],"pos":[31214,31317],"yaml":true},{"content":"When this method returns, contains the properties that define how the file will be compiled.","nodes":[{"pos":[0,92],"content":"When this method returns, contains the properties that define how the file will be compiled.","nodes":[{"content":"When this method returns, contains the properties that define how the file will be compiled.","pos":[0,92]}]}],"pos":[31420,31513],"yaml":true},{"content":"When this method returns, contains a dictionary of line pragmas.","nodes":[{"pos":[0,64],"content":"When this method returns, contains a dictionary of line pragmas.","nodes":[{"content":"When this method returns, contains a dictionary of line pragmas.","pos":[0,64]}]}],"pos":[31602,31667],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> for the given file.","nodes":[{"pos":[0,73],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph> for the given file.","source":"A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> for the given file."}],"pos":[31741,31815],"yaml":true},{"content":"Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.","nodes":[{"pos":[0,116],"content":"Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.","nodes":[{"content":"Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.","pos":[0,116]}]}],"pos":[33466,33583],"yaml":true},{"content":"The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file. In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters. The `codeDomProviderType` parameter returns the provider type for generating and compiling the file. The `compilerParameters` parameter contains properties that determine compilation behavior. The `linePragmasTable` parameter contains a dictionary of line pragmas.","nodes":[{"pos":[0,515],"content":"The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file. In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters. The `codeDomProviderType` parameter returns the provider type for generating and compiling the file. The `compilerParameters` parameter contains properties that determine compilation behavior. The `linePragmasTable` parameter contains a dictionary of line pragmas.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A&gt;</ph> method retrieves information needed to compile a file.","pos":[0,134],"source":"The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file."},{"content":"In addition to a <ph id=\"ph1\">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> object as a return value, it returns three <ph id=\"ph2\">`out`</ph> parameters.","pos":[135,250],"source":" In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters."},{"content":"The <ph id=\"ph1\">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the file.","pos":[251,351],"source":" The `codeDomProviderType` parameter returns the provider type for generating and compiling the file."},{"content":"The <ph id=\"ph1\">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.","pos":[352,443],"source":" The `compilerParameters` parameter contains properties that determine compilation behavior."},{"content":"The <ph id=\"ph1\">`linePragmasTable`</ph> parameter contains a dictionary of line pragmas.","pos":[444,515],"source":" The `linePragmasTable` parameter contains a dictionary of line pragmas."}]}],"pos":[33594,34110],"yaml":true,"extradata":"MT"},{"content":"The virtual path to the file.","nodes":[{"pos":[0,29],"content":"The virtual path to the file.","nodes":[{"content":"The virtual path to the file.","pos":[0,29]}]}],"pos":[34476,34506],"yaml":true},{"content":"The contents of the file represented by the <code>virtualPath</code> parameter.","nodes":[{"pos":[0,79],"content":"The contents of the file represented by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The contents of the file represented by the <code>virtualPath</code> parameter."}],"pos":[34579,34659],"yaml":true},{"content":"When this method returns, contains the codeDOM provider type used for code generation and compilation.","nodes":[{"pos":[0,102],"content":"When this method returns, contains the codeDOM provider type used for code generation and compilation.","nodes":[{"content":"When this method returns, contains the codeDOM provider type used for code generation and compilation.","pos":[0,102]}]}],"pos":[34732,34835],"yaml":true},{"content":"When this method returns, contains the properties that define how the file represented by the <code>virtualPath</code> parameter will be compiled.","nodes":[{"pos":[0,146],"content":"When this method returns, contains the properties that define how the file represented by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">virtualPath</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter will be compiled.","source":"When this method returns, contains the properties that define how the file represented by the <code>virtualPath</code> parameter will be compiled."}],"pos":[34938,35085],"yaml":true},{"content":"When this method returns, contains a dictionary of line pragmas.","nodes":[{"pos":[0,64],"content":"When this method returns, contains a dictionary of line pragmas.","nodes":[{"content":"When this method returns, contains a dictionary of line pragmas.","pos":[0,64]}]}],"pos":[35174,35239],"yaml":true},{"content":"A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> for the given file.","nodes":[{"pos":[0,73],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.CodeDom.CodeCompileUnit\"&gt;&lt;/xref&gt;</ph> for the given file.","source":"A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> for the given file."}],"pos":[35313,35387],"yaml":true},{"content":"<code>virtualPath</code> is null.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.","source":"<code>virtualPath</code> is null."}],"pos":[35582,35616],"yaml":true},{"content":"Gets the directories with files that, when changed, cause the application domain to shut down.","nodes":[{"pos":[0,94],"content":"Gets the directories with files that, when changed, cause the application domain to shut down.","nodes":[{"content":"Gets the directories with files that, when changed, cause the application domain to shut down.","pos":[0,94]}]}],"pos":[36706,36801],"yaml":true},{"content":"Changes to files in specific top-level directories cause the application domain to shut down. Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes. When changes are detected, the application domain is shut down.","nodes":[{"pos":[0,289],"content":"Changes to files in specific top-level directories cause the application domain to shut down. Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes. When changes are detected, the application domain is shut down.","nodes":[{"content":"Changes to files in specific top-level directories cause the application domain to shut down. Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes. When changes are detected, the application domain is shut down.","pos":[0,289],"nodes":[{"content":"Changes to files in specific top-level directories cause the application domain to shut down.","pos":[0,93]},{"content":"Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.","pos":[94,225]},{"content":"When changes are detected, the application domain is shut down.","pos":[226,289]}]}]}],"pos":[36812,37102],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> array containing the top-level directory names.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> array containing the top-level directory names.","source":"A <xref href=\"System.String\"></xref> array containing the top-level directory names."}],"pos":[37255,37340],"yaml":true},{"content":"Gets a collection of browser elements.","nodes":[{"pos":[0,38],"content":"Gets a collection of browser elements.","nodes":[{"content":"Gets a collection of browser elements.","pos":[0,38]}]}],"pos":[38474,38513],"yaml":true},{"content":"The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values. The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.","nodes":[{"pos":[0,300],"content":"The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values. The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.","nodes":[{"content":"The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values. The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.","pos":[0,300],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Collections.IDictionary&gt;</ph> object contains browser names for the keys and <ph id=\"ph2\">&lt;xref:System.Web.UI.Triplet&gt;</ph> objects for the values.","pos":[0,141],"source":"The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Triplet&gt;</ph> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.","pos":[142,300],"source":" The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree."}]}]}],"pos":[38524,38825],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Collections.IDictionary\"></xref> containing browser elements.","nodes":[{"pos":[0,83],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> containing browser elements.","source":"An <xref href=\"System.Collections.IDictionary\"></xref> containing browser elements."}],"pos":[39005,39089],"yaml":true},{"content":"Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.","nodes":[{"pos":[0,160],"content":"Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.","nodes":[{"content":"Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.","pos":[0,160]}]}],"pos":[40630,40791],"yaml":true},{"content":"The <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> method retrieves information needed to build a code directory. It returns this information through three `out` parameters. The `codeDomProviderType` parameter returns the provider type for generating and compiling the files in the code directory. The `compilerParameters` parameter contains properties that determine compilation behavior. The `generatedFilesDir` parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.","nodes":[{"pos":[0,586],"content":"The <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> method retrieves information needed to build a code directory. It returns this information through three `out` parameters. The `codeDomProviderType` parameter returns the provider type for generating and compiling the files in the code directory. The `compilerParameters` parameter contains properties that determine compilation behavior. The `generatedFilesDir` parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A&gt;</ph> method retrieves information needed to build a code directory.","pos":[0,146],"source":"The <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> method retrieves information needed to build a code directory."},{"content":"It returns this information through three <ph id=\"ph1\">`out`</ph> parameters.","pos":[147,206],"source":" It returns this information through three `out` parameters."},{"content":"The <ph id=\"ph1\">`codeDomProviderType`</ph> parameter returns the provider type for generating and compiling the files in the code directory.","pos":[207,330],"source":" The `codeDomProviderType` parameter returns the provider type for generating and compiling the files in the code directory."},{"content":"The <ph id=\"ph1\">`compilerParameters`</ph> parameter contains properties that determine compilation behavior.","pos":[331,422],"source":" The `compilerParameters` parameter contains properties that determine compilation behavior."},{"content":"The <ph id=\"ph1\">`generatedFilesDir`</ph> parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.","pos":[423,586],"source":" The `generatedFilesDir` parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files."}]}],"pos":[40802,41389],"yaml":true,"extradata":"MT"},{"content":"The directory about which to retrieve information.","nodes":[{"pos":[0,50],"content":"The directory about which to retrieve information.","nodes":[{"content":"The directory about which to retrieve information.","pos":[0,50]}]}],"pos":[41690,41741],"yaml":true},{"content":"When this method returns, contains the provider type used for code generation and compilation.","nodes":[{"pos":[0,94],"content":"When this method returns, contains the provider type used for code generation and compilation.","nodes":[{"content":"When this method returns, contains the provider type used for code generation and compilation.","pos":[0,94]}]}],"pos":[41814,41909],"yaml":true},{"content":"When this method returns, contains the properties that define how the file will be compiled.","nodes":[{"pos":[0,92],"content":"When this method returns, contains the properties that define how the file will be compiled.","nodes":[{"content":"When this method returns, contains the properties that define how the file will be compiled.","pos":[0,92]}]}],"pos":[42012,42105],"yaml":true},{"content":"When this method returns, contains the directory for files generated from non-code files.","nodes":[{"pos":[0,89],"content":"When this method returns, contains the directory for files generated from non-code files.","nodes":[{"content":"When this method returns, contains the directory for files generated from non-code files.","pos":[0,89]}]}],"pos":[42178,42268],"yaml":true},{"content":"<code>virtualCodeDir</code> is null.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">&lt;code&gt;virtualCodeDir&lt;/code&gt;</ph> is null.","source":"<code>virtualCodeDir</code> is null."}],"pos":[42467,42504],"yaml":true},{"content":"Compiles the file represented by the virtual path and returns its compiled type.","nodes":[{"pos":[0,80],"content":"Compiles the file represented by the virtual path and returns its compiled type.","nodes":[{"content":"Compiles the file represented by the virtual path and returns its compiled type.","pos":[0,80]}]}],"pos":[43561,43642],"yaml":true},{"content":"The virtual path of the file to compile.","nodes":[{"pos":[0,40],"content":"The virtual path of the file to compile.","nodes":[{"content":"The virtual path of the file to compile.","pos":[0,40]}]}],"pos":[43798,43839],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the compiled file.","nodes":[{"pos":[0,58],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the compiled file.","source":"The <xref href=\"System.Type\"></xref> of the compiled file."}],"pos":[43894,43953],"yaml":true},{"content":"<code>virtualPath</code> is null.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.","source":"<code>virtualPath</code> is null."}],"pos":[44140,44174],"yaml":true},{"content":"Returns the compiler type and parameters that are used to build a file represented by a virtual path.","nodes":[{"pos":[0,101],"content":"Returns the compiler type and parameters that are used to build a file represented by a virtual path.","nodes":[{"content":"Returns the compiler type and parameters that are used to build a file represented by a virtual path.","pos":[0,101]}]}],"pos":[45516,45618],"yaml":true},{"content":"The virtual path to the file.","nodes":[{"pos":[0,29],"content":"The virtual path to the file.","nodes":[{"content":"The virtual path to the file.","pos":[0,29]}]}],"pos":[45877,45907],"yaml":true},{"content":"When this method returns, contains the provider type used for code generation and compilation.","nodes":[{"pos":[0,94],"content":"When this method returns, contains the provider type used for code generation and compilation.","nodes":[{"content":"When this method returns, contains the provider type used for code generation and compilation.","pos":[0,94]}]}],"pos":[45980,46075],"yaml":true},{"content":"When this method returns, contains the properties that define how the file will be compiled.","nodes":[{"pos":[0,92],"content":"When this method returns, contains the properties that define how the file will be compiled.","nodes":[{"content":"When this method returns, contains the properties that define how the file will be compiled.","pos":[0,92]}]}],"pos":[46178,46271],"yaml":true},{"content":"<code>virtualPath</code> is null.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.","source":"<code>virtualPath</code> is null."}],"pos":[46464,46498],"yaml":true},{"content":"Returns the virtual path of a generated file.","nodes":[{"pos":[0,45],"content":"Returns the virtual path of a generated file.","nodes":[{"content":"Returns the virtual path of a generated file.","pos":[0,45]}]}],"pos":[47627,47673],"yaml":true},{"content":"The full physical path to a generated file.","nodes":[{"pos":[0,43],"content":"The full physical path to a generated file.","nodes":[{"content":"The full physical path to a generated file.","pos":[0,43]}]}],"pos":[47837,47881],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> containing the virtual path for <code>filePath</code>.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the virtual path for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">filePath</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.String\"></xref> containing the virtual path for <code>filePath</code>."}],"pos":[47938,48030],"yaml":true},{"content":"<code>filePath</code> is null.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;filePath&lt;/code&gt;</ph> is null.","source":"<code>filePath</code> is null."}],"pos":[48229,48260],"yaml":true},{"content":"Gets the physical path to the generated file for a virtual path.","nodes":[{"pos":[0,64],"content":"Gets the physical path to the generated file for a virtual path.","nodes":[{"content":"Gets the physical path to the generated file for a virtual path.","pos":[0,64]}]}],"pos":[49359,49424],"yaml":true},{"content":"The virtual path of the file to retrieve.","nodes":[{"pos":[0,41],"content":"The virtual path of the file to retrieve.","nodes":[{"content":"The virtual path of the file to retrieve.","pos":[0,41]}]}],"pos":[49589,49631],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> that contains the physical path to the generated file.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> that contains the physical path to the generated file.","source":"A <xref href=\"System.String\"></xref> that contains the physical path to the generated file."}],"pos":[49688,49780],"yaml":true},{"content":"<code>virtualPath</code> is null.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.","source":"<code>virtualPath</code> is null."}],"pos":[49974,50008],"yaml":true},{"content":"Returns an array of the assemblies defined in the Bin directory and the `<assembly>` section of the Web configuration file.","nodes":[{"pos":[0,123],"content":"Returns an array of the assemblies defined in the Bin directory and the <ph id=\"ph1\">`&lt;assembly&gt;`</ph> section of the Web configuration file.","source":"Returns an array of the assemblies defined in the Bin directory and the `<assembly>` section of the Web configuration file."}],"pos":[51149,51273],"yaml":true},{"content":"The configuration name and path.","nodes":[{"pos":[0,32],"content":"The configuration name and path.","nodes":[{"content":"The configuration name and path.","pos":[0,32]}]}],"pos":[51447,51480],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> array containing paths to code bases in the Bin directory and the `<assembly>` section of the Web configuration file.","nodes":[{"pos":[0,154],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> array containing paths to code bases in the Bin directory and the <ph id=\"ph2\">`&lt;assembly&gt;`</ph> section of the Web configuration file.","source":"A <xref href=\"System.String\"></xref> array containing paths to code bases in the Bin directory and the `<assembly>` section of the Web configuration file."}],"pos":[51539,51694],"yaml":true},{"content":"<code>virtualPath</code> is null.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is null.","source":"<code>virtualPath</code> is null."}],"pos":[51895,51929],"yaml":true},{"content":"Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.","nodes":[{"pos":[0,101],"content":"Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.","nodes":[{"content":"Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.","pos":[0,101]}]}],"pos":[52983,53085],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> array containing all the virtual paths to code directories in an application.","nodes":[{"pos":[0,114],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> array containing all the virtual paths to code directories in an application.","source":"A <xref href=\"System.String\"></xref> array containing all the virtual paths to code directories in an application."}],"pos":[53232,53347],"yaml":true},{"content":"Gives the application domain an infinite lifetime by preventing a lease from being created.","nodes":[{"pos":[0,91],"content":"Gives the application domain an infinite lifetime by preventing a lease from being created.","nodes":[{"content":"Gives the application domain an infinite lifetime by preventing a lease from being created.","pos":[0,91]}]}],"pos":[54499,54591],"yaml":true},{"content":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class. It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.","nodes":[{"pos":[0,238],"content":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class. It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.","nodes":[{"content":"This method overrides the <ph id=\"ph1\">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</ph> method in its base class.","pos":[0,113],"source":"This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class."},{"content":"It always returns <ph id=\"ph1\">`null`</ph> and thereby prevents a lease from being created that would limit the application domain's lifetime.","pos":[114,238],"source":" It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime."}]}],"pos":[54602,54841],"yaml":true,"extradata":"MT"},{"content":"Always `null`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`null`</ph>.","source":"Always `null`."}],"pos":[54993,55008],"yaml":true},{"content":"Indicates whether an assembly is a code assembly.","nodes":[{"pos":[0,49],"content":"Indicates whether an assembly is a code assembly.","nodes":[{"content":"Indicates whether an assembly is a code assembly.","pos":[0,49]}]}],"pos":[56157,56207],"yaml":true},{"content":"The name of the assembly to be identified as a code assembly.","nodes":[{"pos":[0,61],"content":"The name of the assembly to be identified as a code assembly.","nodes":[{"content":"The name of the assembly to be identified as a code assembly.","pos":[0,61]}]}],"pos":[56364,56426],"yaml":true},{"content":"`true` if the <code>assemblyName</code> parameter matches one of the generated code assemblies; otherwise, `false`.","nodes":[{"pos":[0,115],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">assemblyName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter matches one of the generated code assemblies; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>assemblyName</code> parameter matches one of the generated code assemblies; otherwise, `false`."}],"pos":[56484,56602],"yaml":true},{"content":"<code>assemblyName</code> is null.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;assemblyName&lt;/code&gt;</ph> is null.","source":"<code>assemblyName</code> is null."}],"pos":[56788,56823],"yaml":true},{"content":"Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.","nodes":[{"pos":[0,114],"content":"Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.","nodes":[{"content":"Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.","pos":[0,114]}]}],"pos":[57801,57916],"yaml":true},{"content":"`true` if the application domain for compiling ASP.NET Web applications has been created; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the application domain for compiling ASP.NET Web applications has been created; otherwise, `false`."}],"pos":[58032,58144],"yaml":true},{"content":"Precompiles an ASP.NET application.","nodes":[{"pos":[0,35],"content":"Precompiles an ASP.NET application.","nodes":[{"content":"Precompiles an ASP.NET application.","pos":[0,35]}]}],"pos":[59260,59296],"yaml":true},{"content":"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.  \n  \n The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.  \n  \n The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.  \n  \n A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.","nodes":[{"pos":[0,405],"content":"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.","nodes":[{"content":"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.","pos":[0,405],"nodes":[{"content":"ASP.NET supports three forms of precompilation.","pos":[0,47]},{"content":"One form allows for the in-place precompilation of an ASP.NET application.","pos":[48,122]},{"content":"In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.","pos":[123,287]},{"content":"The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.","pos":[288,405]}]}]},{"pos":[412,899],"content":"The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.","nodes":[{"content":"The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.","pos":[0,487],"nodes":[{"content":"The two other forms of precompilation are used for deployment.","pos":[0,62]},{"content":"In either form, a layout of the site is generated that can be deployed to a production computer.","pos":[63,159]},{"content":"One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.","pos":[160,270]},{"content":"The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.","pos":[271,390]},{"content":"No source code is deployed to the target environment in either of these forms of precompilation.","pos":[391,487]}]}]},{"pos":[906,1231],"content":"The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.","nodes":[{"content":"The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.","pos":[0,325],"nodes":[{"content":"The application to precompile is defined through the <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> constructor.","pos":[0,114],"source":"The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object of the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> constructor defines which of the three forms of precompilation to perform.","pos":[115,325],"source":" The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform."}]}]},{"pos":[1238,1420],"content":"A developer can precompile a Web site with the <ph id=\"ph1\">`aspnet_compiler`</ph> command-line tool or by calling the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> method.","source":"A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method."}],"pos":[59307,60736],"yaml":true,"extradata":"MT"},{"content":"Precompiles an ASP.NET application and provides a callback method to receive status information about the build.","nodes":[{"pos":[0,112],"content":"Precompiles an ASP.NET application and provides a callback method to receive status information about the build.","nodes":[{"content":"Precompiles an ASP.NET application and provides a callback method to receive status information about the build.","pos":[0,112]}]}],"pos":[62171,62284],"yaml":true},{"content":"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled. The `callback` parameter contains the method to call when reporting the result of compilation.  \n  \n The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.  \n  \n The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.  \n  \n A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.","nodes":[{"pos":[0,500],"content":"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled. The `callback` parameter contains the method to call when reporting the result of compilation.","nodes":[{"content":"ASP.NET supports three forms of precompilation.","pos":[0,47]},{"content":"One form allows for the in-place precompilation of an ASP.NET application.","pos":[48,122]},{"content":"In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.","pos":[123,287]},{"content":"The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.","pos":[288,405]},{"content":"The <ph id=\"ph1\">`callback`</ph> parameter contains the method to call when reporting the result of compilation.","pos":[406,500],"source":" The `callback` parameter contains the method to call when reporting the result of compilation."}]},{"pos":[507,994],"content":"The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.","nodes":[{"content":"The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.","pos":[0,487],"nodes":[{"content":"The two other forms of precompilation are used for deployment.","pos":[0,62]},{"content":"In either form, a layout of the site is generated that can be deployed to a production computer.","pos":[63,159]},{"content":"One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.","pos":[160,270]},{"content":"The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.","pos":[271,390]},{"content":"No source code is deployed to the target environment in either of these forms of precompilation.","pos":[391,487]}]}]},{"pos":[1001,1326],"content":"The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.","nodes":[{"content":"The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.","pos":[0,325],"nodes":[{"content":"The application to precompile is defined through the <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> constructor.","pos":[0,114],"source":"The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object of the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> constructor defines which of the three forms of precompilation to perform.","pos":[115,325],"source":" The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform."}]}]},{"pos":[1333,1515],"content":"A developer can precompile a Web site with the <ph id=\"ph1\">`aspnet_compiler`</ph> command-line tool or by calling the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> method.","source":"A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method."}],"pos":[62295,63819],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Web.Compilation.ClientBuildManagerCallback\"></xref> containing the method to call when reporting the result of compilation.","nodes":[{"pos":[0,144],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Compilation.ClientBuildManagerCallback\"&gt;&lt;/xref&gt;</ph> containing the method to call when reporting the result of compilation.","source":"A <xref href=\"System.Web.Compilation.ClientBuildManagerCallback\"></xref> containing the method to call when reporting the result of compilation."}],"pos":[64054,64199],"yaml":true},{"content":"Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.","nodes":[{"pos":[0,156],"content":"Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.","nodes":[{"content":"Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.","pos":[0,156]}]}],"pos":[65626,65783],"yaml":true},{"content":"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled. The `callback` parameter contains the method to call when reporting the result of compilation.  \n  \n The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.  \n  \n The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.  \n  \n A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.","nodes":[{"pos":[0,500],"content":"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled. The `callback` parameter contains the method to call when reporting the result of compilation.","nodes":[{"content":"ASP.NET supports three forms of precompilation.","pos":[0,47]},{"content":"One form allows for the in-place precompilation of an ASP.NET application.","pos":[48,122]},{"content":"In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.","pos":[123,287]},{"content":"The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.","pos":[288,405]},{"content":"The <ph id=\"ph1\">`callback`</ph> parameter contains the method to call when reporting the result of compilation.","pos":[406,500],"source":" The `callback` parameter contains the method to call when reporting the result of compilation."}]},{"pos":[507,994],"content":"The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.","nodes":[{"content":"The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.","pos":[0,487],"nodes":[{"content":"The two other forms of precompilation are used for deployment.","pos":[0,62]},{"content":"In either form, a layout of the site is generated that can be deployed to a production computer.","pos":[63,159]},{"content":"One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.","pos":[160,270]},{"content":"The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.","pos":[271,390]},{"content":"No source code is deployed to the target environment in either of these forms of precompilation.","pos":[391,487]}]}]},{"pos":[1001,1326],"content":"The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.","nodes":[{"content":"The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.","pos":[0,325],"nodes":[{"content":"The application to precompile is defined through the <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManager&gt;</ph> constructor.","pos":[0,114],"source":"The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Compilation.ClientBuildManagerParameter&gt;</ph> object of the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A&gt;</ph> constructor defines which of the three forms of precompilation to perform.","pos":[115,325],"source":" The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform."}]}]},{"pos":[1333,1515],"content":"A developer can precompile a Web site with the <ph id=\"ph1\">`aspnet_compiler`</ph> command-line tool or by calling the <ph id=\"ph2\">&lt;xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A&gt;</ph> method.","source":"A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method."}],"pos":[65794,67318],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Web.Compilation.ClientBuildManagerCallback\"></xref> containing the method to call when reporting the result of compilation.","nodes":[{"pos":[0,144],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.Compilation.ClientBuildManagerCallback\"&gt;&lt;/xref&gt;</ph> containing the method to call when reporting the result of compilation.","source":"A <xref href=\"System.Web.Compilation.ClientBuildManagerCallback\"></xref> containing the method to call when reporting the result of compilation."}],"pos":[67575,67720],"yaml":true},{"content":"`true` to perform a clean build, which will first delete all object and intermediate files; `false` to rebuild only those files that have changed. Set to true if there is a chance that a dependency might not be picked up by the build environment.","nodes":[{"pos":[0,246],"content":"`true` to perform a clean build, which will first delete all object and intermediate files; `false` to rebuild only those files that have changed. Set to true if there is a chance that a dependency might not be picked up by the build environment.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to perform a clean build, which will first delete all object and intermediate files; <ph id=\"ph2\">`false`</ph> to rebuild only those files that have changed.","pos":[0,146],"source":"`true` to perform a clean build, which will first delete all object and intermediate files; `false` to rebuild only those files that have changed."},{"content":"Set to true if there is a chance that a dependency might not be picked up by the build environment.","pos":[147,246]}]}],"pos":[67792,68041],"yaml":true},{"content":"Unloads the application domain for compiling ASP.NET Web applications.","nodes":[{"pos":[0,70],"content":"Unloads the application domain for compiling ASP.NET Web applications.","nodes":[{"content":"Unloads the application domain for compiling ASP.NET Web applications.","pos":[0,70]}]}],"pos":[69075,69146],"yaml":true},{"content":"`true` if the application domain is unloaded; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the application domain is unloaded; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the application domain is unloaded; otherwise, `false`."}],"pos":[69269,69337],"yaml":true},{"content":"Terminates the current ASP.NET application.","nodes":[{"pos":[0,43],"content":"Terminates the current ASP.NET application.","nodes":[{"content":"Terminates the current ASP.NET application.","pos":[0,43]}]}],"pos":[70469,70513],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Compilation.ClientBuildManager\n  commentId: T:System.Web.Compilation.ClientBuildManager\n  id: ClientBuildManager\n  children:\n  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)\n  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)\n  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)\n  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)\n  - System.Web.Compilation.ClientBuildManager.AppDomainShutdown\n  - System.Web.Compilation.ClientBuildManager.AppDomainStarted\n  - System.Web.Compilation.ClientBuildManager.AppDomainUnloaded\n  - System.Web.Compilation.ClientBuildManager.CodeGenDir\n  - System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies\n  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String)\n  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)\n  - System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)\n  - System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)\n  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  - System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories\n  - System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions\n  - System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)\n  - System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)\n  - System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)\n  - System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)\n  - System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)\n  - System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)\n  - System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories\n  - System.Web.Compilation.ClientBuildManager.InitializeLifetimeService\n  - System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)\n  - System.Web.Compilation.ClientBuildManager.IsHostCreated\n  - System.Web.Compilation.ClientBuildManager.PrecompileApplication\n  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)\n  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)\n  - System.Web.Compilation.ClientBuildManager.Unload\n  - System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose\n  langs:\n  - csharp\n  name: ClientBuildManager\n  nameWithType: ClientBuildManager\n  fullName: System.Web.Compilation.ClientBuildManager\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Provides compilation services for ASP.NET applications.\n  remarks: \"The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code. Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS). The class can be used to develop customized tools for compiling Web applications.  \\n  \\n The command-line tool `aspnet_compiler` uses the <xref:System.Web.Compilation.ClientBuildManager> class.\"\n  syntax:\n    content: 'public sealed class ClientBuildManager : MarshalByRefObject, IDisposable'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)\n  commentId: M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: ClientBuildManager(String, String)\n  nameWithType: ClientBuildManager.ClientBuildManager(String, String)\n  fullName: ClientBuildManager.ClientBuildManager(String, String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class without a specified target directory or precompilation flags.\n  syntax:\n    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);\n    parameters:\n    - id: appVirtualDir\n      type: System.String\n      description: The virtual path to the application root.\n    - id: appPhysicalSourceDir\n      type: System.String\n      description: The physical path to the application root.\n  overload: System.Web.Compilation.ClientBuildManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)\n  commentId: M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: ClientBuildManager(String, String, String)\n  nameWithType: ClientBuildManager.ClientBuildManager(String, String, String)\n  fullName: ClientBuildManager.ClientBuildManager(String, String, String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class with the specified target directory.\n  remarks: This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.\n  syntax:\n    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);\n    parameters:\n    - id: appVirtualDir\n      type: System.String\n      description: The virtual path to the application root.\n    - id: appPhysicalSourceDir\n      type: System.String\n      description: The physical path to the application root.\n    - id: appPhysicalTargetDir\n      type: System.String\n      description: The target directory for precompilation.\n  overload: System.Web.Compilation.ClientBuildManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)\n  commentId: M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)\n  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)'\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: ClientBuildManager(String, String, String, ClientBuildManagerParameter)\n  nameWithType: ClientBuildManager.ClientBuildManager(String, String, String, ClientBuildManagerParameter)\n  fullName: ClientBuildManager.ClientBuildManager(String, String, String, ClientBuildManagerParameter)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class with the specified target directory and compilation parameter.\n  remarks: This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.\n  syntax:\n    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);\n    parameters:\n    - id: appVirtualDir\n      type: System.String\n      description: The virtual path to the application root.\n    - id: appPhysicalSourceDir\n      type: System.String\n      description: The physical path to the application root.\n    - id: appPhysicalTargetDir\n      type: System.String\n      description: The target directory for precompilation.\n    - id: parameter\n      type: System.Web.Compilation.ClientBuildManagerParameter\n      description: Values that determine the precompilation behavior.\n  overload: System.Web.Compilation.ClientBuildManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)\n  commentId: M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)\n  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)'\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: ClientBuildManager(String, String, String, ClientBuildManagerParameter, TypeDescriptionProvider)\n  nameWithType: ClientBuildManager.ClientBuildManager(String, String, String, ClientBuildManagerParameter, TypeDescriptionProvider)\n  fullName: ClientBuildManager.ClientBuildManager(String, String, String, ClientBuildManagerParameter, TypeDescriptionProvider)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Initializes a new instance of the <xref href=\"System.Web.Compilation.ClientBuildManager\"></xref> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.\n  syntax:\n    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);\n    parameters:\n    - id: appVirtualDir\n      type: System.String\n      description: The virtual path of the application root.\n    - id: appPhysicalSourceDir\n      type: System.String\n      description: The physical path of the application root.\n    - id: appPhysicalTargetDir\n      type: System.String\n      description: The target directory for precompilation.\n    - id: parameter\n      type: System.Web.Compilation.ClientBuildManagerParameter\n      description: Values that determine the precompilation behavior.\n    - id: typeDescriptionProvider\n      type: System.ComponentModel.TypeDescriptionProvider\n      description: The type-description provider to use. This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio. It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.\n  overload: System.Web.Compilation.ClientBuildManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown\n  commentId: E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown\n  id: AppDomainShutdown\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: AppDomainShutdown\n  nameWithType: ClientBuildManager.AppDomainShutdown\n  fullName: ClientBuildManager.AppDomainShutdown\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Occurs when an application domain is shut down.\n  syntax:\n    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;\n    return:\n      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted\n  commentId: E:System.Web.Compilation.ClientBuildManager.AppDomainStarted\n  id: AppDomainStarted\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: AppDomainStarted\n  nameWithType: ClientBuildManager.AppDomainStarted\n  fullName: ClientBuildManager.AppDomainStarted\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Occurs when an application domain is started.\n  syntax:\n    content: public event EventHandler AppDomainStarted;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded\n  commentId: E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded\n  id: AppDomainUnloaded\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: AppDomainUnloaded\n  nameWithType: ClientBuildManager.AppDomainUnloaded\n  fullName: ClientBuildManager.AppDomainUnloaded\n  type: Event\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Occurs when an application domain is unloaded.\n  syntax:\n    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;\n    return:\n      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir\n  commentId: P:System.Web.Compilation.ClientBuildManager.CodeGenDir\n  id: CodeGenDir\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: CodeGenDir\n  nameWithType: ClientBuildManager.CodeGenDir\n  fullName: ClientBuildManager.CodeGenDir\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets the physical path to the directory used for code generation.\n  remarks: The directory for code generation is typically in the temporary ASP.NET files directory.\n  syntax:\n    content: public string CodeGenDir { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the directory path used for code generation.\n  overload: System.Web.Compilation.ClientBuildManager.CodeGenDir*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies\n  commentId: M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies\n  id: CompileApplicationDependencies\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: CompileApplicationDependencies()\n  nameWithType: ClientBuildManager.CompileApplicationDependencies()\n  fullName: ClientBuildManager.CompileApplicationDependencies()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.\n  remarks: The <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.\n  syntax:\n    content: public void CompileApplicationDependencies ();\n    parameters: []\n  overload: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)\n  commentId: M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)\n  id: CompileFile(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: CompileFile(String)\n  nameWithType: ClientBuildManager.CompileFile(String)\n  fullName: ClientBuildManager.CompileFile(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Compiles the file represented by the virtual path.\n  syntax:\n    content: public void CompileFile (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The path to the file to be compiled.\n  overload: System.Web.Compilation.ClientBuildManager.CompileFile*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)\n  commentId: M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)\n  id: CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: CompileFile(String, ClientBuildManagerCallback)\n  nameWithType: ClientBuildManager.CompileFile(String, ClientBuildManagerCallback)\n  fullName: ClientBuildManager.CompileFile(String, ClientBuildManagerCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.\n  syntax:\n    content: public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The path to the file to be compiled.\n    - id: callback\n      type: System.Web.Compilation.ClientBuildManagerCallback\n      description: The object to receive status information from compilation.\n  overload: System.Web.Compilation.ClientBuildManager.CompileFile*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualPath</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)\n  commentId: M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)\n  id: CreateObject(System.Type,System.Boolean)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: CreateObject(Type, Boolean)\n  nameWithType: ClientBuildManager.CreateObject(Type, Boolean)\n  fullName: ClientBuildManager.CreateObject(Type, Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Creates an object in the application domain of the ASP.NET runtime.\n  syntax:\n    content: public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type of object to be created.\n    - id: failIfExists\n      type: System.Boolean\n      description: '`true` to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, `false`.'\n    return:\n      type: System.Web.Hosting.IRegisteredObject\n      description: An object in the application domain of the ASP.NET runtime.\n  overload: System.Web.Compilation.ClientBuildManager.CreateObject*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The object already exists in the application domain and <code>failIfExists</code> is `true`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)\n  commentId: M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)\n  id: GenerateCode(System.String,System.String,System.Collections.IDictionary@)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GenerateCode(String, String, IDictionary)\n  nameWithType: ClientBuildManager.GenerateCode(String, String, IDictionary)\n  fullName: ClientBuildManager.GenerateCode(String, String, IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Generates code from the contents of a file.\n  syntax:\n    content: public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the file.\n    - id: virtualFileString\n      type: System.String\n      description: The contents of the file.\n    - id: linePragmasTable\n      type: System.Collections.IDictionary\n      description: When this method returns, contains a dictionary of line pragmas.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the generated code.\n  overload: System.Web.Compilation.ClientBuildManager.GenerateCode*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualPath</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  commentId: M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  id: GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GenerateCodeCompileUnit(String, Type, CompilerParameters, IDictionary)\n  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String, Type, CompilerParameters, IDictionary)\n  fullName: ClientBuildManager.GenerateCodeCompileUnit(String, Type, CompilerParameters, IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.\n  remarks: The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file. In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters. The `codeDomProviderType` parameter returns the provider type for generating and compiling the file. The `compilerParameters` parameter contains properties that determine compilation behavior. The `linePragmasTable` parameter contains a dictionary of line pragmas.\n  syntax:\n    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the file.\n    - id: codeDomProviderType\n      type: System.Type\n      description: When this method returns, contains the codeDOM provider type used for code generation and compilation.\n    - id: compilerParameters\n      type: System.CodeDom.Compiler.CompilerParameters\n      description: When this method returns, contains the properties that define how the file will be compiled.\n    - id: linePragmasTable\n      type: System.Collections.IDictionary\n      description: When this method returns, contains a dictionary of line pragmas.\n    return:\n      type: System.CodeDom.CodeCompileUnit\n      description: A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> for the given file.\n  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  commentId: M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  id: GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GenerateCodeCompileUnit(String, String, Type, CompilerParameters, IDictionary)\n  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String, String, Type, CompilerParameters, IDictionary)\n  fullName: ClientBuildManager.GenerateCodeCompileUnit(String, String, Type, CompilerParameters, IDictionary)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.\n  remarks: The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file. In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters. The `codeDomProviderType` parameter returns the provider type for generating and compiling the file. The `compilerParameters` parameter contains properties that determine compilation behavior. The `linePragmasTable` parameter contains a dictionary of line pragmas.\n  syntax:\n    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the file.\n    - id: virtualFileString\n      type: System.String\n      description: The contents of the file represented by the <code>virtualPath</code> parameter.\n    - id: codeDomProviderType\n      type: System.Type\n      description: When this method returns, contains the codeDOM provider type used for code generation and compilation.\n    - id: compilerParameters\n      type: System.CodeDom.Compiler.CompilerParameters\n      description: When this method returns, contains the properties that define how the file represented by the <code>virtualPath</code> parameter will be compiled.\n    - id: linePragmasTable\n      type: System.Collections.IDictionary\n      description: When this method returns, contains a dictionary of line pragmas.\n    return:\n      type: System.CodeDom.CodeCompileUnit\n      description: A <xref href=\"System.CodeDom.CodeCompileUnit\"></xref> for the given file.\n  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualPath</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories\n  commentId: M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories\n  id: GetAppDomainShutdownDirectories\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GetAppDomainShutdownDirectories()\n  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()\n  fullName: ClientBuildManager.GetAppDomainShutdownDirectories()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets the directories with files that, when changed, cause the application domain to shut down.\n  remarks: Changes to files in specific top-level directories cause the application domain to shut down. Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes. When changes are detected, the application domain is shut down.\n  syntax:\n    content: public string[] GetAppDomainShutdownDirectories ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: A <xref href=\"System.String\"></xref> array containing the top-level directory names.\n  overload: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions\n  commentId: M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions\n  id: GetBrowserDefinitions\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GetBrowserDefinitions()\n  nameWithType: ClientBuildManager.GetBrowserDefinitions()\n  fullName: ClientBuildManager.GetBrowserDefinitions()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets a collection of browser elements.\n  remarks: The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values. The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.\n  syntax:\n    content: public System.Collections.IDictionary GetBrowserDefinitions ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionary\n      description: An <xref href=\"System.Collections.IDictionary\"></xref> containing browser elements.\n  overload: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)\n  commentId: M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)\n  id: GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GetCodeDirectoryInformation(String, Type, CompilerParameters, String)\n  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String, Type, CompilerParameters, String)\n  fullName: ClientBuildManager.GetCodeDirectoryInformation(String, Type, CompilerParameters, String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.\n  remarks: The <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> method retrieves information needed to build a code directory. It returns this information through three `out` parameters. The `codeDomProviderType` parameter returns the provider type for generating and compiling the files in the code directory. The `compilerParameters` parameter contains properties that determine compilation behavior. The `generatedFilesDir` parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.\n  syntax:\n    content: public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);\n    parameters:\n    - id: virtualCodeDir\n      type: System.String\n      description: The directory about which to retrieve information.\n    - id: codeDomProviderType\n      type: System.Type\n      description: When this method returns, contains the provider type used for code generation and compilation.\n    - id: compilerParameters\n      type: System.CodeDom.Compiler.CompilerParameters\n      description: When this method returns, contains the properties that define how the file will be compiled.\n    - id: generatedFilesDir\n      type: System.String\n      description: When this method returns, contains the directory for files generated from non-code files.\n  overload: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualCodeDir</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)\n  commentId: M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)\n  id: GetCompiledType(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GetCompiledType(String)\n  nameWithType: ClientBuildManager.GetCompiledType(String)\n  fullName: ClientBuildManager.GetCompiledType(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Compiles the file represented by the virtual path and returns its compiled type.\n  syntax:\n    content: public Type GetCompiledType (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path of the file to compile.\n    return:\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the compiled file.\n  overload: System.Web.Compilation.ClientBuildManager.GetCompiledType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualPath</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)\n  commentId: M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)\n  id: GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GetCompilerParameters(String, Type, CompilerParameters)\n  nameWithType: ClientBuildManager.GetCompilerParameters(String, Type, CompilerParameters)\n  fullName: ClientBuildManager.GetCompilerParameters(String, Type, CompilerParameters)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Returns the compiler type and parameters that are used to build a file represented by a virtual path.\n  syntax:\n    content: public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path to the file.\n    - id: codeDomProviderType\n      type: System.Type\n      description: When this method returns, contains the provider type used for code generation and compilation.\n    - id: compilerParameters\n      type: System.CodeDom.Compiler.CompilerParameters\n      description: When this method returns, contains the properties that define how the file will be compiled.\n  overload: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualPath</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)\n  commentId: M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)\n  id: GetGeneratedFileVirtualPath(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GetGeneratedFileVirtualPath(String)\n  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)\n  fullName: ClientBuildManager.GetGeneratedFileVirtualPath(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Returns the virtual path of a generated file.\n  syntax:\n    content: public string GetGeneratedFileVirtualPath (string filePath);\n    parameters:\n    - id: filePath\n      type: System.String\n      description: The full physical path to a generated file.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> containing the virtual path for <code>filePath</code>.\n  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>filePath</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)\n  commentId: M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)\n  id: GetGeneratedSourceFile(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GetGeneratedSourceFile(String)\n  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)\n  fullName: ClientBuildManager.GetGeneratedSourceFile(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets the physical path to the generated file for a virtual path.\n  syntax:\n    content: public string GetGeneratedSourceFile (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The virtual path of the file to retrieve.\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> that contains the physical path to the generated file.\n  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualPath</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)\n  commentId: M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)\n  id: GetTopLevelAssemblyReferences(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GetTopLevelAssemblyReferences(String)\n  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)\n  fullName: ClientBuildManager.GetTopLevelAssemblyReferences(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Returns an array of the assemblies defined in the Bin directory and the `<assembly>` section of the Web configuration file.\n  syntax:\n    content: public string[] GetTopLevelAssemblyReferences (string virtualPath);\n    parameters:\n    - id: virtualPath\n      type: System.String\n      description: The configuration name and path.\n    return:\n      type: System.String[]\n      description: A <xref href=\"System.String\"></xref> array containing paths to code bases in the Bin directory and the `<assembly>` section of the Web configuration file.\n  overload: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>virtualPath</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories\n  commentId: M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories\n  id: GetVirtualCodeDirectories\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: GetVirtualCodeDirectories()\n  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()\n  fullName: ClientBuildManager.GetVirtualCodeDirectories()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.\n  syntax:\n    content: public string[] GetVirtualCodeDirectories ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: A <xref href=\"System.String\"></xref> array containing all the virtual paths to code directories in an application.\n  overload: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService\n  commentId: M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: ClientBuildManager.InitializeLifetimeService()\n  fullName: ClientBuildManager.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gives the application domain an infinite lifetime by preventing a lease from being created.\n  remarks: This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class. It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.\n  syntax:\n    content: public override object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Always `null`.\n  overload: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)\n  commentId: M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)\n  id: IsCodeAssembly(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: IsCodeAssembly(String)\n  nameWithType: ClientBuildManager.IsCodeAssembly(String)\n  fullName: ClientBuildManager.IsCodeAssembly(String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Indicates whether an assembly is a code assembly.\n  syntax:\n    content: public bool IsCodeAssembly (string assemblyName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: The name of the assembly to be identified as a code assembly.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>assemblyName</code> parameter matches one of the generated code assemblies; otherwise, `false`.'\n  overload: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assemblyName</code> is null.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated\n  commentId: P:System.Web.Compilation.ClientBuildManager.IsHostCreated\n  id: IsHostCreated\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: IsHostCreated\n  nameWithType: ClientBuildManager.IsHostCreated\n  fullName: ClientBuildManager.IsHostCreated\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.\n  syntax:\n    content: public bool IsHostCreated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the application domain for compiling ASP.NET Web applications has been created; otherwise, `false`.'\n  overload: System.Web.Compilation.ClientBuildManager.IsHostCreated*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication\n  commentId: M:System.Web.Compilation.ClientBuildManager.PrecompileApplication\n  id: PrecompileApplication\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: PrecompileApplication()\n  nameWithType: ClientBuildManager.PrecompileApplication()\n  fullName: ClientBuildManager.PrecompileApplication()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Precompiles an ASP.NET application.\n  remarks: \"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.  \\n  \\n The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.  \\n  \\n The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.  \\n  \\n A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.\"\n  syntax:\n    content: public void PrecompileApplication ();\n    parameters: []\n  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)\n  commentId: M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)\n  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: PrecompileApplication(ClientBuildManagerCallback)\n  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)\n  fullName: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Precompiles an ASP.NET application and provides a callback method to receive status information about the build.\n  remarks: \"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled. The `callback` parameter contains the method to call when reporting the result of compilation.  \\n  \\n The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.  \\n  \\n The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.  \\n  \\n A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.\"\n  syntax:\n    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);\n    parameters:\n    - id: callback\n      type: System.Web.Compilation.ClientBuildManagerCallback\n      description: A <xref href=\"System.Web.Compilation.ClientBuildManagerCallback\"></xref> containing the method to call when reporting the result of compilation.\n  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)\n  commentId: M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)\n  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: PrecompileApplication(ClientBuildManagerCallback, Boolean)\n  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback, Boolean)\n  fullName: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback, Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.\n  remarks: \"ASP.NET supports three forms of precompilation. One form allows for the in-place precompilation of an ASP.NET application. In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user. The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled. The `callback` parameter contains the method to call when reporting the result of compilation.  \\n  \\n The two other forms of precompilation are used for deployment. In either form, a layout of the site is generated that can be deployed to a production computer. One of these forms includes the markup pages so some amount of updating can be performed on the compiled site. The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site. No source code is deployed to the target environment in either of these forms of precompilation.  \\n  \\n The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor. The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.  \\n  \\n A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.\"\n  syntax:\n    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);\n    parameters:\n    - id: callback\n      type: System.Web.Compilation.ClientBuildManagerCallback\n      description: A <xref href=\"System.Web.Compilation.ClientBuildManagerCallback\"></xref> containing the method to call when reporting the result of compilation.\n    - id: forceCleanBuild\n      type: System.Boolean\n      description: '`true` to perform a clean build, which will first delete all object and intermediate files; `false` to rebuild only those files that have changed. Set to true if there is a chance that a dependency might not be picked up by the build environment.'\n  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.Unload\n  commentId: M:System.Web.Compilation.ClientBuildManager.Unload\n  id: Unload\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: Unload()\n  nameWithType: ClientBuildManager.Unload()\n  fullName: ClientBuildManager.Unload()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Unloads the application domain for compiling ASP.NET Web applications.\n  syntax:\n    content: public bool Unload ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the application domain is unloaded; otherwise, `false`.'\n  overload: System.Web.Compilation.ClientBuildManager.Unload*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose\n  commentId: M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Web.Compilation.ClientBuildManager\n  langs:\n  - csharp\n  name: IDisposable.Dispose()\n  nameWithType: ClientBuildManager.IDisposable.Dispose()\n  fullName: ClientBuildManager.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Compilation\n  summary: Terminates the current ASP.NET application.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.MarshalByRefObject\n  parent: System\n  isExternal: false\n  name: MarshalByRefObject\n  nameWithType: MarshalByRefObject\n  fullName: System.MarshalByRefObject\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: ClientBuildManager(String, String)\n  nameWithType: ClientBuildManager.ClientBuildManager(String, String)\n  fullName: ClientBuildManager.ClientBuildManager(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: ClientBuildManager(String, String, String)\n  nameWithType: ClientBuildManager.ClientBuildManager(String, String, String)\n  fullName: ClientBuildManager.ClientBuildManager(String, String, String)\n- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: ClientBuildManager(String, String, String, ClientBuildManagerParameter)\n  nameWithType: ClientBuildManager.ClientBuildManager(String, String, String, ClientBuildManagerParameter)\n  fullName: ClientBuildManager.ClientBuildManager(String, String, String, ClientBuildManagerParameter)\n- uid: System.Web.Compilation.ClientBuildManagerParameter\n  parent: System.Web.Compilation\n  isExternal: false\n  name: ClientBuildManagerParameter\n  nameWithType: ClientBuildManagerParameter\n  fullName: System.Web.Compilation.ClientBuildManagerParameter\n- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: ClientBuildManager(String, String, String, ClientBuildManagerParameter, TypeDescriptionProvider)\n  nameWithType: ClientBuildManager.ClientBuildManager(String, String, String, ClientBuildManagerParameter, TypeDescriptionProvider)\n  fullName: ClientBuildManager.ClientBuildManager(String, String, String, ClientBuildManagerParameter, TypeDescriptionProvider)\n- uid: System.ComponentModel.TypeDescriptionProvider\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeDescriptionProvider\n  nameWithType: TypeDescriptionProvider\n  fullName: System.ComponentModel.TypeDescriptionProvider\n- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: AppDomainShutdown\n  nameWithType: ClientBuildManager.AppDomainShutdown\n  fullName: ClientBuildManager.AppDomainShutdown\n- uid: System.Web.Compilation.BuildManagerHostUnloadEventHandler\n  parent: System.Web.Compilation\n  isExternal: false\n  name: BuildManagerHostUnloadEventHandler\n  nameWithType: BuildManagerHostUnloadEventHandler\n  fullName: System.Web.Compilation.BuildManagerHostUnloadEventHandler\n- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: AppDomainStarted\n  nameWithType: ClientBuildManager.AppDomainStarted\n  fullName: ClientBuildManager.AppDomainStarted\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: AppDomainUnloaded\n  nameWithType: ClientBuildManager.AppDomainUnloaded\n  fullName: ClientBuildManager.AppDomainUnloaded\n- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: CodeGenDir\n  nameWithType: ClientBuildManager.CodeGenDir\n  fullName: ClientBuildManager.CodeGenDir\n- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: CompileApplicationDependencies()\n  nameWithType: ClientBuildManager.CompileApplicationDependencies()\n  fullName: ClientBuildManager.CompileApplicationDependencies()\n- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: CompileFile(String)\n  nameWithType: ClientBuildManager.CompileFile(String)\n  fullName: ClientBuildManager.CompileFile(String)\n- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: CompileFile(String, ClientBuildManagerCallback)\n  nameWithType: ClientBuildManager.CompileFile(String, ClientBuildManagerCallback)\n  fullName: ClientBuildManager.CompileFile(String, ClientBuildManagerCallback)\n- uid: System.Web.Compilation.ClientBuildManagerCallback\n  parent: System.Web.Compilation\n  isExternal: false\n  name: ClientBuildManagerCallback\n  nameWithType: ClientBuildManagerCallback\n  fullName: System.Web.Compilation.ClientBuildManagerCallback\n- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: CreateObject(Type, Boolean)\n  nameWithType: ClientBuildManager.CreateObject(Type, Boolean)\n  fullName: ClientBuildManager.CreateObject(Type, Boolean)\n- uid: System.Web.Hosting.IRegisteredObject\n  parent: System.Web.Hosting\n  isExternal: false\n  name: IRegisteredObject\n  nameWithType: IRegisteredObject\n  fullName: System.Web.Hosting.IRegisteredObject\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GenerateCode(String, String, IDictionary)\n  nameWithType: ClientBuildManager.GenerateCode(String, String, IDictionary)\n  fullName: ClientBuildManager.GenerateCode(String, String, IDictionary)\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GenerateCodeCompileUnit(String, Type, CompilerParameters, IDictionary)\n  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String, Type, CompilerParameters, IDictionary)\n  fullName: ClientBuildManager.GenerateCodeCompileUnit(String, Type, CompilerParameters, IDictionary)\n- uid: System.CodeDom.CodeCompileUnit\n  parent: System.CodeDom\n  isExternal: false\n  name: CodeCompileUnit\n  nameWithType: CodeCompileUnit\n  fullName: System.CodeDom.CodeCompileUnit\n- uid: System.CodeDom.Compiler.CompilerParameters\n  parent: System.CodeDom.Compiler\n  isExternal: false\n  name: CompilerParameters\n  nameWithType: CompilerParameters\n  fullName: System.CodeDom.Compiler.CompilerParameters\n- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GenerateCodeCompileUnit(String, String, Type, CompilerParameters, IDictionary)\n  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String, String, Type, CompilerParameters, IDictionary)\n  fullName: ClientBuildManager.GenerateCodeCompileUnit(String, String, Type, CompilerParameters, IDictionary)\n- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetAppDomainShutdownDirectories()\n  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()\n  fullName: ClientBuildManager.GetAppDomainShutdownDirectories()\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetBrowserDefinitions()\n  nameWithType: ClientBuildManager.GetBrowserDefinitions()\n  fullName: ClientBuildManager.GetBrowserDefinitions()\n- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetCodeDirectoryInformation(String, Type, CompilerParameters, String)\n  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String, Type, CompilerParameters, String)\n  fullName: ClientBuildManager.GetCodeDirectoryInformation(String, Type, CompilerParameters, String)\n- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetCompiledType(String)\n  nameWithType: ClientBuildManager.GetCompiledType(String)\n  fullName: ClientBuildManager.GetCompiledType(String)\n- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetCompilerParameters(String, Type, CompilerParameters)\n  nameWithType: ClientBuildManager.GetCompilerParameters(String, Type, CompilerParameters)\n  fullName: ClientBuildManager.GetCompilerParameters(String, Type, CompilerParameters)\n- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetGeneratedFileVirtualPath(String)\n  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)\n  fullName: ClientBuildManager.GetGeneratedFileVirtualPath(String)\n- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetGeneratedSourceFile(String)\n  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)\n  fullName: ClientBuildManager.GetGeneratedSourceFile(String)\n- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetTopLevelAssemblyReferences(String)\n  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)\n  fullName: ClientBuildManager.GetTopLevelAssemblyReferences(String)\n- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetVirtualCodeDirectories()\n  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()\n  fullName: ClientBuildManager.GetVirtualCodeDirectories()\n- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: ClientBuildManager.InitializeLifetimeService()\n  fullName: ClientBuildManager.InitializeLifetimeService()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: IsCodeAssembly(String)\n  nameWithType: ClientBuildManager.IsCodeAssembly(String)\n  fullName: ClientBuildManager.IsCodeAssembly(String)\n- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: IsHostCreated\n  nameWithType: ClientBuildManager.IsHostCreated\n  fullName: ClientBuildManager.IsHostCreated\n- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: PrecompileApplication()\n  nameWithType: ClientBuildManager.PrecompileApplication()\n  fullName: ClientBuildManager.PrecompileApplication()\n- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: PrecompileApplication(ClientBuildManagerCallback)\n  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)\n  fullName: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)\n- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: PrecompileApplication(ClientBuildManagerCallback, Boolean)\n  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback, Boolean)\n  fullName: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback, Boolean)\n- uid: System.Web.Compilation.ClientBuildManager.Unload\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: Unload()\n  nameWithType: ClientBuildManager.Unload()\n  fullName: ClientBuildManager.Unload()\n- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: ClientBuildManager.IDisposable.Dispose()\n  fullName: ClientBuildManager.IDisposable.Dispose()\n- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: PrecompileApplication\n  nameWithType: ClientBuildManager.PrecompileApplication\n  fullName: ClientBuildManager.PrecompileApplication\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.#ctor*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: ClientBuildManager\n  nameWithType: ClientBuildManager.ClientBuildManager\n  fullName: ClientBuildManager.ClientBuildManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: CodeGenDir\n  nameWithType: ClientBuildManager.CodeGenDir\n  fullName: ClientBuildManager.CodeGenDir\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: CompileApplicationDependencies\n  nameWithType: ClientBuildManager.CompileApplicationDependencies\n  fullName: ClientBuildManager.CompileApplicationDependencies\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.CompileFile*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: CompileFile\n  nameWithType: ClientBuildManager.CompileFile\n  fullName: ClientBuildManager.CompileFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.CreateObject*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: CreateObject\n  nameWithType: ClientBuildManager.CreateObject\n  fullName: ClientBuildManager.CreateObject\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GenerateCode*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GenerateCode\n  nameWithType: ClientBuildManager.GenerateCode\n  fullName: ClientBuildManager.GenerateCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GenerateCodeCompileUnit\n  nameWithType: ClientBuildManager.GenerateCodeCompileUnit\n  fullName: ClientBuildManager.GenerateCodeCompileUnit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetAppDomainShutdownDirectories\n  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories\n  fullName: ClientBuildManager.GetAppDomainShutdownDirectories\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetBrowserDefinitions\n  nameWithType: ClientBuildManager.GetBrowserDefinitions\n  fullName: ClientBuildManager.GetBrowserDefinitions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetCodeDirectoryInformation\n  nameWithType: ClientBuildManager.GetCodeDirectoryInformation\n  fullName: ClientBuildManager.GetCodeDirectoryInformation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetCompiledType\n  nameWithType: ClientBuildManager.GetCompiledType\n  fullName: ClientBuildManager.GetCompiledType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetCompilerParameters\n  nameWithType: ClientBuildManager.GetCompilerParameters\n  fullName: ClientBuildManager.GetCompilerParameters\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetGeneratedFileVirtualPath\n  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath\n  fullName: ClientBuildManager.GetGeneratedFileVirtualPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetGeneratedSourceFile\n  nameWithType: ClientBuildManager.GetGeneratedSourceFile\n  fullName: ClientBuildManager.GetGeneratedSourceFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetTopLevelAssemblyReferences\n  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences\n  fullName: ClientBuildManager.GetTopLevelAssemblyReferences\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: GetVirtualCodeDirectories\n  nameWithType: ClientBuildManager.GetVirtualCodeDirectories\n  fullName: ClientBuildManager.GetVirtualCodeDirectories\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: InitializeLifetimeService\n  nameWithType: ClientBuildManager.InitializeLifetimeService\n  fullName: ClientBuildManager.InitializeLifetimeService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: IsCodeAssembly\n  nameWithType: ClientBuildManager.IsCodeAssembly\n  fullName: ClientBuildManager.IsCodeAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: IsHostCreated\n  nameWithType: ClientBuildManager.IsHostCreated\n  fullName: ClientBuildManager.IsHostCreated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.Unload*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: Unload\n  nameWithType: ClientBuildManager.Unload\n  fullName: ClientBuildManager.Unload\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*\n  parent: System.Web.Compilation.ClientBuildManager\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: ClientBuildManager.System.IDisposable.Dispose\n  fullName: ClientBuildManager.System.IDisposable.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Compilation/ClientBuildManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}