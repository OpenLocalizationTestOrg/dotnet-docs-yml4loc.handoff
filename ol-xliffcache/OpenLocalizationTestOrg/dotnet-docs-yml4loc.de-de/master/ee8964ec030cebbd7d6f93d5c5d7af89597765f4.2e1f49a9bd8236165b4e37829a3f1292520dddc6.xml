{"nodes":[{"content":"Specifies the transaction protocol used in flowing transactions.","nodes":[{"pos":[0,64],"content":"Specifies the transaction protocol used in flowing transactions.","nodes":[{"content":"Specifies the transaction protocol used in flowing transactions.","pos":[0,64]}]}],"pos":[711,776],"yaml":true},{"content":"This class is used together with the <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> class to specify the desired protocol for flowing transactions.","nodes":[{"pos":[0,166],"content":"This class is used together with the <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> class to specify the desired protocol for flowing transactions.","nodes":[{"content":"This class is used together with the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement&gt;</ph> class to specify the desired protocol for flowing transactions.","pos":[0,166],"source":"This class is used together with the <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> class to specify the desired protocol for flowing transactions."}]}],"pos":[787,954],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TransactionProtocol\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> class."}],"pos":[2535,2637],"yaml":true},{"content":"Gets the default value for the transaction protocol.","nodes":[{"pos":[0,52],"content":"Gets the default value for the transaction protocol.","nodes":[{"content":"Gets the default value for the transaction protocol.","pos":[0,52]}]}],"pos":[3725,3778],"yaml":true},{"content":"For more information on selecting a transaction protocol, see [Enabling Transaction Flow](http://msdn.microsoft.com/en-us/31a6bc6a-4ef4-45ba-a753-1efa1a19d917).","nodes":[{"pos":[0,160],"content":"For more information on selecting a transaction protocol, see <bpt id=\"p1\">[</bpt>Enabling Transaction Flow<ept id=\"p1\">](http://msdn.microsoft.com/en-us/31a6bc6a-4ef4-45ba-a753-1efa1a19d917)</ept>.","source":"For more information on selecting a transaction protocol, see [Enabling Transaction Flow](http://msdn.microsoft.com/en-us/31a6bc6a-4ef4-45ba-a753-1efa1a19d917)."}],"pos":[3789,3950],"yaml":true,"extradata":"MT"},{"content":"A valid <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> value that specifies the default transaction protocol to be used in flowing a transaction.","nodes":[{"pos":[0,159],"content":"A valid <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TransactionProtocol\"&gt;&lt;/xref&gt;</ph> value that specifies the default transaction protocol to be used in flowing a transaction.","source":"A valid <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> value that specifies the default transaction protocol to be used in flowing a transaction."}],"pos":[4127,4287],"yaml":true},{"content":"Gets the OleTransactions transaction protocol value.","nodes":[{"pos":[0,52],"content":"Gets the OleTransactions transaction protocol value.","nodes":[{"content":"Gets the OleTransactions transaction protocol value.","pos":[0,52]}]}],"pos":[5349,5402],"yaml":true},{"content":"The OleTransactions protocol is useful for scenarios when interoperability with third-party protocol stacks is not a requirement, and the deployer of a service knows in advance that WS-AtomicTransaction is disabled locally or that the existing network topology does not favor the usage of WS-AtomicTransaction.","nodes":[{"pos":[0,310],"content":"The OleTransactions protocol is useful for scenarios when interoperability with third-party protocol stacks is not a requirement, and the deployer of a service knows in advance that WS-AtomicTransaction is disabled locally or that the existing network topology does not favor the usage of WS-AtomicTransaction.","nodes":[{"content":"The OleTransactions protocol is useful for scenarios when interoperability with third-party protocol stacks is not a requirement, and the deployer of a service knows in advance that WS-AtomicTransaction is disabled locally or that the existing network topology does not favor the usage of WS-AtomicTransaction.","pos":[0,310]}]}],"pos":[5413,5724],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ServiceModel.TransactionProtocol.OleTransactions\"></xref> value.","nodes":[{"pos":[0,86],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TransactionProtocol.OleTransactions\"&gt;&lt;/xref&gt;</ph> value.","source":"An <xref href=\"System.ServiceModel.TransactionProtocol.OleTransactions\"></xref> value."}],"pos":[5909,5996],"yaml":true},{"content":"Gets the WSAtomicTransaction11 transaction protocol value.","nodes":[{"pos":[0,58],"content":"Gets the WSAtomicTransaction11 transaction protocol value.","nodes":[{"content":"Gets the WSAtomicTransaction11 transaction protocol value.","pos":[0,58]}]}],"pos":[7102,7161],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> value.","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TransactionProtocol\"&gt;&lt;/xref&gt;</ph> value.","source":"A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> value."}],"pos":[7352,7422],"yaml":true},{"content":"Gets the WSAtomicTransactionOctober2004 transaction protocol value.","nodes":[{"pos":[0,67],"content":"Gets the WSAtomicTransactionOctober2004 transaction protocol value.","nodes":[{"content":"Gets the WSAtomicTransactionOctober2004 transaction protocol value.","pos":[0,67]}]}],"pos":[8588,8656],"yaml":true},{"content":"The WS-AtomicTransaction protocol is useful for scenarios when interoperability with third-party protocol stacks is a requirement. It is also useful as a simple mechanism for testing transaction flow and the two-phase commit protocol using the WS-AT protocol, without interference with the OleTransactions protocol.","nodes":[{"pos":[0,315],"content":"The WS-AtomicTransaction protocol is useful for scenarios when interoperability with third-party protocol stacks is a requirement. It is also useful as a simple mechanism for testing transaction flow and the two-phase commit protocol using the WS-AT protocol, without interference with the OleTransactions protocol.","nodes":[{"content":"The WS-AtomicTransaction protocol is useful for scenarios when interoperability with third-party protocol stacks is a requirement. It is also useful as a simple mechanism for testing transaction flow and the two-phase commit protocol using the WS-AT protocol, without interference with the OleTransactions protocol.","pos":[0,315],"nodes":[{"content":"The WS-AtomicTransaction protocol is useful for scenarios when interoperability with third-party protocol stacks is a requirement.","pos":[0,130]},{"content":"It is also useful as a simple mechanism for testing transaction flow and the two-phase commit protocol using the WS-AT protocol, without interference with the OleTransactions protocol.","pos":[131,315]}]}]}],"pos":[8667,8983],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> value.","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.TransactionProtocol\"&gt;&lt;/xref&gt;</ph> value.","source":"A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> value."}],"pos":[9183,9253],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.TransactionProtocol\n  commentId: T:System.ServiceModel.TransactionProtocol\n  id: TransactionProtocol\n  children:\n  - System.ServiceModel.TransactionProtocol.#ctor\n  - System.ServiceModel.TransactionProtocol.Default\n  - System.ServiceModel.TransactionProtocol.OleTransactions\n  - System.ServiceModel.TransactionProtocol.WSAtomicTransaction11\n  - System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004\n  langs:\n  - csharp\n  name: TransactionProtocol\n  nameWithType: TransactionProtocol\n  fullName: System.ServiceModel.TransactionProtocol\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies the transaction protocol used in flowing transactions.\n  remarks: This class is used together with the <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> class to specify the desired protocol for flowing transactions.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TransactionProtocolConverter))]\n\n      public abstract class TransactionProtocol\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TransactionProtocol.#ctor\n  commentId: M:System.ServiceModel.TransactionProtocol.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.TransactionProtocol\n  langs:\n  - csharp\n  name: TransactionProtocol()\n  nameWithType: TransactionProtocol.TransactionProtocol()\n  fullName: TransactionProtocol.TransactionProtocol()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> class.\n  syntax:\n    content: protected TransactionProtocol ();\n    parameters: []\n  overload: System.ServiceModel.TransactionProtocol.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TransactionProtocol.Default\n  commentId: P:System.ServiceModel.TransactionProtocol.Default\n  id: Default\n  parent: System.ServiceModel.TransactionProtocol\n  langs:\n  - csharp\n  name: Default\n  nameWithType: TransactionProtocol.Default\n  fullName: TransactionProtocol.Default\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the default value for the transaction protocol.\n  remarks: For more information on selecting a transaction protocol, see [Enabling Transaction Flow](http://msdn.microsoft.com/en-us/31a6bc6a-4ef4-45ba-a753-1efa1a19d917).\n  syntax:\n    content: public static System.ServiceModel.TransactionProtocol Default { get; }\n    return:\n      type: System.ServiceModel.TransactionProtocol\n      description: A valid <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> value that specifies the default transaction protocol to be used in flowing a transaction.\n  overload: System.ServiceModel.TransactionProtocol.Default*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TransactionProtocol.OleTransactions\n  commentId: P:System.ServiceModel.TransactionProtocol.OleTransactions\n  id: OleTransactions\n  parent: System.ServiceModel.TransactionProtocol\n  langs:\n  - csharp\n  name: OleTransactions\n  nameWithType: TransactionProtocol.OleTransactions\n  fullName: TransactionProtocol.OleTransactions\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the OleTransactions transaction protocol value.\n  remarks: The OleTransactions protocol is useful for scenarios when interoperability with third-party protocol stacks is not a requirement, and the deployer of a service knows in advance that WS-AtomicTransaction is disabled locally or that the existing network topology does not favor the usage of WS-AtomicTransaction.\n  syntax:\n    content: public static System.ServiceModel.TransactionProtocol OleTransactions { get; }\n    return:\n      type: System.ServiceModel.TransactionProtocol\n      description: An <xref href=\"System.ServiceModel.TransactionProtocol.OleTransactions\"></xref> value.\n  overload: System.ServiceModel.TransactionProtocol.OleTransactions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TransactionProtocol.WSAtomicTransaction11\n  commentId: P:System.ServiceModel.TransactionProtocol.WSAtomicTransaction11\n  id: WSAtomicTransaction11\n  parent: System.ServiceModel.TransactionProtocol\n  langs:\n  - csharp\n  name: WSAtomicTransaction11\n  nameWithType: TransactionProtocol.WSAtomicTransaction11\n  fullName: TransactionProtocol.WSAtomicTransaction11\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the WSAtomicTransaction11 transaction protocol value.\n  syntax:\n    content: public static System.ServiceModel.TransactionProtocol WSAtomicTransaction11 { get; }\n    return:\n      type: System.ServiceModel.TransactionProtocol\n      description: A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> value.\n  overload: System.ServiceModel.TransactionProtocol.WSAtomicTransaction11*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004\n  commentId: P:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004\n  id: WSAtomicTransactionOctober2004\n  parent: System.ServiceModel.TransactionProtocol\n  langs:\n  - csharp\n  name: WSAtomicTransactionOctober2004\n  nameWithType: TransactionProtocol.WSAtomicTransactionOctober2004\n  fullName: TransactionProtocol.WSAtomicTransactionOctober2004\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the WSAtomicTransactionOctober2004 transaction protocol value.\n  remarks: The WS-AtomicTransaction protocol is useful for scenarios when interoperability with third-party protocol stacks is a requirement. It is also useful as a simple mechanism for testing transaction flow and the two-phase commit protocol using the WS-AT protocol, without interference with the OleTransactions protocol.\n  syntax:\n    content: public static System.ServiceModel.TransactionProtocol WSAtomicTransactionOctober2004 { get; }\n    return:\n      type: System.ServiceModel.TransactionProtocol\n      description: A <xref href=\"System.ServiceModel.TransactionProtocol\"></xref> value.\n  overload: System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.TransactionProtocol.#ctor\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: TransactionProtocol()\n  nameWithType: TransactionProtocol.TransactionProtocol()\n  fullName: TransactionProtocol.TransactionProtocol()\n- uid: System.ServiceModel.TransactionProtocol.Default\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: Default\n  nameWithType: TransactionProtocol.Default\n  fullName: TransactionProtocol.Default\n- uid: System.ServiceModel.TransactionProtocol\n  parent: System.ServiceModel\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: TransactionProtocol\n  fullName: System.ServiceModel.TransactionProtocol\n- uid: System.ServiceModel.TransactionProtocol.OleTransactions\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: OleTransactions\n  nameWithType: TransactionProtocol.OleTransactions\n  fullName: TransactionProtocol.OleTransactions\n- uid: System.ServiceModel.TransactionProtocol.WSAtomicTransaction11\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: WSAtomicTransaction11\n  nameWithType: TransactionProtocol.WSAtomicTransaction11\n  fullName: TransactionProtocol.WSAtomicTransaction11\n- uid: System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: WSAtomicTransactionOctober2004\n  nameWithType: TransactionProtocol.WSAtomicTransactionOctober2004\n  fullName: TransactionProtocol.WSAtomicTransactionOctober2004\n- uid: System.ServiceModel.TransactionProtocol.#ctor*\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: TransactionProtocol\n  nameWithType: TransactionProtocol.TransactionProtocol\n  fullName: TransactionProtocol.TransactionProtocol\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n- uid: System.ServiceModel.TransactionProtocol.Default*\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: Default\n  nameWithType: TransactionProtocol.Default\n  fullName: TransactionProtocol.Default\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n- uid: System.ServiceModel.TransactionProtocol.OleTransactions*\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: OleTransactions\n  nameWithType: TransactionProtocol.OleTransactions\n  fullName: TransactionProtocol.OleTransactions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n- uid: System.ServiceModel.TransactionProtocol.WSAtomicTransaction11*\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: WSAtomicTransaction11\n  nameWithType: TransactionProtocol.WSAtomicTransaction11\n  fullName: TransactionProtocol.WSAtomicTransaction11\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n- uid: System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004*\n  parent: System.ServiceModel.TransactionProtocol\n  isExternal: false\n  name: WSAtomicTransactionOctober2004\n  nameWithType: TransactionProtocol.WSAtomicTransactionOctober2004\n  fullName: TransactionProtocol.WSAtomicTransactionOctober2004\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/TransactionProtocol.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}