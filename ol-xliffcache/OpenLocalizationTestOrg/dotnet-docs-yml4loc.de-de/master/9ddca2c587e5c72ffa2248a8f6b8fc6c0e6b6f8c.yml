### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Lifetime
  id: System.Runtime.Remoting.Lifetime
  children:
  - System.Runtime.Remoting.Lifetime.ClientSponsor
  - System.Runtime.Remoting.Lifetime.ILease
  - System.Runtime.Remoting.Lifetime.ISponsor
  - System.Runtime.Remoting.Lifetime.LeaseState
  - System.Runtime.Remoting.Lifetime.LifetimeServices
  langs:
  - csharp
  name: System.Runtime.Remoting.Lifetime
  nameWithType: System.Runtime.Remoting.Lifetime
  fullName: System.Runtime.Remoting.Lifetime
  type: Namespace
  summary: The <xref href="System.Runtime.Remoting.Lifetime"></xref> namespace contains classes that manage the lifetime of remote objects.
  remarks: "Traditionally, distributed garbage collection uses reference counts and pinging for control over the lifetime of objects. This works well when there are a few clients per service, but doesn't scale well when there are thousands of clients per service. The remoting lifetime service associates a lease with each service, and deletes a service when its lease time expires. The lifetime service can take on the function of a traditional distributed garbage collector, and it also adjusts well when the numbers of clients per server increases.  \n  \n Each application domain contains a lease manager that is responsible for controlling leases in its domain. All leases are examined periodically for expired lease times. If a lease has expired, one or more of the lease's sponsors are invoked and given the opportunity to renew the lease. If none of the sponsors decides to renew the lease, the lease manager removes the lease and the object can be collected by the garbage collector. The lease manager maintains a lease list with leases sorted by remaining lease time. The leases with the shortest remaining time are stored at the top of the list."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/ns-System.Runtime.Remoting.Lifetime.xml
  ms.technology:
  - dotnet-standard
  manager: ghogen
references:
- uid: System.Runtime.Remoting.Lifetime.ClientSponsor
  parent: System.Runtime.Remoting.Lifetime
  isExternal: false
  name: ClientSponsor
  nameWithType: ClientSponsor
  fullName: System.Runtime.Remoting.Lifetime.ClientSponsor
- uid: System.Runtime.Remoting.Lifetime.ILease
  parent: System.Runtime.Remoting.Lifetime
  isExternal: false
  name: ILease
  nameWithType: ILease
  fullName: System.Runtime.Remoting.Lifetime.ILease
- uid: System.Runtime.Remoting.Lifetime.ISponsor
  parent: System.Runtime.Remoting.Lifetime
  isExternal: false
  name: ISponsor
  nameWithType: ISponsor
  fullName: System.Runtime.Remoting.Lifetime.ISponsor
- uid: System.Runtime.Remoting.Lifetime.LeaseState
  parent: System.Runtime.Remoting.Lifetime
  isExternal: false
  name: LeaseState
  nameWithType: LeaseState
  fullName: System.Runtime.Remoting.Lifetime.LeaseState
- uid: System.Runtime.Remoting.Lifetime.LifetimeServices
  parent: System.Runtime.Remoting.Lifetime
  isExternal: false
  name: LifetimeServices
  nameWithType: LifetimeServices
  fullName: System.Runtime.Remoting.Lifetime.LifetimeServices
