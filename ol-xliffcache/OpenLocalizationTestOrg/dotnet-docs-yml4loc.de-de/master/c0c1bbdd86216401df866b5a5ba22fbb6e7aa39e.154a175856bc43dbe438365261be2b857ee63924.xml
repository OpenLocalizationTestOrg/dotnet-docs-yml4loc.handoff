{"nodes":[{"content":"Represents one or more errors that occur during application execution.","nodes":[{"pos":[0,70],"content":"Represents one or more errors that occur during application execution.","nodes":[{"content":"Represents one or more errors that occur during application execution.","pos":[0,70]}]}],"pos":[1443,1514],"yaml":true},{"content":"<xref:System.AggregateException> is used to consolidate multiple failures into a single, throwable exception object. It is used extensively in the [Task Parallel Library (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) and [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md). For additional information, see the [Aggregating Exceptions](http://go.microsoft.com/fwlink/p/?LinkId=259617) entry in the .NET Matters blog. For an example, see [NIB: How to: Handle Exceptions Thrown by Tasks](http://msdn.microsoft.com/en-us/d6c47ec8-9de9-4880-beb3-ff19ae51565d) and [How to: Handle Exceptions in a PLINQ Query](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md).","nodes":[{"pos":[0,747],"content":"<xref:System.AggregateException> is used to consolidate multiple failures into a single, throwable exception object. It is used extensively in the [Task Parallel Library (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) and [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md). For additional information, see the [Aggregating Exceptions](http://go.microsoft.com/fwlink/p/?LinkId=259617) entry in the .NET Matters blog. For an example, see [NIB: How to: Handle Exceptions Thrown by Tasks](http://msdn.microsoft.com/en-us/d6c47ec8-9de9-4880-beb3-ff19ae51565d) and [How to: Handle Exceptions in a PLINQ Query](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md).","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.AggregateException&gt;</ph> is used to consolidate multiple failures into a single, throwable exception object.","pos":[0,116],"source":"<xref:System.AggregateException> is used to consolidate multiple failures into a single, throwable exception object."},{"content":"It is used extensively in the <bpt id=\"p1\">[</bpt>Task Parallel Library (TPL)<ept id=\"p1\">](~/docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept> and <bpt id=\"p2\">[</bpt>Parallel LINQ (PLINQ)<ept id=\"p2\">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.","pos":[117,333],"source":" It is used extensively in the [Task Parallel Library (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) and [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md)."},{"content":"For additional information, see the <bpt id=\"p1\">[</bpt>Aggregating Exceptions<ept id=\"p1\">](http://go.microsoft.com/fwlink/p/?LinkId=259617)</ept> entry in the .NET Matters blog.","pos":[334,475],"source":" For additional information, see the [Aggregating Exceptions](http://go.microsoft.com/fwlink/p/?LinkId=259617) entry in the .NET Matters blog."},{"content":"For an example, see <bpt id=\"p1\">[</bpt>NIB: How to: Handle Exceptions Thrown by Tasks<ept id=\"p1\">](http://msdn.microsoft.com/en-us/d6c47ec8-9de9-4880-beb3-ff19ae51565d)</ept> and <bpt id=\"p2\">[</bpt>How to: Handle Exceptions in a PLINQ Query<ept id=\"p2\">](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)</ept>.","pos":[476,747],"source":" For an example, see [NIB: How to: Handle Exceptions Thrown by Tasks](http://msdn.microsoft.com/en-us/d6c47ec8-9de9-4880-beb3-ff19ae51565d) and [How to: Handle Exceptions in a PLINQ Query](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)."}]}],"pos":[1525,2275],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a system-supplied message that describes the error.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> class with a system-supplied message that describes the error.","source":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a system-supplied message that describes the error."}],"pos":[5346,5490],"yaml":true},{"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"DefaultMessageDisplayedByParameterlessCtorWriterMustSupply\" This message takes into account the current system culture.  \n  \n The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The localized error message string.|","nodes":[{"pos":[0,280],"content":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"DefaultMessageDisplayedByParameterlessCtorWriterMustSupply\" This message takes into account the current system culture.","nodes":[{"content":"This constructor initializes the <ph id=\"ph1\">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as \"DefaultMessageDisplayedByParameterlessCtorWriterMustSupply\" This message takes into account the current system culture.","pos":[0,280],"source":"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \"DefaultMessageDisplayedByParameterlessCtorWriterMustSupply\" This message takes into account the current system culture."}]},{"pos":[287,402],"content":"The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.InsufficientMemoryException&gt;</ph>.","pos":[0,115],"source":"The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>."}]},{"pos":[409,417],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[418,423],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[459,500],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[501,508],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[513,547],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[548,583],"content":"The localized error message string.","nodes":[{"content":"The localized error message string.","pos":[0,35]}]}],"pos":[5501,6097],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with references to the inner exceptions that are the cause of this exception.","nodes":[{"pos":[0,164],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> class with references to the inner exceptions that are the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with references to the inner exceptions that are the cause of this exception."}],"pos":[7930,8095],"yaml":true},{"content":"The exceptions that are the cause of the current exception.","nodes":[{"pos":[0,59],"content":"The exceptions that are the cause of the current exception.","nodes":[{"content":"The exceptions that are the cause of the current exception.","pos":[0,59]}]}],"pos":[8343,8403],"yaml":true},{"content":"The <code>innerExceptions</code> argument is null.","nodes":[{"pos":[0,50],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerExceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>innerExceptions</code> argument is null."}],"pos":[8564,8615],"yaml":true},{"content":"An element of <code>innerExceptions</code> is null.","nodes":[{"pos":[0,51],"content":"An element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerExceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"An element of <code>innerExceptions</code> is null."}],"pos":[8709,8761],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with references to the inner exceptions that are the cause of this exception.","nodes":[{"pos":[0,164],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> class with references to the inner exceptions that are the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with references to the inner exceptions that are the cause of this exception."}],"pos":[10313,10478],"yaml":true},{"content":"The exceptions that are the cause of the current exception.","nodes":[{"pos":[0,59],"content":"The exceptions that are the cause of the current exception.","nodes":[{"content":"The exceptions that are the cause of the current exception.","pos":[0,59]}]}],"pos":[10650,10710],"yaml":true},{"content":"The <code>innerExceptions</code> argument is null.","nodes":[{"pos":[0,50],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerExceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>innerExceptions</code> argument is null."}],"pos":[10871,10922],"yaml":true},{"content":"An element of <code>innerExceptions</code> is null.","nodes":[{"pos":[0,51],"content":"An element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerExceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"An element of <code>innerExceptions</code> is null."}],"pos":[11016,11068],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified message that describes the error.","nodes":[{"pos":[0,137],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> class with a specified message that describes the error.","source":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified message that describes the error."}],"pos":[12590,12728],"yaml":true},{"content":"The following table shows the initial property values for an instance of <xref:System.AggregateException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|","nodes":[{"pos":[0,106],"content":"The following table shows the initial property values for an instance of <xref:System.AggregateException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.AggregateException&gt;</ph>.","pos":[0,106],"source":"The following table shows the initial property values for an instance of <xref:System.AggregateException>."}]},{"pos":[113,121],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[122,127],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[163,204],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[205,212],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[217,251],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[252,300],"content":"The error message string specified in <ph id=\"ph1\">`message`</ph>.","source":"The error message string specified in `message`."}],"pos":[12739,13048],"yaml":true,"extradata":"MT"},{"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"pos":[0,162],"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[0,162],"nodes":[{"content":"The message that describes the exception.","pos":[0,41]},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[42,162]}]}]}],"pos":[13194,13357],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with serialized data.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with serialized data."}],"pos":[15238,15347],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"pos":[0,231],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.","pos":[114,231],"source":" For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md)."}]}],"pos":[15358,15590],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data.","nodes":[{"pos":[0,49],"content":"The object that holds the serialized object data.","nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]}],"pos":[15912,15962],"yaml":true},{"content":"The contextual information about the source or destination.","nodes":[{"pos":[0,59],"content":"The contextual information about the source or destination.","nodes":[{"content":"The contextual information about the source or destination.","pos":[0,59]}]}],"pos":[16057,16117],"yaml":true},{"content":"The <code>info</code> argument is null.","nodes":[{"pos":[0,39],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>info</code> argument is null."}],"pos":[16278,16318],"yaml":true},{"content":"The exception could not be deserialized correctly.","nodes":[{"pos":[0,50],"content":"The exception could not be deserialized correctly.","nodes":[{"content":"The exception could not be deserialized correctly.","pos":[0,50]}]}],"pos":[16466,16517],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception.","nodes":[{"pos":[0,194],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception."}],"pos":[18044,18239],"yaml":true},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[18452,18514],"yaml":true},{"content":"The exceptions that are the cause of the current exception.","nodes":[{"pos":[0,59],"content":"The exceptions that are the cause of the current exception.","nodes":[{"content":"The exceptions that are the cause of the current exception.","pos":[0,59]}]}],"pos":[18628,18688],"yaml":true},{"content":"The <code>innerExceptions</code> argument is null.","nodes":[{"pos":[0,50],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerExceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>innerExceptions</code> argument is null."}],"pos":[18849,18900],"yaml":true},{"content":"An element of <code>innerExceptions</code> is null.","nodes":[{"pos":[0,51],"content":"An element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerExceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"An element of <code>innerExceptions</code> is null."}],"pos":[18994,19046],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.","nodes":[{"pos":[0,193],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception."}],"pos":[20652,20846],"yaml":true},{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \n  \n The following table shows the initial property values for an instance of <xref:System.AggregateException>.  \n  \n|Property|Value|  \n|--------------|-----------|  \n|<xref:System.Exception.InnerException%2A>|`null`.|  \n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|","nodes":[{"pos":[0,427],"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,182],"source":"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[183,427],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]},{"pos":[434,540],"content":"The following table shows the initial property values for an instance of <xref:System.AggregateException>.","nodes":[{"content":"The following table shows the initial property values for an instance of <ph id=\"ph1\">&lt;xref:System.AggregateException&gt;</ph>.","pos":[0,106],"source":"The following table shows the initial property values for an instance of <xref:System.AggregateException>."}]},{"pos":[547,555],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[556,561],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[597,638],"content":"<xref:System.Exception.InnerException%2A>","nodes":[]},{"pos":[639,646],"content":"<ph id=\"ph1\">`null`</ph>.","source":"`null`."},{"pos":[651,685],"content":"<xref:System.Exception.Message%2A>","nodes":[]},{"pos":[686,734],"content":"The error message string specified in <ph id=\"ph1\">`message`</ph>.","source":"The error message string specified in `message`."}],"pos":[20857,21602],"yaml":true,"extradata":"MT"},{"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"pos":[0,162],"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","nodes":[{"content":"The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[0,162],"nodes":[{"content":"The message that describes the exception.","pos":[0,41]},{"content":"The caller of this constructor is required to ensure that this string has been localized for the current system culture.","pos":[42,162]}]}]}],"pos":[21774,21937],"yaml":true},{"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"pos":[0,202],"content":"The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.","nodes":[{"content":"The exception that is the cause of the current exception.","pos":[0,57]},{"content":"If the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerException</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph>, the current exception is raised in a <ph id=\"ph3\">`catch`</ph> block that handles the inner exception.","pos":[58,202],"source":" If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception."}]}],"pos":[22010,22213],"yaml":true},{"content":"The <code>innerException</code> argument is null.","nodes":[{"pos":[0,49],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerException</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>innerException</code> argument is null."}],"pos":[22374,22424],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception.","nodes":[{"pos":[0,194],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.","source":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception."}],"pos":[24042,24237],"yaml":true},{"content":"The error message that explains the reason for the exception.","nodes":[{"pos":[0,61],"content":"The error message that explains the reason for the exception.","nodes":[{"content":"The error message that explains the reason for the exception.","pos":[0,61]}]}],"pos":[24412,24474],"yaml":true},{"content":"The exceptions that are the cause of the current exception.","nodes":[{"pos":[0,59],"content":"The exceptions that are the cause of the current exception.","nodes":[{"content":"The exceptions that are the cause of the current exception.","pos":[0,59]}]}],"pos":[24550,24610],"yaml":true},{"content":"The <code>innerExceptions</code> argument is null.","nodes":[{"pos":[0,50],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerExceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>innerExceptions</code> argument is null."}],"pos":[24771,24822],"yaml":true},{"content":"An element of <code>innerExceptions</code> is null.","nodes":[{"pos":[0,51],"content":"An element of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">innerExceptions</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null.","source":"An element of <code>innerExceptions</code> is null."}],"pos":[24916,24968],"yaml":true},{"content":"Flattens an <xref href=\"System.AggregateException\"></xref> instances into a single, new instance.","nodes":[{"pos":[0,97],"content":"Flattens an <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> instances into a single, new instance.","source":"Flattens an <xref href=\"System.AggregateException\"></xref> instances into a single, new instance."}],"pos":[26393,26491],"yaml":true},{"content":"If a task has an attached child task that throws an exception, that exception is wrapped in an <xref:System.AggregateException> exception before it is propagated to the parent task, which wraps that exception in its own <xref:System.AggregateException> exception before it propagates it back to the calling thread. In such cases, the <xref:System.AggregateException.InnerExceptions%2A> property of the <xref:System.AggregateException> exception that is caught by the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task%601.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=fullName> or <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName> method contains one or more <xref:System.AggregateException> instances, not the original exceptions that caused the fault. To avoid having to iterate over nested <xref:System.AggregateException> exceptions, you can use the <xref:System.AggregateException.Flatten%2A> method to remove all the nested <xref:System.AggregateException> exceptions, so that the <xref:System.AggregateException.InnerExceptions%2A> property of the returned <xref:System.AggregateException> object contains the original exceptions.  \n  \n This method recursively flattens all instances of  <xref:System.AggregateException> exceptions that are inner exceptions of the current <xref:System.AggregateException> instance . The inner exceptions returned in the new <xref:System.AggregateException> are the union of all the inner exceptions from exception tree rooted at the current <xref:System.AggregateException> instance.","nodes":[{"pos":[0,1260],"content":"If a task has an attached child task that throws an exception, that exception is wrapped in an <xref:System.AggregateException> exception before it is propagated to the parent task, which wraps that exception in its own <xref:System.AggregateException> exception before it propagates it back to the calling thread. In such cases, the <xref:System.AggregateException.InnerExceptions%2A> property of the <xref:System.AggregateException> exception that is caught by the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task%601.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=fullName> or <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName> method contains one or more <xref:System.AggregateException> instances, not the original exceptions that caused the fault. To avoid having to iterate over nested <xref:System.AggregateException> exceptions, you can use the <xref:System.AggregateException.Flatten%2A> method to remove all the nested <xref:System.AggregateException> exceptions, so that the <xref:System.AggregateException.InnerExceptions%2A> property of the returned <xref:System.AggregateException> object contains the original exceptions.","nodes":[{"content":"If a task has an attached child task that throws an exception, that exception is wrapped in an <xref:System.AggregateException> exception before it is propagated to the parent task, which wraps that exception in its own <xref:System.AggregateException> exception before it propagates it back to the calling thread. In such cases, the <xref:System.AggregateException.InnerExceptions%2A> property of the <xref:System.AggregateException> exception that is caught by the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task%601.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=fullName> or <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName> method contains one or more <xref:System.AggregateException> instances, not the original exceptions that caused the fault. To avoid having to iterate over nested <xref:System.AggregateException> exceptions, you can use the <xref:System.AggregateException.Flatten%2A> method to remove all the nested <xref:System.AggregateException> exceptions, so that the <xref:System.AggregateException.InnerExceptions%2A> property of the returned <xref:System.AggregateException> object contains the original exceptions.","pos":[0,1260],"nodes":[{"content":"If a task has an attached child task that throws an exception, that exception is wrapped in an <ph id=\"ph1\">&lt;xref:System.AggregateException&gt;</ph> exception before it is propagated to the parent task, which wraps that exception in its own <ph id=\"ph2\">&lt;xref:System.AggregateException&gt;</ph> exception before it propagates it back to the calling thread.","pos":[0,314],"source":"If a task has an attached child task that throws an exception, that exception is wrapped in an <xref:System.AggregateException> exception before it is propagated to the parent task, which wraps that exception in its own <xref:System.AggregateException> exception before it propagates it back to the calling thread."},{"content":"In such cases, the <ph id=\"ph1\">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.AggregateException&gt;</ph> exception that is caught by the <ph id=\"ph3\">&lt;xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Threading.Tasks.Task%601.Wait%2A?displayProperty=fullName&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph6\">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName&gt;</ph> method contains one or more <ph id=\"ph7\">&lt;xref:System.AggregateException&gt;</ph> instances, not the original exceptions that caused the fault.","pos":[315,876],"source":" In such cases, the <xref:System.AggregateException.InnerExceptions%2A> property of the <xref:System.AggregateException> exception that is caught by the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task%601.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=fullName> or <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName> method contains one or more <xref:System.AggregateException> instances, not the original exceptions that caused the fault."},{"content":"To avoid having to iterate over nested <ph id=\"ph1\">&lt;xref:System.AggregateException&gt;</ph> exceptions, you can use the <ph id=\"ph2\">&lt;xref:System.AggregateException.Flatten%2A&gt;</ph> method to remove all the nested <ph id=\"ph3\">&lt;xref:System.AggregateException&gt;</ph> exceptions, so that the <ph id=\"ph4\">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the returned <ph id=\"ph5\">&lt;xref:System.AggregateException&gt;</ph> object contains the original exceptions.","pos":[877,1260],"source":" To avoid having to iterate over nested <xref:System.AggregateException> exceptions, you can use the <xref:System.AggregateException.Flatten%2A> method to remove all the nested <xref:System.AggregateException> exceptions, so that the <xref:System.AggregateException.InnerExceptions%2A> property of the returned <xref:System.AggregateException> object contains the original exceptions."}]}]},{"pos":[1267,1647],"content":"This method recursively flattens all instances of  <xref:System.AggregateException> exceptions that are inner exceptions of the current <xref:System.AggregateException> instance . The inner exceptions returned in the new <xref:System.AggregateException> are the union of all the inner exceptions from exception tree rooted at the current <xref:System.AggregateException> instance.","nodes":[{"content":"This method recursively flattens all instances of  <xref:System.AggregateException> exceptions that are inner exceptions of the current <xref:System.AggregateException> instance . The inner exceptions returned in the new <xref:System.AggregateException> are the union of all the inner exceptions from exception tree rooted at the current <xref:System.AggregateException> instance.","pos":[0,380],"nodes":[{"content":"This method recursively flattens all instances of  <ph id=\"ph1\">&lt;xref:System.AggregateException&gt;</ph> exceptions that are inner exceptions of the current <ph id=\"ph2\">&lt;xref:System.AggregateException&gt;</ph> instance .","pos":[0,179],"source":"This method recursively flattens all instances of  <xref:System.AggregateException> exceptions that are inner exceptions of the current <xref:System.AggregateException> instance ."},{"content":"The inner exceptions returned in the new <ph id=\"ph1\">&lt;xref:System.AggregateException&gt;</ph> are the union of all the inner exceptions from exception tree rooted at the current <ph id=\"ph2\">&lt;xref:System.AggregateException&gt;</ph> instance.","pos":[180,380],"source":" The inner exceptions returned in the new <xref:System.AggregateException> are the union of all the inner exceptions from exception tree rooted at the current <xref:System.AggregateException> instance."}]}]}],"pos":[26502,28154],"yaml":true,"extradata":"MT"},{"content":"A new, flattened <xref href=\"System.AggregateException\"></xref>.","nodes":[{"pos":[0,64],"content":"A new, flattened <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph>.","source":"A new, flattened <xref href=\"System.AggregateException\"></xref>."}],"pos":[29226,29291],"yaml":true},{"content":"Returns the <xref href=\"System.AggregateException\"></xref> that is the root cause of this exception.","nodes":[{"pos":[0,100],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> that is the root cause of this exception.","source":"Returns the <xref href=\"System.AggregateException\"></xref> that is the root cause of this exception."}],"pos":[30834,30935],"yaml":true},{"content":"Returns the <xref href=\"System.AggregateException\"></xref> that is the root cause of this exception.","nodes":[{"pos":[0,100],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> that is the root cause of this exception.","source":"Returns the <xref href=\"System.AggregateException\"></xref> that is the root cause of this exception."}],"pos":[31084,31185],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with serialized data.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> class with serialized data.","source":"Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with serialized data."}],"pos":[33079,33188],"yaml":true},{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"pos":[0,231],"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).","nodes":[{"content":"This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.","pos":[0,113]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>XML and SOAP Serialization<ept id=\"p1\">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.","pos":[114,231],"source":" For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md)."}]}],"pos":[33199,33431],"yaml":true,"extradata":"MT"},{"content":"The object that holds the serialized object data.","nodes":[{"pos":[0,49],"content":"The object that holds the serialized object data.","nodes":[{"content":"The object that holds the serialized object data.","pos":[0,49]}]}],"pos":[33759,33809],"yaml":true},{"content":"The contextual information about the source or destination.","nodes":[{"pos":[0,59],"content":"The contextual information about the source or destination.","nodes":[{"content":"The contextual information about the source or destination.","pos":[0,59]}]}],"pos":[33904,33964],"yaml":true},{"content":"The <code>info</code> argument is null.","nodes":[{"pos":[0,39],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">info</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>info</code> argument is null."}],"pos":[34133,34173],"yaml":true},{"content":"Invokes a handler on each <xref href=\"System.Exception\"></xref> contained by this <xref href=\"System.AggregateException\"></xref>.","nodes":[{"pos":[0,129],"content":"Invokes a handler on each <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> contained by this <ph id=\"ph2\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph>.","source":"Invokes a handler on each <xref href=\"System.Exception\"></xref> contained by this <xref href=\"System.AggregateException\"></xref>."}],"pos":[35561,35691],"yaml":true},{"content":"Each invocation of the `predicate` returns true or false to indicate whether the <xref:System.Exception> was handled. After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <xref:System.AggregateException> which will be thrown. Otherwise, the <xref:System.AggregateException.Handle%2A> method simply returns. If any invocations of the `predicate` throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.","nodes":[{"pos":[0,522],"content":"Each invocation of the `predicate` returns true or false to indicate whether the <xref:System.Exception> was handled. After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <xref:System.AggregateException> which will be thrown. Otherwise, the <xref:System.AggregateException.Handle%2A> method simply returns. If any invocations of the `predicate` throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.","nodes":[{"content":"Each invocation of the <ph id=\"ph1\">`predicate`</ph> returns true or false to indicate whether the <ph id=\"ph2\">&lt;xref:System.Exception&gt;</ph> was handled.","pos":[0,117],"source":"Each invocation of the `predicate` returns true or false to indicate whether the <xref:System.Exception> was handled."},{"content":"After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <ph id=\"ph1\">&lt;xref:System.AggregateException&gt;</ph> which will be thrown.","pos":[118,277],"source":" After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <xref:System.AggregateException> which will be thrown."},{"content":"Otherwise, the <ph id=\"ph1\">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method simply returns.","pos":[278,358],"source":" Otherwise, the <xref:System.AggregateException.Handle%2A> method simply returns."},{"content":"If any invocations of the <ph id=\"ph1\">`predicate`</ph> throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.","pos":[359,522],"source":" If any invocations of the `predicate` throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is."}]}],"pos":[35702,36225],"yaml":true,"extradata":"MT"},{"content":"The predicate to execute for each exception. The predicate accepts as an argument the <xref href=\"System.Exception\"></xref> to be processed and returns a Boolean to indicate whether the exception was handled.","nodes":[{"pos":[0,208],"content":"The predicate to execute for each exception. The predicate accepts as an argument the <xref href=\"System.Exception\"></xref> to be processed and returns a Boolean to indicate whether the exception was handled.","nodes":[{"content":"The predicate to execute for each exception.","pos":[0,44]},{"content":"The predicate accepts as an argument the <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> to be processed and returns a Boolean to indicate whether the exception was handled.","pos":[45,208],"source":" The predicate accepts as an argument the <xref href=\"System.Exception\"></xref> to be processed and returns a Boolean to indicate whether the exception was handled."}]}],"pos":[37575,37784],"yaml":true},{"content":"The <code>predicate</code> argument is null.","nodes":[{"pos":[0,44],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">predicate</ph><ept id=\"p1\">&lt;/code&gt;</ept> argument is null.","source":"The <code>predicate</code> argument is null."}],"pos":[37946,37991],"yaml":true},{"content":"An exception contained by this <xref href=\"System.AggregateException\"></xref> was not handled.","nodes":[{"pos":[0,94],"content":"An exception contained by this <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph> was not handled.","source":"An exception contained by this <xref href=\"System.AggregateException\"></xref> was not handled."}],"pos":[38087,38182],"yaml":true},{"content":"Gets a read-only collection of the <xref href=\"System.Exception\"></xref> instances that caused the current exception.","nodes":[{"pos":[0,117],"content":"Gets a read-only collection of the <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> instances that caused the current exception.","source":"Gets a read-only collection of the <xref href=\"System.Exception\"></xref> instances that caused the current exception."}],"pos":[39651,39769],"yaml":true},{"content":"Returns a read-only collection of the <xref href=\"System.Exception\"></xref> instances that caused the current exception.","nodes":[{"pos":[0,120],"content":"Returns a read-only collection of the <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> instances that caused the current exception.","source":"Returns a read-only collection of the <xref href=\"System.Exception\"></xref> instances that caused the current exception."}],"pos":[39996,40117],"yaml":true},{"content":"Creates and returns a string representation of the current <xref href=\"System.AggregateException\"></xref>.","nodes":[{"pos":[0,106],"content":"Creates and returns a string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.AggregateException\"&gt;&lt;/xref&gt;</ph>.","source":"Creates and returns a string representation of the current <xref href=\"System.AggregateException\"></xref>."}],"pos":[42286,42393],"yaml":true},{"content":"A string representation of the current exception.","nodes":[{"pos":[0,49],"content":"A string representation of the current exception.","nodes":[{"content":"A string representation of the current exception.","pos":[0,49]}]}],"pos":[42528,42578],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AggregateException\n  commentId: T:System.AggregateException\n  id: AggregateException\n  children:\n  - System.AggregateException.#ctor\n  - System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})\n  - System.AggregateException.#ctor(System.Exception[])\n  - System.AggregateException.#ctor(System.String)\n  - System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})\n  - System.AggregateException.#ctor(System.String,System.Exception)\n  - System.AggregateException.#ctor(System.String,System.Exception[])\n  - System.AggregateException.Flatten\n  - System.AggregateException.GetBaseException\n  - System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})\n  - System.AggregateException.InnerExceptions\n  - System.AggregateException.Message\n  - System.AggregateException.ToString\n  langs:\n  - csharp\n  name: AggregateException\n  nameWithType: AggregateException\n  fullName: System.AggregateException\n  type: Class\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Represents one or more errors that occur during application execution.\n  remarks: '<xref:System.AggregateException> is used to consolidate multiple failures into a single, throwable exception object. It is used extensively in the [Task Parallel Library (TPL)](~/docs/standard/parallel-programming/task-parallel-library-tpl.md) and [Parallel LINQ (PLINQ)](~/docs/standard/parallel-programming/parallel-linq-plinq.md). For additional information, see the [Aggregating Exceptions](http://go.microsoft.com/fwlink/p/?LinkId=259617) entry in the .NET Matters blog. For an example, see [NIB: How to: Handle Exceptions Thrown by Tasks](http://msdn.microsoft.com/en-us/d6c47ec8-9de9-4880-beb3-ff19ae51565d) and [How to: Handle Exceptions in a PLINQ Query](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md).'\n  example:\n  - \"The following example catches the <xref:System.AggregateException> exception and calls the <xref:System.AggregateException.Handle%2A> method to handle each exception it contains. Compiling and running the example with the first `task1` variable should result in an <xref:System.AggregateException> object that contains an <xref:System.UnauthorizedAccessException> exception. Commenting out that line, uncommenting the second `task1` variable, and compiling and running the example produces an <xref:System.AggregateException> object that contains an <xref:System.IndexOutOfRangeException> exception.  \\n  \\n [!code-csharp[System.AggregateException.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.aggregateexception.class/cs/exception1.cs#1)]\\n [!code-vb[System.AggregateException.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.aggregateexception.class/vb/exception1.vb#1)]\"\n  syntax:\n    content: 'public class AggregateException : Exception'\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.#ctor\n  commentId: M:System.AggregateException.#ctor\n  id: '#ctor'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: AggregateException()\n  nameWithType: AggregateException.AggregateException()\n  fullName: AggregateException.AggregateException()\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a system-supplied message that describes the error.\n  remarks: \"This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as \\\"DefaultMessageDisplayedByParameterlessCtorWriterMustSupply\\\" This message takes into account the current system culture.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.InsufficientMemoryException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The localized error message string.|\"\n  syntax:\n    content: public AggregateException ();\n    parameters: []\n  overload: System.AggregateException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})\n  commentId: M:System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Exception})'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: AggregateException(IEnumerable<Exception>)\n  nameWithType: AggregateException.AggregateException(IEnumerable<Exception>)\n  fullName: AggregateException.AggregateException(IEnumerable<Exception>)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with references to the inner exceptions that are the cause of this exception.\n  syntax:\n    content: public AggregateException (System.Collections.Generic.IEnumerable<Exception> innerExceptions);\n    parameters:\n    - id: innerExceptions\n      type: System.Collections.Generic.IEnumerable{System.Exception}\n      description: The exceptions that are the cause of the current exception.\n  overload: System.AggregateException.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>innerExceptions</code> argument is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An element of <code>innerExceptions</code> is null.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.#ctor(System.Exception[])\n  commentId: M:System.AggregateException.#ctor(System.Exception[])\n  id: '#ctor(System.Exception[])'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: AggregateException(Exception[])\n  nameWithType: AggregateException.AggregateException(Exception[])\n  fullName: AggregateException.AggregateException(Exception[])\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with references to the inner exceptions that are the cause of this exception.\n  syntax:\n    content: public AggregateException (Exception[] innerExceptions);\n    parameters:\n    - id: innerExceptions\n      type: System.Exception[]\n      description: The exceptions that are the cause of the current exception.\n  overload: System.AggregateException.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>innerExceptions</code> argument is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An element of <code>innerExceptions</code> is null.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.#ctor(System.String)\n  commentId: M:System.AggregateException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: AggregateException(String)\n  nameWithType: AggregateException.AggregateException(String)\n  fullName: AggregateException.AggregateException(String)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified message that describes the error.\n  remarks: \"The following table shows the initial property values for an instance of <xref:System.AggregateException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|\"\n  syntax:\n    content: public AggregateException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.\n  overload: System.AggregateException.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: AggregateException(SerializationInfo, StreamingContext)\n  nameWithType: AggregateException.AggregateException(SerializationInfo, StreamingContext)\n  fullName: AggregateException.AggregateException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      protected AggregateException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination.\n  overload: System.AggregateException.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>info</code> argument is null.\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The exception could not be deserialized correctly.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})\n  commentId: M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})\n  id: '#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: AggregateException(String, IEnumerable<Exception>)\n  nameWithType: AggregateException.AggregateException(String, IEnumerable<Exception>)\n  fullName: AggregateException.AggregateException(String, IEnumerable<Exception>)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception.\n  syntax:\n    content: public AggregateException (string message, System.Collections.Generic.IEnumerable<Exception> innerExceptions);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: innerExceptions\n      type: System.Collections.Generic.IEnumerable{System.Exception}\n      description: The exceptions that are the cause of the current exception.\n  overload: System.AggregateException.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>innerExceptions</code> argument is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An element of <code>innerExceptions</code> is null.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.#ctor(System.String,System.Exception)\n  commentId: M:System.AggregateException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: AggregateException(String, Exception)\n  nameWithType: AggregateException.AggregateException(String, Exception)\n  fullName: AggregateException.AggregateException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified error message and a reference to the inner exception that is the cause of this exception.\n  remarks: \"An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.  \\n  \\n The following table shows the initial property values for an instance of <xref:System.AggregateException>.  \\n  \\n|Property|Value|  \\n|--------------|-----------|  \\n|<xref:System.Exception.InnerException%2A>|`null`.|  \\n|<xref:System.Exception.Message%2A>|The error message string specified in `message`.|\"\n  syntax:\n    content: public AggregateException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.\n    - id: innerException\n      type: System.Exception\n      description: The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not `null`, the current exception is raised in a `catch` block that handles the inner exception.\n  overload: System.AggregateException.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>innerException</code> argument is null.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.#ctor(System.String,System.Exception[])\n  commentId: M:System.AggregateException.#ctor(System.String,System.Exception[])\n  id: '#ctor(System.String,System.Exception[])'\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: AggregateException(String, Exception[])\n  nameWithType: AggregateException.AggregateException(String, Exception[])\n  fullName: AggregateException.AggregateException(String, Exception[])\n  type: Constructor\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with a specified error message and references to the inner exceptions that are the cause of this exception.\n  syntax:\n    content: public AggregateException (string message, Exception[] innerExceptions);\n    parameters:\n    - id: message\n      type: System.String\n      description: The error message that explains the reason for the exception.\n    - id: innerExceptions\n      type: System.Exception[]\n      description: The exceptions that are the cause of the current exception.\n  overload: System.AggregateException.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>innerExceptions</code> argument is null.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An element of <code>innerExceptions</code> is null.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.Flatten\n  commentId: M:System.AggregateException.Flatten\n  id: Flatten\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: Flatten()\n  nameWithType: AggregateException.Flatten()\n  fullName: AggregateException.Flatten()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Flattens an <xref href=\"System.AggregateException\"></xref> instances into a single, new instance.\n  remarks: \"If a task has an attached child task that throws an exception, that exception is wrapped in an <xref:System.AggregateException> exception before it is propagated to the parent task, which wraps that exception in its own <xref:System.AggregateException> exception before it propagates it back to the calling thread. In such cases, the <xref:System.AggregateException.InnerExceptions%2A> property of the <xref:System.AggregateException> exception that is caught by the <xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task%601.Wait%2A?displayProperty=fullName>, <xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=fullName> or <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName> method contains one or more <xref:System.AggregateException> instances, not the original exceptions that caused the fault. To avoid having to iterate over nested <xref:System.AggregateException> exceptions, you can use the <xref:System.AggregateException.Flatten%2A> method to remove all the nested <xref:System.AggregateException> exceptions, so that the <xref:System.AggregateException.InnerExceptions%2A> property of the returned <xref:System.AggregateException> object contains the original exceptions.  \\n  \\n This method recursively flattens all instances of  <xref:System.AggregateException> exceptions that are inner exceptions of the current <xref:System.AggregateException> instance . The inner exceptions returned in the new <xref:System.AggregateException> are the union of all the inner exceptions from exception tree rooted at the current <xref:System.AggregateException> instance.\"\n  example:\n  - \"In the following example, nested <xref:System.AggregateException> instances are flattened and handled in just one loop.  \\n  \\n [!code-csharp[TPL_Exceptions#22](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/flatten2.cs#22)]\\n [!code-vb[TPL_Exceptions#22](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/flatten2.vb#22)]  \\n  \\n You can also use the <xref:System.AggregateException.Flatten%2A?displayProperty=fullName> method to rethrow the inner exceptions from multiple <xref:System.AggregateException> instances thrown by multiple tasks in a single <xref:System.AggregateException> instance, as the following example shows.  \\n  \\n [!code-csharp[TPL_Exceptions#13](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions2.cs#13)]\\n [!code-vb[TPL_Exceptions#13](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions2.vb#13)]\"\n  syntax:\n    content: public AggregateException Flatten ();\n    parameters: []\n    return:\n      type: System.AggregateException\n      description: A new, flattened <xref href=\"System.AggregateException\"></xref>.\n  overload: System.AggregateException.Flatten*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.GetBaseException\n  commentId: M:System.AggregateException.GetBaseException\n  id: GetBaseException\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: GetBaseException()\n  nameWithType: AggregateException.GetBaseException()\n  fullName: AggregateException.GetBaseException()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the <xref href=\"System.AggregateException\"></xref> that is the root cause of this exception.\n  syntax:\n    content: public override Exception GetBaseException ();\n    parameters: []\n    return:\n      type: System.Exception\n      description: Returns the <xref href=\"System.AggregateException\"></xref> that is the root cause of this exception.\n  overload: System.AggregateException.GetBaseException*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: AggregateException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: AggregateException.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.AggregateException\"></xref> class with serialized data.\n  remarks: This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see [XML and SOAP Serialization](~/docs/framework/serialization/xml-and-soap-serialization.md).\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object that holds the serialized object data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The contextual information about the source or destination.\n  overload: System.AggregateException.GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>info</code> argument is null.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})\n  commentId: M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})\n  id: Handle(System.Func{System.Exception,System.Boolean})\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: Handle(Func<Exception,Boolean>)\n  nameWithType: AggregateException.Handle(Func<Exception,Boolean>)\n  fullName: AggregateException.Handle(Func<Exception,Boolean>)\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Invokes a handler on each <xref href=\"System.Exception\"></xref> contained by this <xref href=\"System.AggregateException\"></xref>.\n  remarks: Each invocation of the `predicate` returns true or false to indicate whether the <xref:System.Exception> was handled. After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <xref:System.AggregateException> which will be thrown. Otherwise, the <xref:System.AggregateException.Handle%2A> method simply returns. If any invocations of the `predicate` throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.\n  example:\n  - \"Ordinarily, an exception handler that catches an <xref:System.AggregateException> exception uses a `foreach` loop (in C#) or `For Each` loop (in Visual Basic) to handle each exception in its <xref:System.AggregateException.InnerExceptions%2A> collection. Instead, the following example uses the <xref:System.AggregateException.Handle%2A> method to handle each exception, and only re-throws exceptions that are not `CustomException` instances.  \\n  \\n [!code-csharp[TPL_Exceptions#16](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/handlemethod2.cs#16)]\\n [!code-vb[TPL_Exceptions#16](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/handlemethod2.vb#16)]  \\n  \\n The following is a more complete example that uses the <xref:System.AggregateException.Handle%2A> method to provide special handling for an <xref:System.UnauthorizedAccessException> when enumerating files.  \\n  \\n [!code-csharp[TPL_Exceptions#12](~/samples/snippets/csharp/VS_Snippets_Misc/tpl_exceptions/cs/taskexceptions.cs#12)]\\n [!code-vb[TPL_Exceptions#12](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpl_exceptions/vb/taskexceptions.vb#12)]\"\n  syntax:\n    content: public void Handle (Func<Exception,bool> predicate);\n    parameters:\n    - id: predicate\n      type: System.Func{System.Exception,System.Boolean}\n      description: The predicate to execute for each exception. The predicate accepts as an argument the <xref href=\"System.Exception\"></xref> to be processed and returns a Boolean to indicate whether the exception was handled.\n  overload: System.AggregateException.Handle*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>predicate</code> argument is null.\n  - type: System.AggregateException\n    commentId: T:System.AggregateException\n    description: An exception contained by this <xref href=\"System.AggregateException\"></xref> was not handled.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.InnerExceptions\n  commentId: P:System.AggregateException.InnerExceptions\n  id: InnerExceptions\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: InnerExceptions\n  nameWithType: AggregateException.InnerExceptions\n  fullName: AggregateException.InnerExceptions\n  type: Property\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Gets a read-only collection of the <xref href=\"System.Exception\"></xref> instances that caused the current exception.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<Exception> InnerExceptions { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}\n      description: Returns a read-only collection of the <xref href=\"System.Exception\"></xref> instances that caused the current exception.\n  overload: System.AggregateException.InnerExceptions*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AggregateException.Message\n  commentId: P:System.AggregateException.Message\n  id: Message\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: Message\n  nameWithType: AggregateException.Message\n  fullName: AggregateException.Message\n  type: Property\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: public override string Message { get; }\n    return:\n      type: System.String\n      description: ''\n  overload: System.AggregateException.Message*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n- uid: System.AggregateException.ToString\n  commentId: M:System.AggregateException.ToString\n  id: ToString\n  parent: System.AggregateException\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: AggregateException.ToString()\n  fullName: AggregateException.ToString()\n  type: Method\n  assemblies:\n  - System.Threading.Tasks\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Creates and returns a string representation of the current <xref href=\"System.AggregateException\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of the current exception.\n  overload: System.AggregateException.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Runtime.Serialization.SerializationException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationException\n  nameWithType: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n- uid: System.AggregateException\n  parent: System\n  isExternal: false\n  name: AggregateException\n  nameWithType: AggregateException\n  fullName: System.AggregateException\n- uid: System.AggregateException.#ctor\n  parent: System.AggregateException\n  isExternal: false\n  name: AggregateException()\n  nameWithType: AggregateException.AggregateException()\n  fullName: AggregateException.AggregateException()\n- uid: System.AggregateException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})\n  parent: System.AggregateException\n  isExternal: false\n  name: AggregateException(IEnumerable<Exception>)\n  nameWithType: AggregateException.AggregateException(IEnumerable<Exception>)\n  fullName: AggregateException.AggregateException(IEnumerable<Exception>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Exception}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Exception>\n  nameWithType: IEnumerable<Exception>\n  fullName: System.Collections.Generic.IEnumerable<System.Exception>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    nameWithType: Exception\n    fullName: System.Exception\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.AggregateException.#ctor(System.Exception[])\n  parent: System.AggregateException\n  isExternal: false\n  name: AggregateException(Exception[])\n  nameWithType: AggregateException.AggregateException(Exception[])\n  fullName: AggregateException.AggregateException(Exception[])\n- uid: System.Exception[]\n  parent: System\n  isExternal: false\n  name: Exception[]\n  nameWithType: Exception[]\n  fullName: System.Exception[]\n  spec.csharp:\n  - uid: System.Exception\n    name: Exception\n    nameWithType: Exception\n    fullName: System.Exception\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.AggregateException.#ctor(System.String)\n  parent: System.AggregateException\n  isExternal: false\n  name: AggregateException(String)\n  nameWithType: AggregateException.AggregateException(String)\n  fullName: AggregateException.AggregateException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.AggregateException\n  isExternal: false\n  name: AggregateException(SerializationInfo, StreamingContext)\n  nameWithType: AggregateException.AggregateException(SerializationInfo, StreamingContext)\n  fullName: AggregateException.AggregateException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.AggregateException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})\n  parent: System.AggregateException\n  isExternal: false\n  name: AggregateException(String, IEnumerable<Exception>)\n  nameWithType: AggregateException.AggregateException(String, IEnumerable<Exception>)\n  fullName: AggregateException.AggregateException(String, IEnumerable<Exception>)\n- uid: System.AggregateException.#ctor(System.String,System.Exception)\n  parent: System.AggregateException\n  isExternal: false\n  name: AggregateException(String, Exception)\n  nameWithType: AggregateException.AggregateException(String, Exception)\n  fullName: AggregateException.AggregateException(String, Exception)\n- uid: System.AggregateException.#ctor(System.String,System.Exception[])\n  parent: System.AggregateException\n  isExternal: false\n  name: AggregateException(String, Exception[])\n  nameWithType: AggregateException.AggregateException(String, Exception[])\n  fullName: AggregateException.AggregateException(String, Exception[])\n- uid: System.AggregateException.Flatten\n  parent: System.AggregateException\n  isExternal: false\n  name: Flatten()\n  nameWithType: AggregateException.Flatten()\n  fullName: AggregateException.Flatten()\n- uid: System.AggregateException.GetBaseException\n  parent: System.AggregateException\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: AggregateException.GetBaseException()\n  fullName: AggregateException.GetBaseException()\n- uid: System.AggregateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.AggregateException\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: AggregateException.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: AggregateException.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})\n  parent: System.AggregateException\n  isExternal: false\n  name: Handle(Func<Exception,Boolean>)\n  nameWithType: AggregateException.Handle(Func<Exception,Boolean>)\n  fullName: AggregateException.Handle(Func<Exception,Boolean>)\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: System.Boolean\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Func{System.Exception,System.Boolean}\n  parent: System\n  isExternal: false\n  name: Func<Exception,Boolean>\n  nameWithType: Func<Exception,Boolean>\n  fullName: System.Func<System.Exception,System.Boolean>\n  spec.csharp:\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    nameWithType: Exception\n    fullName: System.Exception\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Boolean\n    name: Boolean\n    nameWithType: Boolean\n    fullName: System.Boolean\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.AggregateException.InnerExceptions\n  parent: System.AggregateException\n  isExternal: false\n  name: InnerExceptions\n  nameWithType: AggregateException.InnerExceptions\n  fullName: AggregateException.InnerExceptions\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<Exception>\n  nameWithType: ReadOnlyCollection<Exception>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Exception>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Exception\n    name: Exception\n    nameWithType: Exception\n    fullName: System.Exception\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.AggregateException.Message\n  parent: System.AggregateException\n  isExternal: false\n  name: Message\n  nameWithType: AggregateException.Message\n  fullName: AggregateException.Message\n- uid: System.AggregateException.ToString\n  parent: System.AggregateException\n  isExternal: false\n  name: ToString()\n  nameWithType: AggregateException.ToString()\n  fullName: AggregateException.ToString()\n- uid: System.AggregateException.#ctor*\n  parent: System.AggregateException\n  isExternal: false\n  name: AggregateException\n  nameWithType: AggregateException.AggregateException\n  fullName: AggregateException.AggregateException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n- uid: System.AggregateException.Flatten*\n  parent: System.AggregateException\n  isExternal: false\n  name: Flatten\n  nameWithType: AggregateException.Flatten\n  fullName: AggregateException.Flatten\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n- uid: System.AggregateException.GetBaseException*\n  parent: System.AggregateException\n  isExternal: false\n  name: GetBaseException\n  nameWithType: AggregateException.GetBaseException\n  fullName: AggregateException.GetBaseException\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n- uid: System.AggregateException.GetObjectData*\n  parent: System.AggregateException\n  isExternal: false\n  name: GetObjectData\n  nameWithType: AggregateException.GetObjectData\n  fullName: AggregateException.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n- uid: System.AggregateException.Handle*\n  parent: System.AggregateException\n  isExternal: false\n  name: Handle\n  nameWithType: AggregateException.Handle\n  fullName: AggregateException.Handle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n- uid: System.AggregateException.InnerExceptions*\n  parent: System.AggregateException\n  isExternal: false\n  name: InnerExceptions\n  nameWithType: AggregateException.InnerExceptions\n  fullName: AggregateException.InnerExceptions\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n- uid: System.AggregateException.Message*\n  parent: System.AggregateException\n  isExternal: false\n  name: Message\n  nameWithType: AggregateException.Message\n  fullName: AggregateException.Message\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n- uid: System.AggregateException.ToString*\n  parent: System.AggregateException\n  isExternal: false\n  name: ToString\n  nameWithType: AggregateException.ToString\n  fullName: AggregateException.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/AggregateException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}