### YamlMime:ManagedReference
items:
- uid: System.Threading.SpinWait
  commentId: T:System.Threading.SpinWait
  id: SpinWait
  children:
  - System.Threading.SpinWait.Count
  - System.Threading.SpinWait.NextSpinWillYield
  - System.Threading.SpinWait.Reset
  - System.Threading.SpinWait.SpinOnce
  - System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})
  - System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)
  - System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)
  langs:
  - csharp
  name: SpinWait
  nameWithType: SpinWait
  fullName: System.Threading.SpinWait
  type: Struct
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Provides support for spin-based waiting.
  remarks: "<xref:System.Threading.SpinWait> encapsulates common spinning logic. On single-processor machines, yields are always used instead of busy waits, and on computers with Intel processors employing Hyper-Threading technology, it helps to prevent hardware thread starvation. SpinWait encapsulates a good mixture of spinning and true yielding.  \n  \n <xref:System.Threading.SpinWait> is a value type, which means that low-level code can utilize SpinWait without fear of unnecessary allocation overheads. SpinWait is not generally useful for ordinary applications. In most cases, you should use the synchronization classes provided by the .NET Framework, such as <xref:System.Threading.Monitor>. For most purposes where spin waiting is required, however, the <xref:System.Threading.SpinWait> type should be preferred over the <xref:System.Threading.Thread.SpinWait%2A> method."
  example:
  - "The following example shows how to use a <xref:System.Threading.SpinWait>:  \n  \n [!code-csharp[System.Threading.SpinWait#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.spinwait/cs/spinwait.cs#01)]\n [!code-vb[System.Threading.SpinWait#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.spinwait/vb/spinwait.vb#01)]"
  syntax:
    content: public struct SpinWait
  inheritance:
  - System.Object
  - System.ValueType
  implements: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.SpinWait.Count
  commentId: P:System.Threading.SpinWait.Count
  id: Count
  parent: System.Threading.SpinWait
  langs:
  - csharp
  name: Count
  nameWithType: SpinWait.Count
  fullName: SpinWait.Count
  type: Property
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Gets the number of times <xref href="System.Threading.SpinWait.SpinOnce"></xref> has been called on this instance.
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Returns an integer that represents the number of times <xref href="System.Threading.SpinWait.SpinOnce"></xref> has been called on this instance.
  overload: System.Threading.SpinWait.Count*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.SpinWait.NextSpinWillYield
  commentId: P:System.Threading.SpinWait.NextSpinWillYield
  id: NextSpinWillYield
  parent: System.Threading.SpinWait
  langs:
  - csharp
  name: NextSpinWillYield
  nameWithType: SpinWait.NextSpinWillYield
  fullName: SpinWait.NextSpinWillYield
  type: Property
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Gets whether the next call to <xref href="System.Threading.SpinWait.SpinOnce"></xref> will yield the processor, triggering a forced context switch.
  remarks: On a single-CPU machine, <xref:System.Threading.SpinWait.SpinOnce%2A> always yields the processor. On machines with multiple CPUs, <xref:System.Threading.SpinWait.SpinOnce%2A> may yield after an unspecified number of calls.
  syntax:
    content: public bool NextSpinWillYield { get; }
    return:
      type: System.Boolean
      description: Whether the next call to <xref href="System.Threading.SpinWait.SpinOnce"></xref> will yield the processor, triggering a forced context switch.
  overload: System.Threading.SpinWait.NextSpinWillYield*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.SpinWait.Reset
  commentId: M:System.Threading.SpinWait.Reset
  id: Reset
  parent: System.Threading.SpinWait
  langs:
  - csharp
  name: Reset()
  nameWithType: SpinWait.Reset()
  fullName: SpinWait.Reset()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Resets the spin counter.
  remarks: This makes <xref:System.Threading.SpinWait.SpinOnce%2A> and <xref:System.Threading.SpinWait.NextSpinWillYield%2A> behave as though no calls to <xref:System.Threading.SpinWait.SpinOnce%2A> had been issued on this instance. If a <xref:System.Threading.SpinWait> instance is reused many times, it may be useful to reset it to avoid yielding too soon.
  example:
  - "The following is an example of using SpinWait in a simple lock-free stack implementation. (This is just an example. If an efficient, thread-safe stack is needed, consider using ConcurrentStack.)  \n  \n `// C#`  \n  \n `public class LockFreeStack<T>`  \n  \n `{`  \n  \n `private volatile Node m_head;`  \n  \n `private class Node { public Node Next; public T Value; }`  \n  \n `public void Push(T item)`  \n  \n `{`  \n  \n `var spin = new SpinWait();`  \n  \n `Node node = new Node { Value = item }, head;`  \n  \n `while (true)`  \n  \n `{`  \n  \n `head = m_head;`  \n  \n `node.Next = head;`  \n  \n `if (Interlocked.CompareExchange(ref m_head, node, head) == head) break;`  \n  \n `spin.SpinOnce();`  \n  \n `}`  \n  \n `}`  \n  \n `public bool TryPop(out T result)`  \n  \n `{`  \n  \n `result = default(T);`  \n  \n `var spin = new SpinWait();`  \n  \n `Node head;`  \n  \n `while (true)`  \n  \n `{`  \n  \n `head = m_head;`  \n  \n `if (head == null) return false;`  \n  \n `if (Interlocked.CompareExchange(ref m_head, head.Next, head) == head)`  \n  \n `{`  \n  \n `result = head.Value;`  \n  \n `return true;`  \n  \n `}`  \n  \n `spin.SpinOnce();`  \n  \n `}`  \n  \n `}`  \n  \n `}`  \n  \n `' Visual Basic`  \n  \n `Public Class LockFreeStack(Of T)`  \n  \n `Private m_head As Node`  \n  \n `Private Class Node`  \n  \n `Public [Next] As Node`  \n  \n `Public Value As T`  \n  \n `End Class`  \n  \n `Public Sub Push(ByVal item As T)`  \n  \n `Dim spin As New SpinWait()`  \n  \n `Dim head As Node, node As New Node With {.Value = item}`  \n  \n `While True`  \n  \n `Thread.MemoryBarrier()`  \n  \n `head = m_head`  \n  \n `node.Next = head`  \n  \n `If Interlocked.CompareExchange(m_head, node, head) Is head Then Exit While`  \n  \n `spin.SpinOnce()`  \n  \n `End While`  \n  \n `End Sub`  \n  \n `Public Function TryPop(ByRef result As T) As Boolean`  \n  \n `result = CType(Nothing, T)`  \n  \n `Dim spin As New SpinWait()`  \n  \n `Dim head As Node`  \n  \n `While True`  \n  \n `Thread.MemoryBarrier()`  \n  \n `head = m_head`  \n  \n `If head Is Nothing Then Return False`  \n  \n `If Interlocked.CompareExchange(m_head, head.Next, head) Is head Then`  \n  \n `result = head.Value`  \n  \n `Return True`  \n  \n `End If`  \n  \n `spin.SpinOnce()`  \n  \n `End While`  \n  \n `End Function`  \n  \n `End Class`"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Threading.SpinWait.Reset*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.SpinWait.SpinOnce
  commentId: M:System.Threading.SpinWait.SpinOnce
  id: SpinOnce
  parent: System.Threading.SpinWait
  langs:
  - csharp
  name: SpinOnce()
  nameWithType: SpinWait.SpinOnce()
  fullName: SpinWait.SpinOnce()
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Performs a single spin.
  remarks: This is typically called in a loop, and may change in behavior based on the number of times a <xref:System.Threading.SpinWait.SpinOnce%2A> has been called thus far on this instance. Each spin results in the <xref:System.Threading.Thread.SpinWait%2A> method being called. A count is kept of the number of times <xref:System.Threading.SpinWait.SpinOnce%2A> is called, and after a threshold count is reached, the <xref:System.Threading.Thread.Yield%2A> method is called.
  syntax:
    content: public void SpinOnce ();
    parameters: []
  overload: System.Threading.SpinWait.SpinOnce*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})
  commentId: M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})
  id: SpinUntil(System.Func{System.Boolean})
  parent: System.Threading.SpinWait
  langs:
  - csharp
  name: SpinUntil(Func<Boolean>)
  nameWithType: SpinWait.SpinUntil(Func<Boolean>)
  fullName: SpinWait.SpinUntil(Func<Boolean>)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Spins until the specified condition is satisfied.
  syntax:
    content: public static void SpinUntil (Func<bool> condition);
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: A delegate to be executed over and over until it returns true.
  overload: System.Threading.SpinWait.SpinUntil*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>condition</code> argument is null.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)
  commentId: M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)
  id: SpinUntil(System.Func{System.Boolean},System.Int32)
  parent: System.Threading.SpinWait
  langs:
  - csharp
  name: SpinUntil(Func<Boolean>, Int32)
  nameWithType: SpinWait.SpinUntil(Func<Boolean>, Int32)
  fullName: SpinWait.SpinUntil(Func<Boolean>, Int32)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Spins until the specified condition is satisfied or until the specified timeout is expired.
  syntax:
    content: public static bool SpinUntil (Func<bool> condition, int millisecondsTimeout);
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: A delegate to be executed over and over until it returns true.
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or <xref href="System.Threading.Timeout.Infinite"></xref> (-1) to wait indefinitely.
    return:
      type: System.Boolean
      description: True if the condition is satisfied within the timeout; otherwise, false
  overload: System.Threading.SpinWait.SpinUntil*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>condition</code> argument is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>millisecondsTimeout</code> is a negative number other than -1, which represents an infinite time-out.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)
  commentId: M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)
  id: SpinUntil(System.Func{System.Boolean},System.TimeSpan)
  parent: System.Threading.SpinWait
  langs:
  - csharp
  name: SpinUntil(Func<Boolean>, TimeSpan)
  nameWithType: SpinWait.SpinUntil(Func<Boolean>, TimeSpan)
  fullName: SpinWait.SpinUntil(Func<Boolean>, TimeSpan)
  type: Method
  assemblies:
  - System.Threading
  - mscorlib
  - netstandard
  namespace: System.Threading
  summary: Spins until the specified condition is satisfied or until the specified timeout is expired.
  syntax:
    content: public static bool SpinUntil (Func<bool> condition, TimeSpan timeout);
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: A delegate to be executed over and over until it returns true.
    - id: timeout
      type: System.TimeSpan
      description: A <xref href="System.TimeSpan"></xref> that represents the number of milliseconds to wait, or a TimeSpan that represents -1 milliseconds to wait indefinitely.
    return:
      type: System.Boolean
      description: True if the condition is satisfied within the timeout; otherwise, false
  overload: System.Threading.SpinWait.SpinUntil*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>condition</code> argument is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>timeout</code> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <xref href="System.Int32.MaxValue"></xref>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.ValueType
  parent: System
  isExternal: false
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Threading.SpinWait.Count
  parent: System.Threading.SpinWait
  isExternal: false
  name: Count
  nameWithType: SpinWait.Count
  fullName: SpinWait.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.SpinWait.NextSpinWillYield
  parent: System.Threading.SpinWait
  isExternal: false
  name: NextSpinWillYield
  nameWithType: SpinWait.NextSpinWillYield
  fullName: SpinWait.NextSpinWillYield
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.SpinWait.Reset
  parent: System.Threading.SpinWait
  isExternal: false
  name: Reset()
  nameWithType: SpinWait.Reset()
  fullName: SpinWait.Reset()
- uid: System.Threading.SpinWait.SpinOnce
  parent: System.Threading.SpinWait
  isExternal: false
  name: SpinOnce()
  nameWithType: SpinWait.SpinOnce()
  fullName: SpinWait.SpinOnce()
- uid: System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})
  parent: System.Threading.SpinWait
  isExternal: false
  name: SpinUntil(Func<Boolean>)
  nameWithType: SpinWait.SpinUntil(Func<Boolean>)
  fullName: SpinWait.SpinUntil(Func<Boolean>)
- uid: System.Func`1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
- uid: System.Func{System.Boolean}
  parent: System
  isExternal: false
  name: Func<Boolean>
  nameWithType: Func<Boolean>
  fullName: System.Func<System.Boolean>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)
  parent: System.Threading.SpinWait
  isExternal: false
  name: SpinUntil(Func<Boolean>, Int32)
  nameWithType: SpinWait.SpinUntil(Func<Boolean>, Int32)
  fullName: SpinWait.SpinUntil(Func<Boolean>, Int32)
- uid: System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)
  parent: System.Threading.SpinWait
  isExternal: false
  name: SpinUntil(Func<Boolean>, TimeSpan)
  nameWithType: SpinWait.SpinUntil(Func<Boolean>, TimeSpan)
  fullName: SpinWait.SpinUntil(Func<Boolean>, TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.SpinWait.Count*
  parent: System.Threading.SpinWait
  isExternal: false
  name: Count
  nameWithType: SpinWait.Count
  fullName: SpinWait.Count
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
- uid: System.Threading.SpinWait.NextSpinWillYield*
  parent: System.Threading.SpinWait
  isExternal: false
  name: NextSpinWillYield
  nameWithType: SpinWait.NextSpinWillYield
  fullName: SpinWait.NextSpinWillYield
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
- uid: System.Threading.SpinWait.Reset*
  parent: System.Threading.SpinWait
  isExternal: false
  name: Reset
  nameWithType: SpinWait.Reset
  fullName: SpinWait.Reset
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
- uid: System.Threading.SpinWait.SpinOnce*
  parent: System.Threading.SpinWait
  isExternal: false
  name: SpinOnce
  nameWithType: SpinWait.SpinOnce
  fullName: SpinWait.SpinOnce
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
- uid: System.Threading.SpinWait.SpinUntil*
  parent: System.Threading.SpinWait
  isExternal: false
  name: SpinUntil
  nameWithType: SpinWait.SpinUntil
  fullName: SpinWait.SpinUntil
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/SpinWait.xml
