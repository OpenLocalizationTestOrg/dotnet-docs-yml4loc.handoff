{"nodes":[{"content":"Provides a wrapper class for pointers.","nodes":[{"pos":[0,38],"content":"Provides a wrapper class for pointers.","nodes":[{"content":"Provides a wrapper class for pointers.","pos":[0,38]}]}],"pos":[644,683],"yaml":true},{"content":"Boxes the supplied unmanaged memory pointer and the type associated with that pointer into a managed <xref href=\"System.Reflection.Pointer\"></xref> wrapper object. The value and the type are saved so they can be accessed from the native code during an invocation.","nodes":[{"pos":[0,263],"content":"Boxes the supplied unmanaged memory pointer and the type associated with that pointer into a managed <xref href=\"System.Reflection.Pointer\"></xref> wrapper object. The value and the type are saved so they can be accessed from the native code during an invocation.","nodes":[{"content":"Boxes the supplied unmanaged memory pointer and the type associated with that pointer into a managed <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Pointer\"&gt;&lt;/xref&gt;</ph> wrapper object.","pos":[0,163],"source":"Boxes the supplied unmanaged memory pointer and the type associated with that pointer into a managed <xref href=\"System.Reflection.Pointer\"></xref> wrapper object."},{"content":"The value and the type are saved so they can be accessed from the native code during an invocation.","pos":[164,263]}]}],"pos":[2553,2817],"yaml":true},{"content":"The supplied unmanaged memory pointer.","nodes":[{"pos":[0,38],"content":"The supplied unmanaged memory pointer.","nodes":[{"content":"The supplied unmanaged memory pointer.","pos":[0,38]}]}],"pos":[3014,3053],"yaml":true},{"content":"The type associated with the <code>ptr</code> parameter.","nodes":[{"pos":[0,56],"content":"The type associated with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">ptr</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"The type associated with the <code>ptr</code> parameter."}],"pos":[3111,3168],"yaml":true},{"content":"A pointer object.","nodes":[{"pos":[0,17],"content":"A pointer object.","nodes":[{"content":"A pointer object.","pos":[0,17]}]}],"pos":[3225,3243],"yaml":true},{"content":"<code>type</code> is not a pointer.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is not a pointer.","source":"<code>type</code> is not a pointer."}],"pos":[3394,3430],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[3532,3561],"yaml":true},{"content":"Returns the stored pointer.","nodes":[{"pos":[0,27],"content":"Returns the stored pointer.","nodes":[{"content":"Returns the stored pointer.","pos":[0,27]}]}],"pos":[4761,4789],"yaml":true},{"content":"The stored pointer.","nodes":[{"pos":[0,19],"content":"The stored pointer.","nodes":[{"content":"The stored pointer.","pos":[0,19]}]}],"pos":[4978,4998],"yaml":true},{"content":"This method returns void.","nodes":[{"pos":[0,25],"content":"This method returns void.","nodes":[{"content":"This method returns void.","pos":[0,25]}]}],"pos":[5054,5080],"yaml":true},{"content":"<code>ptr</code> is not a pointer.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;ptr&lt;/code&gt;</ph> is not a pointer.","source":"<code>ptr</code> is not a pointer."}],"pos":[5233,5268],"yaml":true},{"content":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the file name, fusion log, and additional exception information.","nodes":[{"pos":[0,153],"content":"Sets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with the file name, fusion log, and additional exception information.","source":"Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the file name, fusion log, and additional exception information."}],"pos":[7025,7179],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.","nodes":[{"pos":[0,143],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> that holds the serialized object data about the exception being thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown."}],"pos":[7505,7649],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.","nodes":[{"pos":[0,140],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination."}],"pos":[7744,7885],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Pointer\n  commentId: T:System.Reflection.Pointer\n  id: Pointer\n  children:\n  - System.Reflection.Pointer.Box(System.Void*,System.Type)\n  - System.Reflection.Pointer.Unbox(System.Object)\n  - System.Reflection.Pointer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: Pointer\n  nameWithType: Pointer\n  fullName: System.Reflection.Pointer\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Provides a wrapper class for pointers.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class Pointer : System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/Pointer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Pointer.Box(System.Void*,System.Type)\n  commentId: M:System.Reflection.Pointer.Box(System.Void*,System.Type)\n  id: Box(System.Void*,System.Type)\n  parent: System.Reflection.Pointer\n  langs:\n  - csharp\n  name: Box(Void*, Type)\n  nameWithType: Pointer.Box(Void*, Type)\n  fullName: Pointer.Box(Void*, Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Boxes the supplied unmanaged memory pointer and the type associated with that pointer into a managed <xref href=\"System.Reflection.Pointer\"></xref> wrapper object. The value and the type are saved so they can be accessed from the native code during an invocation.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public static object Box (void* ptr, Type type);\n    parameters:\n    - id: ptr\n      type: System.Void*\n      description: The supplied unmanaged memory pointer.\n    - id: type\n      type: System.Type\n      description: The type associated with the <code>ptr</code> parameter.\n    return:\n      type: System.Object\n      description: A pointer object.\n  overload: System.Reflection.Pointer.Box*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>type</code> is not a pointer.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/Pointer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Pointer.Unbox(System.Object)\n  commentId: M:System.Reflection.Pointer.Unbox(System.Object)\n  id: Unbox(System.Object)\n  parent: System.Reflection.Pointer\n  langs:\n  - csharp\n  name: Unbox(Object)\n  nameWithType: Pointer.Unbox(Object)\n  fullName: Pointer.Unbox(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns the stored pointer.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public static void* Unbox (object ptr);\n    parameters:\n    - id: ptr\n      type: System.Object\n      description: The stored pointer.\n    return:\n      type: System.Void*\n      description: This method returns void.\n  overload: System.Reflection.Pointer.Unbox*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>ptr</code> is not a pointer.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/Pointer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Pointer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Reflection.Pointer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Reflection.Pointer\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Pointer.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Pointer.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Sets the <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the file name, fusion log, and additional exception information.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.\n  overload: System.Reflection.Pointer.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/Pointer.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Reflection.Pointer.Box(System.Void*,System.Type)\n  parent: System.Reflection.Pointer\n  isExternal: false\n  name: Box(Void*, Type)\n  nameWithType: Pointer.Box(Void*, Type)\n  fullName: Pointer.Box(Void*, Type)\n- uid: System.Void\n  name: Void\n  nameWithType: Void\n  fullName: System.Void\n- uid: System.Void*\n  parent: System\n  isExternal: false\n  name: Void*\n  nameWithType: Void*\n  fullName: System.Void*\n  spec.csharp:\n  - uid: System.Void\n    name: Void\n    nameWithType: Void\n    fullName: System.Void\n  - name: '*'\n    nameWithType: '*'\n    fullName: '*'\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Pointer.Unbox(System.Object)\n  parent: System.Reflection.Pointer\n  isExternal: false\n  name: Unbox(Object)\n  nameWithType: Pointer.Unbox(Object)\n  fullName: Pointer.Unbox(Object)\n- uid: System.Reflection.Pointer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.Pointer\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Pointer.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Pointer.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Reflection.Pointer.Box*\n  parent: System.Reflection.Pointer\n  isExternal: false\n  name: Box\n  nameWithType: Pointer.Box\n  fullName: Pointer.Box\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/Pointer.xml\n- uid: System.Reflection.Pointer.Unbox*\n  parent: System.Reflection.Pointer\n  isExternal: false\n  name: Unbox\n  nameWithType: Pointer.Unbox\n  fullName: Pointer.Unbox\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/Pointer.xml\n- uid: System.Reflection.Pointer.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Reflection.Pointer\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: Pointer.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: Pointer.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/Pointer.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}