{"nodes":[{"content":"Provides information associated with health events.","nodes":[{"pos":[0,51],"content":"Provides information associated with health events.","nodes":[{"content":"Provides information associated with health events.","pos":[0,51]}]}],"pos":[952,1004],"yaml":true},{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n Instances of the <xref:System.Web.Management.WebApplicationInformation> class contain information that is obtained using any of the types derived from the <xref:System.Web.Management.WebManagementEvent> type.  \n  \n Your application needs the appropriate permissions to access protected information provided by this type.  \n  \n The following is an excerpt of a configuration file you could use to enable ASP.NET to log error events that contain application information.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartBeatInterval=\"0\">  \n  \n    <rules>  \n     <add   \n       name=\"All Errors Default\"  \n       eventName=\"All Errors\"  \n       provider=\"EventLogProvider\"  \n       profile=\"Default\"  \n       minInterval=\"00:01:00\" />  \n    </rules>  \n  \n</healthMonitoring>  \n```  \n  \n> [!NOTE]\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom event class, see the example provided in this topic.","nodes":[{"pos":[0,403],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","pos":[0,403],"nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management?displayProperty=fullName&gt;</ph> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,319],"source":" The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[320,403]}]}]},{"pos":[410,618],"content":"Instances of the <xref:System.Web.Management.WebApplicationInformation> class contain information that is obtained using any of the types derived from the <xref:System.Web.Management.WebManagementEvent> type.","nodes":[{"content":"Instances of the <ph id=\"ph1\">&lt;xref:System.Web.Management.WebApplicationInformation&gt;</ph> class contain information that is obtained using any of the types derived from the <ph id=\"ph2\">&lt;xref:System.Web.Management.WebManagementEvent&gt;</ph> type.","pos":[0,208],"source":"Instances of the <xref:System.Web.Management.WebApplicationInformation> class contain information that is obtained using any of the types derived from the <xref:System.Web.Management.WebManagementEvent> type."}]},{"pos":[625,730],"content":"Your application needs the appropriate permissions to access protected information provided by this type.","nodes":[{"content":"Your application needs the appropriate permissions to access protected information provided by this type.","pos":[0,105]}]},{"pos":[737,878],"content":"The following is an excerpt of a configuration file you could use to enable ASP.NET to log error events that contain application information.","nodes":[{"content":"The following is an excerpt of a configuration file you could use to enable ASP.NET to log error events that contain application information.","pos":[0,141]}]},{"pos":[1200,1610],"content":"[!NOTE]\n In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom event class, see the example provided in this topic.","leadings":["","> "],"nodes":[{"content":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom event class, see the example provided in this topic.","pos":[8,408],"nodes":[{"content":"In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <ph id=\"ph1\">`healthMonitoring`</ph> configuration section.","pos":[1,210],"source":" In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section."},{"content":"You can also derive from the health-monitoring types to create your own custom events and providers.","pos":[211,311]},{"content":"For an example of creating a custom event class, see the example provided in this topic.","pos":[312,400]}]}]}],"pos":[1015,2667],"yaml":true,"extradata":"MT"},{"content":"Gets the current application domain name.","nodes":[{"pos":[0,41],"content":"Gets the current application domain name.","nodes":[{"content":"Gets the current application domain name.","pos":[0,41]}]}],"pos":[5538,5580],"yaml":true},{"content":"Gets the application domain name.","nodes":[{"pos":[0,33],"content":"Gets the application domain name.","nodes":[{"content":"Gets the application domain name.","pos":[0,33]}]}],"pos":[6207,6241],"yaml":true},{"content":"Gets the application physical path.","nodes":[{"pos":[0,35],"content":"Gets the application physical path.","nodes":[{"content":"Gets the application physical path.","pos":[0,35]}]}],"pos":[7364,7400],"yaml":true},{"content":"This property requires appropriate permissions to be accessed. Refer to the Permissions section.","nodes":[{"pos":[0,96],"content":"This property requires appropriate permissions to be accessed. Refer to the Permissions section.","nodes":[{"content":"This property requires appropriate permissions to be accessed. Refer to the Permissions section.","pos":[0,96],"nodes":[{"content":"This property requires appropriate permissions to be accessed.","pos":[0,62]},{"content":"Refer to the Permissions section.","pos":[63,96]}]}]}],"pos":[7411,7508],"yaml":true,"extradata":"MT"},{"content":"The application physical path.","nodes":[{"pos":[0,30],"content":"The application physical path.","nodes":[{"content":"The application physical path.","pos":[0,30]}]}],"pos":[8121,8152],"yaml":true},{"content":"Gets the application logical path.","nodes":[{"pos":[0,34],"content":"Gets the application logical path.","nodes":[{"content":"Gets the application logical path.","pos":[0,34]}]}],"pos":[9315,9350],"yaml":true},{"content":"The application logical path.","nodes":[{"pos":[0,29],"content":"The application logical path.","nodes":[{"content":"The application logical path.","pos":[0,29]}]}],"pos":[9983,10013],"yaml":true},{"content":"Formats the application information.","nodes":[{"pos":[0,36],"content":"Formats the application information.","nodes":[{"content":"Formats the application information.","pos":[0,36]}]}],"pos":[11313,11350],"yaml":true},{"content":"The <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.  \n  \n> [!NOTE]\n>  When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than the <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method. This will avoid overwriting or tampering with sensitive system information.","nodes":[{"pos":[0,338],"content":"The <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.","nodes":[{"content":"The <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.","pos":[0,338],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management.WebApplicationInformation.FormatToString%2A&gt;</ph> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user.","pos":[0,214],"source":"The <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user."},{"content":"It is called internally when the provider invokes one of the <ph id=\"ph1\">&lt;xref:System.Web.Management.WebBaseEvent.ToString%2A&gt;</ph> methods.","pos":[215,338],"source":" It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods."}]}]},{"pos":[346,675],"content":"[!NOTE]\n When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than the <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method. This will avoid overwriting or tampering with sensitive system information.","leadings":["","> "],"nodes":[{"content":" When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than the <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method. This will avoid overwriting or tampering with sensitive system information.","pos":[8,327],"nodes":[{"content":"When formatting your custom event information for display, override the <ph id=\"ph1\">&lt;xref:System.Web.Management.WebApplicationInformation.FormatToString%2A&gt;</ph> method rather than the <ph id=\"ph2\">&lt;xref:System.Web.Management.WebApplicationInformation.ToString%2A&gt;</ph> method.","pos":[1,243],"source":" When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than the <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method."},{"content":"This will avoid overwriting or tampering with sensitive system information.","pos":[244,319]}]}]}],"pos":[11361,12042],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.Management.WebEventFormatter\"></xref> that contains the tab and indentation settings used to format the Web health event information.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.WebEventFormatter\"&gt;&lt;/xref&gt;</ph> that contains the tab and indentation settings used to format the Web health event information.","source":"The <xref href=\"System.Web.Management.WebEventFormatter\"></xref> that contains the tab and indentation settings used to format the Web health event information."}],"pos":[12735,12896],"yaml":true},{"content":"Gets the application machine name.","nodes":[{"pos":[0,34],"content":"Gets the application machine name.","nodes":[{"content":"Gets the application machine name.","pos":[0,34]}]}],"pos":[13992,14027],"yaml":true},{"content":"The name of the machine where the application is running.","nodes":[{"pos":[0,57],"content":"The name of the machine where the application is running.","nodes":[{"content":"The name of the machine where the application is running.","pos":[0,57]}]}],"pos":[14637,14695],"yaml":true},{"content":"Formats event information for display purposes.","nodes":[{"pos":[0,47],"content":"Formats event information for display purposes.","nodes":[{"content":"Formats event information for display purposes.","pos":[0,47]}]}],"pos":[15774,15822],"yaml":true},{"content":"The <xref:System.Web.Management.WebBaseEvent.ToString%2A> method formats event information by calling the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method.  \n  \n> [!NOTE]\n>  When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than this <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method. This will avoid overwriting or tampering with sensitive system information.","nodes":[{"pos":[0,186],"content":"The <xref:System.Web.Management.WebBaseEvent.ToString%2A> method formats event information by calling the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management.WebBaseEvent.ToString%2A&gt;</ph> method formats event information by calling the <ph id=\"ph2\">&lt;xref:System.Web.Management.WebApplicationInformation.FormatToString%2A&gt;</ph> method.","pos":[0,186],"source":"The <xref:System.Web.Management.WebBaseEvent.ToString%2A> method formats event information by calling the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method."}]},{"pos":[194,524],"content":"[!NOTE]\n When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than this <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method. This will avoid overwriting or tampering with sensitive system information.","leadings":["","> "],"nodes":[{"content":" When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than this <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method. This will avoid overwriting or tampering with sensitive system information.","pos":[8,328],"nodes":[{"content":"When formatting your custom event information for display, override the <ph id=\"ph1\">&lt;xref:System.Web.Management.WebApplicationInformation.FormatToString%2A&gt;</ph> method rather than this <ph id=\"ph2\">&lt;xref:System.Web.Management.WebApplicationInformation.ToString%2A&gt;</ph> method.","pos":[1,244],"source":" When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than this <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method."},{"content":"This will avoid overwriting or tampering with sensitive system information.","pos":[245,320]}]}]}],"pos":[15833,16363],"yaml":true,"extradata":"MT"},{"content":"The event information.","nodes":[{"pos":[0,22],"content":"The event information.","nodes":[{"content":"The event information.","pos":[0,22]}]}],"pos":[16667,16690],"yaml":true},{"content":"Gets the application trust level.","nodes":[{"pos":[0,33],"content":"Gets the application trust level.","nodes":[{"content":"Gets the application trust level.","pos":[0,33]}]}],"pos":[17774,17808],"yaml":true},{"content":"This property requires appropriate permissions to be accessed. Refer to the Permissions section.","nodes":[{"pos":[0,96],"content":"This property requires appropriate permissions to be accessed. Refer to the Permissions section.","nodes":[{"content":"This property requires appropriate permissions to be accessed. Refer to the Permissions section.","pos":[0,96],"nodes":[{"content":"This property requires appropriate permissions to be accessed.","pos":[0,62]},{"content":"Refer to the Permissions section.","pos":[63,96]}]}]}],"pos":[17819,17916],"yaml":true,"extradata":"MT"},{"content":"The application trust level.","nodes":[{"pos":[0,28],"content":"The application trust level.","nodes":[{"content":"The application trust level.","pos":[0,28]}]}],"pos":[18529,18558],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.WebApplicationInformation\n  commentId: T:System.Web.Management.WebApplicationInformation\n  id: WebApplicationInformation\n  children:\n  - System.Web.Management.WebApplicationInformation.ApplicationDomain\n  - System.Web.Management.WebApplicationInformation.ApplicationPath\n  - System.Web.Management.WebApplicationInformation.ApplicationVirtualPath\n  - System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  - System.Web.Management.WebApplicationInformation.MachineName\n  - System.Web.Management.WebApplicationInformation.ToString\n  - System.Web.Management.WebApplicationInformation.TrustLevel\n  langs:\n  - csharp\n  name: WebApplicationInformation\n  nameWithType: WebApplicationInformation\n  fullName: System.Web.Management.WebApplicationInformation\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Provides information associated with health events.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management?displayProperty=fullName> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n Instances of the <xref:System.Web.Management.WebApplicationInformation> class contain information that is obtained using any of the types derived from the <xref:System.Web.Management.WebManagementEvent> type.  \\n  \\n Your application needs the appropriate permissions to access protected information provided by this type.  \\n  \\n The following is an excerpt of a configuration file you could use to enable ASP.NET to log error events that contain application information.  \\n  \\n```  \\n<healthMonitoring   \\n  enabled=\\\"true\\\" heartBeatInterval=\\\"0\\\">  \\n  \\n    <rules>  \\n     <add   \\n       name=\\\"All Errors Default\\\"  \\n       eventName=\\\"All Errors\\\"  \\n       provider=\\\"EventLogProvider\\\"  \\n       profile=\\\"Default\\\"  \\n       minInterval=\\\"00:01:00\\\" />  \\n    </rules>  \\n  \\n</healthMonitoring>  \\n```  \\n  \\n> [!NOTE]\\n>  In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom event class, see the example provided in this topic.\"\n  example:\n  - \"The following code example has two parts. The first part is an excerpt of the configuration file that enables ASP.NET to use a custom event. The second shows how to create that custom event by using the <xref:System.Web.Management.WebApplicationInformation> class.  \\n  \\n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \\n  \\n```  \\n<healthMonitoring   \\n  enabled=\\\"true\\\" heartBeatInterval=\\\"0\\\">  \\n  \\n  <eventMappings>   \\n    <add name=\\\"SampleApplicationInformation\\\"   \\n        type=\\\"SamplesAspNet.SampleWebApplicationInformation, webapplicationinformation, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL\\\"/>   \\n  </eventMappings>  \\n  \\n  <rules>   \\n    <add name=\\\"Custom Application Information\\\"  \\n      eventName=\\\"SampleApplicationInformation\\\"   \\n      provider=\\\"EventLogProvider\\\"    \\n      profile=\\\"Default\\\"/>   \\n</rules>  \\n  \\n</healthMonitoring>  \\n```  \\n  \\n [!code-csharp[System.Web.Management.WebApplicationInformation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#1)]\\n [!code-vb[System.Web.Management.WebApplicationInformation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#1)]\"\n  syntax:\n    content: public sealed class WebApplicationInformation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain\n  commentId: P:System.Web.Management.WebApplicationInformation.ApplicationDomain\n  id: ApplicationDomain\n  parent: System.Web.Management.WebApplicationInformation\n  langs:\n  - csharp\n  name: ApplicationDomain\n  nameWithType: WebApplicationInformation.ApplicationDomain\n  fullName: WebApplicationInformation.ApplicationDomain\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the current application domain name.\n  remarks: ''\n  example:\n  - \"The following code example shows how to obtain the application domain name.  \\n  \\n [!code-csharp[System.Web.Management.WebApplicationInformation#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#4)]\\n [!code-vb[System.Web.Management.WebApplicationInformation#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#4)]\"\n  syntax:\n    content: public string ApplicationDomain { get; }\n    return:\n      type: System.String\n      description: Gets the application domain name.\n  overload: System.Web.Management.WebApplicationInformation.ApplicationDomain*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebApplicationInformation.ApplicationPath\n  commentId: P:System.Web.Management.WebApplicationInformation.ApplicationPath\n  id: ApplicationPath\n  parent: System.Web.Management.WebApplicationInformation\n  langs:\n  - csharp\n  name: ApplicationPath\n  nameWithType: WebApplicationInformation.ApplicationPath\n  fullName: WebApplicationInformation.ApplicationPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the application physical path.\n  remarks: This property requires appropriate permissions to be accessed. Refer to the Permissions section.\n  example:\n  - \"The following code example shows how to obtain the application physical path.  \\n  \\n [!code-csharp[System.Web.Management.WebApplicationInformation#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#5)]\\n [!code-vb[System.Web.Management.WebApplicationInformation#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#5)]\"\n  syntax:\n    content: public string ApplicationPath { get; }\n    return:\n      type: System.String\n      description: The application physical path.\n  overload: System.Web.Management.WebApplicationInformation.ApplicationPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath\n  commentId: P:System.Web.Management.WebApplicationInformation.ApplicationVirtualPath\n  id: ApplicationVirtualPath\n  parent: System.Web.Management.WebApplicationInformation\n  langs:\n  - csharp\n  name: ApplicationVirtualPath\n  nameWithType: WebApplicationInformation.ApplicationVirtualPath\n  fullName: WebApplicationInformation.ApplicationVirtualPath\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the application logical path.\n  remarks: ''\n  example:\n  - \"The following code example shows how to obtain the application logical path.  \\n  \\n [!code-csharp[System.Web.Management.WebApplicationInformation#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#6)]\\n [!code-vb[System.Web.Management.WebApplicationInformation#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#6)]\"\n  syntax:\n    content: public string ApplicationVirtualPath { get; }\n    return:\n      type: System.String\n      description: The application logical path.\n  overload: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  commentId: M:System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  id: FormatToString(System.Web.Management.WebEventFormatter)\n  parent: System.Web.Management.WebApplicationInformation\n  langs:\n  - csharp\n  name: FormatToString(WebEventFormatter)\n  nameWithType: WebApplicationInformation.FormatToString(WebEventFormatter)\n  fullName: WebApplicationInformation.FormatToString(WebEventFormatter)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Formats the application information.\n  remarks: \"The <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method provides a uniform format for event information, which is useful if the event data must be logged and later presented to the user. It is called internally when the provider invokes one of the <xref:System.Web.Management.WebBaseEvent.ToString%2A> methods.  \\n  \\n> [!NOTE]\\n>  When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than the <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method. This will avoid overwriting or tampering with sensitive system information.\"\n  example:\n  - \"The following code example shows how to format custom information.  \\n  \\n [!code-csharp[System.Web.Management.WebApplicationInformation#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#9)]\\n [!code-vb[System.Web.Management.WebApplicationInformation#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#9)]\"\n  syntax:\n    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);\n    parameters:\n    - id: formatter\n      type: System.Web.Management.WebEventFormatter\n      description: The <xref href=\"System.Web.Management.WebEventFormatter\"></xref> that contains the tab and indentation settings used to format the Web health event information.\n  overload: System.Web.Management.WebApplicationInformation.FormatToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebApplicationInformation.MachineName\n  commentId: P:System.Web.Management.WebApplicationInformation.MachineName\n  id: MachineName\n  parent: System.Web.Management.WebApplicationInformation\n  langs:\n  - csharp\n  name: MachineName\n  nameWithType: WebApplicationInformation.MachineName\n  fullName: WebApplicationInformation.MachineName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the application machine name.\n  remarks: ''\n  example:\n  - \"The following code example shows how to obtain the machine name.  \\n  \\n [!code-csharp[System.Web.Management.WebApplicationInformation#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#7)]\\n [!code-vb[System.Web.Management.WebApplicationInformation#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#7)]\"\n  syntax:\n    content: public string MachineName { get; }\n    return:\n      type: System.String\n      description: The name of the machine where the application is running.\n  overload: System.Web.Management.WebApplicationInformation.MachineName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebApplicationInformation.ToString\n  commentId: M:System.Web.Management.WebApplicationInformation.ToString\n  id: ToString\n  parent: System.Web.Management.WebApplicationInformation\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: WebApplicationInformation.ToString()\n  fullName: WebApplicationInformation.ToString()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Formats event information for display purposes.\n  remarks: \"The <xref:System.Web.Management.WebBaseEvent.ToString%2A> method formats event information by calling the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method.  \\n  \\n> [!NOTE]\\n>  When formatting your custom event information for display, override the <xref:System.Web.Management.WebApplicationInformation.FormatToString%2A> method rather than this <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method. This will avoid overwriting or tampering with sensitive system information.\"\n  example:\n  - For an example of using the <xref:System.Web.Management.WebApplicationInformation.ToString%2A> method, see <xref:System.Web.Management.WebEventProvider>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The event information.\n  overload: System.Web.Management.WebApplicationInformation.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.WebApplicationInformation.TrustLevel\n  commentId: P:System.Web.Management.WebApplicationInformation.TrustLevel\n  id: TrustLevel\n  parent: System.Web.Management.WebApplicationInformation\n  langs:\n  - csharp\n  name: TrustLevel\n  nameWithType: WebApplicationInformation.TrustLevel\n  fullName: WebApplicationInformation.TrustLevel\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Gets the application trust level.\n  remarks: This property requires appropriate permissions to be accessed. Refer to the Permissions section.\n  example:\n  - \"The following example shows how to obtain the application-trust-level information.  \\n  \\n [!code-csharp[System.Web.Management.WebApplicationInformation#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/CS/webapplicationinformation.cs#8)]\\n [!code-vb[System.Web.Management.WebApplicationInformation#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebApplicationInformation/VB/webapplicationinformation.vb#8)]\"\n  syntax:\n    content: public string TrustLevel { get; }\n    return:\n      type: System.String\n      description: The application trust level.\n  overload: System.Web.Management.WebApplicationInformation.TrustLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: ApplicationDomain\n  nameWithType: WebApplicationInformation.ApplicationDomain\n  fullName: WebApplicationInformation.ApplicationDomain\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.Management.WebApplicationInformation.ApplicationPath\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: ApplicationPath\n  nameWithType: WebApplicationInformation.ApplicationPath\n  fullName: WebApplicationInformation.ApplicationPath\n- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: ApplicationVirtualPath\n  nameWithType: WebApplicationInformation.ApplicationVirtualPath\n  fullName: WebApplicationInformation.ApplicationVirtualPath\n- uid: System.Web.Management.WebApplicationInformation.FormatToString(System.Web.Management.WebEventFormatter)\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: FormatToString(WebEventFormatter)\n  nameWithType: WebApplicationInformation.FormatToString(WebEventFormatter)\n  fullName: WebApplicationInformation.FormatToString(WebEventFormatter)\n- uid: System.Web.Management.WebEventFormatter\n  parent: System.Web.Management\n  isExternal: false\n  name: WebEventFormatter\n  nameWithType: WebEventFormatter\n  fullName: System.Web.Management.WebEventFormatter\n- uid: System.Web.Management.WebApplicationInformation.MachineName\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: MachineName\n  nameWithType: WebApplicationInformation.MachineName\n  fullName: WebApplicationInformation.MachineName\n- uid: System.Web.Management.WebApplicationInformation.ToString\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: ToString()\n  nameWithType: WebApplicationInformation.ToString()\n  fullName: WebApplicationInformation.ToString()\n- uid: System.Web.Management.WebApplicationInformation.TrustLevel\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: TrustLevel\n  nameWithType: WebApplicationInformation.TrustLevel\n  fullName: WebApplicationInformation.TrustLevel\n- uid: System.Web.Management.WebApplicationInformation.ApplicationDomain*\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: ApplicationDomain\n  nameWithType: WebApplicationInformation.ApplicationDomain\n  fullName: WebApplicationInformation.ApplicationDomain\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n- uid: System.Web.Management.WebApplicationInformation.ApplicationPath*\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: ApplicationPath\n  nameWithType: WebApplicationInformation.ApplicationPath\n  fullName: WebApplicationInformation.ApplicationPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n- uid: System.Web.Management.WebApplicationInformation.ApplicationVirtualPath*\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: ApplicationVirtualPath\n  nameWithType: WebApplicationInformation.ApplicationVirtualPath\n  fullName: WebApplicationInformation.ApplicationVirtualPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n- uid: System.Web.Management.WebApplicationInformation.FormatToString*\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: FormatToString\n  nameWithType: WebApplicationInformation.FormatToString\n  fullName: WebApplicationInformation.FormatToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n- uid: System.Web.Management.WebApplicationInformation.MachineName*\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: MachineName\n  nameWithType: WebApplicationInformation.MachineName\n  fullName: WebApplicationInformation.MachineName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n- uid: System.Web.Management.WebApplicationInformation.ToString*\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: ToString\n  nameWithType: WebApplicationInformation.ToString\n  fullName: WebApplicationInformation.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n- uid: System.Web.Management.WebApplicationInformation.TrustLevel*\n  parent: System.Web.Management.WebApplicationInformation\n  isExternal: false\n  name: TrustLevel\n  nameWithType: WebApplicationInformation.TrustLevel\n  fullName: WebApplicationInformation.TrustLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/WebApplicationInformation.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}