{"nodes":[{"content":"Indicates that the attributed property is dependent on the value of another property.","nodes":[{"pos":[0,85],"content":"Indicates that the attributed property is dependent on the value of another property.","nodes":[{"content":"Indicates that the attributed property is dependent on the value of another property.","pos":[0,85]}]}],"pos":[570,656],"yaml":true},{"content":"The <xref:System.Windows.Markup.XamlWriter.Save%2A> method on <xref:System.Windows.Markup.XamlWriter> will process the specified property before processing the property that this attribute is set on.  \n  \n The `name` value applied to this attribute must be the simple unqualified name of a property that exists in the same type. You cannot  specify attached properties as being dependent.  \n  \n When applying this attribute, care must be taken to avoid circular dependencies.  Circular dependencies are only detected when all the properties in the cycle have been written and even so the behavior is nondeterministic.  \n  \n Applying this attribute to a property definition ensures that the dependent properties are processed first in XAML object writing. It is part of the general rules of XAML markup that attribute values applied for a created object should be able to be processed in any order. Usages of <xref:System.Windows.Markup.DependsOnAttribute> specify the exceptional cases of properties on types where a specific order of parsing must be followed for valid object creation.  \n  \n In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DependsOnAttribute> is in the System.Xaml assembly. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  \n  \n## WPF Usage Notes  \n The <xref:System.Windows.Setter.Value%2A> property on the <xref:System.Windows.Setter> class is an example of a property in WPF where the <xref:System.Windows.Markup.DependsOnAttribute> attribute is applied.  <xref:System.Windows.Setter.Value%2A> depends on <xref:System.Windows.Setter.Property%2A> and <xref:System.Windows.Setter.TargetName%2A> being processed first, otherwise there is no way to know what type is supposed to be created for value converter cases.  \n  \n<a name=\"xamlTextUsage_DependsOnAttribute\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,199],"content":"The <xref:System.Windows.Markup.XamlWriter.Save%2A> method on <xref:System.Windows.Markup.XamlWriter> will process the specified property before processing the property that this attribute is set on.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Markup.XamlWriter.Save%2A&gt;</ph> method on <ph id=\"ph2\">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph> will process the specified property before processing the property that this attribute is set on.","pos":[0,199],"source":"The <xref:System.Windows.Markup.XamlWriter.Save%2A> method on <xref:System.Windows.Markup.XamlWriter> will process the specified property before processing the property that this attribute is set on."}]},{"pos":[206,388],"content":"The `name` value applied to this attribute must be the simple unqualified name of a property that exists in the same type. You cannot  specify attached properties as being dependent.","nodes":[{"content":"The <ph id=\"ph1\">`name`</ph> value applied to this attribute must be the simple unqualified name of a property that exists in the same type.","pos":[0,122],"source":"The `name` value applied to this attribute must be the simple unqualified name of a property that exists in the same type."},{"content":"You cannot  specify attached properties as being dependent.","pos":[123,182]}]},{"pos":[395,617],"content":"When applying this attribute, care must be taken to avoid circular dependencies.  Circular dependencies are only detected when all the properties in the cycle have been written and even so the behavior is nondeterministic.","nodes":[{"content":"When applying this attribute, care must be taken to avoid circular dependencies.  Circular dependencies are only detected when all the properties in the cycle have been written and even so the behavior is nondeterministic.","pos":[0,222],"nodes":[{"content":"When applying this attribute, care must be taken to avoid circular dependencies.","pos":[0,80]},{"content":"Circular dependencies are only detected when all the properties in the cycle have been written and even so the behavior is nondeterministic.","pos":[82,222]}]}]},{"pos":[624,1086],"content":"Applying this attribute to a property definition ensures that the dependent properties are processed first in XAML object writing. It is part of the general rules of XAML markup that attribute values applied for a created object should be able to be processed in any order. Usages of <xref:System.Windows.Markup.DependsOnAttribute> specify the exceptional cases of properties on types where a specific order of parsing must be followed for valid object creation.","nodes":[{"content":"Applying this attribute to a property definition ensures that the dependent properties are processed first in XAML object writing. It is part of the general rules of XAML markup that attribute values applied for a created object should be able to be processed in any order. Usages of <xref:System.Windows.Markup.DependsOnAttribute> specify the exceptional cases of properties on types where a specific order of parsing must be followed for valid object creation.","pos":[0,462],"nodes":[{"content":"Applying this attribute to a property definition ensures that the dependent properties are processed first in XAML object writing.","pos":[0,130]},{"content":"It is part of the general rules of XAML markup that attribute values applied for a created object should be able to be processed in any order.","pos":[131,273]},{"content":"Usages of <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> specify the exceptional cases of properties on types where a specific order of parsing must be followed for valid object creation.","pos":[274,462],"source":" Usages of <xref:System.Windows.Markup.DependsOnAttribute> specify the exceptional cases of properties on types where a specific order of parsing must be followed for valid object creation."}]}]},{"pos":[1093,1479],"content":"In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DependsOnAttribute> is in the System.Xaml assembly. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).","nodes":[{"content":"In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.","pos":[0,104]},{"content":"In <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> is in the System.Xaml assembly.","pos":[105,244],"source":" In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DependsOnAttribute> is in the System.Xaml assembly."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Types Migrated from WPF to System.Xaml<ept id=\"p1\">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.","pos":[245,386],"source":" For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)."}]},{"pos":[1488,1503],"content":"WPF Usage Notes","linkify":"WPF Usage Notes","nodes":[{"content":"WPF Usage Notes","pos":[0,15]}]},{"pos":[1507,1972],"content":"The <xref:System.Windows.Setter.Value%2A> property on the <xref:System.Windows.Setter> class is an example of a property in WPF where the <xref:System.Windows.Markup.DependsOnAttribute> attribute is applied.  <xref:System.Windows.Setter.Value%2A> depends on <xref:System.Windows.Setter.Property%2A> and <xref:System.Windows.Setter.TargetName%2A> being processed first, otherwise there is no way to know what type is supposed to be created for value converter cases.","nodes":[{"content":"The <xref:System.Windows.Setter.Value%2A> property on the <xref:System.Windows.Setter> class is an example of a property in WPF where the <xref:System.Windows.Markup.DependsOnAttribute> attribute is applied.  <xref:System.Windows.Setter.Value%2A> depends on <xref:System.Windows.Setter.Property%2A> and <xref:System.Windows.Setter.TargetName%2A> being processed first, otherwise there is no way to know what type is supposed to be created for value converter cases.","pos":[0,465],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph> property on the <ph id=\"ph2\">&lt;xref:System.Windows.Setter&gt;</ph> class is an example of a property in WPF where the <ph id=\"ph3\">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> attribute is applied.","pos":[0,207],"source":"The <xref:System.Windows.Setter.Value%2A> property on the <xref:System.Windows.Setter> class is an example of a property in WPF where the <xref:System.Windows.Markup.DependsOnAttribute> attribute is applied."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Setter.Value%2A&gt;</ph> depends on <ph id=\"ph2\">&lt;xref:System.Windows.Setter.Property%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Setter.TargetName%2A&gt;</ph> being processed first, otherwise there is no way to know what type is supposed to be created for value converter cases.","pos":[209,465],"source":"  <xref:System.Windows.Setter.Value%2A> depends on <xref:System.Windows.Setter.Property%2A> and <xref:System.Windows.Setter.TargetName%2A> being processed first, otherwise there is no way to know what type is supposed to be created for value converter cases."}]}]},{"pos":[2032,2047],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[667,2733],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.DependsOnAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref> class."}],"pos":[7665,7768],"yaml":true},{"content":"The property that the property associated with this <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref> depends on.","nodes":[{"pos":[0,125],"content":"The property that the property associated with this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.DependsOnAttribute\"&gt;&lt;/xref&gt;</ph> depends on.","source":"The property that the property associated with this <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref> depends on."}],"pos":[7908,8034],"yaml":true},{"content":"Gets the name of the related property declared in this <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref>.","nodes":[{"pos":[0,117],"content":"Gets the name of the related property declared in this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.DependsOnAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the name of the related property declared in this <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref>."}],"pos":[8985,9103],"yaml":true},{"content":"The name of the related property.","nodes":[{"pos":[0,33],"content":"The name of the related property.","nodes":[{"content":"The name of the related property.","pos":[0,33]}]}],"pos":[9211,9245],"yaml":true},{"content":"Gets a unique identifier for this <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets a unique identifier for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Markup.DependsOnAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a unique identifier for this <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref>."}],"pos":[10207,10304],"yaml":true},{"content":"This is a generated value that uses an override behavior in order to permit multiple attributes with the same <xref:System.Windows.Markup.DependsOnAttribute.Name%2A> to be applied. So long as dependencies are not circular or otherwise ambiguous, multiple <xref:System.Windows.Markup.DependsOnAttribute> references to the same property name are supported.","nodes":[{"pos":[0,354],"content":"This is a generated value that uses an override behavior in order to permit multiple attributes with the same <xref:System.Windows.Markup.DependsOnAttribute.Name%2A> to be applied. So long as dependencies are not circular or otherwise ambiguous, multiple <xref:System.Windows.Markup.DependsOnAttribute> references to the same property name are supported.","nodes":[{"content":"This is a generated value that uses an override behavior in order to permit multiple attributes with the same <xref:System.Windows.Markup.DependsOnAttribute.Name%2A> to be applied. So long as dependencies are not circular or otherwise ambiguous, multiple <xref:System.Windows.Markup.DependsOnAttribute> references to the same property name are supported.","pos":[0,354],"nodes":[{"content":"This is a generated value that uses an override behavior in order to permit multiple attributes with the same <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DependsOnAttribute.Name%2A&gt;</ph> to be applied.","pos":[0,180],"source":"This is a generated value that uses an override behavior in order to permit multiple attributes with the same <xref:System.Windows.Markup.DependsOnAttribute.Name%2A> to be applied."},{"content":"So long as dependencies are not circular or otherwise ambiguous, multiple <ph id=\"ph1\">&lt;xref:System.Windows.Markup.DependsOnAttribute&gt;</ph> references to the same property name are supported.","pos":[181,354],"source":" So long as dependencies are not circular or otherwise ambiguous, multiple <xref:System.Windows.Markup.DependsOnAttribute> references to the same property name are supported."}]}]}],"pos":[10315,10670],"yaml":true,"extradata":"MT"},{"content":"The unique identifier.","nodes":[{"pos":[0,22],"content":"The unique identifier.","nodes":[{"content":"The unique identifier.","pos":[0,22]}]}],"pos":[10789,10812],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.DependsOnAttribute\n  commentId: T:System.Windows.Markup.DependsOnAttribute\n  id: DependsOnAttribute\n  children:\n  - System.Windows.Markup.DependsOnAttribute.#ctor(System.String)\n  - System.Windows.Markup.DependsOnAttribute.Name\n  - System.Windows.Markup.DependsOnAttribute.TypeId\n  langs:\n  - csharp\n  name: DependsOnAttribute\n  nameWithType: DependsOnAttribute\n  fullName: System.Windows.Markup.DependsOnAttribute\n  type: Class\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Indicates that the attributed property is dependent on the value of another property.\n  remarks: \"The <xref:System.Windows.Markup.XamlWriter.Save%2A> method on <xref:System.Windows.Markup.XamlWriter> will process the specified property before processing the property that this attribute is set on.  \\n  \\n The `name` value applied to this attribute must be the simple unqualified name of a property that exists in the same type. You cannot  specify attached properties as being dependent.  \\n  \\n When applying this attribute, care must be taken to avoid circular dependencies.  Circular dependencies are only detected when all the properties in the cycle have been written and even so the behavior is nondeterministic.  \\n  \\n Applying this attribute to a property definition ensures that the dependent properties are processed first in XAML object writing. It is part of the general rules of XAML markup that attribute values applied for a created object should be able to be processed in any order. Usages of <xref:System.Windows.Markup.DependsOnAttribute> specify the exceptional cases of properties on types where a specific order of parsing must be followed for valid object creation.  \\n  \\n In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase. In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.DependsOnAttribute> is in the System.Xaml assembly. For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  \\n  \\n## WPF Usage Notes  \\n The <xref:System.Windows.Setter.Value%2A> property on the <xref:System.Windows.Setter> class is an example of a property in WPF where the <xref:System.Windows.Markup.DependsOnAttribute> attribute is applied.  <xref:System.Windows.Setter.Value%2A> depends on <xref:System.Windows.Setter.Property%2A> and <xref:System.Windows.Setter.TargetName%2A> being processed first, otherwise there is no way to know what type is supposed to be created for value converter cases.  \\n  \\n<a name=\\\"xamlTextUsage_DependsOnAttribute\\\"></a>   \\n## XAML Text Usage\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true)]\n\n      public sealed class DependsOnAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DependsOnAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DependsOnAttribute.#ctor(System.String)\n  commentId: M:System.Windows.Markup.DependsOnAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Windows.Markup.DependsOnAttribute\n  langs:\n  - csharp\n  name: DependsOnAttribute(String)\n  nameWithType: DependsOnAttribute.DependsOnAttribute(String)\n  fullName: DependsOnAttribute.DependsOnAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref> class.\n  syntax:\n    content: public DependsOnAttribute (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The property that the property associated with this <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref> depends on.\n  overload: System.Windows.Markup.DependsOnAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DependsOnAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DependsOnAttribute.Name\n  commentId: P:System.Windows.Markup.DependsOnAttribute.Name\n  id: Name\n  parent: System.Windows.Markup.DependsOnAttribute\n  langs:\n  - csharp\n  name: Name\n  nameWithType: DependsOnAttribute.Name\n  fullName: DependsOnAttribute.Name\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Gets the name of the related property declared in this <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref>.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: The name of the related property.\n  overload: System.Windows.Markup.DependsOnAttribute.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DependsOnAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\n- uid: System.Windows.Markup.DependsOnAttribute.TypeId\n  commentId: P:System.Windows.Markup.DependsOnAttribute.TypeId\n  id: TypeId\n  parent: System.Windows.Markup.DependsOnAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: DependsOnAttribute.TypeId\n  fullName: DependsOnAttribute.TypeId\n  type: Property\n  assemblies:\n  - System.Xaml\n  namespace: System.Windows.Markup\n  summary: Gets a unique identifier for this <xref href=\"System.Windows.Markup.DependsOnAttribute\"></xref>.\n  remarks: This is a generated value that uses an override behavior in order to permit multiple attributes with the same <xref:System.Windows.Markup.DependsOnAttribute.Name%2A> to be applied. So long as dependencies are not circular or otherwise ambiguous, multiple <xref:System.Windows.Markup.DependsOnAttribute> references to the same property name are supported.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: The unique identifier.\n  overload: System.Windows.Markup.DependsOnAttribute.TypeId*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DependsOnAttribute.xml\n  ms.technology:\n  - dotnet-wpf\n  manager: martinek\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Windows.Markup.DependsOnAttribute.#ctor(System.String)\n  parent: System.Windows.Markup.DependsOnAttribute\n  isExternal: false\n  name: DependsOnAttribute(String)\n  nameWithType: DependsOnAttribute.DependsOnAttribute(String)\n  fullName: DependsOnAttribute.DependsOnAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.DependsOnAttribute.Name\n  parent: System.Windows.Markup.DependsOnAttribute\n  isExternal: false\n  name: Name\n  nameWithType: DependsOnAttribute.Name\n  fullName: DependsOnAttribute.Name\n- uid: System.Windows.Markup.DependsOnAttribute.TypeId\n  parent: System.Windows.Markup.DependsOnAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: DependsOnAttribute.TypeId\n  fullName: DependsOnAttribute.TypeId\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Markup.DependsOnAttribute.#ctor*\n  parent: System.Windows.Markup.DependsOnAttribute\n  isExternal: false\n  name: DependsOnAttribute\n  nameWithType: DependsOnAttribute.DependsOnAttribute\n  fullName: DependsOnAttribute.DependsOnAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DependsOnAttribute.xml\n- uid: System.Windows.Markup.DependsOnAttribute.Name*\n  parent: System.Windows.Markup.DependsOnAttribute\n  isExternal: false\n  name: Name\n  nameWithType: DependsOnAttribute.Name\n  fullName: DependsOnAttribute.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DependsOnAttribute.xml\n- uid: System.Windows.Markup.DependsOnAttribute.TypeId*\n  parent: System.Windows.Markup.DependsOnAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: DependsOnAttribute.TypeId\n  fullName: DependsOnAttribute.TypeId\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Markup/DependsOnAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}