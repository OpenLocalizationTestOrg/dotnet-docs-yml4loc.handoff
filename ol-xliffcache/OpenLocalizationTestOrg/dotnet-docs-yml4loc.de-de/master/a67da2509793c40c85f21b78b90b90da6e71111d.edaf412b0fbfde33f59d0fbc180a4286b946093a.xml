{"nodes":[{"content":"Represents a collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects.","nodes":[{"pos":[0,82],"content":"Represents a collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> objects.","source":"Represents a collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects."}],"pos":[3817,3900],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection> enables you to perform functions such as hit testing, clipping, and erasing strokes. The <xref:System.Windows.Controls.InkCanvas> control performs many of these functions, but if you need more control than the <xref:System.Windows.Controls.InkCanvas> provides, the <xref:System.Windows.Ink.StrokeCollection> offers more options.  \n  \n The following table lists where to learn about managing digital ink on a custom control.  \n  \n|To do this…|See this article|  \n|-----------------|----------------------|  \n|Create a control that collects digital ink|[Creating an Ink Input Control](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)|  \n|Create a control that enables the user to select ink|[How to: Select Ink from a Custom Control](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)|  \n|Create a control that enables the user to point-erase ink|[How to: Erase Ink on a Custom Control](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)|  \n  \n<a name=\"xamlAttributeUsage_StrokeCollection\"></a>   \n## XAML Attribute Usage  \n  \n```  \n<object StrokeCollection=\"isfString\"/>  \n```  \n  \n<a name=\"xamlObjectElementUsage_StrokeCollection\"></a>   \n## XAML Object Element Usage  \n  \n```  \n<object>isfString</object>  \n```  \n  \n<a name=\"xamlValues_StrokeCollection\"></a>   \n## XAML Values  \n  \n|Term|Definition|  \n|----------|----------------|  \n|`isfString`|A string that represents the stroke in base-64, encoded Ink Serialized Format (ISF).|","nodes":[{"pos":[0,375],"content":"The <xref:System.Windows.Ink.StrokeCollection> enables you to perform functions such as hit testing, clipping, and erasing strokes. The <xref:System.Windows.Controls.InkCanvas> control performs many of these functions, but if you need more control than the <xref:System.Windows.Controls.InkCanvas> provides, the <xref:System.Windows.Ink.StrokeCollection> offers more options.","nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection> enables you to perform functions such as hit testing, clipping, and erasing strokes. The <xref:System.Windows.Controls.InkCanvas> control performs many of these functions, but if you need more control than the <xref:System.Windows.Controls.InkCanvas> provides, the <xref:System.Windows.Ink.StrokeCollection> offers more options.","pos":[0,375],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> enables you to perform functions such as hit testing, clipping, and erasing strokes.","pos":[0,131],"source":"The <xref:System.Windows.Ink.StrokeCollection> enables you to perform functions such as hit testing, clipping, and erasing strokes."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> control performs many of these functions, but if you need more control than the <ph id=\"ph2\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> provides, the <ph id=\"ph3\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> offers more options.","pos":[132,375],"source":" The <xref:System.Windows.Controls.InkCanvas> control performs many of these functions, but if you need more control than the <xref:System.Windows.Controls.InkCanvas> provides, the <xref:System.Windows.Ink.StrokeCollection> offers more options."}]}]},{"pos":[382,470],"content":"The following table lists where to learn about managing digital ink on a custom control.","nodes":[{"content":"The following table lists where to learn about managing digital ink on a custom control.","pos":[0,88]}]},{"pos":[477,488],"content":"To do this…","nodes":[{"content":"To do this…","pos":[0,11]}]},{"pos":[489,505],"content":"See this article","nodes":[{"content":"See this article","pos":[0,16]}]},{"pos":[555,597],"content":"Create a control that collects digital ink","nodes":[{"content":"Create a control that collects digital ink","pos":[0,42]}]},{"pos":[598,693],"content":"<bpt id=\"p1\">[</bpt>Creating an Ink Input Control<ept id=\"p1\">](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)</ept>","source":"[Creating an Ink Input Control](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)"},{"pos":[698,750],"content":"Create a control that enables the user to select ink","nodes":[{"content":"Create a control that enables the user to select ink","pos":[0,52]}]},{"pos":[751,867],"content":"<bpt id=\"p1\">[</bpt>How to: Select Ink from a Custom Control<ept id=\"p1\">](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)</ept>","source":"[How to: Select Ink from a Custom Control](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)"},{"pos":[872,929],"content":"Create a control that enables the user to point-erase ink","nodes":[{"content":"Create a control that enables the user to point-erase ink","pos":[0,57]}]},{"pos":[930,1040],"content":"<bpt id=\"p1\">[</bpt>How to: Erase Ink on a Custom Control<ept id=\"p1\">](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)</ept>","source":"[How to: Erase Ink on a Custom Control](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)"},{"pos":[1104,1124],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[1247,1272],"content":"XAML Object Element Usage","linkify":"XAML Object Element Usage","nodes":[{"content":"XAML Object Element Usage","pos":[0,25]}]},{"pos":[1371,1382],"content":"XAML Values","linkify":"XAML Values","nodes":[{"content":"XAML Values","pos":[0,11]}]},{"pos":[1389,1393],"content":"Term","nodes":[{"content":"Term","pos":[0,4]}]},{"pos":[1394,1404],"content":"Definition","nodes":[{"content":"Definition","pos":[0,10]}]},{"pos":[1453,1537],"content":"A string that represents the stroke in base-64, encoded Ink Serialized Format (ISF).","nodes":[{"content":"A string that represents the stroke in base-64, encoded Ink Serialized Format (ISF).","pos":[0,84]}]}],"pos":[3911,5489],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class."}],"pos":[37048,37146],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class that contains the specified strokes.","nodes":[{"pos":[0,133],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> class that contains the specified strokes.","source":"Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class that contains the specified strokes."}],"pos":[38487,38621],"yaml":true},{"content":"The strokes to add to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,83],"content":"The strokes to add to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The strokes to add to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[38876,38960],"yaml":true},{"content":"Initializes a <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> from the specified <xref href=\"System.IO.Stream\"></xref> of Ink Serialized Format (ISF).","nodes":[{"pos":[0,159],"content":"Initializes a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> from the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> of Ink Serialized Format (ISF).","source":"Initializes a <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> from the specified <xref href=\"System.IO.Stream\"></xref> of Ink Serialized Format (ISF)."}],"pos":[40023,40183],"yaml":true},{"content":"A stream that contains ink data.","nodes":[{"pos":[0,32],"content":"A stream that contains ink data.","nodes":[{"content":"A stream that contains ink data.","pos":[0,32]}]}],"pos":[41141,41174],"yaml":true},{"content":"Adds the specified strokes to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,91],"content":"Adds the specified strokes to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Adds the specified strokes to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[42294,42386],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.Add%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.","nodes":[{"pos":[0,136],"content":"The <xref:System.Windows.Ink.StrokeCollection.Add%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Add%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event.","pos":[0,136],"source":"The <xref:System.Windows.Ink.StrokeCollection.Add%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event."}]}],"pos":[42397,42534],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to add to the collection.","nodes":[{"pos":[0,86],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> to add to the collection.","source":"The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to add to the collection."}],"pos":[43439,43526],"yaml":true},{"content":"A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokes</code> is already a member of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,157],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">strokes</ph><ept id=\"p1\">&lt;/code&gt;</ept> is already a member of the <ph id=\"ph3\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokes</code> is already a member of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[43687,43845],"yaml":true},{"content":"<code>strokes</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;strokes&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>strokes</code> is `null`."}],"pos":[43947,43979],"yaml":true},{"content":"Adds a custom property to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,87],"content":"Adds a custom property to the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Adds a custom property to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[45057,45145],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> method enables you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","nodes":[{"pos":[0,248],"content":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> method enables you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> method enables you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","pos":[0,248],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> method enables you to add custom properties to a <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.","pos":[0,158],"source":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> method enables you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>."},{"content":"You can then include extra information with a <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.","pos":[159,248],"source":" You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>."}]}]}],"pos":[45156,45405],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Guid\"></xref> to associate with the custom property.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> to associate with the custom property.","source":"The <xref href=\"System.Guid\"></xref> to associate with the custom property."}],"pos":[46438,46514],"yaml":true},{"content":"The value of the custom property. <code>propertyData</code> must be of type <xref href=\"System.Char\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.UInt32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.UInt64\"></xref>, <xref href=\"System.Single\"></xref>, <xref href=\"System.Double\"></xref>, <xref href=\"System.DateTime\"></xref>, <xref href=\"System.Boolean\"></xref>, <xref href=\"System.String\"></xref>, <xref href=\"System.Decimal\"></xref> or an array of these data types, except <xref href=\"System.String\"></xref>, which is not allowed.","nodes":[{"pos":[0,673],"content":"The value of the custom property. <code>propertyData</code> must be of type <xref href=\"System.Char\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.UInt32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.UInt64\"></xref>, <xref href=\"System.Single\"></xref>, <xref href=\"System.Double\"></xref>, <xref href=\"System.DateTime\"></xref>, <xref href=\"System.Boolean\"></xref>, <xref href=\"System.String\"></xref>, <xref href=\"System.Decimal\"></xref> or an array of these data types, except <xref href=\"System.String\"></xref>, which is not allowed.","nodes":[{"content":"The value of the custom property.","pos":[0,33]},{"content":"<bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">propertyData</ph><ept id=\"p1\">&lt;/code&gt;</ept> must be of type <ph id=\"ph2\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph4\">&lt;xref href=\"System.Int16\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph5\">&lt;xref href=\"System.UInt16\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph6\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph7\">&lt;xref href=\"System.UInt32\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph8\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph9\">&lt;xref href=\"System.UInt64\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph10\">&lt;xref href=\"System.Single\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph11\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph12\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph13\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph14\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph15\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> or an array of these data types, except <ph id=\"ph16\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>, which is not allowed.","pos":[34,673],"source":"<code>propertyData</code> must be of type <xref href=\"System.Char\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.UInt32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.UInt64\"></xref>, <xref href=\"System.Single\"></xref>, <xref href=\"System.Double\"></xref>, <xref href=\"System.DateTime\"></xref>, <xref href=\"System.Boolean\"></xref>, <xref href=\"System.String\"></xref>, <xref href=\"System.Decimal\"></xref> or an array of these data types, except <xref href=\"System.String\"></xref>, which is not allowed."}]}],"pos":[46582,47256],"yaml":true},{"content":"<code>propertyDataId</code> is an empty <xref href=\"System.Guid\"></xref>.  \n  \n -or-  \n  \n <code>propertyData</code> is not one of the allowed data types listed in the `Parameters` section.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;propertyDataId&lt;/code&gt;</ph> is an empty <ph id=\"ph2\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph>.","source":"<code>propertyDataId</code> is an empty <xref href=\"System.Guid\"></xref>."},{"pos":[80,84],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[91,189],"content":"<ph id=\"ph1\">&lt;code&gt;propertyData&lt;/code&gt;</ph> is not one of the allowed data types listed in the <ph id=\"ph2\">`Parameters`</ph> section.","source":"<code>propertyData</code> is not one of the allowed data types listed in the `Parameters` section."}],"pos":[47429,47627],"yaml":true},{"content":"Clears all strokes from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,85],"content":"Clears all strokes from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Clears all strokes from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[48558,48644],"yaml":true},{"content":"Removes all strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that are outside the bounds of the specified <xref href=\"System.Drawing.Point\"></xref> array.","nodes":[{"pos":[0,177],"content":"Removes all strokes in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> that are outside the bounds of the specified <ph id=\"ph2\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> array.","source":"Removes all strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that are outside the bounds of the specified <xref href=\"System.Drawing.Point\"></xref> array."}],"pos":[49944,50122],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.Clip%2A> method connects the first and last points in `lassoPoints` to create the lasso.  \n  \n The <xref:System.Windows.Ink.StrokeCollection.Clip%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it clips.","nodes":[{"pos":[0,134],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Clip%2A&gt;</ph> method connects the first and last points in <ph id=\"ph2\">`lassoPoints`</ph> to create the lasso.","source":"The <xref:System.Windows.Ink.StrokeCollection.Clip%2A> method connects the first and last points in `lassoPoints` to create the lasso."},{"pos":[141,329],"content":"The <xref:System.Windows.Ink.StrokeCollection.Clip%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it clips.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Clip%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it clips.","pos":[0,188],"source":"The <xref:System.Windows.Ink.StrokeCollection.Clip%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it clips."}]}],"pos":[50133,50467],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be clipped.","nodes":[{"pos":[0,97],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that specifies the area to be clipped.","source":"An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be clipped."}],"pos":[51244,51342],"yaml":true},{"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not extend beyond the specified rectangle.","nodes":[{"pos":[0,132],"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not extend beyond the specified rectangle.","nodes":[{"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not extend beyond the specified rectangle.","pos":[0,132]}]}],"pos":[52383,52516],"yaml":true},{"content":"All strokes that are entirely outside the specified rectangle are removed.","nodes":[{"pos":[0,74],"content":"All strokes that are entirely outside the specified rectangle are removed.","nodes":[{"content":"All strokes that are entirely outside the specified rectangle are removed.","pos":[0,74]}]}],"pos":[52527,52602],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be clipped.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> that specifies the area to be clipped.","source":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be clipped."}],"pos":[53295,53377],"yaml":true},{"content":"Copies the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,68],"content":"Copies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Copies the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[54327,54396],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.Clone%2A> method copies each <xref:System.Windows.Ink.Stroke> in the collection and the new <xref:System.Windows.Ink.StrokeCollection> references the new strokes.","nodes":[{"pos":[0,208],"content":"The <xref:System.Windows.Ink.StrokeCollection.Clone%2A> method copies each <xref:System.Windows.Ink.Stroke> in the collection and the new <xref:System.Windows.Ink.StrokeCollection> references the new strokes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Clone%2A&gt;</ph> method copies each <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> in the collection and the new <ph id=\"ph3\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> references the new strokes.","pos":[0,208],"source":"The <xref:System.Windows.Ink.StrokeCollection.Clone%2A> method copies each <xref:System.Windows.Ink.Stroke> in the collection and the new <xref:System.Windows.Ink.StrokeCollection> references the new strokes."}]}],"pos":[54407,54616],"yaml":true,"extradata":"MT"},{"content":"A copy of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,71],"content":"A copy of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"A copy of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[55516,55588],"yaml":true},{"content":"Returns whether the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,124],"content":"Returns whether the specified custom property identifier is in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns whether the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[56702,56827],"yaml":true},{"content":"The <xref href=\"System.Guid\"></xref> to locate in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> to locate in the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Guid\"></xref> to locate in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[57696,57808],"yaml":true},{"content":"`true` if the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">`true`</ph> if the specified custom property identifier is in the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, `false`."}],"pos":[57866,58007],"yaml":true},{"content":"Draws the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,82],"content":"Draws the strokes in the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Draws the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[59120,59203],"yaml":true},{"content":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> on which to draw the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,139],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.DrawingContext\"&gt;&lt;/xref&gt;</ph> on which to draw the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Windows.Media.DrawingContext\"></xref> on which to draw the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[60019,60159],"yaml":true},{"content":"Removes the ink that is within the bounds of the specified area.","nodes":[{"pos":[0,64],"content":"Removes the ink that is within the bounds of the specified area.","nodes":[{"content":"Removes the ink that is within the bounds of the specified area.","pos":[0,64]}]}],"pos":[61371,61436],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method connects the first and last points in `lassoPoints` to create the lasso.  \n  \n The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  \n  \n The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","nodes":[{"pos":[0,135],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method connects the first and last points in <ph id=\"ph2\">`lassoPoints`</ph> to create the lasso.","source":"The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method connects the first and last points in `lassoPoints` to create the lasso."},{"pos":[142,482],"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.","nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.","pos":[0,340],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> might contain new strokes after the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method is called.","pos":[0,152],"source":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called."},{"content":"For example, if the specified area is through the middle of a <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, the erase method removes that <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> and creates two new strokes.","pos":[153,340],"source":" For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes."}]}]},{"pos":[489,679],"content":"The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it erases.","pos":[0,190],"source":"The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases."}]}],"pos":[61447,62133],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be erased.","nodes":[{"pos":[0,96],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that specifies the area to be erased.","source":"An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be erased."}],"pos":[62904,63001],"yaml":true},{"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not enter the bounds of the specified rectangle.","nodes":[{"pos":[0,138],"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not enter the bounds of the specified rectangle.","nodes":[{"content":"Replaces all strokes that are clipped by the specified rectangle with new strokes that do not enter the bounds of the specified rectangle.","pos":[0,138]}]}],"pos":[64049,64188],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  All strokes that are entirely inside the specified rectangle are removed.  \n  \n The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","nodes":[{"pos":[0,415],"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  All strokes that are entirely inside the specified rectangle are removed.","nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  All strokes that are entirely inside the specified rectangle are removed.","pos":[0,415],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> might contain new strokes after the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method is called.","pos":[0,152],"source":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called."},{"content":"For example, if the specified area is through the middle of a <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, the erase method removes that <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> and creates two new strokes.","pos":[153,340],"source":" For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes."},{"content":"All strokes that are entirely inside the specified rectangle are removed.","pos":[342,415]}]}]},{"pos":[422,612],"content":"The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it erases.","pos":[0,190],"source":"The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases."}]}],"pos":[64199,64816],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be erased.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> that specifies the area to be erased.","source":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be erased."}],"pos":[65489,65570],"yaml":true},{"content":"Replaces all strokes that are clipped by the region created by the specified <xref href=\"System.Windows.Ink.StylusShape\"></xref> along the specified path with new Strokes that are not clipped by the region.","nodes":[{"pos":[0,206],"content":"Replaces all strokes that are clipped by the region created by the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;&lt;/xref&gt;</ph> along the specified path with new Strokes that are not clipped by the region.","source":"Replaces all strokes that are clipped by the region created by the specified <xref href=\"System.Windows.Ink.StylusShape\"></xref> along the specified path with new Strokes that are not clipped by the region."}],"pos":[66915,67122],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if `path` intersects the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  \n  \n The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","nodes":[{"pos":[0,328],"content":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if `path` intersects the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> might contain new strokes after the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method is called.","pos":[0,152],"source":"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called."},{"content":"For example, if <ph id=\"ph1\">`path`</ph> intersects the middle of a <ph id=\"ph2\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>, the erase method removes that <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> and creates two new strokes.","pos":[153,328],"source":" For example, if `path` intersects the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes."}]},{"pos":[335,525],"content":"The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Erase%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it erases.","pos":[0,190],"source":"The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases."}]}],"pos":[67133,67663],"yaml":true,"extradata":"MT"},{"content":"An array of type <xref href=\"System.Windows.Point\"></xref> that specifies the path to be erased.","nodes":[{"pos":[0,96],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Windows.Point\"&gt;&lt;/xref&gt;</ph> that specifies the path to be erased.","source":"An array of type <xref href=\"System.Windows.Point\"></xref> that specifies the path to be erased."}],"pos":[68450,68547],"yaml":true},{"content":"A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of the eraser.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;&lt;/xref&gt;</ph> that specifies the shape of the eraser.","source":"A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of the eraser."}],"pos":[68631,68725],"yaml":true},{"content":"Returns the bounds of the strokes in the collection.","nodes":[{"pos":[0,52],"content":"Returns the bounds of the strokes in the collection.","nodes":[{"content":"Returns the bounds of the strokes in the collection.","pos":[0,52]}]}],"pos":[69700,69753],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A> method returns a <xref:System.Windows.Rect> that takes the appearance of the rendered <xref:System.Windows.Ink.Stroke>. For example, if <xref:System.Windows.Ink.Stroke> is 10 display independent pixels (DIP) wide, the <xref:System.Windows.Rect> includes the entire width of the <xref:System.Windows.Ink.Stroke>.","nodes":[{"pos":[0,371],"content":"The <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A> method returns a <xref:System.Windows.Rect> that takes the appearance of the rendered <xref:System.Windows.Ink.Stroke>. For example, if <xref:System.Windows.Ink.Stroke> is 10 display independent pixels (DIP) wide, the <xref:System.Windows.Rect> includes the entire width of the <xref:System.Windows.Ink.Stroke>.","nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A> method returns a <xref:System.Windows.Rect> that takes the appearance of the rendered <xref:System.Windows.Ink.Stroke>. For example, if <xref:System.Windows.Ink.Stroke> is 10 display independent pixels (DIP) wide, the <xref:System.Windows.Rect> includes the entire width of the <xref:System.Windows.Ink.Stroke>.","pos":[0,371],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.GetBounds%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Windows.Rect&gt;</ph> that takes the appearance of the rendered <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.","pos":[0,179],"source":"The <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A> method returns a <xref:System.Windows.Rect> that takes the appearance of the rendered <xref:System.Windows.Ink.Stroke>."},{"content":"For example, if <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> is 10 display independent pixels (DIP) wide, the <ph id=\"ph2\">&lt;xref:System.Windows.Rect&gt;</ph> includes the entire width of the <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.","pos":[180,371],"source":" For example, if <xref:System.Windows.Ink.Stroke> is 10 display independent pixels (DIP) wide, the <xref:System.Windows.Rect> includes the entire width of the <xref:System.Windows.Ink.Stroke>."}]}]}],"pos":[69764,70136],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Rect\"></xref> that contains the bounds of the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,147],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> that contains the bounds of the strokes in the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Windows.Rect\"></xref> that contains the bounds of the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[70824,70972],"yaml":true},{"content":"Creates an <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a lasso (freehand) path.","nodes":[{"pos":[0,182],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"&gt;&lt;/xref&gt;</ph> that hit tests the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> with a lasso (freehand) path.","source":"Creates an <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a lasso (freehand) path."}],"pos":[72144,72327],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalLassoHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the lasso path surrounds it. This is useful for implementing features, such as the ability to select a stroke with a lasso tool. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalLassoHitTester> to implement the lasso selection tool.","nodes":[{"pos":[0,488],"content":"The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalLassoHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the lasso path surrounds it. This is useful for implementing features, such as the ability to select a stroke with a lasso tool. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalLassoHitTester> to implement the lasso selection tool.","nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalLassoHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the lasso path surrounds it. This is useful for implementing features, such as the ability to select a stroke with a lasso tool. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalLassoHitTester> to implement the lasso selection tool.","pos":[0,488],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A&gt;</ph> method returns an <ph id=\"ph2\">&lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt;</ph> that considers a <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> to be \"hit\" when the lasso path surrounds it.","pos":[0,244],"source":"The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalLassoHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the lasso path surrounds it."},{"content":"This is useful for implementing features, such as the ability to select a stroke with a lasso tool.","pos":[245,344]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> uses an <ph id=\"ph2\">&lt;xref:System.Windows.Ink.IncrementalLassoHitTester&gt;</ph> to implement the lasso selection tool.","pos":[345,488],"source":" The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalLassoHitTester> to implement the lasso selection tool."}]}]}],"pos":[72338,72827],"yaml":true,"extradata":"MT"},{"content":"The minimum percentage of each <xref href=\"System.Windows.Ink.Stroke\"></xref> that must be contained within the lasso for it to be considered hit.","nodes":[{"pos":[0,146],"content":"The minimum percentage of each <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> that must be contained within the lasso for it to be considered hit.","source":"The minimum percentage of each <xref href=\"System.Windows.Ink.Stroke\"></xref> that must be contained within the lasso for it to be considered hit."}],"pos":[73690,73837],"yaml":true},{"content":"An <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,145],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"&gt;&lt;/xref&gt;</ph> that hit tests the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[73925,74071],"yaml":true},{"content":"Creates an <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with an erasing path.","nodes":[{"pos":[0,175],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"&gt;&lt;/xref&gt;</ph> that hit tests the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> with an erasing path.","source":"Creates an <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with an erasing path."}],"pos":[75318,75494],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the eraser path intersects it. This is useful for implementing features, such as the ability to erase part of a <xref:System.Windows.Ink.Stroke>. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalStrokeHitTester> when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.","nodes":[{"pos":[0,619],"content":"The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the eraser path intersects it. This is useful for implementing features, such as the ability to erase part of a <xref:System.Windows.Ink.Stroke>. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalStrokeHitTester> when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.","nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the eraser path intersects it. This is useful for implementing features, such as the ability to erase part of a <xref:System.Windows.Ink.Stroke>. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalStrokeHitTester> when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.","pos":[0,619],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A&gt;</ph> method returns an <ph id=\"ph2\">&lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt;</ph> that considers a <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> to be \"hit\" when the eraser path intersects it.","pos":[0,248],"source":"The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the eraser path intersects it."},{"content":"This is useful for implementing features, such as the ability to erase part of a <ph id=\"ph1\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph>.","pos":[249,363],"source":" This is useful for implementing features, such as the ability to erase part of a <xref:System.Windows.Ink.Stroke>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.InkCanvas&gt;</ph> uses an <ph id=\"ph2\">&lt;xref:System.Windows.Ink.IncrementalStrokeHitTester&gt;</ph> when the <ph id=\"ph3\">&lt;xref:System.Windows.Controls.InkCanvas.EditingMode%2A&gt;</ph> property is set to <ph id=\"ph4\">&lt;xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint&gt;</ph>.","pos":[364,619],"source":" The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalStrokeHitTester> when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>."}]}]}],"pos":[75505,76125],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the tip of the stylus.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;&lt;/xref&gt;</ph> that specifies the tip of the stylus.","source":"A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the tip of the stylus."}],"pos":[76958,77050],"yaml":true},{"content":"An <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,146],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"&gt;&lt;/xref&gt;</ph> that hit tests the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[77139,77286],"yaml":true},{"content":"Returns the value of the custom property associated with the specified <xref href=\"System.Guid\"></xref>.","nodes":[{"pos":[0,104],"content":"Returns the value of the custom property associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the value of the custom property associated with the specified <xref href=\"System.Guid\"></xref>."}],"pos":[78394,78499],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> and <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> methods enable you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","nodes":[{"pos":[0,314],"content":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> and <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> methods enable you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","nodes":[{"content":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> and <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> methods enable you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.","pos":[0,314],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A&gt;</ph> methods enable you to add custom properties to a <ph id=\"ph3\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.","pos":[0,224],"source":"The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> and <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> methods enable you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>."},{"content":"You can then include extra information with a <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.","pos":[225,314],"source":" You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>."}]}]}],"pos":[78510,78825],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Guid\"></xref> associated with the custom property to get.","nodes":[{"pos":[0,80],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> associated with the custom property to get.","source":"The <xref href=\"System.Guid\"></xref> associated with the custom property to get."}],"pos":[79839,79920],"yaml":true},{"content":"The value of the custom property associated with the specified <xref href=\"System.Guid\"></xref>.","nodes":[{"pos":[0,96],"content":"The value of the custom property associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the custom property associated with the specified <xref href=\"System.Guid\"></xref>."}],"pos":[79977,80074],"yaml":true},{"content":"<code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,133],"content":"<ph id=\"ph1\">&lt;code&gt;propertyDataId&lt;/code&gt;</ph> is not associated with a custom property of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"<code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[80247,80381],"yaml":true},{"content":"Returns the GUIDs of any custom properties associated with the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,120],"content":"Returns the GUIDs of any custom properties associated with the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the GUIDs of any custom properties associated with the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[81360,81481],"yaml":true},{"content":"An array of type <xref href=\"System.Guid\"></xref> that represent the custom property identifiers.","nodes":[{"pos":[0,97],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> that represent the custom property identifiers.","source":"An array of type <xref href=\"System.Guid\"></xref> that represent the custom property identifiers."}],"pos":[82067,82165],"yaml":true},{"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified rectangle.","nodes":[{"pos":[0,117],"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified rectangle.","nodes":[{"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified rectangle.","pos":[0,117]}]}],"pos":[83298,83416],"yaml":true},{"content":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the bounds to be hit tested.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph> that specifies the bounds to be hit tested.","source":"A <xref href=\"System.Windows.Rect\"></xref> that specifies the bounds to be hit tested."}],"pos":[84185,84272],"yaml":true},{"content":"The minimum required length of a Stroke that must exist within bounds for it to be considered hit.","nodes":[{"pos":[0,98],"content":"The minimum required length of a Stroke that must exist within bounds for it to be considered hit.","nodes":[{"content":"The minimum required length of a Stroke that must exist within bounds for it to be considered hit.","pos":[0,98]}]}],"pos":[84349,84448],"yaml":true},{"content":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Rect\"></xref>.","nodes":[{"pos":[0,167],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> that has strokes with at least the specified percentage within the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Rect\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Rect\"></xref>."}],"pos":[84527,84695],"yaml":true},{"content":"Returns a collection of strokes that intersect the specified area.","nodes":[{"pos":[0,66],"content":"Returns a collection of strokes that intersect the specified area.","nodes":[{"content":"Returns a collection of strokes that intersect the specified area.","pos":[0,66]}]}],"pos":[85829,85896],"yaml":true},{"content":"The <xref href=\"System.Windows.Point\"></xref> to hit test.","nodes":[{"pos":[0,58],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Point\"&gt;&lt;/xref&gt;</ph> to hit test.","source":"The <xref href=\"System.Windows.Point\"></xref> to hit test."}],"pos":[86654,86713],"yaml":true},{"content":"The size of the area around the <xref href=\"System.Windows.Point\"></xref> to hit test.","nodes":[{"pos":[0,86],"content":"The size of the area around the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Point\"&gt;&lt;/xref&gt;</ph> to hit test.","source":"The size of the area around the <xref href=\"System.Windows.Point\"></xref> to hit test."}],"pos":[86777,86864],"yaml":true},{"content":"A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point.","nodes":[{"pos":[0,106],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> objects that intersect the specified point.","source":"A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point."}],"pos":[86943,87050],"yaml":true},{"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified area.","nodes":[{"pos":[0,112],"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified area.","nodes":[{"content":"Returns a collection of strokes that have at least the specified percentage of length within the specified area.","pos":[0,112]}]}],"pos":[88337,88450],"yaml":true},{"content":"An array of type <xref href=\"System.Windows.Point\"></xref> that represents the bounds of the area to be hit tested.","nodes":[{"pos":[0,115],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Windows.Point\"&gt;&lt;/xref&gt;</ph> that represents the bounds of the area to be hit tested.","source":"An array of type <xref href=\"System.Windows.Point\"></xref> that represents the bounds of the area to be hit tested."}],"pos":[89532,89648],"yaml":true},{"content":"The acceptable length of the <xref href=\"System.Windows.Ink.Stroke\"></xref>, as a percentage, for <code>lassoPoints</code> to contain.","nodes":[{"pos":[0,134],"content":"The acceptable length of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph>, as a percentage, for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">lassoPoints</ph><ept id=\"p1\">&lt;/code&gt;</ept> to contain.","source":"The acceptable length of the <xref href=\"System.Windows.Ink.Stroke\"></xref>, as a percentage, for <code>lassoPoints</code> to contain."}],"pos":[89724,89859],"yaml":true},{"content":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Point\"></xref> array.","nodes":[{"pos":[0,174],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> that has strokes with at least the specified percentage within the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Point\"&gt;&lt;/xref&gt;</ph> array.","source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Point\"></xref> array."}],"pos":[89938,90113],"yaml":true},{"content":"<code>lassoPoints</code> is `null`.  \n  \n -or-  \n  \n <code>percentageWithinLasso</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;lassoPoints&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>lassoPoints</code> is `null`."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,98],"content":"<ph id=\"ph1\">&lt;code&gt;percentageWithinLasso&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>percentageWithinLasso</code> is `null`."}],"pos":[90286,90391],"yaml":true},{"content":"<code>lassoPoints</code> contains an empty array.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;lassoPoints&lt;/code&gt;</ph> contains an empty array.","source":"<code>lassoPoints</code> contains an empty array."}],"pos":[90485,90535],"yaml":true},{"content":"<code>percentageWithinLasso</code> is less than 0 or greater than 100.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">&lt;code&gt;percentageWithinLasso&lt;/code&gt;</ph> is less than 0 or greater than 100.","source":"<code>percentageWithinLasso</code> is less than 0 or greater than 100."}],"pos":[90649,90720],"yaml":true},{"content":"Returns a collection of strokes that intersect the specified point.","nodes":[{"pos":[0,67],"content":"Returns a collection of strokes that intersect the specified point.","nodes":[{"content":"Returns a collection of strokes that intersect the specified point.","pos":[0,67]}]}],"pos":[91714,91782],"yaml":true},{"content":"The point to hit test.","nodes":[{"pos":[0,22],"content":"The point to hit test.","nodes":[{"content":"The point to hit test.","pos":[0,22]}]}],"pos":[92523,92546],"yaml":true},{"content":"A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point.","nodes":[{"pos":[0,106],"content":"A collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> objects that intersect the specified point.","source":"A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point."}],"pos":[92625,92732],"yaml":true},{"content":"Returns a collection of strokes that intersect with the specified path.","nodes":[{"pos":[0,71],"content":"Returns a collection of strokes that intersect with the specified path.","nodes":[{"content":"Returns a collection of strokes that intersect with the specified path.","pos":[0,71]}]}],"pos":[94069,94141],"yaml":true},{"content":"An array to type <xref href=\"System.Windows.Point\"></xref> that represents the path to be hit tested.","nodes":[{"pos":[0,101],"content":"An array to type <ph id=\"ph1\">&lt;xref href=\"System.Windows.Point\"&gt;&lt;/xref&gt;</ph> that represents the path to be hit tested.","source":"An array to type <xref href=\"System.Windows.Point\"></xref> that represents the path to be hit tested."}],"pos":[95030,95132],"yaml":true},{"content":"The <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of <code>eraserPath</code>.","nodes":[{"pos":[0,108],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StylusShape\"&gt;&lt;/xref&gt;</ph> that specifies the shape of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">eraserPath</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of <code>eraserPath</code>."}],"pos":[95216,95325],"yaml":true},{"content":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> of strokes that intersect with <code>path</code>.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> of strokes that intersect with <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> of strokes that intersect with <code>path</code>."}],"pos":[95404,95513],"yaml":true},{"content":"Returns the index of the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,146],"content":"Returns the index of the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> in the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the index of the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[96599,96746],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.IndexOf%2A> method returns -1 if `stroke` is not a member of the <xref:System.Windows.Ink.StrokeCollection>.","nodes":[{"pos":[0,154],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.IndexOf%2A&gt;</ph> method returns -1 if <ph id=\"ph2\">`stroke`</ph> is not a member of the <ph id=\"ph3\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph>.","source":"The <xref:System.Windows.Ink.StrokeCollection.IndexOf%2A> method returns -1 if `stroke` is not a member of the <xref:System.Windows.Ink.StrokeCollection>."}],"pos":[96757,96912],"yaml":true,"extradata":"MT"},{"content":"The stroke whose position is required.","nodes":[{"pos":[0,38],"content":"The stroke whose position is required.","nodes":[{"content":"The stroke whose position is required.","pos":[0,38]}]}],"pos":[97080,97119],"yaml":true},{"content":"The index of the stroke.","nodes":[{"pos":[0,24],"content":"The index of the stroke.","nodes":[{"content":"The index of the stroke.","pos":[0,24]}]}],"pos":[97175,97200],"yaml":true},{"content":"Represents the native persistence format for ink data.","nodes":[{"pos":[0,54],"content":"Represents the native persistence format for ink data.","nodes":[{"content":"Represents the native persistence format for ink data.","pos":[0,54]}]}],"pos":[98252,98307],"yaml":true},{"content":"Use the <xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat> field to specify the format of the <xref:System.Windows.Ink.StrokeCollection> when you transfer data, such as when you copy the <xref:System.Windows.Ink.StrokeCollection> to the Clipboard.","nodes":[{"pos":[0,259],"content":"Use the <xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat> field to specify the format of the <xref:System.Windows.Ink.StrokeCollection> when you transfer data, such as when you copy the <xref:System.Windows.Ink.StrokeCollection> to the Clipboard.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat&gt;</ph> field to specify the format of the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> when you transfer data, such as when you copy the <ph id=\"ph3\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> to the Clipboard.","pos":[0,259],"source":"Use the <xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat> field to specify the format of the <xref:System.Windows.Ink.StrokeCollection> when you transfer data, such as when you copy the <xref:System.Windows.Ink.StrokeCollection> to the Clipboard."}]}],"pos":[98318,98578],"yaml":true,"extradata":"MT"},{"content":"Inserts a stroke into the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> at the specified index.","nodes":[{"pos":[0,106],"content":"Inserts a stroke into the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Inserts a stroke into the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> at the specified index."}],"pos":[100437,100544],"yaml":true},{"content":"The specified index.","nodes":[{"pos":[0,20],"content":"The specified index.","nodes":[{"content":"The specified index.","pos":[0,20]}]}],"pos":[100732,100753],"yaml":true},{"content":"The specified stroke","nodes":[{"pos":[0,20],"content":"The specified stroke","nodes":[{"content":"The specified stroke","pos":[0,20]}]}],"pos":[100827,100848],"yaml":true},{"content":"Occurs when any <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> property changes.","nodes":[{"pos":[0,90],"content":"Occurs when any <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when any <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> property changes."}],"pos":[102114,102205],"yaml":true},{"content":"Event data.","nodes":[{"pos":[0,11],"content":"Event data.","nodes":[{"content":"Event data.","pos":[0,11]}]}],"pos":[102427,102439],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Ink.StrokeCollection.PropertyDataChanged\"></xref> event.","nodes":[{"pos":[0,94],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection.PropertyDataChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Ink.StrokeCollection.PropertyDataChanged\"></xref> event."}],"pos":[103751,103846],"yaml":true},{"content":"A <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> that contains the event data."}],"pos":[104074,104175],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Ink.StrokeCollection.StrokesChanged\"></xref> event.","nodes":[{"pos":[0,89],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection.StrokesChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Ink.StrokeCollection.StrokesChanged\"></xref> event."}],"pos":[105485,105575],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate.  \n  \n The <xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A> method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,62],"content":"Raising an event invokes the event handler through a delegate.","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]}]},{"pos":[69,296],"content":"The <xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A> method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class.","pos":[0,227],"source":"The <xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A> method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class."}]}],"pos":[105586,105887],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Ink.StrokeCollectionChangedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollectionChangedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Ink.StrokeCollectionChangedEventArgs\"></xref> that contains the event data."}],"pos":[106118,106223],"yaml":true},{"content":"Occurs when custom property is added or removed from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,114],"content":"Occurs when custom property is added or removed from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Occurs when custom property is added or removed from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[107284,107399],"yaml":true},{"content":"Removes the specified strokes from the collection.","nodes":[{"pos":[0,50],"content":"Removes the specified strokes from the collection.","nodes":[{"content":"Removes the specified strokes from the collection.","pos":[0,50]}]}],"pos":[109359,109410],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.Remove%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it removes.","nodes":[{"pos":[0,192],"content":"The <xref:System.Windows.Ink.StrokeCollection.Remove%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it removes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Remove%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it removes.","pos":[0,192],"source":"The <xref:System.Windows.Ink.StrokeCollection.Remove%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it removes."}]}],"pos":[109421,109614],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to remove from the collection.","nodes":[{"pos":[0,91],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> to remove from the collection.","source":"The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to remove from the collection."}],"pos":[110565,110657],"yaml":true},{"content":"Removes the stroke at the specified index from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,108],"content":"Removes the stroke at the specified index from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the stroke at the specified index from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[111718,111827],"yaml":true},{"content":"The specified index.","nodes":[{"pos":[0,20],"content":"The specified index.","nodes":[{"content":"The specified index.","pos":[0,20]}]}],"pos":[111981,112002],"yaml":true},{"content":"Removes the custom property associated with the specified <xref href=\"System.Guid\"></xref>.","nodes":[{"pos":[0,91],"content":"Removes the custom property associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the custom property associated with the specified <xref href=\"System.Guid\"></xref>."}],"pos":[113109,113201],"yaml":true},{"content":"The <xref href=\"System.Guid\"></xref> associated with the custom property to remove.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> associated with the custom property to remove.","source":"The <xref href=\"System.Guid\"></xref> associated with the custom property to remove."}],"pos":[113945,114029],"yaml":true},{"content":"Replaces the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> with the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,146],"content":"Replaces the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> with the specified <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Replaces the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> with the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[115288,115435],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.Replace%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.","nodes":[{"pos":[0,140],"content":"The <xref:System.Windows.Ink.StrokeCollection.Replace%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Replace%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event.","pos":[0,140],"source":"The <xref:System.Windows.Ink.StrokeCollection.Replace%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event."}]}],"pos":[115446,115587],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Ink.Stroke\"></xref> to replace.","nodes":[{"pos":[0,62],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> to replace.","source":"The <xref href=\"System.Windows.Ink.Stroke\"></xref> to replace."}],"pos":[116408,116471],"yaml":true},{"content":"The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,68],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[116569,116638],"yaml":true},{"content":"<code>strokesToReplace</code> is empty.  \n  \n -or-  \n  \n <code>strokesToReplaceWith</code> is empty.  \n  \n -or-  \n  \n A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace</code>.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;strokesToReplace&lt;/code&gt;</ph> is empty.","source":"<code>strokesToReplace</code> is empty."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,100],"content":"<ph id=\"ph1\">&lt;code&gt;strokesToReplaceWith&lt;/code&gt;</ph> is empty.","source":"<code>strokesToReplaceWith</code> is empty."},{"pos":[107,111],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[118,248],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">strokesToReplaceWith</ph><ept id=\"p1\">&lt;/code&gt;</ept> is already in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">strokesToReplace</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace</code>."}],"pos":[116803,117064],"yaml":true},{"content":"Replaces the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a new <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,148],"content":"Replaces the specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> with a new <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Replaces the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a new <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[118298,118447],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.Replace%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it replaces.","nodes":[{"pos":[0,194],"content":"The <xref:System.Windows.Ink.StrokeCollection.Replace%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it replaces.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Replace%2A&gt;</ph> method raises the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection.StrokesChanged&gt;</ph> event for each <ph id=\"ph3\">&lt;xref:System.Windows.Ink.Stroke&gt;</ph> it replaces.","pos":[0,194],"source":"The <xref:System.Windows.Ink.StrokeCollection.Replace%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it replaces."}]}],"pos":[118458,118653],"yaml":true,"extradata":"MT"},{"content":"The destination <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,73],"content":"The destination <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The destination <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[119496,119570],"yaml":true},{"content":"The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,68],"content":"The source <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[119668,119737],"yaml":true},{"content":"<code>strokesToReplace</code> is empty.  \n  \n -or-  \n  \n <code>strokesToReplaceWith</code> is empty.  \n  \n -or-  \n  \n A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace.</code>  \n  \n -or-  \n  \n The strokes in <code>strokesToReplaceWith</code> are not continuous.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;strokesToReplace&lt;/code&gt;</ph> is empty.","source":"<code>strokesToReplace</code> is empty."},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,100],"content":"<ph id=\"ph1\">&lt;code&gt;strokesToReplaceWith&lt;/code&gt;</ph> is empty.","source":"<code>strokesToReplaceWith</code> is empty."},{"pos":[107,111],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[118,248],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">strokesToReplaceWith</ph><ept id=\"p1\">&lt;/code&gt;</ept> is already in <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">strokesToReplace.</ph><ept id=\"p2\">&lt;/code&gt;</ept>","source":"A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace.</code>"},{"pos":[255,259],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[266,334],"content":"The strokes in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">strokesToReplaceWith</ph><ept id=\"p1\">&lt;/code&gt;</ept> are not continuous.","source":"The strokes in <code>strokesToReplaceWith</code> are not continuous."}],"pos":[119902,120253],"yaml":true},{"content":"Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref href=\"System.IO.Stream\"></xref>.","nodes":[{"pos":[0,122],"content":"Saves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> to the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref href=\"System.IO.Stream\"></xref>."}],"pos":[121220,121343],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).","nodes":[{"pos":[0,146],"content":"The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Save%2A&gt;</ph> method saves the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> as Ink Serialized Format (ISF).","pos":[0,146],"source":"The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF)."}]}],"pos":[121354,121501],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IO.Stream\"></xref> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> to which to save the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IO.Stream\"></xref> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[122264,122385],"yaml":true},{"content":"Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref href=\"System.IO.Stream\"></xref> and compresses it, when specified.","nodes":[{"pos":[0,156],"content":"Saves the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> to the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> and compresses it, when specified.","source":"Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref href=\"System.IO.Stream\"></xref> and compresses it, when specified."}],"pos":[123473,123630],"yaml":true},{"content":"The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).","nodes":[{"pos":[0,146],"content":"The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection.Save%2A&gt;</ph> method saves the <ph id=\"ph2\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> as Ink Serialized Format (ISF).","pos":[0,146],"source":"The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF)."}]}],"pos":[123641,123788],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IO.Stream\"></xref> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> to which to save the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.IO.Stream\"></xref> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[124574,124695],"yaml":true},{"content":"`true` to compress the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to compress the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to compress the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, `false`."}],"pos":[124760,124863],"yaml":true},{"content":"Replaces the stroke at the specified index.","nodes":[{"pos":[0,43],"content":"Replaces the stroke at the specified index.","nodes":[{"content":"Replaces the stroke at the specified index.","pos":[0,43]}]}],"pos":[126006,126050],"yaml":true},{"content":"The position at which to replace the stroke.","nodes":[{"pos":[0,44],"content":"The position at which to replace the stroke.","nodes":[{"content":"The position at which to replace the stroke.","pos":[0,44]}]}],"pos":[126235,126280],"yaml":true},{"content":"The stroke to replace the current stroke.","nodes":[{"pos":[0,41],"content":"The stroke to replace the current stroke.","nodes":[{"content":"The stroke to replace the current stroke.","pos":[0,41]}]}],"pos":[126354,126396],"yaml":true},{"content":"Occurs when a <xref href=\"System.Windows.Ink.Stroke\"></xref> in the collection changes.","nodes":[{"pos":[0,87],"content":"Occurs when a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke\"&gt;&lt;/xref&gt;</ph> in the collection changes.","source":"Occurs when a <xref href=\"System.Windows.Ink.Stroke\"></xref> in the collection changes."}],"pos":[127396,127484],"yaml":true},{"content":"Modifies each of the <xref href=\"System.Windows.Ink.Stroke.StylusPoints\"></xref> and optionally the <xref href=\"System.Windows.Ink.DrawingAttributes.StylusTipTransform\"></xref> for each stroke in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> according to the specified <xref href=\"System.Windows.Media.Matrix\"></xref>.","nodes":[{"pos":[0,333],"content":"Modifies each of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Ink.Stroke.StylusPoints\"&gt;&lt;/xref&gt;</ph> and optionally the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.DrawingAttributes.StylusTipTransform\"&gt;&lt;/xref&gt;</ph> for each stroke in the <ph id=\"ph3\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph> according to the specified <ph id=\"ph4\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;&lt;/xref&gt;</ph>.","source":"Modifies each of the <xref href=\"System.Windows.Ink.Stroke.StylusPoints\"></xref> and optionally the <xref href=\"System.Windows.Ink.DrawingAttributes.StylusTipTransform\"></xref> for each stroke in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> according to the specified <xref href=\"System.Windows.Media.Matrix\"></xref>."}],"pos":[129418,129752],"yaml":true},{"content":"When `applyToStylusTip` is `true`, the <xref:System.Windows.Ink.StrokeCollection.Transform%2A> method affects the shape of the stylus tip, as well as the position of the strokes. For example, if you rotate a <xref:System.Windows.Ink.StrokeCollection> 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted.","nodes":[{"pos":[0,357],"content":"When `applyToStylusTip` is `true`, the <xref:System.Windows.Ink.StrokeCollection.Transform%2A> method affects the shape of the stylus tip, as well as the position of the strokes. For example, if you rotate a <xref:System.Windows.Ink.StrokeCollection> 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted.","nodes":[{"content":"When <ph id=\"ph1\">`applyToStylusTip`</ph> is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Windows.Ink.StrokeCollection.Transform%2A&gt;</ph> method affects the shape of the stylus tip, as well as the position of the strokes.","pos":[0,178],"source":"When `applyToStylusTip` is `true`, the <xref:System.Windows.Ink.StrokeCollection.Transform%2A> method affects the shape of the stylus tip, as well as the position of the strokes."},{"content":"For example, if you rotate a <ph id=\"ph1\">&lt;xref:System.Windows.Ink.StrokeCollection&gt;</ph> 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted.","pos":[179,357],"source":" For example, if you rotate a <xref:System.Windows.Ink.StrokeCollection> 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted."}]}],"pos":[129763,130121],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Media.Matrix\"></xref> which specifies the transformation to perform on the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.","nodes":[{"pos":[0,161],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;&lt;/xref&gt;</ph> which specifies the transformation to perform on the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Ink.StrokeCollection\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Windows.Media.Matrix\"></xref> which specifies the transformation to perform on the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>."}],"pos":[130849,131011],"yaml":true},{"content":"`true` to apply the transformation to the tip of the stylus; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> to apply the transformation to the tip of the stylus; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to apply the transformation to the tip of the stylus; otherwise, `false`."}],"pos":[131084,131167],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Ink.StrokeCollection\n  commentId: T:System.Windows.Ink.StrokeCollection\n  id: StrokeCollection\n  children:\n  - System.Windows.Ink.StrokeCollection.#ctor\n  - System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})\n  - System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)\n  - System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)\n  - System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)\n  - System.Windows.Ink.StrokeCollection.ClearItems\n  - System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  - System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)\n  - System.Windows.Ink.StrokeCollection.Clone\n  - System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)\n  - System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)\n  - System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  - System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)\n  - System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  - System.Windows.Ink.StrokeCollection.GetBounds\n  - System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)\n  - System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)\n  - System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)\n  - System.Windows.Ink.StrokeCollection.GetPropertyDataIds\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)\n  - System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  - System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)\n  - System.Windows.Ink.StrokeCollection.InkSerializedFormat\n  - System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)\n  - System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  - System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  - System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)\n  - System.Windows.Ink.StrokeCollection.PropertyDataChanged\n  - System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)\n  - System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)\n  - System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)\n  - System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)\n  - System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)\n  - System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)\n  - System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)\n  - System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)\n  - System.Windows.Ink.StrokeCollection.StrokesChanged\n  - System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)\n  langs:\n  - csharp\n  name: StrokeCollection\n  nameWithType: StrokeCollection\n  fullName: System.Windows.Ink.StrokeCollection\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Represents a collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects.\n  remarks: \"The <xref:System.Windows.Ink.StrokeCollection> enables you to perform functions such as hit testing, clipping, and erasing strokes. The <xref:System.Windows.Controls.InkCanvas> control performs many of these functions, but if you need more control than the <xref:System.Windows.Controls.InkCanvas> provides, the <xref:System.Windows.Ink.StrokeCollection> offers more options.  \\n  \\n The following table lists where to learn about managing digital ink on a custom control.  \\n  \\n|To do this…|See this article|  \\n|-----------------|----------------------|  \\n|Create a control that collects digital ink|[Creating an Ink Input Control](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)|  \\n|Create a control that enables the user to select ink|[How to: Select Ink from a Custom Control](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)|  \\n|Create a control that enables the user to point-erase ink|[How to: Erase Ink on a Custom Control](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)|  \\n  \\n<a name=\\\"xamlAttributeUsage_StrokeCollection\\\"></a>   \\n## XAML Attribute Usage  \\n  \\n```  \\n<object StrokeCollection=\\\"isfString\\\"/>  \\n```  \\n  \\n<a name=\\\"xamlObjectElementUsage_StrokeCollection\\\"></a>   \\n## XAML Object Element Usage  \\n  \\n```  \\n<object>isfString</object>  \\n```  \\n  \\n<a name=\\\"xamlValues_StrokeCollection\\\"></a>   \\n## XAML Values  \\n  \\n|Term|Definition|  \\n|----------|----------------|  \\n|`isfString`|A string that represents the stroke in base-64, encoded Ink Serialized Format (ISF).|\"\n  example:\n  - \"The following example demonstrates how to copy the ink in one <xref:System.Windows.Controls.InkCanvas> onto another <xref:System.Windows.Controls.InkCanvas>. This example assumes:  \\n  \\n-   There are two <xref:System.Windows.Controls.InkCanvas> objects called `inkCanvas1` and `inkCanvas2`.  \\n  \\n-   The <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event has been connected to the event handler.  \\n  \\n [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]\\n [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.StrokeCollectionConverter))]\n\n      public class StrokeCollection : System.Collections.ObjectModel.Collection<System.Windows.Ink.Stroke>, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged\n  inheritance:\n  - System.Object\n  - System.Collections.ObjectModel.Collection`1\n  implements:\n  - System.Collections.Specialized.INotifyCollectionChanged\n  - System.ComponentModel.INotifyPropertyChanged\n  inheritedMembers:\n  - System.Collections.ObjectModel.Collection`1.Add(`0)\n  - System.Collections.ObjectModel.Collection`1.Clear\n  - System.Collections.ObjectModel.Collection`1.Contains(`0)\n  - System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)\n  - System.Collections.ObjectModel.Collection`1.Count\n  - System.Collections.ObjectModel.Collection`1.GetEnumerator\n  - System.Collections.ObjectModel.Collection`1.IndexOf(`0)\n  - System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)\n  - System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)\n  - System.Collections.ObjectModel.Collection`1.Item(System.Int32)\n  - System.Collections.ObjectModel.Collection`1.Items\n  - System.Collections.ObjectModel.Collection`1.Remove(`0)\n  - System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)\n  - System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.#ctor\n  commentId: M:System.Windows.Ink.StrokeCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: StrokeCollection()\n  nameWithType: StrokeCollection.StrokeCollection()\n  fullName: StrokeCollection.StrokeCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class.\n  syntax:\n    content: public StrokeCollection ();\n    parameters: []\n  overload: System.Windows.Ink.StrokeCollection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})\n  commentId: M:System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})'\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: StrokeCollection(IEnumerable<Stroke>)\n  nameWithType: StrokeCollection.StrokeCollection(IEnumerable<Stroke>)\n  fullName: StrokeCollection.StrokeCollection(IEnumerable<Stroke>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> class that contains the specified strokes.\n  syntax:\n    content: public StrokeCollection (System.Collections.Generic.IEnumerable<System.Windows.Ink.Stroke> strokes);\n    parameters:\n    - id: strokes\n      type: System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke}\n      description: The strokes to add to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)\n  commentId: M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: StrokeCollection(Stream)\n  nameWithType: StrokeCollection.StrokeCollection(Stream)\n  fullName: StrokeCollection.StrokeCollection(Stream)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Initializes a <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> from the specified <xref href=\"System.IO.Stream\"></xref> of Ink Serialized Format (ISF).\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to save and load a <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]\\n [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  \\n[!code-csharp[StrokeCollectionMethods#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#11)]\\n[!code-vb[StrokeCollectionMethods#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#11)]\"\n  syntax:\n    content: public StrokeCollection (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: A stream that contains ink data.\n  overload: System.Windows.Ink.StrokeCollection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)\n  commentId: M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)\n  id: Add(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Add(StrokeCollection)\n  nameWithType: StrokeCollection.Add(StrokeCollection)\n  fullName: StrokeCollection.Add(StrokeCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Adds the specified strokes to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.Add%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.\n  example:\n  - \"The following example demonstrates how to copy the ink in one <xref:System.Windows.Controls.InkCanvas> onto another <xref:System.Windows.Controls.InkCanvas>. This example assumes:  \\n  \\n-   There are two <xref:System.Windows.Controls.InkCanvas> objects called `inkCanvas1` and `inkCanvas2`.  \\n  \\n-   The <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event has been connected to the event handler.  \\n  \\n [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]\\n [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]\"\n  syntax:\n    content: public void Add (System.Windows.Ink.StrokeCollection strokes);\n    parameters:\n    - id: strokes\n      type: System.Windows.Ink.StrokeCollection\n      description: The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to add to the collection.\n  overload: System.Windows.Ink.StrokeCollection.Add*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: A <xref href=\"System.Windows.Ink.Stroke\"></xref> in <code>strokes</code> is already a member of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>strokes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)\n  commentId: M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)\n  id: AddPropertyData(System.Guid,System.Object)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: AddPropertyData(Guid, Object)\n  nameWithType: StrokeCollection.AddPropertyData(Guid, Object)\n  fullName: StrokeCollection.AddPropertyData(Guid, Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Adds a custom property to the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> method enables you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.\n  example:\n  - \"The following example demonstrates how to add and get custom property data. The `AddTimeStamp_Click` method uses the <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> method to add the current time to the <xref:System.Windows.Ink.StrokeCollection>. The `GetTimeStap_Click` method uses the <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> method to retrieve the timestamp from the <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]\\n [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]\"\n  syntax:\n    content: public void AddPropertyData (Guid propertyDataId, object propertyData);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref href=\"System.Guid\"></xref> to associate with the custom property.\n    - id: propertyData\n      type: System.Object\n      description: The value of the custom property. <code>propertyData</code> must be of type <xref href=\"System.Char\"></xref>, <xref href=\"System.Byte\"></xref>, <xref href=\"System.Int16\"></xref>, <xref href=\"System.UInt16\"></xref>, <xref href=\"System.Int32\"></xref>, <xref href=\"System.UInt32\"></xref>, <xref href=\"System.Int64\"></xref>, <xref href=\"System.UInt64\"></xref>, <xref href=\"System.Single\"></xref>, <xref href=\"System.Double\"></xref>, <xref href=\"System.DateTime\"></xref>, <xref href=\"System.Boolean\"></xref>, <xref href=\"System.String\"></xref>, <xref href=\"System.Decimal\"></xref> or an array of these data types, except <xref href=\"System.String\"></xref>, which is not allowed.\n  overload: System.Windows.Ink.StrokeCollection.AddPropertyData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>propertyDataId</code> is an empty <xref href=\\\"System.Guid\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>propertyData</code> is not one of the allowed data types listed in the `Parameters` section.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.ClearItems\n  commentId: M:System.Windows.Ink.StrokeCollection.ClearItems\n  id: ClearItems\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: ClearItems()\n  nameWithType: StrokeCollection.ClearItems()\n  fullName: StrokeCollection.ClearItems()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Clears all strokes from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  syntax:\n    content: protected override sealed void ClearItems ();\n    parameters: []\n  overload: System.Windows.Ink.StrokeCollection.ClearItems*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  commentId: M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  id: Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Clip(IEnumerable<Point>)\n  nameWithType: StrokeCollection.Clip(IEnumerable<Point>)\n  fullName: StrokeCollection.Clip(IEnumerable<Point>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes all strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that are outside the bounds of the specified <xref href=\"System.Drawing.Point\"></xref> array.\n  remarks: \"The <xref:System.Windows.Ink.StrokeCollection.Clip%2A> method connects the first and last points in `lassoPoints` to create the lasso.  \\n  \\n The <xref:System.Windows.Ink.StrokeCollection.Clip%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it clips.\"\n  example:\n  - \"The following example demonstrates how to clip the strokes in a <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#13)]\\n [!code-vb[StrokeCollectionMethods#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#13)]\"\n  syntax:\n    content: public void Clip (System.Collections.Generic.IEnumerable<System.Windows.Point> lassoPoints);\n    parameters:\n    - id: lassoPoints\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be clipped.\n  overload: System.Windows.Ink.StrokeCollection.Clip*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)\n  commentId: M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)\n  id: Clip(System.Windows.Rect)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Clip(Rect)\n  nameWithType: StrokeCollection.Clip(Rect)\n  fullName: StrokeCollection.Clip(Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces all strokes that are clipped by the specified rectangle with new strokes that do not extend beyond the specified rectangle.\n  remarks: All strokes that are entirely outside the specified rectangle are removed.\n  example:\n  - \"The following example demonstrates how to erase the ink that is outside the bounds of a <xref:System.Windows.Rect>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#35](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#35)]\\n [!code-vb[StrokeCollectionMethods#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#35)]\"\n  syntax:\n    content: public void Clip (System.Windows.Rect bounds);\n    parameters:\n    - id: bounds\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be clipped.\n  overload: System.Windows.Ink.StrokeCollection.Clip*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Ink.StrokeCollection.Clone\n  commentId: M:System.Windows.Ink.StrokeCollection.Clone\n  id: Clone\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: StrokeCollection.Clone()\n  fullName: StrokeCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Copies the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.Clone%2A> method copies each <xref:System.Windows.Ink.Stroke> in the collection and the new <xref:System.Windows.Ink.StrokeCollection> references the new strokes.\n  example:\n  - \"The following example demonstrates how to copy the ink in one <xref:System.Windows.Controls.InkCanvas> onto another <xref:System.Windows.Controls.InkCanvas>. This example assumes:  \\n  \\n-   There are two <xref:System.Windows.Controls.InkCanvas> objects called `inkCanvas1` and `inkCanvas2.`  \\n  \\n-   The <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event has been connected to the event handler.  \\n  \\n [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]\\n [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]\"\n  syntax:\n    content: public virtual System.Windows.Ink.StrokeCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A copy of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)\n  commentId: M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)\n  id: ContainsPropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: ContainsPropertyData(Guid)\n  nameWithType: StrokeCollection.ContainsPropertyData(Guid)\n  fullName: StrokeCollection.ContainsPropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns whether the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to check for custom property in a <xref:System.Windows.Ink.StrokeCollection>. If a custom property has been associated with `timestamp`, the example gets that custom property and shows when the <xref:System.Windows.Ink.StrokeCollection> was saved. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]\\n [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]\"\n  syntax:\n    content: public bool ContainsPropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref href=\"System.Guid\"></xref> to locate in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified custom property identifier is in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, `false`.'\n  overload: System.Windows.Ink.StrokeCollection.ContainsPropertyData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)\n  commentId: M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)\n  id: Draw(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Draw(DrawingContext)\n  nameWithType: StrokeCollection.Draw(DrawingContext)\n  fullName: StrokeCollection.Draw(DrawingContext)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Draws the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example creates a custom element that displays a thumbnail view of an <xref:System.Windows.Controls.InkCanvas>. The custom element keeps a reference to an <xref:System.Windows.Controls.InkCanvas> and redraws itself when the <xref:System.Windows.Controls.InkCanvas.StrokeCollected> event occurs.  \\n  \\n [!code-csharp[StrokeCollectionMethods#33](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window3.xaml.cs#33)]\\n [!code-vb[StrokeCollectionMethods#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window3.xaml.vb#33)]\"\n  syntax:\n    content: public void Draw (System.Windows.Media.DrawingContext context);\n    parameters:\n    - id: context\n      type: System.Windows.Media.DrawingContext\n      description: The <xref href=\"System.Windows.Media.DrawingContext\"></xref> on which to draw the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Draw*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  commentId: M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  id: Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Erase(IEnumerable<Point>)\n  nameWithType: StrokeCollection.Erase(IEnumerable<Point>)\n  fullName: StrokeCollection.Erase(IEnumerable<Point>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes the ink that is within the bounds of the specified area.\n  remarks: \"The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method connects the first and last points in `lassoPoints` to create the lasso.  \\n  \\n The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  \\n  \\n The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.\"\n  example:\n  - \"The following example demonstrates how to erase strokes in a <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#2)]\\n [!code-vb[StrokeCollectionMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#2)]\"\n  syntax:\n    content: public void Erase (System.Collections.Generic.IEnumerable<System.Windows.Point> lassoPoints);\n    parameters:\n    - id: lassoPoints\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Drawing.Point\"></xref> that specifies the area to be erased.\n  overload: System.Windows.Ink.StrokeCollection.Erase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)\n  commentId: M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)\n  id: Erase(System.Windows.Rect)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Erase(Rect)\n  nameWithType: StrokeCollection.Erase(Rect)\n  fullName: StrokeCollection.Erase(Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces all strokes that are clipped by the specified rectangle with new strokes that do not enter the bounds of the specified rectangle.\n  remarks: \"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if the specified area is through the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  All strokes that are entirely inside the specified rectangle are removed.  \\n  \\n The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.\"\n  example:\n  - \"The following example demonstrates how to erase the ink within the <xref:System.Windows.Rect>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#34](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#34)]\\n [!code-vb[StrokeCollectionMethods#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#34)]\"\n  syntax:\n    content: public void Erase (System.Windows.Rect bounds);\n    parameters:\n    - id: bounds\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that specifies the area to be erased.\n  overload: System.Windows.Ink.StrokeCollection.Erase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  commentId: M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  id: Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Erase(IEnumerable<Point>, StylusShape)\n  nameWithType: StrokeCollection.Erase(IEnumerable<Point>, StylusShape)\n  fullName: StrokeCollection.Erase(IEnumerable<Point>, StylusShape)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces all strokes that are clipped by the region created by the specified <xref href=\"System.Windows.Ink.StylusShape\"></xref> along the specified path with new Strokes that are not clipped by the region.\n  remarks: \"The <xref:System.Windows.Ink.StrokeCollection> might contain new strokes after the <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method is called. For example, if `path` intersects the middle of a <xref:System.Windows.Ink.Stroke>, the erase method removes that <xref:System.Windows.Ink.Stroke> and creates two new strokes.  \\n  \\n The <xref:System.Windows.Ink.StrokeCollection.Erase%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it erases.\"\n  example:\n  - \"The following example demonstrates how to erase ink along a specific path. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#14)]\\n [!code-vb[StrokeCollectionMethods#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#14)]\"\n  syntax:\n    content: public void Erase (System.Collections.Generic.IEnumerable<System.Windows.Point> eraserPath, System.Windows.Ink.StylusShape eraserShape);\n    parameters:\n    - id: eraserPath\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Windows.Point\"></xref> that specifies the path to be erased.\n    - id: eraserShape\n      type: System.Windows.Ink.StylusShape\n      description: A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of the eraser.\n  overload: System.Windows.Ink.StrokeCollection.Erase*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Ink.StrokeCollection.GetBounds\n  commentId: M:System.Windows.Ink.StrokeCollection.GetBounds\n  id: GetBounds\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetBounds()\n  nameWithType: StrokeCollection.GetBounds()\n  fullName: StrokeCollection.GetBounds()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the bounds of the strokes in the collection.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A> method returns a <xref:System.Windows.Rect> that takes the appearance of the rendered <xref:System.Windows.Ink.Stroke>. For example, if <xref:System.Windows.Ink.Stroke> is 10 display independent pixels (DIP) wide, the <xref:System.Windows.Rect> includes the entire width of the <xref:System.Windows.Ink.Stroke>.\n  example:\n  - \"The following example demonstrates how to get the bounds of the <xref:System.Windows.Ink.StrokeCollection> and draw them on the control. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#20)]\\n [!code-vb[StrokeCollectionMethods#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#20)]\"\n  syntax:\n    content: public System.Windows.Rect GetBounds ();\n    parameters: []\n    return:\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that contains the bounds of the strokes in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.GetBounds*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)\n  commentId: M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)\n  id: GetIncrementalLassoHitTester(System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetIncrementalLassoHitTester(Int32)\n  nameWithType: StrokeCollection.GetIncrementalLassoHitTester(Int32)\n  fullName: StrokeCollection.GetIncrementalLassoHitTester(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Creates an <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a lasso (freehand) path.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalLassoHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the lasso path surrounds it. This is useful for implementing features, such as the ability to select a stroke with a lasso tool. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalLassoHitTester> to implement the lasso selection tool.\n  example:\n  - \"The following example demonstrates how to get an <xref:System.Windows.Ink.IncrementalLassoHitTester> that enables a user to select strokes with a lasso tool. To create a control that enables a user to select ink, see [How to: Select Ink from a Custom Control](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md).  \\n  \\n [!code-csharp[StrokeCollectionMethods#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/InkSelector.cs#17)]\\n [!code-vb[StrokeCollectionMethods#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/InkSelector.vb#17)]\"\n  syntax:\n    content: public System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester (int percentageWithinLasso);\n    parameters:\n    - id: percentageWithinLasso\n      type: System.Int32\n      description: The minimum percentage of each <xref href=\"System.Windows.Ink.Stroke\"></xref> that must be contained within the lasso for it to be considered hit.\n    return:\n      type: System.Windows.Ink.IncrementalLassoHitTester\n      description: An <xref href=\"System.Windows.Ink.IncrementalLassoHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)\n  commentId: M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)\n  id: GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetIncrementalStrokeHitTester(StylusShape)\n  nameWithType: StrokeCollection.GetIncrementalStrokeHitTester(StylusShape)\n  fullName: StrokeCollection.GetIncrementalStrokeHitTester(StylusShape)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Creates an <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with an erasing path.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> method returns an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that considers a <xref:System.Windows.Ink.Stroke> to be \"hit\" when the eraser path intersects it. This is useful for implementing features, such as the ability to erase part of a <xref:System.Windows.Ink.Stroke>. The <xref:System.Windows.Controls.InkCanvas> uses an <xref:System.Windows.Ink.IncrementalStrokeHitTester> when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.\n  example:\n  - \"The following example demonstrates how to get an <xref:System.Windows.Ink.IncrementalStrokeHitTester> that can be used to erase part of a <xref:System.Windows.Ink.Stroke>. To create a control that enables a user to erase ink, see [How to: Erase Ink on a Custom Control](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  \\n  \\n [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]\\n [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]\"\n  syntax:\n    content: public System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester (System.Windows.Ink.StylusShape eraserShape);\n    parameters:\n    - id: eraserShape\n      type: System.Windows.Ink.StylusShape\n      description: A <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the tip of the stylus.\n    return:\n      type: System.Windows.Ink.IncrementalStrokeHitTester\n      description: An <xref href=\"System.Windows.Ink.IncrementalStrokeHitTester\"></xref> that hit tests the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)\n  commentId: M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)\n  id: GetPropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetPropertyData(Guid)\n  nameWithType: StrokeCollection.GetPropertyData(Guid)\n  fullName: StrokeCollection.GetPropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the value of the custom property associated with the specified <xref href=\"System.Guid\"></xref>.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> and <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> methods enable you to add custom properties to a <xref:System.Windows.Ink.StrokeCollection>. You can then include extra information with a <xref:System.Windows.Ink.StrokeCollection>.\n  example:\n  - \"The following example demonstrates how to add and get custom property data. The `AddTimeStamp_Click` method uses the <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> method to add the current time to the <xref:System.Windows.Ink.StrokeCollection>. The `GetTimeStap_Click` method uses the <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> method to retrieve the timestamp from the <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]\\n [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]\"\n  syntax:\n    content: public object GetPropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref href=\"System.Guid\"></xref> associated with the custom property to get.\n    return:\n      type: System.Object\n      description: The value of the custom property associated with the specified <xref href=\"System.Guid\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.GetPropertyData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>propertyDataId</code> is not associated with a custom property of the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyDataIds\n  commentId: M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds\n  id: GetPropertyDataIds\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: GetPropertyDataIds()\n  nameWithType: StrokeCollection.GetPropertyDataIds()\n  fullName: StrokeCollection.GetPropertyDataIds()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the GUIDs of any custom properties associated with the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the custom property identifiers from the <xref:System.Windows.Ink.StrokeCollection>.  \\n  \\n [!code-csharp[StrokeCollectionMethods#27](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#27)]\\n [!code-vb[StrokeCollectionMethods#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#27)]\"\n  syntax:\n    content: public Guid[] GetPropertyDataIds ();\n    parameters: []\n    return:\n      type: System.Guid[]\n      description: An array of type <xref href=\"System.Guid\"></xref> that represent the custom property identifiers.\n  overload: System.Windows.Ink.StrokeCollection.GetPropertyDataIds*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)\n  commentId: M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)\n  id: HitTest(System.Windows.Rect,System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(Rect, Int32)\n  nameWithType: StrokeCollection.HitTest(Rect, Int32)\n  fullName: StrokeCollection.HitTest(Rect, Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that have at least the specified percentage of length within the specified rectangle.\n  remarks: ''\n  example:\n  - \"The following example erases the strokes that are at least 50% within the bounds of the <xref:System.Windows.Rect>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#36](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#36)]\\n [!code-vb[StrokeCollectionMethods#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#36)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Rect bounds, int percentageWithinBounds);\n    parameters:\n    - id: bounds\n      type: System.Windows.Rect\n      description: A <xref href=\"System.Windows.Rect\"></xref> that specifies the bounds to be hit tested.\n    - id: percentageWithinBounds\n      type: System.Int32\n      description: The minimum required length of a Stroke that must exist within bounds for it to be considered hit.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Rect\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)\n  commentId: M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)\n  id: HitTest(System.Windows.Point,System.Double)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(Point, Double)\n  nameWithType: StrokeCollection.HitTest(Point, Double)\n  fullName: StrokeCollection.HitTest(Point, Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that intersect the specified area.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the strokes that intersect the specified <xref:System.Windows.Point>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]\\n [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point, double diameter);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The <xref href=\"System.Windows.Point\"></xref> to hit test.\n    - id: diameter\n      type: System.Double\n      description: The size of the area around the <xref href=\"System.Windows.Point\"></xref> to hit test.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  commentId: M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  id: HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(IEnumerable<Point>, Int32)\n  nameWithType: StrokeCollection.HitTest(IEnumerable<Point>, Int32)\n  fullName: StrokeCollection.HitTest(IEnumerable<Point>, Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that have at least the specified percentage of length within the specified area.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove all strokes that are at least 80 percent within the specified lasso from a <xref:System.Windows.Ink.StrokeCollection>. This is useful when a custom control enables the user to select ink with a lasso. To create a control that enables a user to select ink with a lasso, see [How to: Select Ink from a Custom Control](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md).  \\n  \\n [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]\\n [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable<System.Windows.Point> lassoPoints, int percentageWithinLasso);\n    parameters:\n    - id: lassoPoints\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array of type <xref href=\"System.Windows.Point\"></xref> that represents the bounds of the area to be hit tested.\n    - id: percentageWithinLasso\n      type: System.Int32\n      description: The acceptable length of the <xref href=\"System.Windows.Ink.Stroke\"></xref>, as a percentage, for <code>lassoPoints</code> to contain.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> that has strokes with at least the specified percentage within the <xref href=\"System.Windows.Point\"></xref> array.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>lassoPoints</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>percentageWithinLasso</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>lassoPoints</code> contains an empty array.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>percentageWithinLasso</code> is less than 0 or greater than 100.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)\n  commentId: M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)\n  id: HitTest(System.Windows.Point)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(Point)\n  nameWithType: StrokeCollection.HitTest(Point)\n  fullName: StrokeCollection.HitTest(Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that intersect the specified point.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to get the strokes that intersect the specified <xref:System.Windows.Point>. This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]\\n [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point);\n    parameters:\n    - id: point\n      type: System.Windows.Point\n      description: The point to hit test.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A collection of <xref href=\"System.Windows.Ink.Stroke\"></xref> objects that intersect the specified point.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  commentId: M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  id: HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: HitTest(IEnumerable<Point>, StylusShape)\n  nameWithType: StrokeCollection.HitTest(IEnumerable<Point>, StylusShape)\n  fullName: StrokeCollection.HitTest(IEnumerable<Point>, StylusShape)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns a collection of strokes that intersect with the specified path.\n  remarks: ''\n  example:\n  - \"The following example changes the color of all the strokes that intersect the path that is created by the <xref:System.Windows.Point> array.  This example assumes that there is an <xref:System.Windows.Controls.InkPresenter> called `presenter`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#37](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#37)]\\n [!code-vb[StrokeCollectionMethods#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#37)]\"\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable<System.Windows.Point> path, System.Windows.Ink.StylusShape stylusShape);\n    parameters:\n    - id: path\n      type: System.Collections.Generic.IEnumerable{System.Windows.Point}\n      description: An array to type <xref href=\"System.Windows.Point\"></xref> that represents the path to be hit tested.\n    - id: stylusShape\n      type: System.Windows.Ink.StylusShape\n      description: The <xref href=\"System.Windows.Ink.StylusShape\"></xref> that specifies the shape of <code>eraserPath</code>.\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: A <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> of strokes that intersect with <code>path</code>.\n  overload: System.Windows.Ink.StrokeCollection.HitTest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)\n  commentId: M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)\n  id: IndexOf(System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: IndexOf(Stroke)\n  nameWithType: StrokeCollection.IndexOf(Stroke)\n  fullName: StrokeCollection.IndexOf(Stroke)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Returns the index of the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.IndexOf%2A> method returns -1 if `stroke` is not a member of the <xref:System.Windows.Ink.StrokeCollection>.\n  syntax:\n    content: public int IndexOf (System.Windows.Ink.Stroke stroke);\n    parameters:\n    - id: stroke\n      type: System.Windows.Ink.Stroke\n      description: The stroke whose position is required.\n    return:\n      type: System.Int32\n      description: The index of the stroke.\n  overload: System.Windows.Ink.StrokeCollection.IndexOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.InkSerializedFormat\n  commentId: F:System.Windows.Ink.StrokeCollection.InkSerializedFormat\n  id: InkSerializedFormat\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: InkSerializedFormat\n  nameWithType: StrokeCollection.InkSerializedFormat\n  fullName: StrokeCollection.InkSerializedFormat\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Represents the native persistence format for ink data.\n  remarks: Use the <xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat> field to specify the format of the <xref:System.Windows.Ink.StrokeCollection> when you transfer data, such as when you copy the <xref:System.Windows.Ink.StrokeCollection> to the Clipboard.\n  example:\n  - \"The following example demonstrates how to copy a <xref:System.Windows.Ink.StrokeCollection> to the Clipboard. The example specifies that the <xref:System.Windows.Ink.StrokeCollection> is in Ink Serialized Format (ISF), so that other programs, such as Microsoft Office Word can accept the copied data.  \\n  \\n [!code-csharp[StrokeCollectionMethods#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#5)]\\n [!code-vb[StrokeCollectionMethods#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#5)]\"\n  syntax:\n    content: public static readonly string InkSerializedFormat;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)\n  commentId: M:System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)\n  id: InsertItem(System.Int32,System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: InsertItem(Int32, Stroke)\n  nameWithType: StrokeCollection.InsertItem(Int32, Stroke)\n  fullName: StrokeCollection.InsertItem(Int32, Stroke)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Inserts a stroke into the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> at the specified index.\n  syntax:\n    content: protected override sealed void InsertItem (int index, System.Windows.Ink.Stroke stroke);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The specified index.\n    - id: stroke\n      type: System.Windows.Ink.Stroke\n      description: The specified stroke\n  overload: System.Windows.Ink.StrokeCollection.InsertItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  commentId: M:System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: OnPropertyChanged(PropertyChangedEventArgs)\n  nameWithType: StrokeCollection.OnPropertyChanged(PropertyChangedEventArgs)\n  fullName: StrokeCollection.OnPropertyChanged(PropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when any <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> property changes.\n  syntax:\n    content: protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.PropertyChangedEventArgs\n      description: Event data.\n  overload: System.Windows.Ink.StrokeCollection.OnPropertyChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  commentId: M:System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  id: OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  nameWithType: StrokeCollection.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  fullName: StrokeCollection.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Raises the <xref href=\"System.Windows.Ink.StrokeCollection.PropertyDataChanged\"></xref> event.\n  syntax:\n    content: protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.PropertyDataChangedEventArgs\n      description: A <xref href=\"System.Windows.Ink.PropertyDataChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)\n  commentId: M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)\n  id: OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  nameWithType: StrokeCollection.OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  fullName: StrokeCollection.OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Raises the <xref href=\"System.Windows.Ink.StrokeCollection.StrokesChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate.  \\n  \\n The <xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A> method also allows derived classes to handle the event without attaching a delegate, which is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnStrokesChanged (System.Windows.Ink.StrokeCollectionChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Ink.StrokeCollectionChangedEventArgs\n      description: A <xref href=\"System.Windows.Ink.StrokeCollectionChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Ink.StrokeCollection.OnStrokesChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.PropertyDataChanged\n  commentId: E:System.Windows.Ink.StrokeCollection.PropertyDataChanged\n  id: PropertyDataChanged\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: PropertyDataChanged\n  nameWithType: StrokeCollection.PropertyDataChanged\n  fullName: StrokeCollection.PropertyDataChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when custom property is added or removed from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to handle the <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> event. This example assumes that there is a <xref:System.Guid> called `dateTimeGuid` and the <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> event is connected to the event handler defined in this example.  \\n  \\n [!code-csharp[StrokeCollectionMethods#29](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#29)]\\n [!code-vb[StrokeCollectionMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#29)]\"\n  syntax:\n    content: public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;\n    return:\n      type: System.Windows.Ink.PropertyDataChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)\n  commentId: M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)\n  id: Remove(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Remove(StrokeCollection)\n  nameWithType: StrokeCollection.Remove(StrokeCollection)\n  fullName: StrokeCollection.Remove(StrokeCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes the specified strokes from the collection.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.Remove%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it removes.\n  example:\n  - \"The following example demonstrates how to remove all strokes that are at least 80 percent within the specified lasso from a <xref:System.Windows.Ink.StrokeCollection>. This is useful when a custom control enables the user to select ink with a lasso. To create a control that enables a user to select ink with a lasso, see [How to: Select Ink from a Custom Control](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md).  \\n  \\n [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]\\n [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]\"\n  syntax:\n    content: public void Remove (System.Windows.Ink.StrokeCollection strokes);\n    parameters:\n    - id: strokes\n      type: System.Windows.Ink.StrokeCollection\n      description: The <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to remove from the collection.\n  overload: System.Windows.Ink.StrokeCollection.Remove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)\n  commentId: M:System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)\n  id: RemoveItem(System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: RemoveItem(Int32)\n  nameWithType: StrokeCollection.RemoveItem(Int32)\n  fullName: StrokeCollection.RemoveItem(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes the stroke at the specified index from the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  syntax:\n    content: protected override sealed void RemoveItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The specified index.\n  overload: System.Windows.Ink.StrokeCollection.RemoveItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)\n  commentId: M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)\n  id: RemovePropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: RemovePropertyData(Guid)\n  nameWithType: StrokeCollection.RemovePropertyData(Guid)\n  fullName: StrokeCollection.RemovePropertyData(Guid)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Removes the custom property associated with the specified <xref href=\"System.Guid\"></xref>.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove a custom property from the <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and a <xref:System.Guid> called `timestamp`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#28](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#28)]\\n [!code-vb[StrokeCollectionMethods#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#28)]\"\n  syntax:\n    content: public void RemovePropertyData (Guid propertyDataId);\n    parameters:\n    - id: propertyDataId\n      type: System.Guid\n      description: The <xref href=\"System.Guid\"></xref> associated with the custom property to remove.\n  overload: System.Windows.Ink.StrokeCollection.RemovePropertyData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)\n  commentId: M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)\n  id: Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Replace(Stroke, StrokeCollection)\n  nameWithType: StrokeCollection.Replace(Stroke, StrokeCollection)\n  fullName: StrokeCollection.Replace(Stroke, StrokeCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces the specified <xref href=\"System.Windows.Ink.Stroke\"></xref> with the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.Replace%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event.\n  example:\n  - \"The following example demonstrates how to replace the selected strokes on an <xref:System.Windows.Controls.InkCanvas> with another <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]\\n [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]\"\n  syntax:\n    content: public void Replace (System.Windows.Ink.Stroke strokeToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);\n    parameters:\n    - id: strokeToReplace\n      type: System.Windows.Ink.Stroke\n      description: The <xref href=\"System.Windows.Ink.Stroke\"></xref> to replace.\n    - id: strokesToReplaceWith\n      type: System.Windows.Ink.StrokeCollection\n      description: The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Replace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>strokesToReplace</code> is empty.  \\n  \\n -or-  \\n  \\n <code>strokesToReplaceWith</code> is empty.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Windows.Ink.Stroke\\\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace</code>.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)\n  commentId: M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)\n  id: Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Replace(StrokeCollection, StrokeCollection)\n  nameWithType: StrokeCollection.Replace(StrokeCollection, StrokeCollection)\n  fullName: StrokeCollection.Replace(StrokeCollection, StrokeCollection)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces the specified <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> with a new <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.Replace%2A> method raises the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event for each <xref:System.Windows.Ink.Stroke> it replaces.\n  example:\n  - \"The following example demonstrates how to replace the selected strokes on an <xref:System.Windows.Controls.InkCanvas> with another <xref:System.Windows.Ink.StrokeCollection>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]\\n [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]\"\n  syntax:\n    content: public void Replace (System.Windows.Ink.StrokeCollection strokesToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);\n    parameters:\n    - id: strokesToReplace\n      type: System.Windows.Ink.StrokeCollection\n      description: The destination <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n    - id: strokesToReplaceWith\n      type: System.Windows.Ink.StrokeCollection\n      description: The source <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Replace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>strokesToReplace</code> is empty.  \\n  \\n -or-  \\n  \\n <code>strokesToReplaceWith</code> is empty.  \\n  \\n -or-  \\n  \\n A <xref href=\\\"System.Windows.Ink.Stroke\\\"></xref> in <code>strokesToReplaceWith</code> is already in <code>strokesToReplace.</code>  \\n  \\n -or-  \\n  \\n The strokes in <code>strokesToReplaceWith</code> are not continuous.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)\n  commentId: M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)\n  id: Save(System.IO.Stream)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Save(Stream)\n  nameWithType: StrokeCollection.Save(Stream)\n  fullName: StrokeCollection.Save(Stream)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref href=\"System.IO.Stream\"></xref>.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).\n  example:\n  - \"The following example demonstrates how to save a <xref:System.Windows.Ink.StrokeCollection> to a file by using the <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> method. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]\\n [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]\"\n  syntax:\n    content: public void Save (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref href=\"System.IO.Stream\"></xref> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n  overload: System.Windows.Ink.StrokeCollection.Save*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)\n  commentId: M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)\n  id: Save(System.IO.Stream,System.Boolean)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Save(Stream, Boolean)\n  nameWithType: StrokeCollection.Save(Stream, Boolean)\n  fullName: StrokeCollection.Save(Stream, Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Saves the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> to the specified <xref href=\"System.IO.Stream\"></xref> and compresses it, when specified.\n  remarks: The <xref:System.Windows.Ink.StrokeCollection.Save%2A> method saves the <xref:System.Windows.Ink.StrokeCollection> as Ink Serialized Format (ISF).\n  example:\n  - \"The following example demonstrates how to save a <xref:System.Windows.Ink.StrokeCollection> to a file by using the <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> method. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]\\n [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]\"\n  syntax:\n    content: public virtual void Save (System.IO.Stream stream, bool compress);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The <xref href=\"System.IO.Stream\"></xref> to which to save the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n    - id: compress\n      type: System.Boolean\n      description: '`true` to compress the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>; otherwise, `false`.'\n  overload: System.Windows.Ink.StrokeCollection.Save*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)\n  commentId: M:System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)\n  id: SetItem(System.Int32,System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: SetItem(Int32, Stroke)\n  nameWithType: StrokeCollection.SetItem(Int32, Stroke)\n  fullName: StrokeCollection.SetItem(Int32, Stroke)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Replaces the stroke at the specified index.\n  syntax:\n    content: protected override sealed void SetItem (int index, System.Windows.Ink.Stroke stroke);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The position at which to replace the stroke.\n    - id: stroke\n      type: System.Windows.Ink.Stroke\n      description: The stroke to replace the current stroke.\n  overload: System.Windows.Ink.StrokeCollection.SetItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Ink.StrokeCollection.StrokesChanged\n  commentId: E:System.Windows.Ink.StrokeCollection.StrokesChanged\n  id: StrokesChanged\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: StrokesChanged\n  nameWithType: StrokeCollection.StrokesChanged\n  fullName: StrokeCollection.StrokesChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Occurs when a <xref href=\"System.Windows.Ink.Stroke\"></xref> in the collection changes.\n  remarks: ''\n  example:\n  - \"The following example adds the current time as a custom property to each new stroke in the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event handler. The example assumes that the <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> event is connected to the event handler defined in this example.  \\n  \\n [!code-csharp[DrawingAttributes#4](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#4)]\\n [!code-vb[DrawingAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#4)]\"\n  syntax:\n    content: public event System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged;\n    return:\n      type: System.Windows.Ink.StrokeCollectionChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)\n  commentId: M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)\n  id: Transform(System.Windows.Media.Matrix,System.Boolean)\n  parent: System.Windows.Ink.StrokeCollection\n  langs:\n  - csharp\n  name: Transform(Matrix, Boolean)\n  nameWithType: StrokeCollection.Transform(Matrix, Boolean)\n  fullName: StrokeCollection.Transform(Matrix, Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Ink\n  summary: Modifies each of the <xref href=\"System.Windows.Ink.Stroke.StylusPoints\"></xref> and optionally the <xref href=\"System.Windows.Ink.DrawingAttributes.StylusTipTransform\"></xref> for each stroke in the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref> according to the specified <xref href=\"System.Windows.Media.Matrix\"></xref>.\n  remarks: When `applyToStylusTip` is `true`, the <xref:System.Windows.Ink.StrokeCollection.Transform%2A> method affects the shape of the stylus tip, as well as the position of the strokes. For example, if you rotate a <xref:System.Windows.Ink.StrokeCollection> 90 degrees, the strokes move around an axis and the height and width of the strokes appear to be inverted.\n  example:\n  - \"The following example demonstrates how to move all the strokes on an <xref:System.Windows.Controls.InkCanvas>. This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1`.  \\n  \\n [!code-csharp[StrokeCollectionMethods#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#9)]\\n [!code-vb[StrokeCollectionMethods#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#9)]\"\n  syntax:\n    content: public void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);\n    parameters:\n    - id: transformMatrix\n      type: System.Windows.Media.Matrix\n      description: A <xref href=\"System.Windows.Media.Matrix\"></xref> which specifies the transformation to perform on the <xref href=\"System.Windows.Ink.StrokeCollection\"></xref>.\n    - id: applyToStylusTip\n      type: System.Boolean\n      description: '`true` to apply the transformation to the tip of the stylus; otherwise, `false`.'\n  overload: System.Windows.Ink.StrokeCollection.Transform*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Collections.ObjectModel.Collection`1\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n- uid: System.Windows.Ink.Stroke\n  name: Stroke\n  nameWithType: Stroke\n  fullName: System.Windows.Ink.Stroke\n- uid: System.Collections.ObjectModel.Collection{System.Windows.Ink.Stroke}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Stroke>\n  nameWithType: Collection<Stroke>\n  fullName: System.Collections.ObjectModel.Collection<System.Windows.Ink.Stroke>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.Collection`1\n    name: Collection\n    nameWithType: Collection\n    fullName: System.Collections.ObjectModel.Collection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Ink.Stroke\n    name: Stroke\n    nameWithType: Stroke\n    fullName: System.Windows.Ink.Stroke\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Windows.Ink.StrokeCollection.#ctor\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokeCollection()\n  nameWithType: StrokeCollection.StrokeCollection()\n  fullName: StrokeCollection.StrokeCollection()\n- uid: System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokeCollection(IEnumerable<Stroke>)\n  nameWithType: StrokeCollection.StrokeCollection(IEnumerable<Stroke>)\n  fullName: StrokeCollection.StrokeCollection(IEnumerable<Stroke>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Stroke>\n  nameWithType: IEnumerable<Stroke>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Ink.Stroke>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Ink.Stroke\n    name: Stroke\n    nameWithType: Stroke\n    fullName: System.Windows.Ink.Stroke\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokeCollection(Stream)\n  nameWithType: StrokeCollection.StrokeCollection(Stream)\n  fullName: StrokeCollection.StrokeCollection(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Add(StrokeCollection)\n  nameWithType: StrokeCollection.Add(StrokeCollection)\n  fullName: StrokeCollection.Add(StrokeCollection)\n- uid: System.Windows.Ink.StrokeCollection\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollection\n  nameWithType: StrokeCollection\n  fullName: System.Windows.Ink.StrokeCollection\n- uid: System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: AddPropertyData(Guid, Object)\n  nameWithType: StrokeCollection.AddPropertyData(Guid, Object)\n  fullName: StrokeCollection.AddPropertyData(Guid, Object)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Ink.StrokeCollection.ClearItems\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: ClearItems()\n  nameWithType: StrokeCollection.ClearItems()\n  fullName: StrokeCollection.ClearItems()\n- uid: System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clip(IEnumerable<Point>)\n  nameWithType: StrokeCollection.Clip(IEnumerable<Point>)\n  fullName: StrokeCollection.Clip(IEnumerable<Point>)\n- uid: System.Windows.Point\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Point}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Point>\n  nameWithType: IEnumerable<Point>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Point>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.Point\n    name: Point\n    nameWithType: Point\n    fullName: System.Windows.Point\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clip(Rect)\n  nameWithType: StrokeCollection.Clip(Rect)\n  fullName: StrokeCollection.Clip(Rect)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: false\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Ink.StrokeCollection.Clone\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: StrokeCollection.Clone()\n  fullName: StrokeCollection.Clone()\n- uid: System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: ContainsPropertyData(Guid)\n  nameWithType: StrokeCollection.ContainsPropertyData(Guid)\n  fullName: StrokeCollection.ContainsPropertyData(Guid)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Draw(DrawingContext)\n  nameWithType: StrokeCollection.Draw(DrawingContext)\n  fullName: StrokeCollection.Draw(DrawingContext)\n- uid: System.Windows.Media.DrawingContext\n  parent: System.Windows.Media\n  isExternal: false\n  name: DrawingContext\n  nameWithType: DrawingContext\n  fullName: System.Windows.Media.DrawingContext\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Erase(IEnumerable<Point>)\n  nameWithType: StrokeCollection.Erase(IEnumerable<Point>)\n  fullName: StrokeCollection.Erase(IEnumerable<Point>)\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Erase(Rect)\n  nameWithType: StrokeCollection.Erase(Rect)\n  fullName: StrokeCollection.Erase(Rect)\n- uid: System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Erase(IEnumerable<Point>, StylusShape)\n  nameWithType: StrokeCollection.Erase(IEnumerable<Point>, StylusShape)\n  fullName: StrokeCollection.Erase(IEnumerable<Point>, StylusShape)\n- uid: System.Windows.Ink.StylusShape\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StylusShape\n  nameWithType: StylusShape\n  fullName: System.Windows.Ink.StylusShape\n- uid: System.Windows.Ink.StrokeCollection.GetBounds\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetBounds()\n  nameWithType: StrokeCollection.GetBounds()\n  fullName: StrokeCollection.GetBounds()\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetIncrementalLassoHitTester(Int32)\n  nameWithType: StrokeCollection.GetIncrementalLassoHitTester(Int32)\n  fullName: StrokeCollection.GetIncrementalLassoHitTester(Int32)\n- uid: System.Windows.Ink.IncrementalLassoHitTester\n  parent: System.Windows.Ink\n  isExternal: false\n  name: IncrementalLassoHitTester\n  nameWithType: IncrementalLassoHitTester\n  fullName: System.Windows.Ink.IncrementalLassoHitTester\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetIncrementalStrokeHitTester(StylusShape)\n  nameWithType: StrokeCollection.GetIncrementalStrokeHitTester(StylusShape)\n  fullName: StrokeCollection.GetIncrementalStrokeHitTester(StylusShape)\n- uid: System.Windows.Ink.IncrementalStrokeHitTester\n  parent: System.Windows.Ink\n  isExternal: false\n  name: IncrementalStrokeHitTester\n  nameWithType: IncrementalStrokeHitTester\n  fullName: System.Windows.Ink.IncrementalStrokeHitTester\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetPropertyData(Guid)\n  nameWithType: StrokeCollection.GetPropertyData(Guid)\n  fullName: StrokeCollection.GetPropertyData(Guid)\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyDataIds\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetPropertyDataIds()\n  nameWithType: StrokeCollection.GetPropertyDataIds()\n  fullName: StrokeCollection.GetPropertyDataIds()\n- uid: System.Guid[]\n  parent: System\n  isExternal: false\n  name: Guid[]\n  nameWithType: Guid[]\n  fullName: System.Guid[]\n  spec.csharp:\n  - uid: System.Guid\n    name: Guid\n    nameWithType: Guid\n    fullName: System.Guid\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(Rect, Int32)\n  nameWithType: StrokeCollection.HitTest(Rect, Int32)\n  fullName: StrokeCollection.HitTest(Rect, Int32)\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(Point, Double)\n  nameWithType: StrokeCollection.HitTest(Point, Double)\n  fullName: StrokeCollection.HitTest(Point, Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(IEnumerable<Point>, Int32)\n  nameWithType: StrokeCollection.HitTest(IEnumerable<Point>, Int32)\n  fullName: StrokeCollection.HitTest(IEnumerable<Point>, Int32)\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(Point)\n  nameWithType: StrokeCollection.HitTest(Point)\n  fullName: StrokeCollection.HitTest(Point)\n- uid: System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest(IEnumerable<Point>, StylusShape)\n  nameWithType: StrokeCollection.HitTest(IEnumerable<Point>, StylusShape)\n  fullName: StrokeCollection.HitTest(IEnumerable<Point>, StylusShape)\n- uid: System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: IndexOf(Stroke)\n  nameWithType: StrokeCollection.IndexOf(Stroke)\n  fullName: StrokeCollection.IndexOf(Stroke)\n- uid: System.Windows.Ink.StrokeCollection.InkSerializedFormat\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: InkSerializedFormat\n  nameWithType: StrokeCollection.InkSerializedFormat\n  fullName: StrokeCollection.InkSerializedFormat\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: InsertItem(Int32, Stroke)\n  nameWithType: StrokeCollection.InsertItem(Int32, Stroke)\n  fullName: StrokeCollection.InsertItem(Int32, Stroke)\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnPropertyChanged(PropertyChangedEventArgs)\n  nameWithType: StrokeCollection.OnPropertyChanged(PropertyChangedEventArgs)\n  fullName: StrokeCollection.OnPropertyChanged(PropertyChangedEventArgs)\n- uid: System.ComponentModel.PropertyChangedEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: PropertyChangedEventArgs\n  nameWithType: PropertyChangedEventArgs\n  fullName: System.ComponentModel.PropertyChangedEventArgs\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  nameWithType: StrokeCollection.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n  fullName: StrokeCollection.OnPropertyDataChanged(PropertyDataChangedEventArgs)\n- uid: System.Windows.Ink.PropertyDataChangedEventArgs\n  parent: System.Windows.Ink\n  isExternal: false\n  name: PropertyDataChangedEventArgs\n  nameWithType: PropertyDataChangedEventArgs\n  fullName: System.Windows.Ink.PropertyDataChangedEventArgs\n- uid: System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  nameWithType: StrokeCollection.OnStrokesChanged(StrokeCollectionChangedEventArgs)\n  fullName: StrokeCollection.OnStrokesChanged(StrokeCollectionChangedEventArgs)\n- uid: System.Windows.Ink.StrokeCollectionChangedEventArgs\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollectionChangedEventArgs\n  nameWithType: StrokeCollectionChangedEventArgs\n  fullName: System.Windows.Ink.StrokeCollectionChangedEventArgs\n- uid: System.Windows.Ink.StrokeCollection.PropertyDataChanged\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: PropertyDataChanged\n  nameWithType: StrokeCollection.PropertyDataChanged\n  fullName: StrokeCollection.PropertyDataChanged\n- uid: System.Windows.Ink.PropertyDataChangedEventHandler\n  parent: System.Windows.Ink\n  isExternal: false\n  name: PropertyDataChangedEventHandler\n  nameWithType: PropertyDataChangedEventHandler\n  fullName: System.Windows.Ink.PropertyDataChangedEventHandler\n- uid: System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Remove(StrokeCollection)\n  nameWithType: StrokeCollection.Remove(StrokeCollection)\n  fullName: StrokeCollection.Remove(StrokeCollection)\n- uid: System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: RemoveItem(Int32)\n  nameWithType: StrokeCollection.RemoveItem(Int32)\n  fullName: StrokeCollection.RemoveItem(Int32)\n- uid: System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: RemovePropertyData(Guid)\n  nameWithType: StrokeCollection.RemovePropertyData(Guid)\n  fullName: StrokeCollection.RemovePropertyData(Guid)\n- uid: System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Replace(Stroke, StrokeCollection)\n  nameWithType: StrokeCollection.Replace(Stroke, StrokeCollection)\n  fullName: StrokeCollection.Replace(Stroke, StrokeCollection)\n- uid: System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Replace(StrokeCollection, StrokeCollection)\n  nameWithType: StrokeCollection.Replace(StrokeCollection, StrokeCollection)\n  fullName: StrokeCollection.Replace(StrokeCollection, StrokeCollection)\n- uid: System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: StrokeCollection.Save(Stream)\n  fullName: StrokeCollection.Save(Stream)\n- uid: System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Save(Stream, Boolean)\n  nameWithType: StrokeCollection.Save(Stream, Boolean)\n  fullName: StrokeCollection.Save(Stream, Boolean)\n- uid: System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: SetItem(Int32, Stroke)\n  nameWithType: StrokeCollection.SetItem(Int32, Stroke)\n  fullName: StrokeCollection.SetItem(Int32, Stroke)\n- uid: System.Windows.Ink.StrokeCollection.StrokesChanged\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokesChanged\n  nameWithType: StrokeCollection.StrokesChanged\n  fullName: StrokeCollection.StrokesChanged\n- uid: System.Windows.Ink.StrokeCollectionChangedEventHandler\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollectionChangedEventHandler\n  nameWithType: StrokeCollectionChangedEventHandler\n  fullName: System.Windows.Ink.StrokeCollectionChangedEventHandler\n- uid: System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Transform(Matrix, Boolean)\n  nameWithType: StrokeCollection.Transform(Matrix, Boolean)\n  fullName: StrokeCollection.Transform(Matrix, Boolean)\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n- uid: System.Windows.Ink.StrokeCollection.#ctor*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: StrokeCollection\n  nameWithType: StrokeCollection.StrokeCollection\n  fullName: StrokeCollection.StrokeCollection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.Add*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Add\n  nameWithType: StrokeCollection.Add\n  fullName: StrokeCollection.Add\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.AddPropertyData*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: AddPropertyData\n  nameWithType: StrokeCollection.AddPropertyData\n  fullName: StrokeCollection.AddPropertyData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.ClearItems*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: ClearItems\n  nameWithType: StrokeCollection.ClearItems\n  fullName: StrokeCollection.ClearItems\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.Clip*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clip\n  nameWithType: StrokeCollection.Clip\n  fullName: StrokeCollection.Clip\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.Clone*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Clone\n  nameWithType: StrokeCollection.Clone\n  fullName: StrokeCollection.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.ContainsPropertyData*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: ContainsPropertyData\n  nameWithType: StrokeCollection.ContainsPropertyData\n  fullName: StrokeCollection.ContainsPropertyData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.Draw*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Draw\n  nameWithType: StrokeCollection.Draw\n  fullName: StrokeCollection.Draw\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.Erase*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Erase\n  nameWithType: StrokeCollection.Erase\n  fullName: StrokeCollection.Erase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.GetBounds*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetBounds\n  nameWithType: StrokeCollection.GetBounds\n  fullName: StrokeCollection.GetBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetIncrementalLassoHitTester\n  nameWithType: StrokeCollection.GetIncrementalLassoHitTester\n  fullName: StrokeCollection.GetIncrementalLassoHitTester\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetIncrementalStrokeHitTester\n  nameWithType: StrokeCollection.GetIncrementalStrokeHitTester\n  fullName: StrokeCollection.GetIncrementalStrokeHitTester\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyData*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetPropertyData\n  nameWithType: StrokeCollection.GetPropertyData\n  fullName: StrokeCollection.GetPropertyData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.GetPropertyDataIds*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: GetPropertyDataIds\n  nameWithType: StrokeCollection.GetPropertyDataIds\n  fullName: StrokeCollection.GetPropertyDataIds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.HitTest*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: HitTest\n  nameWithType: StrokeCollection.HitTest\n  fullName: StrokeCollection.HitTest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.IndexOf*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: StrokeCollection.IndexOf\n  fullName: StrokeCollection.IndexOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.InsertItem*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: InsertItem\n  nameWithType: StrokeCollection.InsertItem\n  fullName: StrokeCollection.InsertItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyChanged*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnPropertyChanged\n  nameWithType: StrokeCollection.OnPropertyChanged\n  fullName: StrokeCollection.OnPropertyChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.OnPropertyDataChanged*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnPropertyDataChanged\n  nameWithType: StrokeCollection.OnPropertyDataChanged\n  fullName: StrokeCollection.OnPropertyDataChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.OnStrokesChanged*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: OnStrokesChanged\n  nameWithType: StrokeCollection.OnStrokesChanged\n  fullName: StrokeCollection.OnStrokesChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.Remove*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Remove\n  nameWithType: StrokeCollection.Remove\n  fullName: StrokeCollection.Remove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.RemoveItem*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: RemoveItem\n  nameWithType: StrokeCollection.RemoveItem\n  fullName: StrokeCollection.RemoveItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.RemovePropertyData*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: RemovePropertyData\n  nameWithType: StrokeCollection.RemovePropertyData\n  fullName: StrokeCollection.RemovePropertyData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.Replace*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Replace\n  nameWithType: StrokeCollection.Replace\n  fullName: StrokeCollection.Replace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.Save*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Save\n  nameWithType: StrokeCollection.Save\n  fullName: StrokeCollection.Save\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.SetItem*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: SetItem\n  nameWithType: StrokeCollection.SetItem\n  fullName: StrokeCollection.SetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Windows.Ink.StrokeCollection.Transform*\n  parent: System.Windows.Ink.StrokeCollection\n  isExternal: false\n  name: Transform\n  nameWithType: StrokeCollection.Transform\n  fullName: StrokeCollection.Transform\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Ink/StrokeCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Collections.ObjectModel.Collection`1.Add(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: Collection<T>.Add(T)\n  fullName: Collection<T>.Add(T)\n- uid: System.Collections.ObjectModel.Collection`1.Clear\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Clear()\n  nameWithType: Collection<T>.Clear()\n  fullName: Collection<T>.Clear()\n- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: Collection<T>.Contains(T)\n  fullName: Collection<T>.Contains(T)\n- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: CopyTo(T[], Int32)\n  nameWithType: Collection<T>.CopyTo(T[], Int32)\n  fullName: Collection<T>.CopyTo(T[], Int32)\n- uid: System.Collections.ObjectModel.Collection`1.Count\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Count\n  nameWithType: Collection<T>.Count\n  fullName: Collection<T>.Count\n- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Collection<T>.GetEnumerator()\n  fullName: Collection<T>.GetEnumerator()\n- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: Collection<T>.IndexOf(T)\n  fullName: Collection<T>.IndexOf(T)\n- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Insert(Int32, T)\n  nameWithType: Collection<T>.Insert(Int32, T)\n  fullName: Collection<T>.Insert(Int32, T)\n- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: InsertItem(Int32, T)\n  nameWithType: Collection<T>.InsertItem(Int32, T)\n  fullName: Collection<T>.InsertItem(Int32, T)\n- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: Collection<T>.Item(Int32)\n  fullName: Collection<T>.Item(Int32)\n- uid: System.Collections.ObjectModel.Collection`1.Items\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Items\n  nameWithType: Collection<T>.Items\n  fullName: Collection<T>.Items\n- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: Collection<T>.Remove(T)\n  fullName: Collection<T>.Remove(T)\n- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: Collection<T>.RemoveAt(Int32)\n  fullName: Collection<T>.RemoveAt(Int32)\n- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: SetItem(Int32, T)\n  nameWithType: Collection<T>.SetItem(Int32, T)\n  fullName: Collection<T>.SetItem(Int32, T)\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: ICollection<T>.IsReadOnly\n  nameWithType: Collection<T>.ICollection<T>.IsReadOnly\n  fullName: Collection<T>.ICollection<T>.IsReadOnly\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: Collection<T>.ICollection.CopyTo(Array, Int32)\n  fullName: Collection<T>.ICollection.CopyTo(Array, Int32)\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: Collection<T>.ICollection.IsSynchronized\n  fullName: Collection<T>.ICollection.IsSynchronized\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: Collection<T>.ICollection.SyncRoot\n  fullName: Collection<T>.ICollection.SyncRoot\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IEnumerable.GetEnumerator()\n  nameWithType: Collection<T>.IEnumerable.GetEnumerator()\n  fullName: Collection<T>.IEnumerable.GetEnumerator()\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: Collection<T>.IList.Add(Object)\n  fullName: Collection<T>.IList.Add(Object)\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: Collection<T>.IList.Contains(Object)\n  fullName: Collection<T>.IList.Contains(Object)\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: Collection<T>.IList.IndexOf(Object)\n  fullName: Collection<T>.IList.IndexOf(Object)\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: Collection<T>.IList.Insert(Int32, Object)\n  fullName: Collection<T>.IList.Insert(Int32, Object)\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: Collection<T>.IList.IsFixedSize\n  fullName: Collection<T>.IList.IsFixedSize\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: Collection<T>.IList.IsReadOnly\n  fullName: Collection<T>.IList.IsReadOnly\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: Collection<T>.IList.Item(Int32)\n  fullName: Collection<T>.IList.Item(Int32)\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: Collection<T>.IList.Remove(Object)\n  fullName: Collection<T>.IList.Remove(Object)\n- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableArray\n  isExternal: false\n  name: ToImmutableArray<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableArray.ToImmutableArray<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableDictionary.ToImmutableDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableDictionary\n  isExternal: false\n  name: ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableDictionary.ToImmutableDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableHashSet.ToImmutableHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Collections.Immutable.ImmutableHashSet\n  isExternal: false\n  name: ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: ImmutableHashSet.ToImmutableHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableList\n  isExternal: false\n  name: ToImmutableList<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableList.ToImmutableList<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey,TValue>(IEnumerable<KeyValuePair<TKey,TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>)\n- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Collections.Immutable.ImmutableSortedDictionary\n  isExternal: false\n  name: ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  nameWithType: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n  fullName: ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource,TKey,TValue>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TValue>, IComparer<TKey>, IEqualityComparer<TValue>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>)\n- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})\n  parent: System.Collections.Immutable.ImmutableSortedSet\n  isExternal: false\n  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  nameWithType: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n  fullName: ImmutableSortedSet.ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption)\n- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)\n  parent: System.Data.DataTableExtensions\n  isExternal: false\n  name: CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  nameWithType: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n  fullName: DataTableExtensions.CopyToDataTable<T>(IEnumerable<T>, DataTable, LoadOption, FillErrorEventHandler)\n- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  nameWithType: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n  fullName: Enumerable.Aggregate<TSource>(IEnumerable<TSource>, Func<TSource,TSource,TSource>)\n- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>)\n- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  nameWithType: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n  fullName: Enumerable.Aggregate<TSource,TAccumulate,TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate,TSource,TAccumulate>, Func<TAccumulate,TResult>)\n- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.All<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Any<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Append<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Append<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: AsEnumerable<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.AsEnumerable<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Average(IEnumerable<Decimal>)\n  fullName: Enumerable.Average(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Double>)\n  nameWithType: Enumerable.Average(IEnumerable<Double>)\n  fullName: Enumerable.Average(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int32>)\n  nameWithType: Enumerable.Average(IEnumerable<Int32>)\n  fullName: Enumerable.Average(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Int64>)\n  nameWithType: Enumerable.Average(IEnumerable<Int64>)\n  fullName: Enumerable.Average(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Average(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Average(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average(IEnumerable<Single>)\n  nameWithType: Enumerable.Average(IEnumerable<Single>)\n  fullName: Enumerable.Average(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Average<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n  fullName: Enumerable.Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Count<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAt<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.First<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TKey,IEnumerable<TSource>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>)\n- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupBy<TSource,TKey,TElement,TResult>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, Func<TKey,IEnumerable<TElement>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>)\n- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.GroupJoin<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,IEnumerable<TInner>,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>)\n- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n  fullName: Enumerable.Join<TOuter,TInner,TKey,TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter,TKey>, Func<TInner,TKey>, Func<TOuter,TInner,TResult>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Last<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.LongCount<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Max(IEnumerable<Decimal>)\n  fullName: Enumerable.Max(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Double>)\n  nameWithType: Enumerable.Max(IEnumerable<Double>)\n  fullName: Enumerable.Max(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int32>)\n  nameWithType: Enumerable.Max(IEnumerable<Int32>)\n  fullName: Enumerable.Max(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Int64>)\n  nameWithType: Enumerable.Max(IEnumerable<Int64>)\n  fullName: Enumerable.Max(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Max(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Max(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max(IEnumerable<Single>)\n  nameWithType: Enumerable.Max(IEnumerable<Single>)\n  fullName: Enumerable.Max(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Max<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Max<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Min(IEnumerable<Decimal>)\n  fullName: Enumerable.Min(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Double>)\n  nameWithType: Enumerable.Min(IEnumerable<Double>)\n  fullName: Enumerable.Min(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int32>)\n  nameWithType: Enumerable.Min(IEnumerable<Int32>)\n  fullName: Enumerable.Min(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Int64>)\n  nameWithType: Enumerable.Min(IEnumerable<Int64>)\n  fullName: Enumerable.Min(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Min(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Min(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min(IEnumerable<Single>)\n  nameWithType: Enumerable.Min(IEnumerable<Single>)\n  fullName: Enumerable.Min(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Min<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Min<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderBy<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  nameWithType: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n  fullName: Enumerable.OrderByDescending<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IComparer<TKey>)\n- uid: System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Prepend<TSource>(IEnumerable<TSource>, TSource)\n  nameWithType: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n  fullName: Enumerable.Prepend<TSource>(IEnumerable<TSource>, TSource)\n- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Reverse<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Reverse<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,TResult>)\n- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  nameWithType: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n  fullName: Enumerable.Select<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  nameWithType: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n  fullName: Enumerable.SelectMany<TSource,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TResult>>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  nameWithType: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n  fullName: Enumerable.SelectMany<TSource,TCollection,TResult>(IEnumerable<TSource>, Func<TSource,Int32,IEnumerable<TCollection>>, Func<TSource,TCollection,TResult>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Single<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Skip<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Skip<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.SkipLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Decimal>)\n  nameWithType: Enumerable.Sum(IEnumerable<Decimal>)\n  fullName: Enumerable.Sum(IEnumerable<Decimal>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Double>)\n  nameWithType: Enumerable.Sum(IEnumerable<Double>)\n  fullName: Enumerable.Sum(IEnumerable<Double>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int32>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int32>)\n  fullName: Enumerable.Sum(IEnumerable<Int32>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Int64>)\n  nameWithType: Enumerable.Sum(IEnumerable<Int64>)\n  fullName: Enumerable.Sum(IEnumerable<Int64>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Double>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int32>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Int64>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Nullable<Single>>)\n  nameWithType: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n  fullName: Enumerable.Sum(IEnumerable<Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum(IEnumerable<Single>)\n  nameWithType: Enumerable.Sum(IEnumerable<Single>)\n  fullName: Enumerable.Sum(IEnumerable<Single>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Decimal>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Double>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int32>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Int64>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Decimal>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Double>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int32>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Int64>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Nullable<Single>>)\n- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  nameWithType: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n  fullName: Enumerable.Sum<TSource>(IEnumerable<TSource>, Func<TSource,Single>)\n- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Take<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.Take<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  nameWithType: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n  fullName: Enumerable.TakeLast<TSource>(IEnumerable<TSource>, Int32)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToArray<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToArray<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToDictionary<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.ToHashSet<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToList<TSource>(IEnumerable<TSource>)\n  nameWithType: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n  fullName: Enumerable.ToList<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>)\n- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey>(IEnumerable<TSource>, Func<TSource,TKey>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>)\n- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  nameWithType: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n  fullName: Enumerable.ToLookup<TSource,TKey,TElement>(IEnumerable<TSource>, Func<TSource,TKey>, Func<TSource,TElement>, IEqualityComparer<TKey>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)\n- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  nameWithType: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n  fullName: Enumerable.Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Boolean>)\n- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  nameWithType: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n  fullName: Enumerable.Where<TSource>(IEnumerable<TSource>, Func<TSource,Int32,Boolean>)\n- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  nameWithType: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n  fullName: Enumerable.Zip<TFirst,TSecond,TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst,TSecond,TResult>)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel<TSource>(IEnumerable<TSource>)\n  nameWithType: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n  fullName: ParallelEnumerable.AsParallel<TSource>(IEnumerable<TSource>)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable<TElement>(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n  fullName: Queryable.AsQueryable<TElement>(IEnumerable<TElement>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Ancestors<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Ancestors<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: AncestorsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.AncestorsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>)\n  fullName: Extensions.Attributes(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Attributes(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.Attributes(IEnumerable<XElement>, XName)\n  fullName: Extensions.Attributes(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.DescendantNodes<T>(IEnumerable<T>)\n  fullName: Extensions.DescendantNodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantNodesAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantNodesAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Descendants<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Descendants<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Descendants<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>)\n- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: DescendantsAndSelf(IEnumerable<XElement>, XName)\n  nameWithType: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n  fullName: Extensions.DescendantsAndSelf(IEnumerable<XElement>, XName)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>)\n  fullName: Extensions.Elements<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Elements<T>(IEnumerable<T>, XName)\n  nameWithType: Extensions.Elements<T>(IEnumerable<T>, XName)\n  fullName: Extensions.Elements<T>(IEnumerable<T>, XName)\n- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: InDocumentOrder<T>(IEnumerable<T>)\n  nameWithType: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n  fullName: Extensions.InDocumentOrder<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Nodes<T>(IEnumerable<T>)\n  nameWithType: Extensions.Nodes<T>(IEnumerable<T>)\n  fullName: Extensions.Nodes<T>(IEnumerable<T>)\n- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove(IEnumerable<XAttribute>)\n  nameWithType: Extensions.Remove(IEnumerable<XAttribute>)\n  fullName: Extensions.Remove(IEnumerable<XAttribute>)\n- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})\n  parent: System.Xml.Linq.Extensions\n  isExternal: false\n  name: Remove<T>(IEnumerable<T>)\n  nameWithType: Extensions.Remove<T>(IEnumerable<T>)\n  fullName: Extensions.Remove<T>(IEnumerable<T>)\n- uid: System.Collections.Specialized.INotifyCollectionChanged\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: INotifyCollectionChanged\n  nameWithType: INotifyCollectionChanged\n  fullName: System.Collections.Specialized.INotifyCollectionChanged\n- uid: System.ComponentModel.INotifyPropertyChanged\n  parent: System.ComponentModel\n  isExternal: false\n  name: INotifyPropertyChanged\n  nameWithType: INotifyPropertyChanged\n  fullName: System.ComponentModel.INotifyPropertyChanged\n"}