### YamlMime:ManagedReference
items:
- uid: System.Messaging.Trustee
  commentId: T:System.Messaging.Trustee
  id: Trustee
  children:
  - System.Messaging.Trustee.#ctor
  - System.Messaging.Trustee.#ctor(System.String)
  - System.Messaging.Trustee.#ctor(System.String,System.String)
  - System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  - System.Messaging.Trustee.Name
  - System.Messaging.Trustee.SystemName
  - System.Messaging.Trustee.TrusteeType
  langs:
  - csharp
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
  type: Class
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Specifies a user account, group account, or logon session to which an access control entry applies.
  remarks: "The trustee is the entity to whom you are granting or denying access rights when you create an access control entry. Set the <xref:System.Messaging.Trustee.TrusteeType%2A> member (either directly or using the <xref:System.Messaging.Trustee.%23ctor%2A> constructor) to specify whether the trustee is a user, computer, or other type. If you do not specify the trustee type before setting permissions for the trustee, the type defaults to `Unknown`.  \n  \n You must specify a value for the <xref:System.Messaging.Trustee.Name%2A> property before using the <xref:System.Messaging.Trustee> to set permissions. The <xref:System.Messaging.Trustee.Name%2A> contains the name of the user, group, or computer account to which the new access rights will be assigned. Optionally, you can set the <xref:System.Messaging.Trustee.SystemName%2A> property to identify the name of the system on which the trustee account is looked up to resolve the name's security identifier. If you do not specify a value for <xref:System.Messaging.Trustee.SystemName%2A>, the local computer looks up the account name."
  syntax:
    content: public class Trustee
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.Trustee.#ctor
  commentId: M:System.Messaging.Trustee.#ctor
  id: '#ctor'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee()
  nameWithType: Trustee.Trustee()
  fullName: Trustee.Trustee()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Initializes a new instance of the <xref href="System.Messaging.Trustee"></xref> class without setting any of its read/write properties.
  remarks: You must specify a value for the <xref:System.Messaging.Trustee.Name%2A> property before using the <xref:System.Messaging.Trustee> instance to set permissions. Optionally, you can set the <xref:System.Messaging.Trustee.SystemName%2A> property to identify the name of the system on which the trustee account is looked up to resolve the name's security identifier. If you do not specify a value for <xref:System.Messaging.Trustee.SystemName%2A>, the local computer looks up the account name.
  syntax:
    content: public Trustee ();
    parameters: []
  overload: System.Messaging.Trustee.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.Trustee.#ctor(System.String)
  commentId: M:System.Messaging.Trustee.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String)
  nameWithType: Trustee.Trustee(String)
  fullName: Trustee.Trustee(String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Initializes a new instance of the <xref href="System.Messaging.Trustee"></xref> class of type `Unknown`, setting the <xref href="System.Messaging.Trustee.Name"></xref> property to the value specified, and the <xref href="System.Messaging.Trustee.SystemName"></xref> to `null`.
  remarks: Use this overload to set the trustee account and specify that the local computer be used to look up the account. The <xref:System.Messaging.Trustee.TrusteeType%2A> property is set to `Unknown`, but you can modify that value before using this instance of <xref:System.Messaging.Trustee> to set permissions.
  syntax:
    content: public Trustee (string name);
    parameters:
    - id: name
      type: System.String
      description: The value to assign to the <xref href="System.Messaging.Trustee.Name"></xref> property.
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.Trustee.#ctor(System.String,System.String)
  commentId: M:System.Messaging.Trustee.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String, String)
  nameWithType: Trustee.Trustee(String, String)
  fullName: Trustee.Trustee(String, String)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Initializes a new instance of the <xref href="System.Messaging.Trustee"></xref> class of type `Unknown`, setting the <xref href="System.Messaging.Trustee.Name"></xref> and the `SystemName` properties to the values specified.
  remarks: Use this overload to set the trustee account and specify that a network computer be used to look up the account. The <xref:System.Messaging.Trustee.TrusteeType%2A> property is set to `Unknown`, but you can modify that value before using this instance of <xref:System.Messaging.Trustee> to set permissions.
  syntax:
    content: public Trustee (string name, string systemName);
    parameters:
    - id: name
      type: System.String
      description: The value to assign to the <xref href="System.Messaging.Trustee.Name"></xref> property.
    - id: systemName
      type: System.String
      description: The value to assign to the <xref href="System.Messaging.Trustee.SystemName"></xref> property.
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  commentId: M:System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  id: '#ctor(System.String,System.String,System.Messaging.TrusteeType)'
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Trustee(String, String, TrusteeType)
  nameWithType: Trustee.Trustee(String, String, TrusteeType)
  fullName: Trustee.Trustee(String, String, TrusteeType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Initializes a new instance of the <xref href="System.Messaging.Trustee"></xref> class of the specified type, setting the <xref href="System.Messaging.Trustee.Name"></xref> and the <xref href="System.Messaging.Trustee.SystemName"></xref> properties to the values specified.
  remarks: "Use this overload when the trustee type is known to set the trustee account and specify a network computer to be used to look up the account.  \n  \n This overload sets the <xref:System.Messaging.Trustee.TrusteeType%2A> property at construction, but you can modify that value before using this instance of <xref:System.Messaging.Trustee> to set permissions. The `Unknown` trustee type (which the other overloads of the constructor set by default) should be used only when you do not know the kind of trust that is being used, but know that it is valid."
  syntax:
    content: public Trustee (string name, string systemName, System.Messaging.TrusteeType trusteeType);
    parameters:
    - id: name
      type: System.String
      description: The value to assign to the <xref href="System.Messaging.Trustee.Name"></xref> property.
    - id: systemName
      type: System.String
      description: The value to assign to the <xref href="System.Messaging.Trustee.SystemName"></xref> property.
    - id: trusteeType
      type: System.Messaging.TrusteeType
      description: A <xref href="System.Messaging.TrusteeType"></xref> that indicates the account type of the trustee.
  overload: System.Messaging.Trustee.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>name</code> parameter is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.Trustee.Name
  commentId: P:System.Messaging.Trustee.Name
  id: Name
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: Name
  nameWithType: Trustee.Name
  fullName: Trustee.Name
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets the name of the trustee.
  remarks: "You must specify a value for the <xref:System.Messaging.Trustee.Name%2A> property before using the <xref:System.Messaging.Trustee> to set permissions. The <xref:System.Messaging.Trustee.Name%2A> contains the name of the user, group, or computer account to which the new access rights will be assigned.  \n  \n If you do not specify a value for the <xref:System.Messaging.Trustee.SystemName%2A> property, the account you identify in the <xref:System.Messaging.Trustee.Name%2A> property is looked up on the local computer. If you do specify a <xref:System.Messaging.Trustee.SystemName%2A>, the account is looked up on the computer you specify.  \n  \n If you are not connected to the network (for example, if you are in workgroup mode), the <xref:System.Messaging.Trustee.Name%2A> property can be any local user or group. In this case, you should not specify any value for <xref:System.Messaging.Trustee.SystemName%2A>, as workgroup mode is local by definition."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: The name of the account to which the new rights will be assigned. The default is `null`.
  overload: System.Messaging.Trustee.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <xref href="System.Messaging.Trustee.Name"></xref> property is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.Trustee.SystemName
  commentId: P:System.Messaging.Trustee.SystemName
  id: SystemName
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: SystemName
  nameWithType: Trustee.SystemName
  fullName: Trustee.SystemName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets the computer on which to look up the trustee's account.
  remarks: You must specify a value for <xref:System.Messaging.Trustee.Name%2A> before you use this instance of <xref:System.Messaging.Trustee> to set permissions, but <xref:System.Messaging.Trustee.SystemName%2A> is optional. If you leave <xref:System.Messaging.Trustee.SystemName%2A>`null`, the local computer is used to look up the account you specify in the <xref:System.Messaging.Trustee.Name%2A> property.
  syntax:
    content: public string SystemName { get; set; }
    return:
      type: System.String
      description: The local or remote computer on which the account exists. The default is `null`, which indicates that the name will be looked up on the local computer.
  overload: System.Messaging.Trustee.SystemName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
- uid: System.Messaging.Trustee.TrusteeType
  commentId: P:System.Messaging.Trustee.TrusteeType
  id: TrusteeType
  parent: System.Messaging.Trustee
  langs:
  - csharp
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
  fullName: Trustee.TrusteeType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: Gets or sets the type of the trustee, which identifies whether the trustee is a user, group, computer, domain, or alias.
  remarks: "The <xref:System.Messaging.Trustee.TrusteeType%2A> indicates what type of account the trustee is associated with on the domain controller or on the local computer. This can be, for example, a user account, a group account, or a computer account.  \n  \n If you are specifying a predefined group name for the <xref:System.Messaging.Trustee.Name%2A> property, such as Everyone, the <xref:System.Messaging.Trustee.TrusteeType%2A> is `Group`, rather than `Alias`."
  syntax:
    content: public System.Messaging.TrusteeType TrusteeType { get; set; }
    return:
      type: System.Messaging.TrusteeType
      description: A <xref href="System.Messaging.TrusteeType"></xref> that indicates what type of account the trustee has on the system. The default is `Unknown`.
  overload: System.Messaging.Trustee.TrusteeType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: The trustee type specified is not one of the <xref href="System.Messaging.TrusteeType"></xref> enumeration members.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
  ms.technology:
  - dotnet-standard
  manager: tyoung
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.Trustee.#ctor
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee()
  nameWithType: Trustee.Trustee()
  fullName: Trustee.Trustee()
- uid: System.Messaging.Trustee.#ctor(System.String)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String)
  nameWithType: Trustee.Trustee(String)
  fullName: Trustee.Trustee(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.Trustee.#ctor(System.String,System.String)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String, String)
  nameWithType: Trustee.Trustee(String, String)
  fullName: Trustee.Trustee(String, String)
- uid: System.Messaging.Trustee.#ctor(System.String,System.String,System.Messaging.TrusteeType)
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee(String, String, TrusteeType)
  nameWithType: Trustee.Trustee(String, String, TrusteeType)
  fullName: Trustee.Trustee(String, String, TrusteeType)
- uid: System.Messaging.TrusteeType
  parent: System.Messaging
  isExternal: false
  name: TrusteeType
  nameWithType: TrusteeType
  fullName: System.Messaging.TrusteeType
- uid: System.Messaging.Trustee.Name
  parent: System.Messaging.Trustee
  isExternal: false
  name: Name
  nameWithType: Trustee.Name
  fullName: Trustee.Name
- uid: System.Messaging.Trustee.SystemName
  parent: System.Messaging.Trustee
  isExternal: false
  name: SystemName
  nameWithType: Trustee.SystemName
  fullName: Trustee.SystemName
- uid: System.Messaging.Trustee.TrusteeType
  parent: System.Messaging.Trustee
  isExternal: false
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
  fullName: Trustee.TrusteeType
- uid: System.Messaging.Trustee.#ctor*
  parent: System.Messaging.Trustee
  isExternal: false
  name: Trustee
  nameWithType: Trustee.Trustee
  fullName: Trustee.Trustee
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
- uid: System.Messaging.Trustee.Name*
  parent: System.Messaging.Trustee
  isExternal: false
  name: Name
  nameWithType: Trustee.Name
  fullName: Trustee.Name
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
- uid: System.Messaging.Trustee.SystemName*
  parent: System.Messaging.Trustee
  isExternal: false
  name: SystemName
  nameWithType: Trustee.SystemName
  fullName: Trustee.SystemName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
- uid: System.Messaging.Trustee.TrusteeType*
  parent: System.Messaging.Trustee
  isExternal: false
  name: TrusteeType
  nameWithType: Trustee.TrusteeType
  fullName: Trustee.TrusteeType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Messaging/Trustee.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
