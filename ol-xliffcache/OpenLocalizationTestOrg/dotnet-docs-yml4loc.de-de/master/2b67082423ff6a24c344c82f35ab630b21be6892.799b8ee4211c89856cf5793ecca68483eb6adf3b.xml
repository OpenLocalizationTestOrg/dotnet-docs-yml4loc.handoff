{"nodes":[{"content":"A platform-specific type that is used to represent a pointer or a handle.","nodes":[{"pos":[0,73],"content":"A platform-specific type that is used to represent a pointer or a handle.","nodes":[{"content":"A platform-specific type that is used to represent a pointer or a handle.","pos":[0,73]}]}],"pos":[1647,1721],"yaml":true},{"content":"The <xref:System.UIntPtr> type is designed to be an integer whose size is platform-specific. That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.  \n  \n> [!IMPORTANT]\n>  The <xref:System.IntPtr> type is CLS-compliant, while the <xref:System.UIntPtr> type is not. Only the <xref:System.IntPtr> type is used in the common language runtime. The <xref:System.UIntPtr> type is provided mostly to maintain architectural symmetry with the <xref:System.IntPtr> type.  \n  \n The <xref:System.UIntPtr> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers. <xref:System.UIntPtr> objects can also be used to hold handles.  \n  \n This type implements the <xref:System.Runtime.Serialization.ISerializable> interface.","nodes":[{"pos":[0,248],"content":"The <xref:System.UIntPtr> type is designed to be an integer whose size is platform-specific. That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.","nodes":[{"content":"The <xref:System.UIntPtr> type is designed to be an integer whose size is platform-specific. That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.","pos":[0,248],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.UIntPtr&gt;</ph> type is designed to be an integer whose size is platform-specific.","pos":[0,92],"source":"The <xref:System.UIntPtr> type is designed to be an integer whose size is platform-specific."},{"content":"That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.","pos":[93,248]}]}]},{"pos":[256,560],"content":"[!IMPORTANT]\n The <xref:System.IntPtr> type is CLS-compliant, while the <xref:System.UIntPtr> type is not. Only the <xref:System.IntPtr> type is used in the common language runtime. The <xref:System.UIntPtr> type is provided mostly to maintain architectural symmetry with the <xref:System.IntPtr> type.","leadings":["","> "],"nodes":[{"content":" The <xref:System.IntPtr> type is CLS-compliant, while the <xref:System.UIntPtr> type is not. Only the <xref:System.IntPtr> type is used in the common language runtime. The <xref:System.UIntPtr> type is provided mostly to maintain architectural symmetry with the <xref:System.IntPtr> type.","pos":[13,302],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IntPtr&gt;</ph> type is CLS-compliant, while the <ph id=\"ph2\">&lt;xref:System.UIntPtr&gt;</ph> type is not.","pos":[1,93],"source":" The <xref:System.IntPtr> type is CLS-compliant, while the <xref:System.UIntPtr> type is not."},{"content":"Only the <ph id=\"ph1\">&lt;xref:System.IntPtr&gt;</ph> type is used in the common language runtime.","pos":[94,168],"source":" Only the <xref:System.IntPtr> type is used in the common language runtime."},{"content":"The <ph id=\"ph1\">&lt;xref:System.UIntPtr&gt;</ph> type is provided mostly to maintain architectural symmetry with the <ph id=\"ph2\">&lt;xref:System.IntPtr&gt;</ph> type.","pos":[169,289],"source":" The <xref:System.UIntPtr> type is provided mostly to maintain architectural symmetry with the <xref:System.IntPtr> type."}]}]},{"pos":[567,807],"content":"The <xref:System.UIntPtr> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers. <xref:System.UIntPtr> objects can also be used to hold handles.","nodes":[{"content":"The <xref:System.UIntPtr> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers. <xref:System.UIntPtr> objects can also be used to hold handles.","pos":[0,240],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.UIntPtr&gt;</ph> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers.","pos":[0,176],"source":"The <xref:System.UIntPtr> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers."},{"content":"<ph id=\"ph1\">&lt;xref:System.UIntPtr&gt;</ph> objects can also be used to hold handles.","pos":[177,240],"source":" <xref:System.UIntPtr> objects can also be used to hold handles."}]}]},{"pos":[814,899],"content":"This type implements the <xref:System.Runtime.Serialization.ISerializable> interface.","nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.","pos":[0,85],"source":"This type implements the <xref:System.Runtime.Serialization.ISerializable> interface."}]}],"pos":[1732,2641],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.UIntPtr\"></xref> structure using the specified 32-bit pointer or handle.","nodes":[{"pos":[0,125],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.UIntPtr\"&gt;&lt;/xref&gt;</ph> structure using the specified 32-bit pointer or handle.","source":"Initializes a new instance of the <xref href=\"System.UIntPtr\"></xref> structure using the specified 32-bit pointer or handle."}],"pos":[4498,4624],"yaml":true},{"content":"A pointer or handle contained in a 32-bit unsigned integer.","nodes":[{"pos":[0,59],"content":"A pointer or handle contained in a 32-bit unsigned integer.","nodes":[{"content":"A pointer or handle contained in a 32-bit unsigned integer.","pos":[0,59]}]}],"pos":[4753,4813],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.UIntPtr\"></xref> using the specified 64-bit pointer or handle.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.UIntPtr\"&gt;&lt;/xref&gt;</ph> using the specified 64-bit pointer or handle.","source":"Initializes a new instance of <xref href=\"System.UIntPtr\"></xref> using the specified 64-bit pointer or handle."}],"pos":[6300,6412],"yaml":true},{"content":"An exception is only thrown if the value of `value` requires more bits than the current platform supports.","nodes":[{"pos":[0,106],"content":"An exception is only thrown if the value of <ph id=\"ph1\">`value`</ph> requires more bits than the current platform supports.","source":"An exception is only thrown if the value of `value` requires more bits than the current platform supports."}],"pos":[6423,6530],"yaml":true,"extradata":"MT"},{"content":"A pointer or handle contained in a 64-bit unsigned integer.","nodes":[{"pos":[0,59],"content":"A pointer or handle contained in a 64-bit unsigned integer.","nodes":[{"content":"A pointer or handle contained in a 64-bit unsigned integer.","pos":[0,59]}]}],"pos":[6660,6720],"yaml":true},{"content":"On a 32-bit platform, <code>value</code> is too large to represent as an <xref href=\"System.UIntPtr\"></xref>.","nodes":[{"pos":[0,109],"content":"On a 32-bit platform, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is too large to represent as an <ph id=\"ph2\">&lt;xref href=\"System.UIntPtr\"&gt;&lt;/xref&gt;</ph>.","source":"On a 32-bit platform, <code>value</code> is too large to represent as an <xref href=\"System.UIntPtr\"></xref>."}],"pos":[6862,6972],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.UIntPtr\"></xref> using the specified pointer to an unspecified type.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.UIntPtr\"&gt;&lt;/xref&gt;</ph> using the specified pointer to an unspecified type.","source":"Initializes a new instance of <xref href=\"System.UIntPtr\"></xref> using the specified pointer to an unspecified type."}],"pos":[8402,8520],"yaml":true},{"content":"A pointer to an unspecified type.","nodes":[{"pos":[0,33],"content":"A pointer to an unspecified type.","nodes":[{"content":"A pointer to an unspecified type.","pos":[0,33]}]}],"pos":[8694,8728],"yaml":true},{"content":"Adds an offset to the value of an unsigned pointer.","nodes":[{"pos":[0,51],"content":"Adds an offset to the value of an unsigned pointer.","nodes":[{"content":"Adds an offset to the value of an unsigned pointer.","pos":[0,51]}]}],"pos":[10309,10361],"yaml":true},{"content":"The <xref:System.IntPtr.Add%2A> method does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, the addition operation is performed in an unchecked context.  \n  \n Languages that do not support operator overloading or custom operators can use this method to add an offset to the value of an unsigned pointer.","nodes":[{"pos":[0,216],"content":"The <xref:System.IntPtr.Add%2A> method does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, the addition operation is performed in an unchecked context.","nodes":[{"content":"The <xref:System.IntPtr.Add%2A> method does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, the addition operation is performed in an unchecked context.","pos":[0,216],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IntPtr.Add%2A&gt;</ph> method does not throw an exception if the result is too large to represent as a pointer on the specified platform.","pos":[0,146],"source":"The <xref:System.IntPtr.Add%2A> method does not throw an exception if the result is too large to represent as a pointer on the specified platform."},{"content":"Instead, the addition operation is performed in an unchecked context.","pos":[147,216]}]}]},{"pos":[223,367],"content":"Languages that do not support operator overloading or custom operators can use this method to add an offset to the value of an unsigned pointer.","nodes":[{"content":"Languages that do not support operator overloading or custom operators can use this method to add an offset to the value of an unsigned pointer.","pos":[0,144]}]}],"pos":[10372,10744],"yaml":true,"extradata":"MT"},{"content":"The unsigned pointer to add the offset to.","nodes":[{"pos":[0,42],"content":"The unsigned pointer to add the offset to.","nodes":[{"content":"The unsigned pointer to add the offset to.","pos":[0,42]}]}],"pos":[11382,11425],"yaml":true},{"content":"The offset to add.","nodes":[{"pos":[0,18],"content":"The offset to add.","nodes":[{"content":"The offset to add.","pos":[0,18]}]}],"pos":[11486,11505],"yaml":true},{"content":"A new unsigned pointer that reflects the addition of <code>offset</code> to <code>pointer</code>.","nodes":[{"pos":[0,97],"content":"A new unsigned pointer that reflects the addition of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">pointer</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A new unsigned pointer that reflects the addition of <code>offset</code> to <code>pointer</code>."}],"pos":[11563,11661],"yaml":true},{"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"pos":[0,80],"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value indicating whether this instance is equal to a specified object.","pos":[0,80]}]}],"pos":[13139,13220],"yaml":true},{"content":"An object to compare with this instance or `null`.","nodes":[{"pos":[0,50],"content":"An object to compare with this instance or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare with this instance or `null`."}],"pos":[13360,13411],"yaml":true},{"content":"`true` if <code>obj</code> is an instance of <xref href=\"System.UIntPtr\"></xref> and equals the value of this instance; otherwise, `false`.","nodes":[{"pos":[0,139],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an instance of <ph id=\"ph3\">&lt;xref href=\"System.UIntPtr\"&gt;&lt;/xref&gt;</ph> and equals the value of this instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>obj</code> is an instance of <xref href=\"System.UIntPtr\"></xref> and equals the value of this instance; otherwise, `false`."}],"pos":[13469,13611],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[15059,15100],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[15234,15269],"yaml":true},{"content":"Adds an offset to the value of an unsigned pointer.","nodes":[{"pos":[0,51],"content":"Adds an offset to the value of an unsigned pointer.","nodes":[{"content":"Adds an offset to the value of an unsigned pointer.","pos":[0,51]}]}],"pos":[16853,16905],"yaml":true},{"content":"The <xref:System.UIntPtr.op_Addition%2A> method defines the addition operation for <xref:System.UIntPtr> objects. It enables code such as the following.  \n  \n [!code-csharp[System.UIntPtr.op_Addition#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.op_addition/cs/op_addition1.cs#1)]\n [!code-vb[System.UIntPtr.op_Addition#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.op_addition/vb/op_addition1.vb#1)]  \n  \n Languages that do not support custom operators can call the <xref:System.UIntPtr.Add%2A> method instead.  \n  \n The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context.  \n  \n The equivalent method for this operator is <xref:System.%2A> U IntPtr.Add(System. U IntPtr,System.Int32)?qualifyHint=True&autoUpgrade=False","nodes":[{"pos":[0,152],"content":"The <xref:System.UIntPtr.op_Addition%2A> method defines the addition operation for <xref:System.UIntPtr> objects. It enables code such as the following.","nodes":[{"content":"The <xref:System.UIntPtr.op_Addition%2A> method defines the addition operation for <xref:System.UIntPtr> objects. It enables code such as the following.","pos":[0,152],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.UIntPtr.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id=\"ph2\">&lt;xref:System.UIntPtr&gt;</ph> objects.","pos":[0,113],"source":"The <xref:System.UIntPtr.op_Addition%2A> method defines the addition operation for <xref:System.UIntPtr> objects."},{"content":"It enables code such as the following.","pos":[114,152]}]}]},{"pos":[159,446],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.UIntPtr.op_Addition#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.op_addition/cs/op_addition1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.UIntPtr.op_Addition#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.op_addition/vb/op_addition1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.UIntPtr.op_Addition#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.op_addition/cs/op_addition1.cs#1)]\n [!code-vb[System.UIntPtr.op_Addition#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.op_addition/vb/op_addition1.vb#1)]"},{"pos":[453,557],"content":"Languages that do not support custom operators can call the <xref:System.UIntPtr.Add%2A> method instead.","nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.UIntPtr.Add%2A&gt;</ph> method instead.","pos":[0,104],"source":"Languages that do not support custom operators can call the <xref:System.UIntPtr.Add%2A> method instead."}]},{"pos":[564,744],"content":"The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context.","nodes":[{"content":"The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context.","pos":[0,180],"nodes":[{"content":"The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform.","pos":[0,130]},{"content":"Instead, it is performed in an unchecked context.","pos":[131,180]}]}]},{"pos":[751,890],"content":"The equivalent method for this operator is <xref:System.%2A> U IntPtr.Add(System. U IntPtr,System.Int32)?qualifyHint=True&autoUpgrade=False","nodes":[{"content":"The equivalent method for this operator is <xref:System.%2A> U IntPtr.Add(System. U IntPtr,System.Int32)?qualifyHint=True&autoUpgrade=False","pos":[0,139],"nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.%2A&gt;</ph> U IntPtr.Add(System.","pos":[0,81],"source":"The equivalent method for this operator is <xref:System.%2A> U IntPtr.Add(System."},{"content":"U IntPtr,System.Int32)?qualifyHint=True&amp;autoUpgrade=False","pos":[82,139],"source":" U IntPtr,System.Int32)?qualifyHint=True&autoUpgrade=False"}]}]}],"pos":[16916,17818],"yaml":true,"extradata":"MT"},{"content":"The unsigned pointer to add the offset to.","nodes":[{"pos":[0,42],"content":"The unsigned pointer to add the offset to.","nodes":[{"content":"The unsigned pointer to add the offset to.","pos":[0,42]}]}],"pos":[17986,18029],"yaml":true},{"content":"The offset to add.","nodes":[{"pos":[0,18],"content":"The offset to add.","nodes":[{"content":"The offset to add.","pos":[0,18]}]}],"pos":[18090,18109],"yaml":true},{"content":"A new unsigned pointer that reflects the addition of <code>offset</code> to <code>pointer</code>.","nodes":[{"pos":[0,97],"content":"A new unsigned pointer that reflects the addition of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">pointer</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A new unsigned pointer that reflects the addition of <code>offset</code> to <code>pointer</code>."}],"pos":[18167,18265],"yaml":true},{"content":"Determines whether two specified instances of <xref href=\"System.UIntPtr\"></xref> are equal.","nodes":[{"pos":[0,92],"content":"Determines whether two specified instances of <ph id=\"ph1\">&lt;xref href=\"System.UIntPtr\"&gt;&lt;/xref&gt;</ph> are equal.","source":"Determines whether two specified instances of <xref href=\"System.UIntPtr\"></xref> are equal."}],"pos":[19861,19954],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,115],"content":"The equivalent method for this operator is <xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,115],"source":"The equivalent method for this operator is <xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName>"}]}],"pos":[19965,20081],"yaml":true,"extradata":"MT"},{"content":"The first pointer or handle to compare.","nodes":[{"pos":[0,39],"content":"The first pointer or handle to compare.","nodes":[{"content":"The first pointer or handle to compare.","pos":[0,39]}]}],"pos":[20248,20288],"yaml":true},{"content":"The second pointer or handle to compare.","nodes":[{"pos":[0,40],"content":"The second pointer or handle to compare.","nodes":[{"content":"The second pointer or handle to compare.","pos":[0,40]}]}],"pos":[20351,20392],"yaml":true},{"content":"`true` if <code>value1</code> equals <code>value2</code>; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> equals <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value1</code> equals <code>value2</code>; otherwise, `false`."}],"pos":[20450,20530],"yaml":true},{"content":"Determines whether two specified instances of <xref href=\"System.UIntPtr\"></xref> are not equal.","nodes":[{"pos":[0,96],"content":"Determines whether two specified instances of <ph id=\"ph1\">&lt;xref href=\"System.UIntPtr\"&gt;&lt;/xref&gt;</ph> are not equal.","source":"Determines whether two specified instances of <xref href=\"System.UIntPtr\"></xref> are not equal."}],"pos":[32560,32657],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,115],"content":"The equivalent method for this operator is <xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,115],"source":"The equivalent method for this operator is <xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName>"}]}],"pos":[32668,32784],"yaml":true,"extradata":"MT"},{"content":"The first pointer or handle to compare.","nodes":[{"pos":[0,39],"content":"The first pointer or handle to compare.","nodes":[{"content":"The first pointer or handle to compare.","pos":[0,39]}]}],"pos":[32953,32993],"yaml":true},{"content":"The second pointer or handle to compare.","nodes":[{"pos":[0,40],"content":"The second pointer or handle to compare.","nodes":[{"content":"The second pointer or handle to compare.","pos":[0,40]}]}],"pos":[33056,33097],"yaml":true},{"content":"`true` if <code>value1</code> does not equal <code>value2</code>; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value1</ph><ept id=\"p1\">&lt;/code&gt;</ept> does not equal <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">value2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value1</code> does not equal <code>value2</code>; otherwise, `false`."}],"pos":[33155,33243],"yaml":true},{"content":"Subtracts an offset from the value of an unsigned pointer.","nodes":[{"pos":[0,58],"content":"Subtracts an offset from the value of an unsigned pointer.","nodes":[{"content":"Subtracts an offset from the value of an unsigned pointer.","pos":[0,58]}]}],"pos":[34847,34906],"yaml":true},{"content":"The <xref:System.UIntPtr.op_Subtraction%2A> method defines the subtraction operation for <xref:System.UIntPtr> objects. It enables code such as the following.  \n  \n [!code-csharp[System.UIntPtr.op_Addition#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.op_addition/cs/op_subtraction1.cs#2)]\n [!code-vb[System.UIntPtr.op_Addition#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.op_addition/vb/op_subtraction1.vb#2)]  \n  \n Languages that do not support custom operators can call the <xref:System.UIntPtr.Subtract%2A> method instead.  \n  \n The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context.","nodes":[{"pos":[0,158],"content":"The <xref:System.UIntPtr.op_Subtraction%2A> method defines the subtraction operation for <xref:System.UIntPtr> objects. It enables code such as the following.","nodes":[{"content":"The <xref:System.UIntPtr.op_Subtraction%2A> method defines the subtraction operation for <xref:System.UIntPtr> objects. It enables code such as the following.","pos":[0,158],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.UIntPtr.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id=\"ph2\">&lt;xref:System.UIntPtr&gt;</ph> objects.","pos":[0,119],"source":"The <xref:System.UIntPtr.op_Subtraction%2A> method defines the subtraction operation for <xref:System.UIntPtr> objects."},{"content":"It enables code such as the following.","pos":[120,158]}]}]},{"pos":[165,458],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.UIntPtr.op_Addition#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.op_addition/cs/op_subtraction1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.UIntPtr.op_Addition#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.op_addition/vb/op_subtraction1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.UIntPtr.op_Addition#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.op_addition/cs/op_subtraction1.cs#2)]\n [!code-vb[System.UIntPtr.op_Addition#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.op_addition/vb/op_subtraction1.vb#2)]"},{"pos":[465,574],"content":"Languages that do not support custom operators can call the <xref:System.UIntPtr.Subtract%2A> method instead.","nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.UIntPtr.Subtract%2A&gt;</ph> method instead.","pos":[0,109],"source":"Languages that do not support custom operators can call the <xref:System.UIntPtr.Subtract%2A> method instead."}]},{"pos":[581,764],"content":"The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context.","nodes":[{"content":"The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context.","pos":[0,183],"nodes":[{"content":"The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform.","pos":[0,133]},{"content":"Instead, it is performed in an unchecked context.","pos":[134,183]}]}]}],"pos":[34917,35691],"yaml":true,"extradata":"MT"},{"content":"The unsigned pointer to subtract the offset from.","nodes":[{"pos":[0,49],"content":"The unsigned pointer to subtract the offset from.","nodes":[{"content":"The unsigned pointer to subtract the offset from.","pos":[0,49]}]}],"pos":[35862,35912],"yaml":true},{"content":"The offset to subtract.","nodes":[{"pos":[0,23],"content":"The offset to subtract.","nodes":[{"content":"The offset to subtract.","pos":[0,23]}]}],"pos":[35973,35997],"yaml":true},{"content":"A new unsigned pointer that reflects the subtraction of <code>offset</code> from <code>pointer</code>.","nodes":[{"pos":[0,102],"content":"A new unsigned pointer that reflects the subtraction of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">pointer</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A new unsigned pointer that reflects the subtraction of <code>offset</code> from <code>pointer</code>."}],"pos":[36055,36158],"yaml":true},{"content":"Gets the size of this instance.","nodes":[{"pos":[0,31],"content":"Gets the size of this instance.","nodes":[{"content":"Gets the size of this instance.","pos":[0,31]}]}],"pos":[37568,37600],"yaml":true},{"content":"The size of a pointer or handle on this platform, measured in bytes. The value of this property is 4 on a 32-bit platform, and 8 on a 64-bit platform.","nodes":[{"pos":[0,150],"content":"The size of a pointer or handle on this platform, measured in bytes. The value of this property is 4 on a 32-bit platform, and 8 on a 64-bit platform.","nodes":[{"content":"The size of a pointer or handle on this platform, measured in bytes. The value of this property is 4 on a 32-bit platform, and 8 on a 64-bit platform.","pos":[0,150],"nodes":[{"content":"The size of a pointer or handle on this platform, measured in bytes.","pos":[0,68]},{"content":"The value of this property is 4 on a 32-bit platform, and 8 on a 64-bit platform.","pos":[69,150]}]}]}],"pos":[37711,37862],"yaml":true},{"content":"Subtracts an offset from the value of an unsigned pointer.","nodes":[{"pos":[0,58],"content":"Subtracts an offset from the value of an unsigned pointer.","nodes":[{"content":"Subtracts an offset from the value of an unsigned pointer.","pos":[0,58]}]}],"pos":[39419,39478],"yaml":true},{"content":"The <xref:System.IntPtr.Subtract%2A> method does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, the subtraction operation is performed in an unchecked context.  \n  \n Languages that do not support operator overloading or custom operators can use this method to subtract an offset from the value of an unsigned pointer.","nodes":[{"pos":[0,224],"content":"The <xref:System.IntPtr.Subtract%2A> method does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, the subtraction operation is performed in an unchecked context.","nodes":[{"content":"The <xref:System.IntPtr.Subtract%2A> method does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, the subtraction operation is performed in an unchecked context.","pos":[0,224],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IntPtr.Subtract%2A&gt;</ph> method does not throw an exception if the result is too small to represent as a pointer on the specified platform.","pos":[0,151],"source":"The <xref:System.IntPtr.Subtract%2A> method does not throw an exception if the result is too small to represent as a pointer on the specified platform."},{"content":"Instead, the subtraction operation is performed in an unchecked context.","pos":[152,224]}]}]},{"pos":[231,382],"content":"Languages that do not support operator overloading or custom operators can use this method to subtract an offset from the value of an unsigned pointer.","nodes":[{"content":"Languages that do not support operator overloading or custom operators can use this method to subtract an offset from the value of an unsigned pointer.","pos":[0,151]}]}],"pos":[39489,39876],"yaml":true,"extradata":"MT"},{"content":"The unsigned pointer to subtract the offset from.","nodes":[{"pos":[0,49],"content":"The unsigned pointer to subtract the offset from.","nodes":[{"content":"The unsigned pointer to subtract the offset from.","pos":[0,49]}]}],"pos":[40564,40614],"yaml":true},{"content":"The offset to subtract.","nodes":[{"pos":[0,23],"content":"The offset to subtract.","nodes":[{"content":"The offset to subtract.","pos":[0,23]}]}],"pos":[40675,40699],"yaml":true},{"content":"A new unsigned pointer that reflects the subtraction of <code>offset</code> from <code>pointer</code>.","nodes":[{"pos":[0,102],"content":"A new unsigned pointer that reflects the subtraction of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">offset</ph><ept id=\"p1\">&lt;/code&gt;</ept> from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">pointer</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A new unsigned pointer that reflects the subtraction of <code>offset</code> from <code>pointer</code>."}],"pos":[40757,40860],"yaml":true},{"content":"Converts the value of this instance to a pointer to an unspecified type.","nodes":[{"pos":[0,72],"content":"Converts the value of this instance to a pointer to an unspecified type.","nodes":[{"content":"Converts the value of this instance to a pointer to an unspecified type.","pos":[0,72]}]}],"pos":[42298,42371],"yaml":true},{"content":"A pointer to <xref href=\"System.Void\"></xref>; that is, a pointer to memory containing data of an unspecified type.","nodes":[{"pos":[0,115],"content":"A pointer to <ph id=\"ph1\">&lt;xref href=\"System.Void\"&gt;&lt;/xref&gt;</ph>; that is, a pointer to memory containing data of an unspecified type.","source":"A pointer to <xref href=\"System.Void\"></xref>; that is, a pointer to memory containing data of an unspecified type."}],"pos":[42541,42657],"yaml":true},{"content":"Converts the numeric value of this instance to its equivalent string representation.","nodes":[{"pos":[0,84],"content":"Converts the numeric value of this instance to its equivalent string representation.","nodes":[{"content":"Converts the numeric value of this instance to its equivalent string representation.","pos":[0,84]}]}],"pos":[44143,44228],"yaml":true},{"content":"If the value of the <xref:System.IntPtr.Size%2A> property for this instance is 4, then this method is equivalent to <xref:System.UInt32.ToString%2A>; otherwise, this method is equivalent to <xref:System.UInt64.ToString%2A>.","nodes":[{"pos":[0,223],"content":"If the value of the <xref:System.IntPtr.Size%2A> property for this instance is 4, then this method is equivalent to <xref:System.UInt32.ToString%2A>; otherwise, this method is equivalent to <xref:System.UInt64.ToString%2A>.","nodes":[{"content":"If the value of the <ph id=\"ph1\">&lt;xref:System.IntPtr.Size%2A&gt;</ph> property for this instance is 4, then this method is equivalent to <ph id=\"ph2\">&lt;xref:System.UInt32.ToString%2A&gt;</ph>; otherwise, this method is equivalent to <ph id=\"ph3\">&lt;xref:System.UInt64.ToString%2A&gt;</ph>.","pos":[0,223],"source":"If the value of the <xref:System.IntPtr.Size%2A> property for this instance is 4, then this method is equivalent to <xref:System.UInt32.ToString%2A>; otherwise, this method is equivalent to <xref:System.UInt64.ToString%2A>."}]}],"pos":[44239,44463],"yaml":true,"extradata":"MT"},{"content":"The string representation of the value of this instance.","nodes":[{"pos":[0,56],"content":"The string representation of the value of this instance.","nodes":[{"content":"The string representation of the value of this instance.","pos":[0,56]}]}],"pos":[44598,44655],"yaml":true},{"content":"Converts the value of this instance to a 32-bit unsigned integer.","nodes":[{"pos":[0,65],"content":"Converts the value of this instance to a 32-bit unsigned integer.","nodes":[{"content":"Converts the value of this instance to a 32-bit unsigned integer.","pos":[0,65]}]}],"pos":[46087,46153],"yaml":true},{"content":"An exception is only thrown if the value of `value` requires more bits than the current platform supports.","nodes":[{"pos":[0,106],"content":"An exception is only thrown if the value of <ph id=\"ph1\">`value`</ph> requires more bits than the current platform supports.","source":"An exception is only thrown if the value of `value` requires more bits than the current platform supports."}],"pos":[46164,46271],"yaml":true,"extradata":"MT"},{"content":"A 32-bit unsigned integer equal to the value of this instance.","nodes":[{"pos":[0,62],"content":"A 32-bit unsigned integer equal to the value of this instance.","nodes":[{"content":"A 32-bit unsigned integer equal to the value of this instance.","pos":[0,62]}]}],"pos":[46395,46458],"yaml":true},{"content":"On a 64-bit platform, the value of this instance is too large to represent as a 32-bit unsigned integer.","nodes":[{"pos":[0,104],"content":"On a 64-bit platform, the value of this instance is too large to represent as a 32-bit unsigned integer.","nodes":[{"content":"On a 64-bit platform, the value of this instance is too large to represent as a 32-bit unsigned integer.","pos":[0,104]}]}],"pos":[46603,46708],"yaml":true},{"content":"Converts the value of this instance to a 64-bit unsigned integer.","nodes":[{"pos":[0,65],"content":"Converts the value of this instance to a 64-bit unsigned integer.","nodes":[{"content":"Converts the value of this instance to a 64-bit unsigned integer.","pos":[0,65]}]}],"pos":[48086,48152],"yaml":true},{"content":"A 64-bit unsigned integer equal to the value of this instance.","nodes":[{"pos":[0,62],"content":"A 64-bit unsigned integer equal to the value of this instance.","nodes":[{"content":"A 64-bit unsigned integer equal to the value of this instance.","pos":[0,62]}]}],"pos":[48277,48340],"yaml":true},{"content":"A read-only field that represents a pointer or handle that has been initialized to zero.","nodes":[{"pos":[0,88],"content":"A read-only field that represents a pointer or handle that has been initialized to zero.","nodes":[{"content":"A read-only field that represents a pointer or handle that has been initialized to zero.","pos":[0,88]}]}],"pos":[49741,49830],"yaml":true},{"content":"The value of this field is not equivalent to `null`. Use this field to efficiently determine whether an instance of <xref:System.UIntPtr> has been set to a value other than zero.  \n  \n For example, assume the variable, uip, is an instance of <xref:System.UIntPtr>. You can determine if it has been set by comparing it to the value returned by a constructor, for example: \" `if uip != new UIntPtr(0)...` \". However, invoking a constructor to get an unintialized pointer is inefficient. It is better to code either \" `if uip != UIntPtr.Zero...` \", or \" `if !UIntPtr.Zero.Equals(uip)...` \".","nodes":[{"pos":[0,178],"content":"The value of this field is not equivalent to `null`. Use this field to efficiently determine whether an instance of <xref:System.UIntPtr> has been set to a value other than zero.","nodes":[{"content":"The value of this field is not equivalent to <ph id=\"ph1\">`null`</ph>.","pos":[0,52],"source":"The value of this field is not equivalent to `null`."},{"content":"Use this field to efficiently determine whether an instance of <ph id=\"ph1\">&lt;xref:System.UIntPtr&gt;</ph> has been set to a value other than zero.","pos":[53,178],"source":" Use this field to efficiently determine whether an instance of <xref:System.UIntPtr> has been set to a value other than zero."}]},{"pos":[185,587],"content":"For example, assume the variable, uip, is an instance of <xref:System.UIntPtr>. You can determine if it has been set by comparing it to the value returned by a constructor, for example: \" `if uip != new UIntPtr(0)...` \". However, invoking a constructor to get an unintialized pointer is inefficient. It is better to code either \" `if uip != UIntPtr.Zero...` \", or \" `if !UIntPtr.Zero.Equals(uip)...` \".","nodes":[{"content":"For example, assume the variable, uip, is an instance of <ph id=\"ph1\">&lt;xref:System.UIntPtr&gt;</ph>.","pos":[0,79],"source":"For example, assume the variable, uip, is an instance of <xref:System.UIntPtr>."},{"content":"You can determine if it has been set by comparing it to the value returned by a constructor, for example: \" <ph id=\"ph1\">`if uip != new UIntPtr(0)...`</ph> \".","pos":[80,220],"source":" You can determine if it has been set by comparing it to the value returned by a constructor, for example: \" `if uip != new UIntPtr(0)...` \"."},{"content":"However, invoking a constructor to get an unintialized pointer is inefficient.","pos":[221,299]},{"content":"It is better to code either \" <ph id=\"ph1\">`if uip != UIntPtr.Zero...`</ph> \", or \" <ph id=\"ph2\">`if !UIntPtr.Zero.Equals(uip)...`</ph> \".","pos":[300,402],"source":" It is better to code either \" `if uip != UIntPtr.Zero...` \", or \" `if !UIntPtr.Zero.Equals(uip)...` \"."}]}],"pos":[49841,50439],"yaml":true,"extradata":"MT"},{"content":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the current <xref href=\"System.UIntPtr\"></xref> object.","nodes":[{"pos":[0,176],"content":"Populates a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object with the data needed to serialize the current <ph id=\"ph2\">&lt;xref href=\"System.UIntPtr\"&gt;&lt;/xref&gt;</ph> object.","source":"Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the current <xref href=\"System.UIntPtr\"></xref> object."}],"pos":[53513,53690],"yaml":true},{"content":"This method populates the `info` parameter with the value of the current <xref:System.UIntPtr> object.","nodes":[{"pos":[0,102],"content":"This method populates the <ph id=\"ph1\">`info`</ph> parameter with the value of the current <ph id=\"ph2\">&lt;xref:System.UIntPtr&gt;</ph> object.","source":"This method populates the `info` parameter with the value of the current <xref:System.UIntPtr> object."}],"pos":[53701,53804],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object to populate with data.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object to populate with data.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object to populate with data."}],"pos":[54079,54181],"yaml":true},{"content":"The destination for this serialization. (This parameter is not used; specify `null`.)","nodes":[{"pos":[0,85],"content":"The destination for this serialization. (This parameter is not used; specify `null`.)","nodes":[{"content":"The destination for this serialization.","pos":[0,39]},{"content":"(This parameter is not used; specify <ph id=\"ph1\">`null`</ph>.)","pos":[40,85],"source":" (This parameter is not used; specify `null`.)"}]}],"pos":[54276,54362],"yaml":true},{"content":"<code>info</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>info</code> is `null`."}],"pos":[54563,54592],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.UIntPtr\n  commentId: T:System.UIntPtr\n  id: UIntPtr\n  children:\n  - System.UIntPtr.#ctor(System.UInt32)\n  - System.UIntPtr.#ctor(System.UInt64)\n  - System.UIntPtr.#ctor(System.Void*)\n  - System.UIntPtr.Add(System.UIntPtr,System.Int32)\n  - System.UIntPtr.Equals(System.Object)\n  - System.UIntPtr.GetHashCode\n  - System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)\n  - System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)\n  - System.UIntPtr.op_Explicit(System.Void* to System.UIntPtr)\n  - System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt64)\n  - System.UIntPtr.op_Explicit(System.UIntPtr to System.Void*)\n  - System.UIntPtr.op_Explicit(System.UInt64 to System.UIntPtr)\n  - System.UIntPtr.op_Explicit(System.UInt32 to System.UIntPtr)\n  - System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt32)\n  - System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)\n  - System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)\n  - System.UIntPtr.Size\n  - System.UIntPtr.Subtract(System.UIntPtr,System.Int32)\n  - System.UIntPtr.ToPointer\n  - System.UIntPtr.ToString\n  - System.UIntPtr.ToUInt32\n  - System.UIntPtr.ToUInt64\n  - System.UIntPtr.Zero\n  - System.UIntPtr.System#IEquatable{System#UIntPtr}#Equals(System.UIntPtr)\n  - System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: UIntPtr\n  nameWithType: UIntPtr\n  fullName: System.UIntPtr\n  type: Struct\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: A platform-specific type that is used to represent a pointer or a handle.\n  remarks: \"The <xref:System.UIntPtr> type is designed to be an integer whose size is platform-specific. That is, an instance of this type is expected to be 32-bits on 32-bit hardware and operating systems, and 64-bits on 64-bit hardware and operating systems.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.IntPtr> type is CLS-compliant, while the <xref:System.UIntPtr> type is not. Only the <xref:System.IntPtr> type is used in the common language runtime. The <xref:System.UIntPtr> type is provided mostly to maintain architectural symmetry with the <xref:System.IntPtr> type.  \\n  \\n The <xref:System.UIntPtr> type can be used by languages that support pointers, and as a common means of referring to data between languages that do and do not support pointers. <xref:System.UIntPtr> objects can also be used to hold handles.  \\n  \\n This type implements the <xref:System.Runtime.Serialization.ISerializable> interface.\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct UIntPtr : System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Runtime.Serialization.ISerializable\n  attributes:\n  - type: System.CLSCompliantAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.#ctor(System.UInt32)\n  commentId: M:System.UIntPtr.#ctor(System.UInt32)\n  id: '#ctor(System.UInt32)'\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: UIntPtr(UInt32)\n  nameWithType: UIntPtr.UIntPtr(UInt32)\n  fullName: UIntPtr.UIntPtr(UInt32)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of the <xref href=\"System.UIntPtr\"></xref> structure using the specified 32-bit pointer or handle.\n  syntax:\n    content: public UIntPtr (uint value);\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: A pointer or handle contained in a 32-bit unsigned integer.\n  overload: System.UIntPtr.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.#ctor(System.UInt64)\n  commentId: M:System.UIntPtr.#ctor(System.UInt64)\n  id: '#ctor(System.UInt64)'\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: UIntPtr(UInt64)\n  nameWithType: UIntPtr.UIntPtr(UInt64)\n  fullName: UIntPtr.UIntPtr(UInt64)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.UIntPtr\"></xref> using the specified 64-bit pointer or handle.\n  remarks: An exception is only thrown if the value of `value` requires more bits than the current platform supports.\n  syntax:\n    content: public UIntPtr (ulong value);\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: A pointer or handle contained in a 64-bit unsigned integer.\n  overload: System.UIntPtr.#ctor*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: On a 32-bit platform, <code>value</code> is too large to represent as an <xref href=\"System.UIntPtr\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.#ctor(System.Void*)\n  commentId: M:System.UIntPtr.#ctor(System.Void*)\n  id: '#ctor(System.Void*)'\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: UIntPtr(Void*)\n  nameWithType: UIntPtr.UIntPtr(Void*)\n  fullName: UIntPtr.UIntPtr(Void*)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.UIntPtr\"></xref> using the specified pointer to an unspecified type.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public UIntPtr (void* value);\n    parameters:\n    - id: value\n      type: System.Void*\n      description: A pointer to an unspecified type.\n  overload: System.UIntPtr.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.Add(System.UIntPtr,System.Int32)\n  commentId: M:System.UIntPtr.Add(System.UIntPtr,System.Int32)\n  id: Add(System.UIntPtr,System.Int32)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: Add(UIntPtr, Int32)\n  nameWithType: UIntPtr.Add(UIntPtr, Int32)\n  fullName: UIntPtr.Add(UIntPtr, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Adds an offset to the value of an unsigned pointer.\n  remarks: \"The <xref:System.IntPtr.Add%2A> method does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, the addition operation is performed in an unchecked context.  \\n  \\n Languages that do not support operator overloading or custom operators can use this method to add an offset to the value of an unsigned pointer.\"\n  example:\n  - \"The following example instantiates a <xref:System.UIntPtr> object that points to the beginning of a ten-element array, and then calls the <xref:System.UIntPtr.Add%2A> method to iterate the elements in the array.  \\n  \\n [!code-csharp[System.UIntPtr.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.add/cs/add1.cs#1)]\\n [!code-vb[System.UIntPtr.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.add/vb/add1.vb#1)]\"\n  syntax:\n    content: public static UIntPtr Add (UIntPtr pointer, int offset);\n    parameters:\n    - id: pointer\n      type: System.UIntPtr\n      description: The unsigned pointer to add the offset to.\n    - id: offset\n      type: System.Int32\n      description: The offset to add.\n    return:\n      type: System.UIntPtr\n      description: A new unsigned pointer that reflects the addition of <code>offset</code> to <code>pointer</code>.\n  overload: System.UIntPtr.Add*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.Equals(System.Object)\n  commentId: M:System.UIntPtr.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: UIntPtr.Equals(Object)\n  fullName: UIntPtr.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether this instance is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with this instance or `null`.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is an instance of <xref href=\"System.UIntPtr\"></xref> and equals the value of this instance; otherwise, `false`.'\n  overload: System.UIntPtr.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.GetHashCode\n  commentId: M:System.UIntPtr.GetHashCode\n  id: GetHashCode\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: UIntPtr.GetHashCode()\n  fullName: UIntPtr.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.UIntPtr.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)\n  commentId: M:System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)\n  id: op_Addition(System.UIntPtr,System.Int32)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Addition(UIntPtr, Int32)\n  nameWithType: UIntPtr.op_Addition(UIntPtr, Int32)\n  fullName: UIntPtr.op_Addition(UIntPtr, Int32)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Adds an offset to the value of an unsigned pointer.\n  remarks: \"The <xref:System.UIntPtr.op_Addition%2A> method defines the addition operation for <xref:System.UIntPtr> objects. It enables code such as the following.  \\n  \\n [!code-csharp[System.UIntPtr.op_Addition#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.op_addition/cs/op_addition1.cs#1)]\\n [!code-vb[System.UIntPtr.op_Addition#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.op_addition/vb/op_addition1.vb#1)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.UIntPtr.Add%2A> method instead.  \\n  \\n The addition operation does not throw an exception if the result is too large to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context.  \\n  \\n The equivalent method for this operator is <xref:System.%2A> U IntPtr.Add(System. U IntPtr,System.Int32)?qualifyHint=True&autoUpgrade=False\"\n  syntax:\n    content: public static UIntPtr op_Addition (UIntPtr pointer, int offset);\n    parameters:\n    - id: pointer\n      type: System.UIntPtr\n      description: The unsigned pointer to add the offset to.\n    - id: offset\n      type: System.Int32\n      description: The offset to add.\n    return:\n      type: System.UIntPtr\n      description: A new unsigned pointer that reflects the addition of <code>offset</code> to <code>pointer</code>.\n  overload: System.UIntPtr.op_Addition*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)\n  commentId: M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)\n  id: op_Equality(System.UIntPtr,System.UIntPtr)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Equality(UIntPtr, UIntPtr)\n  nameWithType: UIntPtr.op_Equality(UIntPtr, UIntPtr)\n  fullName: UIntPtr.op_Equality(UIntPtr, UIntPtr)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two specified instances of <xref href=\"System.UIntPtr\"></xref> are equal.\n  remarks: The equivalent method for this operator is <xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Equality (UIntPtr value1, UIntPtr value2);\n    parameters:\n    - id: value1\n      type: System.UIntPtr\n      description: The first pointer or handle to compare.\n    - id: value2\n      type: System.UIntPtr\n      description: The second pointer or handle to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value1</code> equals <code>value2</code>; otherwise, `false`.'\n  overload: System.UIntPtr.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.op_Explicit(System.Void* to System.UIntPtr)\n  commentId: M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr\n  id: op_Explicit(System.Void* to System.UIntPtr)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Explicit(Void* to UIntPtr)\n  nameWithType: UIntPtr.op_Explicit(Void* to UIntPtr)\n  fullName: UIntPtr.op_Explicit(Void* to UIntPtr)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static UIntPtr op_Explicit (void* value);\n    parameters:\n    - id: value\n      type: System.Void*\n      description: ''\n    return:\n      type: System.UIntPtr\n      description: ''\n  overload: System.UIntPtr.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt64)\n  commentId: M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64\n  id: op_Explicit(System.UIntPtr to System.UInt64)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Explicit(UIntPtr to UInt64)\n  nameWithType: UIntPtr.op_Explicit(UIntPtr to UInt64)\n  fullName: UIntPtr.op_Explicit(UIntPtr to UInt64)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static ulong op_Explicit (UIntPtr value);\n    parameters:\n    - id: value\n      type: System.UIntPtr\n      description: ''\n    return:\n      type: System.UInt64\n      description: ''\n  overload: System.UIntPtr.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.Void*)\n  commentId: M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*\n  id: op_Explicit(System.UIntPtr to System.Void*)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Explicit(UIntPtr to Void*)\n  nameWithType: UIntPtr.op_Explicit(UIntPtr to Void*)\n  fullName: UIntPtr.op_Explicit(UIntPtr to Void*)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static void* op_Explicit (UIntPtr value);\n    parameters:\n    - id: value\n      type: System.UIntPtr\n      description: ''\n    return:\n      type: System.Void*\n      description: ''\n  overload: System.UIntPtr.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Explicit(System.UInt64 to System.UIntPtr)\n  commentId: M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr\n  id: op_Explicit(System.UInt64 to System.UIntPtr)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Explicit(UInt64 to UIntPtr)\n  nameWithType: UIntPtr.op_Explicit(UInt64 to UIntPtr)\n  fullName: UIntPtr.op_Explicit(UInt64 to UIntPtr)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static UIntPtr op_Explicit (ulong value);\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: ''\n    return:\n      type: System.UIntPtr\n      description: ''\n  overload: System.UIntPtr.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Explicit(System.UInt32 to System.UIntPtr)\n  commentId: M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr\n  id: op_Explicit(System.UInt32 to System.UIntPtr)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Explicit(UInt32 to UIntPtr)\n  nameWithType: UIntPtr.op_Explicit(UInt32 to UIntPtr)\n  fullName: UIntPtr.op_Explicit(UInt32 to UIntPtr)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static UIntPtr op_Explicit (uint value);\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: ''\n    return:\n      type: System.UIntPtr\n      description: ''\n  overload: System.UIntPtr.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt32)\n  commentId: M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32\n  id: op_Explicit(System.UIntPtr to System.UInt32)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Explicit(UIntPtr to UInt32)\n  nameWithType: UIntPtr.op_Explicit(UIntPtr to UInt32)\n  fullName: UIntPtr.op_Explicit(UIntPtr to UInt32)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static uint op_Explicit (UIntPtr value);\n    parameters:\n    - id: value\n      type: System.UIntPtr\n      description: ''\n    return:\n      type: System.UInt32\n      description: ''\n  overload: System.UIntPtr.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)\n  commentId: M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)\n  id: op_Inequality(System.UIntPtr,System.UIntPtr)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Inequality(UIntPtr, UIntPtr)\n  nameWithType: UIntPtr.op_Inequality(UIntPtr, UIntPtr)\n  fullName: UIntPtr.op_Inequality(UIntPtr, UIntPtr)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Determines whether two specified instances of <xref href=\"System.UIntPtr\"></xref> are not equal.\n  remarks: The equivalent method for this operator is <xref:System.UIntPtr.Equals%28System.Object%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (UIntPtr value1, UIntPtr value2);\n    parameters:\n    - id: value1\n      type: System.UIntPtr\n      description: The first pointer or handle to compare.\n    - id: value2\n      type: System.UIntPtr\n      description: The second pointer or handle to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value1</code> does not equal <code>value2</code>; otherwise, `false`.'\n  overload: System.UIntPtr.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)\n  commentId: M:System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)\n  id: op_Subtraction(System.UIntPtr,System.Int32)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: op_Subtraction(UIntPtr, Int32)\n  nameWithType: UIntPtr.op_Subtraction(UIntPtr, Int32)\n  fullName: UIntPtr.op_Subtraction(UIntPtr, Int32)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts an offset from the value of an unsigned pointer.\n  remarks: \"The <xref:System.UIntPtr.op_Subtraction%2A> method defines the subtraction operation for <xref:System.UIntPtr> objects. It enables code such as the following.  \\n  \\n [!code-csharp[System.UIntPtr.op_Addition#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.op_addition/cs/op_subtraction1.cs#2)]\\n [!code-vb[System.UIntPtr.op_Addition#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.op_addition/vb/op_subtraction1.vb#2)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.UIntPtr.Subtract%2A> method instead.  \\n  \\n The subtraction operation does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, it is performed in an unchecked context.\"\n  syntax:\n    content: public static UIntPtr op_Subtraction (UIntPtr pointer, int offset);\n    parameters:\n    - id: pointer\n      type: System.UIntPtr\n      description: The unsigned pointer to subtract the offset from.\n    - id: offset\n      type: System.Int32\n      description: The offset to subtract.\n    return:\n      type: System.UIntPtr\n      description: A new unsigned pointer that reflects the subtraction of <code>offset</code> from <code>pointer</code>.\n  overload: System.UIntPtr.op_Subtraction*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.Size\n  commentId: P:System.UIntPtr.Size\n  id: Size\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: Size\n  nameWithType: UIntPtr.Size\n  fullName: UIntPtr.Size\n  type: Property\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Gets the size of this instance.\n  syntax:\n    content: public static int Size { get; }\n    return:\n      type: System.Int32\n      description: The size of a pointer or handle on this platform, measured in bytes. The value of this property is 4 on a 32-bit platform, and 8 on a 64-bit platform.\n  overload: System.UIntPtr.Size*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.Subtract(System.UIntPtr,System.Int32)\n  commentId: M:System.UIntPtr.Subtract(System.UIntPtr,System.Int32)\n  id: Subtract(System.UIntPtr,System.Int32)\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: Subtract(UIntPtr, Int32)\n  nameWithType: UIntPtr.Subtract(UIntPtr, Int32)\n  fullName: UIntPtr.Subtract(UIntPtr, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts an offset from the value of an unsigned pointer.\n  remarks: \"The <xref:System.IntPtr.Subtract%2A> method does not throw an exception if the result is too small to represent as a pointer on the specified platform. Instead, the subtraction operation is performed in an unchecked context.  \\n  \\n Languages that do not support operator overloading or custom operators can use this method to subtract an offset from the value of an unsigned pointer.\"\n  example:\n  - \"The following example instantiates an <xref:System.IntPtr> object that points to the end of a ten-element array, and then calls the <xref:System.IntPtr.Subtract%2A> method to iterate the elements in the array in reverse order.  \\n  \\n [!code-csharp[System.UIntPtr.Subtract#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uintptr.subtract/cs/subtract1.cs#1)]\\n [!code-vb[System.UIntPtr.Subtract#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uintptr.subtract/vb/subtract1.vb#1)]\"\n  syntax:\n    content: public static UIntPtr Subtract (UIntPtr pointer, int offset);\n    parameters:\n    - id: pointer\n      type: System.UIntPtr\n      description: The unsigned pointer to subtract the offset from.\n    - id: offset\n      type: System.Int32\n      description: The offset to subtract.\n    return:\n      type: System.UIntPtr\n      description: A new unsigned pointer that reflects the subtraction of <code>offset</code> from <code>pointer</code>.\n  overload: System.UIntPtr.Subtract*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.ToPointer\n  commentId: M:System.UIntPtr.ToPointer\n  id: ToPointer\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: ToPointer()\n  nameWithType: UIntPtr.ToPointer()\n  fullName: UIntPtr.ToPointer()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to a pointer to an unspecified type.\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public void* ToPointer ();\n    parameters: []\n    return:\n      type: System.Void*\n      description: A pointer to <xref href=\"System.Void\"></xref>; that is, a pointer to memory containing data of an unspecified type.\n  overload: System.UIntPtr.ToPointer*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.ToString\n  commentId: M:System.UIntPtr.ToString\n  id: ToString\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: UIntPtr.ToString()\n  fullName: UIntPtr.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric value of this instance to its equivalent string representation.\n  remarks: If the value of the <xref:System.IntPtr.Size%2A> property for this instance is 4, then this method is equivalent to <xref:System.UInt32.ToString%2A>; otherwise, this method is equivalent to <xref:System.UInt64.ToString%2A>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the value of this instance.\n  overload: System.UIntPtr.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.ToUInt32\n  commentId: M:System.UIntPtr.ToUInt32\n  id: ToUInt32\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: ToUInt32()\n  nameWithType: UIntPtr.ToUInt32()\n  fullName: UIntPtr.ToUInt32()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to a 32-bit unsigned integer.\n  remarks: An exception is only thrown if the value of `value` requires more bits than the current platform supports.\n  syntax:\n    content: public uint ToUInt32 ();\n    parameters: []\n    return:\n      type: System.UInt32\n      description: A 32-bit unsigned integer equal to the value of this instance.\n  overload: System.UIntPtr.ToUInt32*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: On a 64-bit platform, the value of this instance is too large to represent as a 32-bit unsigned integer.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.ToUInt64\n  commentId: M:System.UIntPtr.ToUInt64\n  id: ToUInt64\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: ToUInt64()\n  nameWithType: UIntPtr.ToUInt64()\n  fullName: UIntPtr.ToUInt64()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of this instance to a 64-bit unsigned integer.\n  syntax:\n    content: public ulong ToUInt64 ();\n    parameters: []\n    return:\n      type: System.UInt64\n      description: A 64-bit unsigned integer equal to the value of this instance.\n  overload: System.UIntPtr.ToUInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.Zero\n  commentId: F:System.UIntPtr.Zero\n  id: Zero\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: Zero\n  nameWithType: UIntPtr.Zero\n  fullName: UIntPtr.Zero\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: A read-only field that represents a pointer or handle that has been initialized to zero.\n  remarks: \"The value of this field is not equivalent to `null`. Use this field to efficiently determine whether an instance of <xref:System.UIntPtr> has been set to a value other than zero.  \\n  \\n For example, assume the variable, uip, is an instance of <xref:System.UIntPtr>. You can determine if it has been set by comparing it to the value returned by a constructor, for example: \\\" `if uip != new UIntPtr(0)...` \\\". However, invoking a constructor to get an unintialized pointer is inefficient. It is better to code either \\\" `if uip != UIntPtr.Zero...` \\\", or \\\" `if !UIntPtr.Zero.Equals(uip)...` \\\".\"\n  syntax:\n    content: public static readonly UIntPtr Zero;\n    return:\n      type: System.UIntPtr\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.UIntPtr.System#IEquatable{System#UIntPtr}#Equals(System.UIntPtr)\n  commentId: M:System.UIntPtr.System#IEquatable<System#UIntPtr>#Equals(System.UIntPtr)\n  id: System#IEquatable{System#UIntPtr}#Equals(System.UIntPtr)\n  isEii: true\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: IEquatable<UIntPtr>.Equals(UIntPtr)\n  nameWithType: UIntPtr.IEquatable<UIntPtr>.Equals(UIntPtr)\n  fullName: UIntPtr.IEquatable<UIntPtr>.Equals(UIntPtr)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: bool IEquatable<UIntPtr>.Equals (UIntPtr other);\n    parameters:\n    - id: other\n      type: System.UIntPtr\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.UIntPtr.System#IEquatable{System#UIntPtr}#Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.UIntPtr\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: UIntPtr.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: UIntPtr.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Populates a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object with the data needed to serialize the current <xref href=\"System.UIntPtr\"></xref> object.\n  remarks: This method populates the `info` parameter with the value of the current <xref:System.UIntPtr> object.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object to populate with data.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination for this serialization. (This parameter is not used; specify `null`.)\n  overload: System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>info</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.OverflowException\n  parent: System\n  isExternal: false\n  name: OverflowException\n  nameWithType: OverflowException\n  fullName: System.OverflowException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.UIntPtr.#ctor(System.UInt32)\n  parent: System.UIntPtr\n  isExternal: false\n  name: UIntPtr(UInt32)\n  nameWithType: UIntPtr.UIntPtr(UInt32)\n  fullName: UIntPtr.UIntPtr(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UIntPtr.#ctor(System.UInt64)\n  parent: System.UIntPtr\n  isExternal: false\n  name: UIntPtr(UInt64)\n  nameWithType: UIntPtr.UIntPtr(UInt64)\n  fullName: UIntPtr.UIntPtr(UInt64)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.UIntPtr.#ctor(System.Void*)\n  parent: System.UIntPtr\n  isExternal: false\n  name: UIntPtr(Void*)\n  nameWithType: UIntPtr.UIntPtr(Void*)\n  fullName: UIntPtr.UIntPtr(Void*)\n- uid: System.Void\n  name: Void\n  nameWithType: Void\n  fullName: System.Void\n- uid: System.Void*\n  parent: System\n  isExternal: false\n  name: Void*\n  nameWithType: Void*\n  fullName: System.Void*\n  spec.csharp:\n  - uid: System.Void\n    name: Void\n    nameWithType: Void\n    fullName: System.Void\n  - name: '*'\n    nameWithType: '*'\n    fullName: '*'\n- uid: System.UIntPtr.Add(System.UIntPtr,System.Int32)\n  parent: System.UIntPtr\n  isExternal: false\n  name: Add(UIntPtr, Int32)\n  nameWithType: UIntPtr.Add(UIntPtr, Int32)\n  fullName: UIntPtr.Add(UIntPtr, Int32)\n- uid: System.UIntPtr\n  parent: System\n  isExternal: false\n  name: UIntPtr\n  nameWithType: UIntPtr\n  fullName: System.UIntPtr\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.UIntPtr.Equals(System.Object)\n  parent: System.UIntPtr\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: UIntPtr.Equals(Object)\n  fullName: UIntPtr.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.UIntPtr.GetHashCode\n  parent: System.UIntPtr\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: UIntPtr.GetHashCode()\n  fullName: UIntPtr.GetHashCode()\n- uid: System.UIntPtr.op_Addition(System.UIntPtr,System.Int32)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Addition(UIntPtr, Int32)\n  nameWithType: UIntPtr.op_Addition(UIntPtr, Int32)\n  fullName: UIntPtr.op_Addition(UIntPtr, Int32)\n- uid: System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Equality(UIntPtr, UIntPtr)\n  nameWithType: UIntPtr.op_Equality(UIntPtr, UIntPtr)\n  fullName: UIntPtr.op_Equality(UIntPtr, UIntPtr)\n- uid: System.UIntPtr.op_Explicit(System.Void* to System.UIntPtr)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Explicit(Void* to UIntPtr)\n  nameWithType: UIntPtr.op_Explicit(Void* to UIntPtr)\n  fullName: UIntPtr.op_Explicit(Void* to UIntPtr)\n- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt64)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Explicit(UIntPtr to UInt64)\n  nameWithType: UIntPtr.op_Explicit(UIntPtr to UInt64)\n  fullName: UIntPtr.op_Explicit(UIntPtr to UInt64)\n- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.Void*)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Explicit(UIntPtr to Void*)\n  nameWithType: UIntPtr.op_Explicit(UIntPtr to Void*)\n  fullName: UIntPtr.op_Explicit(UIntPtr to Void*)\n- uid: System.UIntPtr.op_Explicit(System.UInt64 to System.UIntPtr)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Explicit(UInt64 to UIntPtr)\n  nameWithType: UIntPtr.op_Explicit(UInt64 to UIntPtr)\n  fullName: UIntPtr.op_Explicit(UInt64 to UIntPtr)\n- uid: System.UIntPtr.op_Explicit(System.UInt32 to System.UIntPtr)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Explicit(UInt32 to UIntPtr)\n  nameWithType: UIntPtr.op_Explicit(UInt32 to UIntPtr)\n  fullName: UIntPtr.op_Explicit(UInt32 to UIntPtr)\n- uid: System.UIntPtr.op_Explicit(System.UIntPtr to System.UInt32)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Explicit(UIntPtr to UInt32)\n  nameWithType: UIntPtr.op_Explicit(UIntPtr to UInt32)\n  fullName: UIntPtr.op_Explicit(UIntPtr to UInt32)\n- uid: System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Inequality(UIntPtr, UIntPtr)\n  nameWithType: UIntPtr.op_Inequality(UIntPtr, UIntPtr)\n  fullName: UIntPtr.op_Inequality(UIntPtr, UIntPtr)\n- uid: System.UIntPtr.op_Subtraction(System.UIntPtr,System.Int32)\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Subtraction(UIntPtr, Int32)\n  nameWithType: UIntPtr.op_Subtraction(UIntPtr, Int32)\n  fullName: UIntPtr.op_Subtraction(UIntPtr, Int32)\n- uid: System.UIntPtr.Size\n  parent: System.UIntPtr\n  isExternal: false\n  name: Size\n  nameWithType: UIntPtr.Size\n  fullName: UIntPtr.Size\n- uid: System.UIntPtr.Subtract(System.UIntPtr,System.Int32)\n  parent: System.UIntPtr\n  isExternal: false\n  name: Subtract(UIntPtr, Int32)\n  nameWithType: UIntPtr.Subtract(UIntPtr, Int32)\n  fullName: UIntPtr.Subtract(UIntPtr, Int32)\n- uid: System.UIntPtr.ToPointer\n  parent: System.UIntPtr\n  isExternal: false\n  name: ToPointer()\n  nameWithType: UIntPtr.ToPointer()\n  fullName: UIntPtr.ToPointer()\n- uid: System.UIntPtr.ToString\n  parent: System.UIntPtr\n  isExternal: false\n  name: ToString()\n  nameWithType: UIntPtr.ToString()\n  fullName: UIntPtr.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.UIntPtr.ToUInt32\n  parent: System.UIntPtr\n  isExternal: false\n  name: ToUInt32()\n  nameWithType: UIntPtr.ToUInt32()\n  fullName: UIntPtr.ToUInt32()\n- uid: System.UIntPtr.ToUInt64\n  parent: System.UIntPtr\n  isExternal: false\n  name: ToUInt64()\n  nameWithType: UIntPtr.ToUInt64()\n  fullName: UIntPtr.ToUInt64()\n- uid: System.UIntPtr.Zero\n  parent: System.UIntPtr\n  isExternal: false\n  name: Zero\n  nameWithType: UIntPtr.Zero\n  fullName: UIntPtr.Zero\n- uid: System.UIntPtr.System#IEquatable{System#UIntPtr}#Equals(System.UIntPtr)\n  parent: System.UIntPtr\n  isExternal: false\n  name: IEquatable<UIntPtr>.Equals(UIntPtr)\n  nameWithType: UIntPtr.IEquatable<UIntPtr>.Equals(UIntPtr)\n  fullName: UIntPtr.IEquatable<UIntPtr>.Equals(UIntPtr)\n- uid: System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.UIntPtr\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: UIntPtr.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: UIntPtr.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.UIntPtr.#ctor*\n  parent: System.UIntPtr\n  isExternal: false\n  name: UIntPtr\n  nameWithType: UIntPtr.UIntPtr\n  fullName: UIntPtr.UIntPtr\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.Add*\n  parent: System.UIntPtr\n  isExternal: false\n  name: Add\n  nameWithType: UIntPtr.Add\n  fullName: UIntPtr.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.Equals*\n  parent: System.UIntPtr\n  isExternal: false\n  name: Equals\n  nameWithType: UIntPtr.Equals\n  fullName: UIntPtr.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.GetHashCode*\n  parent: System.UIntPtr\n  isExternal: false\n  name: GetHashCode\n  nameWithType: UIntPtr.GetHashCode\n  fullName: UIntPtr.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Addition*\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Addition\n  nameWithType: UIntPtr.op_Addition\n  fullName: UIntPtr.op_Addition\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Equality*\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Equality\n  nameWithType: UIntPtr.op_Equality\n  fullName: UIntPtr.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Explicit*\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Explicit\n  nameWithType: UIntPtr.op_Explicit\n  fullName: UIntPtr.op_Explicit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Inequality*\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Inequality\n  nameWithType: UIntPtr.op_Inequality\n  fullName: UIntPtr.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.op_Subtraction*\n  parent: System.UIntPtr\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: UIntPtr.op_Subtraction\n  fullName: UIntPtr.op_Subtraction\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.Size*\n  parent: System.UIntPtr\n  isExternal: false\n  name: Size\n  nameWithType: UIntPtr.Size\n  fullName: UIntPtr.Size\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.Subtract*\n  parent: System.UIntPtr\n  isExternal: false\n  name: Subtract\n  nameWithType: UIntPtr.Subtract\n  fullName: UIntPtr.Subtract\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.ToPointer*\n  parent: System.UIntPtr\n  isExternal: false\n  name: ToPointer\n  nameWithType: UIntPtr.ToPointer\n  fullName: UIntPtr.ToPointer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.ToString*\n  parent: System.UIntPtr\n  isExternal: false\n  name: ToString\n  nameWithType: UIntPtr.ToString\n  fullName: UIntPtr.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.ToUInt32*\n  parent: System.UIntPtr\n  isExternal: false\n  name: ToUInt32\n  nameWithType: UIntPtr.ToUInt32\n  fullName: UIntPtr.ToUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.ToUInt64*\n  parent: System.UIntPtr\n  isExternal: false\n  name: ToUInt64\n  nameWithType: UIntPtr.ToUInt64\n  fullName: UIntPtr.ToUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.System#IEquatable{System#UIntPtr}#Equals*\n  parent: System.UIntPtr\n  isExternal: false\n  name: System.IEquatable<System.UIntPtr>.Equals\n  nameWithType: UIntPtr.System.IEquatable<System.UIntPtr>.Equals\n  fullName: UIntPtr.System.IEquatable<System.UIntPtr>.Equals\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.UIntPtr.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.UIntPtr\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: UIntPtr.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: UIntPtr.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/UIntPtr.xml\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}