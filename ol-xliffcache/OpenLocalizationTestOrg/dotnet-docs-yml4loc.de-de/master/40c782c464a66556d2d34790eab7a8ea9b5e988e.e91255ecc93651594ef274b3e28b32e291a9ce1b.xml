{"nodes":[{"content":"Creates and populates an <xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"></xref> that is used by the <xref href=\"System.Activities.Presentation.Metadata.MetadataStore\"></xref> to provide attribute lookup and registration.","nodes":[{"pos":[0,241],"content":"Creates and populates an <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"&gt;&lt;/xref&gt;</ph> that is used by the <ph id=\"ph2\">&lt;xref href=\"System.Activities.Presentation.Metadata.MetadataStore\"&gt;&lt;/xref&gt;</ph> to provide attribute lookup and registration.","source":"Creates and populates an <xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"></xref> that is used by the <xref href=\"System.Activities.Presentation.Metadata.MetadataStore\"></xref> to provide attribute lookup and registration."}],"pos":[1727,1969],"yaml":true},{"content":"Use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>, and <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> to populate the builder, then call <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> to acquire an <xref:System.Activities.Presentation.Metadata.AttributeTable> containing the desired collection of attributes.","nodes":[{"pos":[0,510],"content":"Use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>, and <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> to populate the builder, then call <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> to acquire an <xref:System.Activities.Presentation.Metadata.AttributeTable> containing the desired collection of attributes.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A&gt;</ph> to populate the builder, then call <ph id=\"ph4\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A&gt;</ph> to acquire an <ph id=\"ph5\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTable&gt;</ph> containing the desired collection of attributes.","pos":[0,510],"source":"Use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>, and <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> to populate the builder, then call <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> to acquire an <xref:System.Activities.Presentation.Metadata.AttributeTable> containing the desired collection of attributes."}]}],"pos":[1980,2491],"yaml":true,"extradata":"MT"},{"content":"Creates a new instance of the <xref href=\"System.Activities.Presentation.Metadata.AttributeTableBuilder\"></xref> class.","nodes":[{"pos":[0,119],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Metadata.AttributeTableBuilder\"&gt;&lt;/xref&gt;</ph> class.","source":"Creates a new instance of the <xref href=\"System.Activities.Presentation.Metadata.AttributeTableBuilder\"></xref> class."}],"pos":[3999,4119],"yaml":true},{"content":"Specifies a callback that will be invoked when metadata for the given type is needed.","nodes":[{"pos":[0,85],"content":"Specifies a callback that will be invoked when metadata for the given type is needed.","nodes":[{"content":"Specifies a callback that will be invoked when metadata for the given type is needed.","pos":[0,85]}]}],"pos":[5661,5747],"yaml":true},{"content":"The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> returned by <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> is queried for attributes for `type`, `callback` is called to provide the metadata information.","nodes":[{"pos":[0,271],"content":"The first time an <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTable&gt;</ph> returned by <ph id=\"ph2\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A&gt;</ph> is queried for attributes for <ph id=\"ph3\">`type`</ph>, <ph id=\"ph4\">`callback`</ph> is called to provide the metadata information.","source":"The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> returned by <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> is queried for attributes for `type`, `callback` is called to provide the metadata information."}],"pos":[5758,6030],"yaml":true,"extradata":"MT"},{"content":"The type for which the callback will provide metadata.","nodes":[{"pos":[0,54],"content":"The type for which the callback will provide metadata.","nodes":[{"content":"The type for which the callback will provide metadata.","pos":[0,54]}]}],"pos":[6232,6287],"yaml":true},{"content":"The callback method.","nodes":[{"pos":[0,20],"content":"The callback method.","nodes":[{"content":"The callback method.","pos":[0,20]}]}],"pos":[6395,6416],"yaml":true},{"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"pos":[0,61],"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"content":"Adds the contents of the provided attributes to this builder.","pos":[0,61]}]}],"pos":[7802,7864],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"pos":[0,136],"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","pos":[0,136]}]},{"pos":[143,333],"content":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"content":"When building a large attribute table, use <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A&gt;</ph> to defer the work of creating attributes until they are needed.","pos":[0,190],"source":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."}]}],"pos":[7875,8213],"yaml":true,"extradata":"MT"},{"content":"The type to add class-level attributes to.","nodes":[{"pos":[0,42],"content":"The type to add class-level attributes to.","nodes":[{"content":"The type to add class-level attributes to.","pos":[0,42]}]}],"pos":[8379,8422],"yaml":true},{"content":"The attributes that are added to the builder.","nodes":[{"pos":[0,45],"content":"The attributes that are added to the builder.","nodes":[{"content":"The attributes that are added to the builder.","pos":[0,45]}]}],"pos":[8493,8539],"yaml":true},{"content":"<code>type</code> or <code>attributes</code> is `null`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>type</code> or <code>attributes</code> is `null`."}],"pos":[8750,8806],"yaml":true},{"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"pos":[0,61],"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"content":"Adds the contents of the provided attributes to this builder.","pos":[0,61]}]}],"pos":[10259,10321],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"pos":[0,136],"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","pos":[0,136]}]},{"pos":[143,333],"content":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"content":"When building a large attribute table, use <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A&gt;</ph> to defer the work of creating attributes until they are needed.","pos":[0,190],"source":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."}]}],"pos":[10332,10670],"yaml":true,"extradata":"MT"},{"content":"The type that contains the member identified by <code>descriptor</code>.","nodes":[{"pos":[0,72],"content":"The type that contains the member identified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">descriptor</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type that contains the member identified by <code>descriptor</code>."}],"pos":[10897,10970],"yaml":true},{"content":"The event or property info that the attributes are added to.","nodes":[{"pos":[0,60],"content":"The event or property info that the attributes are added to.","nodes":[{"content":"The event or property info that the attributes are added to.","pos":[0,60]}]}],"pos":[11061,11122],"yaml":true},{"content":"The attributes that are added to the builder.","nodes":[{"pos":[0,45],"content":"The attributes that are added to the builder.","nodes":[{"content":"The attributes that are added to the builder.","pos":[0,45]}]}],"pos":[11193,11239],"yaml":true},{"content":"<code>ownerType</code>, <code>descriptor</code> or <code>attributes</code> is `null`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">&lt;code&gt;ownerType&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;descriptor&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>ownerType</code>, <code>descriptor</code> or <code>attributes</code> is `null`."}],"pos":[11450,11536],"yaml":true},{"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"pos":[0,61],"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"content":"Adds the contents of the provided attributes to this builder.","pos":[0,61]}]}],"pos":[12941,13003],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"pos":[0,136],"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","pos":[0,136]}]},{"pos":[143,333],"content":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"content":"When building a large attribute table, use <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A&gt;</ph> to defer the work of creating attributes until they are needed.","pos":[0,190],"source":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."}]}],"pos":[13014,13352],"yaml":true,"extradata":"MT"},{"content":"The type that contains the member identified by <code>member</code>.","nodes":[{"pos":[0,68],"content":"The type that contains the member identified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">member</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type that contains the member identified by <code>member</code>."}],"pos":[13565,13634],"yaml":true},{"content":"The event or property info that the attributes are added to.","nodes":[{"pos":[0,60],"content":"The event or property info that the attributes are added to.","nodes":[{"content":"The event or property info that the attributes are added to.","pos":[0,60]}]}],"pos":[13711,13772],"yaml":true},{"content":"The attributes that are added to the builder.","nodes":[{"pos":[0,45],"content":"The attributes that are added to the builder.","nodes":[{"content":"The attributes that are added to the builder.","pos":[0,45]}]}],"pos":[13843,13889],"yaml":true},{"content":"<code>ownerType</code>, <code>member</code> or <code>attributes</code> is `null`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">&lt;code&gt;ownerType&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;member&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>ownerType</code>, <code>member</code> or <code>attributes</code> is `null`."}],"pos":[14100,14182],"yaml":true},{"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"pos":[0,61],"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"content":"Adds the contents of the provided attributes to this builder.","pos":[0,61]}]}],"pos":[15530,15592],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"pos":[0,136],"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","pos":[0,136]}]},{"pos":[143,333],"content":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"content":"When building a large attribute table, use <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A&gt;</ph> to defer the work of creating attributes until they are needed.","pos":[0,190],"source":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."}]}],"pos":[15603,15941],"yaml":true,"extradata":"MT"},{"content":"The type that contains the member identified by <code>memberName</code>.","nodes":[{"pos":[0,72],"content":"The type that contains the member identified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">memberName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type that contains the member identified by <code>memberName</code>."}],"pos":[16136,16209],"yaml":true},{"content":"The name of the event or property info that the attributes are added to.","nodes":[{"pos":[0,72],"content":"The name of the event or property info that the attributes are added to.","nodes":[{"content":"The name of the event or property info that the attributes are added to.","pos":[0,72]}]}],"pos":[16275,16348],"yaml":true},{"content":"The attributes that are added to the builder.","nodes":[{"pos":[0,45],"content":"The attributes that are added to the builder.","nodes":[{"content":"The attributes that are added to the builder.","pos":[0,45]}]}],"pos":[16419,16465],"yaml":true},{"content":"<code>ownerType</code>, <code>memberName</code>, or <code>attributes</code> is `null`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">&lt;code&gt;ownerType&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;memberName&lt;/code&gt;</ph>, or <ph id=\"ph3\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>ownerType</code>, <code>memberName</code>, or <code>attributes</code> is `null`."}],"pos":[16676,16763],"yaml":true},{"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"pos":[0,61],"content":"Adds the contents of the provided attributes to this builder.","nodes":[{"content":"Adds the contents of the provided attributes to this builder.","pos":[0,61]}]}],"pos":[18207,18269],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \n  \n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"pos":[0,136],"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","pos":[0,136]}]},{"pos":[143,333],"content":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.","nodes":[{"content":"When building a large attribute table, use <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A&gt;</ph> to defer the work of creating attributes until they are needed.","pos":[0,190],"source":"When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed."}]}],"pos":[18280,18618],"yaml":true,"extradata":"MT"},{"content":"The type that contains the dependency identified by <code>dp</code>.","nodes":[{"pos":[0,68],"content":"The type that contains the dependency identified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dp</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The type that contains the dependency identified by <code>dp</code>."}],"pos":[18832,18901],"yaml":true},{"content":"A dependency property to add attributes to.","nodes":[{"pos":[0,43],"content":"A dependency property to add attributes to.","nodes":[{"content":"A dependency property to add attributes to.","pos":[0,43]}]}],"pos":[18979,19023],"yaml":true},{"content":"The attributes that are added to the builder.","nodes":[{"pos":[0,45],"content":"The attributes that are added to the builder.","nodes":[{"content":"The attributes that are added to the builder.","pos":[0,45]}]}],"pos":[19094,19140],"yaml":true},{"content":"<code>ownerType</code>, <code>dp</code> or <code>attributes</code> is `null`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;ownerType&lt;/code&gt;</ph>, <ph id=\"ph2\">&lt;code&gt;dp&lt;/code&gt;</ph> or <ph id=\"ph3\">&lt;code&gt;attributes&lt;/code&gt;</ph> is <ph id=\"ph4\">`null`</ph>.","source":"<code>ownerType</code>, <code>dp</code> or <code>attributes</code> is `null`."}],"pos":[19351,19429],"yaml":true},{"content":"Adds the contents of the provided attribute table to this builder.","nodes":[{"pos":[0,66],"content":"Adds the contents of the provided attribute table to this builder.","nodes":[{"content":"Adds the contents of the provided attribute table to this builder.","pos":[0,66]}]}],"pos":[20708,20775],"yaml":true},{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","nodes":[{"pos":[0,136],"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","nodes":[{"content":"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.","pos":[0,136]}]}],"pos":[20786,20923],"yaml":true,"extradata":"MT"},{"content":"The source attribute table.","nodes":[{"pos":[0,27],"content":"The source attribute table.","nodes":[{"content":"The source attribute table.","pos":[0,27]}]}],"pos":[21149,21177],"yaml":true},{"content":"<code>table</code> is `null`.","nodes":[{"pos":[0,29],"content":"<code>table</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[19,29],"source":" is `null`."}]}],"pos":[21377,21407],"yaml":true},{"content":"Creates an attribute table that contains all of the attribute definitions provided through <xref href=\"System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])\"></xref> calls.","nodes":[{"pos":[0,232],"content":"Creates an attribute table that contains all of the attribute definitions provided through <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])\"&gt;&lt;/xref&gt;</ph> calls.","source":"Creates an attribute table that contains all of the attribute definitions provided through <xref href=\"System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])\"></xref> calls."}],"pos":[22494,22727],"yaml":true},{"content":"The table is a snapshot of the current state of the attribute builder; any attributes added by subsequent <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> calls are not included in the table.  \n  \n If callback methods were used to declare attributes, those methods will not be evaluated during <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>. Instead, the table will contain those callbacks and will evaluate them as needed.","nodes":[{"pos":[0,234],"content":"The table is a snapshot of the current state of the attribute builder; any attributes added by subsequent <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> calls are not included in the table.","nodes":[{"content":"The table is a snapshot of the current state of the attribute builder; any attributes added by subsequent <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A&gt;</ph> calls are not included in the table.","pos":[0,234],"source":"The table is a snapshot of the current state of the attribute builder; any attributes added by subsequent <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> calls are not included in the table."}]},{"pos":[241,503],"content":"If callback methods were used to declare attributes, those methods will not be evaluated during <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>. Instead, the table will contain those callbacks and will evaluate them as needed.","nodes":[{"content":"If callback methods were used to declare attributes, those methods will not be evaluated during <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>. Instead, the table will contain those callbacks and will evaluate them as needed.","pos":[0,262],"nodes":[{"content":"If callback methods were used to declare attributes, those methods will not be evaluated during <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A&gt;</ph>.","pos":[0,180],"source":"If callback methods were used to declare attributes, those methods will not be evaluated during <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>."},{"content":"Instead, the table will contain those callbacks and will evaluate them as needed.","pos":[181,262]}]}]}],"pos":[22738,23246],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"></xref> that can be passed to the metadata store.","nodes":[{"pos":[0,120],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"&gt;&lt;/xref&gt;</ph> that can be passed to the metadata store.","source":"An <xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"></xref> that can be passed to the metadata store."}],"pos":[23464,23585],"yaml":true},{"content":"Verifies that the attribute table that is being built contains valid attribute information.","nodes":[{"pos":[0,91],"content":"Verifies that the attribute table that is being built contains valid attribute information.","nodes":[{"content":"Verifies that the attribute table that is being built contains valid attribute information.","pos":[0,91]}]}],"pos":[24788,24880],"yaml":true},{"content":"Some overrides of <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>cannot validate that values passed to their parameters represent valid members on classes. <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A> verifies that all custom attribute information corresponds to actual members. This method can take a long time to complete and is not recommended unless validation is explicitly needed.","nodes":[{"pos":[0,471],"content":"Some overrides of <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>cannot validate that values passed to their parameters represent valid members on classes. <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A> verifies that all custom attribute information corresponds to actual members. This method can take a long time to complete and is not recommended unless validation is explicitly needed.","nodes":[{"content":"Some overrides of <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>cannot validate that values passed to their parameters represent valid members on classes. <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A> verifies that all custom attribute information corresponds to actual members. This method can take a long time to complete and is not recommended unless validation is explicitly needed.","pos":[0,471],"nodes":[{"content":"Some overrides of <ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A&gt;</ph>cannot validate that values passed to their parameters represent valid members on classes.","pos":[0,199],"source":"Some overrides of <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>cannot validate that values passed to their parameters represent valid members on classes."},{"content":"<ph id=\"ph1\">&lt;xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A&gt;</ph> verifies that all custom attribute information corresponds to actual members.","pos":[200,363],"source":" <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A> verifies that all custom attribute information corresponds to actual members."},{"content":"This method can take a long time to complete and is not recommended unless validation is explicitly needed.","pos":[364,471]}]}]}],"pos":[24891,25363],"yaml":true,"extradata":"MT"},{"content":"the state of the table is invalid.","nodes":[{"pos":[0,34],"content":"the state of the table is invalid.","nodes":[{"content":"the state of the table is invalid.","pos":[0,34]}]}],"pos":[25730,25765],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  commentId: T:System.Activities.Presentation.Metadata.AttributeTableBuilder\n  id: AttributeTableBuilder\n  children:\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable\n  - System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable\n  langs:\n  - csharp\n  name: AttributeTableBuilder\n  nameWithType: AttributeTableBuilder\n  fullName: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  type: Class\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Creates and populates an <xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"></xref> that is used by the <xref href=\"System.Activities.Presentation.Metadata.MetadataStore\"></xref> to provide attribute lookup and registration.\n  remarks: Use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A>, <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>, and <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable%2A> to populate the builder, then call <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> to acquire an <xref:System.Activities.Presentation.Metadata.AttributeTable> containing the desired collection of attributes.\n  syntax:\n    content: public class AttributeTableBuilder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: AttributeTableBuilder()\n  nameWithType: AttributeTableBuilder.AttributeTableBuilder()\n  fullName: AttributeTableBuilder.AttributeTableBuilder()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Creates a new instance of the <xref href=\"System.Activities.Presentation.Metadata.AttributeTableBuilder\"></xref> class.\n  syntax:\n    content: public AttributeTableBuilder ();\n    parameters: []\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)\n  id: AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: AddCallback(Type, AttributeCallback)\n  nameWithType: AttributeTableBuilder.AddCallback(Type, AttributeCallback)\n  fullName: AttributeTableBuilder.AddCallback(Type, AttributeCallback)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Specifies a callback that will be invoked when metadata for the given type is needed.\n  remarks: The first time an <xref:System.Activities.Presentation.Metadata.AttributeTable> returned by <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A> is queried for attributes for `type`, `callback` is called to provide the metadata information.\n  syntax:\n    content: public void AddCallback (Type type, System.Activities.Presentation.Metadata.AttributeCallback callback);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type for which the callback will provide metadata.\n    - id: callback\n      type: System.Activities.Presentation.Metadata.AttributeCallback\n      description: The callback method.\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])\n  id: AddCustomAttributes(System.Type,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(Type, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \\n  \\n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.\"\n  syntax:\n    content: public void AddCustomAttributes (Type type, Attribute[] attributes);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to add class-level attributes to.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the builder.\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> or <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])\n  id: AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(Type, MemberDescriptor, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, MemberDescriptor, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, MemberDescriptor, Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \\n  \\n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.\"\n  syntax:\n    content: public void AddCustomAttributes (Type ownerType, System.ComponentModel.MemberDescriptor descriptor, Attribute[] attributes);\n    parameters:\n    - id: ownerType\n      type: System.Type\n      description: The type that contains the member identified by <code>descriptor</code>.\n    - id: descriptor\n      type: System.ComponentModel.MemberDescriptor\n      description: The event or property info that the attributes are added to.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the builder.\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>ownerType</code>, <code>descriptor</code> or <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])\n  id: AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(Type, MemberInfo, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, MemberInfo, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, MemberInfo, Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \\n  \\n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.\"\n  syntax:\n    content: public void AddCustomAttributes (Type ownerType, System.Reflection.MemberInfo member, Attribute[] attributes);\n    parameters:\n    - id: ownerType\n      type: System.Type\n      description: The type that contains the member identified by <code>member</code>.\n    - id: member\n      type: System.Reflection.MemberInfo\n      description: The event or property info that the attributes are added to.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the builder.\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>ownerType</code>, <code>member</code> or <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])\n  id: AddCustomAttributes(System.Type,System.String,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(Type, String, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, String, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, String, Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \\n  \\n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.\"\n  syntax:\n    content: public void AddCustomAttributes (Type ownerType, string memberName, Attribute[] attributes);\n    parameters:\n    - id: ownerType\n      type: System.Type\n      description: The type that contains the member identified by <code>memberName</code>.\n    - id: memberName\n      type: System.String\n      description: The name of the event or property info that the attributes are added to.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the builder.\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>ownerType</code>, <code>memberName</code>, or <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])\n  id: AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: AddCustomAttributes(Type, DependencyProperty, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, DependencyProperty, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, DependencyProperty, Attribute[])\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attributes to this builder.\n  remarks: \"If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.  \\n  \\n When building a large attribute table, use <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback%2A> to defer the work of creating attributes until they are needed.\"\n  syntax:\n    content: public void AddCustomAttributes (Type ownerType, System.Windows.DependencyProperty dp, Attribute[] attributes);\n    parameters:\n    - id: ownerType\n      type: System.Type\n      description: The type that contains the dependency identified by <code>dp</code>.\n    - id: dp\n      type: System.Windows.DependencyProperty\n      description: A dependency property to add attributes to.\n    - id: attributes\n      type: System.Attribute[]\n      description: The attributes that are added to the builder.\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>ownerType</code>, <code>dp</code> or <code>attributes</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)\n  id: AddTable(System.Activities.Presentation.Metadata.AttributeTable)\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: AddTable(AttributeTable)\n  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)\n  fullName: AttributeTableBuilder.AddTable(AttributeTable)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Adds the contents of the provided attribute table to this builder.\n  remarks: If an attribute conflicts with another attribute already included in the builder, the last attribute added replaces previous attributes.\n  syntax:\n    content: public void AddTable (System.Activities.Presentation.Metadata.AttributeTable table);\n    parameters:\n    - id: table\n      type: System.Activities.Presentation.Metadata.AttributeTable\n      description: The source attribute table.\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>table</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable\n  id: CreateTable\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: CreateTable()\n  nameWithType: AttributeTableBuilder.CreateTable()\n  fullName: AttributeTableBuilder.CreateTable()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Creates an attribute table that contains all of the attribute definitions provided through <xref href=\"System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])\"></xref> calls.\n  remarks: \"The table is a snapshot of the current state of the attribute builder; any attributes added by subsequent <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A> calls are not included in the table.  \\n  \\n If callback methods were used to declare attributes, those methods will not be evaluated during <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable%2A>. Instead, the table will contain those callbacks and will evaluate them as needed.\"\n  syntax:\n    content: public System.Activities.Presentation.Metadata.AttributeTable CreateTable ();\n    parameters: []\n    return:\n      type: System.Activities.Presentation.Metadata.AttributeTable\n      description: An <xref href=\"System.Activities.Presentation.Metadata.AttributeTable\"></xref> that can be passed to the metadata store.\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable\n  commentId: M:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable\n  id: ValidateTable\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  langs:\n  - csharp\n  name: ValidateTable()\n  nameWithType: AttributeTableBuilder.ValidateTable()\n  fullName: AttributeTableBuilder.ValidateTable()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Metadata\n  summary: Verifies that the attribute table that is being built contains valid attribute information.\n  remarks: Some overrides of <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes%2A>cannot validate that values passed to their parameters represent valid members on classes. <xref:System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable%2A> verifies that all custom attribute information corresponds to actual members. This method can take a long time to complete and is not recommended unless validation is explicitly needed.\n  syntax:\n    content: public void ValidateTable ();\n    parameters: []\n  overload: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*\n  exceptions:\n  - type: System.Activities.Presentation.Metadata.AttributeTableValidationException\n    commentId: T:System.Activities.Presentation.Metadata.AttributeTableValidationException\n    description: the state of the table is invalid.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Activities.Presentation.Metadata.AttributeTableValidationException\n  parent: System.Activities.Presentation.Metadata\n  isExternal: false\n  name: AttributeTableValidationException\n  nameWithType: AttributeTableValidationException\n  fullName: System.Activities.Presentation.Metadata.AttributeTableValidationException\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AttributeTableBuilder()\n  nameWithType: AttributeTableBuilder.AttributeTableBuilder()\n  fullName: AttributeTableBuilder.AttributeTableBuilder()\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback(System.Type,System.Activities.Presentation.Metadata.AttributeCallback)\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddCallback(Type, AttributeCallback)\n  nameWithType: AttributeTableBuilder.AddCallback(Type, AttributeCallback)\n  fullName: AttributeTableBuilder.AddCallback(Type, AttributeCallback)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Presentation.Metadata.AttributeCallback\n  parent: System.Activities.Presentation.Metadata\n  isExternal: false\n  name: AttributeCallback\n  nameWithType: AttributeCallback\n  fullName: System.Activities.Presentation.Metadata.AttributeCallback\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddCustomAttributes(Type, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, Attribute[])\n- uid: System.Attribute\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Attribute[]\n  parent: System\n  isExternal: false\n  name: Attribute[]\n  nameWithType: Attribute[]\n  fullName: System.Attribute[]\n  spec.csharp:\n  - uid: System.Attribute\n    name: Attribute\n    nameWithType: Attribute\n    fullName: System.Attribute\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.ComponentModel.MemberDescriptor,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddCustomAttributes(Type, MemberDescriptor, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, MemberDescriptor, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, MemberDescriptor, Attribute[])\n- uid: System.ComponentModel.MemberDescriptor\n  parent: System.ComponentModel\n  isExternal: false\n  name: MemberDescriptor\n  nameWithType: MemberDescriptor\n  fullName: System.ComponentModel.MemberDescriptor\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Reflection.MemberInfo,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddCustomAttributes(Type, MemberInfo, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, MemberInfo, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, MemberInfo, Attribute[])\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.String,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddCustomAttributes(Type, String, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, String, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, String, Attribute[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes(System.Type,System.Windows.DependencyProperty,System.Attribute[])\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddCustomAttributes(Type, DependencyProperty, Attribute[])\n  nameWithType: AttributeTableBuilder.AddCustomAttributes(Type, DependencyProperty, Attribute[])\n  fullName: AttributeTableBuilder.AddCustomAttributes(Type, DependencyProperty, Attribute[])\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable(System.Activities.Presentation.Metadata.AttributeTable)\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddTable(AttributeTable)\n  nameWithType: AttributeTableBuilder.AddTable(AttributeTable)\n  fullName: AttributeTableBuilder.AddTable(AttributeTable)\n- uid: System.Activities.Presentation.Metadata.AttributeTable\n  parent: System.Activities.Presentation.Metadata\n  isExternal: false\n  name: AttributeTable\n  nameWithType: AttributeTable\n  fullName: System.Activities.Presentation.Metadata.AttributeTable\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: CreateTable()\n  nameWithType: AttributeTableBuilder.CreateTable()\n  fullName: AttributeTableBuilder.CreateTable()\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: ValidateTable()\n  nameWithType: AttributeTableBuilder.ValidateTable()\n  fullName: AttributeTableBuilder.ValidateTable()\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCustomAttributes*\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddCustomAttributes\n  nameWithType: AttributeTableBuilder.AddCustomAttributes\n  fullName: AttributeTableBuilder.AddCustomAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.#ctor*\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AttributeTableBuilder\n  nameWithType: AttributeTableBuilder.AttributeTableBuilder\n  fullName: AttributeTableBuilder.AttributeTableBuilder\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddCallback*\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddCallback\n  nameWithType: AttributeTableBuilder.AddCallback\n  fullName: AttributeTableBuilder.AddCallback\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.AddTable*\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: AddTable\n  nameWithType: AttributeTableBuilder.AddTable\n  fullName: AttributeTableBuilder.AddTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.CreateTable*\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: CreateTable\n  nameWithType: AttributeTableBuilder.CreateTable\n  fullName: AttributeTableBuilder.CreateTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n- uid: System.Activities.Presentation.Metadata.AttributeTableBuilder.ValidateTable*\n  parent: System.Activities.Presentation.Metadata.AttributeTableBuilder\n  isExternal: false\n  name: ValidateTable\n  nameWithType: AttributeTableBuilder.ValidateTable\n  fullName: AttributeTableBuilder.ValidateTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Presentation.Metadata/AttributeTableBuilder.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}