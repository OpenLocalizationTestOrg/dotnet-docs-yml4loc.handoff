{"nodes":[{"content":"Manages ASP.NET Ajax script libraries and script files, partial-page rendering, and client proxy class generation for Web and application services.","nodes":[{"pos":[0,147],"content":"Manages ASP.NET Ajax script libraries and script files, partial-page rendering, and client proxy class generation for Web and application services.","nodes":[{"content":"Manages ASP.NET Ajax script libraries and script files, partial-page rendering, and client proxy class generation for Web and application services.","pos":[0,147]}]}],"pos":[6918,7066],"yaml":true},{"content":"In this topic:  \n  \n-   [Introduction](#introduction)  \n  \n-   [Partial-Page Rendering](#partial_page_rendering)  \n  \n-   [Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components](#using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components)  \n  \n-   [Script Management and Registration](#script_management_and_registration)  \n  \n-   [Web Service References](#web_service_references)  \n  \n-   [Localization](#localization)  \n  \n-   [Error Handling](#error_handling)  \n  \n-   [Declarative Syntax](#declarative_syntax)  \n  \n<a name=\"introduction\"></a>   \n## Introduction  \n The <xref:System.Web.UI.ScriptManager> control is central to Ajax functionality in ASP.NET. The control manages all ASP.NET Ajax resources on a page. This includes downloading [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] scripts to the browser and coordinating partial-page updates that are enabled by using <xref:System.Web.UI.UpdatePanel> controls. In addition, the <xref:System.Web.UI.ScriptManager> control enables you to do the following:  \n  \n-   Register script that is compatible with partial-page updates. In order to manage dependencies between your script and the core library, any script that you register is loaded after the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] script.  \n  \n-   Specify whether release or debug scripts are sent to the browser.  \n  \n-   Provide access to Web service methods from script by registering Web services with the <xref:System.Web.UI.ScriptManager> control.  \n  \n-   Provide access to ASP.NET authentication, role, and profile application services from client script by registering these services with the <xref:System.Web.UI.ScriptManager> control.  \n  \n-   Enable culture-specific display of ECMAScript (JavaScript) , , and  functions in the browser.  \n  \n-   Access localization resources for embedded script files or for stand-alone script files by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> control.  \n  \n-   Register server controls that implement the <xref:System.Web.UI.IExtenderControl> or <xref:System.Web.UI.IScriptControl> interfaces with the <xref:System.Web.UI.ScriptManager> control so that script required by client components and behaviors is rendered.  \n  \n<a name=\"partial_page_rendering\"></a>   \n## Partial-Page Rendering  \n The ability of an ASP.NET page to support partial-page rendering is controlled by the following factors:  \n  \n-   The <xref:System.Web.UI.ScriptManager> control's <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property must be `true` (the default value).  \n  \n-   There must be at least one <xref:System.Web.UI.UpdatePanel> control on the page.  \n  \n-   The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property must be `true` (the default value). If the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is not set explicitly, its value is based on browser capabilities.  \n  \n You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event. If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.  \n  \n When partial-page rendering is supported, the <xref:System.Web.UI.ScriptManager> control renders script to enable asynchronous postbacks and partial-page updates. The regions of the page to be updated are designated by using <xref:System.Web.UI.UpdatePanel> controls. The <xref:System.Web.UI.ScriptManager> control handles the asynchronous postbacks and refreshes only the regions of the page that have to be updated. For more information about partial-page rendering, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49). For more information about the conditions that cause an update, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a).  \n  \n<a name=\"using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components\"></a>   \n## Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components  \n A page can contain only one <xref:System.Web.UI.ScriptManager> control in its hierarchy. To register services and scripts for nested pages, user controls, or components when the parent page already has a <xref:System.Web.UI.ScriptManager> control, use the <xref:System.Web.UI.ScriptManagerProxy> control. For more information, see [Using the UpdatePanel Control with Master Pages](http://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)  \n  \n<a name=\"script_management_and_registration\"></a>   \n## Script Management and Registration  \n The <xref:System.Web.UI.ScriptManager> control enables you to register script that is then rendered as part of the page. The <xref:System.Web.UI.ScriptManager> control registration methods can be broken into the following three categories:  \n  \n-   Registration methods that guarantee that script dependencies on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] are maintained.  \n  \n-   Registration methods that are not dependent on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)], but that are compatible with <xref:System.Web.UI.UpdatePanel> controls.  \n  \n-   Registration methods that support working with <xref:System.Web.UI.UpdatePanel> controls.  \n  \n For more information about how to create and use Ajax script in ASP.NET, see [Creating Custom Client Script by Using the Microsoft Ajax Library](http://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899).  \n  \n### Registering Script That Is Dependent on the Microsoft Ajax Library  \n You can use the following methods to register script files in a way that guarantees that any dependencies on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] are maintained.  \n  \n|Method|Definition|  \n|------------|----------------|  \n|<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>|Registers a server control that implements the <xref:System.Web.UI.IScriptControl> interface that is used to define a  client object. The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.|  \n|<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>|Registers a server control that implements the <xref:System.Web.UI.IExtenderControl> interface that is used to define a  client object. The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.|  \n  \n### Registering Partial-Page Update Compatible Scripts  \n You can use the following methods to register script files that are not dependent on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] but that are compatible with <xref:System.Web.UI.UpdatePanel> controls. These methods correspond to similar methods of the <xref:System.Web.UI.ClientScriptManager> control. If you are rendering script for use inside an <xref:System.Web.UI.UpdatePanel> control, make sure that you call the methods of the <xref:System.Web.UI.ScriptManager> control.  \n  \n|Method|Definition|  \n|------------|----------------|  \n|<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>|Adds a value to a JavaScript array. If the array does not exist, it is created.|  \n|<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>|Renders a `script` element after the page's opening `<form>` tag. The script is specified as a string parameter.|  \n|<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>|Renders a `script` element after the page's opening `<form>` tag. The script content is specified by setting the `src` attribute to a URL that points to a script file.|  \n|<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>|Renders a `script` element after the page's opening `<form>` tag. The script content is specified with a resource name in an assembly. The `src` attribute is automatically populated with a URL by a call to an HTTP handler that retrieves the named script from the assembly.|  \n|<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>|Renders a custom name/value attribute pair (an expando) in the markup for a specified control.|  \n|<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>|Renders a hidden field.|  \n|<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>|Registers a script that is executed in response to the `form` element's `submit` event. The `onSubmit` attribute references the specified script.|  \n|<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>|Renders a startup script block just before the page's closing `</form>` tag. The script to render is specified as a string parameter.|  \n  \n When you register methods, you specify a type/key pair for that script. If a script with the same type/key pair is already registered, a new script is not registered. Similarly, if you register a script with a type/resource name pair that already exists, the `script` element that references the resource is not added again. When you register an expando attribute of a previously registered attribute, an exception is thrown. Duplicate registration of array values is allowed.  \n  \n When you call the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> or the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method, avoid registering script that executes inline functions. Instead, register script that contains function definitions like event handlers or custom class definitions for your application.  \n  \n### Registration Methods for UpdatePanel Controls  \n You can use the following methods to customize partial-page updates when you use <xref:System.Web.UI.UpdatePanel> controls.  \n  \n|Method|Definition|  \n|------------|----------------|  \n|<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>|Registers a control as a trigger for asynchronous postbacks.|  \n|<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>|Sends custom data to controls during partial-page rendering.|  \n|<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>|Registers a dispose script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control. The script is executed when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted. The dispose method is used for client components that are part of the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] and that have to free resources when a component is no longer used.|  \n|<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>|Registers a control as a trigger for a full postback. This method is used for controls inside an <xref:System.Web.UI.UpdatePanel> control that would otherwise perform asynchronous postbacks.|  \n  \n<a name=\"web_service_references\"></a>   \n## Web Service References  \n You can register a Web service to be called from client script by creating a <xref:System.Web.UI.ServiceReference> object and adding it to the <xref:System.Web.UI.ScriptManager.Services%2A> collection of the <xref:System.Web.UI.ScriptManager> control. ASP.NET generates a client proxy object for each <xref:System.Web.UI.ServiceReference> object in the <xref:System.Web.UI.ScriptManager.Services%2A> collection. You can programmatically add <xref:System.Web.UI.ServiceReference> objects to the <xref:System.Web.UI.ScriptManager.Services%2A> collection to register Web services at run time.  \n  \n For more information about how to access Web services in script, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8) and [Calling Web Services from Client Script in ASP.NET AJAX](http://msdn.microsoft.com/en-us/fc06c224-f01a-45be-94af-bd71afbc07b0).  \n  \n<a name=\"localization\"></a>   \n## Localization  \n The <xref:System.Web.UI.ScriptManager> control generates references in the rendered page that point to the appropriate localized script files, which are either script files embedded in assemblies or stand-alone script files.  \n  \n When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> control retrieves localized resources (such as localized strings) for the current culture, if they exist. The <xref:System.Web.UI.ScriptManager> control provides the following functionality for using localized resources:  \n  \n-   **Script files that are embedded in an assembly**. The <xref:System.Web.UI.ScriptManager> control determines which culture-specific or fallback-culture script file to send to the browser. It does this by using the culture-specific <xref:System.Resources.NeutralResourcesLanguageAttribute> assembly attribute, the resources packaged with the assembly, and the UI culture of the browser (if any).  \n  \n-   **Stand-alone script files**. The <xref:System.Web.UI.ScriptManager> control defines the list of UI cultures that are supported by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> object.  \n  \n-   **In debug mode**. The <xref:System.Web.UI.ScriptManager> control tries to render a culture-specific script file that contains debug information. For example, if the page is in debug mode and the current culture is set to en-MX, the control renders a script file that has a name such as `scriptname`.en-MX.debug.js, if the file exists. If the file does not exist, the debug file for the appropriate fallback culture is rendered  \n  \n For more information about how to localize resources, see [Localizing Resources for Component Libraries Overview](http://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb).  \n  \n<a name=\"error_handling\"></a>   \n## Error Handling  \n When a page error occurs during asynchronous postbacks, the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised. The way in which errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file. For more information, see [Customizing Error Handling for UpdatePanel Controls](http://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0).  \n  \n<a name=\"declarative_syntax\"></a>   \n## Declarative Syntax  \n  \n```  \n<asp:ScriptManager  \n    AllowCustomErrorsRedirect=\"True|False\"  \n    AsyncPostBackErrorMessage=\"string\"  \n    AsyncPostBackTimeout=\"integer\"  \n    AuthenticationService-Path=\"uri\"  \n    EnablePageMethods=\"True|False\"  \n    EnablePartialRendering=\"True|False\"  \n    EnableScriptGlobalization=\"True|False\"  \n    EnableScriptLocalization=\"True|False\"  \n    EnableTheming=\"True|False\"  \n    EnableViewState=\"True|False\"  \n    ID=\"string\"  \n    LoadScriptsBeforeUI=\"True|False\"  \n    OnAsyncPostBackError=\"AsyncPostBackError event handler\"  \n    OnDataBinding=\"DataBinding event handler\"  \n    OnDisposed=\"Disposed event handler\"  \n    OnInit=\"Init event handler\"  \n    OnLoad=\"Load event handler\"  \n    OnPreRender=\"PreRender event handler\"  \n    OnResolveScriptReference=\"ResolveScriptReference event handler\"  \n    OnUnload=\"Unload event handler\"  \n    ProfileService-LoadProperties=\"string\"  \n    ProfileService-Path=\"uri\"  \n    RoleService-LoadRoles=\"True|False\"  \n    RoleService-Path=\"uri\"  \n    runat=\"server\"  \n    ScriptMode=\"Auto|Inherit|Debug|Release\"  \n    ScriptPath=\"string\"  \n    SkinID=\"string\"  \n    SupportsPartialRendering=\"True|False\"  \n    Visible=\"True|False\"  \n>  \n        <AuthenticationService  \n            Path=\"uri\"  \n        />  \n        <ProfileService  \n            LoadProperties=\"string\"  \n            Path=\"uri\"  \n        />  \n        <RoleService  \n            LoadRoles=\"True|False\"  \n            Path=\"uri\"  \n        />  \n        <Scripts>  \n            <asp:ScriptReference  \n                Assembly=\"string\"  \n                IgnoreScriptPath=\"True|False\"  \n                Name=\"string\"  \n                NotifyScriptLoaded=\"True|False\"  \n                Path=\"string\"  \n                ResourceUICultures=\"string\"  \n                ScriptMode=\"Auto|Debug|Inherit|Release\"  \n            />  \n        </Scripts>  \n        <Services>  \n            <asp:ServiceReference  \n                InlineScript=\"True|False\"  \n                Path=\"string\"  \n            />  \n        </Services>  \n</asp:ScriptManager>  \n```","nodes":[{"pos":[0,14],"content":"In this topic:","nodes":[{"content":"In this topic:","pos":[0,14]}]},{"pos":[24,53],"content":"<bpt id=\"p1\">[</bpt>Introduction<ept id=\"p1\">](#introduction)</ept>","source":"[Introduction](#introduction)"},{"pos":[63,112],"content":"<bpt id=\"p1\">[</bpt>Partial-Page Rendering<ept id=\"p1\">](#partial_page_rendering)</ept>","source":"[Partial-Page Rendering](#partial_page_rendering)"},{"pos":[122,311],"content":"<bpt id=\"p1\">[</bpt>Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components<ept id=\"p1\">](#using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components)</ept>","source":"[Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components](#using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components)"},{"pos":[321,394],"content":"<bpt id=\"p1\">[</bpt>Script Management and Registration<ept id=\"p1\">](#script_management_and_registration)</ept>","source":"[Script Management and Registration](#script_management_and_registration)"},{"pos":[404,453],"content":"<bpt id=\"p1\">[</bpt>Web Service References<ept id=\"p1\">](#web_service_references)</ept>","source":"[Web Service References](#web_service_references)"},{"pos":[463,492],"content":"<bpt id=\"p1\">[</bpt>Localization<ept id=\"p1\">](#localization)</ept>","source":"[Localization](#localization)"},{"pos":[502,535],"content":"<bpt id=\"p1\">[</bpt>Error Handling<ept id=\"p1\">](#error_handling)</ept>","source":"[Error Handling](#error_handling)"},{"pos":[545,586],"content":"<bpt id=\"p1\">[</bpt>Declarative Syntax<ept id=\"p1\">](#declarative_syntax)</ept>","source":"[Declarative Syntax](#declarative_syntax)"},{"pos":[626,638],"content":"Introduction","linkify":"Introduction","nodes":[{"content":"Introduction","pos":[0,12]}]},{"pos":[642,1112],"content":"The <xref:System.Web.UI.ScriptManager> control is central to Ajax functionality in ASP.NET. The control manages all ASP.NET Ajax resources on a page. This includes downloading [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] scripts to the browser and coordinating partial-page updates that are enabled by using <xref:System.Web.UI.UpdatePanel> controls. In addition, the <xref:System.Web.UI.ScriptManager> control enables you to do the following:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control is central to Ajax functionality in ASP.NET.","pos":[0,91],"source":"The <xref:System.Web.UI.ScriptManager> control is central to Ajax functionality in ASP.NET."},{"content":"The control manages all ASP.NET Ajax resources on a page.","pos":[92,149]},{"content":"This includes downloading <ph id=\"ph1\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> scripts to the browser and coordinating partial-page updates that are enabled by using <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls.","pos":[150,377],"source":" This includes downloading [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] scripts to the browser and coordinating partial-page updates that are enabled by using <xref:System.Web.UI.UpdatePanel> controls."},{"content":"In addition, the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control enables you to do the following:","pos":[378,470],"source":" In addition, the <xref:System.Web.UI.ScriptManager> control enables you to do the following:"}]},{"pos":[1122,1386],"content":"Register script that is compatible with partial-page updates. In order to manage dependencies between your script and the core library, any script that you register is loaded after the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] script.","nodes":[{"content":"Register script that is compatible with partial-page updates.","pos":[0,61]},{"content":"In order to manage dependencies between your script and the core library, any script that you register is loaded after the <ph id=\"ph1\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> script.","pos":[62,264],"source":" In order to manage dependencies between your script and the core library, any script that you register is loaded after the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] script."}]},{"pos":[1396,1461],"content":"Specify whether release or debug scripts are sent to the browser.","nodes":[{"content":"Specify whether release or debug scripts are sent to the browser.","pos":[0,65]}]},{"pos":[1471,1601],"content":"Provide access to Web service methods from script by registering Web services with the <xref:System.Web.UI.ScriptManager> control.","nodes":[{"content":"Provide access to Web service methods from script by registering Web services with the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[0,130],"source":"Provide access to Web service methods from script by registering Web services with the <xref:System.Web.UI.ScriptManager> control."}]},{"pos":[1611,1793],"content":"Provide access to ASP.NET authentication, role, and profile application services from client script by registering these services with the <xref:System.Web.UI.ScriptManager> control.","nodes":[{"content":"Provide access to ASP.NET authentication, role, and profile application services from client script by registering these services with the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[0,182],"source":"Provide access to ASP.NET authentication, role, and profile application services from client script by registering these services with the <xref:System.Web.UI.ScriptManager> control."}]},{"pos":[1803,1896],"content":"Enable culture-specific display of ECMAScript (JavaScript) , , and  functions in the browser.","nodes":[{"content":"Enable culture-specific display of ECMAScript (JavaScript) , , and  functions in the browser.","pos":[0,93]}]},{"pos":[1906,2131],"content":"Access localization resources for embedded script files or for stand-alone script files by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> control.","nodes":[{"content":"Access localization resources for embedded script files or for stand-alone script files by using the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptReference&gt;</ph> control.","pos":[0,225],"source":"Access localization resources for embedded script files or for stand-alone script files by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> control."}]},{"pos":[2141,2396],"content":"Register server controls that implement the <xref:System.Web.UI.IExtenderControl> or <xref:System.Web.UI.IScriptControl> interfaces with the <xref:System.Web.UI.ScriptManager> control so that script required by client components and behaviors is rendered.","nodes":[{"content":"Register server controls that implement the <ph id=\"ph1\">&lt;xref:System.Web.UI.IExtenderControl&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Web.UI.IScriptControl&gt;</ph> interfaces with the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control so that script required by client components and behaviors is rendered.","pos":[0,255],"source":"Register server controls that implement the <xref:System.Web.UI.IExtenderControl> or <xref:System.Web.UI.IScriptControl> interfaces with the <xref:System.Web.UI.ScriptManager> control so that script required by client components and behaviors is rendered."}]},{"pos":[2446,2468],"content":"Partial-Page Rendering","linkify":"Partial-Page Rendering","nodes":[{"content":"Partial-Page Rendering","pos":[0,22]}]},{"pos":[2472,2576],"content":"The ability of an ASP.NET page to support partial-page rendering is controlled by the following factors:","nodes":[{"content":"The ability of an ASP.NET page to support partial-page rendering is controlled by the following factors:","pos":[0,104]}]},{"pos":[2586,2740],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control's <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A&gt;</ph> property must be <ph id=\"ph3\">`true`</ph> (the default value).","source":"The <xref:System.Web.UI.ScriptManager> control's <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property must be `true` (the default value)."},{"pos":[2750,2830],"content":"There must be at least one <xref:System.Web.UI.UpdatePanel> control on the page.","nodes":[{"content":"There must be at least one <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control on the page.","pos":[0,80],"source":"There must be at least one <xref:System.Web.UI.UpdatePanel> control on the page."}]},{"pos":[2840,3097],"content":"The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property must be `true` (the default value). If the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is not set explicitly, its value is based on browser capabilities.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A&gt;</ph> property must be <ph id=\"ph2\">`true`</ph> (the default value).","pos":[0,111],"source":"The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property must be `true` (the default value)."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A&gt;</ph> property is not set explicitly, its value is based on browser capabilities.","pos":[112,257],"source":" If the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is not set explicitly, its value is based on browser capabilities."}]},{"pos":[3104,3458],"content":"You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event. If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.","nodes":[{"content":"You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event. If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.","pos":[0,354],"nodes":[{"content":"You can override the value of the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A&gt;</ph> property at run time during or before the page's <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.Init&gt;</ph> event.","pos":[0,184],"source":"You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event."},{"content":"If you try to change this property after the page's <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.Init&gt;</ph> event has occurred, an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown.","pos":[185,354],"source":" If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown."}]}]},{"pos":[3465,4216],"content":"When partial-page rendering is supported, the <xref:System.Web.UI.ScriptManager> control renders script to enable asynchronous postbacks and partial-page updates. The regions of the page to be updated are designated by using <xref:System.Web.UI.UpdatePanel> controls. The <xref:System.Web.UI.ScriptManager> control handles the asynchronous postbacks and refreshes only the regions of the page that have to be updated. For more information about partial-page rendering, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49). For more information about the conditions that cause an update, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a).","nodes":[{"content":"When partial-page rendering is supported, the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control renders script to enable asynchronous postbacks and partial-page updates.","pos":[0,162],"source":"When partial-page rendering is supported, the <xref:System.Web.UI.ScriptManager> control renders script to enable asynchronous postbacks and partial-page updates."},{"content":"The regions of the page to be updated are designated by using <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls.","pos":[163,267],"source":" The regions of the page to be updated are designated by using <xref:System.Web.UI.UpdatePanel> controls."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control handles the asynchronous postbacks and refreshes only the regions of the page that have to be updated.","pos":[268,417],"source":" The <xref:System.Web.UI.ScriptManager> control handles the asynchronous postbacks and refreshes only the regions of the page that have to be updated."},{"content":"For more information about partial-page rendering, see <bpt id=\"p1\">[</bpt>Partial-Page Rendering Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>.","pos":[418,579],"source":" For more information about partial-page rendering, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)."},{"content":"For more information about the conditions that cause an update, see <bpt id=\"p1\">[</bpt>UpdatePanel Control Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept>.","pos":[580,751],"source":" For more information about the conditions that cause an update, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)."}]},{"pos":[4336,4428],"content":"Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components","linkify":"Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components","nodes":[{"content":"Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components","pos":[0,92]}]},{"pos":[4432,4884],"content":"A page can contain only one <xref:System.Web.UI.ScriptManager> control in its hierarchy. To register services and scripts for nested pages, user controls, or components when the parent page already has a <xref:System.Web.UI.ScriptManager> control, use the <xref:System.Web.UI.ScriptManagerProxy> control. For more information, see [Using the UpdatePanel Control with Master Pages](http://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)","nodes":[{"content":"A page can contain only one <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control in its hierarchy.","pos":[0,88],"source":"A page can contain only one <xref:System.Web.UI.ScriptManager> control in its hierarchy."},{"content":"To register services and scripts for nested pages, user controls, or components when the parent page already has a <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control, use the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[89,304],"source":" To register services and scripts for nested pages, user controls, or components when the parent page already has a <xref:System.Web.UI.ScriptManager> control, use the <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Using the UpdatePanel Control with Master Pages<ept id=\"p1\">](http://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)</ept>","pos":[305,452],"source":" For more information, see [Using the UpdatePanel Control with Master Pages](http://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)"}]},{"pos":[4946,4980],"content":"Script Management and Registration","linkify":"Script Management and Registration","nodes":[{"content":"Script Management and Registration","pos":[0,34]}]},{"pos":[4984,5223],"content":"The <xref:System.Web.UI.ScriptManager> control enables you to register script that is then rendered as part of the page. The <xref:System.Web.UI.ScriptManager> control registration methods can be broken into the following three categories:","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager> control enables you to register script that is then rendered as part of the page. The <xref:System.Web.UI.ScriptManager> control registration methods can be broken into the following three categories:","pos":[0,239],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control enables you to register script that is then rendered as part of the page.","pos":[0,120],"source":"The <xref:System.Web.UI.ScriptManager> control enables you to register script that is then rendered as part of the page."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control registration methods can be broken into the following three categories:","pos":[121,239],"source":" The <xref:System.Web.UI.ScriptManager> control registration methods can be broken into the following three categories:"}]}]},{"pos":[5233,5388],"content":"Registration methods that guarantee that script dependencies on the <ph id=\"ph1\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> are maintained.","source":"Registration methods that guarantee that script dependencies on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] are maintained."},{"pos":[5398,5593],"content":"Registration methods that are not dependent on the <ph id=\"ph1\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph>, but that are compatible with <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls.","source":"Registration methods that are not dependent on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)], but that are compatible with <xref:System.Web.UI.UpdatePanel> controls."},{"pos":[5603,5692],"content":"Registration methods that support working with <xref:System.Web.UI.UpdatePanel> controls.","nodes":[{"content":"Registration methods that support working with <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls.","pos":[0,89],"source":"Registration methods that support working with <xref:System.Web.UI.UpdatePanel> controls."}]},{"pos":[5699,5916],"content":"For more information about how to create and use Ajax script in ASP.NET, see <bpt id=\"p1\">[</bpt>Creating Custom Client Script by Using the Microsoft Ajax Library<ept id=\"p1\">](http://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899)</ept>.","source":"For more information about how to create and use Ajax script in ASP.NET, see [Creating Custom Client Script by Using the Microsoft Ajax Library](http://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899)."},{"pos":[5926,5992],"content":"Registering Script That Is Dependent on the Microsoft Ajax Library","linkify":"Registering Script That Is Dependent on the Microsoft Ajax Library","nodes":[{"content":"Registering Script That Is Dependent on the Microsoft Ajax Library","pos":[0,66]}]},{"pos":[5996,6196],"content":"You can use the following methods to register script files in a way that guarantees that any dependencies on the <ph id=\"ph1\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> are maintained.","source":"You can use the following methods to register script files in a way that guarantees that any dependencies on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] are maintained."},{"pos":[6203,6209],"content":"Method","nodes":[{"content":"Method","pos":[0,6]}]},{"pos":[6210,6220],"content":"Definition","nodes":[{"content":"Definition","pos":[0,10]}]},{"pos":[6259,6318],"content":"<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>","nodes":[]},{"pos":[6319,6547],"content":"Registers a server control that implements the <xref:System.Web.UI.IScriptControl> interface that is used to define a  client object. The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.","nodes":[{"content":"Registers a server control that implements the <xref:System.Web.UI.IScriptControl> interface that is used to define a  client object. The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.","pos":[0,228],"nodes":[{"content":"Registers a server control that implements the <ph id=\"ph1\">&lt;xref:System.Web.UI.IScriptControl&gt;</ph> interface that is used to define a  client object.","pos":[0,133],"source":"Registers a server control that implements the <xref:System.Web.UI.IScriptControl> interface that is used to define a  client object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control renders script that supports the client object.","pos":[134,228],"source":" The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object."}]}]},{"pos":[6552,6613],"content":"<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>","nodes":[]},{"pos":[6614,6844],"content":"Registers a server control that implements the <xref:System.Web.UI.IExtenderControl> interface that is used to define a  client object. The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.","nodes":[{"content":"Registers a server control that implements the <xref:System.Web.UI.IExtenderControl> interface that is used to define a  client object. The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.","pos":[0,230],"nodes":[{"content":"Registers a server control that implements the <ph id=\"ph1\">&lt;xref:System.Web.UI.IExtenderControl&gt;</ph> interface that is used to define a  client object.","pos":[0,135],"source":"Registers a server control that implements the <xref:System.Web.UI.IExtenderControl> interface that is used to define a  client object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control renders script that supports the client object.","pos":[136,230],"source":" The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object."}]}]},{"pos":[6855,6905],"content":"Registering Partial-Page Update Compatible Scripts","linkify":"Registering Partial-Page Update Compatible Scripts","nodes":[{"content":"Registering Partial-Page Update Compatible Scripts","pos":[0,50]}]},{"pos":[6909,7417],"content":"You can use the following methods to register script files that are not dependent on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] but that are compatible with <xref:System.Web.UI.UpdatePanel> controls. These methods correspond to similar methods of the <xref:System.Web.UI.ClientScriptManager> control. If you are rendering script for use inside an <xref:System.Web.UI.UpdatePanel> control, make sure that you call the methods of the <xref:System.Web.UI.ScriptManager> control.","nodes":[{"content":"You can use the following methods to register script files that are not dependent on the <ph id=\"ph1\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> but that are compatible with <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls.","pos":[0,232],"source":"You can use the following methods to register script files that are not dependent on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] but that are compatible with <xref:System.Web.UI.UpdatePanel> controls."},{"content":"These methods correspond to similar methods of the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> control.","pos":[233,333],"source":" These methods correspond to similar methods of the <xref:System.Web.UI.ClientScriptManager> control."},{"content":"If you are rendering script for use inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, make sure that you call the methods of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[334,508],"source":" If you are rendering script for use inside an <xref:System.Web.UI.UpdatePanel> control, make sure that you call the methods of the <xref:System.Web.UI.ScriptManager> control."}]},{"pos":[7424,7430],"content":"Method","nodes":[{"content":"Method","pos":[0,6]}]},{"pos":[7431,7441],"content":"Definition","nodes":[{"content":"Definition","pos":[0,10]}]},{"pos":[7480,7542],"content":"<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>","nodes":[]},{"pos":[7543,7622],"content":"Adds a value to a JavaScript array. If the array does not exist, it is created.","nodes":[{"content":"Adds a value to a JavaScript array. If the array does not exist, it is created.","pos":[0,79],"nodes":[{"content":"Adds a value to a JavaScript array.","pos":[0,35]},{"content":"If the array does not exist, it is created.","pos":[36,79]}]}]},{"pos":[7627,7690],"content":"<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>","nodes":[]},{"pos":[7691,7803],"content":"Renders a `script` element after the page's opening `<form>` tag. The script is specified as a string parameter.","nodes":[{"content":"Renders a <ph id=\"ph1\">`script`</ph> element after the page's opening <ph id=\"ph2\">`&lt;form&gt;`</ph> tag.","pos":[0,65],"source":"Renders a `script` element after the page's opening `<form>` tag."},{"content":"The script is specified as a string parameter.","pos":[66,112]}]},{"pos":[7808,7873],"content":"<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>","nodes":[]},{"pos":[7874,8041],"content":"Renders a `script` element after the page's opening `<form>` tag. The script content is specified by setting the `src` attribute to a URL that points to a script file.","nodes":[{"content":"Renders a <ph id=\"ph1\">`script`</ph> element after the page's opening <ph id=\"ph2\">`&lt;form&gt;`</ph> tag.","pos":[0,65],"source":"Renders a `script` element after the page's opening `<form>` tag."},{"content":"The script content is specified by setting the <ph id=\"ph1\">`src`</ph> attribute to a URL that points to a script file.","pos":[66,167],"source":" The script content is specified by setting the `src` attribute to a URL that points to a script file."}]},{"pos":[8046,8112],"content":"<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>","nodes":[]},{"pos":[8113,8385],"content":"Renders a `script` element after the page's opening `<form>` tag. The script content is specified with a resource name in an assembly. The `src` attribute is automatically populated with a URL by a call to an HTTP handler that retrieves the named script from the assembly.","nodes":[{"content":"Renders a <ph id=\"ph1\">`script`</ph> element after the page's opening <ph id=\"ph2\">`&lt;form&gt;`</ph> tag.","pos":[0,65],"source":"Renders a `script` element after the page's opening `<form>` tag."},{"content":"The script content is specified with a resource name in an assembly.","pos":[66,134]},{"content":"The <ph id=\"ph1\">`src`</ph> attribute is automatically populated with a URL by a call to an HTTP handler that retrieves the named script from the assembly.","pos":[135,272],"source":" The `src` attribute is automatically populated with a URL by a call to an HTTP handler that retrieves the named script from the assembly."}]},{"pos":[8390,8452],"content":"<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>","nodes":[]},{"pos":[8453,8547],"content":"Renders a custom name/value attribute pair (an expando) in the markup for a specified control.","nodes":[{"content":"Renders a custom name/value attribute pair (an expando) in the markup for a specified control.","pos":[0,94]}]},{"pos":[8552,8609],"content":"<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>","nodes":[]},{"pos":[8610,8633],"content":"Renders a hidden field.","nodes":[{"content":"Renders a hidden field.","pos":[0,23]}]},{"pos":[8638,8701],"content":"<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>","nodes":[]},{"pos":[8702,8847],"content":"Registers a script that is executed in response to the `form` element's `submit` event. The `onSubmit` attribute references the specified script.","nodes":[{"content":"Registers a script that is executed in response to the <ph id=\"ph1\">`form`</ph> element's <ph id=\"ph2\">`submit`</ph> event.","pos":[0,87],"source":"Registers a script that is executed in response to the `form` element's `submit` event."},{"content":"The <ph id=\"ph1\">`onSubmit`</ph> attribute references the specified script.","pos":[88,145],"source":" The `onSubmit` attribute references the specified script."}]},{"pos":[8852,8911],"content":"<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>","nodes":[]},{"pos":[8912,9045],"content":"Renders a startup script block just before the page's closing `</form>` tag. The script to render is specified as a string parameter.","nodes":[{"content":"Renders a startup script block just before the page's closing <ph id=\"ph1\">`&lt;/form&gt;`</ph> tag.","pos":[0,76],"source":"Renders a startup script block just before the page's closing `</form>` tag."},{"content":"The script to render is specified as a string parameter.","pos":[77,133]}]},{"pos":[9053,9529],"content":"When you register methods, you specify a type/key pair for that script. If a script with the same type/key pair is already registered, a new script is not registered. Similarly, if you register a script with a type/resource name pair that already exists, the `script` element that references the resource is not added again. When you register an expando attribute of a previously registered attribute, an exception is thrown. Duplicate registration of array values is allowed.","nodes":[{"content":"When you register methods, you specify a type/key pair for that script.","pos":[0,71]},{"content":"If a script with the same type/key pair is already registered, a new script is not registered.","pos":[72,166]},{"content":"Similarly, if you register a script with a type/resource name pair that already exists, the <ph id=\"ph1\">`script`</ph> element that references the resource is not added again.","pos":[167,324],"source":" Similarly, if you register a script with a type/resource name pair that already exists, the `script` element that references the resource is not added again."},{"content":"When you register an expando attribute of a previously registered attribute, an exception is thrown.","pos":[325,425]},{"content":"Duplicate registration of array values is allowed.","pos":[426,476]}]},{"pos":[9536,9888],"content":"When you call the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> or the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method, avoid registering script that executes inline functions. Instead, register script that contains function definitions like event handlers or custom class definitions for your application.","nodes":[{"content":"When you call the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> or the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method, avoid registering script that executes inline functions. Instead, register script that contains function definitions like event handlers or custom class definitions for your application.","pos":[0,352],"nodes":[{"content":"When you call the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A&gt;</ph> or the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A&gt;</ph> method, avoid registering script that executes inline functions.","pos":[0,222],"source":"When you call the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> or the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method, avoid registering script that executes inline functions."},{"content":"Instead, register script that contains function definitions like event handlers or custom class definitions for your application.","pos":[223,352]}]}]},{"pos":[9898,9943],"content":"Registration Methods for UpdatePanel Controls","linkify":"Registration Methods for UpdatePanel Controls","nodes":[{"content":"Registration Methods for UpdatePanel Controls","pos":[0,45]}]},{"pos":[9947,10070],"content":"You can use the following methods to customize partial-page updates when you use <xref:System.Web.UI.UpdatePanel> controls.","nodes":[{"content":"You can use the following methods to customize partial-page updates when you use <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls.","pos":[0,123],"source":"You can use the following methods to customize partial-page updates when you use <xref:System.Web.UI.UpdatePanel> controls."}]},{"pos":[10077,10083],"content":"Method","nodes":[{"content":"Method","pos":[0,6]}]},{"pos":[10084,10094],"content":"Definition","nodes":[{"content":"Definition","pos":[0,10]}]},{"pos":[10133,10199],"content":"<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>","nodes":[]},{"pos":[10200,10260],"content":"Registers a control as a trigger for asynchronous postbacks.","nodes":[{"content":"Registers a control as a trigger for asynchronous postbacks.","pos":[0,60]}]},{"pos":[10265,10319],"content":"<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>","nodes":[]},{"pos":[10320,10380],"content":"Sends custom data to controls during partial-page rendering.","nodes":[{"content":"Sends custom data to controls during partial-page rendering.","pos":[0,60]}]},{"pos":[10385,10438],"content":"<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>","nodes":[]},{"pos":[10439,10845],"content":"Registers a dispose script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control. The script is executed when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted. The dispose method is used for client components that are part of the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] and that have to free resources when a component is no longer used.","nodes":[{"content":"Registers a dispose script for a control that is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,100],"source":"Registers a dispose script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control."},{"content":"The script is executed when the <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is updated or deleted.","pos":[101,196],"source":" The script is executed when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted."},{"content":"The dispose method is used for client components that are part of the <ph id=\"ph1\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> and that have to free resources when a component is no longer used.","pos":[197,406],"source":" The dispose method is used for client components that are part of the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] and that have to free resources when a component is no longer used."}]},{"pos":[10850,10911],"content":"<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>","nodes":[]},{"pos":[10912,11102],"content":"Registers a control as a trigger for a full postback. This method is used for controls inside an <xref:System.Web.UI.UpdatePanel> control that would otherwise perform asynchronous postbacks.","nodes":[{"content":"Registers a control as a trigger for a full postback. This method is used for controls inside an <xref:System.Web.UI.UpdatePanel> control that would otherwise perform asynchronous postbacks.","pos":[0,190],"nodes":[{"content":"Registers a control as a trigger for a full postback.","pos":[0,53]},{"content":"This method is used for controls inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control that would otherwise perform asynchronous postbacks.","pos":[54,190],"source":" This method is used for controls inside an <xref:System.Web.UI.UpdatePanel> control that would otherwise perform asynchronous postbacks."}]}]},{"pos":[11153,11175],"content":"Web Service References","linkify":"Web Service References","nodes":[{"content":"Web Service References","pos":[0,22]}]},{"pos":[11179,11768],"content":"You can register a Web service to be called from client script by creating a <xref:System.Web.UI.ServiceReference> object and adding it to the <xref:System.Web.UI.ScriptManager.Services%2A> collection of the <xref:System.Web.UI.ScriptManager> control. ASP.NET generates a client proxy object for each <xref:System.Web.UI.ServiceReference> object in the <xref:System.Web.UI.ScriptManager.Services%2A> collection. You can programmatically add <xref:System.Web.UI.ServiceReference> objects to the <xref:System.Web.UI.ScriptManager.Services%2A> collection to register Web services at run time.","nodes":[{"content":"You can register a Web service to be called from client script by creating a <xref:System.Web.UI.ServiceReference> object and adding it to the <xref:System.Web.UI.ScriptManager.Services%2A> collection of the <xref:System.Web.UI.ScriptManager> control. ASP.NET generates a client proxy object for each <xref:System.Web.UI.ServiceReference> object in the <xref:System.Web.UI.ScriptManager.Services%2A> collection. You can programmatically add <xref:System.Web.UI.ServiceReference> objects to the <xref:System.Web.UI.ScriptManager.Services%2A> collection to register Web services at run time.","pos":[0,589],"nodes":[{"content":"You can register a Web service to be called from client script by creating a <ph id=\"ph1\">&lt;xref:System.Web.UI.ServiceReference&gt;</ph> object and adding it to the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.Services%2A&gt;</ph> collection of the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[0,251],"source":"You can register a Web service to be called from client script by creating a <xref:System.Web.UI.ServiceReference> object and adding it to the <xref:System.Web.UI.ScriptManager.Services%2A> collection of the <xref:System.Web.UI.ScriptManager> control."},{"content":"ASP.NET generates a client proxy object for each <ph id=\"ph1\">&lt;xref:System.Web.UI.ServiceReference&gt;</ph> object in the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.Services%2A&gt;</ph> collection.","pos":[252,411],"source":" ASP.NET generates a client proxy object for each <xref:System.Web.UI.ServiceReference> object in the <xref:System.Web.UI.ScriptManager.Services%2A> collection."},{"content":"You can programmatically add <ph id=\"ph1\">&lt;xref:System.Web.UI.ServiceReference&gt;</ph> objects to the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.Services%2A&gt;</ph> collection to register Web services at run time.","pos":[412,589],"source":" You can programmatically add <xref:System.Web.UI.ServiceReference> objects to the <xref:System.Web.UI.ScriptManager.Services%2A> collection to register Web services at run time."}]}]},{"pos":[11775,12103],"content":"For more information about how to access Web services in script, see <bpt id=\"p1\">[</bpt>Exposing Web Services to Client Script in ASP.NET AJAX<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)</ept> and <bpt id=\"p2\">[</bpt>Calling Web Services from Client Script in ASP.NET AJAX<ept id=\"p2\">](http://msdn.microsoft.com/en-us/fc06c224-f01a-45be-94af-bd71afbc07b0)</ept>.","source":"For more information about how to access Web services in script, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8) and [Calling Web Services from Client Script in ASP.NET AJAX](http://msdn.microsoft.com/en-us/fc06c224-f01a-45be-94af-bd71afbc07b0)."},{"pos":[12143,12155],"content":"Localization","linkify":"Localization","nodes":[{"content":"Localization","pos":[0,12]}]},{"pos":[12159,12383],"content":"The <xref:System.Web.UI.ScriptManager> control generates references in the rendered page that point to the appropriate localized script files, which are either script files embedded in assemblies or stand-alone script files.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control generates references in the rendered page that point to the appropriate localized script files, which are either script files embedded in assemblies or stand-alone script files.","pos":[0,224],"source":"The <xref:System.Web.UI.ScriptManager> control generates references in the rendered page that point to the appropriate localized script files, which are either script files embedded in assemblies or stand-alone script files."}]},{"pos":[12390,12748],"content":"When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> control retrieves localized resources (such as localized strings) for the current culture, if they exist. The <xref:System.Web.UI.ScriptManager> control provides the following functionality for using localized resources:","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control retrieves localized resources (such as localized strings) for the current culture, if they exist.","pos":[0,243],"source":"When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> control retrieves localized resources (such as localized strings) for the current culture, if they exist."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control provides the following functionality for using localized resources:","pos":[244,358],"source":" The <xref:System.Web.UI.ScriptManager> control provides the following functionality for using localized resources:"}]},{"pos":[12758,13152],"content":"**Script files that are embedded in an assembly**. The <xref:System.Web.UI.ScriptManager> control determines which culture-specific or fallback-culture script file to send to the browser. It does this by using the culture-specific <xref:System.Resources.NeutralResourcesLanguageAttribute> assembly attribute, the resources packaged with the assembly, and the UI culture of the browser (if any).","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Script files that are embedded in an assembly<ept id=\"p1\">**</ept>.","pos":[0,50],"source":"**Script files that are embedded in an assembly**."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control determines which culture-specific or fallback-culture script file to send to the browser.","pos":[51,187],"source":" The <xref:System.Web.UI.ScriptManager> control determines which culture-specific or fallback-culture script file to send to the browser."},{"content":"It does this by using the culture-specific <ph id=\"ph1\">&lt;xref:System.Resources.NeutralResourcesLanguageAttribute&gt;</ph> assembly attribute, the resources packaged with the assembly, and the UI culture of the browser (if any).","pos":[188,394],"source":" It does this by using the culture-specific <xref:System.Resources.NeutralResourcesLanguageAttribute> assembly attribute, the resources packaged with the assembly, and the UI culture of the browser (if any)."}]},{"pos":[13162,13426],"content":"**Stand-alone script files**. The <xref:System.Web.UI.ScriptManager> control defines the list of UI cultures that are supported by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> object.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>Stand-alone script files<ept id=\"p1\">**</ept>.","pos":[0,29],"source":"**Stand-alone script files**."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control defines the list of UI cultures that are supported by using the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptReference&gt;</ph> object.","pos":[30,264],"source":" The <xref:System.Web.UI.ScriptManager> control defines the list of UI cultures that are supported by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> object."}]},{"pos":[13436,13863],"content":"**In debug mode**. The <xref:System.Web.UI.ScriptManager> control tries to render a culture-specific script file that contains debug information. For example, if the page is in debug mode and the current culture is set to en-MX, the control renders a script file that has a name such as `scriptname`.en-MX.debug.js, if the file exists. If the file does not exist, the debug file for the appropriate fallback culture is rendered","nodes":[{"content":"<bpt id=\"p1\">**</bpt>In debug mode<ept id=\"p1\">**</ept>.","pos":[0,18],"source":"**In debug mode**."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control tries to render a culture-specific script file that contains debug information.","pos":[19,145],"source":" The <xref:System.Web.UI.ScriptManager> control tries to render a culture-specific script file that contains debug information."},{"content":"For example, if the page is in debug mode and the current culture is set to en-MX, the control renders a script file that has a name such as <ph id=\"ph1\">`scriptname`</ph>.en-MX.debug.js, if the file exists.","pos":[146,335],"source":" For example, if the page is in debug mode and the current culture is set to en-MX, the control renders a script file that has a name such as `scriptname`.en-MX.debug.js, if the file exists."},{"content":"If the file does not exist, the debug file for the appropriate fallback culture is rendered","pos":[336,427]}]},{"pos":[13870,14056],"content":"For more information about how to localize resources, see <bpt id=\"p1\">[</bpt>Localizing Resources for Component Libraries Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb)</ept>.","source":"For more information about how to localize resources, see [Localizing Resources for Component Libraries Overview](http://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb)."},{"pos":[14098,14112],"content":"Error Handling","linkify":"Error Handling","nodes":[{"content":"Error Handling","pos":[0,14]}]},{"pos":[14116,14681],"content":"When a page error occurs during asynchronous postbacks, the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised. The way in which errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file. For more information, see [Customizing Error Handling for UpdatePanel Controls](http://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0).","nodes":[{"content":"When a page error occurs during asynchronous postbacks, the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackError&gt;</ph> event is raised.","pos":[0,130],"source":"When a page error occurs during asynchronous postbacks, the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised."},{"content":"The way in which errors on the server are sent to the client depends on the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A&gt;</ph> property, the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A&gt;</ph> property, and the custom errors section of the Web.config file.","pos":[131,412],"source":" The way in which errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Customizing Error Handling for UpdatePanel Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0)</ept>.","pos":[413,565],"source":" For more information, see [Customizing Error Handling for UpdatePanel Controls](http://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0)."}]},{"pos":[14727,14745],"content":"Declarative Syntax","linkify":"Declarative Syntax","nodes":[{"content":"Declarative Syntax","pos":[0,18]}]}],"pos":[7077,24181],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.ScriptManager\"></xref> class.","nodes":[{"pos":[0,89],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.ScriptManager\"></xref> class."}],"pos":[35612,35702],"yaml":true},{"content":"This constructor initializes the internal fields that are used by the <xref:System.Web.UI.ScriptManager> control to track page, control, and deployment information.","nodes":[{"pos":[0,164],"content":"This constructor initializes the internal fields that are used by the <xref:System.Web.UI.ScriptManager> control to track page, control, and deployment information.","nodes":[{"content":"This constructor initializes the internal fields that are used by the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control to track page, control, and deployment information.","pos":[0,164],"source":"This constructor initializes the internal fields that are used by the <xref:System.Web.UI.ScriptManager> control to track page, control, and deployment information."}]}],"pos":[35713,35878],"yaml":true,"extradata":"MT"},{"content":"Creates a history point and adds it to the browser's history stack, using the specified state data collection and state title.","nodes":[{"pos":[0,126],"content":"Creates a history point and adds it to the browser's history stack, using the specified state data collection and state title.","nodes":[{"content":"Creates a history point and adds it to the browser's history stack, using the specified state data collection and state title.","pos":[0,126]}]}],"pos":[37197,37324],"yaml":true},{"content":"Use this method to create a history point when you want to save more than one key/value pair for the state data. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.  \n  \n You can use the state data to re-create the page when any subsequent server navigation event is raised. For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).","nodes":[{"pos":[0,395],"content":"Use this method to create a history point when you want to save more than one key/value pair for the state data. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.","nodes":[{"content":"Use this method to create a history point when you want to save more than one key/value pair for the state data.","pos":[0,112]},{"content":"When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.","pos":[113,271]},{"content":"If the <ph id=\"ph1\">`title`</ph> parameter is <ph id=\"ph2\">`null`</ph>, the title of the Web page is used as the title of the state entry in the history stack.","pos":[272,395],"source":" If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack."}]},{"pos":[402,653],"content":"You can use the state data to re-create the page when any subsequent server navigation event is raised. For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).","nodes":[{"content":"You can use the state data to re-create the page when any subsequent server navigation event is raised.","pos":[0,103]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Managing Browser History Using Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)</ept>.","pos":[104,251],"source":" For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)."}]}],"pos":[37335,37993],"yaml":true,"extradata":"MT"},{"content":"A collection of key/value pairs that contain the data for the state.","nodes":[{"pos":[0,68],"content":"A collection of key/value pairs that contain the data for the state.","nodes":[{"content":"A collection of key/value pairs that contain the data for the state.","pos":[0,68]}]}],"pos":[38232,38301],"yaml":true},{"content":"The text that will be added to the browser's history stack as the title for this state.","nodes":[{"pos":[0,87],"content":"The text that will be added to the browser's history stack as the title for this state.","nodes":[{"content":"The text that will be added to the browser's history stack as the title for this state.","pos":[0,87]}]}],"pos":[38362,38450],"yaml":true},{"content":"Creates a history point and adds it to the browser's history stack, using the specified state key and state value.","nodes":[{"pos":[0,114],"content":"Creates a history point and adds it to the browser's history stack, using the specified state key and state value.","nodes":[{"content":"Creates a history point and adds it to the browser's history stack, using the specified state key and state value.","pos":[0,114]}]}],"pos":[39562,39677],"yaml":true},{"content":"Use this method to create a history point when you only want to save a value to identify the state. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. The title of the Web page is used as the title of the state entry in the history stack.  \n  \n You can use the state data to re-create the page when any subsequent server navigation event is raised. For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).","nodes":[{"pos":[0,346],"content":"Use this method to create a history point when you only want to save a value to identify the state. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. The title of the Web page is used as the title of the state entry in the history stack.","nodes":[{"content":"Use this method to create a history point when you only want to save a value to identify the state. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. The title of the Web page is used as the title of the state entry in the history stack.","pos":[0,346],"nodes":[{"content":"Use this method to create a history point when you only want to save a value to identify the state.","pos":[0,99]},{"content":"When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.","pos":[100,258]},{"content":"The title of the Web page is used as the title of the state entry in the history stack.","pos":[259,346]}]}]},{"pos":[353,604],"content":"You can use the state data to re-create the page when any subsequent server navigation event is raised. For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).","nodes":[{"content":"You can use the state data to re-create the page when any subsequent server navigation event is raised.","pos":[0,103]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Managing Browser History Using Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)</ept>.","pos":[104,251],"source":" For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)."}]}],"pos":[39688,40297],"yaml":true,"extradata":"MT"},{"content":"The key part of the key/value pair that identifies the state of the Web page.","nodes":[{"pos":[0,77],"content":"The key part of the key/value pair that identifies the state of the Web page.","nodes":[{"content":"The key part of the key/value pair that identifies the state of the Web page.","pos":[0,77]}]}],"pos":[40451,40529],"yaml":true},{"content":"The value part of the key/value pair that identifies the state of the Web page.","nodes":[{"pos":[0,79],"content":"The value part of the key/value pair that identifies the state of the Web page.","nodes":[{"content":"The value part of the key/value pair that identifies the state of the Web page.","pos":[0,79]}]}],"pos":[40590,40670],"yaml":true},{"content":"Creates a history point and adds it to the browser's history stack, using the specified state key, state value, and state title.","nodes":[{"pos":[0,128],"content":"Creates a history point and adds it to the browser's history stack, using the specified state key, state value, and state title.","nodes":[{"content":"Creates a history point and adds it to the browser's history stack, using the specified state key, state value, and state title.","pos":[0,128]}]}],"pos":[41848,41977],"yaml":true},{"content":"Use this method to create a history point when you want to save a value to identify the state and a title for the state. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.  \n  \n You can use the state data to re-create the page when any subsequent server navigation event is raised. For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).","nodes":[{"pos":[0,403],"content":"Use this method to create a history point when you want to save a value to identify the state and a title for the state. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.","nodes":[{"content":"Use this method to create a history point when you want to save a value to identify the state and a title for the state.","pos":[0,120]},{"content":"When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack.","pos":[121,279]},{"content":"If the <ph id=\"ph1\">`title`</ph> parameter is <ph id=\"ph2\">`null`</ph>, the title of the Web page is used as the title of the state entry in the history stack.","pos":[280,403],"source":" If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack."}]},{"pos":[410,661],"content":"You can use the state data to re-create the page when any subsequent server navigation event is raised. For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).","nodes":[{"content":"You can use the state data to re-create the page when any subsequent server navigation event is raised.","pos":[0,103]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Managing Browser History Using Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)</ept>.","pos":[104,251],"source":" For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9)."}]}],"pos":[41988,42654],"yaml":true,"extradata":"MT"},{"content":"The key part of the key/value pair that identifies the state of the Web page.","nodes":[{"pos":[0,77],"content":"The key part of the key/value pair that identifies the state of the Web page.","nodes":[{"content":"The key part of the key/value pair that identifies the state of the Web page.","pos":[0,77]}]}],"pos":[42822,42900],"yaml":true},{"content":"The value part of the key/value pair that identifies the state of the Web page.","nodes":[{"pos":[0,79],"content":"The value part of the key/value pair that identifies the state of the Web page.","nodes":[{"content":"The value part of the key/value pair that identifies the state of the Web page.","pos":[0,79]}]}],"pos":[42961,43041],"yaml":true},{"content":"The text that will be added to the browser's history stack as the title for this state.","nodes":[{"pos":[0,87],"content":"The text that will be added to the browser's history stack as the title for this state.","nodes":[{"content":"The text that will be added to the browser's history stack as the title for this state.","pos":[0,87]}]}],"pos":[43102,43190],"yaml":true},{"content":"Gets the Ajax framework assembly that components on the page use.","nodes":[{"pos":[0,65],"content":"Gets the Ajax framework assembly that components on the page use.","nodes":[{"content":"Gets the Ajax framework assembly that components on the page use.","pos":[0,65]}]}],"pos":[44205,44271],"yaml":true},{"content":"The Ajax framework assembly.","nodes":[{"pos":[0,28],"content":"The Ajax framework assembly.","nodes":[{"content":"The Ajax framework assembly.","pos":[0,28]}]}],"pos":[44494,44523],"yaml":true},{"content":"Gets or sets a value that specifies how client scripts of the [!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)] client library will be included on the client.","nodes":[{"pos":[0,172],"content":"Gets or sets a value that specifies how client scripts of the <ph id=\"ph1\">[!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)]</ph> client library will be included on the client.","source":"Gets or sets a value that specifies how client scripts of the [!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)] client library will be included on the client."}],"pos":[45585,45758],"yaml":true},{"content":"Use the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to enable all [!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)] script files, to disable all [!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)] script files, or to explicitly include individual script files.","nodes":[{"pos":[0,307],"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A&gt;</ph> property to enable all <ph id=\"ph2\">[!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)]</ph> script files, to disable all <ph id=\"ph3\">[!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)]</ph> script files, or to explicitly include individual script files.","source":"Use the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to enable all [!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)] script files, to disable all [!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)] script files, or to explicitly include individual script files."}],"pos":[45769,46077],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Web.UI.AjaxFrameworkMode\"></xref> enumeration value.","nodes":[{"pos":[0,74],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AjaxFrameworkMode\"&gt;&lt;/xref&gt;</ph> enumeration value.","source":"An <xref href=\"System.Web.UI.AjaxFrameworkMode\"></xref> enumeration value."}],"pos":[46877,46952],"yaml":true},{"content":"Gets or sets a value that determines whether the custom errors section of the Web.config file is used during an error in an asynchronous postback.","nodes":[{"pos":[0,146],"content":"Gets or sets a value that determines whether the custom errors section of the Web.config file is used during an error in an asynchronous postback.","nodes":[{"content":"Gets or sets a value that determines whether the custom errors section of the Web.config file is used during an error in an asynchronous postback.","pos":[0,146]}]}],"pos":[48010,48157],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","nodes":[{"pos":[0,400],"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","pos":[0,400],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackError&gt;</ph> event is raised when there is a page error during asynchronous postbacks.","pos":[0,131],"source":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks."},{"content":"How errors on the server are sent to the client depends on the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A&gt;</ph> property, the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A&gt;</ph> property, and the custom errors section of the Web.config file.","pos":[132,400],"source":" How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file."}]}]}],"pos":[48168,48569],"yaml":true,"extradata":"MT"},{"content":"`true` if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,168],"content":"`true` if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,145],"source":"`true` if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[146,168],"source":" The default is `true`."}]}],"pos":[48702,48873],"yaml":true},{"content":"Occurs when there is a page error during an asynchronous postback.","nodes":[{"pos":[0,66],"content":"Occurs when there is a page error during an asynchronous postback.","nodes":[{"content":"Occurs when there is a page error during an asynchronous postback.","pos":[0,66]}]}],"pos":[49894,49961],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","nodes":[{"pos":[0,400],"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","pos":[0,400],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackError&gt;</ph> event is raised when there is a page error during asynchronous postbacks.","pos":[0,131],"source":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks."},{"content":"How errors on the server are sent to the client depends on the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A&gt;</ph> property, the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A&gt;</ph> property, and the custom errors section of the Web.config file.","pos":[132,400],"source":" How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file."}]}]}],"pos":[49972,50373],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the error message that is sent to the client when an unhandled server exception occurs during an asynchronous postback.","nodes":[{"pos":[0,132],"content":"Gets or sets the error message that is sent to the client when an unhandled server exception occurs during an asynchronous postback.","nodes":[{"content":"Gets or sets the error message that is sent to the client when an unhandled server exception occurs during an asynchronous postback.","pos":[0,132]}]}],"pos":[52408,52541],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","nodes":[{"pos":[0,400],"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","pos":[0,400],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackError&gt;</ph> event is raised when there is a page error during asynchronous postbacks.","pos":[0,131],"source":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks."},{"content":"How errors on the server are sent to the client depends on the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A&gt;</ph> property, the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A&gt;</ph> property, and the custom errors section of the Web.config file.","pos":[132,400],"source":" How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file."}]}]}],"pos":[52552,52953],"yaml":true,"extradata":"MT"},{"content":"The error message. The default is an empty string (\"\").","nodes":[{"pos":[0,55],"content":"The error message. The default is an empty string (\"\").","nodes":[{"content":"The error message. The default is an empty string (\"\").","pos":[0,55],"nodes":[{"content":"The error message.","pos":[0,18]},{"content":"The default is an empty string (\"\").","pos":[19,55]}]}]}],"pos":[53902,53958],"yaml":true},{"content":"Gets the unique ID of the control that caused the asynchronous postback.","nodes":[{"pos":[0,72],"content":"Gets the unique ID of the control that caused the asynchronous postback.","nodes":[{"content":"Gets the unique ID of the control that caused the asynchronous postback.","pos":[0,72]}]}],"pos":[55042,55115],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A> property contains the value of the control ID that caused the asynchronous postback, which can be one of the following:  \n  \n-   A postback from a control that is inside an <xref:System.Web.UI.UpdatePanel> control whose <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` (the default).  \n  \n-   A postback from a control that is a trigger for an <xref:System.Web.UI.UpdatePanel> control.  \n  \n-   A postback from a control that is registered by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control.","nodes":[{"pos":[0,190],"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A> property contains the value of the control ID that caused the asynchronous postback, which can be one of the following:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A&gt;</ph> property contains the value of the control ID that caused the asynchronous postback, which can be one of the following:","pos":[0,190],"source":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A> property contains the value of the control ID that caused the asynchronous postback, which can be one of the following:"}]},{"pos":[200,386],"content":"A postback from a control that is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control whose <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A&gt;</ph> property is set to <ph id=\"ph3\">`true`</ph> (the default).","source":"A postback from a control that is inside an <xref:System.Web.UI.UpdatePanel> control whose <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` (the default)."},{"pos":[396,488],"content":"A postback from a control that is a trigger for an <xref:System.Web.UI.UpdatePanel> control.","nodes":[{"content":"A postback from a control that is a trigger for an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,92],"source":"A postback from a control that is a trigger for an <xref:System.Web.UI.UpdatePanel> control."}]},{"pos":[498,682],"content":"A postback from a control that is registered by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control.","nodes":[{"content":"A postback from a control that is registered by calling the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[0,184],"source":"A postback from a control that is registered by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control."}]}],"pos":[55126,55817],"yaml":true,"extradata":"MT"},{"content":"The unique ID of a control, if the control has an ID; otherwise, an empty string (\"\").","nodes":[{"pos":[0,86],"content":"The unique ID of a control, if the control has an ID; otherwise, an empty string (\"\").","nodes":[{"content":"The unique ID of a control, if the control has an ID; otherwise, an empty string (\"\").","pos":[0,86]}]}],"pos":[56006,56093],"yaml":true},{"content":"Gets or sets a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received.","nodes":[{"pos":[0,124],"content":"Gets or sets a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received.","nodes":[{"content":"Gets or sets a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received.","pos":[0,124]}]}],"pos":[57180,57305],"yaml":true},{"content":"An integer that represents the time-out in seconds. The default value is 90 seconds.","nodes":[{"pos":[0,84],"content":"An integer that represents the time-out in seconds. The default value is 90 seconds.","nodes":[{"content":"An integer that represents the time-out in seconds. The default value is 90 seconds.","pos":[0,84],"nodes":[{"content":"An integer that represents the time-out in seconds.","pos":[0,51]},{"content":"The default value is 90 seconds.","pos":[52,84]}]}]}],"pos":[57430,57515],"yaml":true},{"content":"Gets the <xref href=\"System.Web.UI.AuthenticationServiceManager\"></xref> object that is associated with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,174],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AuthenticationServiceManager\"&gt;&lt;/xref&gt;</ph> object that is associated with the current <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the <xref href=\"System.Web.UI.AuthenticationServiceManager\"></xref> object that is associated with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[58552,58727],"yaml":true},{"content":"The <xref:System.Web.UI.AuthenticationServiceManager> object that is returned by this property represents the authentication service that is registered with the page. The authentication service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.  \n  \n You can use the ASP.NET authentication service or use a custom authentication service. You can add the custom service in markup by including an `AuthenticationService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.  \n  \n```  \n<asp:ScriptManager ID=\"SM1\" runat=\"server\">  \n  <AuthenticationService Path=\"MyAuthenticationService.asmx\" />  \n</asp:ScriptManager>  \n```  \n  \n You can also programmatically configure the <xref:System.Web.UI.AuthenticationServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","nodes":[{"pos":[0,327],"content":"The <xref:System.Web.UI.AuthenticationServiceManager> object that is returned by this property represents the authentication service that is registered with the page. The authentication service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.","nodes":[{"content":"The <xref:System.Web.UI.AuthenticationServiceManager> object that is returned by this property represents the authentication service that is registered with the page. The authentication service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.","pos":[0,327],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager&gt;</ph> object that is returned by this property represents the authentication service that is registered with the page.","pos":[0,166],"source":"The <xref:System.Web.UI.AuthenticationServiceManager> object that is returned by this property represents the authentication service that is registered with the page."},{"content":"The authentication service can be defined in the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control or in an associated <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[167,327],"source":" The authentication service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."}]}]},{"pos":[334,596],"content":"You can use the ASP.NET authentication service or use a custom authentication service. You can add the custom service in markup by including an `AuthenticationService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.","nodes":[{"content":"You can use the ASP.NET authentication service or use a custom authentication service.","pos":[0,86]},{"content":"You can add the custom service in markup by including an <ph id=\"ph1\">`AuthenticationService`</ph> element inside the <ph id=\"ph2\">`asp:ScriptManager`</ph> element on the page, as shown in the following example.","pos":[87,262],"source":" You can add the custom service in markup by including an `AuthenticationService` element inside the `asp:ScriptManager` element on the page, as shown in the following example."}]},{"pos":[753,1005],"content":"You can also programmatically configure the <xref:System.Web.UI.AuthenticationServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","nodes":[{"content":"You can also programmatically configure the <xref:System.Web.UI.AuthenticationServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","pos":[0,252],"nodes":[{"content":"You can also programmatically configure the <ph id=\"ph1\">&lt;xref:System.Web.UI.AuthenticationServiceManager&gt;</ph> object.","pos":[0,101],"source":"You can also programmatically configure the <xref:System.Web.UI.AuthenticationServiceManager> object."},{"content":"Services are registered with the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control during the page's <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> life-cycle stage.","pos":[102,252],"source":" Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage."}]}]}],"pos":[58738,59762],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.UI.AuthenticationServiceManager\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,149],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.AuthenticationServiceManager\"&gt;&lt;/xref&gt;</ph> object for the current <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Web.UI.AuthenticationServiceManager\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[60045,60195],"yaml":true},{"content":"Gets or sets the name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client.","nodes":[{"pos":[0,172],"content":"Gets or sets the name of the method that handles the <bpt id=\"p1\">[</bpt>Sys.Application.navigate<ept id=\"p1\">](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93)</ept> event on the client.","source":"Gets or sets the name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client."}],"pos":[61279,61452],"yaml":true},{"content":"The name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client.","nodes":[{"pos":[0,159],"content":"The name of the method that handles the <bpt id=\"p1\">[</bpt>Sys.Application.navigate<ept id=\"p1\">](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93)</ept> event on the client.","source":"The name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client."}],"pos":[61582,61742],"yaml":true},{"content":"Gets a reference to the composite script that supports the Web page.","nodes":[{"pos":[0,68],"content":"Gets a reference to the composite script that supports the Web page.","nodes":[{"content":"Gets a reference to the composite script that supports the Web page.","pos":[0,68]}]}],"pos":[62744,62813],"yaml":true},{"content":"For more information, see [Combining Client Scripts into a Composite Script](http://msdn.microsoft.com/en-us/d0f608d0-b4c8-4795-990b-ede68c1239b3).","nodes":[{"pos":[0,147],"content":"For more information, see <bpt id=\"p1\">[</bpt>Combining Client Scripts into a Composite Script<ept id=\"p1\">](http://msdn.microsoft.com/en-us/d0f608d0-b4c8-4795-990b-ede68c1239b3)</ept>.","source":"For more information, see [Combining Client Scripts into a Composite Script](http://msdn.microsoft.com/en-us/d0f608d0-b4c8-4795-990b-ede68c1239b3)."}],"pos":[62824,62972],"yaml":true,"extradata":"MT"},{"content":"A reference to the composite script.","nodes":[{"pos":[0,36],"content":"A reference to the composite script.","nodes":[{"content":"A reference to the composite script.","pos":[0,36]}]}],"pos":[63241,63278],"yaml":true},{"content":"Gets or sets a URL to a blank Web page.","nodes":[{"pos":[0,39],"content":"Gets or sets a URL to a blank Web page.","nodes":[{"content":"Gets or sets a URL to a blank Web page.","pos":[0,39]}]}],"pos":[64302,64342],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A> property supports Ajax browser history.","nodes":[{"pos":[0,94],"content":"The <xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A> property supports Ajax browser history.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A&gt;</ph> property supports Ajax browser history.","pos":[0,94],"source":"The <xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A> property supports Ajax browser history."}]}],"pos":[64353,64448],"yaml":true,"extradata":"MT"},{"content":"The URL to use if the target Web page is empty.","nodes":[{"pos":[0,47],"content":"The URL to use if the target Web page is empty.","nodes":[{"content":"The URL to use if the target Web page is empty.","pos":[0,47]}]}],"pos":[64577,64625],"yaml":true},{"content":"Determines whether the current page loads client script references from CDN (Content Delivery Network) paths.","nodes":[{"pos":[0,109],"content":"Determines whether the current page loads client script references from CDN (Content Delivery Network) paths.","nodes":[{"content":"Determines whether the current page loads client script references from CDN (Content Delivery Network) paths.","pos":[0,109]}]}],"pos":[65582,65692],"yaml":true},{"content":"Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> to `true` already.","nodes":[{"pos":[0,122],"content":"Do not set this property to <ph id=\"ph1\">`true`</ph> if you set <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A&gt;</ph> to <ph id=\"ph3\">`true`</ph> already.","source":"Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> to `true` already."}],"pos":[65703,65826],"yaml":true,"extradata":"MT"},{"content":"`true` if client script references are loaded from CDN paths, otherwise, `false`.","nodes":[{"pos":[0,81],"content":"<ph id=\"ph1\">`true`</ph> if client script references are loaded from CDN paths, otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if client script references are loaded from CDN paths, otherwise, `false`."}],"pos":[65943,66027],"yaml":true},{"content":"Enables local copy of a script to load in the event that the CDN (Content Delivery Network) is unavailable.","nodes":[{"pos":[0,107],"content":"Enables local copy of a script to load in the event that the CDN (Content Delivery Network) is unavailable.","nodes":[{"content":"Enables local copy of a script to load in the event that the CDN (Content Delivery Network) is unavailable.","pos":[0,107]}]}],"pos":[67029,67137],"yaml":true},{"content":"`true` if the fallback CDN value is enabled; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the fallback CDN value is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the fallback CDN value is enabled; otherwise, `false`."}],"pos":[67262,67329],"yaml":true},{"content":"Gets or sets a value that indicates whether the Web page supports history point management.","nodes":[{"pos":[0,91],"content":"Gets or sets a value that indicates whether the Web page supports history point management.","nodes":[{"content":"Gets or sets a value that indicates whether the Web page supports history point management.","pos":[0,91]}]}],"pos":[68315,68407],"yaml":true},{"content":"Use the <xref:System.Web.UI.ScriptManager.EnableHistory%2A> property to enable history management in a Web page.","nodes":[{"pos":[0,112],"content":"Use the <xref:System.Web.UI.ScriptManager.EnableHistory%2A> property to enable history management in a Web page.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EnableHistory%2A&gt;</ph> property to enable history management in a Web page.","pos":[0,112],"source":"Use the <xref:System.Web.UI.ScriptManager.EnableHistory%2A> property to enable history management in a Web page."}]}],"pos":[68418,68531],"yaml":true,"extradata":"MT"},{"content":"`true` if the Web page supports adding history points to the browser's history stack; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the Web page supports adding history points to the browser's history stack; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the Web page supports adding history points to the browser's history stack; otherwise, `false`."}],"pos":[68652,68760],"yaml":true},{"content":"Gets or sets a value that indicates whether public static page methods in an ASP.NET page can be called from client script.","nodes":[{"pos":[0,123],"content":"Gets or sets a value that indicates whether public static page methods in an ASP.NET page can be called from client script.","nodes":[{"content":"Gets or sets a value that indicates whether public static page methods in an ASP.NET page can be called from client script.","pos":[0,123]}]}],"pos":[69766,69890],"yaml":true},{"content":"You can add static page methods to an ASP.NET page and mark them as Web methods. You can then call these methods from script as if they were part of a Web service, but without creating a separate .asmx file. To create Web methods on a page, import the <xref:System.Web.Services> namespace and add a <xref:System.Web.Services.WebMethodAttribute> attribute to each static method that you want to expose. The methods must be marked public.  \n  \n For more information, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8).","nodes":[{"pos":[0,436],"content":"You can add static page methods to an ASP.NET page and mark them as Web methods. You can then call these methods from script as if they were part of a Web service, but without creating a separate .asmx file. To create Web methods on a page, import the <xref:System.Web.Services> namespace and add a <xref:System.Web.Services.WebMethodAttribute> attribute to each static method that you want to expose. The methods must be marked public.","nodes":[{"content":"You can add static page methods to an ASP.NET page and mark them as Web methods. You can then call these methods from script as if they were part of a Web service, but without creating a separate .asmx file. To create Web methods on a page, import the <xref:System.Web.Services> namespace and add a <xref:System.Web.Services.WebMethodAttribute> attribute to each static method that you want to expose. The methods must be marked public.","pos":[0,436],"nodes":[{"content":"You can add static page methods to an ASP.NET page and mark them as Web methods.","pos":[0,80]},{"content":"You can then call these methods from script as if they were part of a Web service, but without creating a separate .asmx file.","pos":[81,207]},{"content":"To create Web methods on a page, import the <ph id=\"ph1\">&lt;xref:System.Web.Services&gt;</ph> namespace and add a <ph id=\"ph2\">&lt;xref:System.Web.Services.WebMethodAttribute&gt;</ph> attribute to each static method that you want to expose.","pos":[208,401],"source":" To create Web methods on a page, import the <xref:System.Web.Services> namespace and add a <xref:System.Web.Services.WebMethodAttribute> attribute to each static method that you want to expose."},{"content":"The methods must be marked public.","pos":[402,436]}]}]},{"pos":[443,596],"content":"For more information, see <bpt id=\"p1\">[</bpt>Exposing Web Services to Client Script in ASP.NET AJAX<ept id=\"p1\">](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)</ept>.","source":"For more information, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8)."}],"pos":[69901,70502],"yaml":true,"extradata":"MT"},{"content":"`true` if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,141],"content":"`true` if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,117],"source":"`true` if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[118,141],"source":" The default is `false`."}]}],"pos":[70627,70771],"yaml":true},{"content":"Gets or sets a value that enables partial rendering of a page, which in turn enables you to update regions of the page individually by using <xref href=\"System.Web.UI.UpdatePanel\"></xref> controls.","nodes":[{"pos":[0,197],"content":"Gets or sets a value that enables partial rendering of a page, which in turn enables you to update regions of the page individually by using <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> controls.","source":"Gets or sets a value that enables partial rendering of a page, which in turn enables you to update regions of the page individually by using <xref href=\"System.Web.UI.UpdatePanel\"></xref> controls."}],"pos":[71811,72009],"yaml":true},{"content":"Even if the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is `true`, partial-page rendering might not occur. The browser might not support partial-page rendering, or the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is set to `false`.  \n  \n You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event. If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.","nodes":[{"pos":[0,284],"content":"Even if the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is `true`, partial-page rendering might not occur. The browser might not support partial-page rendering, or the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is set to `false`.","nodes":[{"content":"Even if the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, partial-page rendering might not occur.","pos":[0,132],"source":"Even if the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is `true`, partial-page rendering might not occur."},{"content":"The browser might not support partial-page rendering, or the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>.","pos":[133,284],"source":" The browser might not support partial-page rendering, or the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is set to `false`."}]},{"pos":[291,645],"content":"You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event. If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.","nodes":[{"content":"You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event. If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.","pos":[0,354],"nodes":[{"content":"You can override the value of the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A&gt;</ph> property at run time during or before the page's <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.Init&gt;</ph> event.","pos":[0,184],"source":"You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event."},{"content":"If you try to change this property after the page's <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.Init&gt;</ph> event has occurred, an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph> exception is thrown.","pos":[185,354],"source":" If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown."}]}]}],"pos":[72020,72670],"yaml":true,"extradata":"MT"},{"content":"`true` if partial rendering is enabled and full-page updates are suppressed; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,119],"content":"`true` if partial rendering is enabled and full-page updates are suppressed; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if partial rendering is enabled and full-page updates are suppressed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,96],"source":"`true` if partial rendering is enabled and full-page updates are suppressed; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[97,119],"source":" The default is `true`."}]}],"pos":[72800,72922],"yaml":true},{"content":"The <xref href=\"System.Web.UI.ScriptManager.EnablePartialRendering\"></xref> property is set after the page's <xref href=\"System.Web.UI.Control.Init\"></xref> event occurs.","nodes":[{"pos":[0,170],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.EnablePartialRendering\"&gt;&lt;/xref&gt;</ph> property is set after the page's <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.Control.Init\"&gt;&lt;/xref&gt;</ph> event occurs.","source":"The <xref href=\"System.Web.UI.ScriptManager.EnablePartialRendering\"></xref> property is set after the page's <xref href=\"System.Web.UI.Control.Init\"></xref> event occurs."}],"pos":[73110,73281],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.ScriptManager\"></xref> control renders script that supports parsing and formatting of culture-specific information.","nodes":[{"pos":[0,189],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control renders script that supports parsing and formatting of culture-specific information.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.ScriptManager\"></xref> control renders script that supports parsing and formatting of culture-specific information."}],"pos":[74263,74453],"yaml":true},{"content":"When the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property is set to `true`, globalized ECMAScript (JavaScript) functions such as the  method display culture-specific information. The culture can be set in the browser, in server code, or in the Web site's configuration file.","nodes":[{"pos":[0,298],"content":"When the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property is set to `true`, globalized ECMAScript (JavaScript) functions such as the  method display culture-specific information. The culture can be set in the browser, in server code, or in the Web site's configuration file.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, globalized ECMAScript (JavaScript) functions such as the  method display culture-specific information.","pos":[0,202],"source":"When the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property is set to `true`, globalized ECMAScript (JavaScript) functions such as the  method display culture-specific information."},{"content":"The culture can be set in the browser, in server code, or in the Web site's configuration file.","pos":[203,298]}]}],"pos":[74464,74763],"yaml":true,"extradata":"MT"},{"content":"`true` if culture-specific information can be displayed; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,106],"content":"`true` if culture-specific information can be displayed; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if culture-specific information can be displayed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,76],"source":"`true` if culture-specific information can be displayed; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[77,106],"source":" The default value is `false`."}]}],"pos":[74896,75005],"yaml":true},{"content":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.ScriptManager\"></xref> control renders localized versions of script files.","nodes":[{"pos":[0,148],"content":"Gets or sets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control renders localized versions of script files.","source":"Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.ScriptManager\"></xref> control renders localized versions of script files."}],"pos":[76065,76214],"yaml":true},{"content":"When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> object will retrieve script files for the current culture if they exist. For example, a page might specify a script file that is named CustomScript.js. If the culture is set to fr-CA, the <xref:System.Web.UI.ScriptManager> object will try to retrieve a script file that is named CustomScript.fr-CA.js.  \n  \n> [!NOTE]\n>  To prevent a script file from being rendered two times, the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property must not be modified during an asynchronous postback.","nodes":[{"pos":[0,439],"content":"When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> object will retrieve script files for the current culture if they exist. For example, a page might specify a script file that is named CustomScript.js. If the culture is set to fr-CA, the <xref:System.Web.UI.ScriptManager> object will try to retrieve a script file that is named CustomScript.fr-CA.js.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> object will retrieve script files for the current culture if they exist.","pos":[0,210],"source":"When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> object will retrieve script files for the current culture if they exist."},{"content":"For example, a page might specify a script file that is named CustomScript.js.","pos":[211,289]},{"content":"If the culture is set to fr-CA, the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> object will try to retrieve a script file that is named CustomScript.fr-CA.js.","pos":[290,439],"source":" If the culture is set to fr-CA, the <xref:System.Web.UI.ScriptManager> object will try to retrieve a script file that is named CustomScript.fr-CA.js."}]},{"pos":[447,643],"content":"[!NOTE]\n To prevent a script file from being rendered two times, the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property must not be modified during an asynchronous postback.","leadings":["","> "],"nodes":[{"content":"To prevent a script file from being rendered two times, the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A&gt;</ph> property must not be modified during an asynchronous postback.","pos":[9,194],"source":" To prevent a script file from being rendered two times, the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property must not be modified during an asynchronous postback."}]}],"pos":[76225,76874],"yaml":true,"extradata":"MT"},{"content":"`true` if localized script files will be rendered; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,99],"content":"`true` if localized script files will be rendered; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if localized script files will be rendered; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,70],"source":"`true` if localized script files will be rendered; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[71,99],"source":" The default value is `true`."}]}],"pos":[77006,77108],"yaml":true},{"content":"Gets or sets a value that indicates whether to encrypt the history state string.","nodes":[{"pos":[0,80],"content":"Gets or sets a value that indicates whether to encrypt the history state string.","nodes":[{"content":"Gets or sets a value that indicates whether to encrypt the history state string.","pos":[0,80]}]}],"pos":[78167,78248],"yaml":true},{"content":"> [!WARNING]\n>  This property should ***never*** be set to `false` on a production web site.","nodes":[{"pos":[2,92],"content":"[!WARNING]\n This property should ***never*** be set to `false` on a production web site.","leadings":["","> "],"nodes":[{"content":"This property should <bpt id=\"p1\">***</bpt>never<ept id=\"p1\">***</ept> be set to <ph id=\"ph1\">`false`</ph> on a production web site.","pos":[12,88],"source":" This property should ***never*** be set to `false` on a production web site."}]}],"pos":[78259,78364],"yaml":true,"extradata":"MT"},{"content":"`true` if the history state string should be encrypted; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,104],"content":"`true` if the history state string should be encrypted; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the history state string should be encrypted; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,75],"source":"`true` if the history state string should be encrypted; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[76,104],"source":" The default value is `true`."}]}],"pos":[78496,78603],"yaml":true},{"content":"Gets the <xref href=\"System.Web.UI.ScriptManager\"></xref> instance for a given <xref href=\"System.Web.UI.Page\"></xref> object.","nodes":[{"pos":[0,126],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance for a given <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the <xref href=\"System.Web.UI.ScriptManager\"></xref> instance for a given <xref href=\"System.Web.UI.Page\"></xref> object."}],"pos":[79654,79781],"yaml":true},{"content":"Use this static method to determine whether a <xref:System.Web.UI.ScriptManager> control is on a page, or to access the properties and methods of a <xref:System.Web.UI.ScriptManager> control when you do not know its ID.","nodes":[{"pos":[0,219],"content":"Use this static method to determine whether a <xref:System.Web.UI.ScriptManager> control is on a page, or to access the properties and methods of a <xref:System.Web.UI.ScriptManager> control when you do not know its ID.","nodes":[{"content":"Use this static method to determine whether a <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control is on a page, or to access the properties and methods of a <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control when you do not know its ID.","pos":[0,219],"source":"Use this static method to determine whether a <xref:System.Web.UI.ScriptManager> control is on a page, or to access the properties and methods of a <xref:System.Web.UI.ScriptManager> control when you do not know its ID."}]}],"pos":[79792,80012],"yaml":true,"extradata":"MT"},{"content":"The page instance to retrieve the <xref href=\"System.Web.UI.ScriptManager\"></xref> from.","nodes":[{"pos":[0,88],"content":"The page instance to retrieve the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> from.","source":"The page instance to retrieve the <xref href=\"System.Web.UI.ScriptManager\"></xref> from."}],"pos":[80196,80285],"yaml":true},{"content":"The current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance for the selected <xref href=\"System.Web.UI.Page\"></xref> object, or `null` if no instance is defined.","nodes":[{"pos":[0,171],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance for the selected <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object, or <ph id=\"ph3\">`null`</ph> if no instance is defined.","source":"The current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance for the selected <xref href=\"System.Web.UI.Page\"></xref> object, or `null` if no instance is defined."}],"pos":[80356,80528],"yaml":true},{"content":"<code>page</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;page&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>page</code> is `null`."}],"pos":[80696,80725],"yaml":true},{"content":"Retrieves a read-only collection of ECMAScript (JavaScript) array declarations that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.","nodes":[{"pos":[0,167],"content":"Retrieves a read-only collection of ECMAScript (JavaScript) array declarations that were previously registered with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves a read-only collection of ECMAScript (JavaScript) array declarations that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object."}],"pos":[81724,81892],"yaml":true},{"content":"A generic collection that contains the array declarations.","nodes":[{"pos":[0,58],"content":"A generic collection that contains the array declarations.","nodes":[{"content":"A generic collection that contains the array declarations.","pos":[0,58]}]}],"pos":[82203,82262],"yaml":true},{"content":"Retrieves a read-only collection of client script blocks that were previously registered with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control.","nodes":[{"pos":[0,155],"content":"Retrieves a read-only collection of client script blocks that were previously registered with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control.","source":"Retrieves a read-only collection of client script blocks that were previously registered with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control."}],"pos":[83356,83512],"yaml":true},{"content":"Client script blocks are registered with the <xref:System.Web.UI.ScriptManager> control for use with a control that is inside an <xref:System.Web.UI.UpdatePanel> control.","nodes":[{"pos":[0,170],"content":"Client script blocks are registered with the <xref:System.Web.UI.ScriptManager> control for use with a control that is inside an <xref:System.Web.UI.UpdatePanel> control.","nodes":[{"content":"Client script blocks are registered with the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control for use with a control that is inside an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,170],"source":"Client script blocks are registered with the <xref:System.Web.UI.ScriptManager> control for use with a control that is inside an <xref:System.Web.UI.UpdatePanel> control."}]}],"pos":[83523,83694],"yaml":true,"extradata":"MT"},{"content":"A generic collection that contains client script blocks.","nodes":[{"pos":[0,56],"content":"A generic collection that contains client script blocks.","nodes":[{"content":"A generic collection that contains client script blocks.","pos":[0,56]}]}],"pos":[83986,84043],"yaml":true},{"content":"Retrieves a read-only collection of `dispose` scripts that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.","nodes":[{"pos":[0,142],"content":"Retrieves a read-only collection of <ph id=\"ph1\">`dispose`</ph> scripts that were previously registered with the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves a read-only collection of `dispose` scripts that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object."}],"pos":[85114,85257],"yaml":true},{"content":"A `dispose` script executes when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">`dispose`</ph> script executes when the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is updated or deleted.","source":"A `dispose` script executes when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted."}],"pos":[85268,85369],"yaml":true,"extradata":"MT"},{"content":"A generic collection that contains `dispose` scripts.","nodes":[{"pos":[0,53],"content":"A generic collection that contains <ph id=\"ph1\">`dispose`</ph> scripts.","source":"A generic collection that contains `dispose` scripts."}],"pos":[85671,85725],"yaml":true},{"content":"Retrieves a read-only collection of custom (expando) attributes that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.","nodes":[{"pos":[0,152],"content":"Retrieves a read-only collection of custom (expando) attributes that were previously registered with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves a read-only collection of custom (expando) attributes that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object."}],"pos":[86810,86963],"yaml":true},{"content":"A custom attribute is a name/value pair that can be read and set by client script.","nodes":[{"pos":[0,82],"content":"A custom attribute is a name/value pair that can be read and set by client script.","nodes":[{"content":"A custom attribute is a name/value pair that can be read and set by client script.","pos":[0,82]}]}],"pos":[86974,87057],"yaml":true,"extradata":"MT"},{"content":"A generic collection that contains custom attributes.","nodes":[{"pos":[0,53],"content":"A generic collection that contains custom attributes.","nodes":[{"content":"A generic collection that contains custom attributes.","pos":[0,53]}]}],"pos":[87581,87635],"yaml":true},{"content":"Retrieves a read-only collection of hidden fields that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.","nodes":[{"pos":[0,138],"content":"Retrieves a read-only collection of hidden fields that were previously registered with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves a read-only collection of hidden fields that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object."}],"pos":[88693,88832],"yaml":true},{"content":"A generic collection that contains hidden fields.","nodes":[{"pos":[0,49],"content":"A generic collection that contains hidden fields.","nodes":[{"content":"A generic collection that contains hidden fields.","pos":[0,49]}]}],"pos":[89128,89178],"yaml":true},{"content":"Retrieves a read-only collection of `onsubmit` statements that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.","nodes":[{"pos":[0,146],"content":"Retrieves a read-only collection of <ph id=\"ph1\">`onsubmit`</ph> statements that were previously registered with the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves a read-only collection of `onsubmit` statements that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object."}],"pos":[90267,90414],"yaml":true},{"content":"An `onsubmit` statement is ECMAScript (JavaScript) that is executed when the form is submitted.","nodes":[{"pos":[0,95],"content":"An <ph id=\"ph1\">`onsubmit`</ph> statement is ECMAScript (JavaScript) that is executed when the form is submitted.","source":"An `onsubmit` statement is ECMAScript (JavaScript) that is executed when the form is submitted."}],"pos":[90425,90521],"yaml":true,"extradata":"MT"},{"content":"A generic collection that contains `onsubmit` statements.","nodes":[{"pos":[0,57],"content":"A generic collection that contains <ph id=\"ph1\">`onsubmit`</ph> statements.","source":"A generic collection that contains `onsubmit` statements."}],"pos":[90972,91030],"yaml":true},{"content":"Retrieves a read-only collection of startup scripts that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.","nodes":[{"pos":[0,140],"content":"Retrieves a read-only collection of startup scripts that were previously registered with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object.","source":"Retrieves a read-only collection of startup scripts that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object."}],"pos":[92101,92242],"yaml":true},{"content":"A startup script is client script that is associated with a control that executes when the control is started.","nodes":[{"pos":[0,110],"content":"A startup script is client script that is associated with a control that executes when the control is started.","nodes":[{"content":"A startup script is client script that is associated with a control that executes when the control is started.","pos":[0,110]}]}],"pos":[92253,92364],"yaml":true,"extradata":"MT"},{"content":"A generic collection that contains startup scripts.","nodes":[{"pos":[0,51],"content":"A generic collection that contains startup scripts.","nodes":[{"content":"A generic collection that contains startup scripts.","pos":[0,51]}]}],"pos":[92877,92929],"yaml":true},{"content":"Retrieves a string that contains key/value pairs that represent the state of the Web page.","nodes":[{"pos":[0,90],"content":"Retrieves a string that contains key/value pairs that represent the state of the Web page.","nodes":[{"content":"Retrieves a string that contains key/value pairs that represent the state of the Web page.","pos":[0,90]}]}],"pos":[93918,94009],"yaml":true},{"content":"A string containing the key/value pairs that represent the state of the Web page.","nodes":[{"pos":[0,81],"content":"A string containing the key/value pairs that represent the state of the Web page.","nodes":[{"content":"A string containing the key/value pairs that represent the state of the Web page.","pos":[0,81]}]}],"pos":[94141,94223],"yaml":true},{"content":"Gets a value that indicates whether the debug versions of client script libraries will be rendered.","nodes":[{"pos":[0,99],"content":"Gets a value that indicates whether the debug versions of client script libraries will be rendered.","nodes":[{"content":"Gets a value that indicates whether the debug versions of client script libraries will be rendered.","pos":[0,99]}]}],"pos":[95219,95319],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> property returns `false` when any one of the following conditions is true:  \n  \n-   In the  element of the configuration file, the `retail` attribute is set to `true`. This overrides all other settings.  \n  \n-   The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Auto` or to `Inherit`, and debugging is not enabled in the `compilation` section of the application-root Web.config file.  \n  \n-   The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Release`.  \n  \n    > [!NOTE]\n    >  The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications. The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.  \n  \n For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).","nodes":[{"pos":[0,135],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A&gt;</ph> property returns <ph id=\"ph2\">`false`</ph> when any one of the following conditions is true:","source":"The <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> property returns `false` when any one of the following conditions is true:"},{"pos":[145,263],"content":"In the  element of the configuration file, the `retail` attribute is set to `true`. This overrides all other settings.","nodes":[{"content":"In the  element of the configuration file, the <ph id=\"ph1\">`retail`</ph> attribute is set to <ph id=\"ph2\">`true`</ph>.","pos":[0,83],"source":"In the  element of the configuration file, the `retail` attribute is set to `true`."},{"content":"This overrides all other settings.","pos":[84,118]}]},{"pos":[273,467],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.ScriptMode%2A&gt;</ph> property is set to <ph id=\"ph2\">`Auto`</ph> or to <ph id=\"ph3\">`Inherit`</ph>, and debugging is not enabled in the <ph id=\"ph4\">`compilation`</ph> section of the application-root Web.config file.","source":"The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Auto` or to `Inherit`, and debugging is not enabled in the `compilation` section of the application-root Web.config file."},{"pos":[477,559],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.ScriptMode%2A&gt;</ph> property is set to <ph id=\"ph2\">`Release`</ph>.","source":"The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Release`."},{"pos":[571,947],"content":"[!NOTE]\nThe `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications. The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.","leadings":["","    >  "],"nodes":[{"content":"The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications. The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.","pos":[8,369],"nodes":[{"content":"The <ph id=\"ph1\">`debug`</ph> attribute of the  directive does not affect Ajax-enabled ASP.NET applications.","pos":[0,90],"source":"The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control uses only the settings in the Web.config file and in its <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.ScriptMode%2A&gt;</ph> properties to determine whether to render debug scripts.","pos":[91,361],"source":" The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts."}]}]},{"pos":[954,1103],"content":"For more information, see <bpt id=\"p1\">[</bpt>Debugging and Tracing Ajax Applications Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)</ept>.","source":"For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)."}],"pos":[95330,96447],"yaml":true,"extradata":"MT"},{"content":"`true` if the current request is executing in debug mode; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> if the current request is executing in debug mode; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current request is executing in debug mode; otherwise, `false`."}],"pos":[96625,96705],"yaml":true},{"content":"Gets a value that indicates whether the current postback is being executed in partial-rendering mode.","nodes":[{"pos":[0,101],"content":"Gets a value that indicates whether the current postback is being executed in partial-rendering mode.","nodes":[{"content":"Gets a value that indicates whether the current postback is being executed in partial-rendering mode.","pos":[0,101]}]}],"pos":[97764,97866],"yaml":true},{"content":"Use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property in combination with the <xref:System.Web.UI.Page.IsPostBack%2A> property to distinguish between the initial page load, a partial-page update, and a full-page update in <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Page.InitComplete>, or <xref:System.Web.UI.Control.PreRender> events.","nodes":[{"pos":[0,365],"content":"Use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property in combination with the <xref:System.Web.UI.Page.IsPostBack%2A> property to distinguish between the initial page load, a partial-page update, and a full-page update in <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Page.InitComplete>, or <xref:System.Web.UI.Control.PreRender> events.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A&gt;</ph> property in combination with the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.IsPostBack%2A&gt;</ph> property to distinguish between the initial page load, a partial-page update, and a full-page update in <ph id=\"ph3\">&lt;xref:System.Web.UI.Control.Load&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Web.UI.Page.InitComplete&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> events.","pos":[0,365],"source":"Use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property in combination with the <xref:System.Web.UI.Page.IsPostBack%2A> property to distinguish between the initial page load, a partial-page update, and a full-page update in <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Page.InitComplete>, or <xref:System.Web.UI.Control.PreRender> events."}]}],"pos":[97877,98243],"yaml":true,"extradata":"MT"},{"content":"`true` if the current postback is executing in partial-rendering mode; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the current postback is executing in partial-rendering mode; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current postback is executing in partial-rendering mode; otherwise, `false`."}],"pos":[98420,98513],"yaml":true},{"content":"Gets a value that indicates whether a <xref href=\"System.Web.UI.ScriptManager.Navigate\"></xref> event is currently being handled.","nodes":[{"pos":[0,129],"content":"Gets a value that indicates whether a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.Navigate\"&gt;&lt;/xref&gt;</ph> event is currently being handled.","source":"Gets a value that indicates whether a <xref href=\"System.Web.UI.ScriptManager.Navigate\"></xref> event is currently being handled."}],"pos":[99541,99671],"yaml":true},{"content":"Use the <xref:System.Web.UI.ScriptManager.IsNavigating%2A> property to determine whether the <xref:System.Web.UI.ScriptManager.Navigate> event has been raised.","nodes":[{"pos":[0,159],"content":"Use the <xref:System.Web.UI.ScriptManager.IsNavigating%2A> property to determine whether the <xref:System.Web.UI.ScriptManager.Navigate> event has been raised.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.IsNavigating%2A&gt;</ph> property to determine whether the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.Navigate&gt;</ph> event has been raised.","pos":[0,159],"source":"Use the <xref:System.Web.UI.ScriptManager.IsNavigating%2A> property to determine whether the <xref:System.Web.UI.ScriptManager.Navigate> event has been raised."}]}],"pos":[99682,99842],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Web.UI.ScriptManager.Navigate\"></xref> is being handled; otherwise, `false`.","nodes":[{"pos":[0,109],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager.Navigate\"&gt;&lt;/xref&gt;</ph> is being handled; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Web.UI.ScriptManager.Navigate\"></xref> is being handled; otherwise, `false`."}],"pos":[100014,100126],"yaml":true},{"content":"Reads form data that is posted from the browser to the server, and determines the source of the asynchronous postback.","nodes":[{"pos":[0,118],"content":"Reads form data that is posted from the browser to the server, and determines the source of the asynchronous postback.","nodes":[{"content":"Reads form data that is posted from the browser to the server, and determines the source of the asynchronous postback.","pos":[0,118]}]}],"pos":[101432,101551],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.LoadPostData%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control.","nodes":[{"pos":[0,180],"content":"The <xref:System.Web.UI.ScriptManager.LoadPostData%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.LoadPostData%2A&gt;</ph> method is primarily used by control developers to extend the functionality of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[0,180],"source":"The <xref:System.Web.UI.ScriptManager.LoadPostData%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control."}]}],"pos":[101562,101743],"yaml":true,"extradata":"MT"},{"content":"The key identifier for the control.","nodes":[{"pos":[0,35],"content":"The key identifier for the control.","nodes":[{"content":"The key identifier for the control.","pos":[0,35]}]}],"pos":[101974,102010],"yaml":true},{"content":"The collection of all the incoming post data.","nodes":[{"pos":[0,45],"content":"The collection of all the incoming post data.","nodes":[{"content":"The collection of all the incoming post data.","pos":[0,45]}]}],"pos":[102117,102163],"yaml":true},{"content":"`true` if the <xref href=\"System.Web.UI.ScriptManager\"></xref> control's state has changed as a result of a postback; otherwise, `false`.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control's state has changed as a result of a postback; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Web.UI.ScriptManager\"></xref> control's state has changed as a result of a postback; otherwise, `false`."}],"pos":[102221,102363],"yaml":true},{"content":"Gets or sets a value that indicates whether scripts are loaded before or after markup for the page UI is loaded.","nodes":[{"pos":[0,112],"content":"Gets or sets a value that indicates whether scripts are loaded before or after markup for the page UI is loaded.","nodes":[{"content":"Gets or sets a value that indicates whether scripts are loaded before or after markup for the page UI is loaded.","pos":[0,112]}]}],"pos":[103363,103476],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property determines how scripts in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection are loaded relative to the markup for the page UI.  \n  \n When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `true`, a `script` element is rendered before the page's UI markup is loaded. In this scenario, if UI elements are defined in scripts, the UI will be fully functional when it loads. However, if the script accesses UI elements in the markup for which instances have not yet been created, an error might occur. To make sure that UI elements are loaded before you access them, handle the  event of the  class.  \n  \n When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `false`, a `script` element is rendered after the page's UI markup is rendered. In this scenario, the UI loads more quickly, but it might not be fully functional if scripts that define additional UI elements have not finished loading.  \n  \n Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.EnableCdn%2A> to `true` already.","nodes":[{"pos":[0,208],"content":"The <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property determines how scripts in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection are loaded relative to the markup for the page UI.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A&gt;</ph> property determines how scripts in the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.Scripts%2A&gt;</ph> collection are loaded relative to the markup for the page UI.","pos":[0,208],"source":"The <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property determines how scripts in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection are loaded relative to the markup for the page UI."}]},{"pos":[215,700],"content":"When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `true`, a `script` element is rendered before the page's UI markup is loaded. In this scenario, if UI elements are defined in scripts, the UI will be fully functional when it loads. However, if the script accesses UI elements in the markup for which instances have not yet been created, an error might occur. To make sure that UI elements are loaded before you access them, handle the  event of the  class.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, a <ph id=\"ph3\">`script`</ph> element is rendered before the page's UI markup is loaded.","pos":[0,156],"source":"When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `true`, a `script` element is rendered before the page's UI markup is loaded."},{"content":"In this scenario, if UI elements are defined in scripts, the UI will be fully functional when it loads.","pos":[157,260]},{"content":"However, if the script accesses UI elements in the markup for which instances have not yet been created, an error might occur.","pos":[261,387]},{"content":"To make sure that UI elements are loaded before you access them, handle the  event of the  class.","pos":[388,485]}]},{"pos":[707,1020],"content":"When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `false`, a `script` element is rendered after the page's UI markup is rendered. In this scenario, the UI loads more quickly, but it might not be fully functional if scripts that define additional UI elements have not finished loading.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, a <ph id=\"ph3\">`script`</ph> element is rendered after the page's UI markup is rendered.","pos":[0,158],"source":"When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `false`, a `script` element is rendered after the page's UI markup is rendered."},{"content":"In this scenario, the UI loads more quickly, but it might not be fully functional if scripts that define additional UI elements have not finished loading.","pos":[159,313]}]},{"pos":[1027,1139],"content":"Do not set this property to <ph id=\"ph1\">`true`</ph> if you set <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.EnableCdn%2A&gt;</ph> to <ph id=\"ph3\">`true`</ph> already.","source":"Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.EnableCdn%2A> to `true` already."}],"pos":[103487,104635],"yaml":true,"extradata":"MT"},{"content":"`true` if scripts are loaded before markup for the UI is loaded; `false` if scripts are loaded after markup for the UI is loaded. The default is `true`.","nodes":[{"pos":[0,152],"content":"`true` if scripts are loaded before markup for the UI is loaded; `false` if scripts are loaded after markup for the UI is loaded. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if scripts are loaded before markup for the UI is loaded; <ph id=\"ph2\">`false`</ph> if scripts are loaded after markup for the UI is loaded.","pos":[0,129],"source":"`true` if scripts are loaded before markup for the UI is loaded; `false` if scripts are loaded after markup for the UI is loaded."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[130,152],"source":" The default is `true`."}]}],"pos":[104762,104917],"yaml":true},{"content":"Occurs when the user clicks the browser's **Back** or **Forward** button.","nodes":[{"pos":[0,73],"content":"Occurs when the user clicks the browser's <bpt id=\"p1\">**</bpt>Back<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Forward<ept id=\"p2\">**</ept> button.","source":"Occurs when the user clicks the browser's **Back** or **Forward** button."}],"pos":[105872,105946],"yaml":true},{"content":"When a user clicks the browser's **Back** button, the browser navigates through previously-viewed URLs, which can include URLs that contain history-point state data. If client code in the Web page detects that the URL contains history state data, it makes a request to the server page. This acts as a postback event, and the <xref:System.Web.UI.ScriptManagerProxy> server control raises the `Navigate` event. You can handle this event and re-create the page as required in the Web application by using the state data that is passed with the event.","nodes":[{"pos":[0,547],"content":"When a user clicks the browser's **Back** button, the browser navigates through previously-viewed URLs, which can include URLs that contain history-point state data. If client code in the Web page detects that the URL contains history state data, it makes a request to the server page. This acts as a postback event, and the <xref:System.Web.UI.ScriptManagerProxy> server control raises the `Navigate` event. You can handle this event and re-create the page as required in the Web application by using the state data that is passed with the event.","nodes":[{"content":"When a user clicks the browser's <bpt id=\"p1\">**</bpt>Back<ept id=\"p1\">**</ept> button, the browser navigates through previously-viewed URLs, which can include URLs that contain history-point state data.","pos":[0,165],"source":"When a user clicks the browser's **Back** button, the browser navigates through previously-viewed URLs, which can include URLs that contain history-point state data."},{"content":"If client code in the Web page detects that the URL contains history state data, it makes a request to the server page.","pos":[166,285]},{"content":"This acts as a postback event, and the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> server control raises the <ph id=\"ph2\">`Navigate`</ph> event.","pos":[286,408],"source":" This acts as a postback event, and the <xref:System.Web.UI.ScriptManagerProxy> server control raises the `Navigate` event."},{"content":"You can handle this event and re-create the page as required in the Web application by using the state data that is passed with the event.","pos":[409,547]}]}],"pos":[105957,106505],"yaml":true,"extradata":"MT"},{"content":"Raises the <xref href=\"System.Web.UI.ScriptManager.AsyncPostBackError\"></xref> event.","nodes":[{"pos":[0,85],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.AsyncPostBackError\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Web.UI.ScriptManager.AsyncPostBackError\"></xref> event."}],"pos":[107877,107963],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","nodes":[{"pos":[0,400],"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.","pos":[0,400],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackError&gt;</ph> event is raised when there is a page error during asynchronous postbacks.","pos":[0,131],"source":"The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks."},{"content":"How errors on the server are sent to the client depends on the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A&gt;</ph> property, the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A&gt;</ph> property, and the custom errors section of the Web.config file.","pos":[132,400],"source":" How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file."}]}]}],"pos":[107974,108375],"yaml":true,"extradata":"MT"},{"content":"The error event data.","nodes":[{"pos":[0,21],"content":"The error event data.","nodes":[{"content":"The error event data.","pos":[0,21]}]}],"pos":[109405,109427],"yaml":true},{"content":"Raises the <xref href=\"System.Web.UI.Control.Init\"></xref> event and makes sure that only one <xref href=\"System.Web.UI.ScriptManager\"></xref> control exists on the page.","nodes":[{"pos":[0,170],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Control.Init\"&gt;&lt;/xref&gt;</ph> event and makes sure that only one <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control exists on the page.","source":"Raises the <xref href=\"System.Web.UI.Control.Init\"></xref> event and makes sure that only one <xref href=\"System.Web.UI.ScriptManager\"></xref> control exists on the page."}],"pos":[110442,110613],"yaml":true},{"content":"The event data.","nodes":[{"pos":[0,15],"content":"The event data.","nodes":[{"content":"The event data.","pos":[0,15]}]}],"pos":[110758,110774],"yaml":true},{"content":"More than one instance of <xref href=\"System.Web.UI.ScriptManager\"></xref> exists on the page.","nodes":[{"pos":[0,94],"content":"More than one instance of <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> exists on the page.","source":"More than one instance of <xref href=\"System.Web.UI.ScriptManager\"></xref> exists on the page."}],"pos":[110946,111041],"yaml":true},{"content":"Raises the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event, and registers script files and services for partial-page updates.","nodes":[{"pos":[0,136],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Control.PreRender\"&gt;&lt;/xref&gt;</ph> event, and registers script files and services for partial-page updates.","source":"Raises the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event, and registers script files and services for partial-page updates."}],"pos":[112007,112144],"yaml":true},{"content":"For information about the DOM, see the [Document Object Model (DOM) Level 1 Specification](http://go.microsoft.com/fwlink/?LinkId=73305) on the World Wide Web Consortium (W3C) Web site.","nodes":[{"pos":[0,185],"content":"For information about the DOM, see the <bpt id=\"p1\">[</bpt>Document Object Model (DOM) Level 1 Specification<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=73305)</ept> on the World Wide Web Consortium (W3C) Web site.","source":"For information about the DOM, see the [Document Object Model (DOM) Level 1 Specification](http://go.microsoft.com/fwlink/?LinkId=73305) on the World Wide Web Consortium (W3C) Web site."}],"pos":[112155,112341],"yaml":true,"extradata":"MT"},{"content":"The event data.","nodes":[{"pos":[0,15],"content":"The event data.","nodes":[{"content":"The event data.","pos":[0,15]}]}],"pos":[112491,112507],"yaml":true},{"content":"The browser that made the partial-page request does not support at least DOM Level 1.0.","nodes":[{"pos":[0,87],"content":"The browser that made the partial-page request does not support at least DOM Level 1.0.","nodes":[{"content":"The browser that made the partial-page request does not support at least DOM Level 1.0.","pos":[0,87]}]}],"pos":[112684,112772],"yaml":true},{"content":"Raises the <xref href=\"System.Web.UI.ScriptManager.ResolveCompositeScriptReference\"></xref> event.","nodes":[{"pos":[0,98],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.ResolveCompositeScriptReference\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Web.UI.ScriptManager.ResolveCompositeScriptReference\"></xref> event."}],"pos":[114035,114134],"yaml":true},{"content":"An object that represents the composite script reference.","nodes":[{"pos":[0,57],"content":"An object that represents the composite script reference.","nodes":[{"content":"An object that represents the composite script reference.","pos":[0,57]}]}],"pos":[114374,114432],"yaml":true},{"content":"Raises the <xref href=\"System.Web.UI.ScriptManager.ResolveScriptReference\"></xref> event for each script reference that is managed by the <xref href=\"System.Web.UI.ScriptManager\"></xref> control.","nodes":[{"pos":[0,195],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.ResolveScriptReference\"&gt;&lt;/xref&gt;</ph> event for each script reference that is managed by the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control.","source":"Raises the <xref href=\"System.Web.UI.ScriptManager.ResolveScriptReference\"></xref> event for each script reference that is managed by the <xref href=\"System.Web.UI.ScriptManager\"></xref> control."}],"pos":[115679,115875],"yaml":true},{"content":"This method is called by the <xref:System.Web.UI.ScriptManager.OnPreRender%2A> event handler, one time for each <xref:System.Web.UI.ScriptReference> in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.  \n  \n The <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event is raised after duplicate script entries have been resolved.  \n  \n Override this method to affect the behaviors of individual script blocks on postback or during partial-page updates.","nodes":[{"pos":[0,213],"content":"This method is called by the <xref:System.Web.UI.ScriptManager.OnPreRender%2A> event handler, one time for each <xref:System.Web.UI.ScriptReference> in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.","nodes":[{"content":"This method is called by the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.OnPreRender%2A&gt;</ph> event handler, one time for each <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptReference&gt;</ph> in the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.Scripts%2A&gt;</ph> collection.","pos":[0,213],"source":"This method is called by the <xref:System.Web.UI.ScriptManager.OnPreRender%2A> event handler, one time for each <xref:System.Web.UI.ScriptReference> in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection."}]},{"pos":[220,348],"content":"The <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event is raised after duplicate script entries have been resolved.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.ResolveScriptReference&gt;</ph> event is raised after duplicate script entries have been resolved.","pos":[0,128],"source":"The <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event is raised after duplicate script entries have been resolved."}]},{"pos":[355,471],"content":"Override this method to affect the behaviors of individual script blocks on postback or during partial-page updates.","nodes":[{"content":"Override this method to affect the behaviors of individual script blocks on postback or during partial-page updates.","pos":[0,116]}]}],"pos":[115886,116364],"yaml":true,"extradata":"MT"},{"content":"An object that represents the current script.","nodes":[{"pos":[0,45],"content":"An object that represents the current script.","nodes":[{"content":"An object that represents the current script.","pos":[0,45]}]}],"pos":[116577,116623],"yaml":true},{"content":"Gets the <xref href=\"System.Web.UI.ProfileServiceManager\"></xref> object that is associated with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,167],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ProfileServiceManager\"&gt;&lt;/xref&gt;</ph> object that is associated with the current <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the <xref href=\"System.Web.UI.ProfileServiceManager\"></xref> object that is associated with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[117605,117773],"yaml":true},{"content":"The <xref:System.Web.UI.ProfileServiceManager> object that is returned by this property represents the profile service that is registered with the page. The profile service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.  \n  \n You can use the ASP.NET profile service or use a custom profile service. You can add the custom service in markup by including a `ProfileService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.  \n  \n```  \n<asp:ScriptManager ID=\"SM1\" runat=\"server\">  \n  <ProfileService LoadProperties=\"propertyA,propertyB\"  \n    Path=\"MyProfileService.asmx\" />  \n</asp:ScriptManager>  \n```  \n  \n You can also programmatically configure the <xref:System.Web.UI.ProfileServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","nodes":[{"pos":[0,306],"content":"The <xref:System.Web.UI.ProfileServiceManager> object that is returned by this property represents the profile service that is registered with the page. The profile service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.","nodes":[{"content":"The <xref:System.Web.UI.ProfileServiceManager> object that is returned by this property represents the profile service that is registered with the page. The profile service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.","pos":[0,306],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ProfileServiceManager&gt;</ph> object that is returned by this property represents the profile service that is registered with the page.","pos":[0,152],"source":"The <xref:System.Web.UI.ProfileServiceManager> object that is returned by this property represents the profile service that is registered with the page."},{"content":"The profile service can be defined in the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control or in an associated <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[153,306],"source":" The profile service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."}]}]},{"pos":[313,553],"content":"You can use the ASP.NET profile service or use a custom profile service. You can add the custom service in markup by including a `ProfileService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.","nodes":[{"content":"You can use the ASP.NET profile service or use a custom profile service.","pos":[0,72]},{"content":"You can add the custom service in markup by including a <ph id=\"ph1\">`ProfileService`</ph> element inside the <ph id=\"ph2\">`asp:ScriptManager`</ph> element on the page, as shown in the following example.","pos":[73,240],"source":" You can add the custom service in markup by including a `ProfileService` element inside the `asp:ScriptManager` element on the page, as shown in the following example."}]},{"pos":[739,984],"content":"You can also programmatically configure the <xref:System.Web.UI.ProfileServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","nodes":[{"content":"You can also programmatically configure the <xref:System.Web.UI.ProfileServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","pos":[0,245],"nodes":[{"content":"You can also programmatically configure the <ph id=\"ph1\">&lt;xref:System.Web.UI.ProfileServiceManager&gt;</ph> object.","pos":[0,94],"source":"You can also programmatically configure the <xref:System.Web.UI.ProfileServiceManager> object."},{"content":"Services are registered with the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control during the page's <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> life-cycle stage.","pos":[95,245],"source":" Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage."}]}]}],"pos":[117784,118790],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.UI.ProfileServiceManager\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,142],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ProfileServiceManager\"&gt;&lt;/xref&gt;</ph> object for the current <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Web.UI.ProfileServiceManager\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[119052,119195],"yaml":true},{"content":"Processes a postback event raised by the <xref href=\"System.Web.UI.ScriptManager\"></xref> control and loads the history state of the Web page.","nodes":[{"pos":[0,142],"content":"Processes a postback event raised by the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control and loads the history state of the Web page.","source":"Processes a postback event raised by the <xref href=\"System.Web.UI.ScriptManager\"></xref> control and loads the history state of the Web page."}],"pos":[120321,120464],"yaml":true},{"content":"A string of key/value pairs that represent the history state of the Web page.","nodes":[{"pos":[0,77],"content":"A string of key/value pairs that represent the history state of the Web page.","nodes":[{"content":"A string of key/value pairs that represent the history state of the Web page.","pos":[0,77]}]}],"pos":[120638,120716],"yaml":true},{"content":"Raises events for the <xref href=\"System.Web.UI.ScriptManager\"></xref> control when it posts back to the server.","nodes":[{"pos":[0,112],"content":"Raises events for the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control when it posts back to the server.","source":"Raises events for the <xref href=\"System.Web.UI.ScriptManager\"></xref> control when it posts back to the server."}],"pos":[121762,121875],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control. For the default implementation of the <xref:System.Web.UI.ScriptManager> control, no events are raised.","nodes":[{"pos":[0,297],"content":"The <xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control. For the default implementation of the <xref:System.Web.UI.ScriptManager> control, no events are raised.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control. For the default implementation of the <xref:System.Web.UI.ScriptManager> control, no events are raised.","pos":[0,297],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A&gt;</ph> method is primarily used by control developers to extend the functionality of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[0,193],"source":"The <xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control."},{"content":"For the default implementation of the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control, no events are raised.","pos":[194,297],"source":" For the default implementation of the <xref:System.Web.UI.ScriptManager> control, no events are raised."}]}]}],"pos":[121886,122184],"yaml":true,"extradata":"MT"},{"content":"Registers an ECMAScript (JavaScript) array declaration with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and adds the array to the page.","nodes":[{"pos":[0,249],"content":"Registers an ECMAScript (JavaScript) array declaration with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for use with a control that is inside an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control, and adds the array to the page.","source":"Registers an ECMAScript (JavaScript) array declaration with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and adds the array to the page."}],"pos":[123548,123798],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the array when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register an array every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.  \n  \n If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method determines whether an array with the name that is specified in the `arrayName` parameter is already registered. If so, the method adds the values specified in `arrayValue`. Because the array to be registered is based on the <xref:System.Collections.ArrayList> class, duplicates are allowed. If a registered array with the name in `arrayName` does not exist, the array is created and the values in `arrayValue` are added to it.  \n  \n To include string literals in the array, use single quotation marks (') or escaped double quotation marks (\\\\\") in `arrayValue`.  \n  \n Note that JavaScript treats a comma (,) as a delimiter in an array. You can specify multiple array values by passing a comma-delimited string in `arrayValue`. Separating two items with a comma in `arrayValue` is equivalent to calling the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method two times, one time for each item.","nodes":[{"pos":[0,633],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the array when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register an array every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A&gt;</ph> method to register a client script array that is compatible with partial-page rendering and that has no <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> dependencies.","pos":[0,264],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies."},{"content":"This method registers the array when <ph id=\"ph1\">`control`</ph> represents a control that is inside an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control that is being updated.","pos":[265,414],"source":" This method registers the array when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated."},{"content":"To register an array every time that an asynchronous postback occurs, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29&gt;</ph> overload of this method.","pos":[415,633],"source":" To register an array every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method."}]},{"pos":[640,1093],"content":"If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,453],"nodes":[{"content":"If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,301],"source":"If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[302,453],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]},{"pos":[1100,1600],"content":"The <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method determines whether an array with the name that is specified in the `arrayName` parameter is already registered. If so, the method adds the values specified in `arrayValue`. Because the array to be registered is based on the <xref:System.Collections.ArrayList> class, duplicates are allowed. If a registered array with the name in `arrayName` does not exist, the array is created and the values in `arrayValue` are added to it.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A&gt;</ph> method determines whether an array with the name that is specified in the <ph id=\"ph2\">`arrayName`</ph> parameter is already registered.","pos":[0,185],"source":"The <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method determines whether an array with the name that is specified in the `arrayName` parameter is already registered."},{"content":"If so, the method adds the values specified in <ph id=\"ph1\">`arrayValue`</ph>.","pos":[186,246],"source":" If so, the method adds the values specified in `arrayValue`."},{"content":"Because the array to be registered is based on the <ph id=\"ph1\">&lt;xref:System.Collections.ArrayList&gt;</ph> class, duplicates are allowed.","pos":[247,364],"source":" Because the array to be registered is based on the <xref:System.Collections.ArrayList> class, duplicates are allowed."},{"content":"If a registered array with the name in <ph id=\"ph1\">`arrayName`</ph> does not exist, the array is created and the values in <ph id=\"ph2\">`arrayValue`</ph> are added to it.","pos":[365,500],"source":" If a registered array with the name in `arrayName` does not exist, the array is created and the values in `arrayValue` are added to it."}]},{"pos":[1607,1735],"content":"To include string literals in the array, use single quotation marks (') or escaped double quotation marks (<ph id=\"ph1\">\\\\</ph>\") in <ph id=\"ph2\">`arrayValue`</ph>.","source":"To include string literals in the array, use single quotation marks (') or escaped double quotation marks (\\\\\") in `arrayValue`."},{"pos":[1742,2084],"content":"Note that JavaScript treats a comma (,) as a delimiter in an array. You can specify multiple array values by passing a comma-delimited string in `arrayValue`. Separating two items with a comma in `arrayValue` is equivalent to calling the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method two times, one time for each item.","nodes":[{"content":"Note that JavaScript treats a comma (,) as a delimiter in an array.","pos":[0,67]},{"content":"You can specify multiple array values by passing a comma-delimited string in <ph id=\"ph1\">`arrayValue`</ph>.","pos":[68,158],"source":" You can specify multiple array values by passing a comma-delimited string in `arrayValue`."},{"content":"Separating two items with a comma in <ph id=\"ph1\">`arrayValue`</ph> is equivalent to calling the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A&gt;</ph> method two times, one time for each item.","pos":[159,342],"source":" Separating two items with a comma in `arrayValue` is equivalent to calling the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method two times, one time for each item."}]}],"pos":[123809,125907],"yaml":true,"extradata":"MT"},{"content":"The control that is registering the array.","nodes":[{"pos":[0,42],"content":"The control that is registering the array.","nodes":[{"content":"The control that is registering the array.","pos":[0,42]}]}],"pos":[126131,126174],"yaml":true},{"content":"The name of the array to register.","nodes":[{"pos":[0,34],"content":"The name of the array to register.","nodes":[{"content":"The name of the array to register.","pos":[0,34]}]}],"pos":[126239,126274],"yaml":true},{"content":"The array value or values to register.","nodes":[{"pos":[0,38],"content":"The array value or values to register.","nodes":[{"content":"The array value or values to register.","pos":[0,38]}]}],"pos":[126340,126379],"yaml":true},{"content":"<code>arrayName</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;arrayName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>arrayName</code> is `null`."}],"pos":[126561,126595],"yaml":true},{"content":"Registers an ECMAScript (JavaScript) array declaration with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and adds the array to the page.","nodes":[{"pos":[0,249],"content":"Registers an ECMAScript (JavaScript) array declaration with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for use with a control that is inside an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control, and adds the array to the page.","source":"Registers an ECMAScript (JavaScript) array declaration with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and adds the array to the page."}],"pos":[127762,128012],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the array every time that an asynchronous postback occurs. To register an array for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the array is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.  \n  \n If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"pos":[0,655],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the array every time that an asynchronous postback occurs. To register an array for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the array is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A&gt;</ph> method to register a client script array that is compatible with partial-page rendering and that has no <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> dependencies.","pos":[0,264],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies."},{"content":"This method registers the array every time that an asynchronous postback occurs.","pos":[265,345]},{"content":"To register an array for a control that is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control so that the array is registered only when the panel is updated, use the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29&gt;</ph> overload of this method.","pos":[346,655],"source":" To register an array for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the array is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method."}]},{"pos":[662,1115],"content":"If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,453],"nodes":[{"content":"If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,301],"source":"If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[302,453],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]}],"pos":[128023,129143],"yaml":true,"extradata":"MT"},{"content":"The page object that is registering the array.","nodes":[{"pos":[0,46],"content":"The page object that is registering the array.","nodes":[{"content":"The page object that is registering the array.","pos":[0,46]}]}],"pos":[129355,129402],"yaml":true},{"content":"The name of the array to register.","nodes":[{"pos":[0,34],"content":"The name of the array to register.","nodes":[{"content":"The name of the array to register.","pos":[0,34]}]}],"pos":[129467,129502],"yaml":true},{"content":"The array value or values to register.","nodes":[{"pos":[0,38],"content":"The array value or values to register.","nodes":[{"content":"The array value or values to register.","pos":[0,38]}]}],"pos":[129568,129607],"yaml":true},{"content":"<code>arrayName</code> is `null`.","nodes":[{"pos":[0,33],"content":"<ph id=\"ph1\">&lt;code&gt;arrayName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>arrayName</code> is `null`."}],"pos":[129789,129823],"yaml":true},{"content":"Registers a control as a trigger for asynchronous postbacks.","nodes":[{"pos":[0,60],"content":"Registers a control as a trigger for asynchronous postbacks.","nodes":[{"content":"Registers a control as a trigger for asynchronous postbacks.","pos":[0,60]}]}],"pos":[130900,130961],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method enables you to register Web server controls as triggers so that they perform an asynchronous postback instead of a synchronous postback. When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property of an <xref:System.Web.UI.UpdatePanel> control is set to `true` (which is the default), postback controls inside the <xref:System.Web.UI.UpdatePanel> control are automatically registered as asynchronous postback controls.  \n  \n Use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register controls outside an <xref:System.Web.UI.UpdatePanel> control as triggers for asynchronous postbacks, and to potentially update the content of an update panel. To update an <xref:System.Web.UI.UpdatePanel> control programmatically, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method.  \n  \n You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control. In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], use the designer's **UpdatePanelTrigger Collection Editor** dialog box.","nodes":[{"pos":[0,509],"content":"The <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method enables you to register Web server controls as triggers so that they perform an asynchronous postback instead of a synchronous postback. When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property of an <xref:System.Web.UI.UpdatePanel> control is set to `true` (which is the default), postback controls inside the <xref:System.Web.UI.UpdatePanel> control are automatically registered as asynchronous postback controls.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A&gt;</ph> method enables you to register Web server controls as triggers so that they perform an asynchronous postback instead of a synchronous postback.","pos":[0,214],"source":"The <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method enables you to register Web server controls as triggers so that they perform an asynchronous postback instead of a synchronous postback."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A&gt;</ph> property of an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is set to <ph id=\"ph3\">`true`</ph> (which is the default), postback controls inside the <ph id=\"ph4\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control are automatically registered as asynchronous postback controls.","pos":[215,509],"source":" When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property of an <xref:System.Web.UI.UpdatePanel> control is set to `true` (which is the default), postback controls inside the <xref:System.Web.UI.UpdatePanel> control are automatically registered as asynchronous postback controls."}]},{"pos":[516,900],"content":"Use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register controls outside an <xref:System.Web.UI.UpdatePanel> control as triggers for asynchronous postbacks, and to potentially update the content of an update panel. To update an <xref:System.Web.UI.UpdatePanel> control programmatically, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method.","nodes":[{"content":"Use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register controls outside an <xref:System.Web.UI.UpdatePanel> control as triggers for asynchronous postbacks, and to potentially update the content of an update panel. To update an <xref:System.Web.UI.UpdatePanel> control programmatically, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method.","pos":[0,384],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A&gt;</ph> method to register controls outside an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control as triggers for asynchronous postbacks, and to potentially update the content of an update panel.","pos":[0,252],"source":"Use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register controls outside an <xref:System.Web.UI.UpdatePanel> control as triggers for asynchronous postbacks, and to potentially update the content of an update panel."},{"content":"To update an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control programmatically, call the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel.Update%2A&gt;</ph> method.","pos":[253,384],"source":" To update an <xref:System.Web.UI.UpdatePanel> control programmatically, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method."}]}]},{"pos":[907,1145],"content":"You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control. In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], use the designer's **UpdatePanelTrigger Collection Editor** dialog box.","nodes":[{"content":"You can add the trigger declaratively by using the <ph id=\"ph1\">`Triggers`</ph> element of the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,118],"source":"You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control."},{"content":"In <ph id=\"ph1\">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, use the designer's <bpt id=\"p1\">**</bpt>UpdatePanelTrigger Collection Editor<ept id=\"p1\">**</ept> dialog box.","pos":[119,238],"source":" In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], use the designer's **UpdatePanelTrigger Collection Editor** dialog box."}]}],"pos":[130972,132124],"yaml":true,"extradata":"MT"},{"content":"The control to register for asynchronous postbacks.","nodes":[{"pos":[0,51],"content":"The control to register for asynchronous postbacks.","nodes":[{"content":"The control to register for asynchronous postbacks.","pos":[0,51]}]}],"pos":[134176,134228],"yaml":true},{"content":"<code>control</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>control</code> is `null`."}],"pos":[134414,134446],"yaml":true},{"content":"The registered control does not implement the <xref href=\"System.Web.UI.INamingContainer\"></xref>, <xref href=\"System.Web.UI.IPostBackDataHandler\"></xref>, or <xref href=\"System.Web.UI.IPostBackEventHandler\"></xref> interfaces.","nodes":[{"pos":[0,227],"content":"The registered control does not implement the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.INamingContainer\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.IPostBackDataHandler\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Web.UI.IPostBackEventHandler\"&gt;&lt;/xref&gt;</ph> interfaces.","source":"The registered control does not implement the <xref href=\"System.Web.UI.INamingContainer\"></xref>, <xref href=\"System.Web.UI.IPostBackDataHandler\"></xref>, or <xref href=\"System.Web.UI.IPostBackEventHandler\"></xref> interfaces."}],"pos":[134540,134768],"yaml":true},{"content":"Registers a client script block with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and then adds the script block to the page.","nodes":[{"pos":[0,238],"content":"Registers a client script block with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for use with a control that is inside an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control, and then adds the script block to the page.","source":"Registers a client script block with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and then adds the script block to the page."}],"pos":[136085,136324],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method to register a client script block that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. Client script blocks that are registered by using this method are sent to the page only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \n  \n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \n  \n If `addScriptTags` is `true`, the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds `<script>` tags around the script block. Pass `false` if you want to create `<script>` tags yourself, such as when you want to set the attributes of specific `<script>` tags. If `addScriptTags` is `false` and the `script` parameter contains multiple script blocks, an exception is thrown.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the page after the opening `<form>` tag. The script blocks are not guaranteed to be output in the same order in which they are registered. If the order of the script blocks is important, concatenate your script blocks into a single string (for example, by using the <xref:System.Text.StringBuilder> object), and then register them as a single client script block.","nodes":[{"pos":[0,728],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method to register a client script block that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. Client script blocks that are registered by using this method are sent to the page only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method to register a client script block that is compatible with partial-page rendering and that has no <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> dependencies.","pos":[0,265],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method to register a client script block that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies."},{"content":"Client script blocks that are registered by using this method are sent to the page only when <ph id=\"ph1\">`control`</ph> represents a control that is inside an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control that is being updated.","pos":[266,471],"source":" Client script blocks that are registered by using this method are sent to the page only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated."},{"content":"To register a script block every time that an asynchronous postback occurs, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload of this method.","pos":[472,728],"source":" To register a script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method."}]},{"pos":[735,1202],"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,467],"nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,315],"source":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[316,467],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]},{"pos":[1209,1607],"content":"If `addScriptTags` is `true`, the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds `<script>` tags around the script block. Pass `false` if you want to create `<script>` tags yourself, such as when you want to set the attributes of specific `<script>` tags. If `addScriptTags` is `false` and the `script` parameter contains multiple script blocks, an exception is thrown.","nodes":[{"content":"If <ph id=\"ph1\">`addScriptTags`</ph> is <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method adds <ph id=\"ph4\">`&lt;script&gt;`</ph> tags around the script block.","pos":[0,150],"source":"If `addScriptTags` is `true`, the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds `<script>` tags around the script block."},{"content":"Pass <ph id=\"ph1\">`false`</ph> if you want to create <ph id=\"ph2\">`&lt;script&gt;`</ph> tags yourself, such as when you want to set the attributes of specific <ph id=\"ph3\">`&lt;script&gt;`</ph> tags.","pos":[151,284],"source":" Pass `false` if you want to create `<script>` tags yourself, such as when you want to set the attributes of specific `<script>` tags."},{"content":"If <ph id=\"ph1\">`addScriptTags`</ph> is <ph id=\"ph2\">`false`</ph> and the <ph id=\"ph3\">`script`</ph> parameter contains multiple script blocks, an exception is thrown.","pos":[285,398],"source":" If `addScriptTags` is `false` and the `script` parameter contains multiple script blocks, an exception is thrown."}]},{"pos":[1614,2075],"content":"The <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the page after the opening `<form>` tag. The script blocks are not guaranteed to be output in the same order in which they are registered. If the order of the script blocks is important, concatenate your script blocks into a single string (for example, by using the <xref:System.Text.StringBuilder> object), and then register them as a single client script block.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method adds a script block to the page after the opening <ph id=\"ph2\">`&lt;form&gt;`</ph> tag.","pos":[0,138],"source":"The <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the page after the opening `<form>` tag."},{"content":"The script blocks are not guaranteed to be output in the same order in which they are registered.","pos":[139,236]},{"content":"If the order of the script blocks is important, concatenate your script blocks into a single string (for example, by using the <ph id=\"ph1\">&lt;xref:System.Text.StringBuilder&gt;</ph> object), and then register them as a single client script block.","pos":[237,461],"source":" If the order of the script blocks is important, concatenate your script blocks into a single string (for example, by using the <xref:System.Text.StringBuilder> object), and then register them as a single client script block."}]}],"pos":[136335,138419],"yaml":true,"extradata":"MT"},{"content":"The control that is registering the client script block.","nodes":[{"pos":[0,56],"content":"The control that is registering the client script block.","nodes":[{"content":"The control that is registering the client script block.","pos":[0,56]}]}],"pos":[139420,139477],"yaml":true},{"content":"The type of the client script block. This parameter is usually specified by using the `typeof` operator (C#) or the `GetType` operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,217],"content":"The type of the client script block. This parameter is usually specified by using the `typeof` operator (C#) or the `GetType` operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script block.","pos":[0,36]},{"content":"This parameter is usually specified by using the <ph id=\"ph1\">`typeof`</ph> operator (C#) or the <ph id=\"ph2\">`GetType`</ph> operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[37,217],"source":" This parameter is usually specified by using the `typeof` operator (C#) or the `GetType` operator (Visual Basic) to retrieve the type of the control that is registering the script."}]}],"pos":[139535,139753],"yaml":true},{"content":"A unique identifier for the script block.","nodes":[{"pos":[0,41],"content":"A unique identifier for the script block.","nodes":[{"content":"A unique identifier for the script block.","pos":[0,41]}]}],"pos":[139812,139854],"yaml":true},{"content":"The script.","nodes":[{"pos":[0,11],"content":"The script.","nodes":[{"content":"The script.","pos":[0,11]}]}],"pos":[139916,139928],"yaml":true},{"content":"`true` to enclose the script block in `<script>` and `</script>` tags; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> to enclose the script block in <ph id=\"ph2\">`&lt;script&gt;`</ph> and <ph id=\"ph3\">`&lt;/script&gt;`</ph> tags; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` to enclose the script block in `<script>` and `</script>` tags; otherwise, `false`."}],"pos":[139998,140091],"yaml":true},{"content":"The client script block <code>type</code> is `null`.  \n  \n \\- or -  \n  \n The control that is registering the script block is `null`.","nodes":[{"pos":[0,52],"content":"The client script block <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The client script block <code>type</code> is `null`."},{"pos":[59,66],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[73,132],"content":"The control that is registering the script block is <ph id=\"ph1\">`null`</ph>.","source":"The control that is registering the script block is `null`."}],"pos":[140274,140414],"yaml":true},{"content":"The control that is registering the script block is not in the page's control tree.","nodes":[{"pos":[0,83],"content":"The control that is registering the script block is not in the page's control tree.","nodes":[{"content":"The control that is registering the script block is not in the page's control tree.","pos":[0,83]}]}],"pos":[140508,140592],"yaml":true},{"content":"Registers a client script block with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and then adds the script block to the page.","nodes":[{"pos":[0,238],"content":"Registers a client script block with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for use with a control that is inside an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control, and then adds the script block to the page.","source":"Registers a client script block with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and then adds the script block to the page."}],"pos":[141891,142130],"yaml":true},{"content":"When you register a script block by using this method, the script is rendered every time that an asynchronous postback occurs. To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \n  \n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"pos":[0,506],"content":"When you register a script block by using this method, the script is rendered every time that an asynchronous postback occurs. To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.","nodes":[{"content":"When you register a script block by using this method, the script is rendered every time that an asynchronous postback occurs. To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.","pos":[0,506],"nodes":[{"content":"When you register a script block by using this method, the script is rendered every time that an asynchronous postback occurs.","pos":[0,126]},{"content":"To register a script block for a control that is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control so that script is registered only when the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is updated, use the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload of this method.","pos":[127,506],"source":" To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method."}]}]},{"pos":[513,980],"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,467],"nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,315],"source":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[316,467],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]}],"pos":[142141,143126],"yaml":true,"extradata":"MT"},{"content":"The page object that is registering the client script block.","nodes":[{"pos":[0,60],"content":"The page object that is registering the client script block.","nodes":[{"content":"The page object that is registering the client script block.","pos":[0,60]}]}],"pos":[143360,143421],"yaml":true},{"content":"The type of the client script block. This parameter is usually specified by using the `typeof` operator (C#) or the `GetType` operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,217],"content":"The type of the client script block. This parameter is usually specified by using the `typeof` operator (C#) or the `GetType` operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script block.","pos":[0,36]},{"content":"This parameter is usually specified by using the <ph id=\"ph1\">`typeof`</ph> operator (C#) or the <ph id=\"ph2\">`GetType`</ph> operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[37,217],"source":" This parameter is usually specified by using the `typeof` operator (C#) or the `GetType` operator (Visual Basic) to retrieve the type of the control that is registering the script."}]}],"pos":[143479,143697],"yaml":true},{"content":"A unique identifier for the script block.","nodes":[{"pos":[0,41],"content":"A unique identifier for the script block.","nodes":[{"content":"A unique identifier for the script block.","pos":[0,41]}]}],"pos":[143756,143798],"yaml":true},{"content":"The script to register.","nodes":[{"pos":[0,23],"content":"The script to register.","nodes":[{"content":"The script to register.","pos":[0,23]}]}],"pos":[143860,143884],"yaml":true},{"content":"`true` to enclose the script block in `<script>` and `</script>` tags; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> to enclose the script block in <ph id=\"ph2\">`&lt;script&gt;`</ph> and <ph id=\"ph3\">`&lt;/script&gt;`</ph> tags; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` to enclose the script block in `<script>` and `</script>` tags; otherwise, `false`."}],"pos":[143954,144047],"yaml":true},{"content":"The script block <code>type</code> is `null`.  \n  \n \\- or -  \n  \n The page that is registering the script block is `null`.","nodes":[{"pos":[0,45],"content":"The script block <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The script block <code>type</code> is `null`."},{"pos":[52,59],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[66,122],"content":"The page that is registering the script block is <ph id=\"ph1\">`null`</ph>.","source":"The page that is registering the script block is `null`."}],"pos":[144230,144360],"yaml":true},{"content":"Registers a client script file with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and then adds a script file reference to the page.","nodes":[{"pos":[0,244],"content":"Registers a client script file with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for use with a control that is inside an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control, and then adds a script file reference to the page.","source":"Registers a client script file with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and then adds a script file reference to the page."}],"pos":[145617,145862],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method to register a client script file for a page or part of a page that is participating in partial-page updates. Client script files that are registered by using this method are sent to the page only when the `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a script file every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.  \n  \n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method registers a client script file on the page by rendering a `script` element whose opening tag contains a `src` attribute. The `url` parameter is used to set the `src` attribute. To resolve URLs, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method. This method uses the context of the URL it is called for to resolve the path.  \n  \n Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> methods render script files to the browser. If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already rendered, the script is not rendered again.","nodes":[{"pos":[0,643],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method to register a client script file for a page or part of a page that is participating in partial-page updates. Client script files that are registered by using this method are sent to the page only when the `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a script file every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method to register a client script file for a page or part of a page that is participating in partial-page updates.","pos":[0,193],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method to register a client script file for a page or part of a page that is participating in partial-page updates."},{"content":"Client script files that are registered by using this method are sent to the page only when the <ph id=\"ph1\">`control`</ph> represents a control that is inside an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control that is being updated.","pos":[194,402],"source":" Client script files that are registered by using this method are sent to the page only when the `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated."},{"content":"To register a script file every time that an asynchronous postback occurs, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29&gt;</ph> overload of this method.","pos":[403,643],"source":" To register a script file every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method."}]},{"pos":[650,1117],"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,467],"nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,315],"source":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[316,467],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]},{"pos":[1124,1537],"content":"The <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method registers a client script file on the page by rendering a `script` element whose opening tag contains a `src` attribute. The `url` parameter is used to set the `src` attribute. To resolve URLs, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method. This method uses the context of the URL it is called for to resolve the path.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method registers a client script file on the page by rendering a <ph id=\"ph2\">`script`</ph> element whose opening tag contains a <ph id=\"ph3\">`src`</ph> attribute.","pos":[0,197],"source":"The <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method registers a client script file on the page by rendering a `script` element whose opening tag contains a `src` attribute."},{"content":"The <ph id=\"ph1\">`url`</ph> parameter is used to set the <ph id=\"ph2\">`src`</ph> attribute.","pos":[198,253],"source":" The `url` parameter is used to set the `src` attribute."},{"content":"To resolve URLs, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;</ph> method.","pos":[254,335],"source":" To resolve URLs, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method."},{"content":"This method uses the context of the URL it is called for to resolve the path.","pos":[336,413]}]},{"pos":[1544,1909],"content":"Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> methods render script files to the browser. If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already rendered, the script is not rendered again.","nodes":[{"content":"Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> methods render script files to the browser. If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already rendered, the script is not rendered again.","pos":[0,365],"nodes":[{"content":"Both the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A&gt;</ph> methods render script files to the browser.","pos":[0,189],"source":"Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> methods render script files to the browser."},{"content":"If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already rendered, the script is not rendered again.","pos":[190,365]}]}]}],"pos":[145873,147791],"yaml":true,"extradata":"MT"},{"content":"The control that is registering the client script file.","nodes":[{"pos":[0,55],"content":"The control that is registering the client script file.","nodes":[{"content":"The control that is registering the client script file.","pos":[0,55]}]}],"pos":[148522,148578],"yaml":true},{"content":"The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,212],"content":"The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[0,212],"nodes":[{"content":"The type of the client script file.","pos":[0,35]},{"content":"This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[36,212]}]}]}],"pos":[148636,148849],"yaml":true},{"content":"A unique identifier for the script file.","nodes":[{"pos":[0,40],"content":"A unique identifier for the script file.","nodes":[{"content":"A unique identifier for the script file.","pos":[0,40]}]}],"pos":[148908,148949],"yaml":true},{"content":"The URL of the script file.","nodes":[{"pos":[0,27],"content":"The URL of the script file.","nodes":[{"content":"The URL of the script file.","pos":[0,27]}]}],"pos":[149008,149036],"yaml":true},{"content":"The client script file <code>type</code> is `null`.  \n  \n \\- or -  \n  \n The control that is registering the script file is `null`.","nodes":[{"pos":[0,51],"content":"The client script file <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The client script file <code>type</code> is `null`."},{"pos":[58,65],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[72,130],"content":"The control that is registering the script file is <ph id=\"ph1\">`null`</ph>.","source":"The control that is registering the script file is `null`."}],"pos":[149221,149359],"yaml":true},{"content":"The control that is registering the script file is not in the page's control tree.  \n  \n \\- or -  \n  \n <code>url</code> is `null`.  \n  \n \\- or -  \n  \n <code>url</code> is empty.","nodes":[{"pos":[0,82],"content":"The control that is registering the script file is not in the page's control tree.","nodes":[{"content":"The control that is registering the script file is not in the page's control tree.","pos":[0,82]}]},{"pos":[89,96],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[103,130],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>url</code> is `null`."},{"pos":[137,144],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[151,177],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> is empty.","source":"<code>url</code> is empty."}],"pos":[149453,149643],"yaml":true},{"content":"Registers client script with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control every time that an asynchronous postback occurs, and then adds a script file reference to the page.","nodes":[{"pos":[0,189],"content":"Registers client script with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control every time that an asynchronous postback occurs, and then adds a script file reference to the page.","source":"Registers client script with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control every time that an asynchronous postback occurs, and then adds a script file reference to the page."}],"pos":[150882,151072],"yaml":true},{"content":"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs. To register a script file for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.  \n  \n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"pos":[0,485],"content":"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs. To register a script file for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.","nodes":[{"content":"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs. To register a script file for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.","pos":[0,485],"nodes":[{"content":"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs.","pos":[0,121]},{"content":"To register a script file for a control that is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control so that script is registered only when the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is updated, use the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29&gt;</ph> overload of this method.","pos":[122,485],"source":" To register a script file for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method."}]}]},{"pos":[492,959],"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,467],"nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,315],"source":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[316,467],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]}],"pos":[151083,152047],"yaml":true,"extradata":"MT"},{"content":"The page object that is registering the client script file.","nodes":[{"pos":[0,59],"content":"The page object that is registering the client script file.","nodes":[{"content":"The page object that is registering the client script file.","pos":[0,59]}]}],"pos":[152260,152320],"yaml":true},{"content":"The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,212],"content":"The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[0,212],"nodes":[{"content":"The type of the client script file.","pos":[0,35]},{"content":"This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[36,212]}]}]}],"pos":[152378,152591],"yaml":true},{"content":"A unique identifier for the script file.","nodes":[{"pos":[0,40],"content":"A unique identifier for the script file.","nodes":[{"content":"A unique identifier for the script file.","pos":[0,40]}]}],"pos":[152650,152691],"yaml":true},{"content":"The URL of the script file.","nodes":[{"pos":[0,27],"content":"The URL of the script file.","nodes":[{"content":"The URL of the script file.","pos":[0,27]}]}],"pos":[152750,152778],"yaml":true},{"content":"The client script file <code>type</code> is `null`.  \n  \n \\- or -  \n  \n The page that is registering the script file is `null`.","nodes":[{"pos":[0,51],"content":"The client script file <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The client script file <code>type</code> is `null`."},{"pos":[58,65],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[72,127],"content":"The page that is registering the script file is <ph id=\"ph1\">`null`</ph>.","source":"The page that is registering the script file is `null`."}],"pos":[152963,153098],"yaml":true},{"content":"<code>url</code> is `null`.  \n  \n \\- or -  \n  \n <code>url</code> is empty.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>url</code> is `null`."},{"pos":[34,41],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[48,74],"content":"<ph id=\"ph1\">&lt;code&gt;url&lt;/code&gt;</ph> is empty.","source":"<code>url</code> is empty."}],"pos":[153192,153274],"yaml":true},{"content":"Registers a client script file that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control every time that a postback occurs.","nodes":[{"pos":[0,163],"content":"Registers a client script file that is embedded in an assembly with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control every time that a postback occurs.","source":"Registers a client script file that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control every time that a postback occurs."}],"pos":[154453,154617],"yaml":true},{"content":"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs. To register a script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> overload of this method.  \n  \n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"pos":[0,469],"content":"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs. To register a script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> overload of this method.","nodes":[{"content":"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs. To register a script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> overload of this method.","pos":[0,469],"nodes":[{"content":"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs.","pos":[0,121]},{"content":"To register a script for a control that is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control so that the script is registered only when the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is updated, use the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29&gt;</ph> overload of this method.","pos":[122,469],"source":" To register a script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> overload of this method."}]}]},{"pos":[476,943],"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,467],"nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,315],"source":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[316,467],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]}],"pos":[154628,155576],"yaml":true,"extradata":"MT"},{"content":"The page object that is registering the script.","nodes":[{"pos":[0,47],"content":"The page object that is registering the script.","nodes":[{"content":"The page object that is registering the script.","pos":[0,47]}]}],"pos":[155787,155835],"yaml":true},{"content":"The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,207],"content":"The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[0,207],"nodes":[{"content":"The type of the client script.","pos":[0,30]},{"content":"This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[31,207]}]}]}],"pos":[155893,156101],"yaml":true},{"content":"An identifier for the resource.","nodes":[{"pos":[0,31],"content":"An identifier for the resource.","nodes":[{"content":"An identifier for the resource.","pos":[0,31]}]}],"pos":[156169,156201],"yaml":true},{"content":"The client resource <code>type</code> is `null`.  \n  \n \\- or -  \n  \n The page that is registering the script is `null`.","nodes":[{"pos":[0,48],"content":"The client resource <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The client resource <code>type</code> is `null`."},{"pos":[55,62],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[69,119],"content":"The page that is registering the script is <ph id=\"ph1\">`null`</ph>.","source":"The page that is registering the script is `null`."}],"pos":[156387,156514],"yaml":true},{"content":"Registers the client script that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is participating in partial-page rendering.","nodes":[{"pos":[0,197],"content":"Registers the client script that is embedded in an assembly with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for use with a control that is participating in partial-page rendering.","source":"Registers the client script that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is participating in partial-page rendering."}],"pos":[157711,157909],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method to register a script that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. Script resources that are registered by using this method are registered only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is updated. To register a script every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \n  \n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method is used when resources from assemblies are accessed through an HTTP handler. This method includes the content of the resource URL in a `script` element.  \n  \n Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method load script files into the browser. If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already loaded, the script is not reloaded.","nodes":[{"pos":[0,692],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method to register a script that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. Script resources that are registered by using this method are registered only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is updated. To register a script every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A&gt;</ph> method to register a script that is compatible with partial-page rendering and that has no <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> dependencies.","pos":[0,255],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method to register a script that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies."},{"content":"Script resources that are registered by using this method are registered only when <ph id=\"ph1\">`control`</ph> represents a control that is inside an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control that is updated.","pos":[256,445],"source":" Script resources that are registered by using this method are registered only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is updated."},{"content":"To register a script every time that an asynchronous postback occurs, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload of this method.","pos":[446,692],"source":" To register a script every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method."}]},{"pos":[699,1166],"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,467],"nodes":[{"content":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,315],"source":"If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[316,467],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]},{"pos":[1173,1403],"content":"The <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method is used when resources from assemblies are accessed through an HTTP handler. This method includes the content of the resource URL in a `script` element.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A&gt;</ph> method is used when resources from assemblies are accessed through an HTTP handler.","pos":[0,154],"source":"The <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method is used when resources from assemblies are accessed through an HTTP handler."},{"content":"This method includes the content of the resource URL in a <ph id=\"ph1\">`script`</ph> element.","pos":[155,230],"source":" This method includes the content of the resource URL in a `script` element."}]},{"pos":[1410,1770],"content":"Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method load script files into the browser. If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already loaded, the script is not reloaded.","nodes":[{"content":"Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method load script files into the browser. If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already loaded, the script is not reloaded.","pos":[0,360],"nodes":[{"content":"Both the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A&gt;</ph> method load script files into the browser.","pos":[0,192],"source":"Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method load script files into the browser."},{"content":"If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already loaded, the script is not reloaded.","pos":[193,360]}]}]}],"pos":[157920,159699],"yaml":true,"extradata":"MT"},{"content":"The control that is registering the script.","nodes":[{"pos":[0,43],"content":"The control that is registering the script.","nodes":[{"content":"The control that is registering the script.","pos":[0,43]}]}],"pos":[159922,159966],"yaml":true},{"content":"The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,207],"content":"The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[0,207],"nodes":[{"content":"The type of the client script.","pos":[0,30]},{"content":"This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[31,207]}]}]}],"pos":[160024,160232],"yaml":true},{"content":"An identifier for the resource.","nodes":[{"pos":[0,31],"content":"An identifier for the resource.","nodes":[{"content":"An identifier for the resource.","pos":[0,31]}]}],"pos":[160300,160332],"yaml":true},{"content":"The client resource <code>type</code> is `null`.  \n  \n \\- or -  \n  \n The control that is registering the script is `null`.","nodes":[{"pos":[0,48],"content":"The client resource <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The client resource <code>type</code> is `null`."},{"pos":[55,62],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[69,122],"content":"The control that is registering the script is <ph id=\"ph1\">`null`</ph>.","source":"The control that is registering the script is `null`."}],"pos":[160518,160648],"yaml":true},{"content":"The control that is registering the script is not in the page's control tree.","nodes":[{"pos":[0,77],"content":"The control that is registering the script is not in the page's control tree.","nodes":[{"content":"The control that is registering the script is not in the page's control tree.","pos":[0,77]}]}],"pos":[160742,160820],"yaml":true},{"content":"Sends custom data to a control during partial-page rendering.","nodes":[{"pos":[0,61],"content":"Sends custom data to a control during partial-page rendering.","nodes":[{"content":"Sends custom data to a control during partial-page rendering.","pos":[0,61]}]}],"pos":[161891,161953],"yaml":true},{"content":"Use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback. To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property. This method invokes the overload that takes a parameter named `isJsonSerialized` that is set to `false`. When the `isJsonSerialized` parameter is set to `false`, the string is not serialized as JavaScript Object Notation (JSON). For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.  \n  \n The data items that are registered with the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object. When you handle these events, the custom data is passed in an event argument object. For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.","nodes":[{"pos":[0,251],"content":"Use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDataItem%2A&gt;</ph> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,251],"source":"Use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control."}]},{"pos":[258,854],"content":"The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback. To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property. This method invokes the overload that takes a parameter named `isJsonSerialized` that is set to `false`. When the `isJsonSerialized` parameter is set to `false`, the string is not serialized as JavaScript Object Notation (JSON). For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDataItem%2A&gt;</ph> method can be called only during an asynchronous postback.","pos":[0,117],"source":"The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback."},{"content":"To determine whether a postback is asynchronous, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A&gt;</ph> property.","pos":[118,240],"source":" To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property."},{"content":"This method invokes the overload that takes a parameter named <ph id=\"ph1\">`isJsonSerialized`</ph> that is set to <ph id=\"ph2\">`false`</ph>.","pos":[241,345],"source":" This method invokes the overload that takes a parameter named `isJsonSerialized` that is set to `false`."},{"content":"When the <ph id=\"ph1\">`isJsonSerialized`</ph> parameter is set to <ph id=\"ph2\">`false`</ph>, the string is not serialized as JavaScript Object Notation (JSON).","pos":[346,469],"source":" When the `isJsonSerialized` parameter is set to `false`, the string is not serialized as JavaScript Object Notation (JSON)."},{"content":"For more information about the JSON format, see the <bpt id=\"p1\">[</bpt>Introducing JSON<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=77297)</ept> Web site.","pos":[470,596],"source":" For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site."}]},{"pos":[861,1249],"content":"The data items that are registered with the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object. When you handle these events, the custom data is passed in an event argument object. For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.","nodes":[{"content":"The data items that are registered with the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object. When you handle these events, the custom data is passed in an event argument object. For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.","pos":[0,388],"nodes":[{"content":"The data items that are registered with the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDataItem%2A&gt;</ph> method can be accessed in client script during the , , and  events of the  object.","pos":[0,181],"source":"The data items that are registered with the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object."},{"content":"When you handle these events, the custom data is passed in an event argument object.","pos":[182,266]},{"content":"For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.","pos":[267,388]}]}]}],"pos":[161964,163220],"yaml":true,"extradata":"MT"},{"content":"The control that is receiving the data.","nodes":[{"pos":[0,39],"content":"The control that is receiving the data.","nodes":[{"content":"The control that is receiving the data.","pos":[0,39]}]}],"pos":[164395,164435],"yaml":true},{"content":"The data that is sent to the control.","nodes":[{"pos":[0,37],"content":"The data that is sent to the control.","nodes":[{"content":"The data that is sent to the control.","pos":[0,37]}]}],"pos":[164499,164537],"yaml":true},{"content":"<code>control</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>control</code> is `null`."}],"pos":[164711,164743],"yaml":true},{"content":"The <xref href=\"System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\"></xref> method is called during a postback.","nodes":[{"pos":[0,157],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method is called during a postback.","source":"The <xref href=\"System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\"></xref> method is called during a postback."}],"pos":[164853,165011],"yaml":true},{"content":"<code>dataItem</code> is already registered for <code>control</code>.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">&lt;code&gt;dataItem&lt;/code&gt;</ph> is already registered for <ph id=\"ph2\">&lt;code&gt;control&lt;/code&gt;</ph>.","source":"<code>dataItem</code> is already registered for <code>control</code>."}],"pos":[165105,165175],"yaml":true},{"content":"Sends custom data to a control during partial-page rendering, and indicates whether the data is in JavaScript Object Notation (JSON) format.","nodes":[{"pos":[0,140],"content":"Sends custom data to a control during partial-page rendering, and indicates whether the data is in JavaScript Object Notation (JSON) format.","nodes":[{"content":"Sends custom data to a control during partial-page rendering, and indicates whether the data is in JavaScript Object Notation (JSON) format.","pos":[0,140]}]}],"pos":[166318,166459],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.  \n  \n If the `dataItem` parameter that you register for `control` is not serialized as JSON, set the `isJsonSerialized` parameter to `false`. This avoids the need to use the  function for each string that is sent to the client. For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback. To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.  \n  \n The data items that are registered by using the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object. When you handle these events, the custom data is passed in an event argument object. For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.","nodes":[{"pos":[0,255],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDataItem%2A&gt;</ph> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,255],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control."}]},{"pos":[262,610],"content":"If the `dataItem` parameter that you register for `control` is not serialized as JSON, set the `isJsonSerialized` parameter to `false`. This avoids the need to use the  function for each string that is sent to the client. For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.","nodes":[{"content":"If the <ph id=\"ph1\">`dataItem`</ph> parameter that you register for <ph id=\"ph2\">`control`</ph> is not serialized as JSON, set the <ph id=\"ph3\">`isJsonSerialized`</ph> parameter to <ph id=\"ph4\">`false`</ph>.","pos":[0,135],"source":"If the `dataItem` parameter that you register for `control` is not serialized as JSON, set the `isJsonSerialized` parameter to `false`."},{"content":"This avoids the need to use the  function for each string that is sent to the client.","pos":[136,221]},{"content":"For more information about the JSON format, see the <bpt id=\"p1\">[</bpt>Introducing JSON<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=77297)</ept> Web site.","pos":[222,348],"source":" For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site."}]},{"pos":[617,857],"content":"The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback. To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback. To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.","pos":[0,240],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDataItem%2A&gt;</ph> method can be called only during an asynchronous postback.","pos":[0,117],"source":"The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback."},{"content":"To determine whether a postback is asynchronous, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A&gt;</ph> property.","pos":[118,240],"source":" To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property."}]}]},{"pos":[864,1256],"content":"The data items that are registered by using the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object. When you handle these events, the custom data is passed in an event argument object. For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.","nodes":[{"content":"The data items that are registered by using the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object. When you handle these events, the custom data is passed in an event argument object. For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.","pos":[0,392],"nodes":[{"content":"The data items that are registered by using the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDataItem%2A&gt;</ph> method can be accessed in client script during the , , and  events of the  object.","pos":[0,185],"source":"The data items that are registered by using the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object."},{"content":"When you handle these events, the custom data is passed in an event argument object.","pos":[186,270]},{"content":"For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.","pos":[271,392]}]}]}],"pos":[166470,167735],"yaml":true,"extradata":"MT"},{"content":"The page control that is receiving the data.","nodes":[{"pos":[0,44],"content":"The page control that is receiving the data.","nodes":[{"content":"The page control that is receiving the data.","pos":[0,44]}]}],"pos":[169308,169353],"yaml":true},{"content":"The data that is sent to the control.","nodes":[{"pos":[0,37],"content":"The data that is sent to the control.","nodes":[{"content":"The data that is sent to the control.","pos":[0,37]}]}],"pos":[169417,169455],"yaml":true},{"content":"`true` to indicate that <code>dataItem</code> is serialized as JSON; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> to indicate that <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">dataItem</ph><ept id=\"p1\">&lt;/code&gt;</ept> is serialized as JSON; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to indicate that <code>dataItem</code> is serialized as JSON; otherwise, `false`."}],"pos":[169528,169619],"yaml":true},{"content":"<code>control</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>control</code> is `null`."}],"pos":[169793,169825],"yaml":true},{"content":"The <xref href=\"System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\"></xref> method is called during a postback.","nodes":[{"pos":[0,157],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\"&gt;&lt;/xref&gt;</ph> method is called during a postback.","source":"The <xref href=\"System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\"></xref> method is called during a postback."}],"pos":[169935,170093],"yaml":true},{"content":"<code>dataItem</code> is already registered for <code>control</code>.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">&lt;code&gt;dataItem&lt;/code&gt;</ph> is already registered for <ph id=\"ph2\">&lt;code&gt;control&lt;/code&gt;</ph>.","source":"<code>dataItem</code> is already registered for <code>control</code>."}],"pos":[170187,170257],"yaml":true},{"content":"Registers a `dispose` script for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control. The script is executed when the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is updated or deleted.","nodes":[{"pos":[0,226],"content":"Registers a `dispose` script for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control. The script is executed when the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is updated or deleted.","nodes":[{"content":"Registers a <ph id=\"ph1\">`dispose`</ph> script for a control that is inside an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control.","pos":[0,116],"source":"Registers a `dispose` script for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."},{"content":"The script is executed when the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control is updated or deleted.","pos":[117,226],"source":" The script is executed when the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is updated or deleted."}]}],"pos":[171322,171549],"yaml":true},{"content":"Use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method to register `dispose` scripts for controls that are inside an <xref:System.Web.UI.UpdatePanel> control. During asynchronous postbacks, <xref:System.Web.UI.UpdatePanel> controls can be updated, deleted, or created. When a panel is updated or deleted, any `dispose` scripts that are registered for controls that are inside the <xref:System.Web.UI.UpdatePanel> are called. In typical page development scenarios, you do not have to call the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method is intended for use by control developers to register script or create controls that inherit from the <xref:System.Web.UI.IScriptControl> interface. For example, you might use a `dispose` script if you develop a client control by using composition. In your control, you implement <xref:System.Web.UI.IScriptControl> and render individual controls. You register the `dispose` method of any item that does not correspond to a defined client component such as `Sys.TextBox`. If your custom control composes elements that correspond to client components in the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)], you do not have to register a `dispose` script, because `dispose` is called automatically. Therefore, use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method for client components that are part of the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] and that have to free resources when a component is no longer used.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method can be called multiple times for a control. Multiple scripts are aggregated. The order of disposing scripts matches the order in which the scripts were registered.  \n  \n If you register a `dispose` script for a control that is not in an <xref:System.Web.UI.UpdatePanel> control, an exception is thrown. The `dispose` script is called between the  and  events of the  class.","nodes":[{"pos":[0,567],"content":"Use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method to register `dispose` scripts for controls that are inside an <xref:System.Web.UI.UpdatePanel> control. During asynchronous postbacks, <xref:System.Web.UI.UpdatePanel> controls can be updated, deleted, or created. When a panel is updated or deleted, any `dispose` scripts that are registered for controls that are inside the <xref:System.Web.UI.UpdatePanel> are called. In typical page development scenarios, you do not have to call the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDispose%2A&gt;</ph> method to register <ph id=\"ph2\">`dispose`</ph> scripts for controls that are inside an <ph id=\"ph3\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,172],"source":"Use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method to register `dispose` scripts for controls that are inside an <xref:System.Web.UI.UpdatePanel> control."},{"content":"During asynchronous postbacks, <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls can be updated, deleted, or created.","pos":[173,282],"source":" During asynchronous postbacks, <xref:System.Web.UI.UpdatePanel> controls can be updated, deleted, or created."},{"content":"When a panel is updated or deleted, any <ph id=\"ph1\">`dispose`</ph> scripts that are registered for controls that are inside the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> are called.","pos":[283,438],"source":" When a panel is updated or deleted, any `dispose` scripts that are registered for controls that are inside the <xref:System.Web.UI.UpdatePanel> are called."},{"content":"In typical page development scenarios, you do not have to call the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDispose%2A&gt;</ph> method.","pos":[439,567],"source":" In typical page development scenarios, you do not have to call the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method."}]},{"pos":[574,1622],"content":"The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method is intended for use by control developers to register script or create controls that inherit from the <xref:System.Web.UI.IScriptControl> interface. For example, you might use a `dispose` script if you develop a client control by using composition. In your control, you implement <xref:System.Web.UI.IScriptControl> and render individual controls. You register the `dispose` method of any item that does not correspond to a defined client component such as `Sys.TextBox`. If your custom control composes elements that correspond to client components in the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)], you do not have to register a `dispose` script, because `dispose` is called automatically. Therefore, use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method for client components that are part of the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] and that have to free resources when a component is no longer used.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDispose%2A&gt;</ph> method is intended for use by control developers to register script or create controls that inherit from the <ph id=\"ph2\">&lt;xref:System.Web.UI.IScriptControl&gt;</ph> interface.","pos":[0,213],"source":"The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method is intended for use by control developers to register script or create controls that inherit from the <xref:System.Web.UI.IScriptControl> interface."},{"content":"For example, you might use a <ph id=\"ph1\">`dispose`</ph> script if you develop a client control by using composition.","pos":[214,313],"source":" For example, you might use a `dispose` script if you develop a client control by using composition."},{"content":"In your control, you implement <ph id=\"ph1\">&lt;xref:System.Web.UI.IScriptControl&gt;</ph> and render individual controls.","pos":[314,412],"source":" In your control, you implement <xref:System.Web.UI.IScriptControl> and render individual controls."},{"content":"You register the <ph id=\"ph1\">`dispose`</ph> method of any item that does not correspond to a defined client component such as <ph id=\"ph2\">`Sys.TextBox`</ph>.","pos":[413,536],"source":" You register the `dispose` method of any item that does not correspond to a defined client component such as `Sys.TextBox`."},{"content":"If your custom control composes elements that correspond to client components in the <ph id=\"ph1\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph>, you do not have to register a <ph id=\"ph2\">`dispose`</ph> script, because <ph id=\"ph3\">`dispose`</ph> is called automatically.","pos":[537,785],"source":" If your custom control composes elements that correspond to client components in the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)], you do not have to register a `dispose` script, because `dispose` is called automatically."},{"content":"Therefore, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDispose%2A&gt;</ph> method for client components that are part of the <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> and that have to free resources when a component is no longer used.","pos":[786,1048],"source":" Therefore, use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method for client components that are part of the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] and that have to free resources when a component is no longer used."}]},{"pos":[1629,1857],"content":"The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method can be called multiple times for a control. Multiple scripts are aggregated. The order of disposing scripts matches the order in which the scripts were registered.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method can be called multiple times for a control. Multiple scripts are aggregated. The order of disposing scripts matches the order in which the scripts were registered.","pos":[0,228],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterDispose%2A&gt;</ph> method can be called multiple times for a control.","pos":[0,108],"source":"The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method can be called multiple times for a control."},{"content":"Multiple scripts are aggregated.","pos":[109,141]},{"content":"The order of disposing scripts matches the order in which the scripts were registered.","pos":[142,228]}]}]},{"pos":[1864,2067],"content":"If you register a `dispose` script for a control that is not in an <xref:System.Web.UI.UpdatePanel> control, an exception is thrown. The `dispose` script is called between the  and  events of the  class.","nodes":[{"content":"If you register a <ph id=\"ph1\">`dispose`</ph> script for a control that is not in an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control, an exception is thrown.","pos":[0,132],"source":"If you register a `dispose` script for a control that is not in an <xref:System.Web.UI.UpdatePanel> control, an exception is thrown."},{"content":"The <ph id=\"ph1\">`dispose`</ph> script is called between the  and  events of the  class.","pos":[133,203],"source":" The `dispose` script is called between the  and  events of the  class."}]}],"pos":[171560,173636],"yaml":true,"extradata":"MT"},{"content":"The control that the `dispose` script is for.","nodes":[{"pos":[0,45],"content":"The control that the <ph id=\"ph1\">`dispose`</ph> script is for.","source":"The control that the `dispose` script is for."}],"pos":[173829,173875],"yaml":true},{"content":"The `dispose` script.","nodes":[{"pos":[0,21],"content":"The <ph id=\"ph1\">`dispose`</ph> script.","source":"The `dispose` script."}],"pos":[173944,173966],"yaml":true},{"content":"<code>control</code> is `null`.  \n  \n \\- or -  \n  \n <code>disposeScript</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>control</code> is `null`."},{"pos":[38,45],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[52,89],"content":"<ph id=\"ph1\">&lt;code&gt;disposeScript&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>disposeScript</code> is `null`."}],"pos":[174139,174236],"yaml":true},{"content":"<code>control</code> is not found on the page.  \n  \n \\- or -  \n  \n <code>control</code> is not inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is not found on the page.","source":"<code>control</code> is not found on the page."},{"pos":[53,60],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[67,160],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is not inside an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control.","source":"<code>control</code> is not inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."}],"pos":[174330,174500],"yaml":true},{"content":"Registers a name/value pair with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control as a custom (expando) attribute of a specified control.","nodes":[{"pos":[0,149],"content":"Registers a name/value pair with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control as a custom (expando) attribute of a specified control.","source":"Registers a name/value pair with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control as a custom (expando) attribute of a specified control."}],"pos":[175823,175973],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method to register a custom (expando) property for a control that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom attribute for the specified control. The property is set dynamically from ECMAScript (JavaScript) to preserve XHTML compatibility for the rendered control's markup. Set `encode` to `true` if you have to escape any characters in the dynamic property's value.  \n  \n If the control to which the dynamic property will be added is not found, a script error occurs.","nodes":[{"pos":[0,284],"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A&gt;</ph> method to register a custom (expando) property for a control that is compatible with partial-page rendering and that has no <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> dependencies.","source":"You use the <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method to register a custom (expando) property for a control that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies."},{"pos":[291,662],"content":"The <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom attribute for the specified control. The property is set dynamically from ECMAScript (JavaScript) to preserve XHTML compatibility for the rendered control's markup. Set `encode` to `true` if you have to escape any characters in the dynamic property's value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A&gt;</ph> method registers a name/value pair as a custom attribute for the specified control.","pos":[0,150],"source":"The <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom attribute for the specified control."},{"content":"The property is set dynamically from ECMAScript (JavaScript) to preserve XHTML compatibility for the rendered control's markup.","pos":[151,278]},{"content":"Set <ph id=\"ph1\">`encode`</ph> to <ph id=\"ph2\">`true`</ph> if you have to escape any characters in the dynamic property's value.","pos":[279,371],"source":" Set `encode` to `true` if you have to escape any characters in the dynamic property's value."}]},{"pos":[669,764],"content":"If the control to which the dynamic property will be added is not found, a script error occurs.","nodes":[{"content":"If the control to which the dynamic property will be added is not found, a script error occurs.","pos":[0,95]}]}],"pos":[175984,176755],"yaml":true,"extradata":"MT"},{"content":"The control that is registering the expando attribute.","nodes":[{"pos":[0,54],"content":"The control that is registering the expando attribute.","nodes":[{"content":"The control that is registering the expando attribute.","pos":[0,54]}]}],"pos":[177018,177073],"yaml":true},{"content":"The control that contains the custom attribute on the page.","nodes":[{"pos":[0,59],"content":"The control that contains the custom attribute on the page.","nodes":[{"content":"The control that contains the custom attribute on the page.","pos":[0,59]}]}],"pos":[177138,177198],"yaml":true},{"content":"The name of the custom attribute to register.","nodes":[{"pos":[0,45],"content":"The name of the custom attribute to register.","nodes":[{"content":"The name of the custom attribute to register.","pos":[0,45]}]}],"pos":[177267,177313],"yaml":true},{"content":"The value of the custom attribute.","nodes":[{"pos":[0,34],"content":"The value of the custom attribute.","nodes":[{"content":"The value of the custom attribute.","pos":[0,34]}]}],"pos":[177383,177418],"yaml":true},{"content":"`true` to encode the custom attribute that is being registered; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> to encode the custom attribute that is being registered; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to encode the custom attribute that is being registered; otherwise, `false`."}],"pos":[177481,177567],"yaml":true},{"content":"<code>control</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>control</code> is `null`."}],"pos":[177749,177781],"yaml":true},{"content":"<code>control</code> is not in the page's control tree.  \n  \n \\- or -  \n  \n <code>controlId</code> is `null`.  \n  \n \\- or -  \n  \n <code>controlId</code> is empty.  \n  \n \\- or -  \n  \n <code>attributeName</code> is `null`.  \n  \n \\- or -  \n  \n <code>attributeName</code> is empty.  \n  \n \\- or -  \n  \n <code>attributeName</code> is already registered.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is not in the page's control tree.","source":"<code>control</code> is not in the page's control tree."},{"pos":[62,69],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[76,109],"content":"<ph id=\"ph1\">&lt;code&gt;controlId&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>controlId</code> is `null`."},{"pos":[116,123],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[130,162],"content":"<ph id=\"ph1\">&lt;code&gt;controlId&lt;/code&gt;</ph> is empty.","source":"<code>controlId</code> is empty."},{"pos":[169,176],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[183,220],"content":"<ph id=\"ph1\">&lt;code&gt;attributeName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>attributeName</code> is `null`."},{"pos":[227,234],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[241,277],"content":"<ph id=\"ph1\">&lt;code&gt;attributeName&lt;/code&gt;</ph> is empty.","source":"<code>attributeName</code> is empty."},{"pos":[284,291],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[298,347],"content":"<ph id=\"ph1\">&lt;code&gt;attributeName&lt;/code&gt;</ph> is already registered.","source":"<code>attributeName</code> is already registered."}],"pos":[177875,178250],"yaml":true},{"content":"Registers an extender control with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,105],"content":"Registers an extender control with the current <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"Registers an extender control with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[179426,179532],"yaml":true},{"content":"This method is primarily for use by control developers. Call the <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method from a custom ASP.NET Ajax extender control during its `onInit` event handler to register that control with the page. An ASP.NET Ajax extender control must be registered to participate in partial-page rendering.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method adds the specified extender control to an internal list of extender controls and the target script controls they extend. This list is processed during the <xref:System.Web.UI.Control.PreRender> event.","nodes":[{"pos":[0,345],"content":"This method is primarily for use by control developers. Call the <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method from a custom ASP.NET Ajax extender control during its `onInit` event handler to register that control with the page. An ASP.NET Ajax extender control must be registered to participate in partial-page rendering.","nodes":[{"content":"This method is primarily for use by control developers.","pos":[0,55]},{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A&gt;</ph> method from a custom ASP.NET Ajax extender control during its <ph id=\"ph2\">`onInit`</ph> event handler to register that control with the page.","pos":[56,251],"source":" Call the <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method from a custom ASP.NET Ajax extender control during its `onInit` event handler to register that control with the page."},{"content":"An ASP.NET Ajax extender control must be registered to participate in partial-page rendering.","pos":[252,345]}]},{"pos":[352,625],"content":"The <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method adds the specified extender control to an internal list of extender controls and the target script controls they extend. This list is processed during the <xref:System.Web.UI.Control.PreRender> event.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method adds the specified extender control to an internal list of extender controls and the target script controls they extend. This list is processed during the <xref:System.Web.UI.Control.PreRender> event.","pos":[0,273],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A&gt;</ph> method adds the specified extender control to an internal list of extender controls and the target script controls they extend.","pos":[0,193],"source":"The <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method adds the specified extender control to an internal list of extender controls and the target script controls they extend."},{"content":"This list is processed during the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> event.","pos":[194,273],"source":" This list is processed during the <xref:System.Web.UI.Control.PreRender> event."}]}]}],"pos":[179543,180173],"yaml":true,"extradata":"MT"},{"content":"The extender control to register.","nodes":[{"pos":[0,33],"content":"The extender control to register.","nodes":[{"content":"The extender control to register.","pos":[0,33]}]}],"pos":[180494,180528],"yaml":true},{"content":"The script control that the extender control extends.","nodes":[{"pos":[0,53],"content":"The script control that the extender control extends.","nodes":[{"content":"The script control that the extender control extends.","pos":[0,53]}]}],"pos":[180605,180659],"yaml":true},{"content":"A control that implements the <xref href=\"System.Web.UI.IExtenderControl\"></xref> interface.","nodes":[{"pos":[0,92],"content":"A control that implements the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IExtenderControl\"&gt;&lt;/xref&gt;</ph> interface.","source":"A control that implements the <xref href=\"System.Web.UI.IExtenderControl\"></xref> interface."}],"pos":[180725,180818],"yaml":true},{"content":"<code>extenderControl</code> is `null`.  \n  \n \\- or -  \n  \n <code>targetControl</code> is `null`.","nodes":[{"pos":[0,39],"content":"<ph id=\"ph1\">&lt;code&gt;extenderControl&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>extenderControl</code> is `null`."},{"pos":[46,53],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[60,97],"content":"<ph id=\"ph1\">&lt;code&gt;targetControl&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetControl</code> is `null`."}],"pos":[181002,181107],"yaml":true},{"content":"Registers a hidden field with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.","nodes":[{"pos":[0,178],"content":"Registers a hidden field with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for a control that is inside an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control.","source":"Registers a hidden field with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control."}],"pos":[182262,182441],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the hidden field when the control that is registering the field is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a hidden field every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.  \n  \n If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method creates a hidden `input` element on the rendered HTML page.","nodes":[{"pos":[0,635],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the hidden field when the control that is registering the field is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a hidden field every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A&gt;</ph> method to register a hidden field that is compatible with partial-page rendering and that has no <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> dependencies.","pos":[0,252],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies."},{"content":"This method registers the hidden field when the control that is registering the field is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control that is being updated.","pos":[253,415],"source":" This method registers the hidden field when the control that is registering the field is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated."},{"content":"To register a hidden field every time that an asynchronous postback occurs, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29&gt;</ph> overload of this method.","pos":[416,635],"source":" To register a hidden field every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method."}]},{"pos":[642,1103],"content":"If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,461],"nodes":[{"content":"If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,309],"source":"If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[310,461],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]},{"pos":[1110,1238],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A&gt;</ph> method creates a hidden <ph id=\"ph2\">`input`</ph> element on the rendered HTML page.","source":"The <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method creates a hidden `input` element on the rendered HTML page."}],"pos":[182452,183697],"yaml":true,"extradata":"MT"},{"content":"The control that is registering the hidden field.","nodes":[{"pos":[0,49],"content":"The control that is registering the hidden field.","nodes":[{"content":"The control that is registering the hidden field.","pos":[0,49]}]}],"pos":[183935,183985],"yaml":true},{"content":"The name of the hidden field to register.","nodes":[{"pos":[0,41],"content":"The name of the hidden field to register.","nodes":[{"content":"The name of the hidden field to register.","pos":[0,41]}]}],"pos":[184056,184098],"yaml":true},{"content":"The initial value of the hidden field.","nodes":[{"pos":[0,38],"content":"The initial value of the hidden field.","nodes":[{"content":"The initial value of the hidden field.","pos":[0,38]}]}],"pos":[184177,184216],"yaml":true},{"content":"<code>control</code> is `null`.  \n  \n \\- or -  \n  \n <code>hiddenFieldName</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>control</code> is `null`."},{"pos":[38,45],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[52,91],"content":"<ph id=\"ph1\">&lt;code&gt;hiddenFieldName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>hiddenFieldName</code> is `null`."}],"pos":[184393,184492],"yaml":true},{"content":"<code>control</code> is not in the page's control tree.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is not in the page's control tree.","source":"<code>control</code> is not in the page's control tree."}],"pos":[184586,184642],"yaml":true},{"content":"Registers a hidden field with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control during every asynchronous postback.","nodes":[{"pos":[0,126],"content":"Registers a hidden field with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control during every asynchronous postback.","source":"Registers a hidden field with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control during every asynchronous postback."}],"pos":[185779,185906],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the hidden field every time that an asynchronous postback occurs. To register a hidden field for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the field is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.  \n  \n If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"pos":[0,651],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the hidden field every time that an asynchronous postback occurs. To register a hidden field for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the field is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A&gt;</ph> method to register a hidden field that is compatible with partial-page rendering and that has no <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> dependencies.","pos":[0,252],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies."},{"content":"This method registers the hidden field every time that an asynchronous postback occurs.","pos":[253,340]},{"content":"To register a hidden field for a control that is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control so that the field is registered only when the panel is updated, use the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29&gt;</ph> overload of this method.","pos":[341,651],"source":" To register a hidden field for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the field is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method."}]},{"pos":[658,1119],"content":"If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,461],"nodes":[{"content":"If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,309],"source":"If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[310,461],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]}],"pos":[185917,187041],"yaml":true,"extradata":"MT"},{"content":"The page object that is registering the hidden field.","nodes":[{"pos":[0,53],"content":"The page object that is registering the hidden field.","nodes":[{"content":"The page object that is registering the hidden field.","pos":[0,53]}]}],"pos":[187267,187321],"yaml":true},{"content":"The name of the hidden field to register.","nodes":[{"pos":[0,41],"content":"The name of the hidden field to register.","nodes":[{"content":"The name of the hidden field to register.","pos":[0,41]}]}],"pos":[187392,187434],"yaml":true},{"content":"The initial value of the hidden field.","nodes":[{"pos":[0,38],"content":"The initial value of the hidden field.","nodes":[{"content":"The initial value of the hidden field.","pos":[0,38]}]}],"pos":[187513,187552],"yaml":true},{"content":"<code>page</code> is `null`.  \n  \n \\- or -  \n  \n <code>hiddenFieldName</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;page&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>page</code> is `null`."},{"pos":[35,42],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[49,88],"content":"<ph id=\"ph1\">&lt;code&gt;hiddenFieldName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>hiddenFieldName</code> is `null`."}],"pos":[187729,187825],"yaml":true},{"content":"Registers client script by resource name that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is participating in partial-page rendering.","nodes":[{"pos":[0,210],"content":"Registers client script by resource name that is embedded in an assembly with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for use with a control that is participating in partial-page rendering.","source":"Registers client script by resource name that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is participating in partial-page rendering."}],"pos":[188998,189209],"yaml":true},{"content":"The control that is registering the script.","nodes":[{"pos":[0,43],"content":"The control that is registering the script.","nodes":[{"content":"The control that is registering the script.","pos":[0,43]}]}],"pos":[189426,189470],"yaml":true},{"content":"An identifier for the resource.","nodes":[{"pos":[0,31],"content":"An identifier for the resource.","nodes":[{"content":"An identifier for the resource.","pos":[0,31]}]}],"pos":[189538,189570],"yaml":true},{"content":"Registers client script by resource name that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is participating in partial-page rendering.","nodes":[{"pos":[0,210],"content":"Registers client script by resource name that is embedded in an assembly with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for use with a control that is participating in partial-page rendering.","source":"Registers client script by resource name that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is participating in partial-page rendering."}],"pos":[190817,191028],"yaml":true},{"content":"The page object that is registering the script.","nodes":[{"pos":[0,47],"content":"The page object that is registering the script.","nodes":[{"content":"The page object that is registering the script.","pos":[0,47]}]}],"pos":[191233,191281],"yaml":true},{"content":"An identifier for the resource.","nodes":[{"pos":[0,31],"content":"An identifier for the resource.","nodes":[{"content":"An identifier for the resource.","pos":[0,31]}]}],"pos":[191349,191381],"yaml":true},{"content":"Registers ECMAScript (JavaScript) code with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for a control that is used with an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that is executed when the form is submitted.","nodes":[{"pos":[0,239],"content":"Registers ECMAScript (JavaScript) code with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for a control that is used with an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control that is executed when the form is submitted.","source":"Registers ECMAScript (JavaScript) code with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for a control that is used with an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that is executed when the form is submitted."}],"pos":[192700,192940],"yaml":true},{"content":"Registering JavaScript code with this method causes the script to be included every time that an asynchronous postback occurs.  \n  \n> [!NOTE]\n>  Code from any earlier asynchronous postbacks is not removed. New asynchronous postbacks append code to any existing code for the `onsubmit` statement.  \n  \n To register code for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the code is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.  \n  \n If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"pos":[0,126],"content":"Registering JavaScript code with this method causes the script to be included every time that an asynchronous postback occurs.","nodes":[{"content":"Registering JavaScript code with this method causes the script to be included every time that an asynchronous postback occurs.","pos":[0,126]}]},{"pos":[134,295],"content":"[!NOTE]\n Code from any earlier asynchronous postbacks is not removed. New asynchronous postbacks append code to any existing code for the `onsubmit` statement.","leadings":["","> "],"nodes":[{"content":" Code from any earlier asynchronous postbacks is not removed. New asynchronous postbacks append code to any existing code for the `onsubmit` statement.","pos":[8,159],"nodes":[{"content":"Code from any earlier asynchronous postbacks is not removed.","pos":[1,61]},{"content":"New asynchronous postbacks append code to any existing code for the <ph id=\"ph1\">`onsubmit`</ph> statement.","pos":[62,151],"source":" New asynchronous postbacks append code to any existing code for the `onsubmit` statement."}]}]},{"pos":[302,656],"content":"To register code for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the code is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.","nodes":[{"content":"To register code for a control that is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control so that the code is registered only when the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is updated, use the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29&gt;</ph> overload of this method.","pos":[0,354],"source":"To register code for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the code is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method."}]},{"pos":[663,1108],"content":"If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,445],"nodes":[{"content":"If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,293],"source":"If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[294,445],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]}],"pos":[192951,194069],"yaml":true,"extradata":"MT"},{"content":"The page object that is registering the `onsubmit` statement.","nodes":[{"pos":[0,61],"content":"The page object that is registering the <ph id=\"ph1\">`onsubmit`</ph> statement.","source":"The page object that is registering the `onsubmit` statement."}],"pos":[194283,194345],"yaml":true},{"content":"The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,217],"content":"The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[0,217],"nodes":[{"content":"The type of the client script statement.","pos":[0,40]},{"content":"This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[41,217]}]}]}],"pos":[194403,194621],"yaml":true},{"content":"A unique identifier for the script statement.","nodes":[{"pos":[0,45],"content":"A unique identifier for the script statement.","nodes":[{"content":"A unique identifier for the script statement.","pos":[0,45]}]}],"pos":[194680,194726],"yaml":true},{"content":"The script to register.","nodes":[{"pos":[0,23],"content":"The script to register.","nodes":[{"content":"The script to register.","pos":[0,23]}]}],"pos":[194788,194812],"yaml":true},{"content":"<code>page</code> is `null`.  \n  \n \\- or -  \n  \n <code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;page&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>page</code> is `null`."},{"pos":[35,42],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[49,77],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[194995,195080],"yaml":true},{"content":"Registers ECMAScript (JavaScript) code with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for a control that is used with an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that is executed when the form is submitted.","nodes":[{"pos":[0,239],"content":"Registers ECMAScript (JavaScript) code with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control for a control that is used with an <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control that is executed when the form is submitted.","source":"Registers ECMAScript (JavaScript) code with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for a control that is used with an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that is executed when the form is submitted."}],"pos":[196325,196565],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> adds script that is executed before the form is submitted, which lets you modify the submission or cancel it.  \n  \n You use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method to render an `onsubmit` statement that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. JavaScript code that is registered by using this method is sent to the page only when the control that is registering the statement is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register code with every asynchronous postback, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.  \n  \n If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \n  \n The *script* parameter of the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands that are delimited by using semicolons (;).  \n  \n For more information about HTML forms and the `onsubmit` event, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).","nodes":[{"pos":[0,177],"content":"The <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> adds script that is executed before the form is submitted, which lets you modify the submission or cancel it.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> adds script that is executed before the form is submitted, which lets you modify the submission or cancel it.","pos":[0,177],"source":"The <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> adds script that is executed before the form is submitted, which lets you modify the submission or cancel it."}]},{"pos":[184,873],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method to render an `onsubmit` statement that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. JavaScript code that is registered by using this method is sent to the page only when the control that is registering the statement is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register code with every asynchronous postback, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method to render an <ph id=\"ph2\">`onsubmit`</ph> statement that is compatible with partial-page rendering and that has no <ph id=\"ph3\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> dependencies.","pos":[0,265],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method to render an `onsubmit` statement that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies."},{"content":"JavaScript code that is registered by using this method is sent to the page only when the control that is registering the statement is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control that is being updated.","pos":[266,474],"source":" JavaScript code that is registered by using this method is sent to the page only when the control that is registering the statement is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated."},{"content":"To register code with every asynchronous postback, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29&gt;</ph> overload of this method.","pos":[475,689],"source":" To register code with every asynchronous postback, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method."}]},{"pos":[880,1325],"content":"If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,445],"nodes":[{"content":"If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,293],"source":"If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[294,445],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]},{"pos":[1332,1513],"content":"The <bpt id=\"p1\">*</bpt>script<ept id=\"p1\">*</ept> parameter of the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method can contain multiple script commands that are delimited by using semicolons (;).","source":"The *script* parameter of the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands that are delimited by using semicolons (;)."},{"pos":[1520,1681],"content":"For more information about HTML forms and the <ph id=\"ph1\">`onsubmit`</ph> event, see the <bpt id=\"p1\">[</bpt>World Wide Web Consortium (W3C) Web site<ept id=\"p1\">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.","source":"For more information about HTML forms and the `onsubmit` event, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125)."}],"pos":[196576,198268],"yaml":true,"extradata":"MT"},{"content":"The control that is registering the `onsubmit` statement.","nodes":[{"pos":[0,57],"content":"The control that is registering the <ph id=\"ph1\">`onsubmit`</ph> statement.","source":"The control that is registering the `onsubmit` statement."}],"pos":[198494,198552],"yaml":true},{"content":"The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,217],"content":"The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[0,217],"nodes":[{"content":"The type of the client script statement.","pos":[0,40]},{"content":"This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[41,217]}]}]}],"pos":[198610,198828],"yaml":true},{"content":"A unique identifier for the script statement.","nodes":[{"pos":[0,45],"content":"A unique identifier for the script statement.","nodes":[{"content":"A unique identifier for the script statement.","pos":[0,45]}]}],"pos":[198887,198933],"yaml":true},{"content":"The script to register.","nodes":[{"pos":[0,23],"content":"The script to register.","nodes":[{"content":"The script to register.","pos":[0,23]}]}],"pos":[198995,199019],"yaml":true},{"content":"<code>control</code> is `null`.  \n  \n \\- or -  \n  \n <code>type</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>control</code> is `null`."},{"pos":[38,45],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[52,80],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[199202,199290],"yaml":true},{"content":"<code>control</code> is not in the page's control tree.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is not in the page's control tree.","source":"<code>control</code> is not in the page's control tree."}],"pos":[199384,199440],"yaml":true},{"content":"Registers a control as a trigger for a postback. This method is used to configure postback controls inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that would otherwise perform asynchronous postbacks.","nodes":[{"pos":[0,217],"content":"Registers a control as a trigger for a postback. This method is used to configure postback controls inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that would otherwise perform asynchronous postbacks.","nodes":[{"content":"Registers a control as a trigger for a postback.","pos":[0,48]},{"content":"This method is used to configure postback controls inside an <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> control that would otherwise perform asynchronous postbacks.","pos":[49,217],"source":" This method is used to configure postback controls inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that would otherwise perform asynchronous postbacks."}]}],"pos":[200487,200705],"yaml":true},{"content":"Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method to register postback controls inside an <xref:System.Web.UI.UpdatePanel> control as triggers. Controls that are registered by using this method update a whole page instead of updating only the <xref:System.Web.UI.UpdatePanel> control's content. Registering a postback control with this method outside an <xref:System.Web.UI.UpdatePanel> control has no affect because by default these controls do not perform asynchronous postbacks.  \n  \n You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control. In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], use the designer's **UpdatePanelTrigger Collection Editor** dialog box.","nodes":[{"pos":[0,508],"content":"Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method to register postback controls inside an <xref:System.Web.UI.UpdatePanel> control as triggers. Controls that are registered by using this method update a whole page instead of updating only the <xref:System.Web.UI.UpdatePanel> control's content. Registering a postback control with this method outside an <xref:System.Web.UI.UpdatePanel> control has no affect because by default these controls do not perform asynchronous postbacks.","nodes":[{"content":"Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method to register postback controls inside an <xref:System.Web.UI.UpdatePanel> control as triggers. Controls that are registered by using this method update a whole page instead of updating only the <xref:System.Web.UI.UpdatePanel> control's content. Registering a postback control with this method outside an <xref:System.Web.UI.UpdatePanel> control has no affect because by default these controls do not perform asynchronous postbacks.","pos":[0,508],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A&gt;</ph> method to register postback controls inside an <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control as triggers.","pos":[0,170],"source":"Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method to register postback controls inside an <xref:System.Web.UI.UpdatePanel> control as triggers."},{"content":"Controls that are registered by using this method update a whole page instead of updating only the <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control's content.","pos":[171,321],"source":" Controls that are registered by using this method update a whole page instead of updating only the <xref:System.Web.UI.UpdatePanel> control's content."},{"content":"Registering a postback control with this method outside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control has no affect because by default these controls do not perform asynchronous postbacks.","pos":[322,508],"source":" Registering a postback control with this method outside an <xref:System.Web.UI.UpdatePanel> control has no affect because by default these controls do not perform asynchronous postbacks."}]}]},{"pos":[515,753],"content":"You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control. In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], use the designer's **UpdatePanelTrigger Collection Editor** dialog box.","nodes":[{"content":"You can add the trigger declaratively by using the <ph id=\"ph1\">`Triggers`</ph> element of the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control.","pos":[0,118],"source":"You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control."},{"content":"In <ph id=\"ph1\">[!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]</ph>, use the designer's <bpt id=\"p1\">**</bpt>UpdatePanelTrigger Collection Editor<ept id=\"p1\">**</ept> dialog box.","pos":[119,238],"source":" In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], use the designer's **UpdatePanelTrigger Collection Editor** dialog box."}]}],"pos":[200716,201474],"yaml":true,"extradata":"MT"},{"content":"The control to register for postback.","nodes":[{"pos":[0,37],"content":"The control to register for postback.","nodes":[{"content":"The control to register for postback.","pos":[0,37]}]}],"pos":[201653,201691],"yaml":true},{"content":"Registers a script control with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,102],"content":"Registers a script control with the current <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"Registers a script control with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[202832,202935],"yaml":true},{"content":"This method is primarily for use by control developers. Call the <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method from a custom ASP.NET Ajax script control during its `onInit` event handler to register that control with the page. An ASP.NET Ajax script control must be registered to participate in partial-page rendering.  \n  \n The <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method adds the specified extender control to an internal list of script controls that is processed during the <xref:System.Web.UI.Control.PreRender> event.","nodes":[{"pos":[0,339],"content":"This method is primarily for use by control developers. Call the <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method from a custom ASP.NET Ajax script control during its `onInit` event handler to register that control with the page. An ASP.NET Ajax script control must be registered to participate in partial-page rendering.","nodes":[{"content":"This method is primarily for use by control developers.","pos":[0,55]},{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A&gt;</ph> method from a custom ASP.NET Ajax script control during its <ph id=\"ph2\">`onInit`</ph> event handler to register that control with the page.","pos":[56,247],"source":" Call the <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method from a custom ASP.NET Ajax script control during its `onInit` event handler to register that control with the page."},{"content":"An ASP.NET Ajax script control must be registered to participate in partial-page rendering.","pos":[248,339]}]},{"pos":[346,566],"content":"The <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method adds the specified extender control to an internal list of script controls that is processed during the <xref:System.Web.UI.Control.PreRender> event.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A&gt;</ph> method adds the specified extender control to an internal list of script controls that is processed during the <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> event.","pos":[0,220],"source":"The <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method adds the specified extender control to an internal list of script controls that is processed during the <xref:System.Web.UI.Control.PreRender> event."}]}],"pos":[202946,203517],"yaml":true,"extradata":"MT"},{"content":"The script control to register.","nodes":[{"pos":[0,31],"content":"The script control to register.","nodes":[{"content":"The script control to register.","pos":[0,31]}]}],"pos":[203785,203817],"yaml":true},{"content":"A control that implements the <xref href=\"System.Web.UI.IScriptControl\"></xref> interface.","nodes":[{"pos":[0,90],"content":"A control that implements the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IScriptControl\"&gt;&lt;/xref&gt;</ph> interface.","source":"A control that implements the <xref href=\"System.Web.UI.IScriptControl\"></xref> interface."}],"pos":[203881,203972],"yaml":true},{"content":"<code>scriptControl</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;scriptControl&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>scriptControl</code> is `null`."}],"pos":[204154,204192],"yaml":true},{"content":"Calls back to an <xref href=\"System.Web.UI.ExtenderControl\"></xref> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.","nodes":[{"pos":[0,209],"content":"Calls back to an <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ExtenderControl\"&gt;&lt;/xref&gt;</ph> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.","source":"Calls back to an <xref href=\"System.Web.UI.ExtenderControl\"></xref> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior."}],"pos":[205305,205515],"yaml":true},{"content":"The <xref:System.Web.UI.ExtenderControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method in its <xref:System.Web.UI.Control.Render%2A> method.","nodes":[{"pos":[0,181],"content":"The <xref:System.Web.UI.ExtenderControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method in its <xref:System.Web.UI.Control.Render%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ExtenderControl&gt;</ph> class calls the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A&gt;</ph> method in its <ph id=\"ph3\">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method.","pos":[0,181],"source":"The <xref:System.Web.UI.ExtenderControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method in its <xref:System.Web.UI.Control.Render%2A> method."}]}],"pos":[205526,205708],"yaml":true,"extradata":"MT"},{"content":"The extender control for which script descriptors will be registered.","nodes":[{"pos":[0,69],"content":"The extender control for which script descriptors will be registered.","nodes":[{"content":"The extender control for which script descriptors will be registered.","pos":[0,69]}]}],"pos":[205923,205993],"yaml":true},{"content":"Calls a <xref href=\"System.Web.UI.ScriptControl\"></xref> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.","nodes":[{"pos":[0,198],"content":"Calls a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptControl\"&gt;&lt;/xref&gt;</ph> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.","source":"Calls a <xref href=\"System.Web.UI.ScriptControl\"></xref> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior."}],"pos":[207178,207377],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method during its <xref:System.Web.UI.Control.Render%2A> event.","nodes":[{"pos":[0,182],"content":"The <xref:System.Web.UI.ScriptControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method during its <xref:System.Web.UI.Control.Render%2A> event.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptControl&gt;</ph> class calls the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A&gt;</ph> method during its <ph id=\"ph3\">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> event.","pos":[0,182],"source":"The <xref:System.Web.UI.ScriptControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method during its <xref:System.Web.UI.Control.Render%2A> event."}]}],"pos":[207388,207571],"yaml":true,"extradata":"MT"},{"content":"The script control for which script descriptors will be registered.","nodes":[{"pos":[0,67],"content":"The script control for which script descriptors will be registered.","nodes":[{"content":"The script control for which script descriptors will be registered.","pos":[0,67]}]}],"pos":[207778,207846],"yaml":true},{"content":"Registers a startup script block for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> by using the <xref href=\"System.Web.UI.ScriptManager\"></xref> control, and adds the script block to the page.","nodes":[{"pos":[0,221],"content":"Registers a startup script block for a control that is inside an <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.UpdatePanel\"&gt;&lt;/xref&gt;</ph> by using the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control, and adds the script block to the page.","source":"Registers a startup script block for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> by using the <xref href=\"System.Web.UI.ScriptManager\"></xref> control, and adds the script block to the page."}],"pos":[209223,209445],"yaml":true},{"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method to register a startup script block for a page that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. Startup script blocks that are registered by using this method are sent to the page only when the control that is registering the block is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a startup script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \n  \n If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \n  \n The script block that is rendered by the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's client `onload` event is raised. Startup script blocks are located at the bottom of the rendered ASP.NET page just before the `</form>` tag.  \n  \n Startup script blocks that are registered by using <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> are not guaranteed to be output in the same order in which they are registered. If the order of the startup script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the script blocks in a single string, and then register them all as a single startup script.","nodes":[{"pos":[0,747],"content":"You use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method to register a startup script block for a page that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. Startup script blocks that are registered by using this method are sent to the page only when the control that is registering the block is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a startup script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.","nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A&gt;</ph> method to register a startup script block for a page that is compatible with partial-page rendering and that has no <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> dependencies.","pos":[0,273],"source":"You use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method to register a startup script block for a page that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies."},{"content":"Startup script blocks that are registered by using this method are sent to the page only when the control that is registering the block is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control that is being updated.","pos":[274,486],"source":" Startup script blocks that are registered by using this method are sent to the page only when the control that is registering the block is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated."},{"content":"To register a startup script block every time that an asynchronous postback occurs, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload of this method.","pos":[487,747],"source":" To register a startup script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method."}]},{"pos":[754,1213],"content":"If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,459],"nodes":[{"content":"If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,307],"source":"If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[308,459],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]},{"pos":[1220,1530],"content":"The script block that is rendered by the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's client `onload` event is raised. Startup script blocks are located at the bottom of the rendered ASP.NET page just before the `</form>` tag.","nodes":[{"content":"The script block that is rendered by the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A&gt;</ph> method executes when the page finishes loading but before the page's client <ph id=\"ph2\">`onload`</ph> event is raised.","pos":[0,202],"source":"The script block that is rendered by the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's client `onload` event is raised."},{"content":"Startup script blocks are located at the bottom of the rendered ASP.NET page just before the <ph id=\"ph1\">`&lt;/form&gt;`</ph> tag.","pos":[203,310],"source":" Startup script blocks are located at the bottom of the rendered ASP.NET page just before the `</form>` tag."}]},{"pos":[1537,1932],"content":"Startup script blocks that are registered by using <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> are not guaranteed to be output in the same order in which they are registered. If the order of the startup script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the script blocks in a single string, and then register them all as a single startup script.","nodes":[{"content":"Startup script blocks that are registered by using <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> are not guaranteed to be output in the same order in which they are registered. If the order of the startup script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the script blocks in a single string, and then register them all as a single startup script.","pos":[0,395],"nodes":[{"content":"Startup script blocks that are registered by using <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A&gt;</ph> are not guaranteed to be output in the same order in which they are registered.","pos":[0,190],"source":"Startup script blocks that are registered by using <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> are not guaranteed to be output in the same order in which they are registered."},{"content":"If the order of the startup script blocks is important, use a <ph id=\"ph1\">&lt;xref:System.Text.StringBuilder&gt;</ph> object to gather the script blocks in a single string, and then register them all as a single startup script.","pos":[191,395],"source":" If the order of the startup script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the script blocks in a single string, and then register them all as a single startup script."}]}]}],"pos":[209456,211397],"yaml":true,"extradata":"MT"},{"content":"The control that is registering the client script block.","nodes":[{"pos":[0,56],"content":"The control that is registering the client script block.","nodes":[{"content":"The control that is registering the client script block.","pos":[0,56]}]}],"pos":[211639,211696],"yaml":true},{"content":"The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,213],"content":"The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[0,213],"nodes":[{"content":"The type of the client script block.","pos":[0,36]},{"content":"This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[37,213]}]}]}],"pos":[211754,211968],"yaml":true},{"content":"A unique identifier for the script block.","nodes":[{"pos":[0,41],"content":"A unique identifier for the script block.","nodes":[{"content":"A unique identifier for the script block.","pos":[0,41]}]}],"pos":[212027,212069],"yaml":true},{"content":"The script to register.","nodes":[{"pos":[0,23],"content":"The script to register.","nodes":[{"content":"The script to register.","pos":[0,23]}]}],"pos":[212131,212155],"yaml":true},{"content":"`true` to enclose the script block with `<script>` and `</script>` tags; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> to enclose the script block with <ph id=\"ph2\">`&lt;script&gt;`</ph> and <ph id=\"ph3\">`&lt;/script&gt;`</ph> tags; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` to enclose the script block with `<script>` and `</script>` tags; otherwise, `false`."}],"pos":[212225,212320],"yaml":true},{"content":"<code>control</code> is `null`.  \n  \n \\- or -  \n  \n <code>type</code> is `null`.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>control</code> is `null`."},{"pos":[38,45],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[52,80],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[212499,212587],"yaml":true},{"content":"<code>control</code> is not in the page's control tree.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">&lt;code&gt;control&lt;/code&gt;</ph> is not in the page's control tree.","source":"<code>control</code> is not in the page's control tree."}],"pos":[212681,212737],"yaml":true},{"content":"Registers a startup script block for every asynchronous postback with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control and adds the script block to the page.","nodes":[{"pos":[0,169],"content":"Registers a startup script block for every asynchronous postback with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control and adds the script block to the page.","source":"Registers a startup script block for every asynchronous postback with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control and adds the script block to the page."}],"pos":[214012,214182],"yaml":true},{"content":"You use this method to register a startup script block that is included every time that an asynchronous postback occurs. To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script block is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \n  \n If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"pos":[0,506],"content":"You use this method to register a startup script block that is included every time that an asynchronous postback occurs. To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script block is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.","nodes":[{"content":"You use this method to register a startup script block that is included every time that an asynchronous postback occurs. To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script block is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.","pos":[0,506],"nodes":[{"content":"You use this method to register a startup script block that is included every time that an asynchronous postback occurs.","pos":[0,120]},{"content":"To register a script block for a control that is inside an <ph id=\"ph1\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control so that the script block is registered only when the <ph id=\"ph2\">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> control is updated, use the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload of this method.","pos":[121,506],"source":" To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script block is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method."}]}]},{"pos":[513,972],"content":"If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","nodes":[{"content":"If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.","pos":[0,459],"nodes":[{"content":"If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.","pos":[0,307],"source":"If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class."},{"content":"You can get a reference to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> object from the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the page.","pos":[308,459],"source":" You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page."}]}]}],"pos":[214193,215170],"yaml":true,"extradata":"MT"},{"content":"The page object that is registering the client script block.","nodes":[{"pos":[0,60],"content":"The page object that is registering the client script block.","nodes":[{"content":"The page object that is registering the client script block.","pos":[0,60]}]}],"pos":[215400,215461],"yaml":true},{"content":"The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"pos":[0,213],"content":"The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","nodes":[{"content":"The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[0,213],"nodes":[{"content":"The type of the client script block.","pos":[0,36]},{"content":"This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.","pos":[37,213]}]}]}],"pos":[215519,215733],"yaml":true},{"content":"A unique identifier for the script block.","nodes":[{"pos":[0,41],"content":"A unique identifier for the script block.","nodes":[{"content":"A unique identifier for the script block.","pos":[0,41]}]}],"pos":[215792,215834],"yaml":true},{"content":"The script to register.","nodes":[{"pos":[0,23],"content":"The script to register.","nodes":[{"content":"The script to register.","pos":[0,23]}]}],"pos":[215896,215920],"yaml":true},{"content":"`true` to enclose the script block with `<script>` and `</script>` tags; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> to enclose the script block with <ph id=\"ph2\">`&lt;script&gt;`</ph> and <ph id=\"ph3\">`&lt;/script&gt;`</ph> tags; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` to enclose the script block with `<script>` and `</script>` tags; otherwise, `false`."}],"pos":[215990,216085],"yaml":true},{"content":"Renders the <xref href=\"System.Web.UI.ScriptManager\"></xref> control's content to the browser by using the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object.","nodes":[{"pos":[0,174],"content":"Renders the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control's content to the browser by using the specified <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.HtmlTextWriter\"&gt;&lt;/xref&gt;</ph> object.","source":"Renders the <xref href=\"System.Web.UI.ScriptManager\"></xref> control's content to the browser by using the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object."}],"pos":[217152,217327],"yaml":true},{"content":"This method is used by control developers to extend the <xref:System.Web.UI.ScriptManager> control.","nodes":[{"pos":[0,99],"content":"This method is used by control developers to extend the <xref:System.Web.UI.ScriptManager> control.","nodes":[{"content":"This method is used by control developers to extend the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[0,99],"source":"This method is used by control developers to extend the <xref:System.Web.UI.ScriptManager> control."}]}],"pos":[217338,217438],"yaml":true,"extradata":"MT"},{"content":"An object that receives the content of the control to write to the page.","nodes":[{"pos":[0,72],"content":"An object that receives the content of the control to write to the page.","nodes":[{"content":"An object that receives the content of the control to write to the page.","pos":[0,72]}]}],"pos":[217624,217697],"yaml":true},{"content":"Occurs when a composite script is registered with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control.","nodes":[{"pos":[0,111],"content":"Occurs when a composite script is registered with the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control.","source":"Occurs when a composite script is registered with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control."}],"pos":[218760,218872],"yaml":true},{"content":"Occurs when a member of the <xref href=\"System.Web.UI.ScriptManager.Scripts\"></xref> collection is registered with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control.","nodes":[{"pos":[0,176],"content":"Occurs when a member of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.Scripts\"&gt;&lt;/xref&gt;</ph> collection is registered with the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control.","source":"Occurs when a member of the <xref href=\"System.Web.UI.ScriptManager.Scripts\"></xref> collection is registered with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control."}],"pos":[220096,220273],"yaml":true},{"content":"This event is raised one time for each member of the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection during the page's <xref:System.Web.UI.Control.PreRender> event. Use this event to perform any updates before the script is rendered to the page.","nodes":[{"pos":[0,254],"content":"This event is raised one time for each member of the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection during the page's <xref:System.Web.UI.Control.PreRender> event. Use this event to perform any updates before the script is rendered to the page.","nodes":[{"content":"This event is raised one time for each member of the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection during the page's <xref:System.Web.UI.Control.PreRender> event. Use this event to perform any updates before the script is rendered to the page.","pos":[0,254],"nodes":[{"content":"This event is raised one time for each member of the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.Scripts%2A&gt;</ph> collection during the page's <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> event.","pos":[0,173],"source":"This event is raised one time for each member of the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection during the page's <xref:System.Web.UI.Control.PreRender> event."},{"content":"Use this event to perform any updates before the script is rendered to the page.","pos":[174,254]}]}]}],"pos":[220284,220539],"yaml":true,"extradata":"MT"},{"content":"Gets the <xref href=\"System.Web.UI.RoleServiceManager\"></xref> object that is associated with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,164],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.RoleServiceManager\"&gt;&lt;/xref&gt;</ph> object that is associated with the current <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the <xref href=\"System.Web.UI.RoleServiceManager\"></xref> object that is associated with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[221673,221838],"yaml":true},{"content":"The <xref:System.Web.UI.RoleServiceManager> object that is returned by this property represents the role service that is registered with the page. The role service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. You can use the ASP.NET role service or use a custom role service. You can add the custom service in markup by including a `RoleService` element inside the `asp:ScriptManager` element on the page, as shown in the following example:  \n  \n```  \n<asp:ScriptManager ID=\"SM1\" runat=\"server\">  \n  <RoleService Path=\"MyRoleService.asmx\" LoadRoles=\"True\" />  \n</asp:ScriptManager>  \n```  \n  \n You can also programmatically configure the <xref:System.Web.UI.RoleServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","nodes":[{"pos":[0,529],"content":"The <xref:System.Web.UI.RoleServiceManager> object that is returned by this property represents the role service that is registered with the page. The role service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. You can use the ASP.NET role service or use a custom role service. You can add the custom service in markup by including a `RoleService` element inside the `asp:ScriptManager` element on the page, as shown in the following example:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager&gt;</ph> object that is returned by this property represents the role service that is registered with the page.","pos":[0,146],"source":"The <xref:System.Web.UI.RoleServiceManager> object that is returned by this property represents the role service that is registered with the page."},{"content":"The role service can be defined in the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control or in an associated <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[147,297],"source":" The role service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."},{"content":"You can use the ASP.NET role service or use a custom role service.","pos":[298,364]},{"content":"You can add the custom service in markup by including a <ph id=\"ph1\">`RoleService`</ph> element inside the <ph id=\"ph2\">`asp:ScriptManager`</ph> element on the page, as shown in the following example:","pos":[365,529],"source":" You can add the custom service in markup by including a `RoleService` element inside the `asp:ScriptManager` element on the page, as shown in the following example:"}]},{"pos":[683,925],"content":"You can also programmatically configure the <xref:System.Web.UI.RoleServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","nodes":[{"content":"You can also programmatically configure the <xref:System.Web.UI.RoleServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","pos":[0,242],"nodes":[{"content":"You can also programmatically configure the <ph id=\"ph1\">&lt;xref:System.Web.UI.RoleServiceManager&gt;</ph> object.","pos":[0,91],"source":"You can also programmatically configure the <xref:System.Web.UI.RoleServiceManager> object."},{"content":"Services are registered with the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control during the page's <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> life-cycle stage.","pos":[92,242],"source":" Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage."}]}]}],"pos":[221849,222793],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.UI.RoleServiceManager\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,139],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.RoleServiceManager\"&gt;&lt;/xref&gt;</ph> object for the current <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Web.UI.RoleServiceManager\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[223046,223186],"yaml":true},{"content":"Gets or sets a value that specifies whether debug or release versions of client script libraries are rendered.","nodes":[{"pos":[0,110],"content":"Gets or sets a value that specifies whether debug or release versions of client script libraries are rendered.","nodes":[{"content":"Gets or sets a value that specifies whether debug or release versions of client script libraries are rendered.","pos":[0,110]}]}],"pos":[224194,224305],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property specifies whether the <xref:System.Web.UI.ScriptManager> control should render debug or release versions of client script libraries. This value can be superseded by values that are set in the configuration file and in the page directive.  \n  \n The following table lists the valid values for this property.  \n  \n|Value|Definition|  \n|-----------|----------------|  \n|<xref:System.Web.UI.ScriptMode.Auto>|Debug versions of client script libraries are used in the Web page when the `retail` attribute of the  configuration element is set to `false`. Otherwise, the release versions of client script libraries are used.|  \n|<xref:System.Web.UI.ScriptMode.Inherit>|When applied to the <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property of the <xref:System.Web.UI.ScriptManager> object, this value is the same as <xref:System.Web.UI.ScriptMode.Auto>.|  \n|<xref:System.Web.UI.ScriptMode.Debug>|Debug versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `true`.|  \n|<xref:System.Web.UI.ScriptMode.Release>|Release versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `false`.|  \n  \n> [!NOTE]\n>  The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications. The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.  \n  \n For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).","nodes":[{"pos":[0,299],"content":"The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property specifies whether the <xref:System.Web.UI.ScriptManager> control should render debug or release versions of client script libraries. This value can be superseded by values that are set in the configuration file and in the page directive.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property specifies whether the <xref:System.Web.UI.ScriptManager> control should render debug or release versions of client script libraries. This value can be superseded by values that are set in the configuration file and in the page directive.","pos":[0,299],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.ScriptMode%2A&gt;</ph> property specifies whether the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control should render debug or release versions of client script libraries.","pos":[0,194],"source":"The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property specifies whether the <xref:System.Web.UI.ScriptManager> control should render debug or release versions of client script libraries."},{"content":"This value can be superseded by values that are set in the configuration file and in the page directive.","pos":[195,299]}]}]},{"pos":[306,367],"content":"The following table lists the valid values for this property.","nodes":[{"content":"The following table lists the valid values for this property.","pos":[0,61]}]},{"pos":[374,379],"content":"Value","nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[380,390],"content":"Definition","nodes":[{"content":"Definition","pos":[0,10]}]},{"pos":[428,464],"content":"<xref:System.Web.UI.ScriptMode.Auto>","nodes":[]},{"pos":[465,677],"content":"Debug versions of client script libraries are used in the Web page when the `retail` attribute of the  configuration element is set to `false`. Otherwise, the release versions of client script libraries are used.","nodes":[{"content":"Debug versions of client script libraries are used in the Web page when the <ph id=\"ph1\">`retail`</ph> attribute of the  configuration element is set to <ph id=\"ph2\">`false`</ph>.","pos":[0,143],"source":"Debug versions of client script libraries are used in the Web page when the `retail` attribute of the  configuration element is set to `false`."},{"content":"Otherwise, the release versions of client script libraries are used.","pos":[144,212]}]},{"pos":[682,721],"content":"<xref:System.Web.UI.ScriptMode.Inherit>","nodes":[]},{"pos":[722,913],"content":"When applied to the <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property of the <xref:System.Web.UI.ScriptManager> object, this value is the same as <xref:System.Web.UI.ScriptMode.Auto>.","nodes":[{"content":"When applied to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.ScriptMode%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> object, this value is the same as <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptMode.Auto&gt;</ph>.","pos":[0,191],"source":"When applied to the <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property of the <xref:System.Web.UI.ScriptManager> object, this value is the same as <xref:System.Web.UI.ScriptMode.Auto>."}]},{"pos":[918,955],"content":"<xref:System.Web.UI.ScriptMode.Debug>","nodes":[]},{"pos":[956,1100],"content":"Debug versions of client script libraries are used in the Web page unless the <ph id=\"ph1\">`retail`</ph> attribute of the  configuration element is set to <ph id=\"ph2\">`true`</ph>.","source":"Debug versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `true`."},{"pos":[1105,1144],"content":"<xref:System.Web.UI.ScriptMode.Release>","nodes":[]},{"pos":[1145,1292],"content":"Release versions of client script libraries are used in the Web page unless the <ph id=\"ph1\">`retail`</ph> attribute of the  configuration element is set to <ph id=\"ph2\">`false`</ph>.","source":"Release versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `false`."},{"pos":[1301,1673],"content":"[!NOTE]\n The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications. The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.","leadings":["","> "],"nodes":[{"content":" The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications. The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.","pos":[8,370],"nodes":[{"content":"The <ph id=\"ph1\">`debug`</ph> attribute of the  directive does not affect Ajax-enabled ASP.NET applications.","pos":[1,91],"source":" The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control uses only the settings in the Web.config file and in its <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.ScriptMode%2A&gt;</ph> properties to determine whether to render debug scripts.","pos":[92,362],"source":" The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts."}]}]},{"pos":[1680,1829],"content":"For more information, see <bpt id=\"p1\">[</bpt>Debugging and Tracing Ajax Applications Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)</ept>.","source":"For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375)."}],"pos":[224316,226162],"yaml":true,"extradata":"MT"},{"content":"The enumeration value that indicates the current mode. The default is <xref href=\"System.Web.UI.ScriptMode.Auto\"></xref>.","nodes":[{"pos":[0,121],"content":"The enumeration value that indicates the current mode. The default is <xref href=\"System.Web.UI.ScriptMode.Auto\"></xref>.","nodes":[{"content":"The enumeration value that indicates the current mode.","pos":[0,54]},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptMode.Auto\"&gt;&lt;/xref&gt;</ph>.","pos":[55,121],"source":" The default is <xref href=\"System.Web.UI.ScriptMode.Auto\"></xref>."}]}],"pos":[226310,226432],"yaml":true},{"content":"The <xref href=\"System.Web.UI.ScriptManager.ScriptMode\"></xref> property is not one of the <xref href=\"System.Web.UI.ScriptMode\"></xref> values.","nodes":[{"pos":[0,144],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.ScriptMode\"&gt;&lt;/xref&gt;</ph> property is not one of the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptMode\"&gt;&lt;/xref&gt;</ph> values.","source":"The <xref href=\"System.Web.UI.ScriptManager.ScriptMode\"></xref> property is not one of the <xref href=\"System.Web.UI.ScriptMode\"></xref> values."}],"pos":[226612,226757],"yaml":true},{"content":"Gets or sets the root path of the location that is used to build the paths to ASP.NET Ajax and custom script files.","nodes":[{"pos":[0,115],"content":"Gets or sets the root path of the location that is used to build the paths to ASP.NET Ajax and custom script files.","nodes":[{"content":"Gets or sets the root path of the location that is used to build the paths to ASP.NET Ajax and custom script files.","pos":[0,115]}]}],"pos":[227649,227765],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property enables you to specify an absolute, relative, or application-relative URL for all script blocks on the page. This includes custom and third-party script blocks that are registered with the current <xref:System.Web.UI.ScriptManager> instance. The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property is typically set declaratively as an attribute of a `ScriptManager` element on the page, but it can be set in code also.  \n  \n If the `path` attribute or the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is set for a <xref:System.Web.UI.ScriptReference> object in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection, the path value overrides the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> value for that <xref:System.Web.UI.ScriptReference> instance.  \n  \n If no <xref:System.Web.UI.ScriptReferenceBase.Path%2A> value is specified, the <xref:System.Web.UI.ScriptManager> control searches the directory that is defined by the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property and resolves script references by their <xref:System.Web.UI.ScriptReference.Name%2A> or <xref:System.Web.UI.ScriptReference.Assembly%2A> properties.","nodes":[{"pos":[0,486],"content":"The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property enables you to specify an absolute, relative, or application-relative URL for all script blocks on the page. This includes custom and third-party script blocks that are registered with the current <xref:System.Web.UI.ScriptManager> instance. The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property is typically set declaratively as an attribute of a `ScriptManager` element on the page, but it can be set in code also.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.ScriptPath%2A&gt;</ph> property enables you to specify an absolute, relative, or application-relative URL for all script blocks on the page.","pos":[0,170],"source":"The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property enables you to specify an absolute, relative, or application-relative URL for all script blocks on the page."},{"content":"This includes custom and third-party script blocks that are registered with the current <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> instance.","pos":[171,303],"source":" This includes custom and third-party script blocks that are registered with the current <xref:System.Web.UI.ScriptManager> instance."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.ScriptPath%2A&gt;</ph> property is typically set declaratively as an attribute of a <ph id=\"ph2\">`ScriptManager`</ph> element on the page, but it can be set in code also.","pos":[304,486],"source":" The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property is typically set declaratively as an attribute of a `ScriptManager` element on the page, but it can be set in code also."}]},{"pos":[493,843],"content":"If the <ph id=\"ph1\">`path`</ph> attribute or the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptReferenceBase.Path%2A&gt;</ph> property is set for a <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptReference&gt;</ph> object in the <ph id=\"ph4\">&lt;xref:System.Web.UI.ScriptManager.Scripts%2A&gt;</ph> collection, the path value overrides the <ph id=\"ph5\">&lt;xref:System.Web.UI.ScriptManager.ScriptPath%2A&gt;</ph> value for that <ph id=\"ph6\">&lt;xref:System.Web.UI.ScriptReference&gt;</ph> instance.","source":"If the `path` attribute or the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is set for a <xref:System.Web.UI.ScriptReference> object in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection, the path value overrides the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> value for that <xref:System.Web.UI.ScriptReference> instance."},{"pos":[850,1224],"content":"If no <xref:System.Web.UI.ScriptReferenceBase.Path%2A> value is specified, the <xref:System.Web.UI.ScriptManager> control searches the directory that is defined by the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property and resolves script references by their <xref:System.Web.UI.ScriptReference.Name%2A> or <xref:System.Web.UI.ScriptReference.Assembly%2A> properties.","nodes":[{"content":"If no <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptReferenceBase.Path%2A&gt;</ph> value is specified, the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control searches the directory that is defined by the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.ScriptPath%2A&gt;</ph> property and resolves script references by their <ph id=\"ph4\">&lt;xref:System.Web.UI.ScriptReference.Name%2A&gt;</ph> or <ph id=\"ph5\">&lt;xref:System.Web.UI.ScriptReference.Assembly%2A&gt;</ph> properties.","pos":[0,374],"source":"If no <xref:System.Web.UI.ScriptReferenceBase.Path%2A> value is specified, the <xref:System.Web.UI.ScriptManager> control searches the directory that is defined by the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property and resolves script references by their <xref:System.Web.UI.ScriptReference.Name%2A> or <xref:System.Web.UI.ScriptReference.Assembly%2A> properties."}]}],"pos":[227776,229007],"yaml":true,"extradata":"MT"},{"content":"The location where script files are stored. The default value is an empty string (\"\"), which is interpreted as a relative path.","nodes":[{"pos":[0,127],"content":"The location where script files are stored. The default value is an empty string (\"\"), which is interpreted as a relative path.","nodes":[{"content":"The location where script files are stored. The default value is an empty string (\"\"), which is interpreted as a relative path.","pos":[0,127],"nodes":[{"content":"The location where script files are stored.","pos":[0,43]},{"content":"The default value is an empty string (\"\"), which is interpreted as a relative path.","pos":[44,127]}]}]}],"pos":[229256,229384],"yaml":true},{"content":"Gets a <xref href=\"System.Web.UI.ScriptResourceMapping\"></xref> object.","nodes":[{"pos":[0,71],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptResourceMapping\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a <xref href=\"System.Web.UI.ScriptResourceMapping\"></xref> object."}],"pos":[230443,230515],"yaml":true},{"content":"The static <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> property returns a <xref:System.Web.UI.ScriptResourceMapping> object that can contain a collection of mappings that represent the location of the script resource (script redirection). This collection of mappings can be mapped based on names or name/assembly pairs, and it can point to a <xref:System.Web.UI.ScriptResourceDefinition> object.","nodes":[{"pos":[0,411],"content":"The static <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> property returns a <xref:System.Web.UI.ScriptResourceMapping> object that can contain a collection of mappings that represent the location of the script resource (script redirection). This collection of mappings can be mapped based on names or name/assembly pairs, and it can point to a <xref:System.Web.UI.ScriptResourceDefinition> object.","nodes":[{"content":"The static <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> property returns a <xref:System.Web.UI.ScriptResourceMapping> object that can contain a collection of mappings that represent the location of the script resource (script redirection). This collection of mappings can be mapped based on names or name/assembly pairs, and it can point to a <xref:System.Web.UI.ScriptResourceDefinition> object.","pos":[0,411],"nodes":[{"content":"The static <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A&gt;</ph> property returns a <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptResourceMapping&gt;</ph> object that can contain a collection of mappings that represent the location of the script resource (script redirection).","pos":[0,254],"source":"The static <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> property returns a <xref:System.Web.UI.ScriptResourceMapping> object that can contain a collection of mappings that represent the location of the script resource (script redirection)."},{"content":"This collection of mappings can be mapped based on names or name/assembly pairs, and it can point to a <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptResourceDefinition&gt;</ph> object.","pos":[255,411],"source":" This collection of mappings can be mapped based on names or name/assembly pairs, and it can point to a <xref:System.Web.UI.ScriptResourceDefinition> object."}]}]}],"pos":[230526,230938],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Web.UI.ScriptResourceMapping\"></xref> object.","nodes":[{"pos":[0,66],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptResourceMapping\"&gt;&lt;/xref&gt;</ph> object.","source":"A <xref href=\"System.Web.UI.ScriptResourceMapping\"></xref> object."}],"pos":[232688,232755],"yaml":true},{"content":"Gets a <xref href=\"System.Web.UI.ScriptReferenceCollection\"></xref> object that contains the <xref href=\"System.Web.UI.ScriptReference\"></xref> objects, each of which represents a script file rendered to the client.","nodes":[{"pos":[0,215],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptReferenceCollection\"&gt;&lt;/xref&gt;</ph> object that contains the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptReference\"&gt;&lt;/xref&gt;</ph> objects, each of which represents a script file rendered to the client.","source":"Gets a <xref href=\"System.Web.UI.ScriptReferenceCollection\"></xref> object that contains the <xref href=\"System.Web.UI.ScriptReference\"></xref> objects, each of which represents a script file rendered to the client."}],"pos":[233692,233908],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ScriptReference> objects, each of which represents a script file. The collection includes references to all the script files that ASP.NET needs for Ajax functionality, and to custom script files. Custom script files to render can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.  \n  \n You can add script files to the collection in markup by adding `asp:ScriptReference` elements to a `Scripts` node inside the `asp:ScriptManager` element on the page, as shown in the following example.  \n  \n```  \n<asp:ScriptManager ID=\"SM1\" runat=\"server\">  \n  <Scripts>  \n    <asp:ScriptReference Name=\"Script.js\" />  \n  </Scripts>  \n</asp:ScriptManager>  \n```  \n  \n You can also add a <xref:System.Web.UI.ScriptReference> object to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection programmatically by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ScriptReferenceCollection> class.  \n  \n The <xref:System.Web.UI.ScriptManager> control registers script files during the control's <xref:System.Web.UI.Control.PreRender> event.  \n  \n The <xref:System.Web.UI.ScriptManager.Scripts%2A> collection does not contain the core [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] scripts. The scripts in the core library are rendered automatically; they do not have to be registered with the <xref:System.Web.UI.ScriptManager> control. However, if you want to override a core script or any control script and substitute a different version of the script, you can add your version to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.","nodes":[{"pos":[0,490],"content":"The <xref:System.Web.UI.ScriptReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ScriptReference> objects, each of which represents a script file. The collection includes references to all the script files that ASP.NET needs for Ajax functionality, and to custom script files. Custom script files to render can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.","nodes":[{"content":"The <xref:System.Web.UI.ScriptReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ScriptReference> objects, each of which represents a script file. The collection includes references to all the script files that ASP.NET needs for Ajax functionality, and to custom script files. Custom script files to render can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.","pos":[0,490],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptReferenceCollection&gt;</ph> object that is returned by this property is a collection of <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptReference&gt;</ph> objects, each of which represents a script file.","pos":[0,196],"source":"The <xref:System.Web.UI.ScriptReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ScriptReference> objects, each of which represents a script file."},{"content":"The collection includes references to all the script files that ASP.NET needs for Ajax functionality, and to custom script files.","pos":[197,326]},{"content":"Custom script files to render can be defined in the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control or in an associated <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[327,490],"source":" Custom script files to render can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."}]}]},{"pos":[497,697],"content":"You can add script files to the collection in markup by adding <ph id=\"ph1\">`asp:ScriptReference`</ph> elements to a <ph id=\"ph2\">`Scripts`</ph> node inside the <ph id=\"ph3\">`asp:ScriptManager`</ph> element on the page, as shown in the following example.","source":"You can add script files to the collection in markup by adding `asp:ScriptReference` elements to a `Scripts` node inside the `asp:ScriptManager` element on the page, as shown in the following example."},{"pos":[864,1148],"content":"You can also add a <xref:System.Web.UI.ScriptReference> object to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection programmatically by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ScriptReferenceCollection> class.","nodes":[{"content":"You can also add a <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptReference&gt;</ph> object to the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.Scripts%2A&gt;</ph> collection programmatically by using the <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.Web.UI.ScriptReferenceCollection&gt;</ph> class.","pos":[0,284],"source":"You can also add a <xref:System.Web.UI.ScriptReference> object to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection programmatically by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ScriptReferenceCollection> class."}]},{"pos":[1155,1291],"content":"The <xref:System.Web.UI.ScriptManager> control registers script files during the control's <xref:System.Web.UI.Control.PreRender> event.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control registers script files during the control's <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> event.","pos":[0,136],"source":"The <xref:System.Web.UI.ScriptManager> control registers script files during the control's <xref:System.Web.UI.Control.PreRender> event."}]},{"pos":[1298,1821],"content":"The <xref:System.Web.UI.ScriptManager.Scripts%2A> collection does not contain the core [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] scripts. The scripts in the core library are rendered automatically; they do not have to be registered with the <xref:System.Web.UI.ScriptManager> control. However, if you want to override a core script or any control script and substitute a different version of the script, you can add your version to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.Scripts%2A&gt;</ph> collection does not contain the core <ph id=\"ph2\">[!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)]</ph> scripts.","pos":[0,167],"source":"The <xref:System.Web.UI.ScriptManager.Scripts%2A> collection does not contain the core [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] scripts."},{"content":"The scripts in the core library are rendered automatically; they do not have to be registered with the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control.","pos":[168,314],"source":" The scripts in the core library are rendered automatically; they do not have to be registered with the <xref:System.Web.UI.ScriptManager> control."},{"content":"However, if you want to override a core script or any control script and substitute a different version of the script, you can add your version to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.Scripts%2A&gt;</ph> collection.","pos":[315,523],"source":" However, if you want to override a core script or any control script and substitute a different version of the script, you can add your version to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection."}]}],"pos":[233919,235765],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.UI.ScriptReferenceCollection\"></xref> object of the <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,137],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptReferenceCollection\"&gt;&lt;/xref&gt;</ph> object of the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Web.UI.ScriptReferenceCollection\"></xref> object of the <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[236028,236166],"yaml":true},{"content":"Gets a <xref href=\"System.Web.UI.ServiceReferenceCollection\"></xref> object that contains a <xref href=\"System.Web.UI.ServiceReference\"></xref> object for each Web service that ASP.NET exposes on the client for Ajax functionality.","nodes":[{"pos":[0,230],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ServiceReferenceCollection\"&gt;&lt;/xref&gt;</ph> object that contains a <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ServiceReference\"&gt;&lt;/xref&gt;</ph> object for each Web service that ASP.NET exposes on the client for Ajax functionality.","source":"Gets a <xref href=\"System.Web.UI.ServiceReferenceCollection\"></xref> object that contains a <xref href=\"System.Web.UI.ServiceReference\"></xref> object for each Web service that ASP.NET exposes on the client for Ajax functionality."}],"pos":[237158,237389],"yaml":true},{"content":"The <xref:System.Web.UI.ServiceReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ServiceReference> objects, each of which represents a Web service that is registered with the <xref:System.Web.UI.ScriptManager> control . You can define services in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.  \n  \n You can add services to the collection in markup by adding an `asp:ServiceReference` element to a `Services` element inside the `asp:ScriptManager` instance on the page, as shown in the following example.  \n  \n```  \n<asp:ScriptManager ID=\"SM1\" runat=\"server\">  \n  <Services>  \n    <asp:ServiceReference Path=\"Service.asmx\" />  \n  </Services>  \n</asp:ScriptManager>  \n```  \n  \n You can also programmatically add a <xref:System.Web.UI.ServiceReference> object to the <xref:System.Web.UI.ScriptManager.Services%2A> collection by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ServiceReferenceCollection> class.  \n  \n Services are registered with the <xref:System.Web.UI.ScriptManager> during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","nodes":[{"pos":[0,413],"content":"The <xref:System.Web.UI.ServiceReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ServiceReference> objects, each of which represents a Web service that is registered with the <xref:System.Web.UI.ScriptManager> control . You can define services in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.","nodes":[{"content":"The <xref:System.Web.UI.ServiceReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ServiceReference> objects, each of which represents a Web service that is registered with the <xref:System.Web.UI.ScriptManager> control . You can define services in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.","pos":[0,413],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ServiceReferenceCollection&gt;</ph> object that is returned by this property is a collection of <ph id=\"ph2\">&lt;xref:System.Web.UI.ServiceReference&gt;</ph> objects, each of which represents a Web service that is registered with the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control .","pos":[0,270],"source":"The <xref:System.Web.UI.ServiceReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ServiceReference> objects, each of which represents a Web service that is registered with the <xref:System.Web.UI.ScriptManager> control ."},{"content":"You can define services in the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> control or in an associated <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManagerProxy&gt;</ph> control.","pos":[271,413],"source":" You can define services in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control."}]}]},{"pos":[420,624],"content":"You can add services to the collection in markup by adding an <ph id=\"ph1\">`asp:ServiceReference`</ph> element to a <ph id=\"ph2\">`Services`</ph> element inside the <ph id=\"ph3\">`asp:ScriptManager`</ph> instance on the page, as shown in the following example.","source":"You can add services to the collection in markup by adding an `asp:ServiceReference` element to a `Services` element inside the `asp:ScriptManager` instance on the page, as shown in the following example."},{"pos":[797,1084],"content":"You can also programmatically add a <xref:System.Web.UI.ServiceReference> object to the <xref:System.Web.UI.ScriptManager.Services%2A> collection by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ServiceReferenceCollection> class.","nodes":[{"content":"You can also programmatically add a <ph id=\"ph1\">&lt;xref:System.Web.UI.ServiceReference&gt;</ph> object to the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager.Services%2A&gt;</ph> collection by using the <ph id=\"ph3\">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.Web.UI.ServiceReferenceCollection&gt;</ph> class.","pos":[0,287],"source":"You can also programmatically add a <xref:System.Web.UI.ServiceReference> object to the <xref:System.Web.UI.ScriptManager.Services%2A> collection by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ServiceReferenceCollection> class."}]},{"pos":[1091,1233],"content":"Services are registered with the <xref:System.Web.UI.ScriptManager> during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.","nodes":[{"content":"Services are registered with the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> during the page's <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> life-cycle stage.","pos":[0,142],"source":"Services are registered with the <xref:System.Web.UI.ScriptManager> during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage."}]}],"pos":[237400,238656],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.UI.ServiceReferenceCollection\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ServiceReferenceCollection\"&gt;&lt;/xref&gt;</ph> object for the current <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Web.UI.ServiceReferenceCollection\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance."}],"pos":[238922,239070],"yaml":true},{"content":"Sets the browser focus to the control specified by ID.","nodes":[{"pos":[0,54],"content":"Sets the browser focus to the control specified by ID.","nodes":[{"content":"Sets the browser focus to the control specified by ID.","pos":[0,54]}]}],"pos":[240130,240185],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class. Both methods make the control with the specified ID the active control on the Web page. The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback. During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.  \n  \n If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control in the last call receives focus.","nodes":[{"pos":[0,613],"content":"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class. Both methods make the control with the specified ID the active control on the Web page. The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback. During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class. Both methods make the control with the specified ID the active control on the Web page. The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback. During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.","pos":[0,613],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SetFocus%2A&gt;</ph> method works like the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.SetFocus%2A&gt;</ph> method for the <ph id=\"ph3\">&lt;xref:System.Web.UI.Page&gt;</ph> class.","pos":[0,158],"source":"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class."},{"content":"Both methods make the control with the specified ID the active control on the Web page.","pos":[159,246]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SetFocus%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> class is used to set focus during an asynchronous postback.","pos":[247,406],"source":" The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback."},{"content":"During postbacks and when the page is first rendered, the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SetFocus%2A&gt;</ph> method calls the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.SetFocus%2A&gt;</ph> method of the <ph id=\"ph3\">&lt;xref:System.Web.UI.Page&gt;</ph> class.","pos":[407,613],"source":" During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class."}]}]},{"pos":[620,754],"content":"If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control in the last call receives focus.","nodes":[{"content":"If there are multiple calls to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SetFocus%2A&gt;</ph> method, the control in the last call receives focus.","pos":[0,134],"source":"If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control in the last call receives focus."}]}],"pos":[240196,240955],"yaml":true,"extradata":"MT"},{"content":"The ID of the control to receive focus.","nodes":[{"pos":[0,39],"content":"The ID of the control to receive focus.","nodes":[{"content":"The ID of the control to receive focus.","pos":[0,39]}]}],"pos":[241098,241138],"yaml":true},{"content":"Sets the browser focus to the specified control.","nodes":[{"pos":[0,48],"content":"Sets the browser focus to the specified control.","nodes":[{"content":"Sets the browser focus to the specified control.","pos":[0,48]}]}],"pos":[242162,242211],"yaml":true},{"content":"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class. Both methods make the specified control the active control on the Web page. The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback. During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.  \n  \n If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control specified in the last call receives focus.","nodes":[{"pos":[0,601],"content":"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class. Both methods make the specified control the active control on the Web page. The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback. During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.","nodes":[{"content":"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class. Both methods make the specified control the active control on the Web page. The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback. During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.","pos":[0,601],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SetFocus%2A&gt;</ph> method works like the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.SetFocus%2A&gt;</ph> method for the <ph id=\"ph3\">&lt;xref:System.Web.UI.Page&gt;</ph> class.","pos":[0,158],"source":"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class."},{"content":"Both methods make the specified control the active control on the Web page.","pos":[159,234]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SetFocus%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> class is used to set focus during an asynchronous postback.","pos":[235,394],"source":" The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback."},{"content":"During postbacks and when the page is first rendered, the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SetFocus%2A&gt;</ph> method calls the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.SetFocus%2A&gt;</ph> method of the <ph id=\"ph3\">&lt;xref:System.Web.UI.Page&gt;</ph> class.","pos":[395,601],"source":" During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class."}]}]},{"pos":[608,752],"content":"If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control specified in the last call receives focus.","nodes":[{"content":"If there are multiple calls to the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SetFocus%2A&gt;</ph> method, the control specified in the last call receives focus.","pos":[0,144],"source":"If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control specified in the last call receives focus."}]}],"pos":[242222,242979],"yaml":true,"extradata":"MT"},{"content":"The control to receive focus.","nodes":[{"pos":[0,29],"content":"The control to receive focus.","nodes":[{"content":"The control to receive focus.","pos":[0,29]}]}],"pos":[243143,243173],"yaml":true},{"content":"Gets a value that indicates whether the client supports partial-page rendering.","nodes":[{"pos":[0,79],"content":"Gets a value that indicates whether the client supports partial-page rendering.","nodes":[{"content":"Gets a value that indicates whether the client supports partial-page rendering.","pos":[0,79]}]}],"pos":[244199,244279],"yaml":true},{"content":"If the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is set to `false`, the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property returns `false`.  \n  \n The default check to determine whether partial-page rendering is supported returns `true` when the following conditions are true:  \n  \n-   The <xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A> property value must be greater than or equal to 1.0.  \n  \n-   The <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> property value must be greater than or equal to 1.0.  \n  \n-   The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property value must be set to `true`.  \n  \n When the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is explicitly set, these checks are not used.  \n  \n Control developers should use the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property to determine whether they should support partial-page rendering.","nodes":[{"pos":[0,188],"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A&gt;</ph> property returns <ph id=\"ph4\">`false`</ph>.","source":"If the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is set to `false`, the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property returns `false`."},{"pos":[195,324],"content":"The default check to determine whether partial-page rendering is supported returns <ph id=\"ph1\">`true`</ph> when the following conditions are true:","source":"The default check to determine whether partial-page rendering is supported returns `true` when the following conditions are true:"},{"pos":[334,460],"content":"The <xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A> property value must be greater than or equal to 1.0.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A&gt;</ph> property value must be greater than or equal to 1.0.","pos":[0,126],"source":"The <xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A> property value must be greater than or equal to 1.0."}]},{"pos":[470,600],"content":"The <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> property value must be greater than or equal to 1.0.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A&gt;</ph> property value must be greater than or equal to 1.0.","pos":[0,130],"source":"The <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> property value must be greater than or equal to 1.0."}]},{"pos":[610,724],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;</ph> property value must be set to <ph id=\"ph2\">`true`</ph>.","source":"The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property value must be set to `true`."},{"pos":[731,857],"content":"When the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is explicitly set, these checks are not used.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A&gt;</ph> property is explicitly set, these checks are not used.","pos":[0,126],"source":"When the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is explicitly set, these checks are not used."}]},{"pos":[864,1034],"content":"Control developers should use the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property to determine whether they should support partial-page rendering.","nodes":[{"content":"Control developers should use the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A&gt;</ph> property to determine whether they should support partial-page rendering.","pos":[0,170],"source":"Control developers should use the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property to determine whether they should support partial-page rendering."}]}],"pos":[244290,245339],"yaml":true,"extradata":"MT"},{"content":"`true` if the client supports partial-page rendering; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,102],"content":"`true` if the client supports partial-page rendering; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the client supports partial-page rendering; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,73],"source":"`true` if the client supports partial-page rendering; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[74,102],"source":" The default value is `true`."}]}],"pos":[245528,245633],"yaml":true},{"content":"The <xref href=\"System.Web.UI.ScriptManager.EnablePartialRendering\"></xref> property is `false` and the <xref href=\"System.Web.UI.ScriptManager.SupportsPartialRendering\"></xref> property was set to `true`.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.ScriptManager.SupportsPartialRendering\"></xref> property was set after the <xref href=\"System.Web.UI.Control.Init\"></xref> event.","nodes":[{"pos":[0,205],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.EnablePartialRendering\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">`false`</ph> and the <ph id=\"ph3\">&lt;xref href=\"System.Web.UI.ScriptManager.SupportsPartialRendering\"&gt;&lt;/xref&gt;</ph> property was set to <ph id=\"ph4\">`true`</ph>.","source":"The <xref href=\"System.Web.UI.ScriptManager.EnablePartialRendering\"></xref> property is `false` and the <xref href=\"System.Web.UI.ScriptManager.SupportsPartialRendering\"></xref> property was set to `true`."},{"pos":[212,219],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[226,385],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.SupportsPartialRendering\"&gt;&lt;/xref&gt;</ph> property was set after the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.Control.Init\"&gt;&lt;/xref&gt;</ph> event.","source":"The <xref href=\"System.Web.UI.ScriptManager.SupportsPartialRendering\"></xref> property was set after the <xref href=\"System.Web.UI.Control.Init\"></xref> event."}],"pos":[245823,246224],"yaml":true},{"content":"Overrides the <xref href=\"System.Web.UI.Control.Visible\"></xref> property that is inherited from the base <xref href=\"System.Web.UI.Control\"></xref> class to prevent setting this value.","nodes":[{"pos":[0,185],"content":"Overrides the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Control.Visible\"&gt;&lt;/xref&gt;</ph> property that is inherited from the base <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.Control\"&gt;&lt;/xref&gt;</ph> class to prevent setting this value.","source":"Overrides the <xref href=\"System.Web.UI.Control.Visible\"></xref> property that is inherited from the base <xref href=\"System.Web.UI.Control\"></xref> class to prevent setting this value."}],"pos":[247146,247332],"yaml":true},{"content":"The <xref:System.Web.UI.Control.Visible%2A> property is overridden in the <xref:System.Web.UI.ScriptManager> class to prevent setting this value. A <xref:System.NotImplementedException> error occurs if a value is assigned to this property.","nodes":[{"pos":[0,239],"content":"The <xref:System.Web.UI.Control.Visible%2A> property is overridden in the <xref:System.Web.UI.ScriptManager> class to prevent setting this value. A <xref:System.NotImplementedException> error occurs if a value is assigned to this property.","nodes":[{"content":"The <xref:System.Web.UI.Control.Visible%2A> property is overridden in the <xref:System.Web.UI.ScriptManager> class to prevent setting this value. A <xref:System.NotImplementedException> error occurs if a value is assigned to this property.","pos":[0,239],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.Visible%2A&gt;</ph> property is overridden in the <ph id=\"ph2\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> class to prevent setting this value.","pos":[0,145],"source":"The <xref:System.Web.UI.Control.Visible%2A> property is overridden in the <xref:System.Web.UI.ScriptManager> class to prevent setting this value."},{"content":"A <ph id=\"ph1\">&lt;xref:System.NotImplementedException&gt;</ph> error occurs if a value is assigned to this property.","pos":[146,239],"source":" A <xref:System.NotImplementedException> error occurs if a value is assigned to this property."}]}]}],"pos":[247343,247583],"yaml":true,"extradata":"MT"},{"content":"`true` in all cases.","nodes":[{"pos":[0,20],"content":"<ph id=\"ph1\">`true`</ph> in all cases.","source":"`true` in all cases."}],"pos":[247764,247787],"yaml":true},{"content":"A value is assigned to the <xref href=\"System.Web.UI.ScriptManager.Visible\"></xref> property.","nodes":[{"pos":[0,93],"content":"A value is assigned to the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager.Visible\"&gt;&lt;/xref&gt;</ph> property.","source":"A value is assigned to the <xref href=\"System.Web.UI.ScriptManager.Visible\"></xref> property."}],"pos":[247956,248050],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\"></xref>.","nodes":[{"pos":[0,173],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\"></xref>."}],"pos":[249467,249641],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.","nodes":[{"pos":[0,199],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.","pos":[0,199],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> interface.","pos":[60,199],"source":" It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface."}]}]}],"pos":[249652,249852],"yaml":true,"extradata":"MT"},{"content":"The key-identifier for the control.","nodes":[{"pos":[0,35],"content":"The key-identifier for the control.","nodes":[{"content":"The key-identifier for the control.","pos":[0,35]}]}],"pos":[250086,250122],"yaml":true},{"content":"A collection of all incoming post data.","nodes":[{"pos":[0,39],"content":"A collection of all incoming post data.","nodes":[{"content":"A collection of all incoming post data.","pos":[0,39]}]}],"pos":[250229,250269],"yaml":true},{"content":"`true` if the <xref href=\"System.Web.UI.ScriptManager\"></xref> control's state has changed as a result of a postback; otherwise, `false`.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control's state has changed as a result of a postback; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Web.UI.ScriptManager\"></xref> control's state has changed as a result of a postback; otherwise, `false`."}],"pos":[250327,250469],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent\"></xref>.","nodes":[{"pos":[0,120],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent\"></xref>."}],"pos":[251726,251847],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.","nodes":[{"pos":[0,199],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.","pos":[0,199],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Web.UI.ScriptManager&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.Web.UI.IPostBackDataHandler&gt;</ph> interface.","pos":[60,199],"source":" It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface."}]}]}],"pos":[251858,252058],"yaml":true,"extradata":"MT"},{"content":"Enables the <xref href=\"System.Web.UI.ScriptManager\"></xref> control to process a postback event and load the history state of the Web page.","nodes":[{"pos":[0,140],"content":"Enables the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.ScriptManager\"&gt;&lt;/xref&gt;</ph> control to process a postback event and load the history state of the Web page.","source":"Enables the <xref href=\"System.Web.UI.ScriptManager\"></xref> control to process a postback event and load the history state of the Web page."}],"pos":[253453,253594],"yaml":true},{"content":"A string of key/value pairs that represent the history state of the Web page.","nodes":[{"pos":[0,77],"content":"A string of key/value pairs that represent the history state of the Web page.","nodes":[{"content":"A string of key/value pairs that represent the history state of the Web page.","pos":[0,77]}]}],"pos":[253772,253850],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.ScriptManager\n  commentId: T:System.Web.UI.ScriptManager\n  id: ScriptManager\n  children:\n  - System.Web.UI.ScriptManager.#ctor\n  - System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)\n  - System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)\n  - System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)\n  - System.Web.UI.ScriptManager.AjaxFrameworkAssembly\n  - System.Web.UI.ScriptManager.AjaxFrameworkMode\n  - System.Web.UI.ScriptManager.AllowCustomErrorsRedirect\n  - System.Web.UI.ScriptManager.AsyncPostBackError\n  - System.Web.UI.ScriptManager.AsyncPostBackErrorMessage\n  - System.Web.UI.ScriptManager.AsyncPostBackSourceElementID\n  - System.Web.UI.ScriptManager.AsyncPostBackTimeout\n  - System.Web.UI.ScriptManager.AuthenticationService\n  - System.Web.UI.ScriptManager.ClientNavigateHandler\n  - System.Web.UI.ScriptManager.CompositeScript\n  - System.Web.UI.ScriptManager.EmptyPageUrl\n  - System.Web.UI.ScriptManager.EnableCdn\n  - System.Web.UI.ScriptManager.EnableCdnFallback\n  - System.Web.UI.ScriptManager.EnableHistory\n  - System.Web.UI.ScriptManager.EnablePageMethods\n  - System.Web.UI.ScriptManager.EnablePartialRendering\n  - System.Web.UI.ScriptManager.EnableScriptGlobalization\n  - System.Web.UI.ScriptManager.EnableScriptLocalization\n  - System.Web.UI.ScriptManager.EnableSecureHistoryState\n  - System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)\n  - System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations\n  - System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks\n  - System.Web.UI.ScriptManager.GetRegisteredDisposeScripts\n  - System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes\n  - System.Web.UI.ScriptManager.GetRegisteredHiddenFields\n  - System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements\n  - System.Web.UI.ScriptManager.GetRegisteredStartupScripts\n  - System.Web.UI.ScriptManager.GetStateString\n  - System.Web.UI.ScriptManager.IsDebuggingEnabled\n  - System.Web.UI.ScriptManager.IsInAsyncPostBack\n  - System.Web.UI.ScriptManager.IsNavigating\n  - System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.UI.ScriptManager.LoadScriptsBeforeUI\n  - System.Web.UI.ScriptManager.Navigate\n  - System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)\n  - System.Web.UI.ScriptManager.OnInit(System.EventArgs)\n  - System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)\n  - System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)\n  - System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)\n  - System.Web.UI.ScriptManager.ProfileService\n  - System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)\n  - System.Web.UI.ScriptManager.RaisePostDataChangedEvent\n  - System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)\n  - System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)\n  - System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)\n  - System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  - System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  - System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)\n  - System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)\n  - System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)\n  - System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)\n  - System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)\n  - System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\n  - System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)\n  - System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)\n  - System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)\n  - System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)\n  - System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)\n  - System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)\n  - System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)\n  - System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)\n  - System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)\n  - System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)\n  - System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)\n  - System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)\n  - System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)\n  - System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  - System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  - System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.ScriptManager.ResolveCompositeScriptReference\n  - System.Web.UI.ScriptManager.ResolveScriptReference\n  - System.Web.UI.ScriptManager.RoleService\n  - System.Web.UI.ScriptManager.ScriptMode\n  - System.Web.UI.ScriptManager.ScriptPath\n  - System.Web.UI.ScriptManager.ScriptResourceMapping\n  - System.Web.UI.ScriptManager.Scripts\n  - System.Web.UI.ScriptManager.Services\n  - System.Web.UI.ScriptManager.SetFocus(System.String)\n  - System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)\n  - System.Web.UI.ScriptManager.SupportsPartialRendering\n  - System.Web.UI.ScriptManager.Visible\n  - System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent\n  - System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  langs:\n  - csharp\n  name: ScriptManager\n  nameWithType: ScriptManager\n  fullName: System.Web.UI.ScriptManager\n  type: Class\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Manages ASP.NET Ajax script libraries and script files, partial-page rendering, and client proxy class generation for Web and application services.\n  remarks: \"In this topic:  \\n  \\n-   [Introduction](#introduction)  \\n  \\n-   [Partial-Page Rendering](#partial_page_rendering)  \\n  \\n-   [Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components](#using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components)  \\n  \\n-   [Script Management and Registration](#script_management_and_registration)  \\n  \\n-   [Web Service References](#web_service_references)  \\n  \\n-   [Localization](#localization)  \\n  \\n-   [Error Handling](#error_handling)  \\n  \\n-   [Declarative Syntax](#declarative_syntax)  \\n  \\n<a name=\\\"introduction\\\"></a>   \\n## Introduction  \\n The <xref:System.Web.UI.ScriptManager> control is central to Ajax functionality in ASP.NET. The control manages all ASP.NET Ajax resources on a page. This includes downloading [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] scripts to the browser and coordinating partial-page updates that are enabled by using <xref:System.Web.UI.UpdatePanel> controls. In addition, the <xref:System.Web.UI.ScriptManager> control enables you to do the following:  \\n  \\n-   Register script that is compatible with partial-page updates. In order to manage dependencies between your script and the core library, any script that you register is loaded after the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] script.  \\n  \\n-   Specify whether release or debug scripts are sent to the browser.  \\n  \\n-   Provide access to Web service methods from script by registering Web services with the <xref:System.Web.UI.ScriptManager> control.  \\n  \\n-   Provide access to ASP.NET authentication, role, and profile application services from client script by registering these services with the <xref:System.Web.UI.ScriptManager> control.  \\n  \\n-   Enable culture-specific display of ECMAScript (JavaScript) , , and  functions in the browser.  \\n  \\n-   Access localization resources for embedded script files or for stand-alone script files by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> control.  \\n  \\n-   Register server controls that implement the <xref:System.Web.UI.IExtenderControl> or <xref:System.Web.UI.IScriptControl> interfaces with the <xref:System.Web.UI.ScriptManager> control so that script required by client components and behaviors is rendered.  \\n  \\n<a name=\\\"partial_page_rendering\\\"></a>   \\n## Partial-Page Rendering  \\n The ability of an ASP.NET page to support partial-page rendering is controlled by the following factors:  \\n  \\n-   The <xref:System.Web.UI.ScriptManager> control's <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property must be `true` (the default value).  \\n  \\n-   There must be at least one <xref:System.Web.UI.UpdatePanel> control on the page.  \\n  \\n-   The <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property must be `true` (the default value). If the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is not set explicitly, its value is based on browser capabilities.  \\n  \\n You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event. If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.  \\n  \\n When partial-page rendering is supported, the <xref:System.Web.UI.ScriptManager> control renders script to enable asynchronous postbacks and partial-page updates. The regions of the page to be updated are designated by using <xref:System.Web.UI.UpdatePanel> controls. The <xref:System.Web.UI.ScriptManager> control handles the asynchronous postbacks and refreshes only the regions of the page that have to be updated. For more information about partial-page rendering, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49). For more information about the conditions that cause an update, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a).  \\n  \\n<a name=\\\"using_the_scriptmanager_control_with_master_pages__user_controls__and_other_child_components\\\"></a>   \\n## Using the ScriptManager Control with Master Pages, User Controls, and Other Child Components  \\n A page can contain only one <xref:System.Web.UI.ScriptManager> control in its hierarchy. To register services and scripts for nested pages, user controls, or components when the parent page already has a <xref:System.Web.UI.ScriptManager> control, use the <xref:System.Web.UI.ScriptManagerProxy> control. For more information, see [Using the UpdatePanel Control with Master Pages](http://msdn.microsoft.com/library/b1c974d5-a6b2-4bb3-a3cc-61dd9dc0e1d6)  \\n  \\n<a name=\\\"script_management_and_registration\\\"></a>   \\n## Script Management and Registration  \\n The <xref:System.Web.UI.ScriptManager> control enables you to register script that is then rendered as part of the page. The <xref:System.Web.UI.ScriptManager> control registration methods can be broken into the following three categories:  \\n  \\n-   Registration methods that guarantee that script dependencies on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] are maintained.  \\n  \\n-   Registration methods that are not dependent on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)], but that are compatible with <xref:System.Web.UI.UpdatePanel> controls.  \\n  \\n-   Registration methods that support working with <xref:System.Web.UI.UpdatePanel> controls.  \\n  \\n For more information about how to create and use Ajax script in ASP.NET, see [Creating Custom Client Script by Using the Microsoft Ajax Library](http://msdn.microsoft.com/library/285e3a65-b42e-42c5-952d-baf184057899).  \\n  \\n### Registering Script That Is Dependent on the Microsoft Ajax Library  \\n You can use the following methods to register script files in a way that guarantees that any dependencies on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] are maintained.  \\n  \\n|Method|Definition|  \\n|------------|----------------|  \\n|<xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A>|Registers a server control that implements the <xref:System.Web.UI.IScriptControl> interface that is used to define a  client object. The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A>|Registers a server control that implements the <xref:System.Web.UI.IExtenderControl> interface that is used to define a  client object. The <xref:System.Web.UI.ScriptManager> control renders script that supports the client object.|  \\n  \\n### Registering Partial-Page Update Compatible Scripts  \\n You can use the following methods to register script files that are not dependent on the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] but that are compatible with <xref:System.Web.UI.UpdatePanel> controls. These methods correspond to similar methods of the <xref:System.Web.UI.ClientScriptManager> control. If you are rendering script for use inside an <xref:System.Web.UI.UpdatePanel> control, make sure that you call the methods of the <xref:System.Web.UI.ScriptManager> control.  \\n  \\n|Method|Definition|  \\n|------------|----------------|  \\n|<xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A>|Adds a value to a JavaScript array. If the array does not exist, it is created.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A>|Renders a `script` element after the page's opening `<form>` tag. The script is specified as a string parameter.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A>|Renders a `script` element after the page's opening `<form>` tag. The script content is specified by setting the `src` attribute to a URL that points to a script file.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A>|Renders a `script` element after the page's opening `<form>` tag. The script content is specified with a resource name in an assembly. The `src` attribute is automatically populated with a URL by a call to an HTTP handler that retrieves the named script from the assembly.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>|Renders a custom name/value attribute pair (an expando) in the markup for a specified control.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A>|Renders a hidden field.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>|Registers a script that is executed in response to the `form` element's `submit` event. The `onSubmit` attribute references the specified script.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>|Renders a startup script block just before the page's closing `</form>` tag. The script to render is specified as a string parameter.|  \\n  \\n When you register methods, you specify a type/key pair for that script. If a script with the same type/key pair is already registered, a new script is not registered. Similarly, if you register a script with a type/resource name pair that already exists, the `script` element that references the resource is not added again. When you register an expando attribute of a previously registered attribute, an exception is thrown. Duplicate registration of array values is allowed.  \\n  \\n When you call the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> or the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method, avoid registering script that executes inline functions. Instead, register script that contains function definitions like event handlers or custom class definitions for your application.  \\n  \\n### Registration Methods for UpdatePanel Controls  \\n You can use the following methods to customize partial-page updates when you use <xref:System.Web.UI.UpdatePanel> controls.  \\n  \\n|Method|Definition|  \\n|------------|----------------|  \\n|<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>|Registers a control as a trigger for asynchronous postbacks.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterDataItem%2A>|Sends custom data to controls during partial-page rendering.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterDispose%2A>|Registers a dispose script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control. The script is executed when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted. The dispose method is used for client components that are part of the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] and that have to free resources when a component is no longer used.|  \\n|<xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A>|Registers a control as a trigger for a full postback. This method is used for controls inside an <xref:System.Web.UI.UpdatePanel> control that would otherwise perform asynchronous postbacks.|  \\n  \\n<a name=\\\"web_service_references\\\"></a>   \\n## Web Service References  \\n You can register a Web service to be called from client script by creating a <xref:System.Web.UI.ServiceReference> object and adding it to the <xref:System.Web.UI.ScriptManager.Services%2A> collection of the <xref:System.Web.UI.ScriptManager> control. ASP.NET generates a client proxy object for each <xref:System.Web.UI.ServiceReference> object in the <xref:System.Web.UI.ScriptManager.Services%2A> collection. You can programmatically add <xref:System.Web.UI.ServiceReference> objects to the <xref:System.Web.UI.ScriptManager.Services%2A> collection to register Web services at run time.  \\n  \\n For more information about how to access Web services in script, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8) and [Calling Web Services from Client Script in ASP.NET AJAX](http://msdn.microsoft.com/en-us/fc06c224-f01a-45be-94af-bd71afbc07b0).  \\n  \\n<a name=\\\"localization\\\"></a>   \\n## Localization  \\n The <xref:System.Web.UI.ScriptManager> control generates references in the rendered page that point to the appropriate localized script files, which are either script files embedded in assemblies or stand-alone script files.  \\n  \\n When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> control retrieves localized resources (such as localized strings) for the current culture, if they exist. The <xref:System.Web.UI.ScriptManager> control provides the following functionality for using localized resources:  \\n  \\n-   **Script files that are embedded in an assembly**. The <xref:System.Web.UI.ScriptManager> control determines which culture-specific or fallback-culture script file to send to the browser. It does this by using the culture-specific <xref:System.Resources.NeutralResourcesLanguageAttribute> assembly attribute, the resources packaged with the assembly, and the UI culture of the browser (if any).  \\n  \\n-   **Stand-alone script files**. The <xref:System.Web.UI.ScriptManager> control defines the list of UI cultures that are supported by using the <xref:System.Web.UI.ScriptReferenceBase.ResourceUICultures%2A> property of the <xref:System.Web.UI.ScriptReference> object.  \\n  \\n-   **In debug mode**. The <xref:System.Web.UI.ScriptManager> control tries to render a culture-specific script file that contains debug information. For example, if the page is in debug mode and the current culture is set to en-MX, the control renders a script file that has a name such as `scriptname`.en-MX.debug.js, if the file exists. If the file does not exist, the debug file for the appropriate fallback culture is rendered  \\n  \\n For more information about how to localize resources, see [Localizing Resources for Component Libraries Overview](http://msdn.microsoft.com/library/e6b15435-57c1-4dd1-9bd3-5d4c509685bb).  \\n  \\n<a name=\\\"error_handling\\\"></a>   \\n## Error Handling  \\n When a page error occurs during asynchronous postbacks, the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised. The way in which errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file. For more information, see [Customizing Error Handling for UpdatePanel Controls](http://msdn.microsoft.com/library/e15e7ffb-e4b2-4a89-b99e-16624a5861d0).  \\n  \\n<a name=\\\"declarative_syntax\\\"></a>   \\n## Declarative Syntax  \\n  \\n```  \\n<asp:ScriptManager  \\n    AllowCustomErrorsRedirect=\\\"True|False\\\"  \\n    AsyncPostBackErrorMessage=\\\"string\\\"  \\n    AsyncPostBackTimeout=\\\"integer\\\"  \\n    AuthenticationService-Path=\\\"uri\\\"  \\n    EnablePageMethods=\\\"True|False\\\"  \\n    EnablePartialRendering=\\\"True|False\\\"  \\n    EnableScriptGlobalization=\\\"True|False\\\"  \\n    EnableScriptLocalization=\\\"True|False\\\"  \\n    EnableTheming=\\\"True|False\\\"  \\n    EnableViewState=\\\"True|False\\\"  \\n    ID=\\\"string\\\"  \\n    LoadScriptsBeforeUI=\\\"True|False\\\"  \\n    OnAsyncPostBackError=\\\"AsyncPostBackError event handler\\\"  \\n    OnDataBinding=\\\"DataBinding event handler\\\"  \\n    OnDisposed=\\\"Disposed event handler\\\"  \\n    OnInit=\\\"Init event handler\\\"  \\n    OnLoad=\\\"Load event handler\\\"  \\n    OnPreRender=\\\"PreRender event handler\\\"  \\n    OnResolveScriptReference=\\\"ResolveScriptReference event handler\\\"  \\n    OnUnload=\\\"Unload event handler\\\"  \\n    ProfileService-LoadProperties=\\\"string\\\"  \\n    ProfileService-Path=\\\"uri\\\"  \\n    RoleService-LoadRoles=\\\"True|False\\\"  \\n    RoleService-Path=\\\"uri\\\"  \\n    runat=\\\"server\\\"  \\n    ScriptMode=\\\"Auto|Inherit|Debug|Release\\\"  \\n    ScriptPath=\\\"string\\\"  \\n    SkinID=\\\"string\\\"  \\n    SupportsPartialRendering=\\\"True|False\\\"  \\n    Visible=\\\"True|False\\\"  \\n>  \\n        <AuthenticationService  \\n            Path=\\\"uri\\\"  \\n        />  \\n        <ProfileService  \\n            LoadProperties=\\\"string\\\"  \\n            Path=\\\"uri\\\"  \\n        />  \\n        <RoleService  \\n            LoadRoles=\\\"True|False\\\"  \\n            Path=\\\"uri\\\"  \\n        />  \\n        <Scripts>  \\n            <asp:ScriptReference  \\n                Assembly=\\\"string\\\"  \\n                IgnoreScriptPath=\\\"True|False\\\"  \\n                Name=\\\"string\\\"  \\n                NotifyScriptLoaded=\\\"True|False\\\"  \\n                Path=\\\"string\\\"  \\n                ResourceUICultures=\\\"string\\\"  \\n                ScriptMode=\\\"Auto|Debug|Inherit|Release\\\"  \\n            />  \\n        </Scripts>  \\n        <Services>  \\n            <asp:ServiceReference  \\n                InlineScript=\\\"True|False\\\"  \\n                Path=\\\"string\\\"  \\n            />  \\n        </Services>  \\n</asp:ScriptManager>  \\n```\"\n  example:\n  - \"The following examples show different scenarios for using the <xref:System.Web.UI.ScriptManager> control.  \\n  \\n **Enabling Partial-Page Updates**  \\n  \\n The following example shows how to use the <xref:System.Web.UI.ScriptManager> control to enable partial-page updates. In this example, a <xref:System.Web.UI.WebControls.Calendar> and a <xref:System.Web.UI.WebControls.DropDownList> control are inside an <xref:System.Web.UI.UpdatePanel> control. By default, the value of the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, and the value of the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true`. Therefore, child controls of the panel cause an asynchronous postback.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  -->  \\n  \\n **Handling Partial-Page Update Errors and Registering Script**  \\n  \\n The following example shows how to provide custom error handling during partial-page updates. By default, when an error occurs during partial-page updates, a JavaScript message box is displayed. This example demonstrates how to use custom error handling by providing a handler for the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event, and by setting the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property in the event handler. You can also set the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property to specify how the custom errors section of the Web.config file is used when an error occurs during partial-page updates. In this example, the default value of the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property is used. This means that if the Web.config file contains a  element, that element determines how errors are displayed. For more information, see [customErrors Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/288c32e2-df1f-4548-abda-de6b4cb989a6).  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/CS/default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.OnAsyncPostBackError#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.OnAsyncPostBackError/VB/default.aspx#1)]  -->  \\n  \\n **Globalizing the Date and Time That Are Displayed in the Browser**  \\n  \\n The following example shows how to set the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property so that client script can display a culture-specific date and time in the browser. In the example, the `Culture` attribute of the  directive is set to `auto`. As a result, the first language that is specified in the current browser settings determines the culture and UI culture for the page. For more information, see [How to: Set the Culture and UI Culture for ASP.NET Web Page Globalization](http://msdn.microsoft.com/library/76091f86-f967-4687-a40f-de87bd8cc9a0).  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/CS/default.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.EnableScriptGlobalization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.EnableScriptGlobalization/VB/default.aspx#1)]  -->\"\n  syntax:\n    content: >-\n      [System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), \"System.Web.Resources.ScriptManager.bmp\")]\n\n      public class ScriptManager : System.Web.UI.Control, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler\n  inheritance:\n  - System.Object\n  - System.Web.UI.Control\n  implements:\n  - System.Web.UI.IPostBackDataHandler\n  - System.Web.UI.IPostBackEventHandler\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Web.UI.Control.Adapter\n  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  - System.Web.UI.Control.AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.BindingContainer\n  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  - System.Web.UI.Control.ChildControlsCreated\n  - System.Web.UI.Control.ClearCachedClientID\n  - System.Web.UI.Control.ClearChildControlState\n  - System.Web.UI.Control.ClearChildState\n  - System.Web.UI.Control.ClearChildViewState\n  - System.Web.UI.Control.ClearEffectiveClientIDMode\n  - System.Web.UI.Control.ClientID\n  - System.Web.UI.Control.ClientIDMode\n  - System.Web.UI.Control.ClientIDSeparator\n  - System.Web.UI.Control.Context\n  - System.Web.UI.Control.Controls\n  - System.Web.UI.Control.CreateChildControls\n  - System.Web.UI.Control.CreateControlCollection\n  - System.Web.UI.Control.DataBind\n  - System.Web.UI.Control.DataBind(System.Boolean)\n  - System.Web.UI.Control.DataBindChildren\n  - System.Web.UI.Control.DataBinding\n  - System.Web.UI.Control.DataItemContainer\n  - System.Web.UI.Control.DataKeysContainer\n  - System.Web.UI.Control.DesignMode\n  - System.Web.UI.Control.Dispose\n  - System.Web.UI.Control.Disposed\n  - System.Web.UI.Control.EnableTheming\n  - System.Web.UI.Control.EnableViewState\n  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  - System.Web.UI.Control.EnsureChildControls\n  - System.Web.UI.Control.EnsureID\n  - System.Web.UI.Control.Events\n  - System.Web.UI.Control.FindControl(System.String)\n  - System.Web.UI.Control.FindControl(System.String,System.Int32)\n  - System.Web.UI.Control.Focus\n  - System.Web.UI.Control.GetDesignModeState\n  - System.Web.UI.Control.GetRouteUrl(System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  - System.Web.UI.Control.HasChildViewState\n  - System.Web.UI.Control.HasControls\n  - System.Web.UI.Control.HasEvents\n  - System.Web.UI.Control.ID\n  - System.Web.UI.Control.IdSeparator\n  - System.Web.UI.Control.Init\n  - System.Web.UI.Control.IsChildControlStateCleared\n  - System.Web.UI.Control.IsLiteralContent\n  - System.Web.UI.Control.IsTrackingViewState\n  - System.Web.UI.Control.IsViewStateEnabled\n  - System.Web.UI.Control.Load\n  - System.Web.UI.Control.LoadControlState(System.Object)\n  - System.Web.UI.Control.LoadViewState(System.Object)\n  - System.Web.UI.Control.LoadViewStateByID\n  - System.Web.UI.Control.MapPathSecure(System.String)\n  - System.Web.UI.Control.NamingContainer\n  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  - System.Web.UI.Control.OnLoad(System.EventArgs)\n  - System.Web.UI.Control.OnUnload(System.EventArgs)\n  - System.Web.UI.Control.OpenFile(System.String)\n  - System.Web.UI.Control.Page\n  - System.Web.UI.Control.Parent\n  - System.Web.UI.Control.PreRender\n  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  - System.Web.UI.Control.RenderingCompatibility\n  - System.Web.UI.Control.ResolveAdapter\n  - System.Web.UI.Control.ResolveClientUrl(System.String)\n  - System.Web.UI.Control.ResolveUrl(System.String)\n  - System.Web.UI.Control.SaveControlState\n  - System.Web.UI.Control.SaveViewState\n  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  - System.Web.UI.Control.Site\n  - System.Web.UI.Control.SkinID\n  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  - System.Web.UI.Control.TemplateControl\n  - System.Web.UI.Control.TemplateSourceDirectory\n  - System.Web.UI.Control.TrackViewState\n  - System.Web.UI.Control.UniqueID\n  - System.Web.UI.Control.Unload\n  - System.Web.UI.Control.ValidateRequestMode\n  - System.Web.UI.Control.ViewState\n  - System.Web.UI.Control.ViewStateIgnoresCase\n  - System.Web.UI.Control.ViewStateMode\n  extensionMethods:\n  - System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)\n  - System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)\n  - System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)\n  attributes:\n  - type: System.Drawing.ToolboxBitmapAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.#ctor\n  commentId: M:System.Web.UI.ScriptManager.#ctor\n  id: '#ctor'\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: ScriptManager()\n  nameWithType: ScriptManager.ScriptManager()\n  fullName: ScriptManager.ScriptManager()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.ScriptManager\"></xref> class.\n  remarks: This constructor initializes the internal fields that are used by the <xref:System.Web.UI.ScriptManager> control to track page, control, and deployment information.\n  syntax:\n    content: public ScriptManager ();\n    parameters: []\n  overload: System.Web.UI.ScriptManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)\n  commentId: M:System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)\n  id: AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AddHistoryPoint(NameValueCollection, String)\n  nameWithType: ScriptManager.AddHistoryPoint(NameValueCollection, String)\n  fullName: ScriptManager.AddHistoryPoint(NameValueCollection, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Creates a history point and adds it to the browser's history stack, using the specified state data collection and state title.\n  remarks: \"Use this method to create a history point when you want to save more than one key/value pair for the state data. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.  \\n  \\n You can use the state data to re-create the page when any subsequent server navigation event is raised. For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).\"\n  syntax:\n    content: public void AddHistoryPoint (System.Collections.Specialized.NameValueCollection state, string title);\n    parameters:\n    - id: state\n      type: System.Collections.Specialized.NameValueCollection\n      description: A collection of key/value pairs that contain the data for the state.\n    - id: title\n      type: System.String\n      description: The text that will be added to the browser's history stack as the title for this state.\n  overload: System.Web.UI.ScriptManager.AddHistoryPoint*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)\n  id: AddHistoryPoint(System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AddHistoryPoint(String, String)\n  nameWithType: ScriptManager.AddHistoryPoint(String, String)\n  fullName: ScriptManager.AddHistoryPoint(String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Creates a history point and adds it to the browser's history stack, using the specified state key and state value.\n  remarks: \"Use this method to create a history point when you only want to save a value to identify the state. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. The title of the Web page is used as the title of the state entry in the history stack.  \\n  \\n You can use the state data to re-create the page when any subsequent server navigation event is raised. For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).\"\n  syntax:\n    content: public void AddHistoryPoint (string key, string value);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key part of the key/value pair that identifies the state of the Web page.\n    - id: value\n      type: System.String\n      description: The value part of the key/value pair that identifies the state of the Web page.\n  overload: System.Web.UI.ScriptManager.AddHistoryPoint*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)\n  id: AddHistoryPoint(System.String,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AddHistoryPoint(String, String, String)\n  nameWithType: ScriptManager.AddHistoryPoint(String, String, String)\n  fullName: ScriptManager.AddHistoryPoint(String, String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Creates a history point and adds it to the browser's history stack, using the specified state key, state value, and state title.\n  remarks: \"Use this method to create a history point when you want to save a value to identify the state and a title for the state. When you create a history point, serialized and encrypted data is appended to the URL of the Web page and an entry is included in the browser's history stack. If the `title` parameter is `null`, the title of the Web page is used as the title of the state entry in the history stack.  \\n  \\n You can use the state data to re-create the page when any subsequent server navigation event is raised. For more information, see [Managing Browser History Using Server Controls](http://msdn.microsoft.com/library/bad617c8-f84c-4d94-8852-60af400810e9).\"\n  syntax:\n    content: public void AddHistoryPoint (string key, string value, string title);\n    parameters:\n    - id: key\n      type: System.String\n      description: The key part of the key/value pair that identifies the state of the Web page.\n    - id: value\n      type: System.String\n      description: The value part of the key/value pair that identifies the state of the Web page.\n    - id: title\n      type: System.String\n      description: The text that will be added to the browser's history stack as the title for this state.\n  overload: System.Web.UI.ScriptManager.AddHistoryPoint*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AjaxFrameworkAssembly\n  commentId: P:System.Web.UI.ScriptManager.AjaxFrameworkAssembly\n  id: AjaxFrameworkAssembly\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AjaxFrameworkAssembly\n  nameWithType: ScriptManager.AjaxFrameworkAssembly\n  fullName: ScriptManager.AjaxFrameworkAssembly\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets the Ajax framework assembly that components on the page use.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual System.Reflection.Assembly AjaxFrameworkAssembly { get; }\n    return:\n      type: System.Reflection.Assembly\n      description: The Ajax framework assembly.\n  overload: System.Web.UI.ScriptManager.AjaxFrameworkAssembly*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AjaxFrameworkMode\n  commentId: P:System.Web.UI.ScriptManager.AjaxFrameworkMode\n  id: AjaxFrameworkMode\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AjaxFrameworkMode\n  nameWithType: ScriptManager.AjaxFrameworkMode\n  fullName: ScriptManager.AjaxFrameworkMode\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that specifies how client scripts of the [!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)] client library will be included on the client.\n  remarks: Use the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to enable all [!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)] script files, to disable all [!INCLUDE[ajax_current_ext](~/includes/ajax-current-ext-md.md)] script files, or to explicitly include individual script files.\n  example:\n  - \"The following example shows how to set the <xref:System.Web.UI.ScriptManager.AjaxFrameworkMode%2A> property to `Explicit` in order to indicate that scripts can be explicitly specified.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"sm1\\\" AjaxFrameworkMode=\\\"Explicit\\\" runat=\\\"server\\\">   \\n<Scripts>   \\n    <asp:ScriptReference Name=\\\"MicrosoftAjaxCore.js\\\" />   \\n    <asp:ScriptReference Name=\\\"MicrosoftAjaxComponentModel.js\\\" />    \\n    <asp:ScriptReference Name=\\\"MicrosoftAjaxSerialization.js\\\" />   \\n    <asp:ScriptReference Name=\\\"MicrosoftAjaxNetwork.js\\\" />       \\n</Scripts>   \\n</asp:ScriptManager>  \\n```\"\n  syntax:\n    content: public System.Web.UI.AjaxFrameworkMode AjaxFrameworkMode { get; set; }\n    return:\n      type: System.Web.UI.AjaxFrameworkMode\n      description: An <xref href=\"System.Web.UI.AjaxFrameworkMode\"></xref> enumeration value.\n  overload: System.Web.UI.ScriptManager.AjaxFrameworkMode*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect\n  commentId: P:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect\n  id: AllowCustomErrorsRedirect\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AllowCustomErrorsRedirect\n  nameWithType: ScriptManager.AllowCustomErrorsRedirect\n  fullName: ScriptManager.AllowCustomErrorsRedirect\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that determines whether the custom errors section of the Web.config file is used during an error in an asynchronous postback.\n  remarks: The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.\n  syntax:\n    content: public bool AllowCustomErrorsRedirect { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, `false`. The default is `true`.'\n  overload: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AsyncPostBackError\n  commentId: E:System.Web.UI.ScriptManager.AsyncPostBackError\n  id: AsyncPostBackError\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AsyncPostBackError\n  nameWithType: ScriptManager.AsyncPostBackError\n  fullName: ScriptManager.AsyncPostBackError\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Occurs when there is a page error during an asynchronous postback.\n  remarks: The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.\n  example:\n  - \"The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  -->\"\n  syntax:\n    content: public event EventHandler<System.Web.UI.AsyncPostBackErrorEventArgs> AsyncPostBackError;\n    return:\n      type: System.EventHandler{System.Web.UI.AsyncPostBackErrorEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage\n  commentId: P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage\n  id: AsyncPostBackErrorMessage\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AsyncPostBackErrorMessage\n  nameWithType: ScriptManager.AsyncPostBackErrorMessage\n  fullName: ScriptManager.AsyncPostBackErrorMessage\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the error message that is sent to the client when an unhandled server exception occurs during an asynchronous postback.\n  remarks: The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.\n  example:\n  - \"The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  -->\"\n  syntax:\n    content: public string AsyncPostBackErrorMessage { get; set; }\n    return:\n      type: System.String\n      description: The error message. The default is an empty string (\"\").\n  overload: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID\n  commentId: P:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID\n  id: AsyncPostBackSourceElementID\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AsyncPostBackSourceElementID\n  nameWithType: ScriptManager.AsyncPostBackSourceElementID\n  fullName: ScriptManager.AsyncPostBackSourceElementID\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets the unique ID of the control that caused the asynchronous postback.\n  remarks: \"The <xref:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID%2A> property contains the value of the control ID that caused the asynchronous postback, which can be one of the following:  \\n  \\n-   A postback from a control that is inside an <xref:System.Web.UI.UpdatePanel> control whose <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is set to `true` (the default).  \\n  \\n-   A postback from a control that is a trigger for an <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n-   A postback from a control that is registered by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string AsyncPostBackSourceElementID { get; }\n    return:\n      type: System.String\n      description: The unique ID of a control, if the control has an ID; otherwise, an empty string (\"\").\n  overload: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AsyncPostBackTimeout\n  commentId: P:System.Web.UI.ScriptManager.AsyncPostBackTimeout\n  id: AsyncPostBackTimeout\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AsyncPostBackTimeout\n  nameWithType: ScriptManager.AsyncPostBackTimeout\n  fullName: ScriptManager.AsyncPostBackTimeout\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received.\n  syntax:\n    content: public int AsyncPostBackTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: An integer that represents the time-out in seconds. The default value is 90 seconds.\n  overload: System.Web.UI.ScriptManager.AsyncPostBackTimeout*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.AuthenticationService\n  commentId: P:System.Web.UI.ScriptManager.AuthenticationService\n  id: AuthenticationService\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: AuthenticationService\n  nameWithType: ScriptManager.AuthenticationService\n  fullName: ScriptManager.AuthenticationService\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.UI.AuthenticationServiceManager\"></xref> object that is associated with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  remarks: \"The <xref:System.Web.UI.AuthenticationServiceManager> object that is returned by this property represents the authentication service that is registered with the page. The authentication service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.  \\n  \\n You can use the ASP.NET authentication service or use a custom authentication service. You can add the custom service in markup by including an `AuthenticationService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"SM1\\\" runat=\\\"server\\\">  \\n  <AuthenticationService Path=\\\"MyAuthenticationService.asmx\\\" />  \\n</asp:ScriptManager>  \\n```  \\n  \\n You can also programmatically configure the <xref:System.Web.UI.AuthenticationServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.\"\n  syntax:\n    content: >-\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.AuthenticationServiceManager AuthenticationService { get; }\n    return:\n      type: System.Web.UI.AuthenticationServiceManager\n      description: The <xref href=\"System.Web.UI.AuthenticationServiceManager\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  overload: System.Web.UI.ScriptManager.AuthenticationService*\n  exceptions: []\n  attributes:\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.ClientNavigateHandler\n  commentId: P:System.Web.UI.ScriptManager.ClientNavigateHandler\n  id: ClientNavigateHandler\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: ClientNavigateHandler\n  nameWithType: ScriptManager.ClientNavigateHandler\n  fullName: ScriptManager.ClientNavigateHandler\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client.\n  syntax:\n    content: public string ClientNavigateHandler { get; set; }\n    return:\n      type: System.String\n      description: The name of the method that handles the [Sys.Application.navigate](http://msdn.microsoft.com/library/79ac04af-18b4-4106-9ab7-9cb10fbd0b93) event on the client.\n  overload: System.Web.UI.ScriptManager.ClientNavigateHandler*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.CompositeScript\n  commentId: P:System.Web.UI.ScriptManager.CompositeScript\n  id: CompositeScript\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: CompositeScript\n  nameWithType: ScriptManager.CompositeScript\n  fullName: ScriptManager.CompositeScript\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a reference to the composite script that supports the Web page.\n  remarks: For more information, see [Combining Client Scripts into a Composite Script](http://msdn.microsoft.com/en-us/d0f608d0-b4c8-4795-990b-ede68c1239b3).\n  syntax:\n    content: >-\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.CompositeScriptReference CompositeScript { get; }\n    return:\n      type: System.Web.UI.CompositeScriptReference\n      description: A reference to the composite script.\n  overload: System.Web.UI.ScriptManager.CompositeScript*\n  exceptions: []\n  attributes:\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.EmptyPageUrl\n  commentId: P:System.Web.UI.ScriptManager.EmptyPageUrl\n  id: EmptyPageUrl\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: EmptyPageUrl\n  nameWithType: ScriptManager.EmptyPageUrl\n  fullName: ScriptManager.EmptyPageUrl\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a URL to a blank Web page.\n  remarks: The <xref:System.Web.UI.ScriptManager.EmptyPageUrl%2A> property supports Ajax browser history.\n  syntax:\n    content: public virtual string EmptyPageUrl { get; set; }\n    return:\n      type: System.String\n      description: The URL to use if the target Web page is empty.\n  overload: System.Web.UI.ScriptManager.EmptyPageUrl*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.EnableCdn\n  commentId: P:System.Web.UI.ScriptManager.EnableCdn\n  id: EnableCdn\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: EnableCdn\n  nameWithType: ScriptManager.EnableCdn\n  fullName: ScriptManager.EnableCdn\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Determines whether the current page loads client script references from CDN (Content Delivery Network) paths.\n  remarks: Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> to `true` already.\n  syntax:\n    content: public bool EnableCdn { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if client script references are loaded from CDN paths, otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.EnableCdn*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.EnableCdnFallback\n  commentId: P:System.Web.UI.ScriptManager.EnableCdnFallback\n  id: EnableCdnFallback\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: EnableCdnFallback\n  nameWithType: ScriptManager.EnableCdnFallback\n  fullName: ScriptManager.EnableCdnFallback\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Enables local copy of a script to load in the event that the CDN (Content Delivery Network) is unavailable.\n  syntax:\n    content: public bool EnableCdnFallback { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the fallback CDN value is enabled; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.EnableCdnFallback*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.EnableHistory\n  commentId: P:System.Web.UI.ScriptManager.EnableHistory\n  id: EnableHistory\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: EnableHistory\n  nameWithType: ScriptManager.EnableHistory\n  fullName: ScriptManager.EnableHistory\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether the Web page supports history point management.\n  remarks: Use the <xref:System.Web.UI.ScriptManager.EnableHistory%2A> property to enable history management in a Web page.\n  syntax:\n    content: public bool EnableHistory { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` if the Web page supports adding history points to the browser's history stack; otherwise, `false`.\"\n  overload: System.Web.UI.ScriptManager.EnableHistory*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.EnablePageMethods\n  commentId: P:System.Web.UI.ScriptManager.EnablePageMethods\n  id: EnablePageMethods\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: EnablePageMethods\n  nameWithType: ScriptManager.EnablePageMethods\n  fullName: ScriptManager.EnablePageMethods\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether public static page methods in an ASP.NET page can be called from client script.\n  remarks: \"You can add static page methods to an ASP.NET page and mark them as Web methods. You can then call these methods from script as if they were part of a Web service, but without creating a separate .asmx file. To create Web methods on a page, import the <xref:System.Web.Services> namespace and add a <xref:System.Web.Services.WebMethodAttribute> attribute to each static method that you want to expose. The methods must be marked public.  \\n  \\n For more information, see [Exposing Web Services to Client Script in ASP.NET AJAX](http://msdn.microsoft.com/en-us/fe3f6e9e-0acd-44c9-bf0f-0a8598fc13b8).\"\n  syntax:\n    content: public bool EnablePageMethods { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, `false`. The default is `false`.'\n  overload: System.Web.UI.ScriptManager.EnablePageMethods*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.EnablePartialRendering\n  commentId: P:System.Web.UI.ScriptManager.EnablePartialRendering\n  id: EnablePartialRendering\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: EnablePartialRendering\n  nameWithType: ScriptManager.EnablePartialRendering\n  fullName: ScriptManager.EnablePartialRendering\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that enables partial rendering of a page, which in turn enables you to update regions of the page individually by using <xref href=\"System.Web.UI.UpdatePanel\"></xref> controls.\n  remarks: \"Even if the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is `true`, partial-page rendering might not occur. The browser might not support partial-page rendering, or the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is set to `false`.  \\n  \\n You can override the value of the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property at run time during or before the page's <xref:System.Web.UI.Control.Init> event. If you try to change this property after the page's <xref:System.Web.UI.Control.Init> event has occurred, an <xref:System.InvalidOperationException> exception is thrown.\"\n  syntax:\n    content: public bool EnablePartialRendering { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if partial rendering is enabled and full-page updates are suppressed; otherwise, `false`. The default is `true`.'\n  overload: System.Web.UI.ScriptManager.EnablePartialRendering*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.UI.ScriptManager.EnablePartialRendering\"></xref> property is set after the page's <xref href=\"System.Web.UI.Control.Init\"></xref> event occurs.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.EnableScriptGlobalization\n  commentId: P:System.Web.UI.ScriptManager.EnableScriptGlobalization\n  id: EnableScriptGlobalization\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: EnableScriptGlobalization\n  nameWithType: ScriptManager.EnableScriptGlobalization\n  fullName: ScriptManager.EnableScriptGlobalization\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.ScriptManager\"></xref> control renders script that supports parsing and formatting of culture-specific information.\n  remarks: When the <xref:System.Web.UI.ScriptManager.EnableScriptGlobalization%2A> property is set to `true`, globalized ECMAScript (JavaScript) functions such as the  method display culture-specific information. The culture can be set in the browser, in server code, or in the Web site's configuration file.\n  syntax:\n    content: public bool EnableScriptGlobalization { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if culture-specific information can be displayed; otherwise, `false`. The default value is `false`.'\n  overload: System.Web.UI.ScriptManager.EnableScriptGlobalization*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.EnableScriptLocalization\n  commentId: P:System.Web.UI.ScriptManager.EnableScriptLocalization\n  id: EnableScriptLocalization\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: EnableScriptLocalization\n  nameWithType: ScriptManager.EnableScriptLocalization\n  fullName: ScriptManager.EnableScriptLocalization\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether the <xref href=\"System.Web.UI.ScriptManager\"></xref> control renders localized versions of script files.\n  remarks: \"When the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property is set to `true`, the <xref:System.Web.UI.ScriptManager> object will retrieve script files for the current culture if they exist. For example, a page might specify a script file that is named CustomScript.js. If the culture is set to fr-CA, the <xref:System.Web.UI.ScriptManager> object will try to retrieve a script file that is named CustomScript.fr-CA.js.  \\n  \\n> [!NOTE]\\n>  To prevent a script file from being rendered two times, the <xref:System.Web.UI.ScriptManager.EnableScriptLocalization%2A> property must not be modified during an asynchronous postback.\"\n  syntax:\n    content: public bool EnableScriptLocalization { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if localized script files will be rendered; otherwise, `false`. The default value is `true`.'\n  overload: System.Web.UI.ScriptManager.EnableScriptLocalization*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.EnableSecureHistoryState\n  commentId: P:System.Web.UI.ScriptManager.EnableSecureHistoryState\n  id: EnableSecureHistoryState\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: EnableSecureHistoryState\n  nameWithType: ScriptManager.EnableSecureHistoryState\n  fullName: ScriptManager.EnableSecureHistoryState\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether to encrypt the history state string.\n  remarks: >-\n    > [!WARNING]\n\n    >  This property should ***never*** be set to `false` on a production web site.\n  syntax:\n    content: public bool EnableSecureHistoryState { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the history state string should be encrypted; otherwise, `false`. The default value is `true`.'\n  overload: System.Web.UI.ScriptManager.EnableSecureHistoryState*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)\n  commentId: M:System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)\n  id: GetCurrent(System.Web.UI.Page)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: GetCurrent(Page)\n  nameWithType: ScriptManager.GetCurrent(Page)\n  fullName: ScriptManager.GetCurrent(Page)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.UI.ScriptManager\"></xref> instance for a given <xref href=\"System.Web.UI.Page\"></xref> object.\n  remarks: Use this static method to determine whether a <xref:System.Web.UI.ScriptManager> control is on a page, or to access the properties and methods of a <xref:System.Web.UI.ScriptManager> control when you do not know its ID.\n  syntax:\n    content: public static System.Web.UI.ScriptManager GetCurrent (System.Web.UI.Page page);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The page instance to retrieve the <xref href=\"System.Web.UI.ScriptManager\"></xref> from.\n    return:\n      type: System.Web.UI.ScriptManager\n      description: The current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance for the selected <xref href=\"System.Web.UI.Page\"></xref> object, or `null` if no instance is defined.\n  overload: System.Web.UI.ScriptManager.GetCurrent*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>page</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations\n  commentId: M:System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations\n  id: GetRegisteredArrayDeclarations\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: GetRegisteredArrayDeclarations()\n  nameWithType: ScriptManager.GetRegisteredArrayDeclarations()\n  fullName: ScriptManager.GetRegisteredArrayDeclarations()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Retrieves a read-only collection of ECMAScript (JavaScript) array declarations that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredArrayDeclaration> GetRegisteredArrayDeclarations ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredArrayDeclaration}\n      description: A generic collection that contains the array declarations.\n  overload: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks\n  commentId: M:System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks\n  id: GetRegisteredClientScriptBlocks\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: GetRegisteredClientScriptBlocks()\n  nameWithType: ScriptManager.GetRegisteredClientScriptBlocks()\n  fullName: ScriptManager.GetRegisteredClientScriptBlocks()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Retrieves a read-only collection of client script blocks that were previously registered with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control.\n  remarks: Client script blocks are registered with the <xref:System.Web.UI.ScriptManager> control for use with a control that is inside an <xref:System.Web.UI.UpdatePanel> control.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredScript> GetRegisteredClientScriptBlocks ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredScript}\n      description: A generic collection that contains client script blocks.\n  overload: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts\n  commentId: M:System.Web.UI.ScriptManager.GetRegisteredDisposeScripts\n  id: GetRegisteredDisposeScripts\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: GetRegisteredDisposeScripts()\n  nameWithType: ScriptManager.GetRegisteredDisposeScripts()\n  fullName: ScriptManager.GetRegisteredDisposeScripts()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Retrieves a read-only collection of `dispose` scripts that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.\n  remarks: A `dispose` script executes when the <xref:System.Web.UI.UpdatePanel> control is updated or deleted.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredDisposeScript> GetRegisteredDisposeScripts ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredDisposeScript}\n      description: A generic collection that contains `dispose` scripts.\n  overload: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes\n  commentId: M:System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes\n  id: GetRegisteredExpandoAttributes\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: GetRegisteredExpandoAttributes()\n  nameWithType: ScriptManager.GetRegisteredExpandoAttributes()\n  fullName: ScriptManager.GetRegisteredExpandoAttributes()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Retrieves a read-only collection of custom (expando) attributes that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.\n  remarks: A custom attribute is a name/value pair that can be read and set by client script.\n  example:\n  - \"<xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>  \\n  \\n <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A>  \\n  \\n <xref:System.Web.UI.RegisteredExpandoAttribute>\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredExpandoAttribute> GetRegisteredExpandoAttributes ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredExpandoAttribute}\n      description: A generic collection that contains custom attributes.\n  overload: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.GetRegisteredHiddenFields\n  commentId: M:System.Web.UI.ScriptManager.GetRegisteredHiddenFields\n  id: GetRegisteredHiddenFields\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: GetRegisteredHiddenFields()\n  nameWithType: ScriptManager.GetRegisteredHiddenFields()\n  fullName: ScriptManager.GetRegisteredHiddenFields()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Retrieves a read-only collection of hidden fields that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredHiddenField> GetRegisteredHiddenFields ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredHiddenField}\n      description: A generic collection that contains hidden fields.\n  overload: System.Web.UI.ScriptManager.GetRegisteredHiddenFields*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements\n  commentId: M:System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements\n  id: GetRegisteredOnSubmitStatements\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: GetRegisteredOnSubmitStatements()\n  nameWithType: ScriptManager.GetRegisteredOnSubmitStatements()\n  fullName: ScriptManager.GetRegisteredOnSubmitStatements()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Retrieves a read-only collection of `onsubmit` statements that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.\n  remarks: An `onsubmit` statement is ECMAScript (JavaScript) that is executed when the form is submitted.\n  example:\n  - \"<xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A>  \\n  \\n <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredScript> GetRegisteredOnSubmitStatements ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredScript}\n      description: A generic collection that contains `onsubmit` statements.\n  overload: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.GetRegisteredStartupScripts\n  commentId: M:System.Web.UI.ScriptManager.GetRegisteredStartupScripts\n  id: GetRegisteredStartupScripts\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: GetRegisteredStartupScripts()\n  nameWithType: ScriptManager.GetRegisteredStartupScripts()\n  fullName: ScriptManager.GetRegisteredStartupScripts()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Retrieves a read-only collection of startup scripts that were previously registered with the <xref href=\"System.Web.UI.Page\"></xref> object.\n  remarks: A startup script is client script that is associated with a control that executes when the control is started.\n  example:\n  - \"<xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A>  \\n  \\n <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>  \\n  \\n <xref:System.Web.UI.ScriptManager.GetRegisteredStartupScripts%2A>\"\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredScript> GetRegisteredStartupScripts ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredScript}\n      description: A generic collection that contains startup scripts.\n  overload: System.Web.UI.ScriptManager.GetRegisteredStartupScripts*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.GetStateString\n  commentId: M:System.Web.UI.ScriptManager.GetStateString\n  id: GetStateString\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: GetStateString()\n  nameWithType: ScriptManager.GetStateString()\n  fullName: ScriptManager.GetStateString()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Retrieves a string that contains key/value pairs that represent the state of the Web page.\n  syntax:\n    content: public string GetStateString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string containing the key/value pairs that represent the state of the Web page.\n  overload: System.Web.UI.ScriptManager.GetStateString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.IsDebuggingEnabled\n  commentId: P:System.Web.UI.ScriptManager.IsDebuggingEnabled\n  id: IsDebuggingEnabled\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: IsDebuggingEnabled\n  nameWithType: ScriptManager.IsDebuggingEnabled\n  fullName: ScriptManager.IsDebuggingEnabled\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a value that indicates whether the debug versions of client script libraries will be rendered.\n  remarks: \"The <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> property returns `false` when any one of the following conditions is true:  \\n  \\n-   In the  element of the configuration file, the `retail` attribute is set to `true`. This overrides all other settings.  \\n  \\n-   The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Auto` or to `Inherit`, and debugging is not enabled in the `compilation` section of the application-root Web.config file.  \\n  \\n-   The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property is set to `Release`.  \\n  \\n    > [!NOTE]\\n    >  The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications. The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.  \\n  \\n For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsDebuggingEnabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the current request is executing in debug mode; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.IsDebuggingEnabled*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.IsInAsyncPostBack\n  commentId: P:System.Web.UI.ScriptManager.IsInAsyncPostBack\n  id: IsInAsyncPostBack\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: IsInAsyncPostBack\n  nameWithType: ScriptManager.IsInAsyncPostBack\n  fullName: ScriptManager.IsInAsyncPostBack\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a value that indicates whether the current postback is being executed in partial-rendering mode.\n  remarks: Use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property in combination with the <xref:System.Web.UI.Page.IsPostBack%2A> property to distinguish between the initial page load, a partial-page update, and a full-page update in <xref:System.Web.UI.Control.Load>, <xref:System.Web.UI.Page.InitComplete>, or <xref:System.Web.UI.Control.PreRender> events.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsInAsyncPostBack { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the current postback is executing in partial-rendering mode; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.IsInAsyncPostBack*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.IsNavigating\n  commentId: P:System.Web.UI.ScriptManager.IsNavigating\n  id: IsNavigating\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: IsNavigating\n  nameWithType: ScriptManager.IsNavigating\n  fullName: ScriptManager.IsNavigating\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a value that indicates whether a <xref href=\"System.Web.UI.ScriptManager.Navigate\"></xref> event is currently being handled.\n  remarks: Use the <xref:System.Web.UI.ScriptManager.IsNavigating%2A> property to determine whether the <xref:System.Web.UI.ScriptManager.Navigate> event has been raised.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsNavigating { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Web.UI.ScriptManager.Navigate\"></xref> is being handled; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.IsNavigating*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  id: LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: LoadPostData(String, NameValueCollection)\n  nameWithType: ScriptManager.LoadPostData(String, NameValueCollection)\n  fullName: ScriptManager.LoadPostData(String, NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Reads form data that is posted from the browser to the server, and determines the source of the asynchronous postback.\n  remarks: The <xref:System.Web.UI.ScriptManager.LoadPostData%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control.\n  syntax:\n    content: protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);\n    parameters:\n    - id: postDataKey\n      type: System.String\n      description: The key identifier for the control.\n    - id: postCollection\n      type: System.Collections.Specialized.NameValueCollection\n      description: The collection of all the incoming post data.\n    return:\n      type: System.Boolean\n      description: \"`true` if the <xref href=\\\"System.Web.UI.ScriptManager\\\"></xref> control's state has changed as a result of a postback; otherwise, `false`.\"\n  overload: System.Web.UI.ScriptManager.LoadPostData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.LoadScriptsBeforeUI\n  commentId: P:System.Web.UI.ScriptManager.LoadScriptsBeforeUI\n  id: LoadScriptsBeforeUI\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: LoadScriptsBeforeUI\n  nameWithType: ScriptManager.LoadScriptsBeforeUI\n  fullName: ScriptManager.LoadScriptsBeforeUI\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that indicates whether scripts are loaded before or after markup for the page UI is loaded.\n  remarks: \"The <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property determines how scripts in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection are loaded relative to the markup for the page UI.  \\n  \\n When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `true`, a `script` element is rendered before the page's UI markup is loaded. In this scenario, if UI elements are defined in scripts, the UI will be fully functional when it loads. However, if the script accesses UI elements in the markup for which instances have not yet been created, an error might occur. To make sure that UI elements are loaded before you access them, handle the  event of the  class.  \\n  \\n When the <xref:System.Web.UI.ScriptManager.LoadScriptsBeforeUI%2A> property is `false`, a `script` element is rendered after the page's UI markup is rendered. In this scenario, the UI loads more quickly, but it might not be fully functional if scripts that define additional UI elements have not finished loading.  \\n  \\n Do not set this property to `true` if you set <xref:System.Web.UI.ScriptManager.EnableCdn%2A> to `true` already.\"\n  syntax:\n    content: public bool LoadScriptsBeforeUI { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if scripts are loaded before markup for the UI is loaded; `false` if scripts are loaded after markup for the UI is loaded. The default is `true`.'\n  overload: System.Web.UI.ScriptManager.LoadScriptsBeforeUI*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.Navigate\n  commentId: E:System.Web.UI.ScriptManager.Navigate\n  id: Navigate\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: Navigate\n  nameWithType: ScriptManager.Navigate\n  fullName: ScriptManager.Navigate\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Occurs when the user clicks the browser's **Back** or **Forward** button.\n  remarks: When a user clicks the browser's **Back** button, the browser navigates through previously-viewed URLs, which can include URLs that contain history-point state data. If client code in the Web page detects that the URL contains history state data, it makes a request to the server page. This acts as a postback event, and the <xref:System.Web.UI.ScriptManagerProxy> server control raises the `Navigate` event. You can handle this event and re-create the page as required in the Web application by using the state data that is passed with the event.\n  syntax:\n    content: public event EventHandler<System.Web.UI.HistoryEventArgs> Navigate;\n    return:\n      type: System.EventHandler{System.Web.UI.HistoryEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)\n  commentId: M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)\n  id: OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: OnAsyncPostBackError(AsyncPostBackErrorEventArgs)\n  nameWithType: ScriptManager.OnAsyncPostBackError(AsyncPostBackErrorEventArgs)\n  fullName: ScriptManager.OnAsyncPostBackError(AsyncPostBackErrorEventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.ScriptManager.AsyncPostBackError\"></xref> event.\n  remarks: The <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event is raised when there is a page error during asynchronous postbacks. How errors on the server are sent to the client depends on the <xref:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect%2A> property, the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property, and the custom errors section of the Web.config file.\n  example:\n  - \"The following example shows how to handle the <xref:System.Web.UI.ScriptManager.AsyncPostBackError> event to set the <xref:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage%2A> property (which is sent to the client) to the server exception error message.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/CS/ScriptManager_AsyncPostBackErrorMessageCS.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.AsyncPostBackErrorMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.AsyncPostBackErrorMessage/VB/ScriptManager_AsyncPostBackErrorMessageVB.aspx#1)]  -->\"\n  syntax:\n    content: protected virtual void OnAsyncPostBackError (System.Web.UI.AsyncPostBackErrorEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.AsyncPostBackErrorEventArgs\n      description: The error event data.\n  overload: System.Web.UI.ScriptManager.OnAsyncPostBackError*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.OnInit(System.EventArgs)\n  commentId: M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)\n  id: OnInit(System.EventArgs)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: OnInit(EventArgs)\n  nameWithType: ScriptManager.OnInit(EventArgs)\n  fullName: ScriptManager.OnInit(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Control.Init\"></xref> event and makes sure that only one <xref href=\"System.Web.UI.ScriptManager\"></xref> control exists on the page.\n  syntax:\n    content: protected override void OnInit (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The event data.\n  overload: System.Web.UI.ScriptManager.OnInit*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: More than one instance of <xref href=\"System.Web.UI.ScriptManager\"></xref> exists on the page.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)\n  commentId: M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)\n  id: OnPreRender(System.EventArgs)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: OnPreRender(EventArgs)\n  nameWithType: ScriptManager.OnPreRender(EventArgs)\n  fullName: ScriptManager.OnPreRender(EventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event, and registers script files and services for partial-page updates.\n  remarks: For information about the DOM, see the [Document Object Model (DOM) Level 1 Specification](http://go.microsoft.com/fwlink/?LinkId=73305) on the World Wide Web Consortium (W3C) Web site.\n  syntax:\n    content: protected override void OnPreRender (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The event data.\n  overload: System.Web.UI.ScriptManager.OnPreRender*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The browser that made the partial-page request does not support at least DOM Level 1.0.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)\n  commentId: M:System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)\n  id: OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)\n  nameWithType: ScriptManager.OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)\n  fullName: ScriptManager.OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.ScriptManager.ResolveCompositeScriptReference\"></xref> event.\n  syntax:\n    content: protected virtual void OnResolveCompositeScriptReference (System.Web.UI.CompositeScriptReferenceEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.CompositeScriptReferenceEventArgs\n      description: An object that represents the composite script reference.\n  overload: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)\n  commentId: M:System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)\n  id: OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: OnResolveScriptReference(ScriptReferenceEventArgs)\n  nameWithType: ScriptManager.OnResolveScriptReference(ScriptReferenceEventArgs)\n  fullName: ScriptManager.OnResolveScriptReference(ScriptReferenceEventArgs)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises the <xref href=\"System.Web.UI.ScriptManager.ResolveScriptReference\"></xref> event for each script reference that is managed by the <xref href=\"System.Web.UI.ScriptManager\"></xref> control.\n  remarks: \"This method is called by the <xref:System.Web.UI.ScriptManager.OnPreRender%2A> event handler, one time for each <xref:System.Web.UI.ScriptReference> in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.  \\n  \\n The <xref:System.Web.UI.ScriptManager.ResolveScriptReference> event is raised after duplicate script entries have been resolved.  \\n  \\n Override this method to affect the behaviors of individual script blocks on postback or during partial-page updates.\"\n  syntax:\n    content: protected virtual void OnResolveScriptReference (System.Web.UI.ScriptReferenceEventArgs e);\n    parameters:\n    - id: e\n      type: System.Web.UI.ScriptReferenceEventArgs\n      description: An object that represents the current script.\n  overload: System.Web.UI.ScriptManager.OnResolveScriptReference*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.ProfileService\n  commentId: P:System.Web.UI.ScriptManager.ProfileService\n  id: ProfileService\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: ProfileService\n  nameWithType: ScriptManager.ProfileService\n  fullName: ScriptManager.ProfileService\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.UI.ProfileServiceManager\"></xref> object that is associated with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  remarks: \"The <xref:System.Web.UI.ProfileServiceManager> object that is returned by this property represents the profile service that is registered with the page. The profile service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.  \\n  \\n You can use the ASP.NET profile service or use a custom profile service. You can add the custom service in markup by including a `ProfileService` element inside the `asp:ScriptManager` element on the page, as shown in the following example.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"SM1\\\" runat=\\\"server\\\">  \\n  <ProfileService LoadProperties=\\\"propertyA,propertyB\\\"  \\n    Path=\\\"MyProfileService.asmx\\\" />  \\n</asp:ScriptManager>  \\n```  \\n  \\n You can also programmatically configure the <xref:System.Web.UI.ProfileServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.\"\n  syntax:\n    content: >-\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.ProfileServiceManager ProfileService { get; }\n    return:\n      type: System.Web.UI.ProfileServiceManager\n      description: The <xref href=\"System.Web.UI.ProfileServiceManager\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  overload: System.Web.UI.ScriptManager.ProfileService*\n  exceptions: []\n  attributes:\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)\n  commentId: M:System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)\n  id: RaisePostBackEvent(System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RaisePostBackEvent(String)\n  nameWithType: ScriptManager.RaisePostBackEvent(String)\n  fullName: ScriptManager.RaisePostBackEvent(String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Processes a postback event raised by the <xref href=\"System.Web.UI.ScriptManager\"></xref> control and loads the history state of the Web page.\n  syntax:\n    content: protected virtual void RaisePostBackEvent (string eventArgument);\n    parameters:\n    - id: eventArgument\n      type: System.String\n      description: A string of key/value pairs that represent the history state of the Web page.\n  overload: System.Web.UI.ScriptManager.RaisePostBackEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RaisePostDataChangedEvent\n  commentId: M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent\n  id: RaisePostDataChangedEvent\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RaisePostDataChangedEvent()\n  nameWithType: ScriptManager.RaisePostDataChangedEvent()\n  fullName: ScriptManager.RaisePostDataChangedEvent()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Raises events for the <xref href=\"System.Web.UI.ScriptManager\"></xref> control when it posts back to the server.\n  remarks: The <xref:System.Web.UI.ScriptManager.RaisePostDataChangedEvent%2A> method is primarily used by control developers to extend the functionality of the <xref:System.Web.UI.ScriptManager> control. For the default implementation of the <xref:System.Web.UI.ScriptManager> control, no events are raised.\n  syntax:\n    content: protected virtual void RaisePostDataChangedEvent ();\n    parameters: []\n  overload: System.Web.UI.ScriptManager.RaisePostDataChangedEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)\n  id: RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterArrayDeclaration(Control, String, String)\n  nameWithType: ScriptManager.RegisterArrayDeclaration(Control, String, String)\n  fullName: ScriptManager.RegisterArrayDeclaration(Control, String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers an ECMAScript (JavaScript) array declaration with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and adds the array to the page.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the array when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register an array every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.  \\n  \\n If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method determines whether an array with the name that is specified in the `arrayName` parameter is already registered. If so, the method adds the values specified in `arrayValue`. Because the array to be registered is based on the <xref:System.Collections.ArrayList> class, duplicates are allowed. If a registered array with the name in `arrayName` does not exist, the array is created and the values in `arrayValue` are added to it.  \\n  \\n To include string literals in the array, use single quotation marks (') or escaped double quotation marks (\\\\\\\\\\\") in `arrayValue`.  \\n  \\n Note that JavaScript treats a comma (,) as a delimiter in an array. You can specify multiple array values by passing a comma-delimited string in `arrayValue`. Separating two items with a comma in `arrayValue` is equivalent to calling the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method two times, one time for each item.\"\n  syntax:\n    content: public static void RegisterArrayDeclaration (System.Web.UI.Control control, string arrayName, string arrayValue);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is registering the array.\n    - id: arrayName\n      type: System.String\n      description: The name of the array to register.\n    - id: arrayValue\n      type: System.String\n      description: The array value or values to register.\n  overload: System.Web.UI.ScriptManager.RegisterArrayDeclaration*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>arrayName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)\n  id: RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterArrayDeclaration(Page, String, String)\n  nameWithType: ScriptManager.RegisterArrayDeclaration(Page, String, String)\n  fullName: ScriptManager.RegisterArrayDeclaration(Page, String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers an ECMAScript (JavaScript) array declaration with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and adds the array to the page.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%2A> method to register a client script array that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the array every time that an asynchronous postback occurs. To register an array for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the array is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterArrayDeclaration%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.  \\n  \\n If you want to register an array that does not pertain to partial-page updates, and if you want to register the array only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.\"\n  syntax:\n    content: public static void RegisterArrayDeclaration (System.Web.UI.Page page, string arrayName, string arrayValue);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The page object that is registering the array.\n    - id: arrayName\n      type: System.String\n      description: The name of the array to register.\n    - id: arrayValue\n      type: System.String\n      description: The array value or values to register.\n  overload: System.Web.UI.ScriptManager.RegisterArrayDeclaration*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>arrayName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)\n  commentId: M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)\n  id: RegisterAsyncPostBackControl(System.Web.UI.Control)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterAsyncPostBackControl(Control)\n  nameWithType: ScriptManager.RegisterAsyncPostBackControl(Control)\n  fullName: ScriptManager.RegisterAsyncPostBackControl(Control)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a control as a trigger for asynchronous postbacks.\n  remarks: \"The <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method enables you to register Web server controls as triggers so that they perform an asynchronous postback instead of a synchronous postback. When the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property of an <xref:System.Web.UI.UpdatePanel> control is set to `true` (which is the default), postback controls inside the <xref:System.Web.UI.UpdatePanel> control are automatically registered as asynchronous postback controls.  \\n  \\n Use the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register controls outside an <xref:System.Web.UI.UpdatePanel> control as triggers for asynchronous postbacks, and to potentially update the content of an update panel. To update an <xref:System.Web.UI.UpdatePanel> control programmatically, call the <xref:System.Web.UI.UpdatePanel.Update%2A> method.  \\n  \\n You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control. In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], use the designer's **UpdatePanelTrigger Collection Editor** dialog box.\"\n  example:\n  - \"The following example shows how to call the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register a <xref:System.Web.UI.WebControls.Button> control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content. The <xref:System.Web.UI.WebControls.Button> control is not inside the <xref:System.Web.UI.UpdatePanel> control. Two buttons are shown: `Button1` and `Button2`. `Button1` refreshes the content of the panel, and `Button2` refreshes the whole page.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager1CS.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager1VB.aspx#1)]  -->  \\n  \\n The following example shows how to call the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method to register a user control so that it causes an update of an <xref:System.Web.UI.UpdatePanel> control's content. The first example shows a page using the user control. The second example shows the user control.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/CS/ScriptManager2CS.aspx#2)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.RegisterAsyncPostBackControl#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterAsyncPostBackControl/VB/ScriptManager2VB.aspx#2)]  -->\"\n  syntax:\n    content: public void RegisterAsyncPostBackControl (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control to register for asynchronous postbacks.\n  overload: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>control</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The registered control does not implement the <xref href=\"System.Web.UI.INamingContainer\"></xref>, <xref href=\"System.Web.UI.IPostBackDataHandler\"></xref>, or <xref href=\"System.Web.UI.IPostBackEventHandler\"></xref> interfaces.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  commentId: M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  id: RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterClientScriptBlock(Control, Type, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterClientScriptBlock(Control, Type, String, String, Boolean)\n  fullName: ScriptManager.RegisterClientScriptBlock(Control, Type, String, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a client script block with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and then adds the script block to the page.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method to register a client script block that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. Client script blocks that are registered by using this method are sent to the page only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \\n  \\n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \\n  \\n If `addScriptTags` is `true`, the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds `<script>` tags around the script block. Pass `false` if you want to create `<script>` tags yourself, such as when you want to set the attributes of specific `<script>` tags. If `addScriptTags` is `false` and the `script` parameter contains multiple script blocks, an exception is thrown.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the page after the opening `<form>` tag. The script blocks are not guaranteed to be output in the same order in which they are registered. If the order of the script blocks is important, concatenate your script blocks into a single string (for example, by using the <xref:System.Text.StringBuilder> object), and then register them as a single client script block.\"\n  example:\n  - \"<!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/CS/ScriptManager_RegisterClientScriptBlockCS.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/vb/ScriptManager_RegisterClientScriptBlockVB.aspx#1)]  -->  \\n  \\n [!code-xml[System.Web.UI.ScriptManager.RegisterClientScriptBlock#2](~/samples/snippets/common/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptBlock/Common/App_Data/Contacts.xml#2)]\"\n  syntax:\n    content: public static void RegisterClientScriptBlock (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is registering the client script block.\n    - id: type\n      type: System.Type\n      description: The type of the client script block. This parameter is usually specified by using the `typeof` operator (C#) or the `GetType` operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: key\n      type: System.String\n      description: A unique identifier for the script block.\n    - id: script\n      type: System.String\n      description: The script.\n    - id: addScriptTags\n      type: System.Boolean\n      description: '`true` to enclose the script block in `<script>` and `</script>` tags; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.RegisterClientScriptBlock*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The client script block <code>type</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n The control that is registering the script block is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The control that is registering the script block is not in the page's control tree.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  commentId: M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  id: RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterClientScriptBlock(Page, Type, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterClientScriptBlock(Page, Type, String, String, Boolean)\n  fullName: ScriptManager.RegisterClientScriptBlock(Page, Type, String, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a client script block with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and then adds the script block to the page.\n  remarks: \"When you register a script block by using this method, the script is rendered every time that an asynchronous postback occurs. To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptBlock%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \\n  \\n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.\"\n  syntax:\n    content: public static void RegisterClientScriptBlock (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The page object that is registering the client script block.\n    - id: type\n      type: System.Type\n      description: The type of the client script block. This parameter is usually specified by using the `typeof` operator (C#) or the `GetType` operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: key\n      type: System.String\n      description: A unique identifier for the script block.\n    - id: script\n      type: System.String\n      description: The script to register.\n    - id: addScriptTags\n      type: System.Boolean\n      description: '`true` to enclose the script block in `<script>` and `</script>` tags; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.RegisterClientScriptBlock*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The script block <code>type</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n The page that is registering the script block is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)\n  id: RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterClientScriptInclude(Control, Type, String, String)\n  nameWithType: ScriptManager.RegisterClientScriptInclude(Control, Type, String, String)\n  fullName: ScriptManager.RegisterClientScriptInclude(Control, Type, String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a client script file with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control, and then adds a script file reference to the page.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method to register a client script file for a page or part of a page that is participating in partial-page updates. Client script files that are registered by using this method are sent to the page only when the `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a script file every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.  \\n  \\n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> method registers a client script file on the page by rendering a `script` element whose opening tag contains a `src` attribute. The `url` parameter is used to set the `src` attribute. To resolve URLs, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method. This method uses the context of the URL it is called for to resolve the path.  \\n  \\n Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> methods render script files to the browser. If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already rendered, the script is not rendered again.\"\n  example:\n  - \"<!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.RegisterClientScriptInclude#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/ScriptManager_RegisterClientScriptIncludeCS.aspx#1)]  -->  \\n  \\n [!code-javascript[System.Web.UI.ScriptManager.RegisterClientScriptInclude#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterClientScriptInclude/CS/scripts/script_alertdiv.js#2)]\"\n  syntax:\n    content: public static void RegisterClientScriptInclude (System.Web.UI.Control control, Type type, string key, string url);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is registering the client script file.\n    - id: type\n      type: System.Type\n      description: The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: key\n      type: System.String\n      description: A unique identifier for the script file.\n    - id: url\n      type: System.String\n      description: The URL of the script file.\n  overload: System.Web.UI.ScriptManager.RegisterClientScriptInclude*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The client script file <code>type</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n The control that is registering the script file is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The control that is registering the script file is not in the page's control tree.  \\n  \\n \\\\- or -  \\n  \\n <code>url</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>url</code> is empty.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)\n  id: RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterClientScriptInclude(Page, Type, String, String)\n  nameWithType: ScriptManager.RegisterClientScriptInclude(Page, Type, String, String)\n  fullName: ScriptManager.RegisterClientScriptInclude(Page, Type, String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers client script with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control every time that an asynchronous postback occurs, and then adds a script file reference to the page.\n  remarks: \"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs. To register a script file for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.  \\n  \\n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.\"\n  syntax:\n    content: public static void RegisterClientScriptInclude (System.Web.UI.Page page, Type type, string key, string url);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The page object that is registering the client script file.\n    - id: type\n      type: System.Type\n      description: The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: key\n      type: System.String\n      description: A unique identifier for the script file.\n    - id: url\n      type: System.String\n      description: The URL of the script file.\n  overload: System.Web.UI.ScriptManager.RegisterClientScriptInclude*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The client script file <code>type</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n The page that is registering the script file is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>url</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>url</code> is empty.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)\n  id: RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterClientScriptResource(Page, Type, String)\n  nameWithType: ScriptManager.RegisterClientScriptResource(Page, Type, String)\n  fullName: ScriptManager.RegisterClientScriptResource(Page, Type, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a client script file that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control every time that a postback occurs.\n  remarks: \"When you register a script file with this method, the script is rendered every time that an asynchronous postback occurs. To register a script for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%29> overload of this method.  \\n  \\n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.\"\n  syntax:\n    content: public static void RegisterClientScriptResource (System.Web.UI.Page page, Type type, string resourceName);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The page object that is registering the script.\n    - id: type\n      type: System.Type\n      description: The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: resourceName\n      type: System.String\n      description: An identifier for the resource.\n  overload: System.Web.UI.ScriptManager.RegisterClientScriptResource*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The client resource <code>type</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n The page that is registering the script is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)\n  id: RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterClientScriptResource(Control, Type, String)\n  nameWithType: ScriptManager.RegisterClientScriptResource(Control, Type, String)\n  fullName: ScriptManager.RegisterClientScriptResource(Control, Type, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers the client script that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is participating in partial-page rendering.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method to register a script that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. Script resources that are registered by using this method are registered only when `control` represents a control that is inside an <xref:System.Web.UI.UpdatePanel> control that is updated. To register a script every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \\n  \\n If you want to register a script block that does not pertain to partial-page updates, and if you want to register the script block only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method is used when resources from assemblies are accessed through an HTTP handler. This method includes the content of the resource URL in a `script` element.  \\n  \\n Both the <xref:System.Web.UI.ScriptManager.RegisterClientScriptInclude%2A> and the <xref:System.Web.UI.ScriptManager.RegisterClientScriptResource%2A> method load script files into the browser. If a script with the same type and key (for a script file) or the same type and resource name (for an embedded resource) is already loaded, the script is not reloaded.\"\n  syntax:\n    content: public static void RegisterClientScriptResource (System.Web.UI.Control control, Type type, string resourceName);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is registering the script.\n    - id: type\n      type: System.Type\n      description: The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: resourceName\n      type: System.String\n      description: An identifier for the resource.\n  overload: System.Web.UI.ScriptManager.RegisterClientScriptResource*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"The client resource <code>type</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n The control that is registering the script is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The control that is registering the script is not in the page's control tree.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)\n  id: RegisterDataItem(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterDataItem(Control, String)\n  nameWithType: ScriptManager.RegisterDataItem(Control, String)\n  fullName: ScriptManager.RegisterDataItem(Control, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Sends custom data to a control during partial-page rendering.\n  remarks: \"Use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback. To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property. This method invokes the overload that takes a parameter named `isJsonSerialized` that is set to `false`. When the `isJsonSerialized` parameter is set to `false`, the string is not serialized as JavaScript Object Notation (JSON). For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.  \\n  \\n The data items that are registered with the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object. When you handle these events, the custom data is passed in an event argument object. For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.\"\n  example:\n  - \"The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback. The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n> [!NOTE]\\n>  The data that is sent in this example is for illustration only. In a real-world application, you would use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send custom data from the server.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  -->\"\n  syntax:\n    content: public void RegisterDataItem (System.Web.UI.Control control, string dataItem);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is receiving the data.\n    - id: dataItem\n      type: System.String\n      description: The data that is sent to the control.\n  overload: System.Web.UI.ScriptManager.RegisterDataItem*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>control</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\"></xref> method is called during a postback.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dataItem</code> is already registered for <code>control</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\n  commentId: M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\n  id: RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterDataItem(Control, String, Boolean)\n  nameWithType: ScriptManager.RegisterDataItem(Control, String, Boolean)\n  fullName: ScriptManager.RegisterDataItem(Control, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Sends custom data to a control during partial-page rendering, and indicates whether the data is in JavaScript Object Notation (JSON) format.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send data from the server to the client during asynchronous postbacks, regardless of whether the control receiving the data is inside an <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n If the `dataItem` parameter that you register for `control` is not serialized as JSON, set the `isJsonSerialized` parameter to `false`. This avoids the need to use the  function for each string that is sent to the client. For more information about the JSON format, see the [Introducing JSON](http://go.microsoft.com/fwlink/?LinkId=77297) Web site.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be called only during an asynchronous postback. To determine whether a postback is asynchronous, use the <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> property.  \\n  \\n The data items that are registered by using the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method can be accessed in client script during the , , and  events of the  object. When you handle these events, the custom data is passed in an event argument object. For example, if you provide a handler for the  event, the custom data is passed in the  class, which exposes a  property.\"\n  example:\n  - \"The following example shows how to send data to two <xref:System.Web.UI.WebControls.Label> controls on a page during an asynchronous postback. The <xref:System.Web.UI.WebControls.Label> controls are not inside an <xref:System.Web.UI.UpdatePanel> control. This example shows the overload that does not take the `isJsonSerialized` parameter. Otherwise, the procedure for retrieving the  property of the  object is the same as if you did not use that overload.  \\n  \\n> [!NOTE]\\n>  The data that is sent in this example is for illustration only. In a real-world application, you would use the <xref:System.Web.UI.ScriptManager.RegisterDataItem%2A> method to send custom data from the server. For example, you could use the data item to send information about whether to hide or show client elements that are not inside an <xref:System.Web.UI.UpdatePanel> control.  \\n  \\n <!-- TODO: review snippet reference [!code-csharp[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/CS/ScriptManagerRegisterDataItemCS.aspx#1)]  -->\\n <!-- TODO: review snippet reference [!code-vb[System.Web.UI.ScriptManager.RegisterDataItem#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptManager.RegisterDataItem/VB/ScriptManagerRegisterDataItemVB.aspx#1)]  -->\"\n  syntax:\n    content: public void RegisterDataItem (System.Web.UI.Control control, string dataItem, bool isJsonSerialized);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The page control that is receiving the data.\n    - id: dataItem\n      type: System.String\n      description: The data that is sent to the control.\n    - id: isJsonSerialized\n      type: System.Boolean\n      description: '`true` to indicate that <code>dataItem</code> is serialized as JSON; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.RegisterDataItem*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>control</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\"></xref> method is called during a postback.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>dataItem</code> is already registered for <code>control</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)\n  id: RegisterDispose(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterDispose(Control, String)\n  nameWithType: ScriptManager.RegisterDispose(Control, String)\n  fullName: ScriptManager.RegisterDispose(Control, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a `dispose` script for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control. The script is executed when the <xref href=\"System.Web.UI.UpdatePanel\"></xref> control is updated or deleted.\n  remarks: \"Use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method to register `dispose` scripts for controls that are inside an <xref:System.Web.UI.UpdatePanel> control. During asynchronous postbacks, <xref:System.Web.UI.UpdatePanel> controls can be updated, deleted, or created. When a panel is updated or deleted, any `dispose` scripts that are registered for controls that are inside the <xref:System.Web.UI.UpdatePanel> are called. In typical page development scenarios, you do not have to call the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method is intended for use by control developers to register script or create controls that inherit from the <xref:System.Web.UI.IScriptControl> interface. For example, you might use a `dispose` script if you develop a client control by using composition. In your control, you implement <xref:System.Web.UI.IScriptControl> and render individual controls. You register the `dispose` method of any item that does not correspond to a defined client component such as `Sys.TextBox`. If your custom control composes elements that correspond to client components in the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)], you do not have to register a `dispose` script, because `dispose` is called automatically. Therefore, use the <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method for client components that are part of the [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] and that have to free resources when a component is no longer used.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterDispose%2A> method can be called multiple times for a control. Multiple scripts are aggregated. The order of disposing scripts matches the order in which the scripts were registered.  \\n  \\n If you register a `dispose` script for a control that is not in an <xref:System.Web.UI.UpdatePanel> control, an exception is thrown. The `dispose` script is called between the  and  events of the  class.\"\n  syntax:\n    content: public void RegisterDispose (System.Web.UI.Control control, string disposeScript);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that the `dispose` script is for.\n    - id: disposeScript\n      type: System.String\n      description: The `dispose` script.\n  overload: System.Web.UI.ScriptManager.RegisterDispose*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>control</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>disposeScript</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>control</code> is not found on the page.  \\n  \\n \\\\- or -  \\n  \\n <code>control</code> is not inside an <xref href=\\\"System.Web.UI.UpdatePanel\\\"></xref> control.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)\n  commentId: M:System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)\n  id: RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterExpandoAttribute(Control, String, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterExpandoAttribute(Control, String, String, String, Boolean)\n  fullName: ScriptManager.RegisterExpandoAttribute(Control, String, String, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a name/value pair with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control as a custom (expando) attribute of a specified control.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method to register a custom (expando) property for a control that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom attribute for the specified control. The property is set dynamically from ECMAScript (JavaScript) to preserve XHTML compatibility for the rendered control's markup. Set `encode` to `true` if you have to escape any characters in the dynamic property's value.  \\n  \\n If the control to which the dynamic property will be added is not found, a script error occurs.\"\n  syntax:\n    content: public static void RegisterExpandoAttribute (System.Web.UI.Control control, string controlId, string attributeName, string attributeValue, bool encode);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is registering the expando attribute.\n    - id: controlId\n      type: System.String\n      description: The control that contains the custom attribute on the page.\n    - id: attributeName\n      type: System.String\n      description: The name of the custom attribute to register.\n    - id: attributeValue\n      type: System.String\n      description: The value of the custom attribute.\n    - id: encode\n      type: System.Boolean\n      description: '`true` to encode the custom attribute that is being registered; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.RegisterExpandoAttribute*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>control</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>control</code> is not in the page's control tree.  \\n  \\n \\\\- or -  \\n  \\n <code>controlId</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>controlId</code> is empty.  \\n  \\n \\\\- or -  \\n  \\n <code>attributeName</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>attributeName</code> is empty.  \\n  \\n \\\\- or -  \\n  \\n <code>attributeName</code> is already registered.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)\n  commentId: M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)\n  id: RegisterExtenderControl``1(``0,System.Web.UI.Control)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterExtenderControl<TExtenderControl>(TExtenderControl, Control)\n  nameWithType: ScriptManager.RegisterExtenderControl<TExtenderControl>(TExtenderControl, Control)\n  fullName: ScriptManager.RegisterExtenderControl<TExtenderControl>(TExtenderControl, Control)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers an extender control with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  remarks: \"This method is primarily for use by control developers. Call the <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method from a custom ASP.NET Ajax extender control during its `onInit` event handler to register that control with the page. An ASP.NET Ajax extender control must be registered to participate in partial-page rendering.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterExtenderControl%2A> method adds the specified extender control to an internal list of extender controls and the target script controls they extend. This list is processed during the <xref:System.Web.UI.Control.PreRender> event.\"\n  syntax:\n    content: 'public void RegisterExtenderControl<TExtenderControl> (TExtenderControl extenderControl, System.Web.UI.Control targetControl) where TExtenderControl : System.Web.UI.Control, System.Web.UI.IExtenderControl;'\n    parameters:\n    - id: extenderControl\n      type: TExtenderControl\n      description: The extender control to register.\n    - id: targetControl\n      type: System.Web.UI.Control\n      description: The script control that the extender control extends.\n    typeParameters:\n    - id: TExtenderControl\n      description: A control that implements the <xref href=\"System.Web.UI.IExtenderControl\"></xref> interface.\n  overload: System.Web.UI.ScriptManager.RegisterExtenderControl``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>extenderControl</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>targetControl</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)\n  id: RegisterHiddenField(System.Web.UI.Control,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterHiddenField(Control, String, String)\n  nameWithType: ScriptManager.RegisterHiddenField(Control, String, String)\n  fullName: ScriptManager.RegisterHiddenField(Control, String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a hidden field with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the hidden field when the control that is registering the field is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a hidden field every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Page%2CSystem.String%2CSystem.String%29> overload of this method.  \\n  \\n If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method creates a hidden `input` element on the rendered HTML page.\"\n  syntax:\n    content: public static void RegisterHiddenField (System.Web.UI.Control control, string hiddenFieldName, string hiddenFieldInitialValue);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is registering the hidden field.\n    - id: hiddenFieldName\n      type: System.String\n      description: The name of the hidden field to register.\n    - id: hiddenFieldInitialValue\n      type: System.String\n      description: The initial value of the hidden field.\n  overload: System.Web.UI.ScriptManager.RegisterHiddenField*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>control</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>hiddenFieldName</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>control</code> is not in the page's control tree.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)\n  id: RegisterHiddenField(System.Web.UI.Page,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterHiddenField(Page, String, String)\n  nameWithType: ScriptManager.RegisterHiddenField(Page, String, String)\n  fullName: ScriptManager.RegisterHiddenField(Page, String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a hidden field with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control during every asynchronous postback.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%2A> method to register a hidden field that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. This method registers the hidden field every time that an asynchronous postback occurs. To register a hidden field for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the field is registered only when the panel is updated, use the <xref:System.Web.UI.ScriptManager.RegisterHiddenField%28System.Web.UI.Control%2CSystem.String%2CSystem.String%29> overload of this method.  \\n  \\n If you want to register a hidden field that does not pertain to partial-page updates, and if you want to register the hidden field only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.\"\n  syntax:\n    content: public static void RegisterHiddenField (System.Web.UI.Page page, string hiddenFieldName, string hiddenFieldInitialValue);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The page object that is registering the hidden field.\n    - id: hiddenFieldName\n      type: System.String\n      description: The name of the hidden field to register.\n    - id: hiddenFieldInitialValue\n      type: System.String\n      description: The initial value of the hidden field.\n  overload: System.Web.UI.ScriptManager.RegisterHiddenField*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>page</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>hiddenFieldName</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)\n  id: RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterNamedClientScriptResource(Control, String)\n  nameWithType: ScriptManager.RegisterNamedClientScriptResource(Control, String)\n  fullName: ScriptManager.RegisterNamedClientScriptResource(Control, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers client script by resource name that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is participating in partial-page rendering.\n  syntax:\n    content: public static void RegisterNamedClientScriptResource (System.Web.UI.Control control, string resourceName);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is registering the script.\n    - id: resourceName\n      type: System.String\n      description: An identifier for the resource.\n  overload: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)\n  id: RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterNamedClientScriptResource(Page, String)\n  nameWithType: ScriptManager.RegisterNamedClientScriptResource(Page, String)\n  fullName: ScriptManager.RegisterNamedClientScriptResource(Page, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers client script by resource name that is embedded in an assembly with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for use with a control that is participating in partial-page rendering.\n  syntax:\n    content: public static void RegisterNamedClientScriptResource (System.Web.UI.Page page, string resourceName);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The page object that is registering the script.\n    - id: resourceName\n      type: System.String\n      description: An identifier for the resource.\n  overload: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)\n  id: RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterOnSubmitStatement(Page, Type, String, String)\n  nameWithType: ScriptManager.RegisterOnSubmitStatement(Page, Type, String, String)\n  fullName: ScriptManager.RegisterOnSubmitStatement(Page, Type, String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers ECMAScript (JavaScript) code with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for a control that is used with an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that is executed when the form is submitted.\n  remarks: \"Registering JavaScript code with this method causes the script to be included every time that an asynchronous postback occurs.  \\n  \\n> [!NOTE]\\n>  Code from any earlier asynchronous postbacks is not removed. New asynchronous postbacks append code to any existing code for the `onsubmit` statement.  \\n  \\n To register code for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the code is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.  \\n  \\n If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.\"\n  syntax:\n    content: public static void RegisterOnSubmitStatement (System.Web.UI.Page page, Type type, string key, string script);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The page object that is registering the `onsubmit` statement.\n    - id: type\n      type: System.Type\n      description: The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: key\n      type: System.String\n      description: A unique identifier for the script statement.\n    - id: script\n      type: System.String\n      description: The script to register.\n  overload: System.Web.UI.ScriptManager.RegisterOnSubmitStatement*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>page</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> is `null`.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)\n  commentId: M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)\n  id: RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterOnSubmitStatement(Control, Type, String, String)\n  nameWithType: ScriptManager.RegisterOnSubmitStatement(Control, Type, String, String)\n  fullName: ScriptManager.RegisterOnSubmitStatement(Control, Type, String, String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers ECMAScript (JavaScript) code with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control for a control that is used with an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that is executed when the form is submitted.\n  remarks: \"The <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> adds script that is executed before the form is submitted, which lets you modify the submission or cancel it.  \\n  \\n You use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method to render an `onsubmit` statement that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. JavaScript code that is registered by using this method is sent to the page only when the control that is registering the statement is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register code with every asynchronous postback, use the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%29> overload of this method.  \\n  \\n If you want to register JavaScript code that does not pertain to partial-page updates, and if you want to register the code only one time during initial page rendering, use the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \\n  \\n The *script* parameter of the <xref:System.Web.UI.ScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands that are delimited by using semicolons (;).  \\n  \\n For more information about HTML forms and the `onsubmit` event, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).\"\n  syntax:\n    content: public static void RegisterOnSubmitStatement (System.Web.UI.Control control, Type type, string key, string script);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is registering the `onsubmit` statement.\n    - id: type\n      type: System.Type\n      description: The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: key\n      type: System.String\n      description: A unique identifier for the script statement.\n    - id: script\n      type: System.String\n      description: The script to register.\n  overload: System.Web.UI.ScriptManager.RegisterOnSubmitStatement*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>control</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>control</code> is not in the page's control tree.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)\n  commentId: M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)\n  id: RegisterPostBackControl(System.Web.UI.Control)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterPostBackControl(Control)\n  nameWithType: ScriptManager.RegisterPostBackControl(Control)\n  fullName: ScriptManager.RegisterPostBackControl(Control)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a control as a trigger for a postback. This method is used to configure postback controls inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> control that would otherwise perform asynchronous postbacks.\n  remarks: \"Use the <xref:System.Web.UI.ScriptManager.RegisterPostBackControl%2A> method to register postback controls inside an <xref:System.Web.UI.UpdatePanel> control as triggers. Controls that are registered by using this method update a whole page instead of updating only the <xref:System.Web.UI.UpdatePanel> control's content. Registering a postback control with this method outside an <xref:System.Web.UI.UpdatePanel> control has no affect because by default these controls do not perform asynchronous postbacks.  \\n  \\n You can add the trigger declaratively by using the `Triggers` element of the <xref:System.Web.UI.UpdatePanel> control. In [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], use the designer's **UpdatePanelTrigger Collection Editor** dialog box.\"\n  syntax:\n    content: public void RegisterPostBackControl (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control to register for postback.\n  overload: System.Web.UI.ScriptManager.RegisterPostBackControl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)\n  commentId: M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)\n  id: RegisterScriptControl``1(``0)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterScriptControl<TScriptControl>(TScriptControl)\n  nameWithType: ScriptManager.RegisterScriptControl<TScriptControl>(TScriptControl)\n  fullName: ScriptManager.RegisterScriptControl<TScriptControl>(TScriptControl)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a script control with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  remarks: \"This method is primarily for use by control developers. Call the <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method from a custom ASP.NET Ajax script control during its `onInit` event handler to register that control with the page. An ASP.NET Ajax script control must be registered to participate in partial-page rendering.  \\n  \\n The <xref:System.Web.UI.ScriptManager.RegisterScriptControl%2A> method adds the specified extender control to an internal list of script controls that is processed during the <xref:System.Web.UI.Control.PreRender> event.\"\n  syntax:\n    content: 'public void RegisterScriptControl<TScriptControl> (TScriptControl scriptControl) where TScriptControl : System.Web.UI.Control, System.Web.UI.IScriptControl;'\n    parameters:\n    - id: scriptControl\n      type: TScriptControl\n      description: The script control to register.\n    typeParameters:\n    - id: TScriptControl\n      description: A control that implements the <xref href=\"System.Web.UI.IScriptControl\"></xref> interface.\n  overload: System.Web.UI.ScriptManager.RegisterScriptControl``1*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>scriptControl</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)\n  commentId: M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)\n  id: RegisterScriptDescriptors(System.Web.UI.IExtenderControl)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterScriptDescriptors(IExtenderControl)\n  nameWithType: ScriptManager.RegisterScriptDescriptors(IExtenderControl)\n  fullName: ScriptManager.RegisterScriptDescriptors(IExtenderControl)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Calls back to an <xref href=\"System.Web.UI.ExtenderControl\"></xref> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.\n  remarks: The <xref:System.Web.UI.ExtenderControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method in its <xref:System.Web.UI.Control.Render%2A> method.\n  syntax:\n    content: public void RegisterScriptDescriptors (System.Web.UI.IExtenderControl extenderControl);\n    parameters:\n    - id: extenderControl\n      type: System.Web.UI.IExtenderControl\n      description: The extender control for which script descriptors will be registered.\n  overload: System.Web.UI.ScriptManager.RegisterScriptDescriptors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)\n  commentId: M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)\n  id: RegisterScriptDescriptors(System.Web.UI.IScriptControl)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterScriptDescriptors(IScriptControl)\n  nameWithType: ScriptManager.RegisterScriptDescriptors(IScriptControl)\n  fullName: ScriptManager.RegisterScriptDescriptors(IScriptControl)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Calls a <xref href=\"System.Web.UI.ScriptControl\"></xref> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.\n  remarks: The <xref:System.Web.UI.ScriptControl> class calls the <xref:System.Web.UI.ScriptManager.RegisterScriptDescriptors%2A> method during its <xref:System.Web.UI.Control.Render%2A> event.\n  syntax:\n    content: public void RegisterScriptDescriptors (System.Web.UI.IScriptControl scriptControl);\n    parameters:\n    - id: scriptControl\n      type: System.Web.UI.IScriptControl\n      description: The script control for which script descriptors will be registered.\n  overload: System.Web.UI.ScriptManager.RegisterScriptDescriptors*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  commentId: M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  id: RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterStartupScript(Control, Type, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterStartupScript(Control, Type, String, String, Boolean)\n  fullName: ScriptManager.RegisterStartupScript(Control, Type, String, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a startup script block for a control that is inside an <xref href=\"System.Web.UI.UpdatePanel\"></xref> by using the <xref href=\"System.Web.UI.ScriptManager\"></xref> control, and adds the script block to the page.\n  remarks: \"You use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method to register a startup script block for a page that is compatible with partial-page rendering and that has no [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] dependencies. Startup script blocks that are registered by using this method are sent to the page only when the control that is registering the block is inside an <xref:System.Web.UI.UpdatePanel> control that is being updated. To register a startup script block every time that an asynchronous postback occurs, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Page%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \\n  \\n If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.  \\n  \\n The script block that is rendered by the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's client `onload` event is raised. Startup script blocks are located at the bottom of the rendered ASP.NET page just before the `</form>` tag.  \\n  \\n Startup script blocks that are registered by using <xref:System.Web.UI.ScriptManager.RegisterStartupScript%2A> are not guaranteed to be output in the same order in which they are registered. If the order of the startup script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the script blocks in a single string, and then register them all as a single startup script.\"\n  syntax:\n    content: public static void RegisterStartupScript (System.Web.UI.Control control, Type type, string key, string script, bool addScriptTags);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control that is registering the client script block.\n    - id: type\n      type: System.Type\n      description: The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: key\n      type: System.String\n      description: A unique identifier for the script block.\n    - id: script\n      type: System.String\n      description: The script to register.\n    - id: addScriptTags\n      type: System.Boolean\n      description: '`true` to enclose the script block with `<script>` and `</script>` tags; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.RegisterStartupScript*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>control</code> is `null`.  \\n  \\n \\\\- or -  \\n  \\n <code>type</code> is `null`.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>control</code> is not in the page's control tree.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  commentId: M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  id: RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RegisterStartupScript(Page, Type, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterStartupScript(Page, Type, String, String, Boolean)\n  fullName: ScriptManager.RegisterStartupScript(Page, Type, String, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Registers a startup script block for every asynchronous postback with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control and adds the script block to the page.\n  remarks: \"You use this method to register a startup script block that is included every time that an asynchronous postback occurs. To register a script block for a control that is inside an <xref:System.Web.UI.UpdatePanel> control so that the script block is registered only when the <xref:System.Web.UI.UpdatePanel> control is updated, use the <xref:System.Web.UI.ScriptManager.RegisterStartupScript%28System.Web.UI.Control%2CSystem.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload of this method.  \\n  \\n If you want to register a startup script that does not pertain to partial-page updates, and if you want to register the script only one time during initial page rendering, use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method of the <xref:System.Web.UI.ClientScriptManager> class. You can get a reference to the <xref:System.Web.UI.ClientScriptManager> object from the <xref:System.Web.UI.Page.ClientScript%2A> property of the page.\"\n  syntax:\n    content: public static void RegisterStartupScript (System.Web.UI.Page page, Type type, string key, string script, bool addScriptTags);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The page object that is registering the client script block.\n    - id: type\n      type: System.Type\n      description: The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.\n    - id: key\n      type: System.String\n      description: A unique identifier for the script block.\n    - id: script\n      type: System.String\n      description: The script to register.\n    - id: addScriptTags\n      type: System.Boolean\n      description: '`true` to enclose the script block with `<script>` and `</script>` tags; otherwise, `false`.'\n  overload: System.Web.UI.ScriptManager.RegisterStartupScript*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)\n  commentId: M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)\n  id: Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: Render(HtmlTextWriter)\n  nameWithType: ScriptManager.Render(HtmlTextWriter)\n  fullName: ScriptManager.Render(HtmlTextWriter)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Renders the <xref href=\"System.Web.UI.ScriptManager\"></xref> control's content to the browser by using the specified <xref href=\"System.Web.UI.HtmlTextWriter\"></xref> object.\n  remarks: This method is used by control developers to extend the <xref:System.Web.UI.ScriptManager> control.\n  syntax:\n    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);\n    parameters:\n    - id: writer\n      type: System.Web.UI.HtmlTextWriter\n      description: An object that receives the content of the control to write to the page.\n  overload: System.Web.UI.ScriptManager.Render*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.ResolveCompositeScriptReference\n  commentId: E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference\n  id: ResolveCompositeScriptReference\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: ResolveCompositeScriptReference\n  nameWithType: ScriptManager.ResolveCompositeScriptReference\n  fullName: ScriptManager.ResolveCompositeScriptReference\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Occurs when a composite script is registered with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control.\n  syntax:\n    content: public event EventHandler<System.Web.UI.CompositeScriptReferenceEventArgs> ResolveCompositeScriptReference;\n    return:\n      type: System.EventHandler{System.Web.UI.CompositeScriptReferenceEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.ResolveScriptReference\n  commentId: E:System.Web.UI.ScriptManager.ResolveScriptReference\n  id: ResolveScriptReference\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: ResolveScriptReference\n  nameWithType: ScriptManager.ResolveScriptReference\n  fullName: ScriptManager.ResolveScriptReference\n  type: Event\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Occurs when a member of the <xref href=\"System.Web.UI.ScriptManager.Scripts\"></xref> collection is registered with the <xref href=\"System.Web.UI.ScriptManager\"></xref> control.\n  remarks: This event is raised one time for each member of the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection during the page's <xref:System.Web.UI.Control.PreRender> event. Use this event to perform any updates before the script is rendered to the page.\n  syntax:\n    content: public event EventHandler<System.Web.UI.ScriptReferenceEventArgs> ResolveScriptReference;\n    return:\n      type: System.EventHandler{System.Web.UI.ScriptReferenceEventArgs}\n      description: ''\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.RoleService\n  commentId: P:System.Web.UI.ScriptManager.RoleService\n  id: RoleService\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: RoleService\n  nameWithType: ScriptManager.RoleService\n  fullName: ScriptManager.RoleService\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets the <xref href=\"System.Web.UI.RoleServiceManager\"></xref> object that is associated with the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  remarks: \"The <xref:System.Web.UI.RoleServiceManager> object that is returned by this property represents the role service that is registered with the page. The role service can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control. You can use the ASP.NET role service or use a custom role service. You can add the custom service in markup by including a `RoleService` element inside the `asp:ScriptManager` element on the page, as shown in the following example:  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"SM1\\\" runat=\\\"server\\\">  \\n  <RoleService Path=\\\"MyRoleService.asmx\\\" LoadRoles=\\\"True\\\" />  \\n</asp:ScriptManager>  \\n```  \\n  \\n You can also programmatically configure the <xref:System.Web.UI.RoleServiceManager> object. Services are registered with the <xref:System.Web.UI.ScriptManager> control during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.\"\n  syntax:\n    content: >-\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.RoleServiceManager RoleService { get; }\n    return:\n      type: System.Web.UI.RoleServiceManager\n      description: The <xref href=\"System.Web.UI.RoleServiceManager\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  overload: System.Web.UI.ScriptManager.RoleService*\n  exceptions: []\n  attributes:\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.ScriptMode\n  commentId: P:System.Web.UI.ScriptManager.ScriptMode\n  id: ScriptMode\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: ScriptMode\n  nameWithType: ScriptManager.ScriptMode\n  fullName: ScriptManager.ScriptMode\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets a value that specifies whether debug or release versions of client script libraries are rendered.\n  remarks: \"The <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property specifies whether the <xref:System.Web.UI.ScriptManager> control should render debug or release versions of client script libraries. This value can be superseded by values that are set in the configuration file and in the page directive.  \\n  \\n The following table lists the valid values for this property.  \\n  \\n|Value|Definition|  \\n|-----------|----------------|  \\n|<xref:System.Web.UI.ScriptMode.Auto>|Debug versions of client script libraries are used in the Web page when the `retail` attribute of the  configuration element is set to `false`. Otherwise, the release versions of client script libraries are used.|  \\n|<xref:System.Web.UI.ScriptMode.Inherit>|When applied to the <xref:System.Web.UI.ScriptManager.ScriptMode%2A> property of the <xref:System.Web.UI.ScriptManager> object, this value is the same as <xref:System.Web.UI.ScriptMode.Auto>.|  \\n|<xref:System.Web.UI.ScriptMode.Debug>|Debug versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `true`.|  \\n|<xref:System.Web.UI.ScriptMode.Release>|Release versions of client script libraries are used in the Web page unless the `retail` attribute of the  configuration element is set to `false`.|  \\n  \\n> [!NOTE]\\n>  The `debug` attribute of the  directive does not affect Ajax-enabled ASP.NET applications. The <xref:System.Web.UI.ScriptManager> control uses only the settings in the Web.config file and in its <xref:System.Web.UI.ScriptManager.IsDebuggingEnabled%2A> and <xref:System.Web.UI.ScriptManager.ScriptMode%2A> properties to determine whether to render debug scripts.  \\n  \\n For more information, see [Debugging and Tracing Ajax Applications Overview](http://msdn.microsoft.com/library/92684ea0-7bb4-4a34-9203-3aa6394ce375).\"\n  syntax:\n    content: public System.Web.UI.ScriptMode ScriptMode { get; set; }\n    return:\n      type: System.Web.UI.ScriptMode\n      description: The enumeration value that indicates the current mode. The default is <xref href=\"System.Web.UI.ScriptMode.Auto\"></xref>.\n  overload: System.Web.UI.ScriptManager.ScriptMode*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <xref href=\"System.Web.UI.ScriptManager.ScriptMode\"></xref> property is not one of the <xref href=\"System.Web.UI.ScriptMode\"></xref> values.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.ScriptPath\n  commentId: P:System.Web.UI.ScriptManager.ScriptPath\n  id: ScriptPath\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: ScriptPath\n  nameWithType: ScriptManager.ScriptPath\n  fullName: ScriptManager.ScriptPath\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets or sets the root path of the location that is used to build the paths to ASP.NET Ajax and custom script files.\n  remarks: \"The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property enables you to specify an absolute, relative, or application-relative URL for all script blocks on the page. This includes custom and third-party script blocks that are registered with the current <xref:System.Web.UI.ScriptManager> instance. The <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property is typically set declaratively as an attribute of a `ScriptManager` element on the page, but it can be set in code also.  \\n  \\n If the `path` attribute or the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is set for a <xref:System.Web.UI.ScriptReference> object in the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection, the path value overrides the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> value for that <xref:System.Web.UI.ScriptReference> instance.  \\n  \\n If no <xref:System.Web.UI.ScriptReferenceBase.Path%2A> value is specified, the <xref:System.Web.UI.ScriptManager> control searches the directory that is defined by the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> property and resolves script references by their <xref:System.Web.UI.ScriptReference.Name%2A> or <xref:System.Web.UI.ScriptReference.Assembly%2A> properties.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This property is obsolete. Set the Path property on each individual ScriptReference instead.\")]\n\n      public string ScriptPath { get; set; }\n    return:\n      type: System.String\n      description: The location where script files are stored. The default value is an empty string (\"\"), which is interpreted as a relative path.\n  overload: System.Web.UI.ScriptManager.ScriptPath*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.ScriptResourceMapping\n  commentId: P:System.Web.UI.ScriptManager.ScriptResourceMapping\n  id: ScriptResourceMapping\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: ScriptResourceMapping\n  nameWithType: ScriptManager.ScriptResourceMapping\n  fullName: ScriptManager.ScriptResourceMapping\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a <xref href=\"System.Web.UI.ScriptResourceMapping\"></xref> object.\n  remarks: The static <xref:System.Web.UI.ScriptManager.ScriptResourceMapping%2A> property returns a <xref:System.Web.UI.ScriptResourceMapping> object that can contain a collection of mappings that represent the location of the script resource (script redirection). This collection of mappings can be mapped based on names or name/assembly pairs, and it can point to a <xref:System.Web.UI.ScriptResourceDefinition> object.\n  example:\n  - \"The following examples shows how to add a <xref:System.Web.UI.ScriptResourceDefinition> object that can be referenced by a <xref:System.Web.UI.ScriptManager> object. Add the following code to the Global.asax file in the `Application_Start` event.  \\n  \\n```csharp  \\nScriptResourceDefinition myScriptResDef = new ScriptResourceDefinition();  \\nmyScriptResDef.Path = \\\"~/Scripts/jquery-1.4.2.min.js\\\";  \\nmyScriptResDef.DebugPath = \\\"~/Scripts/jquery-1.4.2.js\\\";  \\nmyScriptResDef.CdnPath = \\\"http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js\\\";  \\nmyScriptResDef.CdnDebugPath = \\\"http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js\\\";  \\nScriptManager.ScriptResourceMapping.AddDefinition(\\\"jquery\\\", null, myScriptResDef);  \\n```  \\n  \\n```vb  \\nDim myScriptResDef As New ScriptResourceDefinition()  \\nmyScriptResDef.Path = \\\"~/Scripts/jquery-1.4.2.min.js\\\"  \\nmyScriptResDef.DebugPath = \\\"~/Scripts/jquery-1.4.2.js\\\"  \\nmyScriptResDef.CdnPath = \\\"http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.min.js\\\"  \\nmyScriptResDef.CdnDebugPath = \\\"http://ajax.microsoft.com/ajax/jQuery/jquery-1.4.2.js\\\"  \\nScriptManager.ScriptResourceMapping.AddDefinition(\\\"jquery\\\", Nothing, myScriptResDef)  \\n```  \\n  \\n In the markup for an ASP.NET Web Forms page (.aspx file), add the following markup inside the `form` element and before any elements or code that uses jQuery script.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"sm1\\\" runat=\\\"server\\\">  \\n  <Scripts>  \\n    <asp:ScriptReference Name=\\\"jquery\\\"/>  \\n  </Scripts>  \\n</asp:ScriptManager>  \\n```\"\n  syntax:\n    content: public static System.Web.UI.ScriptResourceMapping ScriptResourceMapping { get; }\n    return:\n      type: System.Web.UI.ScriptResourceMapping\n      description: A <xref href=\"System.Web.UI.ScriptResourceMapping\"></xref> object.\n  overload: System.Web.UI.ScriptManager.ScriptResourceMapping*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.Scripts\n  commentId: P:System.Web.UI.ScriptManager.Scripts\n  id: Scripts\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: Scripts\n  nameWithType: ScriptManager.Scripts\n  fullName: ScriptManager.Scripts\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a <xref href=\"System.Web.UI.ScriptReferenceCollection\"></xref> object that contains the <xref href=\"System.Web.UI.ScriptReference\"></xref> objects, each of which represents a script file rendered to the client.\n  remarks: \"The <xref:System.Web.UI.ScriptReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ScriptReference> objects, each of which represents a script file. The collection includes references to all the script files that ASP.NET needs for Ajax functionality, and to custom script files. Custom script files to render can be defined in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.  \\n  \\n You can add script files to the collection in markup by adding `asp:ScriptReference` elements to a `Scripts` node inside the `asp:ScriptManager` element on the page, as shown in the following example.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"SM1\\\" runat=\\\"server\\\">  \\n  <Scripts>  \\n    <asp:ScriptReference Name=\\\"Script.js\\\" />  \\n  </Scripts>  \\n</asp:ScriptManager>  \\n```  \\n  \\n You can also add a <xref:System.Web.UI.ScriptReference> object to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection programmatically by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ScriptReferenceCollection> class.  \\n  \\n The <xref:System.Web.UI.ScriptManager> control registers script files during the control's <xref:System.Web.UI.Control.PreRender> event.  \\n  \\n The <xref:System.Web.UI.ScriptManager.Scripts%2A> collection does not contain the core [!INCLUDE[atlaslib_current_ext](~/includes/atlaslib-current-ext-md.md)] scripts. The scripts in the core library are rendered automatically; they do not have to be registered with the <xref:System.Web.UI.ScriptManager> control. However, if you want to override a core script or any control script and substitute a different version of the script, you can add your version to the <xref:System.Web.UI.ScriptManager.Scripts%2A> collection.\"\n  syntax:\n    content: >-\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.ScriptReferenceCollection Scripts { get; }\n    return:\n      type: System.Web.UI.ScriptReferenceCollection\n      description: The <xref href=\"System.Web.UI.ScriptReferenceCollection\"></xref> object of the <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  overload: System.Web.UI.ScriptManager.Scripts*\n  exceptions: []\n  attributes:\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.Services\n  commentId: P:System.Web.UI.ScriptManager.Services\n  id: Services\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: Services\n  nameWithType: ScriptManager.Services\n  fullName: ScriptManager.Services\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a <xref href=\"System.Web.UI.ServiceReferenceCollection\"></xref> object that contains a <xref href=\"System.Web.UI.ServiceReference\"></xref> object for each Web service that ASP.NET exposes on the client for Ajax functionality.\n  remarks: \"The <xref:System.Web.UI.ServiceReferenceCollection> object that is returned by this property is a collection of <xref:System.Web.UI.ServiceReference> objects, each of which represents a Web service that is registered with the <xref:System.Web.UI.ScriptManager> control . You can define services in the <xref:System.Web.UI.ScriptManager> control or in an associated <xref:System.Web.UI.ScriptManagerProxy> control.  \\n  \\n You can add services to the collection in markup by adding an `asp:ServiceReference` element to a `Services` element inside the `asp:ScriptManager` instance on the page, as shown in the following example.  \\n  \\n```  \\n<asp:ScriptManager ID=\\\"SM1\\\" runat=\\\"server\\\">  \\n  <Services>  \\n    <asp:ServiceReference Path=\\\"Service.asmx\\\" />  \\n  </Services>  \\n</asp:ScriptManager>  \\n```  \\n  \\n You can also programmatically add a <xref:System.Web.UI.ServiceReference> object to the <xref:System.Web.UI.ScriptManager.Services%2A> collection by using the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method of the <xref:System.Web.UI.ServiceReferenceCollection> class.  \\n  \\n Services are registered with the <xref:System.Web.UI.ScriptManager> during the page's <xref:System.Web.UI.Control.PreRender> life-cycle stage.\"\n  syntax:\n    content: >-\n      [System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)]\n\n      public System.Web.UI.ServiceReferenceCollection Services { get; }\n    return:\n      type: System.Web.UI.ServiceReferenceCollection\n      description: The <xref href=\"System.Web.UI.ServiceReferenceCollection\"></xref> object for the current <xref href=\"System.Web.UI.ScriptManager\"></xref> instance.\n  overload: System.Web.UI.ScriptManager.Services*\n  exceptions: []\n  attributes:\n  - type: System.Web.UI.PersistenceModeAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.SetFocus(System.String)\n  commentId: M:System.Web.UI.ScriptManager.SetFocus(System.String)\n  id: SetFocus(System.String)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: SetFocus(String)\n  nameWithType: ScriptManager.SetFocus(String)\n  fullName: ScriptManager.SetFocus(String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Sets the browser focus to the control specified by ID.\n  remarks: \"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class. Both methods make the control with the specified ID the active control on the Web page. The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback. During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.  \\n  \\n If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control in the last call receives focus.\"\n  syntax:\n    content: public void SetFocus (string clientID);\n    parameters:\n    - id: clientID\n      type: System.String\n      description: The ID of the control to receive focus.\n  overload: System.Web.UI.ScriptManager.SetFocus*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)\n  commentId: M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)\n  id: SetFocus(System.Web.UI.Control)\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: SetFocus(Control)\n  nameWithType: ScriptManager.SetFocus(Control)\n  fullName: ScriptManager.SetFocus(Control)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Sets the browser focus to the specified control.\n  remarks: \"The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method works like the <xref:System.Web.UI.Page.SetFocus%2A> method for the <xref:System.Web.UI.Page> class. Both methods make the specified control the active control on the Web page. The <xref:System.Web.UI.ScriptManager.SetFocus%2A> method of the <xref:System.Web.UI.ScriptManager> class is used to set focus during an asynchronous postback. During postbacks and when the page is first rendered, the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method calls the <xref:System.Web.UI.Page.SetFocus%2A> method of the <xref:System.Web.UI.Page> class.  \\n  \\n If there are multiple calls to the <xref:System.Web.UI.ScriptManager.SetFocus%2A> method, the control specified in the last call receives focus.\"\n  syntax:\n    content: public void SetFocus (System.Web.UI.Control control);\n    parameters:\n    - id: control\n      type: System.Web.UI.Control\n      description: The control to receive focus.\n  overload: System.Web.UI.ScriptManager.SetFocus*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.SupportsPartialRendering\n  commentId: P:System.Web.UI.ScriptManager.SupportsPartialRendering\n  id: SupportsPartialRendering\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: SupportsPartialRendering\n  nameWithType: ScriptManager.SupportsPartialRendering\n  fullName: ScriptManager.SupportsPartialRendering\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Gets a value that indicates whether the client supports partial-page rendering.\n  remarks: \"If the <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> property is set to `false`, the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property returns `false`.  \\n  \\n The default check to determine whether partial-page rendering is supported returns `true` when the following conditions are true:  \\n  \\n-   The <xref:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion%2A> property value must be greater than or equal to 1.0.  \\n  \\n-   The <xref:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion%2A> property value must be greater than or equal to 1.0.  \\n  \\n-   The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property value must be set to `true`.  \\n  \\n When the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property is explicitly set, these checks are not used.  \\n  \\n Control developers should use the <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> property to determine whether they should support partial-page rendering.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool SupportsPartialRendering { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the client supports partial-page rendering; otherwise, `false`. The default value is `true`.'\n  overload: System.Web.UI.ScriptManager.SupportsPartialRendering*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The <xref href=\\\"System.Web.UI.ScriptManager.EnablePartialRendering\\\"></xref> property is `false` and the <xref href=\\\"System.Web.UI.ScriptManager.SupportsPartialRendering\\\"></xref> property was set to `true`.  \\n  \\n \\\\- or -  \\n  \\n The <xref href=\\\"System.Web.UI.ScriptManager.SupportsPartialRendering\\\"></xref> property was set after the <xref href=\\\"System.Web.UI.Control.Init\\\"></xref> event.\"\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.Visible\n  commentId: P:System.Web.UI.ScriptManager.Visible\n  id: Visible\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: Visible\n  nameWithType: ScriptManager.Visible\n  fullName: ScriptManager.Visible\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Overrides the <xref href=\"System.Web.UI.Control.Visible\"></xref> property that is inherited from the base <xref href=\"System.Web.UI.Control\"></xref> class to prevent setting this value.\n  remarks: The <xref:System.Web.UI.Control.Visible%2A> property is overridden in the <xref:System.Web.UI.ScriptManager> class to prevent setting this value. A <xref:System.NotImplementedException> error occurs if a value is assigned to this property.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override bool Visible { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` in all cases.'\n  overload: System.Web.UI.ScriptManager.Visible*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: A value is assigned to the <xref href=\"System.Web.UI.ScriptManager.Visible\"></xref> property.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  commentId: M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  id: System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  isEii: true\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: IPostBackDataHandler.LoadPostData(String, NameValueCollection)\n  nameWithType: ScriptManager.IPostBackDataHandler.LoadPostData(String, NameValueCollection)\n  fullName: ScriptManager.IPostBackDataHandler.LoadPostData(String, NameValueCollection)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: For a description of this member, see <xref href=\"System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.\n  syntax:\n    content: bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);\n    parameters:\n    - id: postDataKey\n      type: System.String\n      description: The key-identifier for the control.\n    - id: postCollection\n      type: System.Collections.Specialized.NameValueCollection\n      description: A collection of all incoming post data.\n    return:\n      type: System.Boolean\n      description: \"`true` if the <xref href=\\\"System.Web.UI.ScriptManager\\\"></xref> control's state has changed as a result of a postback; otherwise, `false`.\"\n  overload: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent\n  commentId: M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent\n  id: System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent\n  isEii: true\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: IPostBackDataHandler.RaisePostDataChangedEvent()\n  nameWithType: ScriptManager.IPostBackDataHandler.RaisePostDataChangedEvent()\n  fullName: ScriptManager.IPostBackDataHandler.RaisePostDataChangedEvent()\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: For a description of this member, see <xref href=\"System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.ScriptManager> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface.\n  syntax:\n    content: void IPostBackDataHandler.RaisePostDataChangedEvent ();\n    parameters: []\n  overload: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  commentId: M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  isEii: true\n  parent: System.Web.UI.ScriptManager\n  langs:\n  - csharp\n  name: IPostBackEventHandler.RaisePostBackEvent(String)\n  nameWithType: ScriptManager.IPostBackEventHandler.RaisePostBackEvent(String)\n  fullName: ScriptManager.IPostBackEventHandler.RaisePostBackEvent(String)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.UI\n  summary: Enables the <xref href=\"System.Web.UI.ScriptManager\"></xref> control to process a postback event and load the history state of the Web page.\n  syntax:\n    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);\n    parameters:\n    - id: eventArgument\n      type: System.String\n      description: A string of key/value pairs that represent the history state of the Web page.\n  overload: System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Web.UI.Control\n  parent: System.Web.UI\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Web.UI.Control\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.Web.UI.ScriptManager.#ctor\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ScriptManager()\n  nameWithType: ScriptManager.ScriptManager()\n  fullName: ScriptManager.ScriptManager()\n- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AddHistoryPoint(NameValueCollection, String)\n  nameWithType: ScriptManager.AddHistoryPoint(NameValueCollection, String)\n  fullName: ScriptManager.AddHistoryPoint(NameValueCollection, String)\n- uid: System.Collections.Specialized.NameValueCollection\n  parent: System.Collections.Specialized\n  isExternal: false\n  name: NameValueCollection\n  nameWithType: NameValueCollection\n  fullName: System.Collections.Specialized.NameValueCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AddHistoryPoint(String, String)\n  nameWithType: ScriptManager.AddHistoryPoint(String, String)\n  fullName: ScriptManager.AddHistoryPoint(String, String)\n- uid: System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AddHistoryPoint(String, String, String)\n  nameWithType: ScriptManager.AddHistoryPoint(String, String, String)\n  fullName: ScriptManager.AddHistoryPoint(String, String, String)\n- uid: System.Web.UI.ScriptManager.AjaxFrameworkAssembly\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AjaxFrameworkAssembly\n  nameWithType: ScriptManager.AjaxFrameworkAssembly\n  fullName: ScriptManager.AjaxFrameworkAssembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Web.UI.ScriptManager.AjaxFrameworkMode\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AjaxFrameworkMode\n  nameWithType: ScriptManager.AjaxFrameworkMode\n  fullName: ScriptManager.AjaxFrameworkMode\n- uid: System.Web.UI.AjaxFrameworkMode\n  parent: System.Web.UI\n  isExternal: false\n  name: AjaxFrameworkMode\n  nameWithType: AjaxFrameworkMode\n  fullName: System.Web.UI.AjaxFrameworkMode\n- uid: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AllowCustomErrorsRedirect\n  nameWithType: ScriptManager.AllowCustomErrorsRedirect\n  fullName: ScriptManager.AllowCustomErrorsRedirect\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.UI.ScriptManager.AsyncPostBackError\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AsyncPostBackError\n  nameWithType: ScriptManager.AsyncPostBackError\n  fullName: ScriptManager.AsyncPostBackError\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Web.UI.AsyncPostBackErrorEventArgs\n  name: AsyncPostBackErrorEventArgs\n  nameWithType: AsyncPostBackErrorEventArgs\n  fullName: System.Web.UI.AsyncPostBackErrorEventArgs\n- uid: System.EventHandler{System.Web.UI.AsyncPostBackErrorEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<AsyncPostBackErrorEventArgs>\n  nameWithType: EventHandler<AsyncPostBackErrorEventArgs>\n  fullName: System.EventHandler<System.Web.UI.AsyncPostBackErrorEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.AsyncPostBackErrorEventArgs\n    name: AsyncPostBackErrorEventArgs\n    nameWithType: AsyncPostBackErrorEventArgs\n    fullName: System.Web.UI.AsyncPostBackErrorEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AsyncPostBackErrorMessage\n  nameWithType: ScriptManager.AsyncPostBackErrorMessage\n  fullName: ScriptManager.AsyncPostBackErrorMessage\n- uid: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AsyncPostBackSourceElementID\n  nameWithType: ScriptManager.AsyncPostBackSourceElementID\n  fullName: ScriptManager.AsyncPostBackSourceElementID\n- uid: System.Web.UI.ScriptManager.AsyncPostBackTimeout\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AsyncPostBackTimeout\n  nameWithType: ScriptManager.AsyncPostBackTimeout\n  fullName: ScriptManager.AsyncPostBackTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.UI.ScriptManager.AuthenticationService\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AuthenticationService\n  nameWithType: ScriptManager.AuthenticationService\n  fullName: ScriptManager.AuthenticationService\n- uid: System.Web.UI.AuthenticationServiceManager\n  parent: System.Web.UI\n  isExternal: false\n  name: AuthenticationServiceManager\n  nameWithType: AuthenticationServiceManager\n  fullName: System.Web.UI.AuthenticationServiceManager\n- uid: System.Web.UI.ScriptManager.ClientNavigateHandler\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ClientNavigateHandler\n  nameWithType: ScriptManager.ClientNavigateHandler\n  fullName: ScriptManager.ClientNavigateHandler\n- uid: System.Web.UI.ScriptManager.CompositeScript\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: CompositeScript\n  nameWithType: ScriptManager.CompositeScript\n  fullName: ScriptManager.CompositeScript\n- uid: System.Web.UI.CompositeScriptReference\n  parent: System.Web.UI\n  isExternal: false\n  name: CompositeScriptReference\n  nameWithType: CompositeScriptReference\n  fullName: System.Web.UI.CompositeScriptReference\n- uid: System.Web.UI.ScriptManager.EmptyPageUrl\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EmptyPageUrl\n  nameWithType: ScriptManager.EmptyPageUrl\n  fullName: ScriptManager.EmptyPageUrl\n- uid: System.Web.UI.ScriptManager.EnableCdn\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableCdn\n  nameWithType: ScriptManager.EnableCdn\n  fullName: ScriptManager.EnableCdn\n- uid: System.Web.UI.ScriptManager.EnableCdnFallback\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableCdnFallback\n  nameWithType: ScriptManager.EnableCdnFallback\n  fullName: ScriptManager.EnableCdnFallback\n- uid: System.Web.UI.ScriptManager.EnableHistory\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableHistory\n  nameWithType: ScriptManager.EnableHistory\n  fullName: ScriptManager.EnableHistory\n- uid: System.Web.UI.ScriptManager.EnablePageMethods\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnablePageMethods\n  nameWithType: ScriptManager.EnablePageMethods\n  fullName: ScriptManager.EnablePageMethods\n- uid: System.Web.UI.ScriptManager.EnablePartialRendering\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnablePartialRendering\n  nameWithType: ScriptManager.EnablePartialRendering\n  fullName: ScriptManager.EnablePartialRendering\n- uid: System.Web.UI.ScriptManager.EnableScriptGlobalization\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableScriptGlobalization\n  nameWithType: ScriptManager.EnableScriptGlobalization\n  fullName: ScriptManager.EnableScriptGlobalization\n- uid: System.Web.UI.ScriptManager.EnableScriptLocalization\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableScriptLocalization\n  nameWithType: ScriptManager.EnableScriptLocalization\n  fullName: ScriptManager.EnableScriptLocalization\n- uid: System.Web.UI.ScriptManager.EnableSecureHistoryState\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableSecureHistoryState\n  nameWithType: ScriptManager.EnableSecureHistoryState\n  fullName: ScriptManager.EnableSecureHistoryState\n- uid: System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetCurrent(Page)\n  nameWithType: ScriptManager.GetCurrent(Page)\n  fullName: ScriptManager.GetCurrent(Page)\n- uid: System.Web.UI.ScriptManager\n  parent: System.Web.UI\n  isExternal: false\n  name: ScriptManager\n  nameWithType: ScriptManager\n  fullName: System.Web.UI.ScriptManager\n- uid: System.Web.UI.Page\n  parent: System.Web.UI\n  isExternal: false\n  name: Page\n  nameWithType: Page\n  fullName: System.Web.UI.Page\n- uid: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredArrayDeclarations()\n  nameWithType: ScriptManager.GetRegisteredArrayDeclarations()\n  fullName: ScriptManager.GetRegisteredArrayDeclarations()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Web.UI.RegisteredArrayDeclaration\n  name: RegisteredArrayDeclaration\n  nameWithType: RegisteredArrayDeclaration\n  fullName: System.Web.UI.RegisteredArrayDeclaration\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredArrayDeclaration}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<RegisteredArrayDeclaration>\n  nameWithType: ReadOnlyCollection<RegisteredArrayDeclaration>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredArrayDeclaration>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.RegisteredArrayDeclaration\n    name: RegisteredArrayDeclaration\n    nameWithType: RegisteredArrayDeclaration\n    fullName: System.Web.UI.RegisteredArrayDeclaration\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredClientScriptBlocks()\n  nameWithType: ScriptManager.GetRegisteredClientScriptBlocks()\n  fullName: ScriptManager.GetRegisteredClientScriptBlocks()\n- uid: System.Web.UI.RegisteredScript\n  name: RegisteredScript\n  nameWithType: RegisteredScript\n  fullName: System.Web.UI.RegisteredScript\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredScript}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<RegisteredScript>\n  nameWithType: ReadOnlyCollection<RegisteredScript>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredScript>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.RegisteredScript\n    name: RegisteredScript\n    nameWithType: RegisteredScript\n    fullName: System.Web.UI.RegisteredScript\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredDisposeScripts()\n  nameWithType: ScriptManager.GetRegisteredDisposeScripts()\n  fullName: ScriptManager.GetRegisteredDisposeScripts()\n- uid: System.Web.UI.RegisteredDisposeScript\n  name: RegisteredDisposeScript\n  nameWithType: RegisteredDisposeScript\n  fullName: System.Web.UI.RegisteredDisposeScript\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredDisposeScript}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<RegisteredDisposeScript>\n  nameWithType: ReadOnlyCollection<RegisteredDisposeScript>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredDisposeScript>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.RegisteredDisposeScript\n    name: RegisteredDisposeScript\n    nameWithType: RegisteredDisposeScript\n    fullName: System.Web.UI.RegisteredDisposeScript\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredExpandoAttributes()\n  nameWithType: ScriptManager.GetRegisteredExpandoAttributes()\n  fullName: ScriptManager.GetRegisteredExpandoAttributes()\n- uid: System.Web.UI.RegisteredExpandoAttribute\n  name: RegisteredExpandoAttribute\n  nameWithType: RegisteredExpandoAttribute\n  fullName: System.Web.UI.RegisteredExpandoAttribute\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredExpandoAttribute}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<RegisteredExpandoAttribute>\n  nameWithType: ReadOnlyCollection<RegisteredExpandoAttribute>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredExpandoAttribute>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.RegisteredExpandoAttribute\n    name: RegisteredExpandoAttribute\n    nameWithType: RegisteredExpandoAttribute\n    fullName: System.Web.UI.RegisteredExpandoAttribute\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.ScriptManager.GetRegisteredHiddenFields\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredHiddenFields()\n  nameWithType: ScriptManager.GetRegisteredHiddenFields()\n  fullName: ScriptManager.GetRegisteredHiddenFields()\n- uid: System.Web.UI.RegisteredHiddenField\n  name: RegisteredHiddenField\n  nameWithType: RegisteredHiddenField\n  fullName: System.Web.UI.RegisteredHiddenField\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Web.UI.RegisteredHiddenField}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<RegisteredHiddenField>\n  nameWithType: ReadOnlyCollection<RegisteredHiddenField>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Web.UI.RegisteredHiddenField>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.RegisteredHiddenField\n    name: RegisteredHiddenField\n    nameWithType: RegisteredHiddenField\n    fullName: System.Web.UI.RegisteredHiddenField\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredOnSubmitStatements()\n  nameWithType: ScriptManager.GetRegisteredOnSubmitStatements()\n  fullName: ScriptManager.GetRegisteredOnSubmitStatements()\n- uid: System.Web.UI.ScriptManager.GetRegisteredStartupScripts\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredStartupScripts()\n  nameWithType: ScriptManager.GetRegisteredStartupScripts()\n  fullName: ScriptManager.GetRegisteredStartupScripts()\n- uid: System.Web.UI.ScriptManager.GetStateString\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetStateString()\n  nameWithType: ScriptManager.GetStateString()\n  fullName: ScriptManager.GetStateString()\n- uid: System.Web.UI.ScriptManager.IsDebuggingEnabled\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: IsDebuggingEnabled\n  nameWithType: ScriptManager.IsDebuggingEnabled\n  fullName: ScriptManager.IsDebuggingEnabled\n- uid: System.Web.UI.ScriptManager.IsInAsyncPostBack\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: IsInAsyncPostBack\n  nameWithType: ScriptManager.IsInAsyncPostBack\n  fullName: ScriptManager.IsInAsyncPostBack\n- uid: System.Web.UI.ScriptManager.IsNavigating\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: IsNavigating\n  nameWithType: ScriptManager.IsNavigating\n  fullName: ScriptManager.IsNavigating\n- uid: System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: LoadPostData(String, NameValueCollection)\n  nameWithType: ScriptManager.LoadPostData(String, NameValueCollection)\n  fullName: ScriptManager.LoadPostData(String, NameValueCollection)\n- uid: System.Web.UI.ScriptManager.LoadScriptsBeforeUI\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: LoadScriptsBeforeUI\n  nameWithType: ScriptManager.LoadScriptsBeforeUI\n  fullName: ScriptManager.LoadScriptsBeforeUI\n- uid: System.Web.UI.ScriptManager.Navigate\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: Navigate\n  nameWithType: ScriptManager.Navigate\n  fullName: ScriptManager.Navigate\n- uid: System.Web.UI.HistoryEventArgs\n  name: HistoryEventArgs\n  nameWithType: HistoryEventArgs\n  fullName: System.Web.UI.HistoryEventArgs\n- uid: System.EventHandler{System.Web.UI.HistoryEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<HistoryEventArgs>\n  nameWithType: EventHandler<HistoryEventArgs>\n  fullName: System.EventHandler<System.Web.UI.HistoryEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.HistoryEventArgs\n    name: HistoryEventArgs\n    nameWithType: HistoryEventArgs\n    fullName: System.Web.UI.HistoryEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnAsyncPostBackError(AsyncPostBackErrorEventArgs)\n  nameWithType: ScriptManager.OnAsyncPostBackError(AsyncPostBackErrorEventArgs)\n  fullName: ScriptManager.OnAsyncPostBackError(AsyncPostBackErrorEventArgs)\n- uid: System.Web.UI.ScriptManager.OnInit(System.EventArgs)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnInit(EventArgs)\n  nameWithType: ScriptManager.OnInit(EventArgs)\n  fullName: ScriptManager.OnInit(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnPreRender(EventArgs)\n  nameWithType: ScriptManager.OnPreRender(EventArgs)\n  fullName: ScriptManager.OnPreRender(EventArgs)\n- uid: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)\n  nameWithType: ScriptManager.OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)\n  fullName: ScriptManager.OnResolveCompositeScriptReference(CompositeScriptReferenceEventArgs)\n- uid: System.Web.UI.CompositeScriptReferenceEventArgs\n  parent: System.Web.UI\n  isExternal: false\n  name: CompositeScriptReferenceEventArgs\n  nameWithType: CompositeScriptReferenceEventArgs\n  fullName: System.Web.UI.CompositeScriptReferenceEventArgs\n- uid: System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnResolveScriptReference(ScriptReferenceEventArgs)\n  nameWithType: ScriptManager.OnResolveScriptReference(ScriptReferenceEventArgs)\n  fullName: ScriptManager.OnResolveScriptReference(ScriptReferenceEventArgs)\n- uid: System.Web.UI.ScriptReferenceEventArgs\n  parent: System.Web.UI\n  isExternal: false\n  name: ScriptReferenceEventArgs\n  nameWithType: ScriptReferenceEventArgs\n  fullName: System.Web.UI.ScriptReferenceEventArgs\n- uid: System.Web.UI.ScriptManager.ProfileService\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ProfileService\n  nameWithType: ScriptManager.ProfileService\n  fullName: ScriptManager.ProfileService\n- uid: System.Web.UI.ProfileServiceManager\n  parent: System.Web.UI\n  isExternal: false\n  name: ProfileServiceManager\n  nameWithType: ProfileServiceManager\n  fullName: System.Web.UI.ProfileServiceManager\n- uid: System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RaisePostBackEvent(String)\n  nameWithType: ScriptManager.RaisePostBackEvent(String)\n  fullName: ScriptManager.RaisePostBackEvent(String)\n- uid: System.Web.UI.ScriptManager.RaisePostDataChangedEvent\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RaisePostDataChangedEvent()\n  nameWithType: ScriptManager.RaisePostDataChangedEvent()\n  fullName: ScriptManager.RaisePostDataChangedEvent()\n- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterArrayDeclaration(Control, String, String)\n  nameWithType: ScriptManager.RegisterArrayDeclaration(Control, String, String)\n  fullName: ScriptManager.RegisterArrayDeclaration(Control, String, String)\n- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterArrayDeclaration(Page, String, String)\n  nameWithType: ScriptManager.RegisterArrayDeclaration(Page, String, String)\n  fullName: ScriptManager.RegisterArrayDeclaration(Page, String, String)\n- uid: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterAsyncPostBackControl(Control)\n  nameWithType: ScriptManager.RegisterAsyncPostBackControl(Control)\n  fullName: ScriptManager.RegisterAsyncPostBackControl(Control)\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterClientScriptBlock(Control, Type, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterClientScriptBlock(Control, Type, String, String, Boolean)\n  fullName: ScriptManager.RegisterClientScriptBlock(Control, Type, String, String, Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterClientScriptBlock(Page, Type, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterClientScriptBlock(Page, Type, String, String, Boolean)\n  fullName: ScriptManager.RegisterClientScriptBlock(Page, Type, String, String, Boolean)\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterClientScriptInclude(Control, Type, String, String)\n  nameWithType: ScriptManager.RegisterClientScriptInclude(Control, Type, String, String)\n  fullName: ScriptManager.RegisterClientScriptInclude(Control, Type, String, String)\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterClientScriptInclude(Page, Type, String, String)\n  nameWithType: ScriptManager.RegisterClientScriptInclude(Page, Type, String, String)\n  fullName: ScriptManager.RegisterClientScriptInclude(Page, Type, String, String)\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterClientScriptResource(Page, Type, String)\n  nameWithType: ScriptManager.RegisterClientScriptResource(Page, Type, String)\n  fullName: ScriptManager.RegisterClientScriptResource(Page, Type, String)\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterClientScriptResource(Control, Type, String)\n  nameWithType: ScriptManager.RegisterClientScriptResource(Control, Type, String)\n  fullName: ScriptManager.RegisterClientScriptResource(Control, Type, String)\n- uid: System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterDataItem(Control, String)\n  nameWithType: ScriptManager.RegisterDataItem(Control, String)\n  fullName: ScriptManager.RegisterDataItem(Control, String)\n- uid: System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterDataItem(Control, String, Boolean)\n  nameWithType: ScriptManager.RegisterDataItem(Control, String, Boolean)\n  fullName: ScriptManager.RegisterDataItem(Control, String, Boolean)\n- uid: System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterDispose(Control, String)\n  nameWithType: ScriptManager.RegisterDispose(Control, String)\n  fullName: ScriptManager.RegisterDispose(Control, String)\n- uid: System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterExpandoAttribute(Control, String, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterExpandoAttribute(Control, String, String, String, Boolean)\n  fullName: ScriptManager.RegisterExpandoAttribute(Control, String, String, String, Boolean)\n- uid: System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterExtenderControl<TExtenderControl>(TExtenderControl, Control)\n  nameWithType: ScriptManager.RegisterExtenderControl<TExtenderControl>(TExtenderControl, Control)\n  fullName: ScriptManager.RegisterExtenderControl<TExtenderControl>(TExtenderControl, Control)\n- uid: TExtenderControl\n  isExternal: true\n  name: TExtenderControl\n  nameWithType: TExtenderControl\n  fullName: TExtenderControl\n- uid: System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterHiddenField(Control, String, String)\n  nameWithType: ScriptManager.RegisterHiddenField(Control, String, String)\n  fullName: ScriptManager.RegisterHiddenField(Control, String, String)\n- uid: System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterHiddenField(Page, String, String)\n  nameWithType: ScriptManager.RegisterHiddenField(Page, String, String)\n  fullName: ScriptManager.RegisterHiddenField(Page, String, String)\n- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Control,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterNamedClientScriptResource(Control, String)\n  nameWithType: ScriptManager.RegisterNamedClientScriptResource(Control, String)\n  fullName: ScriptManager.RegisterNamedClientScriptResource(Control, String)\n- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource(System.Web.UI.Page,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterNamedClientScriptResource(Page, String)\n  nameWithType: ScriptManager.RegisterNamedClientScriptResource(Page, String)\n  fullName: ScriptManager.RegisterNamedClientScriptResource(Page, String)\n- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterOnSubmitStatement(Page, Type, String, String)\n  nameWithType: ScriptManager.RegisterOnSubmitStatement(Page, Type, String, String)\n  fullName: ScriptManager.RegisterOnSubmitStatement(Page, Type, String, String)\n- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterOnSubmitStatement(Control, Type, String, String)\n  nameWithType: ScriptManager.RegisterOnSubmitStatement(Control, Type, String, String)\n  fullName: ScriptManager.RegisterOnSubmitStatement(Control, Type, String, String)\n- uid: System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterPostBackControl(Control)\n  nameWithType: ScriptManager.RegisterPostBackControl(Control)\n  fullName: ScriptManager.RegisterPostBackControl(Control)\n- uid: System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterScriptControl<TScriptControl>(TScriptControl)\n  nameWithType: ScriptManager.RegisterScriptControl<TScriptControl>(TScriptControl)\n  fullName: ScriptManager.RegisterScriptControl<TScriptControl>(TScriptControl)\n- uid: TScriptControl\n  isExternal: true\n  name: TScriptControl\n  nameWithType: TScriptControl\n  fullName: TScriptControl\n- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterScriptDescriptors(IExtenderControl)\n  nameWithType: ScriptManager.RegisterScriptDescriptors(IExtenderControl)\n  fullName: ScriptManager.RegisterScriptDescriptors(IExtenderControl)\n- uid: System.Web.UI.IExtenderControl\n  parent: System.Web.UI\n  isExternal: false\n  name: IExtenderControl\n  nameWithType: IExtenderControl\n  fullName: System.Web.UI.IExtenderControl\n- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterScriptDescriptors(IScriptControl)\n  nameWithType: ScriptManager.RegisterScriptDescriptors(IScriptControl)\n  fullName: ScriptManager.RegisterScriptDescriptors(IScriptControl)\n- uid: System.Web.UI.IScriptControl\n  parent: System.Web.UI\n  isExternal: false\n  name: IScriptControl\n  nameWithType: IScriptControl\n  fullName: System.Web.UI.IScriptControl\n- uid: System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterStartupScript(Control, Type, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterStartupScript(Control, Type, String, String, Boolean)\n  fullName: ScriptManager.RegisterStartupScript(Control, Type, String, String, Boolean)\n- uid: System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterStartupScript(Page, Type, String, String, Boolean)\n  nameWithType: ScriptManager.RegisterStartupScript(Page, Type, String, String, Boolean)\n  fullName: ScriptManager.RegisterStartupScript(Page, Type, String, String, Boolean)\n- uid: System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: Render(HtmlTextWriter)\n  nameWithType: ScriptManager.Render(HtmlTextWriter)\n  fullName: ScriptManager.Render(HtmlTextWriter)\n- uid: System.Web.UI.HtmlTextWriter\n  parent: System.Web.UI\n  isExternal: false\n  name: HtmlTextWriter\n  nameWithType: HtmlTextWriter\n  fullName: System.Web.UI.HtmlTextWriter\n- uid: System.Web.UI.ScriptManager.ResolveCompositeScriptReference\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ResolveCompositeScriptReference\n  nameWithType: ScriptManager.ResolveCompositeScriptReference\n  fullName: ScriptManager.ResolveCompositeScriptReference\n- uid: System.EventHandler{System.Web.UI.CompositeScriptReferenceEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<CompositeScriptReferenceEventArgs>\n  nameWithType: EventHandler<CompositeScriptReferenceEventArgs>\n  fullName: System.EventHandler<System.Web.UI.CompositeScriptReferenceEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.CompositeScriptReferenceEventArgs\n    name: CompositeScriptReferenceEventArgs\n    nameWithType: CompositeScriptReferenceEventArgs\n    fullName: System.Web.UI.CompositeScriptReferenceEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.ScriptManager.ResolveScriptReference\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ResolveScriptReference\n  nameWithType: ScriptManager.ResolveScriptReference\n  fullName: ScriptManager.ResolveScriptReference\n- uid: System.EventHandler{System.Web.UI.ScriptReferenceEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<ScriptReferenceEventArgs>\n  nameWithType: EventHandler<ScriptReferenceEventArgs>\n  fullName: System.EventHandler<System.Web.UI.ScriptReferenceEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Web.UI.ScriptReferenceEventArgs\n    name: ScriptReferenceEventArgs\n    nameWithType: ScriptReferenceEventArgs\n    fullName: System.Web.UI.ScriptReferenceEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.UI.ScriptManager.RoleService\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RoleService\n  nameWithType: ScriptManager.RoleService\n  fullName: ScriptManager.RoleService\n- uid: System.Web.UI.RoleServiceManager\n  parent: System.Web.UI\n  isExternal: false\n  name: RoleServiceManager\n  nameWithType: RoleServiceManager\n  fullName: System.Web.UI.RoleServiceManager\n- uid: System.Web.UI.ScriptManager.ScriptMode\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ScriptMode\n  nameWithType: ScriptManager.ScriptMode\n  fullName: ScriptManager.ScriptMode\n- uid: System.Web.UI.ScriptMode\n  parent: System.Web.UI\n  isExternal: false\n  name: ScriptMode\n  nameWithType: ScriptMode\n  fullName: System.Web.UI.ScriptMode\n- uid: System.Web.UI.ScriptManager.ScriptPath\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ScriptPath\n  nameWithType: ScriptManager.ScriptPath\n  fullName: ScriptManager.ScriptPath\n- uid: System.Web.UI.ScriptManager.ScriptResourceMapping\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ScriptResourceMapping\n  nameWithType: ScriptManager.ScriptResourceMapping\n  fullName: ScriptManager.ScriptResourceMapping\n- uid: System.Web.UI.ScriptResourceMapping\n  parent: System.Web.UI\n  isExternal: false\n  name: ScriptResourceMapping\n  nameWithType: ScriptResourceMapping\n  fullName: System.Web.UI.ScriptResourceMapping\n- uid: System.Web.UI.ScriptManager.Scripts\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: Scripts\n  nameWithType: ScriptManager.Scripts\n  fullName: ScriptManager.Scripts\n- uid: System.Web.UI.ScriptReferenceCollection\n  parent: System.Web.UI\n  isExternal: false\n  name: ScriptReferenceCollection\n  nameWithType: ScriptReferenceCollection\n  fullName: System.Web.UI.ScriptReferenceCollection\n- uid: System.Web.UI.ScriptManager.Services\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: Services\n  nameWithType: ScriptManager.Services\n  fullName: ScriptManager.Services\n- uid: System.Web.UI.ServiceReferenceCollection\n  parent: System.Web.UI\n  isExternal: false\n  name: ServiceReferenceCollection\n  nameWithType: ServiceReferenceCollection\n  fullName: System.Web.UI.ServiceReferenceCollection\n- uid: System.Web.UI.ScriptManager.SetFocus(System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: SetFocus(String)\n  nameWithType: ScriptManager.SetFocus(String)\n  fullName: ScriptManager.SetFocus(String)\n- uid: System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: SetFocus(Control)\n  nameWithType: ScriptManager.SetFocus(Control)\n  fullName: ScriptManager.SetFocus(Control)\n- uid: System.Web.UI.ScriptManager.SupportsPartialRendering\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: SupportsPartialRendering\n  nameWithType: ScriptManager.SupportsPartialRendering\n  fullName: ScriptManager.SupportsPartialRendering\n- uid: System.Web.UI.ScriptManager.Visible\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: Visible\n  nameWithType: ScriptManager.Visible\n  fullName: ScriptManager.Visible\n- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: IPostBackDataHandler.LoadPostData(String, NameValueCollection)\n  nameWithType: ScriptManager.IPostBackDataHandler.LoadPostData(String, NameValueCollection)\n  fullName: ScriptManager.IPostBackDataHandler.LoadPostData(String, NameValueCollection)\n- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: IPostBackDataHandler.RaisePostDataChangedEvent()\n  nameWithType: ScriptManager.IPostBackDataHandler.RaisePostDataChangedEvent()\n  fullName: ScriptManager.IPostBackDataHandler.RaisePostDataChangedEvent()\n- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: IPostBackEventHandler.RaisePostBackEvent(String)\n  nameWithType: ScriptManager.IPostBackEventHandler.RaisePostBackEvent(String)\n  fullName: ScriptManager.IPostBackEventHandler.RaisePostBackEvent(String)\n- uid: System.Web.UI.ScriptManager.AddHistoryPoint*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AddHistoryPoint\n  nameWithType: ScriptManager.AddHistoryPoint\n  fullName: ScriptManager.AddHistoryPoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.#ctor*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ScriptManager\n  nameWithType: ScriptManager.ScriptManager\n  fullName: ScriptManager.ScriptManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.AjaxFrameworkAssembly*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AjaxFrameworkAssembly\n  nameWithType: ScriptManager.AjaxFrameworkAssembly\n  fullName: ScriptManager.AjaxFrameworkAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.AjaxFrameworkMode*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AjaxFrameworkMode\n  nameWithType: ScriptManager.AjaxFrameworkMode\n  fullName: ScriptManager.AjaxFrameworkMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.AllowCustomErrorsRedirect*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AllowCustomErrorsRedirect\n  nameWithType: ScriptManager.AllowCustomErrorsRedirect\n  fullName: ScriptManager.AllowCustomErrorsRedirect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.AsyncPostBackErrorMessage*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AsyncPostBackErrorMessage\n  nameWithType: ScriptManager.AsyncPostBackErrorMessage\n  fullName: ScriptManager.AsyncPostBackErrorMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.AsyncPostBackSourceElementID*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AsyncPostBackSourceElementID\n  nameWithType: ScriptManager.AsyncPostBackSourceElementID\n  fullName: ScriptManager.AsyncPostBackSourceElementID\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.AsyncPostBackTimeout*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AsyncPostBackTimeout\n  nameWithType: ScriptManager.AsyncPostBackTimeout\n  fullName: ScriptManager.AsyncPostBackTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.AuthenticationService*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: AuthenticationService\n  nameWithType: ScriptManager.AuthenticationService\n  fullName: ScriptManager.AuthenticationService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.ClientNavigateHandler*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ClientNavigateHandler\n  nameWithType: ScriptManager.ClientNavigateHandler\n  fullName: ScriptManager.ClientNavigateHandler\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.CompositeScript*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: CompositeScript\n  nameWithType: ScriptManager.CompositeScript\n  fullName: ScriptManager.CompositeScript\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.EmptyPageUrl*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EmptyPageUrl\n  nameWithType: ScriptManager.EmptyPageUrl\n  fullName: ScriptManager.EmptyPageUrl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.EnableCdn*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableCdn\n  nameWithType: ScriptManager.EnableCdn\n  fullName: ScriptManager.EnableCdn\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.EnableCdnFallback*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableCdnFallback\n  nameWithType: ScriptManager.EnableCdnFallback\n  fullName: ScriptManager.EnableCdnFallback\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.EnableHistory*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableHistory\n  nameWithType: ScriptManager.EnableHistory\n  fullName: ScriptManager.EnableHistory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.EnablePageMethods*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnablePageMethods\n  nameWithType: ScriptManager.EnablePageMethods\n  fullName: ScriptManager.EnablePageMethods\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.EnablePartialRendering*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnablePartialRendering\n  nameWithType: ScriptManager.EnablePartialRendering\n  fullName: ScriptManager.EnablePartialRendering\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.EnableScriptGlobalization*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableScriptGlobalization\n  nameWithType: ScriptManager.EnableScriptGlobalization\n  fullName: ScriptManager.EnableScriptGlobalization\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.EnableScriptLocalization*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableScriptLocalization\n  nameWithType: ScriptManager.EnableScriptLocalization\n  fullName: ScriptManager.EnableScriptLocalization\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.EnableSecureHistoryState*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: EnableSecureHistoryState\n  nameWithType: ScriptManager.EnableSecureHistoryState\n  fullName: ScriptManager.EnableSecureHistoryState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.GetCurrent*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetCurrent\n  nameWithType: ScriptManager.GetCurrent\n  fullName: ScriptManager.GetCurrent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredArrayDeclarations\n  nameWithType: ScriptManager.GetRegisteredArrayDeclarations\n  fullName: ScriptManager.GetRegisteredArrayDeclarations\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredClientScriptBlocks\n  nameWithType: ScriptManager.GetRegisteredClientScriptBlocks\n  fullName: ScriptManager.GetRegisteredClientScriptBlocks\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.GetRegisteredDisposeScripts*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredDisposeScripts\n  nameWithType: ScriptManager.GetRegisteredDisposeScripts\n  fullName: ScriptManager.GetRegisteredDisposeScripts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredExpandoAttributes\n  nameWithType: ScriptManager.GetRegisteredExpandoAttributes\n  fullName: ScriptManager.GetRegisteredExpandoAttributes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.GetRegisteredHiddenFields*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredHiddenFields\n  nameWithType: ScriptManager.GetRegisteredHiddenFields\n  fullName: ScriptManager.GetRegisteredHiddenFields\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredOnSubmitStatements\n  nameWithType: ScriptManager.GetRegisteredOnSubmitStatements\n  fullName: ScriptManager.GetRegisteredOnSubmitStatements\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.GetRegisteredStartupScripts*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetRegisteredStartupScripts\n  nameWithType: ScriptManager.GetRegisteredStartupScripts\n  fullName: ScriptManager.GetRegisteredStartupScripts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.GetStateString*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: GetStateString\n  nameWithType: ScriptManager.GetStateString\n  fullName: ScriptManager.GetStateString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.IsDebuggingEnabled*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: IsDebuggingEnabled\n  nameWithType: ScriptManager.IsDebuggingEnabled\n  fullName: ScriptManager.IsDebuggingEnabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.IsInAsyncPostBack*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: IsInAsyncPostBack\n  nameWithType: ScriptManager.IsInAsyncPostBack\n  fullName: ScriptManager.IsInAsyncPostBack\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.IsNavigating*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: IsNavigating\n  nameWithType: ScriptManager.IsNavigating\n  fullName: ScriptManager.IsNavigating\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.LoadPostData*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: LoadPostData\n  nameWithType: ScriptManager.LoadPostData\n  fullName: ScriptManager.LoadPostData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.LoadScriptsBeforeUI*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: LoadScriptsBeforeUI\n  nameWithType: ScriptManager.LoadScriptsBeforeUI\n  fullName: ScriptManager.LoadScriptsBeforeUI\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.OnAsyncPostBackError*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnAsyncPostBackError\n  nameWithType: ScriptManager.OnAsyncPostBackError\n  fullName: ScriptManager.OnAsyncPostBackError\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.OnInit*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnInit\n  nameWithType: ScriptManager.OnInit\n  fullName: ScriptManager.OnInit\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.OnPreRender*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnPreRender\n  nameWithType: ScriptManager.OnPreRender\n  fullName: ScriptManager.OnPreRender\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.OnResolveCompositeScriptReference*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnResolveCompositeScriptReference\n  nameWithType: ScriptManager.OnResolveCompositeScriptReference\n  fullName: ScriptManager.OnResolveCompositeScriptReference\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.OnResolveScriptReference*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: OnResolveScriptReference\n  nameWithType: ScriptManager.OnResolveScriptReference\n  fullName: ScriptManager.OnResolveScriptReference\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.ProfileService*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ProfileService\n  nameWithType: ScriptManager.ProfileService\n  fullName: ScriptManager.ProfileService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RaisePostBackEvent*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RaisePostBackEvent\n  nameWithType: ScriptManager.RaisePostBackEvent\n  fullName: ScriptManager.RaisePostBackEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RaisePostDataChangedEvent*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RaisePostDataChangedEvent\n  nameWithType: ScriptManager.RaisePostDataChangedEvent\n  fullName: ScriptManager.RaisePostDataChangedEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterArrayDeclaration*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterArrayDeclaration\n  nameWithType: ScriptManager.RegisterArrayDeclaration\n  fullName: ScriptManager.RegisterArrayDeclaration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterAsyncPostBackControl*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterAsyncPostBackControl\n  nameWithType: ScriptManager.RegisterAsyncPostBackControl\n  fullName: ScriptManager.RegisterAsyncPostBackControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptBlock*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterClientScriptBlock\n  nameWithType: ScriptManager.RegisterClientScriptBlock\n  fullName: ScriptManager.RegisterClientScriptBlock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptInclude*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterClientScriptInclude\n  nameWithType: ScriptManager.RegisterClientScriptInclude\n  fullName: ScriptManager.RegisterClientScriptInclude\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterClientScriptResource*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterClientScriptResource\n  nameWithType: ScriptManager.RegisterClientScriptResource\n  fullName: ScriptManager.RegisterClientScriptResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterDataItem*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterDataItem\n  nameWithType: ScriptManager.RegisterDataItem\n  fullName: ScriptManager.RegisterDataItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterDispose*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterDispose\n  nameWithType: ScriptManager.RegisterDispose\n  fullName: ScriptManager.RegisterDispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterExpandoAttribute*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterExpandoAttribute\n  nameWithType: ScriptManager.RegisterExpandoAttribute\n  fullName: ScriptManager.RegisterExpandoAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterExtenderControl``1*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterExtenderControl<TExtenderControl>\n  nameWithType: ScriptManager.RegisterExtenderControl<TExtenderControl>\n  fullName: ScriptManager.RegisterExtenderControl<TExtenderControl>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterHiddenField*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterHiddenField\n  nameWithType: ScriptManager.RegisterHiddenField\n  fullName: ScriptManager.RegisterHiddenField\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterNamedClientScriptResource*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterNamedClientScriptResource\n  nameWithType: ScriptManager.RegisterNamedClientScriptResource\n  fullName: ScriptManager.RegisterNamedClientScriptResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterOnSubmitStatement*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterOnSubmitStatement\n  nameWithType: ScriptManager.RegisterOnSubmitStatement\n  fullName: ScriptManager.RegisterOnSubmitStatement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterPostBackControl*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterPostBackControl\n  nameWithType: ScriptManager.RegisterPostBackControl\n  fullName: ScriptManager.RegisterPostBackControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterScriptControl``1*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterScriptControl<TScriptControl>\n  nameWithType: ScriptManager.RegisterScriptControl<TScriptControl>\n  fullName: ScriptManager.RegisterScriptControl<TScriptControl>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterScriptDescriptors*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterScriptDescriptors\n  nameWithType: ScriptManager.RegisterScriptDescriptors\n  fullName: ScriptManager.RegisterScriptDescriptors\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RegisterStartupScript*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RegisterStartupScript\n  nameWithType: ScriptManager.RegisterStartupScript\n  fullName: ScriptManager.RegisterStartupScript\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.Render*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: Render\n  nameWithType: ScriptManager.Render\n  fullName: ScriptManager.Render\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.RoleService*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: RoleService\n  nameWithType: ScriptManager.RoleService\n  fullName: ScriptManager.RoleService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.ScriptMode*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ScriptMode\n  nameWithType: ScriptManager.ScriptMode\n  fullName: ScriptManager.ScriptMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.ScriptPath*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ScriptPath\n  nameWithType: ScriptManager.ScriptPath\n  fullName: ScriptManager.ScriptPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.ScriptResourceMapping*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: ScriptResourceMapping\n  nameWithType: ScriptManager.ScriptResourceMapping\n  fullName: ScriptManager.ScriptResourceMapping\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.Scripts*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: Scripts\n  nameWithType: ScriptManager.Scripts\n  fullName: ScriptManager.Scripts\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.Services*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: Services\n  nameWithType: ScriptManager.Services\n  fullName: ScriptManager.Services\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.SetFocus*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: SetFocus\n  nameWithType: ScriptManager.SetFocus\n  fullName: ScriptManager.SetFocus\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.SupportsPartialRendering*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: SupportsPartialRendering\n  nameWithType: ScriptManager.SupportsPartialRendering\n  fullName: ScriptManager.SupportsPartialRendering\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.Visible*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: Visible\n  nameWithType: ScriptManager.Visible\n  fullName: ScriptManager.Visible\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: System.Web.UI.IPostBackDataHandler.LoadPostData\n  nameWithType: ScriptManager.System.Web.UI.IPostBackDataHandler.LoadPostData\n  fullName: ScriptManager.System.Web.UI.IPostBackDataHandler.LoadPostData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent\n  nameWithType: ScriptManager.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent\n  fullName: ScriptManager.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*\n  parent: System.Web.UI.ScriptManager\n  isExternal: false\n  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent\n  nameWithType: ScriptManager.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent\n  fullName: ScriptManager.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/ScriptManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Web.UI.Control.Adapter\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Adapter\n  nameWithType: Control.Adapter\n  fullName: Control.Adapter\n- uid: System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: AddedControl(Control, Int32)\n  nameWithType: Control.AddedControl(Control, Int32)\n  fullName: Control.AddedControl(Control, Int32)\n- uid: System.Web.UI.Control.AddParsedSubObject(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: AddParsedSubObject(Object)\n  nameWithType: Control.AddParsedSubObject(Object)\n  fullName: Control.AddParsedSubObject(Object)\n- uid: System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ApplyStyleSheetSkin(Page)\n  nameWithType: Control.ApplyStyleSheetSkin(Page)\n  fullName: Control.ApplyStyleSheetSkin(Page)\n- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: AppRelativeTemplateSourceDirectory\n  nameWithType: Control.AppRelativeTemplateSourceDirectory\n  fullName: Control.AppRelativeTemplateSourceDirectory\n- uid: System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: BeginRenderTracing(TextWriter, Object)\n  nameWithType: Control.BeginRenderTracing(TextWriter, Object)\n  fullName: Control.BeginRenderTracing(TextWriter, Object)\n- uid: System.Web.UI.Control.BindingContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: BindingContainer\n  nameWithType: Control.BindingContainer\n  fullName: Control.BindingContainer\n- uid: System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: BuildProfileTree(String, Boolean)\n  nameWithType: Control.BuildProfileTree(String, Boolean)\n  fullName: Control.BuildProfileTree(String, Boolean)\n- uid: System.Web.UI.Control.ChildControlsCreated\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ChildControlsCreated\n  nameWithType: Control.ChildControlsCreated\n  fullName: Control.ChildControlsCreated\n- uid: System.Web.UI.Control.ClearCachedClientID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearCachedClientID()\n  nameWithType: Control.ClearCachedClientID()\n  fullName: Control.ClearCachedClientID()\n- uid: System.Web.UI.Control.ClearChildControlState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearChildControlState()\n  nameWithType: Control.ClearChildControlState()\n  fullName: Control.ClearChildControlState()\n- uid: System.Web.UI.Control.ClearChildState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearChildState()\n  nameWithType: Control.ClearChildState()\n  fullName: Control.ClearChildState()\n- uid: System.Web.UI.Control.ClearChildViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearChildViewState()\n  nameWithType: Control.ClearChildViewState()\n  fullName: Control.ClearChildViewState()\n- uid: System.Web.UI.Control.ClearEffectiveClientIDMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClearEffectiveClientIDMode()\n  nameWithType: Control.ClearEffectiveClientIDMode()\n  fullName: Control.ClearEffectiveClientIDMode()\n- uid: System.Web.UI.Control.ClientID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClientID\n  nameWithType: Control.ClientID\n  fullName: Control.ClientID\n- uid: System.Web.UI.Control.ClientIDMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClientIDMode\n  nameWithType: Control.ClientIDMode\n  fullName: Control.ClientIDMode\n- uid: System.Web.UI.Control.ClientIDSeparator\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ClientIDSeparator\n  nameWithType: Control.ClientIDSeparator\n  fullName: Control.ClientIDSeparator\n- uid: System.Web.UI.Control.Context\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Context\n  nameWithType: Control.Context\n  fullName: Control.Context\n- uid: System.Web.UI.Control.Controls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Controls\n  nameWithType: Control.Controls\n  fullName: Control.Controls\n- uid: System.Web.UI.Control.CreateChildControls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: CreateChildControls()\n  nameWithType: Control.CreateChildControls()\n  fullName: Control.CreateChildControls()\n- uid: System.Web.UI.Control.CreateControlCollection\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: CreateControlCollection()\n  nameWithType: Control.CreateControlCollection()\n  fullName: Control.CreateControlCollection()\n- uid: System.Web.UI.Control.DataBind\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBind()\n  nameWithType: Control.DataBind()\n  fullName: Control.DataBind()\n- uid: System.Web.UI.Control.DataBind(System.Boolean)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBind(Boolean)\n  nameWithType: Control.DataBind(Boolean)\n  fullName: Control.DataBind(Boolean)\n- uid: System.Web.UI.Control.DataBindChildren\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBindChildren()\n  nameWithType: Control.DataBindChildren()\n  fullName: Control.DataBindChildren()\n- uid: System.Web.UI.Control.DataBinding\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataBinding\n  nameWithType: Control.DataBinding\n  fullName: Control.DataBinding\n- uid: System.Web.UI.Control.DataItemContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataItemContainer\n  nameWithType: Control.DataItemContainer\n  fullName: Control.DataItemContainer\n- uid: System.Web.UI.Control.DataKeysContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DataKeysContainer\n  nameWithType: Control.DataKeysContainer\n  fullName: Control.DataKeysContainer\n- uid: System.Web.UI.Control.DesignMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: DesignMode\n  nameWithType: Control.DesignMode\n  fullName: Control.DesignMode\n- uid: System.Web.UI.Control.Dispose\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Dispose()\n  nameWithType: Control.Dispose()\n  fullName: Control.Dispose()\n- uid: System.Web.UI.Control.Disposed\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Disposed\n  nameWithType: Control.Disposed\n  fullName: Control.Disposed\n- uid: System.Web.UI.Control.EnableTheming\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnableTheming\n  nameWithType: Control.EnableTheming\n  fullName: Control.EnableTheming\n- uid: System.Web.UI.Control.EnableViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnableViewState\n  nameWithType: Control.EnableViewState\n  fullName: Control.EnableViewState\n- uid: System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EndRenderTracing(TextWriter, Object)\n  nameWithType: Control.EndRenderTracing(TextWriter, Object)\n  fullName: Control.EndRenderTracing(TextWriter, Object)\n- uid: System.Web.UI.Control.EnsureChildControls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnsureChildControls()\n  nameWithType: Control.EnsureChildControls()\n  fullName: Control.EnsureChildControls()\n- uid: System.Web.UI.Control.EnsureID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: EnsureID()\n  nameWithType: Control.EnsureID()\n  fullName: Control.EnsureID()\n- uid: System.Web.UI.Control.Events\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Events\n  nameWithType: Control.Events\n  fullName: Control.Events\n- uid: System.Web.UI.Control.FindControl(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: FindControl(String)\n  nameWithType: Control.FindControl(String)\n  fullName: Control.FindControl(String)\n- uid: System.Web.UI.Control.FindControl(System.String,System.Int32)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: FindControl(String, Int32)\n  nameWithType: Control.FindControl(String, Int32)\n  fullName: Control.FindControl(String, Int32)\n- uid: System.Web.UI.Control.Focus\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Focus()\n  nameWithType: Control.Focus()\n  fullName: Control.Focus()\n- uid: System.Web.UI.Control.GetDesignModeState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetDesignModeState()\n  nameWithType: Control.GetDesignModeState()\n  fullName: Control.GetDesignModeState()\n- uid: System.Web.UI.Control.GetRouteUrl(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(Object)\n  nameWithType: Control.GetRouteUrl(Object)\n  fullName: Control.GetRouteUrl(Object)\n- uid: System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(RouteValueDictionary)\n  nameWithType: Control.GetRouteUrl(RouteValueDictionary)\n  fullName: Control.GetRouteUrl(RouteValueDictionary)\n- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(String, Object)\n  nameWithType: Control.GetRouteUrl(String, Object)\n  fullName: Control.GetRouteUrl(String, Object)\n- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetRouteUrl(String, RouteValueDictionary)\n  nameWithType: Control.GetRouteUrl(String, RouteValueDictionary)\n  fullName: Control.GetRouteUrl(String, RouteValueDictionary)\n- uid: System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: GetUniqueIDRelativeTo(Control)\n  nameWithType: Control.GetUniqueIDRelativeTo(Control)\n  fullName: Control.GetUniqueIDRelativeTo(Control)\n- uid: System.Web.UI.Control.HasChildViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: HasChildViewState\n  nameWithType: Control.HasChildViewState\n  fullName: Control.HasChildViewState\n- uid: System.Web.UI.Control.HasControls\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: HasControls()\n  nameWithType: Control.HasControls()\n  fullName: Control.HasControls()\n- uid: System.Web.UI.Control.HasEvents\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: HasEvents()\n  nameWithType: Control.HasEvents()\n  fullName: Control.HasEvents()\n- uid: System.Web.UI.Control.ID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ID\n  nameWithType: Control.ID\n  fullName: Control.ID\n- uid: System.Web.UI.Control.IdSeparator\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IdSeparator\n  nameWithType: Control.IdSeparator\n  fullName: Control.IdSeparator\n- uid: System.Web.UI.Control.Init\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Init\n  nameWithType: Control.Init\n  fullName: Control.Init\n- uid: System.Web.UI.Control.IsChildControlStateCleared\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsChildControlStateCleared\n  nameWithType: Control.IsChildControlStateCleared\n  fullName: Control.IsChildControlStateCleared\n- uid: System.Web.UI.Control.IsLiteralContent\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsLiteralContent()\n  nameWithType: Control.IsLiteralContent()\n  fullName: Control.IsLiteralContent()\n- uid: System.Web.UI.Control.IsTrackingViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsTrackingViewState\n  nameWithType: Control.IsTrackingViewState\n  fullName: Control.IsTrackingViewState\n- uid: System.Web.UI.Control.IsViewStateEnabled\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IsViewStateEnabled\n  nameWithType: Control.IsViewStateEnabled\n  fullName: Control.IsViewStateEnabled\n- uid: System.Web.UI.Control.Load\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Load\n  nameWithType: Control.Load\n  fullName: Control.Load\n- uid: System.Web.UI.Control.LoadControlState(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: LoadControlState(Object)\n  nameWithType: Control.LoadControlState(Object)\n  fullName: Control.LoadControlState(Object)\n- uid: System.Web.UI.Control.LoadViewState(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: LoadViewState(Object)\n  nameWithType: Control.LoadViewState(Object)\n  fullName: Control.LoadViewState(Object)\n- uid: System.Web.UI.Control.LoadViewStateByID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: LoadViewStateByID\n  nameWithType: Control.LoadViewStateByID\n  fullName: Control.LoadViewStateByID\n- uid: System.Web.UI.Control.MapPathSecure(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: MapPathSecure(String)\n  nameWithType: Control.MapPathSecure(String)\n  fullName: Control.MapPathSecure(String)\n- uid: System.Web.UI.Control.NamingContainer\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: NamingContainer\n  nameWithType: Control.NamingContainer\n  fullName: Control.NamingContainer\n- uid: System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnBubbleEvent(Object, EventArgs)\n  nameWithType: Control.OnBubbleEvent(Object, EventArgs)\n  fullName: Control.OnBubbleEvent(Object, EventArgs)\n- uid: System.Web.UI.Control.OnDataBinding(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnDataBinding(EventArgs)\n  nameWithType: Control.OnDataBinding(EventArgs)\n  fullName: Control.OnDataBinding(EventArgs)\n- uid: System.Web.UI.Control.OnLoad(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnLoad(EventArgs)\n  nameWithType: Control.OnLoad(EventArgs)\n  fullName: Control.OnLoad(EventArgs)\n- uid: System.Web.UI.Control.OnUnload(System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OnUnload(EventArgs)\n  nameWithType: Control.OnUnload(EventArgs)\n  fullName: Control.OnUnload(EventArgs)\n- uid: System.Web.UI.Control.OpenFile(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: OpenFile(String)\n  nameWithType: Control.OpenFile(String)\n  fullName: Control.OpenFile(String)\n- uid: System.Web.UI.Control.Page\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Page\n  nameWithType: Control.Page\n  fullName: Control.Page\n- uid: System.Web.UI.Control.Parent\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Parent\n  nameWithType: Control.Parent\n  fullName: Control.Parent\n- uid: System.Web.UI.Control.PreRender\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: PreRender\n  nameWithType: Control.PreRender\n  fullName: Control.PreRender\n- uid: System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RaiseBubbleEvent(Object, EventArgs)\n  nameWithType: Control.RaiseBubbleEvent(Object, EventArgs)\n  fullName: Control.RaiseBubbleEvent(Object, EventArgs)\n- uid: System.Web.UI.Control.RemovedControl(System.Web.UI.Control)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RemovedControl(Control)\n  nameWithType: Control.RemovedControl(Control)\n  fullName: Control.RemovedControl(Control)\n- uid: System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderChildren(HtmlTextWriter)\n  nameWithType: Control.RenderChildren(HtmlTextWriter)\n  fullName: Control.RenderChildren(HtmlTextWriter)\n- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderControl(HtmlTextWriter)\n  nameWithType: Control.RenderControl(HtmlTextWriter)\n  fullName: Control.RenderControl(HtmlTextWriter)\n- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderControl(HtmlTextWriter, ControlAdapter)\n  nameWithType: Control.RenderControl(HtmlTextWriter, ControlAdapter)\n  fullName: Control.RenderControl(HtmlTextWriter, ControlAdapter)\n- uid: System.Web.UI.Control.RenderingCompatibility\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: RenderingCompatibility\n  nameWithType: Control.RenderingCompatibility\n  fullName: Control.RenderingCompatibility\n- uid: System.Web.UI.Control.ResolveAdapter\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ResolveAdapter()\n  nameWithType: Control.ResolveAdapter()\n  fullName: Control.ResolveAdapter()\n- uid: System.Web.UI.Control.ResolveClientUrl(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ResolveClientUrl(String)\n  nameWithType: Control.ResolveClientUrl(String)\n  fullName: Control.ResolveClientUrl(String)\n- uid: System.Web.UI.Control.ResolveUrl(System.String)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ResolveUrl(String)\n  nameWithType: Control.ResolveUrl(String)\n  fullName: Control.ResolveUrl(String)\n- uid: System.Web.UI.Control.SaveControlState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SaveControlState()\n  nameWithType: Control.SaveControlState()\n  fullName: Control.SaveControlState()\n- uid: System.Web.UI.Control.SaveViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SaveViewState()\n  nameWithType: Control.SaveViewState()\n  fullName: Control.SaveViewState()\n- uid: System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetDesignModeState(IDictionary)\n  nameWithType: Control.SetDesignModeState(IDictionary)\n  fullName: Control.SetDesignModeState(IDictionary)\n- uid: System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetRenderMethodDelegate(RenderMethod)\n  nameWithType: Control.SetRenderMethodDelegate(RenderMethod)\n  fullName: Control.SetRenderMethodDelegate(RenderMethod)\n- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetTraceData(Object, Object)\n  nameWithType: Control.SetTraceData(Object, Object)\n  fullName: Control.SetTraceData(Object, Object)\n- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SetTraceData(Object, Object, Object)\n  nameWithType: Control.SetTraceData(Object, Object, Object)\n  fullName: Control.SetTraceData(Object, Object, Object)\n- uid: System.Web.UI.Control.Site\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Site\n  nameWithType: Control.Site\n  fullName: Control.Site\n- uid: System.Web.UI.Control.SkinID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: SkinID\n  nameWithType: Control.SkinID\n  fullName: Control.SkinID\n- uid: System.Web.UI.Control.TemplateControl\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: TemplateControl\n  nameWithType: Control.TemplateControl\n  fullName: Control.TemplateControl\n- uid: System.Web.UI.Control.TemplateSourceDirectory\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: TemplateSourceDirectory\n  nameWithType: Control.TemplateSourceDirectory\n  fullName: Control.TemplateSourceDirectory\n- uid: System.Web.UI.Control.TrackViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: TrackViewState()\n  nameWithType: Control.TrackViewState()\n  fullName: Control.TrackViewState()\n- uid: System.Web.UI.Control.UniqueID\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: UniqueID\n  nameWithType: Control.UniqueID\n  fullName: Control.UniqueID\n- uid: System.Web.UI.Control.Unload\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: Unload\n  nameWithType: Control.Unload\n  fullName: Control.Unload\n- uid: System.Web.UI.Control.ValidateRequestMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ValidateRequestMode\n  nameWithType: Control.ValidateRequestMode\n  fullName: Control.ValidateRequestMode\n- uid: System.Web.UI.Control.ViewState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ViewState\n  nameWithType: Control.ViewState\n  fullName: Control.ViewState\n- uid: System.Web.UI.Control.ViewStateIgnoresCase\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ViewStateIgnoresCase\n  nameWithType: Control.ViewStateIgnoresCase\n  fullName: Control.ViewStateIgnoresCase\n- uid: System.Web.UI.Control.ViewStateMode\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: ViewStateMode\n  nameWithType: Control.ViewStateMode\n  fullName: Control.ViewStateMode\n- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlBuilderAccessor.ControlBuilder\n  nameWithType: Control.IControlBuilderAccessor.ControlBuilder\n  fullName: Control.IControlBuilderAccessor.ControlBuilder\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.GetDesignModeState()\n  nameWithType: Control.IControlDesignerAccessor.GetDesignModeState()\n  fullName: Control.IControlDesignerAccessor.GetDesignModeState()\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.SetDesignModeState(IDictionary)\n  nameWithType: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)\n  fullName: Control.IControlDesignerAccessor.SetDesignModeState(IDictionary)\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.SetOwnerControl(Control)\n  nameWithType: Control.IControlDesignerAccessor.SetOwnerControl(Control)\n  fullName: Control.IControlDesignerAccessor.SetOwnerControl(Control)\n- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IControlDesignerAccessor.UserData\n  nameWithType: Control.IControlDesignerAccessor.UserData\n  fullName: Control.IControlDesignerAccessor.UserData\n- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IDataBindingsAccessor.DataBindings\n  nameWithType: Control.IDataBindingsAccessor.DataBindings\n  fullName: Control.IDataBindingsAccessor.DataBindings\n- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IDataBindingsAccessor.HasDataBindings\n  nameWithType: Control.IDataBindingsAccessor.HasDataBindings\n  fullName: Control.IDataBindingsAccessor.HasDataBindings\n- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IExpressionsAccessor.Expressions\n  nameWithType: Control.IExpressionsAccessor.Expressions\n  fullName: Control.IExpressionsAccessor.Expressions\n- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IExpressionsAccessor.HasExpressions\n  nameWithType: Control.IExpressionsAccessor.HasExpressions\n  fullName: Control.IExpressionsAccessor.HasExpressions\n- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)\n  parent: System.Web.UI.Control\n  isExternal: false\n  name: IParserAccessor.AddParsedSubObject(Object)\n  nameWithType: Control.IParserAccessor.AddParsedSubObject(Object)\n  fullName: Control.IParserAccessor.AddParsedSubObject(Object)\n- uid: System.Web.DynamicData.DynamicDataExtensions.FindDataSourceControl(System.Web.UI.Control)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: FindDataSourceControl(Control)\n  nameWithType: DynamicDataExtensions.FindDataSourceControl(Control)\n  fullName: DynamicDataExtensions.FindDataSourceControl(Control)\n- uid: System.Web.DynamicData.DynamicDataExtensions.FindFieldTemplate(System.Web.UI.Control,System.String)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: FindFieldTemplate(Control, String)\n  nameWithType: DynamicDataExtensions.FindFieldTemplate(Control, String)\n  fullName: DynamicDataExtensions.FindFieldTemplate(Control, String)\n- uid: System.Web.DynamicData.DynamicDataExtensions.FindMetaTable(System.Web.UI.Control)\n  parent: System.Web.DynamicData.DynamicDataExtensions\n  isExternal: false\n  name: FindMetaTable(Control)\n  nameWithType: DynamicDataExtensions.FindMetaTable(Control)\n  fullName: DynamicDataExtensions.FindMetaTable(Control)\n- uid: System.Web.UI.IPostBackDataHandler\n  parent: System.Web.UI\n  isExternal: false\n  name: IPostBackDataHandler\n  nameWithType: IPostBackDataHandler\n  fullName: System.Web.UI.IPostBackDataHandler\n- uid: System.Web.UI.IPostBackEventHandler\n  parent: System.Web.UI\n  isExternal: false\n  name: IPostBackEventHandler\n  nameWithType: IPostBackEventHandler\n  fullName: System.Web.UI.IPostBackEventHandler\n"}