{"nodes":[{"content":"Describes an intermediate language (IL) instruction.","nodes":[{"pos":[0,52],"content":"Describes an intermediate language (IL) instruction.","nodes":[{"content":"Describes an intermediate language (IL) instruction.","pos":[0,52]}]}],"pos":[1174,1227],"yaml":true},{"content":"Tests whether the given object is equal to this `Opcode`.","nodes":[{"pos":[0,57],"content":"Tests whether the given object is equal to this <ph id=\"ph1\">`Opcode`</ph>.","source":"Tests whether the given object is equal to this `Opcode`."}],"pos":[2960,3018],"yaml":true},{"content":"The object to compare to this object.","nodes":[{"pos":[0,37],"content":"The object to compare to this object.","nodes":[{"content":"The object to compare to this object.","pos":[0,37]}]}],"pos":[3158,3196],"yaml":true},{"content":"`true` if <code>obj</code> is an instance of `Opcode` and is equal to this object; otherwise, `false`.","nodes":[{"pos":[0,102],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an instance of <ph id=\"ph3\">`Opcode`</ph> and is equal to this object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>obj</code> is an instance of `Opcode` and is equal to this object; otherwise, `false`."}],"pos":[3254,3359],"yaml":true},{"content":"Indicates whether the current instance is equal to the specified <xref href=\"System.Reflection.Emit.OpCode\"></xref>.","nodes":[{"pos":[0,116],"content":"Indicates whether the current instance is equal to the specified <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.OpCode\"&gt;&lt;/xref&gt;</ph>.","source":"Indicates whether the current instance is equal to the specified <xref href=\"System.Reflection.Emit.OpCode\"></xref>."}],"pos":[4951,5068],"yaml":true},{"content":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to the current instance.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.OpCode\"&gt;&lt;/xref&gt;</ph> to compare to the current instance.","source":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to the current instance."}],"pos":[5238,5329],"yaml":true},{"content":"`true` if the value of <code>obj</code> is equal to the value of the current instance; otherwise, `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> if the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to the value of the current instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the value of <code>obj</code> is equal to the value of the current instance; otherwise, `false`."}],"pos":[5387,5496],"yaml":true},{"content":"The flow control characteristics of the intermediate language (IL) instruction.","nodes":[{"pos":[0,79],"content":"The flow control characteristics of the intermediate language (IL) instruction.","nodes":[{"content":"The flow control characteristics of the intermediate language (IL) instruction.","pos":[0,79]}]}],"pos":[7003,7083],"yaml":true},{"content":"Read-only. The type of flow control.","nodes":[{"pos":[0,36],"content":"Read-only. The type of flow control.","nodes":[{"content":"Read-only. The type of flow control.","pos":[0,36],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"The type of flow control.","pos":[11,36]}]}]}],"pos":[7247,7284],"yaml":true},{"content":"Returns the generated hash code for this `Opcode`.","nodes":[{"pos":[0,50],"content":"Returns the generated hash code for this <ph id=\"ph1\">`Opcode`</ph>.","source":"Returns the generated hash code for this `Opcode`."}],"pos":[8800,8851],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[8985,9026],"yaml":true},{"content":"The name of the intermediate language (IL) instruction.","nodes":[{"pos":[0,55],"content":"The name of the intermediate language (IL) instruction.","nodes":[{"content":"The name of the intermediate language (IL) instruction.","pos":[0,55]}]}],"pos":[10496,10552],"yaml":true},{"content":"The <xref:System.Reflection.Emit.OpCode.Value%2A> property returns the numeric value of the IL instruction.","nodes":[{"pos":[0,107],"content":"The <xref:System.Reflection.Emit.OpCode.Value%2A> property returns the numeric value of the IL instruction.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.OpCode.Value%2A&gt;</ph> property returns the numeric value of the IL instruction.","pos":[0,107],"source":"The <xref:System.Reflection.Emit.OpCode.Value%2A> property returns the numeric value of the IL instruction."}]}],"pos":[10563,10671],"yaml":true,"extradata":"MT"},{"content":"Read-only. The name of the IL instruction.","nodes":[{"pos":[0,42],"content":"Read-only. The name of the IL instruction.","nodes":[{"content":"Read-only. The name of the IL instruction.","pos":[0,42],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"The name of the IL instruction.","pos":[11,42]}]}]}],"pos":[10779,10822],"yaml":true},{"content":"Indicates whether two <xref href=\"System.Reflection.Emit.OpCode\"></xref> structures are equal.","nodes":[{"pos":[0,94],"content":"Indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.OpCode\"&gt;&lt;/xref&gt;</ph> structures are equal.","source":"Indicates whether two <xref href=\"System.Reflection.Emit.OpCode\"></xref> structures are equal."}],"pos":[12558,12653],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName>","nodes":[{"pos":[0,178],"content":"The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName&gt;</ph>","pos":[0,178],"source":"The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName>"}]}],"pos":[12664,12843],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>b</code>.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.OpCode\"&gt;&lt;/xref&gt;</ph> to compare to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>b</code>."}],"pos":[13054,13139],"yaml":true},{"content":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>a</code>.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.OpCode\"&gt;&lt;/xref&gt;</ph> to compare to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>a</code>."}],"pos":[13212,13297],"yaml":true},{"content":"`true` if <code>a</code> is equal to <code>b</code>; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">b</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>a</code> is equal to <code>b</code>; otherwise, `false`."}],"pos":[13355,13430],"yaml":true},{"content":"Indicates whether two <xref href=\"System.Reflection.Emit.OpCode\"></xref> structures are not equal.","nodes":[{"pos":[0,98],"content":"Indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.OpCode\"&gt;&lt;/xref&gt;</ph> structures are not equal.","source":"Indicates whether two <xref href=\"System.Reflection.Emit.OpCode\"></xref> structures are not equal."}],"pos":[15185,15284],"yaml":true},{"content":"The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Compare%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName>","nodes":[{"pos":[0,179],"content":"The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Compare%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.OpCode.Compare%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName&gt;</ph>","pos":[0,179],"source":"The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Compare%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName>"}]}],"pos":[15295,15475],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>b</code>.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.OpCode\"&gt;&lt;/xref&gt;</ph> to compare to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">b</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>b</code>."}],"pos":[15688,15773],"yaml":true},{"content":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>a</code>.","nodes":[{"pos":[0,84],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Reflection.Emit.OpCode\"&gt;&lt;/xref&gt;</ph> to compare to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>a</code>."}],"pos":[15846,15931],"yaml":true},{"content":"`true` if <code>a</code> is not equal to <code>b</code>; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">a</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">b</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>a</code> is not equal to <code>b</code>; otherwise, `false`."}],"pos":[15989,16068],"yaml":true},{"content":"The type of intermediate language (IL) instruction.","nodes":[{"pos":[0,51],"content":"The type of intermediate language (IL) instruction.","nodes":[{"content":"The type of intermediate language (IL) instruction.","pos":[0,51]}]}],"pos":[17576,17628],"yaml":true},{"content":"Read-only. The type of intermediate language (IL) instruction.","nodes":[{"pos":[0,62],"content":"Read-only. The type of intermediate language (IL) instruction.","nodes":[{"content":"Read-only. The type of intermediate language (IL) instruction.","pos":[0,62],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"The type of intermediate language (IL) instruction.","pos":[11,62]}]}]}],"pos":[17789,17852],"yaml":true},{"content":"The operand type of an intermediate language (IL) instruction.","nodes":[{"pos":[0,62],"content":"The operand type of an intermediate language (IL) instruction.","nodes":[{"content":"The operand type of an intermediate language (IL) instruction.","pos":[0,62]}]}],"pos":[19363,19426],"yaml":true},{"content":"Read-only. The operand type of an IL instruction.","nodes":[{"pos":[0,49],"content":"Read-only. The operand type of an IL instruction.","nodes":[{"content":"Read-only. The operand type of an IL instruction.","pos":[0,49],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"The operand type of an IL instruction.","pos":[11,49]}]}]}],"pos":[19590,19640],"yaml":true},{"content":"The size of the intermediate language (IL) instruction.","nodes":[{"pos":[0,55],"content":"The size of the intermediate language (IL) instruction.","nodes":[{"content":"The size of the intermediate language (IL) instruction.","pos":[0,55]}]}],"pos":[21110,21166],"yaml":true},{"content":"Read-only. The size of the IL instruction.","nodes":[{"pos":[0,42],"content":"Read-only. The size of the IL instruction.","nodes":[{"content":"Read-only. The size of the IL instruction.","pos":[0,42],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"The size of the IL instruction.","pos":[11,42]}]}]}],"pos":[21270,21313],"yaml":true},{"content":"How the intermediate language (IL) instruction pops the stack.","nodes":[{"pos":[0,62],"content":"How the intermediate language (IL) instruction pops the stack.","nodes":[{"content":"How the intermediate language (IL) instruction pops the stack.","pos":[0,62]}]}],"pos":[22854,22917],"yaml":true},{"content":"Read-only. The way the IL instruction pops the stack.","nodes":[{"pos":[0,53],"content":"Read-only. The way the IL instruction pops the stack.","nodes":[{"content":"Read-only. The way the IL instruction pops the stack.","pos":[0,53],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"The way the IL instruction pops the stack.","pos":[11,53]}]}]}],"pos":[23093,23147],"yaml":true},{"content":"How the intermediate language (IL) instruction pushes operand onto the stack.","nodes":[{"pos":[0,77],"content":"How the intermediate language (IL) instruction pushes operand onto the stack.","nodes":[{"content":"How the intermediate language (IL) instruction pushes operand onto the stack.","pos":[0,77]}]}],"pos":[24707,24785],"yaml":true},{"content":"Read-only. The way the IL instruction pushes operand onto the stack.","nodes":[{"pos":[0,68],"content":"Read-only. The way the IL instruction pushes operand onto the stack.","nodes":[{"content":"Read-only. The way the IL instruction pushes operand onto the stack.","pos":[0,68],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"The way the IL instruction pushes operand onto the stack.","pos":[11,68]}]}]}],"pos":[24962,25031],"yaml":true},{"content":"Returns this `Opcode` as a <xref href=\"System.String\"></xref>.","nodes":[{"pos":[0,62],"content":"Returns this <ph id=\"ph1\">`Opcode`</ph> as a <ph id=\"ph2\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph>.","source":"Returns this `Opcode` as a <xref href=\"System.String\"></xref>."}],"pos":[26536,26599],"yaml":true},{"content":"Returns a <xref href=\"System.String\"></xref> containing the name of this `Opcode`.","nodes":[{"pos":[0,82],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> containing the name of this <ph id=\"ph2\">`Opcode`</ph>.","source":"Returns a <xref href=\"System.String\"></xref> containing the name of this `Opcode`."}],"pos":[26734,26817],"yaml":true},{"content":"Gets the numeric value of the intermediate language (IL) instruction.","nodes":[{"pos":[0,69],"content":"Gets the numeric value of the intermediate language (IL) instruction.","nodes":[{"content":"Gets the numeric value of the intermediate language (IL) instruction.","pos":[0,69]}]}],"pos":[28290,28360],"yaml":true},{"content":"The <xref:System.Reflection.Emit.OpCode.Name%2A> property returns the string name that corresponds to the instruction's numeric value.","nodes":[{"pos":[0,134],"content":"The <xref:System.Reflection.Emit.OpCode.Name%2A> property returns the string name that corresponds to the instruction's numeric value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Reflection.Emit.OpCode.Name%2A&gt;</ph> property returns the string name that corresponds to the instruction's numeric value.","pos":[0,134],"source":"The <xref:System.Reflection.Emit.OpCode.Name%2A> property returns the string name that corresponds to the instruction's numeric value."}]}],"pos":[28371,28506],"yaml":true,"extradata":"MT"},{"content":"Read-only. The numeric value of the IL instruction.","nodes":[{"pos":[0,51],"content":"Read-only. The numeric value of the IL instruction.","nodes":[{"content":"Read-only. The numeric value of the IL instruction.","pos":[0,51],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"The numeric value of the IL instruction.","pos":[11,51]}]}]}],"pos":[29089,29141],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.OpCode\n  commentId: T:System.Reflection.Emit.OpCode\n  id: OpCode\n  children:\n  - System.Reflection.Emit.OpCode.Equals(System.Object)\n  - System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)\n  - System.Reflection.Emit.OpCode.FlowControl\n  - System.Reflection.Emit.OpCode.GetHashCode\n  - System.Reflection.Emit.OpCode.Name\n  - System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  - System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  - System.Reflection.Emit.OpCode.OpCodeType\n  - System.Reflection.Emit.OpCode.OperandType\n  - System.Reflection.Emit.OpCode.Size\n  - System.Reflection.Emit.OpCode.StackBehaviourPop\n  - System.Reflection.Emit.OpCode.StackBehaviourPush\n  - System.Reflection.Emit.OpCode.ToString\n  - System.Reflection.Emit.OpCode.Value\n  langs:\n  - csharp\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n  type: Struct\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: Describes an intermediate language (IL) instruction.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct OpCode\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.Equals(System.Object)\n  commentId: M:System.Reflection.Emit.OpCode.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: OpCode.Equals(Object)\n  fullName: OpCode.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: Tests whether the given object is equal to this `Opcode`.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to this object.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is an instance of `Opcode` and is equal to this object; otherwise, `false`.'\n  overload: System.Reflection.Emit.OpCode.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)\n  commentId: M:System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)\n  id: Equals(System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Equals(OpCode)\n  nameWithType: OpCode.Equals(OpCode)\n  fullName: OpCode.Equals(OpCode)\n  type: Method\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: Indicates whether the current instance is equal to the specified <xref href=\"System.Reflection.Emit.OpCode\"></xref>.\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.OpCode obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.OpCode\n      description: The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to the current instance.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of <code>obj</code> is equal to the value of the current instance; otherwise, `false`.'\n  overload: System.Reflection.Emit.OpCode.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.FlowControl\n  commentId: P:System.Reflection.Emit.OpCode.FlowControl\n  id: FlowControl\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: FlowControl\n  nameWithType: OpCode.FlowControl\n  fullName: OpCode.FlowControl\n  type: Property\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The flow control characteristics of the intermediate language (IL) instruction.\n  syntax:\n    content: public System.Reflection.Emit.FlowControl FlowControl { get; }\n    return:\n      type: System.Reflection.Emit.FlowControl\n      description: Read-only. The type of flow control.\n  overload: System.Reflection.Emit.OpCode.FlowControl*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.GetHashCode\n  commentId: M:System.Reflection.Emit.OpCode.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: OpCode.GetHashCode()\n  fullName: OpCode.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: Returns the generated hash code for this `Opcode`.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Returns the hash code for this instance.\n  overload: System.Reflection.Emit.OpCode.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.Name\n  commentId: P:System.Reflection.Emit.OpCode.Name\n  id: Name\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Name\n  nameWithType: OpCode.Name\n  fullName: OpCode.Name\n  type: Property\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The name of the intermediate language (IL) instruction.\n  remarks: The <xref:System.Reflection.Emit.OpCode.Value%2A> property returns the numeric value of the IL instruction.\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Read-only. The name of the IL instruction.\n  overload: System.Reflection.Emit.OpCode.Name*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  commentId: M:System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  id: op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: op_Equality(OpCode, OpCode)\n  nameWithType: OpCode.op_Equality(OpCode, OpCode)\n  fullName: OpCode.op_Equality(OpCode, OpCode)\n  type: Operator\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: Indicates whether two <xref href=\"System.Reflection.Emit.OpCode\"></xref> structures are equal.\n  remarks: The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Equals%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.OpCode\n      description: The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>b</code>.\n    - id: b\n      type: System.Reflection.Emit.OpCode\n      description: The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>a</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>a</code> is equal to <code>b</code>; otherwise, `false`.'\n  overload: System.Reflection.Emit.OpCode.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  commentId: M:System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  id: op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: op_Inequality(OpCode, OpCode)\n  nameWithType: OpCode.op_Inequality(OpCode, OpCode)\n  fullName: OpCode.op_Inequality(OpCode, OpCode)\n  type: Operator\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: Indicates whether two <xref href=\"System.Reflection.Emit.OpCode\"></xref> structures are not equal.\n  remarks: The equivalent method for this operator is <xref:System.Reflection.Emit.OpCode.Compare%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.OpCode%29?displayProperty=fullName>\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.OpCode\n      description: The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>b</code>.\n    - id: b\n      type: System.Reflection.Emit.OpCode\n      description: The <xref href=\"System.Reflection.Emit.OpCode\"></xref> to compare to <code>a</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>a</code> is not equal to <code>b</code>; otherwise, `false`.'\n  overload: System.Reflection.Emit.OpCode.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.OpCodeType\n  commentId: P:System.Reflection.Emit.OpCode.OpCodeType\n  id: OpCodeType\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: OpCodeType\n  nameWithType: OpCode.OpCodeType\n  fullName: OpCode.OpCodeType\n  type: Property\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The type of intermediate language (IL) instruction.\n  syntax:\n    content: public System.Reflection.Emit.OpCodeType OpCodeType { get; }\n    return:\n      type: System.Reflection.Emit.OpCodeType\n      description: Read-only. The type of intermediate language (IL) instruction.\n  overload: System.Reflection.Emit.OpCode.OpCodeType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.OperandType\n  commentId: P:System.Reflection.Emit.OpCode.OperandType\n  id: OperandType\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: OperandType\n  nameWithType: OpCode.OperandType\n  fullName: OpCode.OperandType\n  type: Property\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The operand type of an intermediate language (IL) instruction.\n  syntax:\n    content: public System.Reflection.Emit.OperandType OperandType { get; }\n    return:\n      type: System.Reflection.Emit.OperandType\n      description: Read-only. The operand type of an IL instruction.\n  overload: System.Reflection.Emit.OpCode.OperandType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.Size\n  commentId: P:System.Reflection.Emit.OpCode.Size\n  id: Size\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Size\n  nameWithType: OpCode.Size\n  fullName: OpCode.Size\n  type: Property\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: The size of the intermediate language (IL) instruction.\n  syntax:\n    content: public int Size { get; }\n    return:\n      type: System.Int32\n      description: Read-only. The size of the IL instruction.\n  overload: System.Reflection.Emit.OpCode.Size*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPop\n  commentId: P:System.Reflection.Emit.OpCode.StackBehaviourPop\n  id: StackBehaviourPop\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: StackBehaviourPop\n  nameWithType: OpCode.StackBehaviourPop\n  fullName: OpCode.StackBehaviourPop\n  type: Property\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: How the intermediate language (IL) instruction pops the stack.\n  syntax:\n    content: public System.Reflection.Emit.StackBehaviour StackBehaviourPop { get; }\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n      description: Read-only. The way the IL instruction pops the stack.\n  overload: System.Reflection.Emit.OpCode.StackBehaviourPop*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPush\n  commentId: P:System.Reflection.Emit.OpCode.StackBehaviourPush\n  id: StackBehaviourPush\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: StackBehaviourPush\n  nameWithType: OpCode.StackBehaviourPush\n  fullName: OpCode.StackBehaviourPush\n  type: Property\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: How the intermediate language (IL) instruction pushes operand onto the stack.\n  syntax:\n    content: public System.Reflection.Emit.StackBehaviour StackBehaviourPush { get; }\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n      description: Read-only. The way the IL instruction pushes operand onto the stack.\n  overload: System.Reflection.Emit.OpCode.StackBehaviourPush*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.ToString\n  commentId: M:System.Reflection.Emit.OpCode.ToString\n  id: ToString\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: OpCode.ToString()\n  fullName: OpCode.ToString()\n  type: Method\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: Returns this `Opcode` as a <xref href=\"System.String\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Returns a <xref href=\"System.String\"></xref> containing the name of this `Opcode`.\n  overload: System.Reflection.Emit.OpCode.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.Emit.OpCode.Value\n  commentId: P:System.Reflection.Emit.OpCode.Value\n  id: Value\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Value\n  nameWithType: OpCode.Value\n  fullName: OpCode.Value\n  type: Property\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  namespace: System.Reflection.Emit\n  summary: Gets the numeric value of the intermediate language (IL) instruction.\n  remarks: The <xref:System.Reflection.Emit.OpCode.Name%2A> property returns the string name that corresponds to the instruction's numeric value.\n  example:\n  - \"The following example displays the property values of the <xref:System.Reflection.Emit.OpCodes.Add?displayProperty=fullName> instruction.  \\n  \\n [!code-csharp[System.Reflection.Emit.OpCode.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.emit.opcode.value/cs/value1.cs#1)]\\n [!code-vb[System.Reflection.Emit.OpCode.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.emit.opcode.value/vb/value1.vb#1)]\"\n  syntax:\n    content: public short Value { get; }\n    return:\n      type: System.Int16\n      description: Read-only. The numeric value of the IL instruction.\n  overload: System.Reflection.Emit.OpCode.Value*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Reflection.Emit.OpCode.Equals(System.Object)\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: OpCode.Equals(Object)\n  fullName: OpCode.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Equals(OpCode)\n  nameWithType: OpCode.Equals(OpCode)\n  fullName: OpCode.Equals(OpCode)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.OpCode.FlowControl\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: FlowControl\n  nameWithType: OpCode.FlowControl\n  fullName: OpCode.FlowControl\n- uid: System.Reflection.Emit.FlowControl\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FlowControl\n  nameWithType: FlowControl\n  fullName: System.Reflection.Emit.FlowControl\n- uid: System.Reflection.Emit.OpCode.GetHashCode\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: OpCode.GetHashCode()\n  fullName: OpCode.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.OpCode.Name\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Name\n  nameWithType: OpCode.Name\n  fullName: OpCode.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: op_Equality(OpCode, OpCode)\n  nameWithType: OpCode.op_Equality(OpCode, OpCode)\n  fullName: OpCode.op_Equality(OpCode, OpCode)\n- uid: System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: op_Inequality(OpCode, OpCode)\n  nameWithType: OpCode.op_Inequality(OpCode, OpCode)\n  fullName: OpCode.op_Inequality(OpCode, OpCode)\n- uid: System.Reflection.Emit.OpCode.OpCodeType\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: OpCodeType\n  nameWithType: OpCode.OpCodeType\n  fullName: OpCode.OpCodeType\n- uid: System.Reflection.Emit.OpCodeType\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCodeType\n  nameWithType: OpCodeType\n  fullName: System.Reflection.Emit.OpCodeType\n- uid: System.Reflection.Emit.OpCode.OperandType\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: OperandType\n  nameWithType: OpCode.OperandType\n  fullName: OpCode.OperandType\n- uid: System.Reflection.Emit.OperandType\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OperandType\n  nameWithType: OperandType\n  fullName: System.Reflection.Emit.OperandType\n- uid: System.Reflection.Emit.OpCode.Size\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Size\n  nameWithType: OpCode.Size\n  fullName: OpCode.Size\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPop\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: StackBehaviourPop\n  nameWithType: OpCode.StackBehaviourPop\n  fullName: OpCode.StackBehaviourPop\n- uid: System.Reflection.Emit.StackBehaviour\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StackBehaviour\n  nameWithType: StackBehaviour\n  fullName: System.Reflection.Emit.StackBehaviour\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPush\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: StackBehaviourPush\n  nameWithType: OpCode.StackBehaviourPush\n  fullName: OpCode.StackBehaviourPush\n- uid: System.Reflection.Emit.OpCode.ToString\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: ToString()\n  nameWithType: OpCode.ToString()\n  fullName: OpCode.ToString()\n- uid: System.Reflection.Emit.OpCode.Value\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Value\n  nameWithType: OpCode.Value\n  fullName: OpCode.Value\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.Emit.OpCode.Equals*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Equals\n  nameWithType: OpCode.Equals\n  fullName: OpCode.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.FlowControl*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: FlowControl\n  nameWithType: OpCode.FlowControl\n  fullName: OpCode.FlowControl\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.GetHashCode*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: GetHashCode\n  nameWithType: OpCode.GetHashCode\n  fullName: OpCode.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.Name*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Name\n  nameWithType: OpCode.Name\n  fullName: OpCode.Name\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.op_Equality*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: op_Equality\n  nameWithType: OpCode.op_Equality\n  fullName: OpCode.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.op_Inequality*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: op_Inequality\n  nameWithType: OpCode.op_Inequality\n  fullName: OpCode.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.OpCodeType*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: OpCodeType\n  nameWithType: OpCode.OpCodeType\n  fullName: OpCode.OpCodeType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.OperandType*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: OperandType\n  nameWithType: OpCode.OperandType\n  fullName: OpCode.OperandType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.Size*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Size\n  nameWithType: OpCode.Size\n  fullName: OpCode.Size\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPop*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: StackBehaviourPop\n  nameWithType: OpCode.StackBehaviourPop\n  fullName: OpCode.StackBehaviourPop\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPush*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: StackBehaviourPush\n  nameWithType: OpCode.StackBehaviourPush\n  fullName: OpCode.StackBehaviourPush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.ToString*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: ToString\n  nameWithType: OpCode.ToString\n  fullName: OpCode.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n- uid: System.Reflection.Emit.OpCode.Value*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Value\n  nameWithType: OpCode.Value\n  fullName: OpCode.Value\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection.Emit/OpCode.xml\n"}