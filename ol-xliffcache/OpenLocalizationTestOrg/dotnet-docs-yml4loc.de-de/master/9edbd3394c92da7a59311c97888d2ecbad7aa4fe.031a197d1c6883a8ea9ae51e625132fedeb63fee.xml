{"nodes":[{"content":"Computes the <xref href=\"System.Security.Cryptography.SHA256\"></xref> hash for the input data.","nodes":[{"pos":[0,94],"content":"Computes the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;&lt;/xref&gt;</ph> hash for the input data.","source":"Computes the <xref href=\"System.Security.Cryptography.SHA256\"></xref> hash for the input data."}],"pos":[570,665],"yaml":true},{"content":"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  \n  \n The hash size for the <xref:System.Security.Cryptography.SHA256> algorithm is 256 bits.  \n  \n This is an abstract class. The only implementation of this class is <xref:System.Security.Cryptography.SHA256Managed>.","nodes":[{"pos":[0,254],"content":"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.","nodes":[{"content":"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.","pos":[0,254],"nodes":[{"content":"The hash is used as a unique value of fixed size representing a large amount of data.","pos":[0,85]},{"content":"Hashes of two sets of data should match if and only if the corresponding data also matches.","pos":[86,177]},{"content":"Small changes to the data result in large unpredictable changes in the hash.","pos":[178,254]}]}]},{"pos":[261,348],"content":"The hash size for the <xref:System.Security.Cryptography.SHA256> algorithm is 256 bits.","nodes":[{"content":"The hash size for the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SHA256&gt;</ph> algorithm is 256 bits.","pos":[0,87],"source":"The hash size for the <xref:System.Security.Cryptography.SHA256> algorithm is 256 bits."}]},{"pos":[355,473],"content":"This is an abstract class. The only implementation of this class is <xref:System.Security.Cryptography.SHA256Managed>.","nodes":[{"content":"This is an abstract class. The only implementation of this class is <xref:System.Security.Cryptography.SHA256Managed>.","pos":[0,118],"nodes":[{"content":"This is an abstract class.","pos":[0,26]},{"content":"The only implementation of this class is <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SHA256Managed&gt;</ph>.","pos":[27,118],"source":" The only implementation of this class is <xref:System.Security.Cryptography.SHA256Managed>."}]}]}],"pos":[676,1156],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.Security.Cryptography.SHA256\"></xref>.","nodes":[{"pos":[0,87],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of <xref href=\"System.Security.Cryptography.SHA256\"></xref>."}],"pos":[5209,5297],"yaml":true},{"content":"You cannot create an instance of an abstract class. Application code create a new instance of a derived class.","nodes":[{"pos":[0,110],"content":"You cannot create an instance of an abstract class. Application code create a new instance of a derived class.","nodes":[{"content":"You cannot create an instance of an abstract class. Application code create a new instance of a derived class.","pos":[0,110],"nodes":[{"content":"You cannot create an instance of an abstract class.","pos":[0,51]},{"content":"Application code create a new instance of a derived class.","pos":[52,110]}]}]}],"pos":[5308,5419],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of the default implementation of <xref href=\"System.Security.Cryptography.SHA256\"></xref>.","nodes":[{"pos":[0,110],"content":"Creates an instance of the default implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an instance of the default implementation of <xref href=\"System.Security.Cryptography.SHA256\"></xref>."}],"pos":[6886,6997],"yaml":true},{"content":"A new instance of <xref href=\"System.Security.Cryptography.SHA256\"></xref>.","nodes":[{"pos":[0,75],"content":"A new instance of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;&lt;/xref&gt;</ph>.","source":"A new instance of <xref href=\"System.Security.Cryptography.SHA256\"></xref>."}],"pos":[7179,7255],"yaml":true},{"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","nodes":[{"pos":[0,117],"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","nodes":[{"content":"The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","pos":[0,117]}]}],"pos":[7457,7575],"yaml":true},{"content":"Creates an instance of a specified implementation of <xref href=\"System.Security.Cryptography.SHA256\"></xref>.","nodes":[{"pos":[0,110],"content":"Creates an instance of a specified implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an instance of a specified implementation of <xref href=\"System.Security.Cryptography.SHA256\"></xref>."}],"pos":[8970,9081],"yaml":true},{"content":"The name of the specific implementation of <xref href=\"System.Security.Cryptography.SHA256\"></xref> to be used.","nodes":[{"pos":[0,111],"content":"The name of the specific implementation of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;&lt;/xref&gt;</ph> to be used.","source":"The name of the specific implementation of <xref href=\"System.Security.Cryptography.SHA256\"></xref> to be used."}],"pos":[9260,9372],"yaml":true},{"content":"A new instance of <xref href=\"System.Security.Cryptography.SHA256\"></xref> using the specified implementation.","nodes":[{"pos":[0,110],"content":"A new instance of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SHA256\"&gt;&lt;/xref&gt;</ph> using the specified implementation.","source":"A new instance of <xref href=\"System.Security.Cryptography.SHA256\"></xref> using the specified implementation."}],"pos":[9451,9562],"yaml":true},{"content":"The algorithm described by the <code>hashName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","nodes":[{"pos":[0,166],"content":"The algorithm described by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">hashName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.","source":"The algorithm described by the <code>hashName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible."}],"pos":[9764,9931],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.SHA256\n  commentId: T:System.Security.Cryptography.SHA256\n  id: SHA256\n  children:\n  - System.Security.Cryptography.SHA256.#ctor\n  - System.Security.Cryptography.SHA256.Create\n  - System.Security.Cryptography.SHA256.Create(System.String)\n  langs:\n  - csharp\n  name: SHA256\n  nameWithType: SHA256\n  fullName: System.Security.Cryptography.SHA256\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Computes the <xref href=\"System.Security.Cryptography.SHA256\"></xref> hash for the input data.\n  remarks: \"The hash is used as a unique value of fixed size representing a large amount of data. Hashes of two sets of data should match if and only if the corresponding data also matches. Small changes to the data result in large unpredictable changes in the hash.  \\n  \\n The hash size for the <xref:System.Security.Cryptography.SHA256> algorithm is 256 bits.  \\n  \\n This is an abstract class. The only implementation of this class is <xref:System.Security.Cryptography.SHA256Managed>.\"\n  example:\n  - \"The following example calculates the SHA-256 hash for all files in a directory.  \\n  \\n [!code-cpp[Classic SHA256 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic SHA256 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic SHA256 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic SHA256 Example/CS/source.cs#1)]\\n [!code-vb[Classic SHA256 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic SHA256 Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class SHA256 : System.Security.Cryptography.HashAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  derivedClasses:\n  - System.Security.Cryptography.SHA256Cng\n  - System.Security.Cryptography.SHA256CryptoServiceProvider\n  - System.Security.Cryptography.SHA256Managed\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.HashFinal\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.Initialize\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA256.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.SHA256.#ctor\n  commentId: M:System.Security.Cryptography.SHA256.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.SHA256\n  langs:\n  - csharp\n  name: SHA256()\n  nameWithType: SHA256.SHA256()\n  fullName: SHA256.SHA256()\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of <xref href=\"System.Security.Cryptography.SHA256\"></xref>.\n  remarks: You cannot create an instance of an abstract class. Application code create a new instance of a derived class.\n  syntax:\n    content: protected SHA256 ();\n    parameters: []\n  overload: System.Security.Cryptography.SHA256.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA256.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.SHA256.Create\n  commentId: M:System.Security.Cryptography.SHA256.Create\n  id: Create\n  parent: System.Security.Cryptography.SHA256\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: SHA256.Create()\n  fullName: SHA256.Create()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of the default implementation of <xref href=\"System.Security.Cryptography.SHA256\"></xref>.\n  syntax:\n    content: public static System.Security.Cryptography.SHA256 Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.SHA256\n      description: A new instance of <xref href=\"System.Security.Cryptography.SHA256\"></xref>.\n  overload: System.Security.Cryptography.SHA256.Create*\n  exceptions:\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA256.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.SHA256.Create(System.String)\n  commentId: M:System.Security.Cryptography.SHA256.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.SHA256\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: SHA256.Create(String)\n  fullName: SHA256.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates an instance of a specified implementation of <xref href=\"System.Security.Cryptography.SHA256\"></xref>.\n  syntax:\n    content: public static System.Security.Cryptography.SHA256 Create (string hashName);\n    parameters:\n    - id: hashName\n      type: System.String\n      description: The name of the specific implementation of <xref href=\"System.Security.Cryptography.SHA256\"></xref> to be used.\n    return:\n      type: System.Security.Cryptography.SHA256\n      description: A new instance of <xref href=\"System.Security.Cryptography.SHA256\"></xref> using the specified implementation.\n  overload: System.Security.Cryptography.SHA256.Create*\n  exceptions:\n  - type: System.Reflection.TargetInvocationException\n    commentId: T:System.Reflection.TargetInvocationException\n    description: The algorithm described by the <code>hashName</code> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA256.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.HashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: HashAlgorithm\n  fullName: System.Security.Cryptography.HashAlgorithm\n- uid: System.Reflection.TargetInvocationException\n  parent: System.Reflection\n  isExternal: false\n  name: TargetInvocationException\n  nameWithType: TargetInvocationException\n  fullName: System.Reflection.TargetInvocationException\n- uid: System.Security.Cryptography.SHA256.#ctor\n  parent: System.Security.Cryptography.SHA256\n  isExternal: false\n  name: SHA256()\n  nameWithType: SHA256.SHA256()\n  fullName: SHA256.SHA256()\n- uid: System.Security.Cryptography.SHA256.Create\n  parent: System.Security.Cryptography.SHA256\n  isExternal: false\n  name: Create()\n  nameWithType: SHA256.Create()\n  fullName: SHA256.Create()\n- uid: System.Security.Cryptography.SHA256\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: SHA256\n  nameWithType: SHA256\n  fullName: System.Security.Cryptography.SHA256\n- uid: System.Security.Cryptography.SHA256.Create(System.String)\n  parent: System.Security.Cryptography.SHA256\n  isExternal: false\n  name: Create(String)\n  nameWithType: SHA256.Create(String)\n  fullName: SHA256.Create(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.SHA256.#ctor*\n  parent: System.Security.Cryptography.SHA256\n  isExternal: false\n  name: SHA256\n  nameWithType: SHA256.SHA256\n  fullName: SHA256.SHA256\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA256.xml\n- uid: System.Security.Cryptography.SHA256.Create*\n  parent: System.Security.Cryptography.SHA256\n  isExternal: false\n  name: Create\n  nameWithType: SHA256.Create\n  fullName: SHA256.Create\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/SHA256.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: CanReuseTransform\n  nameWithType: HashAlgorithm.CanReuseTransform\n  fullName: HashAlgorithm.CanReuseTransform\n- uid: System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: CanTransformMultipleBlocks\n  nameWithType: HashAlgorithm.CanTransformMultipleBlocks\n  fullName: HashAlgorithm.CanTransformMultipleBlocks\n- uid: System.Security.Cryptography.HashAlgorithm.Clear\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: HashAlgorithm.Clear()\n  fullName: HashAlgorithm.Clear()\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Byte[])\n  nameWithType: HashAlgorithm.ComputeHash(Byte[])\n  fullName: HashAlgorithm.ComputeHash(Byte[])\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Stream)\n  nameWithType: HashAlgorithm.ComputeHash(Stream)\n  fullName: HashAlgorithm.ComputeHash(Stream)\n- uid: System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: ComputeHash(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.ComputeHash(Byte[], Int32, Int32)\n- uid: System.Security.Cryptography.HashAlgorithm.Dispose\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: HashAlgorithm.Dispose()\n  fullName: HashAlgorithm.Dispose()\n- uid: System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: HashAlgorithm.Dispose(Boolean)\n  fullName: HashAlgorithm.Dispose(Boolean)\n- uid: System.Security.Cryptography.HashAlgorithm.Hash\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Hash\n  nameWithType: HashAlgorithm.Hash\n  fullName: HashAlgorithm.Hash\n- uid: System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashCore(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.HashCore(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.HashCore(Byte[], Int32, Int32)\n- uid: System.Security.Cryptography.HashAlgorithm.HashFinal\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashFinal()\n  nameWithType: HashAlgorithm.HashFinal()\n  fullName: HashAlgorithm.HashFinal()\n- uid: System.Security.Cryptography.HashAlgorithm.HashSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashSize\n  nameWithType: HashAlgorithm.HashSize\n  fullName: HashAlgorithm.HashSize\n- uid: System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashSizeValue\n  nameWithType: HashAlgorithm.HashSizeValue\n  fullName: HashAlgorithm.HashSizeValue\n- uid: System.Security.Cryptography.HashAlgorithm.HashValue\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: HashValue\n  nameWithType: HashAlgorithm.HashValue\n  fullName: HashAlgorithm.HashValue\n- uid: System.Security.Cryptography.HashAlgorithm.Initialize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: Initialize()\n  nameWithType: HashAlgorithm.Initialize()\n  fullName: HashAlgorithm.Initialize()\n- uid: System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: InputBlockSize\n  nameWithType: HashAlgorithm.InputBlockSize\n  fullName: HashAlgorithm.InputBlockSize\n- uid: System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: OutputBlockSize\n  nameWithType: HashAlgorithm.OutputBlockSize\n  fullName: HashAlgorithm.OutputBlockSize\n- uid: System.Security.Cryptography.HashAlgorithm.State\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: State\n  nameWithType: HashAlgorithm.State\n  fullName: HashAlgorithm.State\n- uid: System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  nameWithType: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n  fullName: HashAlgorithm.TransformBlock(Byte[], Int32, Int32, Byte[], Int32)\n- uid: System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: TransformFinalBlock(Byte[], Int32, Int32)\n  nameWithType: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)\n  fullName: HashAlgorithm.TransformFinalBlock(Byte[], Int32, Int32)\n"}