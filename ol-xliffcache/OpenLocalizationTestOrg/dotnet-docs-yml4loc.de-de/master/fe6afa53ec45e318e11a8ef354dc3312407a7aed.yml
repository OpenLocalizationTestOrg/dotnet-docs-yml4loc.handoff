### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.ParallelForEach`1
  commentId: T:System.Activities.Statements.ParallelForEach`1
  id: ParallelForEach`1
  children:
  - System.Activities.Statements.ParallelForEach`1.#ctor
  - System.Activities.Statements.ParallelForEach`1.Body
  - System.Activities.Statements.ParallelForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.ParallelForEach`1.CompletionCondition
  - System.Activities.Statements.ParallelForEach`1.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Statements.ParallelForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.Statements.ParallelForEach`1.Values
  langs:
  - csharp
  name: ParallelForEach<T>
  nameWithType: ParallelForEach<T>
  fullName: System.Activities.Statements.ParallelForEach<T>
  type: Class
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Enumerates the elements of a collection and executes an embedded statement for each element of the collection in parallel.
  remarks: The embedded statements are scheduled together and run asynchronously, but unless the scheduled activites themselves are asynchronous (such as messaging activities, <xref:System.Activities.Statements.InvokeMethod>, or activities that derive from <xref:System.Activities.AsyncCodeActivity>), they do not run on separate threads, so each successive activity will only execute when the previously scheduled activity completes or goes idle.  If none of the child activities of this activity are asynchronous or go idle, this activity execute in the same way that a <xref:System.Activities.Statements.ForEach%601> activity does.
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.ParallelForEach%601> activity. This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.  \n  \n [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Body")]

      public sealed class ParallelForEach<T> : System.Activities.NativeActivity
    typeParameters:
    - id: T
      description: The type of the values provided in the <xref href="System.Activities.Statements.ParallelForEach`1.Values"></xref> collection.
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.CanInduceIdle
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Windows.Markup.ContentPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.ParallelForEach`1.#ctor
  commentId: M:System.Activities.Statements.ParallelForEach`1.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.ParallelForEach`1
  langs:
  - csharp
  name: ParallelForEach<T>()
  nameWithType: ParallelForEach<T>.ParallelForEach<T>()
  fullName: ParallelForEach<T>.ParallelForEach<T>()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Creates a new instance of the <xref href="System.Activities.Statements.ParallelForEach`1"></xref> class.
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.ParallelForEach%601> activity. This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.  \n  \n [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]"
  syntax:
    content: public ParallelForEach ();
    parameters: []
  overload: System.Activities.Statements.ParallelForEach`1.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.ParallelForEach`1.Body
  commentId: P:System.Activities.Statements.ParallelForEach`1.Body
  id: Body
  parent: System.Activities.Statements.ParallelForEach`1
  langs:
  - csharp
  name: Body
  nameWithType: ParallelForEach<T>.Body
  fullName: ParallelForEach<T>.Body
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: The <xref href="System.Activities.ActivityAction"></xref> that is executed once for every value contained in the <xref href="System.Activities.Statements.ParallelForEach`1.Values"></xref> collection.
  remarks: ''
  example:
  - "The following code sample demonstrates setting the Body property of a <xref:System.Activities.Statements.ParallelForEach%601> activity. This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.  \n  \n [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]"
  syntax:
    content: public System.Activities.ActivityAction<T> Body { get; set; }
    return:
      type: System.Activities.ActivityAction`1
      description: The contained activity action.
  overload: System.Activities.Statements.ParallelForEach`1.Body*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.ParallelForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  commentId: M:System.Activities.Statements.ParallelForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.ParallelForEach`1
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: ParallelForEach<T>.CacheMetadata(NativeActivityMetadata)
  fullName: ParallelForEach<T>.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: ''
  overload: System.Activities.Statements.ParallelForEach`1.CacheMetadata*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Activities.Statements.ParallelForEach`1.CompletionCondition
  commentId: P:System.Activities.Statements.ParallelForEach`1.CompletionCondition
  id: CompletionCondition
  parent: System.Activities.Statements.ParallelForEach`1
  langs:
  - csharp
  name: CompletionCondition
  nameWithType: ParallelForEach<T>.CompletionCondition
  fullName: ParallelForEach<T>.CompletionCondition
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Evaluated after each iteration completes.
  remarks: If it evaluates to `true`, then the scheduled pending iterations are canceled. If this property is not set, all scheduled statements execute until completion.
  syntax:
    content: public System.Activities.Activity<bool> CompletionCondition { get; set; }
    return:
      type: System.Activities.Activity{System.Boolean}
      description: The completion expression.
  overload: System.Activities.Statements.ParallelForEach`1.CompletionCondition*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.ParallelForEach`1.Execute(System.Activities.NativeActivityContext)
  commentId: M:System.Activities.Statements.ParallelForEach`1.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.ParallelForEach`1
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: ParallelForEach<T>.Execute(NativeActivityContext)
  fullName: ParallelForEach<T>.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: ''
  overload: System.Activities.Statements.ParallelForEach`1.Execute*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Activities.Statements.ParallelForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  commentId: M:System.Activities.Statements.ParallelForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.ParallelForEach`1
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  nameWithType: ParallelForEach<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  fullName: ParallelForEach<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: ''
    - id: originalActivity
      type: System.Activities.Activity
      description: ''
  overload: System.Activities.Statements.ParallelForEach`1.OnCreateDynamicUpdateMap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Activities.Statements.ParallelForEach`1.Values
  commentId: P:System.Activities.Statements.ParallelForEach`1.Values
  id: Values
  parent: System.Activities.Statements.ParallelForEach`1
  langs:
  - csharp
  name: Values
  nameWithType: ParallelForEach<T>.Values
  fullName: ParallelForEach<T>.Values
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: The collection of values used as parameters for each iteration of the activity contained in the <xref href="System.Activities.Statements.ParallelForEach`1.Body"></xref>.
  remarks: ''
  example:
  - "The following code sample demonstrates setting the Values property of a <xref:System.Activities.Statements.ParallelForEach%601> activity. This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.  \n  \n [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]"
  syntax:
    content: >-
      [System.Activities.RequiredArgument]

      public System.Activities.InArgument<System.Collections.Generic.IEnumerable<T>> Values { get; set; }
    return:
      type: System.Activities.InArgument{System.Collections.Generic.IEnumerable{T}}
      description: The collection of values.
  overload: System.Activities.Statements.ParallelForEach`1.Values*
  exceptions: []
  attributes:
  - type: System.Activities.RequiredArgumentAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Activities.NativeActivity
  parent: System.Activities
  isExternal: false
  name: NativeActivity
  nameWithType: NativeActivity
  fullName: System.Activities.NativeActivity
- uid: System.Activities.Statements.ParallelForEach`1.#ctor
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: ParallelForEach<T>()
  nameWithType: ParallelForEach<T>.ParallelForEach<T>()
  fullName: ParallelForEach<T>.ParallelForEach<T>()
- uid: System.Activities.Statements.ParallelForEach`1.Body
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: Body
  nameWithType: ParallelForEach<T>.Body
  fullName: ParallelForEach<T>.Body
- uid: System.Activities.ActivityAction`1
  parent: System.Activities
  isExternal: false
  name: ActivityAction<T>
  nameWithType: ActivityAction<T>
  fullName: System.Activities.ActivityAction<T>
- uid: System.Activities.Statements.ParallelForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: ParallelForEach<T>.CacheMetadata(NativeActivityMetadata)
  fullName: ParallelForEach<T>.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.ParallelForEach`1.CompletionCondition
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: CompletionCondition
  nameWithType: ParallelForEach<T>.CompletionCondition
  fullName: ParallelForEach<T>.CompletionCondition
- uid: System.Activities.Activity`1
  name: Activity<TResult>
  nameWithType: Activity<TResult>
  fullName: System.Activities.Activity<TResult>
- uid: System.Boolean
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Activity{System.Boolean}
  parent: System.Activities
  isExternal: false
  name: Activity<Boolean>
  nameWithType: Activity<Boolean>
  fullName: System.Activities.Activity<System.Boolean>
  spec.csharp:
  - uid: System.Activities.Activity`1
    name: Activity
    nameWithType: Activity
    fullName: System.Activities.Activity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.ParallelForEach`1.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: ParallelForEach<T>.Execute(NativeActivityContext)
  fullName: ParallelForEach<T>.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.ParallelForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  nameWithType: ParallelForEach<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  fullName: ParallelForEach<T>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Statements.ParallelForEach`1.Values
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: Values
  nameWithType: ParallelForEach<T>.Values
  fullName: ParallelForEach<T>.Values
- uid: System.Activities.InArgument`1
  name: InArgument<T>
  nameWithType: InArgument<T>
  fullName: System.Activities.InArgument<T>
- uid: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.InArgument{System.Collections.Generic.IEnumerable{T}}
  parent: System.Activities
  isExternal: false
  name: InArgument<IEnumerable<T>>
  nameWithType: InArgument<IEnumerable<T>>
  fullName: System.Activities.InArgument<System.Collections.Generic.IEnumerable<T>>
  spec.csharp:
  - uid: System.Activities.InArgument`1
    name: InArgument
    nameWithType: InArgument
    fullName: System.Activities.InArgument
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.ParallelForEach`1.#ctor*
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: ParallelForEach<T>
  nameWithType: ParallelForEach<T>.ParallelForEach<T>
  fullName: ParallelForEach<T>.ParallelForEach<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Activities.Statements.ParallelForEach`1.Body*
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: Body
  nameWithType: ParallelForEach<T>.Body
  fullName: ParallelForEach<T>.Body
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Activities.Statements.ParallelForEach`1.CacheMetadata*
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: CacheMetadata
  nameWithType: ParallelForEach<T>.CacheMetadata
  fullName: ParallelForEach<T>.CacheMetadata
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Activities.Statements.ParallelForEach`1.CompletionCondition*
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: CompletionCondition
  nameWithType: ParallelForEach<T>.CompletionCondition
  fullName: ParallelForEach<T>.CompletionCondition
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Activities.Statements.ParallelForEach`1.Execute*
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: Execute
  nameWithType: ParallelForEach<T>.Execute
  fullName: ParallelForEach<T>.Execute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Activities.Statements.ParallelForEach`1.OnCreateDynamicUpdateMap*
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: ParallelForEach<T>.OnCreateDynamicUpdateMap
  fullName: ParallelForEach<T>.OnCreateDynamicUpdateMap
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Activities.Statements.ParallelForEach`1.Values*
  parent: System.Activities.Statements.ParallelForEach`1
  isExternal: false
  name: Values
  nameWithType: ParallelForEach<T>.Values
  fullName: ParallelForEach<T>.Values
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/ParallelForEach`1.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Activities.Activity.ToString
  parent: System.Activities.Activity
  isExternal: false
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: Activity.ToString()
- uid: System.Activities.Activity.CacheId
  parent: System.Activities.Activity
  isExternal: false
  name: CacheId
  nameWithType: Activity.CacheId
  fullName: Activity.CacheId
- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CacheMetadata(ActivityMetadata)
  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)
  fullName: NativeActivity.CacheMetadata(ActivityMetadata)
- uid: System.Activities.Activity.Constraints
  parent: System.Activities.Activity
  isExternal: false
  name: Constraints
  nameWithType: Activity.Constraints
  fullName: Activity.Constraints
- uid: System.Activities.Activity.DisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: DisplayName
  nameWithType: Activity.DisplayName
  fullName: Activity.DisplayName
- uid: System.Activities.Activity.Id
  parent: System.Activities.Activity
  isExternal: false
  name: Id
  nameWithType: Activity.Id
  fullName: Activity.Id
- uid: System.Activities.NativeActivity.Implementation
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Implementation
  nameWithType: NativeActivity.Implementation
  fullName: NativeActivity.Implementation
- uid: System.Activities.NativeActivity.ImplementationVersion
  parent: System.Activities.NativeActivity
  isExternal: false
  name: ImplementationVersion
  nameWithType: NativeActivity.ImplementationVersion
  fullName: NativeActivity.ImplementationVersion
- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
- uid: System.Activities.Activity.ShouldSerializeDisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: ShouldSerializeDisplayName()
  nameWithType: Activity.ShouldSerializeDisplayName()
  fullName: Activity.ShouldSerializeDisplayName()
- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Abort(NativeActivityAbortContext)
  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)
  fullName: NativeActivity.Abort(NativeActivityAbortContext)
- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Cancel(NativeActivityContext)
  nameWithType: NativeActivity.Cancel(NativeActivityContext)
  fullName: NativeActivity.Cancel(NativeActivityContext)
- uid: System.Activities.NativeActivity.CanInduceIdle
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CanInduceIdle
  nameWithType: NativeActivity.CanInduceIdle
  fullName: NativeActivity.CanInduceIdle
- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
