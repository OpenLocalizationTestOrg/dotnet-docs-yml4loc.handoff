{"nodes":[{"content":"The basic 128-bit security algorithm suite.","nodes":[{"pos":[0,43],"content":"The basic 128-bit security algorithm suite.","nodes":[{"content":"The basic 128-bit security algorithm suite.","pos":[0,43]}]}],"pos":[1830,1874],"yaml":true},{"content":"Creates and initializes an instance of <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>.","nodes":[{"pos":[0,120],"content":"Creates and initializes an instance of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"&gt;&lt;/xref&gt;</ph>.","source":"Creates and initializes an instance of <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>."}],"pos":[5662,5783],"yaml":true},{"content":"Gets the default asymmetric key wrap algorithm, RsaOaepKeyWrap.","nodes":[{"pos":[0,63],"content":"Gets the default asymmetric key wrap algorithm, RsaOaepKeyWrap.","nodes":[{"content":"Gets the default asymmetric key wrap algorithm, RsaOaepKeyWrap.","pos":[0,63]}]}],"pos":[7166,7230],"yaml":true},{"content":"The default asymmetric key wrap algorithm, RsaOaepKeyWrap.","nodes":[{"pos":[0,58],"content":"The default asymmetric key wrap algorithm, RsaOaepKeyWrap.","nodes":[{"content":"The default asymmetric key wrap algorithm, RsaOaepKeyWrap.","pos":[0,58]}]}],"pos":[7376,7435],"yaml":true},{"content":"Gets the default asymmetric signature algorithm, RsaSha1Signature.","nodes":[{"pos":[0,66],"content":"Gets the default asymmetric signature algorithm, RsaSha1Signature.","nodes":[{"content":"Gets the default asymmetric signature algorithm, RsaSha1Signature.","pos":[0,66]}]}],"pos":[8774,8841],"yaml":true},{"content":"The default asymmetric signature algorithm, RsaSha1Signature.","nodes":[{"pos":[0,61],"content":"The default asymmetric signature algorithm, RsaSha1Signature.","nodes":[{"content":"The default asymmetric signature algorithm, RsaSha1Signature.","pos":[0,61]}]}],"pos":[8989,9051],"yaml":true},{"content":"Gets the default canonicalization algorithm, ExclusiveC14n.","nodes":[{"pos":[0,59],"content":"Gets the default canonicalization algorithm, ExclusiveC14n.","nodes":[{"content":"Gets the default canonicalization algorithm, ExclusiveC14n.","pos":[0,59]}]}],"pos":[10374,10434],"yaml":true},{"content":"The default canonicalization algorithm, ExclusiveC14n.","nodes":[{"pos":[0,54],"content":"The default canonicalization algorithm, ExclusiveC14n.","nodes":[{"content":"The default canonicalization algorithm, ExclusiveC14n.","pos":[0,54]}]}],"pos":[10579,10634],"yaml":true},{"content":"Gets the default digest algorithm, Sha1Digest.","nodes":[{"pos":[0,46],"content":"Gets the default digest algorithm, Sha1Digest.","nodes":[{"content":"Gets the default digest algorithm, Sha1Digest.","pos":[0,46]}]}],"pos":[11894,11941],"yaml":true},{"content":"The default digest algorithm, Sha1Digest.","nodes":[{"pos":[0,41],"content":"The default digest algorithm, Sha1Digest.","nodes":[{"content":"The default digest algorithm, Sha1Digest.","pos":[0,41]}]}],"pos":[12076,12118],"yaml":true},{"content":"Gets the default encryption algorithm, Aes128Encryption.","nodes":[{"pos":[0,56],"content":"Gets the default encryption algorithm, Aes128Encryption.","nodes":[{"content":"Gets the default encryption algorithm, Aes128Encryption.","pos":[0,56]}]}],"pos":[13392,13449],"yaml":true},{"content":"The default encryption algorithm, Aes128Encryption.","nodes":[{"pos":[0,51],"content":"The default encryption algorithm, Aes128Encryption.","nodes":[{"content":"The default encryption algorithm, Aes128Encryption.","pos":[0,51]}]}],"pos":[13588,13640],"yaml":true},{"content":"Gets the default encryption key derivation length, 128.","nodes":[{"pos":[0,55],"content":"Gets the default encryption key derivation length, 128.","nodes":[{"content":"Gets the default encryption key derivation length, 128.","pos":[0,55]}]}],"pos":[14978,15034],"yaml":true},{"content":"The default encryption key derivation length, 128.","nodes":[{"pos":[0,50],"content":"The default encryption key derivation length, 128.","nodes":[{"content":"The default encryption key derivation length, 128.","pos":[0,50]}]}],"pos":[15179,15230],"yaml":true},{"content":"Gets the default signature key derivation length, 128.","nodes":[{"pos":[0,54],"content":"Gets the default signature key derivation length, 128.","nodes":[{"content":"Gets the default signature key derivation length, 128.","pos":[0,54]}]}],"pos":[16572,16627],"yaml":true},{"content":"The default signature key derivation length, 128.","nodes":[{"pos":[0,49],"content":"The default signature key derivation length, 128.","nodes":[{"content":"The default signature key derivation length, 128.","pos":[0,49]}]}],"pos":[16771,16821],"yaml":true},{"content":"Gets the default symmetric key length, 128.","nodes":[{"pos":[0,43],"content":"Gets the default symmetric key length, 128.","nodes":[{"content":"Gets the default symmetric key length, 128.","pos":[0,43]}]}],"pos":[18102,18146],"yaml":true},{"content":"The default symmetric key length, 128.","nodes":[{"pos":[0,38],"content":"The default symmetric key length, 128.","nodes":[{"content":"The default symmetric key length, 128.","pos":[0,38]}]}],"pos":[18280,18319],"yaml":true},{"content":"Gets the default symmetric key wrap algorithm, Aes128KeyWrap.","nodes":[{"pos":[0,61],"content":"Gets the default symmetric key wrap algorithm, Aes128KeyWrap.","nodes":[{"content":"Gets the default symmetric key wrap algorithm, Aes128KeyWrap.","pos":[0,61]}]}],"pos":[19632,19694],"yaml":true},{"content":"The default symmetric key wrap algorithm, Aes128KeyWrap.","nodes":[{"pos":[0,56],"content":"The default symmetric key wrap algorithm, Aes128KeyWrap.","nodes":[{"content":"The default symmetric key wrap algorithm, Aes128KeyWrap.","pos":[0,56]}]}],"pos":[19839,19896],"yaml":true},{"content":"Gets the default symmetric signature algorithm, HmacSha1Signature.","nodes":[{"pos":[0,66],"content":"Gets the default symmetric signature algorithm, HmacSha1Signature.","nodes":[{"content":"Gets the default symmetric signature algorithm, HmacSha1Signature.","pos":[0,66]}]}],"pos":[21228,21295],"yaml":true},{"content":"The default symmetric signature algorithm, HmacSha1Signature.","nodes":[{"pos":[0,61],"content":"The default symmetric signature algorithm, HmacSha1Signature.","nodes":[{"content":"The default symmetric signature algorithm, HmacSha1Signature.","pos":[0,61]}]}],"pos":[21442,21504],"yaml":true},{"content":"Returns `true` if the specified asymmetric key length is supported; otherwise, returns `false`. Valid lengths range from 1024 to 4096.","nodes":[{"pos":[0,134],"content":"Returns `true` if the specified asymmetric key length is supported; otherwise, returns `false`. Valid lengths range from 1024 to 4096.","nodes":[{"content":"Returns <ph id=\"ph1\">`true`</ph> if the specified asymmetric key length is supported; otherwise, returns <ph id=\"ph2\">`false`</ph>.","pos":[0,95],"source":"Returns `true` if the specified asymmetric key length is supported; otherwise, returns `false`."},{"content":"Valid lengths range from 1024 to 4096.","pos":[96,134]}]}],"pos":[22875,23010],"yaml":true},{"content":"The asymmetric key length.","nodes":[{"pos":[0,26],"content":"The asymmetric key length.","nodes":[{"content":"The asymmetric key length.","pos":[0,26]}]}],"pos":[23176,23203],"yaml":true},{"content":"`true` if the specified asymmetric key length is supported; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the specified asymmetric key length is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified asymmetric key length is supported; otherwise, `false`."}],"pos":[23261,23343],"yaml":true},{"content":"Returns `true` if the specified symmetric key length is supported; otherwise, returns `false`. Valid lengths range from 128 to 256.","nodes":[{"pos":[0,131],"content":"Returns `true` if the specified symmetric key length is supported; otherwise, returns `false`. Valid lengths range from 128 to 256.","nodes":[{"content":"Returns <ph id=\"ph1\">`true`</ph> if the specified symmetric key length is supported; otherwise, returns <ph id=\"ph2\">`false`</ph>.","pos":[0,94],"source":"Returns `true` if the specified symmetric key length is supported; otherwise, returns `false`."},{"content":"Valid lengths range from 128 to 256.","pos":[95,131]}]}],"pos":[24704,24836],"yaml":true},{"content":"The symmetric key length.","nodes":[{"pos":[0,25],"content":"The symmetric key length.","nodes":[{"content":"The symmetric key length.","pos":[0,25]}]}],"pos":[25001,25027],"yaml":true},{"content":"`true` if the specified symmetric key length is supported; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the specified symmetric key length is supported; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified symmetric key length is supported; otherwise, `false`."}],"pos":[25085,25166],"yaml":true},{"content":"Returns the string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>.","nodes":[{"pos":[0,122],"content":"Returns the string representation of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>."}],"pos":[26343,26466],"yaml":true},{"content":"The string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>.","nodes":[{"pos":[0,114],"content":"The string representation of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"&gt;&lt;/xref&gt;</ph>.","source":"The string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>."}],"pos":[26601,26716],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  commentId: T:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  id: Basic128SecurityAlgorithmSuite\n  children:\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  - System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString\n  langs:\n  - csharp\n  name: Basic128SecurityAlgorithmSuite\n  nameWithType: Basic128SecurityAlgorithmSuite\n  fullName: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: The basic 128-bit security algorithm suite.\n  syntax:\n    content: 'public class Basic128SecurityAlgorithmSuite : System.ServiceModel.Security.SecurityAlgorithmSuite'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Security.SecurityAlgorithmSuite\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.Default\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256\n  - System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor\n  commentId: M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: Basic128SecurityAlgorithmSuite()\n  nameWithType: Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite()\n  fullName: Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Creates and initializes an instance of <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>.\n  syntax:\n    content: public Basic128SecurityAlgorithmSuite ();\n    parameters: []\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  id: DefaultAsymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultAsymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default asymmetric key wrap algorithm, RsaOaepKeyWrap.\n  syntax:\n    content: public override string DefaultAsymmetricKeyWrapAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default asymmetric key wrap algorithm, RsaOaepKeyWrap.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  id: DefaultAsymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultAsymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default asymmetric signature algorithm, RsaSha1Signature.\n  syntax:\n    content: public override string DefaultAsymmetricSignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default asymmetric signature algorithm, RsaSha1Signature.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  id: DefaultCanonicalizationAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultCanonicalizationAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default canonicalization algorithm, ExclusiveC14n.\n  syntax:\n    content: public override string DefaultCanonicalizationAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default canonicalization algorithm, ExclusiveC14n.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  id: DefaultDigestAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultDigestAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default digest algorithm, Sha1Digest.\n  syntax:\n    content: public override string DefaultDigestAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default digest algorithm, Sha1Digest.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  id: DefaultEncryptionAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultEncryptionAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default encryption algorithm, Aes128Encryption.\n  syntax:\n    content: public override string DefaultEncryptionAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default encryption algorithm, Aes128Encryption.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  id: DefaultEncryptionKeyDerivationLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultEncryptionKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  fullName: Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default encryption key derivation length, 128.\n  syntax:\n    content: public override int DefaultEncryptionKeyDerivationLength { get; }\n    return:\n      type: System.Int32\n      description: The default encryption key derivation length, 128.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  id: DefaultSignatureKeyDerivationLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSignatureKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default signature key derivation length, 128.\n  syntax:\n    content: public override int DefaultSignatureKeyDerivationLength { get; }\n    return:\n      type: System.Int32\n      description: The default signature key derivation length, 128.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  id: DefaultSymmetricKeyLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSymmetricKeyLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default symmetric key length, 128.\n  syntax:\n    content: public override int DefaultSymmetricKeyLength { get; }\n    return:\n      type: System.Int32\n      description: The default symmetric key length, 128.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  id: DefaultSymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default symmetric key wrap algorithm, Aes128KeyWrap.\n  syntax:\n    content: public override string DefaultSymmetricKeyWrapAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default symmetric key wrap algorithm, Aes128KeyWrap.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  commentId: P:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  id: DefaultSymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: DefaultSymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Gets the default symmetric signature algorithm, HmacSha1Signature.\n  syntax:\n    content: public override string DefaultSymmetricSignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: The default symmetric signature algorithm, HmacSha1Signature.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  commentId: M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  id: IsAsymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsAsymmetricKeyLengthSupported(Int32)\n  nameWithType: Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n  fullName: Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Returns `true` if the specified asymmetric key length is supported; otherwise, returns `false`. Valid lengths range from 1024 to 4096.\n  syntax:\n    content: public override bool IsAsymmetricKeyLengthSupported (int length);\n    parameters:\n    - id: length\n      type: System.Int32\n      description: The asymmetric key length.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified asymmetric key length is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  commentId: M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  id: IsSymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: IsSymmetricKeyLengthSupported(Int32)\n  nameWithType: Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n  fullName: Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Returns `true` if the specified symmetric key length is supported; otherwise, returns `false`. Valid lengths range from 128 to 256.\n  syntax:\n    content: public override bool IsSymmetricKeyLengthSupported (int length);\n    parameters:\n    - id: length\n      type: System.Int32\n      description: The symmetric key length.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified symmetric key length is supported; otherwise, `false`.'\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString\n  commentId: M:System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString\n  id: ToString\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Basic128SecurityAlgorithmSuite.ToString()\n  fullName: Basic128SecurityAlgorithmSuite.ToString()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Security\n  summary: Returns the string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the <xref href=\"System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\"></xref>.\n  overload: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: SecurityAlgorithmSuite\n  nameWithType: SecurityAlgorithmSuite\n  fullName: System.ServiceModel.Security.SecurityAlgorithmSuite\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128SecurityAlgorithmSuite()\n  nameWithType: Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite()\n  fullName: Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite()\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultCanonicalizationAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultDigestAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  fullName: Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSignatureKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricKeyLengthSupported(Int32)\n  nameWithType: Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n  fullName: Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricKeyLengthSupported(Int32)\n  nameWithType: Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n  fullName: Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(Int32)\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: ToString()\n  nameWithType: Basic128SecurityAlgorithmSuite.ToString()\n  fullName: Basic128SecurityAlgorithmSuite.ToString()\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.#ctor*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128SecurityAlgorithmSuite\n  nameWithType: Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite\n  fullName: Basic128SecurityAlgorithmSuite.Basic128SecurityAlgorithmSuite\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultAsymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultCanonicalizationAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultDigestAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultDigestAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultEncryptionAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultEncryptionKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  fullName: Basic128SecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSignatureKeyDerivationLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyLength\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricKeyWrapAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: DefaultSymmetricSignatureAlgorithm\n  nameWithType: Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  fullName: Basic128SecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricKeyLengthSupported\n  nameWithType: Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported\n  fullName: Basic128SecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricKeyLengthSupported\n  nameWithType: Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported\n  fullName: Basic128SecurityAlgorithmSuite.IsSymmetricKeyLengthSupported\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite.ToString*\n  parent: System.ServiceModel.Security.Basic128SecurityAlgorithmSuite\n  isExternal: false\n  name: ToString\n  nameWithType: Basic128SecurityAlgorithmSuite.ToString\n  fullName: Basic128SecurityAlgorithmSuite.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Security/Basic128SecurityAlgorithmSuite.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128\n  nameWithType: SecurityAlgorithmSuite.Basic128\n  fullName: SecurityAlgorithmSuite.Basic128\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic128Rsa15\n  fullName: SecurityAlgorithmSuite.Basic128Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic128Sha256\n  fullName: SecurityAlgorithmSuite.Basic128Sha256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic128Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic128Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic128Sha256Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192\n  nameWithType: SecurityAlgorithmSuite.Basic192\n  fullName: SecurityAlgorithmSuite.Basic192\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic192Rsa15\n  fullName: SecurityAlgorithmSuite.Basic192Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic192Sha256\n  fullName: SecurityAlgorithmSuite.Basic192Sha256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic192Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic192Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic192Sha256Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256\n  nameWithType: SecurityAlgorithmSuite.Basic256\n  fullName: SecurityAlgorithmSuite.Basic256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic256Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256Sha256\n  nameWithType: SecurityAlgorithmSuite.Basic256Sha256\n  fullName: SecurityAlgorithmSuite.Basic256Sha256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Basic256Sha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.Basic256Sha256Rsa15\n  fullName: SecurityAlgorithmSuite.Basic256Sha256Rsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.Default\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: Default\n  nameWithType: SecurityAlgorithmSuite.Default\n  fullName: SecurityAlgorithmSuite.Default\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricKeyWrapAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsAsymmetricKeyWrapAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsAsymmetricSignatureAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsAsymmetricSignatureAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsCanonicalizationAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsCanonicalizationAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsDigestAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsDigestAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsDigestAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsEncryptionAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsEncryptionAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsEncryptionKeyDerivationAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsEncryptionKeyDerivationAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSignatureKeyDerivationAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsSignatureKeyDerivationAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricKeyWrapAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsSymmetricKeyWrapAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(System.String)\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: IsSymmetricSignatureAlgorithmSupported(String)\n  nameWithType: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)\n  fullName: SecurityAlgorithmSuite.IsSymmetricSignatureAlgorithmSupported(String)\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDes\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDes\n  nameWithType: SecurityAlgorithmSuite.TripleDes\n  fullName: SecurityAlgorithmSuite.TripleDes\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesRsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDesRsa15\n  nameWithType: SecurityAlgorithmSuite.TripleDesRsa15\n  fullName: SecurityAlgorithmSuite.TripleDesRsa15\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDesSha256\n  nameWithType: SecurityAlgorithmSuite.TripleDesSha256\n  fullName: SecurityAlgorithmSuite.TripleDesSha256\n- uid: System.ServiceModel.Security.SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  parent: System.ServiceModel.Security.SecurityAlgorithmSuite\n  isExternal: false\n  name: TripleDesSha256Rsa15\n  nameWithType: SecurityAlgorithmSuite.TripleDesSha256Rsa15\n  fullName: SecurityAlgorithmSuite.TripleDesSha256Rsa15\n"}