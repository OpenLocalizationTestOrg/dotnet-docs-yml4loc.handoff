{"nodes":[{"content":"Declaratively instructs the .NET Framework to create an instance of a configuration element collection. This class cannot be inherited.","nodes":[{"pos":[0,135],"content":"Declaratively instructs the .NET Framework to create an instance of a configuration element collection. This class cannot be inherited.","nodes":[{"content":"Declaratively instructs the .NET Framework to create an instance of a configuration element collection. This class cannot be inherited.","pos":[0,135],"nodes":[{"content":"Declaratively instructs the .NET Framework to create an instance of a configuration element collection.","pos":[0,103]},{"content":"This class cannot be inherited.","pos":[104,135]}]}]}],"pos":[970,1106],"yaml":true},{"content":"You use the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute to decorate a <xref:System.Configuration.ConfigurationElementCollection> element. This instructs the .NET Framework to create an instance of the collection and to initialize it using your custom <xref:System.Configuration.ConfigurationElement> values.  \n  \n> [!NOTE]\n>  The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the elements and decorate them with the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute. For each element marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationElementCollection> instance. You can also use the programmatic model. In this case it is your responsibility to declare the custom public collection but also to override the <xref:System.Configuration.ConfigurationElementCollection> member and return the properties collection.  \n  \n The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attributes:  \n  \n-   The attributes that instruct the .NET Framework how to create instances of the custom configuration element properties. These types include:  \n  \n    -   <xref:System.Configuration.ConfigurationCollectionAttribute>  \n  \n    -   <xref:System.Configuration.ConfigurationPropertyAttribute>  \n  \n-   The attributes that instruct the .NET Framework how to validate the custom configuration element properties. These types include:  \n  \n    -   <xref:System.Configuration.IntegerValidatorAttribute>  \n  \n    -   <xref:System.Configuration.LongValidatorAttribute>  \n  \n    -   <xref:System.Configuration.RegexStringValidatorAttribute>  \n  \n    -   <xref:System.Configuration.StringValidatorAttribute>  \n  \n    -   <xref:System.Configuration.TimeSpanValidatorAttribute>","nodes":[{"pos":[0,334],"content":"You use the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute to decorate a <xref:System.Configuration.ConfigurationElementCollection> element. This instructs the .NET Framework to create an instance of the collection and to initialize it using your custom <xref:System.Configuration.ConfigurationElement> values.","nodes":[{"content":"You use the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute to decorate a <xref:System.Configuration.ConfigurationElementCollection> element. This instructs the .NET Framework to create an instance of the collection and to initialize it using your custom <xref:System.Configuration.ConfigurationElement> values.","pos":[0,334],"nodes":[{"content":"You use the <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationCollectionAttribute&gt;</ph> attribute to decorate a <ph id=\"ph2\">&lt;xref:System.Configuration.ConfigurationElementCollection&gt;</ph> element.","pos":[0,164],"source":"You use the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute to decorate a <xref:System.Configuration.ConfigurationElementCollection> element."},{"content":"This instructs the .NET Framework to create an instance of the collection and to initialize it using your custom <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph> values.","pos":[165,334],"source":" This instructs the .NET Framework to create an instance of the collection and to initialize it using your custom <xref:System.Configuration.ConfigurationElement> values."}]}]},{"pos":[342,1033],"content":"[!NOTE]\n The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the elements and decorate them with the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute. For each element marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationElementCollection> instance. You can also use the programmatic model. In this case it is your responsibility to declare the custom public collection but also to override the <xref:System.Configuration.ConfigurationElementCollection> member and return the properties collection.","leadings":["","> "],"nodes":[{"content":" The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the elements and decorate them with the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute. For each element marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationElementCollection> instance. You can also use the programmatic model. In this case it is your responsibility to declare the custom public collection but also to override the <xref:System.Configuration.ConfigurationElementCollection> member and return the properties collection.","pos":[8,689],"nodes":[{"content":"The simplest way to create a custom configuration element is to use the attributed (declarative) model.","pos":[1,104]},{"content":"You declare the elements and decorate them with the <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationCollectionAttribute&gt;</ph> attribute.","pos":[105,228],"source":" You declare the elements and decorate them with the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute."},{"content":"For each element marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationElementCollection&gt;</ph> instance.","pos":[229,432],"source":" For each element marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationElementCollection> instance."},{"content":"You can also use the programmatic model.","pos":[433,473]},{"content":"In this case it is your responsibility to declare the custom public collection but also to override the <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationElementCollection&gt;</ph> member and return the properties collection.","pos":[474,681],"source":" In this case it is your responsibility to declare the custom public collection but also to override the <xref:System.Configuration.ConfigurationElementCollection> member and return the properties collection."}]}]},{"pos":[1040,1210],"content":"The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attributes:","nodes":[{"content":"The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attributes:","pos":[0,170],"nodes":[{"content":"The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements.","pos":[0,135]},{"content":"There are two kinds of attributes:","pos":[136,170]}]}]},{"pos":[1220,1360],"content":"The attributes that instruct the .NET Framework how to create instances of the custom configuration element properties. These types include:","nodes":[{"content":"The attributes that instruct the .NET Framework how to create instances of the custom configuration element properties. These types include:","pos":[0,140],"nodes":[{"content":"The attributes that instruct the .NET Framework how to create instances of the custom configuration element properties.","pos":[0,119]},{"content":"These types include:","pos":[120,140]}]}]},{"pos":[1374,1434],"content":"<xref:System.Configuration.ConfigurationCollectionAttribute>","nodes":[]},{"pos":[1448,1506],"content":"<xref:System.Configuration.ConfigurationPropertyAttribute>","nodes":[]},{"pos":[1516,1645],"content":"The attributes that instruct the .NET Framework how to validate the custom configuration element properties. These types include:","nodes":[{"content":"The attributes that instruct the .NET Framework how to validate the custom configuration element properties. These types include:","pos":[0,129],"nodes":[{"content":"The attributes that instruct the .NET Framework how to validate the custom configuration element properties.","pos":[0,108]},{"content":"These types include:","pos":[109,129]}]}]},{"pos":[1659,1712],"content":"<xref:System.Configuration.IntegerValidatorAttribute>","nodes":[]},{"pos":[1726,1776],"content":"<xref:System.Configuration.LongValidatorAttribute>","nodes":[]},{"pos":[1790,1847],"content":"<xref:System.Configuration.RegexStringValidatorAttribute>","nodes":[]},{"pos":[1861,1913],"content":"<xref:System.Configuration.StringValidatorAttribute>","nodes":[]},{"pos":[1927,1981],"content":"<xref:System.Configuration.TimeSpanValidatorAttribute>","nodes":[]}],"pos":[1117,3124],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Configuration.ConfigurationCollectionAttribute\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationCollectionAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Configuration.ConfigurationCollectionAttribute\"></xref> class."}],"pos":[10328,10444],"yaml":true},{"content":"You use this constructor to tell the .NET Framework the custom type of the property collection to be created.","nodes":[{"pos":[0,109],"content":"You use this constructor to tell the .NET Framework the custom type of the property collection to be created.","nodes":[{"content":"You use this constructor to tell the .NET Framework the custom type of the property collection to be created.","pos":[0,109]}]}],"pos":[10455,10565],"yaml":true,"extradata":"MT"},{"content":"The type of the property collection to create.","nodes":[{"pos":[0,46],"content":"The type of the property collection to create.","nodes":[{"content":"The type of the property collection to create.","pos":[0,46]}]}],"pos":[11279,11326],"yaml":true},{"content":"<code>itemType</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;itemType&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>itemType</code> is `null`."}],"pos":[11515,11548],"yaml":true},{"content":"Gets or sets the name of the `<add>` configuration element.","nodes":[{"pos":[0,59],"content":"Gets or sets the name of the <ph id=\"ph1\">`&lt;add&gt;`</ph> configuration element.","source":"Gets or sets the name of the `<add>` configuration element."}],"pos":[12693,12753],"yaml":true},{"content":"The <xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A> property allows you to assign a different name to the configuration element. For example, you could use `addUrl` instead of \"add\".","nodes":[{"pos":[0,210],"content":"The <xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A> property allows you to assign a different name to the configuration element. For example, you could use `addUrl` instead of \"add\".","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A&gt;</ph> property allows you to assign a different name to the configuration element.","pos":[0,156],"source":"The <xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A> property allows you to assign a different name to the configuration element."},{"content":"For example, you could use <ph id=\"ph1\">`addUrl`</ph> instead of \"add\".","pos":[157,210],"source":" For example, you could use `addUrl` instead of \"add\"."}]}],"pos":[12764,12975],"yaml":true,"extradata":"MT"},{"content":"The name that substitutes the standard name \"add\" for the configuration item.","nodes":[{"pos":[0,77],"content":"The name that substitutes the standard name \"add\" for the configuration item.","nodes":[{"content":"The name that substitutes the standard name \"add\" for the configuration item.","pos":[0,77]}]}],"pos":[13664,13742],"yaml":true},{"content":"Gets or sets the name for the `<clear>` configuration element.","nodes":[{"pos":[0,62],"content":"Gets or sets the name for the <ph id=\"ph1\">`&lt;clear&gt;`</ph> configuration element.","source":"Gets or sets the name for the `<clear>` configuration element."}],"pos":[15001,15064],"yaml":true},{"content":"The <xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A> property allows you to assign a different name to the `<clear>` configuration element. For example, you could use `clearUrls` instead of \"clear\".","nodes":[{"pos":[0,228],"content":"The <xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A> property allows you to assign a different name to the `<clear>` configuration element. For example, you could use `clearUrls` instead of \"clear\".","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A&gt;</ph> property allows you to assign a different name to the <ph id=\"ph2\">`&lt;clear&gt;`</ph> configuration element.","pos":[0,169],"source":"The <xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A> property allows you to assign a different name to the `<clear>` configuration element."},{"content":"For example, you could use <ph id=\"ph1\">`clearUrls`</ph> instead of \"clear\".","pos":[170,228],"source":" For example, you could use `clearUrls` instead of \"clear\"."}]}],"pos":[15075,15304],"yaml":true,"extradata":"MT"},{"content":"The name that replaces the standard name \"clear\" for the configuration item.","nodes":[{"pos":[0,76],"content":"The name that replaces the standard name \"clear\" for the configuration item.","nodes":[{"content":"The name that replaces the standard name \"clear\" for the configuration item.","pos":[0,76]}]}],"pos":[15990,16067],"yaml":true},{"content":"Gets or sets the type of the <xref href=\"System.Configuration.ConfigurationCollectionAttribute\"></xref> attribute.","nodes":[{"pos":[0,114],"content":"Gets or sets the type of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationCollectionAttribute\"&gt;&lt;/xref&gt;</ph> attribute.","source":"Gets or sets the type of the <xref href=\"System.Configuration.ConfigurationCollectionAttribute\"></xref> attribute."}],"pos":[17329,17444],"yaml":true},{"content":"The type of the <xref href=\"System.Configuration.ConfigurationCollectionAttribute\"></xref>.","nodes":[{"pos":[0,91],"content":"The type of the <ph id=\"ph1\">&lt;xref href=\"System.Configuration.ConfigurationCollectionAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"The type of the <xref href=\"System.Configuration.ConfigurationCollectionAttribute\"></xref>."}],"pos":[17658,17750],"yaml":true},{"content":"Gets the type of the collection element.","nodes":[{"pos":[0,40],"content":"Gets the type of the collection element.","nodes":[{"content":"Gets the type of the collection element.","pos":[0,40]}]}],"pos":[18976,19017],"yaml":true},{"content":"The <xref:System.Configuration.ConfigurationCollectionAttribute.ItemType%2A> property is used by reflection to get the configuration element type.","nodes":[{"pos":[0,146],"content":"The <xref:System.Configuration.ConfigurationCollectionAttribute.ItemType%2A> property is used by reflection to get the configuration element type.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationCollectionAttribute.ItemType%2A&gt;</ph> property is used by reflection to get the configuration element type.","pos":[0,146],"source":"The <xref:System.Configuration.ConfigurationCollectionAttribute.ItemType%2A> property is used by reflection to get the configuration element type."}]}],"pos":[19028,19175],"yaml":true,"extradata":"MT"},{"content":"The type of the collection element.","nodes":[{"pos":[0,35],"content":"The type of the collection element.","nodes":[{"content":"The type of the collection element.","pos":[0,35]}]}],"pos":[19283,19319],"yaml":true},{"content":"Gets or sets the name for the `<remove>` configuration element.","nodes":[{"pos":[0,63],"content":"Gets or sets the name for the <ph id=\"ph1\">`&lt;remove&gt;`</ph> configuration element.","source":"Gets or sets the name for the `<remove>` configuration element."}],"pos":[20575,20639],"yaml":true},{"content":"The <xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A> property allows you to assign a different name to the `<remove>` configuration element. For example, you could use `removeUrl` instead of \"remove\".","nodes":[{"pos":[0,230],"content":"The <xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A> property allows you to assign a different name to the `<remove>` configuration element. For example, you could use `removeUrl` instead of \"remove\".","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A&gt;</ph> property allows you to assign a different name to the <ph id=\"ph2\">`&lt;remove&gt;`</ph> configuration element.","pos":[0,170],"source":"The <xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A> property allows you to assign a different name to the `<remove>` configuration element."},{"content":"For example, you could use <ph id=\"ph1\">`removeUrl`</ph> instead of \"remove\".","pos":[171,230],"source":" For example, you could use `removeUrl` instead of \"remove\"."}]}],"pos":[20650,20881],"yaml":true,"extradata":"MT"},{"content":"The name that replaces the standard name \"remove\" for the configuration element.","nodes":[{"pos":[0,80],"content":"The name that replaces the standard name \"remove\" for the configuration element.","nodes":[{"content":"The name that replaces the standard name \"remove\" for the configuration element.","pos":[0,80]}]}],"pos":[21576,21657],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ConfigurationCollectionAttribute\n  commentId: T:System.Configuration.ConfigurationCollectionAttribute\n  id: ConfigurationCollectionAttribute\n  children:\n  - System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)\n  - System.Configuration.ConfigurationCollectionAttribute.AddItemName\n  - System.Configuration.ConfigurationCollectionAttribute.ClearItemsName\n  - System.Configuration.ConfigurationCollectionAttribute.CollectionType\n  - System.Configuration.ConfigurationCollectionAttribute.ItemType\n  - System.Configuration.ConfigurationCollectionAttribute.RemoveItemName\n  langs:\n  - csharp\n  name: ConfigurationCollectionAttribute\n  nameWithType: ConfigurationCollectionAttribute\n  fullName: System.Configuration.ConfigurationCollectionAttribute\n  type: Class\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Declaratively instructs the .NET Framework to create an instance of a configuration element collection. This class cannot be inherited.\n  remarks: \"You use the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute to decorate a <xref:System.Configuration.ConfigurationElementCollection> element. This instructs the .NET Framework to create an instance of the collection and to initialize it using your custom <xref:System.Configuration.ConfigurationElement> values.  \\n  \\n> [!NOTE]\\n>  The simplest way to create a custom configuration element is to use the attributed (declarative) model. You declare the elements and decorate them with the <xref:System.Configuration.ConfigurationCollectionAttribute> attribute. For each element marked with this attribute, the .NET Framework uses reflection to read the decorating parameters and create a related <xref:System.Configuration.ConfigurationElementCollection> instance. You can also use the programmatic model. In this case it is your responsibility to declare the custom public collection but also to override the <xref:System.Configuration.ConfigurationElementCollection> member and return the properties collection.  \\n  \\n The .NET Framework configuration system provides attribute types that you can use during the creation of custom configuration elements. There are two kinds of attributes:  \\n  \\n-   The attributes that instruct the .NET Framework how to create instances of the custom configuration element properties. These types include:  \\n  \\n    -   <xref:System.Configuration.ConfigurationCollectionAttribute>  \\n  \\n    -   <xref:System.Configuration.ConfigurationPropertyAttribute>  \\n  \\n-   The attributes that instruct the .NET Framework how to validate the custom configuration element properties. These types include:  \\n  \\n    -   <xref:System.Configuration.IntegerValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.LongValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.RegexStringValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.StringValidatorAttribute>  \\n  \\n    -   <xref:System.Configuration.TimeSpanValidatorAttribute>\"\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationCollectionAttribute>.  \\n  \\n This example consists of three classes: `UrlsSection`, `UrlsCollection` and `UrlConfigElement`.The `UrlsSection` class uses the <xref:System.Configuration.ConfigurationCollectionAttribute> to define a custom configuration section. This section contains a URL collection (defined by the `UrlsCollection` class) of URL elements (defined by the `UrlConfigElement` class). When you run the example, an instance of the `UrlsSection` class is created and the following configuration elements are generated in the application configuration file:  \\n  \\n```  \\n<configuration>  \\n    <configSections>  \\n        <section name=\\\"MyUrls\\\" type=\\\"UrlsSection,   \\n          ConfigurationCollectionAttribute, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\\\" />  \\n    </configSections>  \\n    <MyUrls>  \\n        <urls>  \\n            <remove name=\\\"Contoso\\\" />  \\n            <add name=\\\"Contoso\\\" url=\\\"http://www.contoso.com\\\" port=\\\"0\\\" />  \\n        </urls>  \\n    </MyUrls>  \\n</configuration  \\n```  \\n  \\n [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#1)]\\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#1)]  \\n  \\n [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#31](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/configurationcollectionattribute.cs#31)]\\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/configurationcollectionattribute.vb#31)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Property)]\n\n      public sealed class ConfigurationCollectionAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)\n  commentId: M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  langs:\n  - csharp\n  name: ConfigurationCollectionAttribute(Type)\n  nameWithType: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)\n  fullName: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Configuration.ConfigurationCollectionAttribute\"></xref> class.\n  remarks: You use this constructor to tell the .NET Framework the custom type of the property collection to be created.\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationCollectionAttribute.%23ctor%2A>.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]\\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]\"\n  syntax:\n    content: public ConfigurationCollectionAttribute (Type itemType);\n    parameters:\n    - id: itemType\n      type: System.Type\n      description: The type of the property collection to create.\n  overload: System.Configuration.ConfigurationCollectionAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>itemType</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationCollectionAttribute.AddItemName\n  commentId: P:System.Configuration.ConfigurationCollectionAttribute.AddItemName\n  id: AddItemName\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  langs:\n  - csharp\n  name: AddItemName\n  nameWithType: ConfigurationCollectionAttribute.AddItemName\n  fullName: ConfigurationCollectionAttribute.AddItemName\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets the name of the `<add>` configuration element.\n  remarks: The <xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A> property allows you to assign a different name to the configuration element. For example, you could use `addUrl` instead of \"add\".\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationCollectionAttribute.AddItemName%2A> property.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]\\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]\"\n  syntax:\n    content: public string AddItemName { get; set; }\n    return:\n      type: System.String\n      description: The name that substitutes the standard name \"add\" for the configuration item.\n  overload: System.Configuration.ConfigurationCollectionAttribute.AddItemName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName\n  commentId: P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName\n  id: ClearItemsName\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  langs:\n  - csharp\n  name: ClearItemsName\n  nameWithType: ConfigurationCollectionAttribute.ClearItemsName\n  fullName: ConfigurationCollectionAttribute.ClearItemsName\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets the name for the `<clear>` configuration element.\n  remarks: The <xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A> property allows you to assign a different name to the `<clear>` configuration element. For example, you could use `clearUrls` instead of \"clear\".\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName%2A>.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]\\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]\"\n  syntax:\n    content: public string ClearItemsName { get; set; }\n    return:\n      type: System.String\n      description: The name that replaces the standard name \"clear\" for the configuration item.\n  overload: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationCollectionAttribute.CollectionType\n  commentId: P:System.Configuration.ConfigurationCollectionAttribute.CollectionType\n  id: CollectionType\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  langs:\n  - csharp\n  name: CollectionType\n  nameWithType: ConfigurationCollectionAttribute.CollectionType\n  fullName: ConfigurationCollectionAttribute.CollectionType\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets the type of the <xref href=\"System.Configuration.ConfigurationCollectionAttribute\"></xref> attribute.\n  syntax:\n    content: public System.Configuration.ConfigurationElementCollectionType CollectionType { get; set; }\n    return:\n      type: System.Configuration.ConfigurationElementCollectionType\n      description: The type of the <xref href=\"System.Configuration.ConfigurationCollectionAttribute\"></xref>.\n  overload: System.Configuration.ConfigurationCollectionAttribute.CollectionType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationCollectionAttribute.ItemType\n  commentId: P:System.Configuration.ConfigurationCollectionAttribute.ItemType\n  id: ItemType\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  langs:\n  - csharp\n  name: ItemType\n  nameWithType: ConfigurationCollectionAttribute.ItemType\n  fullName: ConfigurationCollectionAttribute.ItemType\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets the type of the collection element.\n  remarks: The <xref:System.Configuration.ConfigurationCollectionAttribute.ItemType%2A> property is used by reflection to get the configuration element type.\n  syntax:\n    content: public Type ItemType { get; }\n    return:\n      type: System.Type\n      description: The type of the collection element.\n  overload: System.Configuration.ConfigurationCollectionAttribute.ItemType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName\n  commentId: P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName\n  id: RemoveItemName\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  langs:\n  - csharp\n  name: RemoveItemName\n  nameWithType: ConfigurationCollectionAttribute.RemoveItemName\n  fullName: ConfigurationCollectionAttribute.RemoveItemName\n  type: Property\n  assemblies:\n  - System.Configuration\n  - System.Configuration.ConfigurationManager\n  namespace: System.Configuration\n  summary: Gets or sets the name for the `<remove>` configuration element.\n  remarks: The <xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A> property allows you to assign a different name to the `<remove>` configuration element. For example, you could use `removeUrl` instead of \"remove\".\n  example:\n  - \"The following example shows how to use the <xref:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName%2A> property.  \\n  \\n [!code-csharp[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/CS/customcollectionsection.cs#20)]\\n [!code-vb[System.Configuration.ConfigurationCollectionAttribute#20](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.ConfigurationCollectionAttribute/VB/customcollectionsection.vb#20)]\"\n  syntax:\n    content: public string RemoveItemName { get; set; }\n    return:\n      type: System.String\n      description: The name that replaces the standard name \"remove\" for the configuration element.\n  overload: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: ConfigurationCollectionAttribute(Type)\n  nameWithType: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)\n  fullName: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Configuration.ConfigurationCollectionAttribute.AddItemName\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: AddItemName\n  nameWithType: ConfigurationCollectionAttribute.AddItemName\n  fullName: ConfigurationCollectionAttribute.AddItemName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: ClearItemsName\n  nameWithType: ConfigurationCollectionAttribute.ClearItemsName\n  fullName: ConfigurationCollectionAttribute.ClearItemsName\n- uid: System.Configuration.ConfigurationCollectionAttribute.CollectionType\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: CollectionType\n  nameWithType: ConfigurationCollectionAttribute.CollectionType\n  fullName: ConfigurationCollectionAttribute.CollectionType\n- uid: System.Configuration.ConfigurationElementCollectionType\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElementCollectionType\n  nameWithType: ConfigurationElementCollectionType\n  fullName: System.Configuration.ConfigurationElementCollectionType\n- uid: System.Configuration.ConfigurationCollectionAttribute.ItemType\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: ItemType\n  nameWithType: ConfigurationCollectionAttribute.ItemType\n  fullName: ConfigurationCollectionAttribute.ItemType\n- uid: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: RemoveItemName\n  nameWithType: ConfigurationCollectionAttribute.RemoveItemName\n  fullName: ConfigurationCollectionAttribute.RemoveItemName\n- uid: System.Configuration.ConfigurationCollectionAttribute.#ctor*\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: ConfigurationCollectionAttribute\n  nameWithType: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute\n  fullName: ConfigurationCollectionAttribute.ConfigurationCollectionAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n- uid: System.Configuration.ConfigurationCollectionAttribute.AddItemName*\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: AddItemName\n  nameWithType: ConfigurationCollectionAttribute.AddItemName\n  fullName: ConfigurationCollectionAttribute.AddItemName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n- uid: System.Configuration.ConfigurationCollectionAttribute.ClearItemsName*\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: ClearItemsName\n  nameWithType: ConfigurationCollectionAttribute.ClearItemsName\n  fullName: ConfigurationCollectionAttribute.ClearItemsName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n- uid: System.Configuration.ConfigurationCollectionAttribute.CollectionType*\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: CollectionType\n  nameWithType: ConfigurationCollectionAttribute.CollectionType\n  fullName: ConfigurationCollectionAttribute.CollectionType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n- uid: System.Configuration.ConfigurationCollectionAttribute.ItemType*\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: ItemType\n  nameWithType: ConfigurationCollectionAttribute.ItemType\n  fullName: ConfigurationCollectionAttribute.ItemType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n- uid: System.Configuration.ConfigurationCollectionAttribute.RemoveItemName*\n  parent: System.Configuration.ConfigurationCollectionAttribute\n  isExternal: false\n  name: RemoveItemName\n  nameWithType: ConfigurationCollectionAttribute.RemoveItemName\n  fullName: ConfigurationCollectionAttribute.RemoveItemName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Configuration/ConfigurationCollectionAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}