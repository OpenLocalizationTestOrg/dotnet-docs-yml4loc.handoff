{"nodes":[{"content":"Represents a.dll or .exe file that is loaded into a particular process.","nodes":[{"pos":[0,71],"content":"Represents a.dll or .exe file that is loaded into a particular process.","nodes":[{"content":"Represents a.dll or .exe file that is loaded into a particular process.","pos":[0,71]}]}],"pos":[753,825],"yaml":true},{"content":"A module is an executable file or a dynamic link library (DLL). Each process consists of one or more modules. You can use this class to get information about the module.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","nodes":[{"pos":[0,169],"content":"A module is an executable file or a dynamic link library (DLL). Each process consists of one or more modules. You can use this class to get information about the module.","nodes":[{"content":"A module is an executable file or a dynamic link library (DLL). Each process consists of one or more modules. You can use this class to get information about the module.","pos":[0,169],"nodes":[{"content":"A module is an executable file or a dynamic link library (DLL).","pos":[0,63]},{"content":"Each process consists of one or more modules.","pos":[64,109]},{"content":"You can use this class to get information about the module.","pos":[110,169]}]}]},{"pos":[177,703],"content":"[!IMPORTANT]\n This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,524],"nodes":[{"content":"This type implements the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,62],"source":" This type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[63,157]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[158,269],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[270,377],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[378,511],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]}],"pos":[836,1547],"yaml":true,"extradata":"MT"},{"content":"Gets the memory address where the module was loaded.","nodes":[{"pos":[0,52],"content":"Gets the memory address where the module was loaded.","nodes":[{"content":"Gets the memory address where the module was loaded.","pos":[0,52]}]}],"pos":[3740,3793],"yaml":true},{"content":"The load address of the module.","nodes":[{"pos":[0,31],"content":"The load address of the module.","nodes":[{"content":"The load address of the module.","pos":[0,31]}]}],"pos":[4869,4901],"yaml":true},{"content":"Gets the memory address for the function that runs when the system loads and runs the module.","nodes":[{"pos":[0,93],"content":"Gets the memory address for the function that runs when the system loads and runs the module.","nodes":[{"content":"Gets the memory address for the function that runs when the system loads and runs the module.","pos":[0,93]}]}],"pos":[6244,6338],"yaml":true},{"content":"The module's entry point is the location of the function that is called during process startup, thread startup, process shutdown, and thread shutdown. While the entry point is not the address of the DllMain function, it should be close enough for most purposes.  \n  \n> [!NOTE]\n>  Due to changes in the way that Windows loads assemblies, <xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A> will always return 0 on [!INCLUDE[win8](~/includes/win8-md.md)] or [!INCLUDE[win81](~/includes/win81-md.md)] and should not be relied on for those platforms.","nodes":[{"pos":[0,261],"content":"The module's entry point is the location of the function that is called during process startup, thread startup, process shutdown, and thread shutdown. While the entry point is not the address of the DllMain function, it should be close enough for most purposes.","nodes":[{"content":"The module's entry point is the location of the function that is called during process startup, thread startup, process shutdown, and thread shutdown. While the entry point is not the address of the DllMain function, it should be close enough for most purposes.","pos":[0,261],"nodes":[{"content":"The module's entry point is the location of the function that is called during process startup, thread startup, process shutdown, and thread shutdown.","pos":[0,150]},{"content":"While the entry point is not the address of the DllMain function, it should be close enough for most purposes.","pos":[151,261]}]}]},{"pos":[269,555],"content":"[!NOTE]\n Due to changes in the way that Windows loads assemblies, <xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A> will always return 0 on [!INCLUDE[win8](~/includes/win8-md.md)] or [!INCLUDE[win81](~/includes/win81-md.md)] and should not be relied on for those platforms.","leadings":["","> "],"nodes":[{"content":"Due to changes in the way that Windows loads assemblies, <ph id=\"ph1\">&lt;xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A&gt;</ph> will always return 0 on <ph id=\"ph2\">[!INCLUDE[win8](~/includes/win8-md.md)]</ph> or <ph id=\"ph3\">[!INCLUDE[win81](~/includes/win81-md.md)]</ph> and should not be relied on for those platforms.","pos":[9,284],"source":" Due to changes in the way that Windows loads assemblies, <xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A> will always return 0 on [!INCLUDE[win8](~/includes/win8-md.md)] or [!INCLUDE[win81](~/includes/win81-md.md)] and should not be relied on for those platforms."}]}],"pos":[6349,6910],"yaml":true,"extradata":"MT"},{"content":"The entry point of the module.","nodes":[{"pos":[0,30],"content":"The entry point of the module.","nodes":[{"content":"The entry point of the module.","pos":[0,30]}]}],"pos":[7959,7990],"yaml":true},{"content":"Gets the full path to the module.","nodes":[{"pos":[0,33],"content":"Gets the full path to the module.","nodes":[{"content":"Gets the full path to the module.","pos":[0,33]}]}],"pos":[9285,9319],"yaml":true},{"content":"If the file name is longer than the maximum number of characters allowed, the file name is truncated.","nodes":[{"pos":[0,101],"content":"If the file name is longer than the maximum number of characters allowed, the file name is truncated.","nodes":[{"content":"If the file name is longer than the maximum number of characters allowed, the file name is truncated.","pos":[0,101]}]}],"pos":[9330,9432],"yaml":true,"extradata":"MT"},{"content":"The fully qualified path that defines the location of the module.","nodes":[{"pos":[0,65],"content":"The fully qualified path that defines the location of the module.","nodes":[{"content":"The fully qualified path that defines the location of the module.","pos":[0,65]}]}],"pos":[10454,10520],"yaml":true},{"content":"Gets version information about the module.","nodes":[{"pos":[0,42],"content":"Gets version information about the module.","nodes":[{"content":"Gets version information about the module.","pos":[0,42]}]}],"pos":[11848,11891],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.FileVersionInfo\"></xref> that contains the module's version information.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.FileVersionInfo\"&gt;&lt;/xref&gt;</ph> that contains the module's version information.","source":"A <xref href=\"System.Diagnostics.FileVersionInfo\"></xref> that contains the module's version information."}],"pos":[13113,13219],"yaml":true},{"content":"Gets the amount of memory that is required to load the module.","nodes":[{"pos":[0,62],"content":"Gets the amount of memory that is required to load the module.","nodes":[{"content":"Gets the amount of memory that is required to load the module.","pos":[0,62]}]}],"pos":[14544,14607],"yaml":true},{"content":"<xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A> does not include any additional memory allocations that the module makes once it is running; it includes only the size of the static code and data in the module file.","nodes":[{"pos":[0,226],"content":"<xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A> does not include any additional memory allocations that the module makes once it is running; it includes only the size of the static code and data in the module file.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A&gt;</ph> does not include any additional memory allocations that the module makes once it is running; it includes only the size of the static code and data in the module file.","pos":[0,226],"source":"<xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A> does not include any additional memory allocations that the module makes once it is running; it includes only the size of the static code and data in the module file."}]}],"pos":[14618,14845],"yaml":true,"extradata":"MT"},{"content":"The size, in bytes, of the memory that the module occupies.","nodes":[{"pos":[0,59],"content":"The size, in bytes, of the memory that the module occupies.","nodes":[{"content":"The size, in bytes, of the memory that the module occupies.","pos":[0,59]}]}],"pos":[15953,16013],"yaml":true},{"content":"Gets the name of the process module.","nodes":[{"pos":[0,36],"content":"Gets the name of the process module.","nodes":[{"content":"Gets the name of the process module.","pos":[0,36]}]}],"pos":[17319,17356],"yaml":true},{"content":"If the name is longer than the maximum number of characters allowed, it is truncated.","nodes":[{"pos":[0,85],"content":"If the name is longer than the maximum number of characters allowed, it is truncated.","nodes":[{"content":"If the name is longer than the maximum number of characters allowed, it is truncated.","pos":[0,85]}]}],"pos":[17367,17453],"yaml":true,"extradata":"MT"},{"content":"The name of the module.","nodes":[{"pos":[0,23],"content":"The name of the module.","nodes":[{"content":"The name of the module.","pos":[0,23]}]}],"pos":[18398,18422],"yaml":true},{"content":"Converts the name of the module to a string.","nodes":[{"pos":[0,44],"content":"Converts the name of the module to a string.","nodes":[{"content":"Converts the name of the module to a string.","pos":[0,44]}]}],"pos":[19714,19759],"yaml":true},{"content":"The value of the <xref href=\"System.Diagnostics.ProcessModule.ModuleName\"></xref> property.","nodes":[{"pos":[0,91],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.ProcessModule.ModuleName\"&gt;&lt;/xref&gt;</ph> property.","source":"The value of the <xref href=\"System.Diagnostics.ProcessModule.ModuleName\"></xref> property."}],"pos":[20718,20810],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.ProcessModule\n  commentId: T:System.Diagnostics.ProcessModule\n  id: ProcessModule\n  children:\n  - System.Diagnostics.ProcessModule.BaseAddress\n  - System.Diagnostics.ProcessModule.EntryPointAddress\n  - System.Diagnostics.ProcessModule.FileName\n  - System.Diagnostics.ProcessModule.FileVersionInfo\n  - System.Diagnostics.ProcessModule.ModuleMemorySize\n  - System.Diagnostics.ProcessModule.ModuleName\n  - System.Diagnostics.ProcessModule.ToString\n  langs:\n  - csharp\n  name: ProcessModule\n  nameWithType: ProcessModule\n  fullName: System.Diagnostics.ProcessModule\n  type: Class\n  assemblies:\n  - System.Diagnostics.Process\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Represents a.dll or .exe file that is loaded into a particular process.\n  remarks: \"A module is an executable file or a dynamic link library (DLL). Each process consists of one or more modules. You can use this class to get information about the module.  \\n  \\n> [!IMPORTANT]\\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.\"\n  example:\n  - \"The following code sample demonstrates how to use the <xref:System.Diagnostics.ProcessModule> class to get and display information about all the modules that are used by the Notepad.exe application.  \\n  \\n [!code-cpp[ProcessModule#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule/CPP/processmodule.cpp#1)]\\n [!code-csharp[ProcessModule#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule/CS/processmodule.cs#1)]\\n [!code-vb[ProcessModule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule/VB/processmodule.vb#1)]\"\n  syntax:\n    content: 'public class ProcessModule : System.ComponentModel.Component'\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.ProcessModule.BaseAddress\n  commentId: P:System.Diagnostics.ProcessModule.BaseAddress\n  id: BaseAddress\n  parent: System.Diagnostics.ProcessModule\n  langs:\n  - csharp\n  name: BaseAddress\n  nameWithType: ProcessModule.BaseAddress\n  fullName: ProcessModule.BaseAddress\n  type: Property\n  assemblies:\n  - System.Diagnostics.Process\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the memory address where the module was loaded.\n  remarks: ''\n  example:\n  - \"The following code example creates a new process for the Notepad.exe application. The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection. The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and  <xref:System.Diagnostics.ProcessModule.BaseAddress%2A> properties are used to display the module name and the memory address where each module was loaded.  \\n  \\n [!code-cpp[ProcessModule_BaseAddress#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_BaseAddress/CPP/processmodule_baseaddress.cpp#1)]\\n [!code-csharp[ProcessModule_BaseAddress#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_BaseAddress/CS/processmodule_baseaddress.cs#1)]\\n [!code-vb[ProcessModule_BaseAddress#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_BaseAddress/VB/processmodule_baseaddress.vb#1)]\"\n  syntax:\n    content: public IntPtr BaseAddress { get; }\n    return:\n      type: System.IntPtr\n      description: The load address of the module.\n  overload: System.Diagnostics.ProcessModule.BaseAddress*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.ProcessModule.EntryPointAddress\n  commentId: P:System.Diagnostics.ProcessModule.EntryPointAddress\n  id: EntryPointAddress\n  parent: System.Diagnostics.ProcessModule\n  langs:\n  - csharp\n  name: EntryPointAddress\n  nameWithType: ProcessModule.EntryPointAddress\n  fullName: ProcessModule.EntryPointAddress\n  type: Property\n  assemblies:\n  - System.Diagnostics.Process\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the memory address for the function that runs when the system loads and runs the module.\n  remarks: \"The module's entry point is the location of the function that is called during process startup, thread startup, process shutdown, and thread shutdown. While the entry point is not the address of the DllMain function, it should be close enough for most purposes.  \\n  \\n> [!NOTE]\\n>  Due to changes in the way that Windows loads assemblies, <xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A> will always return 0 on [!INCLUDE[win8](~/includes/win8-md.md)] or [!INCLUDE[win81](~/includes/win81-md.md)] and should not be relied on for those platforms.\"\n  example:\n  - \"The following code example creates a new process for the Notepad.exe application. The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection. The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and <xref:System.Diagnostics.ProcessModule.EntryPointAddress%2A> properties are used to display the name and the entry point address for each module.  \\n  \\n [!code-cpp[ProcessModule_EntryPoint#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_EntryPoint/CPP/processmodule_entrypoint.cpp#1)]\\n [!code-csharp[ProcessModule_EntryPoint#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_EntryPoint/CS/processmodule_entrypoint.cs#1)]\\n [!code-vb[ProcessModule_EntryPoint#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_EntryPoint/VB/processmodule_entrypoint.vb#1)]\"\n  syntax:\n    content: public IntPtr EntryPointAddress { get; }\n    return:\n      type: System.IntPtr\n      description: The entry point of the module.\n  overload: System.Diagnostics.ProcessModule.EntryPointAddress*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.ProcessModule.FileName\n  commentId: P:System.Diagnostics.ProcessModule.FileName\n  id: FileName\n  parent: System.Diagnostics.ProcessModule\n  langs:\n  - csharp\n  name: FileName\n  nameWithType: ProcessModule.FileName\n  fullName: ProcessModule.FileName\n  type: Property\n  assemblies:\n  - System.Diagnostics.Process\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the full path to the module.\n  remarks: If the file name is longer than the maximum number of characters allowed, the file name is truncated.\n  example:\n  - \"The following code example creates a new process for the Notepad.exe application. The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection. The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and <xref:System.Diagnostics.ProcessModule.FileName%2A> properties are used to display the module name and the full path information for each module.  \\n  \\n [!code-cpp[ProcessModule_FileName#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_FileName/CPP/processmodule_filename.cpp#1)]\\n [!code-csharp[ProcessModule_FileName#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_FileName/CS/processmodule_filename.cs#1)]\\n [!code-vb[ProcessModule_FileName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_FileName/VB/processmodule_filename.vb#1)]\"\n  syntax:\n    content: public string FileName { get; }\n    return:\n      type: System.String\n      description: The fully qualified path that defines the location of the module.\n  overload: System.Diagnostics.ProcessModule.FileName*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.ProcessModule.FileVersionInfo\n  commentId: P:System.Diagnostics.ProcessModule.FileVersionInfo\n  id: FileVersionInfo\n  parent: System.Diagnostics.ProcessModule\n  langs:\n  - csharp\n  name: FileVersionInfo\n  nameWithType: ProcessModule.FileVersionInfo\n  fullName: ProcessModule.FileVersionInfo\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Diagnostics.Process\n  namespace: System.Diagnostics\n  summary: Gets version information about the module.\n  remarks: ''\n  example:\n  - \"The following code example creates a new process for the Notepad.exe application. The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection. The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and <xref:System.Diagnostics.ProcessModule.FileVersionInfo%2A> properties are used to display the module name and the file version information for each module.  \\n  \\n [!code-cpp[ProcessModule_FileVersionInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_FileVersionInfo/CPP/processmodule_fileversioninfo.cpp#1)]\\n [!code-csharp[ProcessModule_FileVersionInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_FileVersionInfo/CS/processmodule_fileversioninfo.cs#1)]\\n [!code-vb[ProcessModule_FileVersionInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_FileVersionInfo/VB/processmodule_fileversioninfo.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Diagnostics.FileVersionInfo FileVersionInfo { get; }\n    return:\n      type: System.Diagnostics.FileVersionInfo\n      description: A <xref href=\"System.Diagnostics.FileVersionInfo\"></xref> that contains the module's version information.\n  overload: System.Diagnostics.ProcessModule.FileVersionInfo*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.ProcessModule.ModuleMemorySize\n  commentId: P:System.Diagnostics.ProcessModule.ModuleMemorySize\n  id: ModuleMemorySize\n  parent: System.Diagnostics.ProcessModule\n  langs:\n  - csharp\n  name: ModuleMemorySize\n  nameWithType: ProcessModule.ModuleMemorySize\n  fullName: ProcessModule.ModuleMemorySize\n  type: Property\n  assemblies:\n  - System.Diagnostics.Process\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the amount of memory that is required to load the module.\n  remarks: <xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A> does not include any additional memory allocations that the module makes once it is running; it includes only the size of the static code and data in the module file.\n  example:\n  - \"The following code example creates a new process for the Notepad.exe application. The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection. The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> and <xref:System.Diagnostics.ProcessModule.ModuleMemorySize%2A> properties are used to display the module name and the amount of memory needed for each module.  \\n  \\n [!code-cpp[ProcessModule_ModuleMemorySize#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_ModuleMemorySize/CPP/processmodule_modulememorysize.cpp#1)]\\n [!code-csharp[ProcessModule_ModuleMemorySize#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_ModuleMemorySize/CS/processmodule_modulememorysize.cs#1)]\\n [!code-vb[ProcessModule_ModuleMemorySize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_ModuleMemorySize/VB/processmodule_modulememorysize.vb#1)]\"\n  syntax:\n    content: public int ModuleMemorySize { get; }\n    return:\n      type: System.Int32\n      description: The size, in bytes, of the memory that the module occupies.\n  overload: System.Diagnostics.ProcessModule.ModuleMemorySize*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.ProcessModule.ModuleName\n  commentId: P:System.Diagnostics.ProcessModule.ModuleName\n  id: ModuleName\n  parent: System.Diagnostics.ProcessModule\n  langs:\n  - csharp\n  name: ModuleName\n  nameWithType: ProcessModule.ModuleName\n  fullName: ProcessModule.ModuleName\n  type: Property\n  assemblies:\n  - System.Diagnostics.Process\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the name of the process module.\n  remarks: If the name is longer than the maximum number of characters allowed, it is truncated.\n  example:\n  - \"The following code example creates a new process for the Notepad.exe application. The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection. The <xref:System.Diagnostics.ProcessModule.ModuleName%2A> property is used to display the name of each module.  \\n  \\n [!code-cpp[ProcessModule_ModuleName#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_ModuleName/CPP/processmodule_modulename.cpp#1)]\\n [!code-csharp[ProcessModule_ModuleName#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_ModuleName/CS/processmodule_modulename.cs#1)]\\n [!code-vb[ProcessModule_ModuleName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_ModuleName/VB/processmodule_modulename.vb#1)]\"\n  syntax:\n    content: public string ModuleName { get; }\n    return:\n      type: System.String\n      description: The name of the module.\n  overload: System.Diagnostics.ProcessModule.ModuleName*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.ProcessModule.ToString\n  commentId: M:System.Diagnostics.ProcessModule.ToString\n  id: ToString\n  parent: System.Diagnostics.ProcessModule\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ProcessModule.ToString()\n  fullName: ProcessModule.ToString()\n  type: Method\n  assemblies:\n  - System.Diagnostics.Process\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Converts the name of the module to a string.\n  remarks: ''\n  example:\n  - \"The following code example creates a new process for the Notepad.exe application. The code iterates through the <xref:System.Diagnostics.ProcessModuleCollection> class to obtain a <xref:System.Diagnostics.ProcessModule> object for each module in the collection. The <xref:System.Diagnostics.ProcessModule.ToString%2A> method is used to display the name for each module.  \\n  \\n [!code-cpp[ProcessModule_ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessModule_ToString/CPP/processmodule_tostring.cpp#1)]\\n [!code-csharp[ProcessModule_ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessModule_ToString/CS/processmodule_tostring.cs#1)]\\n [!code-vb[ProcessModule_ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessModule_ToString/VB/processmodule_tostring.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The value of the <xref href=\"System.Diagnostics.ProcessModule.ModuleName\"></xref> property.\n  overload: System.Diagnostics.ProcessModule.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Diagnostics.ProcessModule.BaseAddress\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: BaseAddress\n  nameWithType: ProcessModule.BaseAddress\n  fullName: ProcessModule.BaseAddress\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Diagnostics.ProcessModule.EntryPointAddress\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: EntryPointAddress\n  nameWithType: ProcessModule.EntryPointAddress\n  fullName: ProcessModule.EntryPointAddress\n- uid: System.Diagnostics.ProcessModule.FileName\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: FileName\n  nameWithType: ProcessModule.FileName\n  fullName: ProcessModule.FileName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.ProcessModule.FileVersionInfo\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: FileVersionInfo\n  nameWithType: ProcessModule.FileVersionInfo\n  fullName: ProcessModule.FileVersionInfo\n- uid: System.Diagnostics.FileVersionInfo\n  parent: System.Diagnostics\n  isExternal: false\n  name: FileVersionInfo\n  nameWithType: FileVersionInfo\n  fullName: System.Diagnostics.FileVersionInfo\n- uid: System.Diagnostics.ProcessModule.ModuleMemorySize\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: ModuleMemorySize\n  nameWithType: ProcessModule.ModuleMemorySize\n  fullName: ProcessModule.ModuleMemorySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.ProcessModule.ModuleName\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: ModuleName\n  nameWithType: ProcessModule.ModuleName\n  fullName: ProcessModule.ModuleName\n- uid: System.Diagnostics.ProcessModule.ToString\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: ToString()\n  nameWithType: ProcessModule.ToString()\n  fullName: ProcessModule.ToString()\n- uid: System.Diagnostics.ProcessModule.BaseAddress*\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: BaseAddress\n  nameWithType: ProcessModule.BaseAddress\n  fullName: ProcessModule.BaseAddress\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n- uid: System.Diagnostics.ProcessModule.EntryPointAddress*\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: EntryPointAddress\n  nameWithType: ProcessModule.EntryPointAddress\n  fullName: ProcessModule.EntryPointAddress\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n- uid: System.Diagnostics.ProcessModule.FileName*\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: FileName\n  nameWithType: ProcessModule.FileName\n  fullName: ProcessModule.FileName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n- uid: System.Diagnostics.ProcessModule.FileVersionInfo*\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: FileVersionInfo\n  nameWithType: ProcessModule.FileVersionInfo\n  fullName: ProcessModule.FileVersionInfo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n- uid: System.Diagnostics.ProcessModule.ModuleMemorySize*\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: ModuleMemorySize\n  nameWithType: ProcessModule.ModuleMemorySize\n  fullName: ProcessModule.ModuleMemorySize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n- uid: System.Diagnostics.ProcessModule.ModuleName*\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: ModuleName\n  nameWithType: ProcessModule.ModuleName\n  fullName: ProcessModule.ModuleName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n- uid: System.Diagnostics.ProcessModule.ToString*\n  parent: System.Diagnostics.ProcessModule\n  isExternal: false\n  name: ToString\n  nameWithType: ProcessModule.ToString\n  fullName: ProcessModule.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/ProcessModule.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n"}