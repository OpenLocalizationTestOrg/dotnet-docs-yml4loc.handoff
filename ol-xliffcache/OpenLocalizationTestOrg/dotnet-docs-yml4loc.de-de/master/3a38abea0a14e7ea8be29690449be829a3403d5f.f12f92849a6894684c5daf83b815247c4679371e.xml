{"nodes":[{"content":"Represents the abstract base class from which all classes that derive byte sequences of a specified length inherit.","nodes":[{"pos":[0,115],"content":"Represents the abstract base class from which all classes that derive byte sequences of a specified length inherit.","nodes":[{"content":"Represents the abstract base class from which all classes that derive byte sequences of a specified length inherit.","pos":[0,115]}]}],"pos":[737,853],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class.","nodes":[{"pos":[0,102],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DeriveBytes\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class."}],"pos":[2933,3036],"yaml":true},{"content":"When overridden in a derived class, releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class.","nodes":[{"pos":[0,163],"content":"When overridden in a derived class, releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DeriveBytes\"&gt;&lt;/xref&gt;</ph> class.","source":"When overridden in a derived class, releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class."}],"pos":[4549,4713],"yaml":true},{"content":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.DeriveBytes>. The `Dispose` method leaves the <xref:System.Security.Cryptography.DeriveBytes> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.DeriveBytes> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.DeriveBytes> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.DeriveBytes>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.DeriveBytes> object's `Finalize` method.","nodes":[{"pos":[0,429],"content":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.DeriveBytes>. The `Dispose` method leaves the <xref:System.Security.Cryptography.DeriveBytes> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.DeriveBytes> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.DeriveBytes> was occupying.","nodes":[{"content":"Call <ph id=\"ph1\">`Dispose`</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.DeriveBytes&gt;</ph>.","pos":[0,95],"source":"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.DeriveBytes>."},{"content":"The <ph id=\"ph1\">`Dispose`</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.DeriveBytes&gt;</ph> in an unusable state.","pos":[96,197],"source":" The `Dispose` method leaves the <xref:System.Security.Cryptography.DeriveBytes> in an unusable state."},{"content":"After calling <ph id=\"ph1\">`Dispose`</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.DeriveBytes&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.DeriveBytes&gt;</ph> was occupying.","pos":[198,429],"source":" After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.DeriveBytes> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.DeriveBytes> was occupying."}]},{"pos":[436,641],"content":"For more information, see <bpt id=\"p1\">[</bpt>Cleaning Up Unmanaged Resources<ept id=\"p1\">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id=\"p2\">[</bpt>Implementing a Dispose Method<ept id=\"p2\">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.","source":"For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)."},{"pos":[649,945],"content":"[!NOTE]\n Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.DeriveBytes>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.DeriveBytes> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.DeriveBytes>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.DeriveBytes> object's `Finalize` method.","pos":[8,294],"nodes":[{"content":"Always call <ph id=\"ph1\">`Dispose`</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.DeriveBytes&gt;</ph>.","pos":[1,117],"source":" Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.DeriveBytes>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DeriveBytes&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[118,286],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.DeriveBytes> object's `Finalize` method."}]}]}],"pos":[4724,5677],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class and optionally releases the managed resources.","nodes":[{"pos":[0,195],"content":"When overridden in a derived class, releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DeriveBytes\"&gt;&lt;/xref&gt;</ph> class and optionally releases the managed resources.","source":"When overridden in a derived class, releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class and optionally releases the managed resources."}],"pos":[7259,7455],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the `Finalize` method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. `Finalize` invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.DeriveBytes> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,249],"content":"This method is called by the public `Dispose()` method and the `Finalize` method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. `Finalize` invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">`Finalize`</ph> method.","pos":[0,81],"source":"This method is called by the public `Dispose()` method and the `Finalize` method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[82,187],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">`Finalize`</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[188,249],"source":"`Finalize` invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[256,500],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.DeriveBytes> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.DeriveBytes&gt;</ph> references.","pos":[0,174],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.DeriveBytes> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[175,244],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[7466,7971],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[8125,8228],"yaml":true},{"content":"When overridden in a derived class, returns pseudo-random key bytes.","nodes":[{"pos":[0,68],"content":"When overridden in a derived class, returns pseudo-random key bytes.","nodes":[{"content":"When overridden in a derived class, returns pseudo-random key bytes.","pos":[0,68]}]}],"pos":[9738,9807],"yaml":true},{"content":"The number of pseudo-random key bytes to generate.","nodes":[{"pos":[0,50],"content":"The number of pseudo-random key bytes to generate.","nodes":[{"content":"The number of pseudo-random key bytes to generate.","pos":[0,50]}]}],"pos":[9945,9996],"yaml":true},{"content":"A byte array filled with pseudo-random key bytes.","nodes":[{"pos":[0,49],"content":"A byte array filled with pseudo-random key bytes.","nodes":[{"content":"A byte array filled with pseudo-random key bytes.","pos":[0,49]}]}],"pos":[10053,10103],"yaml":true},{"content":"When overridden in a derived class, resets the state of the operation.","nodes":[{"pos":[0,70],"content":"When overridden in a derived class, resets the state of the operation.","nodes":[{"content":"When overridden in a derived class, resets the state of the operation.","pos":[0,70]}]}],"pos":[11539,11610],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DeriveBytes\n  commentId: T:System.Security.Cryptography.DeriveBytes\n  id: DeriveBytes\n  children:\n  - System.Security.Cryptography.DeriveBytes.#ctor\n  - System.Security.Cryptography.DeriveBytes.Dispose\n  - System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)\n  - System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)\n  - System.Security.Cryptography.DeriveBytes.Reset\n  langs:\n  - csharp\n  name: DeriveBytes\n  nameWithType: DeriveBytes\n  fullName: System.Security.Cryptography.DeriveBytes\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Represents the abstract base class from which all classes that derive byte sequences of a specified length inherit.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class DeriveBytes : IDisposable\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Security.Cryptography.PasswordDeriveBytes\n  - System.Security.Cryptography.Rfc2898DeriveBytes\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DeriveBytes.#ctor\n  commentId: M:System.Security.Cryptography.DeriveBytes.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: DeriveBytes()\n  nameWithType: DeriveBytes.DeriveBytes()\n  fullName: DeriveBytes.DeriveBytes()\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class.\n  syntax:\n    content: protected DeriveBytes ();\n    parameters: []\n  overload: System.Security.Cryptography.DeriveBytes.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DeriveBytes.Dispose\n  commentId: M:System.Security.Cryptography.DeriveBytes.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: DeriveBytes.Dispose()\n  fullName: DeriveBytes.Dispose()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, releases all resources used by the current instance of the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class.\n  remarks: \"Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.DeriveBytes>. The `Dispose` method leaves the <xref:System.Security.Cryptography.DeriveBytes> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.DeriveBytes> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.DeriveBytes> was occupying.  \\n  \\n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \\n  \\n> [!NOTE]\\n>  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.DeriveBytes>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.DeriveBytes> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.DeriveBytes.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DeriveBytes.Dispose(Boolean)\n  fullName: DeriveBytes.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, releases the unmanaged resources used by the <xref href=\"System.Security.Cryptography.DeriveBytes\"></xref> class and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the `Finalize` method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. `Finalize` invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.DeriveBytes> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Security.Cryptography.DeriveBytes.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)\n  commentId: M:System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)\n  id: GetBytes(System.Int32)\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: GetBytes(Int32)\n  nameWithType: DeriveBytes.GetBytes(Int32)\n  fullName: DeriveBytes.GetBytes(Int32)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, returns pseudo-random key bytes.\n  syntax:\n    content: public abstract byte[] GetBytes (int cb);\n    parameters:\n    - id: cb\n      type: System.Int32\n      description: The number of pseudo-random key bytes to generate.\n    return:\n      type: System.Byte[]\n      description: A byte array filled with pseudo-random key bytes.\n  overload: System.Security.Cryptography.DeriveBytes.GetBytes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DeriveBytes.Reset\n  commentId: M:System.Security.Cryptography.DeriveBytes.Reset\n  id: Reset\n  parent: System.Security.Cryptography.DeriveBytes\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: DeriveBytes.Reset()\n  fullName: DeriveBytes.Reset()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: When overridden in a derived class, resets the state of the operation.\n  syntax:\n    content: public abstract void Reset ();\n    parameters: []\n  overload: System.Security.Cryptography.DeriveBytes.Reset*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.DeriveBytes.#ctor\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: DeriveBytes()\n  nameWithType: DeriveBytes.DeriveBytes()\n  fullName: DeriveBytes.DeriveBytes()\n- uid: System.Security.Cryptography.DeriveBytes.Dispose\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Dispose()\n  nameWithType: DeriveBytes.Dispose()\n  fullName: DeriveBytes.Dispose()\n- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DeriveBytes.Dispose(Boolean)\n  fullName: DeriveBytes.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: GetBytes(Int32)\n  nameWithType: DeriveBytes.GetBytes(Int32)\n  fullName: DeriveBytes.GetBytes(Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.DeriveBytes.Reset\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Reset()\n  nameWithType: DeriveBytes.Reset()\n  fullName: DeriveBytes.Reset()\n- uid: System.Security.Cryptography.DeriveBytes.#ctor*\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: DeriveBytes\n  nameWithType: DeriveBytes.DeriveBytes\n  fullName: DeriveBytes.DeriveBytes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n- uid: System.Security.Cryptography.DeriveBytes.Dispose*\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Dispose\n  nameWithType: DeriveBytes.Dispose\n  fullName: DeriveBytes.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n- uid: System.Security.Cryptography.DeriveBytes.GetBytes*\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: GetBytes\n  nameWithType: DeriveBytes.GetBytes\n  fullName: DeriveBytes.GetBytes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n- uid: System.Security.Cryptography.DeriveBytes.Reset*\n  parent: System.Security.Cryptography.DeriveBytes\n  isExternal: false\n  name: Reset\n  nameWithType: DeriveBytes.Reset\n  fullName: DeriveBytes.Reset\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DeriveBytes.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}