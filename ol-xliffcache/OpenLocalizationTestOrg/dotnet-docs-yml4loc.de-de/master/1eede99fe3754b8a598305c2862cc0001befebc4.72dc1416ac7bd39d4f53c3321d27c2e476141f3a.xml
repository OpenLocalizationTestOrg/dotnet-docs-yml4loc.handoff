{"nodes":[{"content":"Authenticates an <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"pos":[0,84],"content":"Authenticates an <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>.","source":"Authenticates an <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}],"pos":[1377,1462],"yaml":true},{"content":"Use the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class to authenticate <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.","nodes":[{"pos":[0,168],"content":"Use the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class to authenticate <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> class to authenticate <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph> security tokens.","pos":[0,168],"source":"Use the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class to authenticate <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens."}]}],"pos":[1473,1642],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class."}],"pos":[3588,3712],"yaml":true},{"content":"When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token, the X.509 certificate is not mapped to a Windows identity and the certificate is validated using a certificate chain.","nodes":[{"pos":[0,260],"content":"When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token, the X.509 certificate is not mapped to a Windows identity and the certificate is validated using a certificate chain.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called to authenticate the token, the X.509 certificate is not mapped to a Windows identity and the certificate is validated using a certificate chain.","pos":[0,260],"source":"When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token, the X.509 certificate is not mapped to a Windows identity and the certificate is validated using a certificate chain."}]}],"pos":[3723,3984],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class using the specified certificate validator.","nodes":[{"pos":[0,165],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"&gt;&lt;/xref&gt;</ph> class using the specified certificate validator.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class using the specified certificate validator."}],"pos":[5579,5745],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property. These validation models can be passed to the `validator` parameter. When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method. The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.  \n  \n By default, the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> does not map the X.509 certificate to a Windows identity.","nodes":[{"pos":[0,871],"content":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property. These validation models can be passed to the `validator` parameter. When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method. The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class provides a set of pre-defined certificate validation models, such as the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property.","pos":[0,232],"source":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property."},{"content":"These validation models can be passed to the <ph id=\"ph1\">`validator`</ph> parameter.","pos":[233,300],"source":" These validation models can be passed to the `validator` parameter."},{"content":"When an application requires a custom validation method, derive a class from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.","pos":[301,605],"source":" When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.","pos":[606,871],"source":" The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method."}]},{"pos":[878,1020],"content":"By default, the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> does not map the X.509 certificate to a Windows identity.","nodes":[{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&gt;</ph> does not map the X.509 certificate to a Windows identity.","pos":[0,142],"source":"By default, the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> does not map the X.509 certificate to a Windows identity."}]}],"pos":[5756,6781],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that verifies that the certificate is valid.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"&gt;&lt;/xref&gt;</ph> that verifies that the certificate is valid.","source":"A <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that verifies that the certificate is valid."}],"pos":[7034,7158],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity.","nodes":[{"pos":[0,259],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"&gt;&lt;/xref&gt;</ph> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity."}],"pos":[8741,9001],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property. These validation models can be passed to the `validator` parameter. When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method. The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.  \n  \n When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token and `mapToWindows` is `true`, the X.509 certificate is mapped to a Windows account and claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> with the Windows groups that the user belongs to. How the X.509 certificate is mapped to a Windows account depends upon the security token type:  \n  \n-   When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the X.509 certificate is mapped using the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property.  \n  \n-   When the security token is of type `X509SecurityToken`, the X.509 certificate is mapped to a Windows account using its user principal name (UPN).","nodes":[{"pos":[0,871],"content":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property. These validation models can be passed to the `validator` parameter. When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method. The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class provides a set of pre-defined certificate validation models, such as the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property.","pos":[0,232],"source":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property."},{"content":"These validation models can be passed to the <ph id=\"ph1\">`validator`</ph> parameter.","pos":[233,300],"source":" These validation models can be passed to the `validator` parameter."},{"content":"When an application requires a custom validation method, derive a class from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.","pos":[301,605],"source":" When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.","pos":[606,871],"source":" The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method."}]},{"pos":[878,1328],"content":"When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token and `mapToWindows` is `true`, the X.509 certificate is mapped to a Windows account and claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> with the Windows groups that the user belongs to. How the X.509 certificate is mapped to a Windows account depends upon the security token type:","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is called to authenticate the token and <ph id=\"ph2\">`mapToWindows`</ph> is <ph id=\"ph3\">`true`</ph>, the X.509 certificate is mapped to a Windows account and claims are added to the <ph id=\"ph4\">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph> with the Windows groups that the user belongs to.","pos":[0,355],"source":"When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token and `mapToWindows` is `true`, the X.509 certificate is mapped to a Windows account and claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> with the Windows groups that the user belongs to."},{"content":"How the X.509 certificate is mapped to a Windows account depends upon the security token type:","pos":[356,450]}]},{"pos":[1338,1564],"content":"When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the X.509 certificate is mapped using the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property.","nodes":[{"content":"When the security token is of type <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>, the X.509 certificate is mapped using the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> property.","pos":[0,226],"source":"When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the X.509 certificate is mapped using the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property."}]},{"pos":[1574,1719],"content":"When the security token is of type <ph id=\"ph1\">`X509SecurityToken`</ph>, the X.509 certificate is mapped to a Windows account using its user principal name (UPN).","source":"When the security token is of type `X509SecurityToken`, the X.509 certificate is mapped to a Windows account using its user principal name (UPN)."}],"pos":[9012,10740],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that verifies that the certificate is valid.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"&gt;&lt;/xref&gt;</ph> that verifies that the certificate is valid.","source":"A <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that verifies that the certificate is valid."}],"pos":[11012,11136],"yaml":true},{"content":"`true` to map the identity of the certificate to a Windows identity; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> to map the identity of the certificate to a Windows identity; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to map the identity of the certificate to a Windows identity; otherwise, `false`."}],"pos":[11205,11296],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to.","nodes":[{"pos":[0,302],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"&gt;&lt;/xref&gt;</ph> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to."}],"pos":[12951,13254],"yaml":true},{"content":"Pass `false` to the `includeWindowsGroups` parameter when the Windows group information is not required to improve performance.  \n  \n The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class has several static properties, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property that can be passed to the `validator` parameter. These properties provide common validation methods for X.509 certificates. When a custom validation method is required, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method. The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.  \n  \n When `true` is passed into the `mapToWindows` parameter, the X.509 certificate is mapped to a Windows account and relevant claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext>, such as the Windows groups that the user belongs to. When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property is using the identity that is specified in the token; otherwise, the X.509 certificate is mapped to a Windows identity using a Kerberos S4U logon based on the user principal name SubjectAltNames extension of the X.509 certificate.","nodes":[{"pos":[0,127],"content":"Pass <ph id=\"ph1\">`false`</ph> to the <ph id=\"ph2\">`includeWindowsGroups`</ph> parameter when the Windows group information is not required to improve performance.","source":"Pass `false` to the `includeWindowsGroups` parameter when the Windows group information is not required to improve performance."},{"pos":[134,1018],"content":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class has several static properties, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property that can be passed to the `validator` parameter. These properties provide common validation methods for X.509 certificates. When a custom validation method is required, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method. The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> class has several static properties, such as the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A&gt;</ph> property that can be passed to the <ph id=\"ph3\">`validator`</ph> parameter.","pos":[0,250],"source":"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class has several static properties, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property that can be passed to the `validator` parameter."},{"content":"These properties provide common validation methods for X.509 certificates.","pos":[251,325]},{"content":"When a custom validation method is required, derive a class from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator&gt;</ph> and override the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method.","pos":[326,618],"source":" When a custom validation method is required, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method is called by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.","pos":[619,884],"source":" The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method."}]},{"pos":[1025,1697],"content":"When `true` is passed into the `mapToWindows` parameter, the X.509 certificate is mapped to a Windows account and relevant claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext>, such as the Windows groups that the user belongs to. When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property is using the identity that is specified in the token; otherwise, the X.509 certificate is mapped to a Windows identity using a Kerberos S4U logon based on the user principal name SubjectAltNames extension of the X.509 certificate.","nodes":[{"content":"When <ph id=\"ph1\">`true`</ph> is passed into the <ph id=\"ph2\">`mapToWindows`</ph> parameter, the X.509 certificate is mapped to a Windows account and relevant claims are added to the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Policy.EvaluationContext&gt;</ph>, such as the Windows groups that the user belongs to.","pos":[0,253],"source":"When `true` is passed into the `mapToWindows` parameter, the X.509 certificate is mapped to a Windows account and relevant claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext>, such as the Windows groups that the user belongs to."},{"content":"When the security token is of type <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A&gt;</ph> property is using the identity that is specified in the token; otherwise, the X.509 certificate is mapped to a Windows identity using a Kerberos S4U logon based on the user principal name SubjectAltNames extension of the X.509 certificate.","pos":[254,672],"source":" When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property is using the identity that is specified in the token; otherwise, the X.509 certificate is mapped to a Windows identity using a Kerberos S4U logon based on the user principal name SubjectAltNames extension of the X.509 certificate."}]}],"pos":[13265,14969],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that verifies that the certificate is valid.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"&gt;&lt;/xref&gt;</ph> that verifies that the certificate is valid.","source":"A <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that verifies that the certificate is valid."}],"pos":[15268,15392],"yaml":true},{"content":"`true` to map the identity of the certificate to a Windows identity; otherwise, `false`.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">`true`</ph> to map the identity of the certificate to a Windows identity; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to map the identity of the certificate to a Windows identity; otherwise, `false`."}],"pos":[15461,15552],"yaml":true},{"content":"`true` to include the groups the Windows user belongs to in the <xref href=\"System.IdentityModel.Policy.AuthorizationContext.ClaimSets\"></xref> property that is constructed throughout the authentication process; otherwise, `false`.","nodes":[{"pos":[0,231],"content":"<ph id=\"ph1\">`true`</ph> to include the groups the Windows user belongs to in the <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.AuthorizationContext.ClaimSets\"&gt;&lt;/xref&gt;</ph> property that is constructed throughout the authentication process; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to include the groups the Windows user belongs to in the <xref href=\"System.IdentityModel.Policy.AuthorizationContext.ClaimSets\"></xref> property that is constructed throughout the authentication process; otherwise, `false`."}],"pos":[15629,15863],"yaml":true},{"content":"Gets a value that indicates whether the specified security token can be validated by this security token authenticator.","nodes":[{"pos":[0,119],"content":"Gets a value that indicates whether the specified security token can be validated by this security token authenticator.","nodes":[{"content":"Gets a value that indicates whether the specified security token can be validated by this security token authenticator.","pos":[0,119]}]}],"pos":[17307,17427],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.","nodes":[{"pos":[0,268],"content":"The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A&gt;</ph> method does not authenticate the security token; that is performed by the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method.","pos":[0,268],"source":"The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method."}]}],"pos":[17438,17707],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> to be validated.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."}],"pos":[17931,18015],"yaml":true},{"content":"`true` when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token or a class that derives from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,234],"content":"<ph id=\"ph1\">`true`</ph> when <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">token</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph> security token or a class that derives from <ph id=\"ph4\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token or a class that derives from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`."}],"pos":[18073,18310],"yaml":true},{"content":"Gets a value that indicates whether to map the X.509 certificate to a Windows account.","nodes":[{"pos":[0,86],"content":"Gets a value that indicates whether to map the X.509 certificate to a Windows account.","nodes":[{"content":"Gets a value that indicates whether to map the X.509 certificate to a Windows account.","pos":[0,86]}]}],"pos":[19657,19744],"yaml":true},{"content":"The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A> property can only be set in a constructor.  \n  \n If transport-level SSL or HTTPS security is being used and mapping is already provided by the underlying security channel or by Internet Information Services (IIS), then that mapping is applied with no chain-validation. Otherwise, prior to doing the mapping, the certificate is validated using a certificate chain, and the certificate must chain to an NT_AUTHORITY identity. The chain structure used corresponds to the CERT_CHAIN_POLICY_NT_AUTH as defined in the `CertVerifyCertificateChainPolicy` function (see the [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) function in the Cryptography SDK). This behavior only occurs when mapping a certificate to a Windows account.","nodes":[{"pos":[0,149],"content":"The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A> property can only be set in a constructor.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A&gt;</ph> property can only be set in a constructor.","pos":[0,149],"source":"The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A> property can only be set in a constructor."}]},{"pos":[156,862],"content":"If transport-level SSL or HTTPS security is being used and mapping is already provided by the underlying security channel or by Internet Information Services (IIS), then that mapping is applied with no chain-validation. Otherwise, prior to doing the mapping, the certificate is validated using a certificate chain, and the certificate must chain to an NT_AUTHORITY identity. The chain structure used corresponds to the CERT_CHAIN_POLICY_NT_AUTH as defined in the `CertVerifyCertificateChainPolicy` function (see the [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) function in the Cryptography SDK). This behavior only occurs when mapping a certificate to a Windows account.","nodes":[{"content":"If transport-level SSL or HTTPS security is being used and mapping is already provided by the underlying security channel or by Internet Information Services (IIS), then that mapping is applied with no chain-validation.","pos":[0,219]},{"content":"Otherwise, prior to doing the mapping, the certificate is validated using a certificate chain, and the certificate must chain to an NT_AUTHORITY identity.","pos":[220,374]},{"content":"The chain structure used corresponds to the CERT_CHAIN_POLICY_NT_AUTH as defined in the <ph id=\"ph1\">`CertVerifyCertificateChainPolicy`</ph> function (see the <bpt id=\"p1\">[</bpt>CertVerifyCertificateChainPolicy<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=83570)</ept> function in the Cryptography SDK).","pos":[375,631],"source":" The chain structure used corresponds to the CERT_CHAIN_POLICY_NT_AUTH as defined in the `CertVerifyCertificateChainPolicy` function (see the [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) function in the Cryptography SDK)."},{"content":"This behavior only occurs when mapping a certificate to a Windows account.","pos":[632,706]}]}],"pos":[19755,20622],"yaml":true,"extradata":"MT"},{"content":"`true` to map the X.509 certificate to a Windows account; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> to map the X.509 certificate to a Windows account; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to map the X.509 certificate to a Windows account; otherwise, `false`."}],"pos":[20755,20835],"yaml":true},{"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","nodes":[{"pos":[0,112],"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","nodes":[{"content":"Authenticates the specified security token and returns the set of authorization policies for the security token.","pos":[0,112]}]}],"pos":[22248,22361],"yaml":true},{"content":"When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:  \n  \n-   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \n  \n-   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  \n  \n When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \n  \n The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method calls the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method of the validation method specified in the constructor to authenticate the `token` parameter.","nodes":[{"pos":[0,145],"content":"When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method is overridden, follow these guidelines:","pos":[0,145],"source":"When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:"}]},{"pos":[155,322],"content":"When the security token passed into the <ph id=\"ph1\">`token`</ph> parameter cannot be validated, throw the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.","source":"When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."},{"pos":[332,546],"content":"When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.","nodes":[{"content":"When there are no authorization policies in effect for this application, return an empty <ph id=\"ph1\">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> of type <ph id=\"ph2\">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph>.","pos":[0,214],"source":"When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>."}]},{"pos":[553,730],"content":"When <ph id=\"ph1\">`null`</ph> is returned by this method, <ph id=\"ph2\">[!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]</ph> throws the <ph id=\"ph3\">&lt;xref:System.IdentityModel.Tokens.SecurityTokenValidationException&gt;</ph> exception.","source":"When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception."},{"pos":[737,1087],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A&gt;</ph> method calls the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29&gt;</ph> method of the validation method specified in the constructor to authenticate the <ph id=\"ph3\">`token`</ph> parameter.","source":"The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method calls the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method of the validation method specified in the constructor to authenticate the `token` parameter."}],"pos":[22372,23470],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.","nodes":[{"pos":[0,83],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityToken\"&gt;&lt;/xref&gt;</ph> to be validated.","source":"The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated."}],"pos":[23786,23870],"yaml":true},{"content":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.","nodes":[{"pos":[0,232],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"&gt;&lt;/xref&gt;</ph> that contains the set of authorization policies in effect for this application.","source":"A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application."}],"pos":[24013,24246],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  commentId: T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  id: X509SecurityTokenAuthenticator\n  children:\n  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor\n  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)\n  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)\n  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  langs:\n  - csharp\n  name: X509SecurityTokenAuthenticator\n  nameWithType: X509SecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates an <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n  remarks: Use the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class to authenticate <xref:System.IdentityModel.Tokens.X509SecurityToken> security tokens.\n  syntax:\n    content: 'public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor\n  commentId: M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: X509SecurityTokenAuthenticator()\n  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()\n  fullName: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class.\n  remarks: When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token, the X.509 certificate is not mapped to a Windows identity and the certificate is validated using a certificate chain.\n  syntax:\n    content: public X509SecurityTokenAuthenticator ();\n    parameters: []\n  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  commentId: M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: X509SecurityTokenAuthenticator(X509CertificateValidator)\n  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)\n  fullName: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class using the specified certificate validator.\n  remarks: \"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property. These validation models can be passed to the `validator` parameter. When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method. The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.  \\n  \\n By default, the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> does not map the X.509 certificate to a Windows identity.\"\n  syntax:\n    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);\n    parameters:\n    - id: validator\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: A <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that verifies that the certificate is valid.\n  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)\n  commentId: M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)\n  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)'\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean)\n  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean)\n  fullName: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity.\n  remarks: \"The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class provides a set of pre-defined certificate validation models, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property. These validation models can be passed to the `validator` parameter. When an application requires a custom validation method, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method. The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.  \\n  \\n When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is called to authenticate the token and `mapToWindows` is `true`, the X.509 certificate is mapped to a Windows account and claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> with the Windows groups that the user belongs to. How the X.509 certificate is mapped to a Windows account depends upon the security token type:  \\n  \\n-   When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the X.509 certificate is mapped using the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property.  \\n  \\n-   When the security token is of type `X509SecurityToken`, the X.509 certificate is mapped to a Windows account using its user principal name (UPN).\"\n  syntax:\n    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);\n    parameters:\n    - id: validator\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: A <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that verifies that the certificate is valid.\n    - id: mapToWindows\n      type: System.Boolean\n      description: '`true` to map the identity of the certificate to a Windows identity; otherwise, `false`.'\n  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)\n  commentId: M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)\n  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)'\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean, Boolean)\n  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean, Boolean)\n  fullName: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean, Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\"></xref> class using the specified certificate validation method and indicates whether the identity of the certificate is mapped to a Windows identity and the Windows groups the user belongs to.\n  remarks: \"Pass `false` to the `includeWindowsGroups` parameter when the Windows group information is not required to improve performance.  \\n  \\n The <xref:System.IdentityModel.Selectors.X509CertificateValidator> class has several static properties, such as the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property that can be passed to the `validator` parameter. These properties provide common validation methods for X.509 certificates. When a custom validation method is required, derive a class from <xref:System.IdentityModel.Selectors.X509CertificateValidator> and override the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method. The <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method is called by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.  \\n  \\n When `true` is passed into the `mapToWindows` parameter, the X.509 certificate is mapped to a Windows account and relevant claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext>, such as the Windows groups that the user belongs to. When the security token is of type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, the <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> property is using the identity that is specified in the token; otherwise, the X.509 certificate is mapped to a Windows identity using a Kerberos S4U logon based on the user principal name SubjectAltNames extension of the X.509 certificate.\"\n  syntax:\n    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);\n    parameters:\n    - id: validator\n      type: System.IdentityModel.Selectors.X509CertificateValidator\n      description: A <xref href=\"System.IdentityModel.Selectors.X509CertificateValidator\"></xref> that verifies that the certificate is valid.\n    - id: mapToWindows\n      type: System.Boolean\n      description: '`true` to map the identity of the certificate to a Windows identity; otherwise, `false`.'\n    - id: includeWindowsGroups\n      type: System.Boolean\n      description: '`true` to include the groups the Windows user belongs to in the <xref href=\"System.IdentityModel.Policy.AuthorizationContext.ClaimSets\"></xref> property that is constructed throughout the authentication process; otherwise, `false`.'\n  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value that indicates whether the specified security token can be validated by this security token authenticator.\n  remarks: The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A> method does not authenticate the security token; that is performed by the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method.\n  syntax:\n    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Boolean\n      description: '`true` when <code>token</code> is a <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> security token or a class that derives from <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>; otherwise, `false`.'\n  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n  commentId: P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n  id: MapCertificateToWindowsAccount\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: MapCertificateToWindowsAccount\n  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n  fullName: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Gets a value that indicates whether to map the X.509 certificate to a Windows account.\n  remarks: \"The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A> property can only be set in a constructor.  \\n  \\n If transport-level SSL or HTTPS security is being used and mapping is already provided by the underlying security channel or by Internet Information Services (IIS), then that mapping is applied with no chain-validation. Otherwise, prior to doing the mapping, the certificate is validated using a certificate chain, and the certificate must chain to an NT_AUTHORITY identity. The chain structure used corresponds to the CERT_CHAIN_POLICY_NT_AUTH as defined in the `CertVerifyCertificateChainPolicy` function (see the [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) function in the Cryptography SDK). This behavior only occurs when mapping a certificate to a Windows account.\"\n  syntax:\n    content: public bool MapCertificateToWindowsAccount { get; }\n    return:\n      type: System.Boolean\n      description: '`true` to map the X.509 certificate to a Windows account; otherwise, `false`.'\n  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  langs:\n  - csharp\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Selectors\n  summary: Authenticates the specified security token and returns the set of authorization policies for the security token.\n  remarks: \"When the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method is overridden, follow these guidelines:  \\n  \\n-   When the security token passed into the `token` parameter cannot be validated, throw the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \\n  \\n-   When there are no authorization policies in effect for this application, return an empty <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  \\n  \\n When `null` is returned by this method, [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)] throws the <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  \\n  \\n The <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> method calls the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> method of the validation method specified in the constructor to authenticate the `token` parameter.\"\n  syntax:\n    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);\n    parameters:\n    - id: token\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The <xref href=\"System.IdentityModel.Tokens.SecurityToken\"></xref> to be validated.\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n      description: A <xref href=\"System.Collections.ObjectModel.ReadOnlyCollection`1\"></xref> of type <xref href=\"System.IdentityModel.Policy.IAuthorizationPolicy\"></xref> that contains the set of authorization policies in effect for this application.\n  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: SecurityTokenAuthenticator\n  nameWithType: SecurityTokenAuthenticator\n  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: X509SecurityTokenAuthenticator()\n  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()\n  fullName: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: X509SecurityTokenAuthenticator(X509CertificateValidator)\n  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)\n  fullName: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)\n- uid: System.IdentityModel.Selectors.X509CertificateValidator\n  parent: System.IdentityModel.Selectors\n  isExternal: false\n  name: X509CertificateValidator\n  nameWithType: X509CertificateValidator\n  fullName: System.IdentityModel.Selectors.X509CertificateValidator\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean)\n  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean)\n  fullName: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean, Boolean)\n  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean, Boolean)\n  fullName: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator, Boolean, Boolean)\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore(SecurityToken)\n  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n  fullName: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: MapCertificateToWindowsAccount\n  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n  fullName: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore(SecurityToken)\n  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n  fullName: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.IdentityModel.Policy.IAuthorizationPolicy\n  name: IAuthorizationPolicy\n  nameWithType: IAuthorizationPolicy\n  fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<IAuthorizationPolicy>\n  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IdentityModel.Policy.IAuthorizationPolicy\n    name: IAuthorizationPolicy\n    nameWithType: IAuthorizationPolicy\n    fullName: System.IdentityModel.Policy.IAuthorizationPolicy\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: X509SecurityTokenAuthenticator\n  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator\n  fullName: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateTokenCore\n  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore\n  fullName: X509SecurityTokenAuthenticator.CanValidateTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: MapCertificateToWindowsAccount\n  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n  fullName: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*\n  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateTokenCore\n  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore\n  fullName: X509SecurityTokenAuthenticator.ValidateTokenCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Selectors/X509SecurityTokenAuthenticator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: CanValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)\n- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator\n  isExternal: false\n  name: ValidateToken(SecurityToken)\n  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n  fullName: SecurityTokenAuthenticator.ValidateToken(SecurityToken)\n"}