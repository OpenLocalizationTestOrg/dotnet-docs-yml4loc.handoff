{"nodes":[{"content":"Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.","nodes":[{"pos":[0,172],"content":"Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.","nodes":[{"content":"Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.","pos":[0,172]}]}],"pos":[904,1077],"yaml":true},{"content":"The `My.Computer.Keyboard` object provides an interface to the computer's keyboard. The properties of the `My.Computer.Keyboard` provide information about the state of several special keys. The `My.Computer.Keyboard.SendKeys` method lets you send keys to the active window as if they have been typed at the keyboard.  \n  \n## Tasks  \n The following table lists an example of a task involving the `My.Computer.Keyboard` object.  \n  \n|To|See|  \n|-|-|  \n|Send keystrokes to an application|[How to: Start an Application and Send it Keystrokes (Visual Basic)](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,316],"content":"The `My.Computer.Keyboard` object provides an interface to the computer's keyboard. The properties of the `My.Computer.Keyboard` provide information about the state of several special keys. The `My.Computer.Keyboard.SendKeys` method lets you send keys to the active window as if they have been typed at the keyboard.","nodes":[{"content":"The <ph id=\"ph1\">`My.Computer.Keyboard`</ph> object provides an interface to the computer's keyboard.","pos":[0,83],"source":"The `My.Computer.Keyboard` object provides an interface to the computer's keyboard."},{"content":"The properties of the <ph id=\"ph1\">`My.Computer.Keyboard`</ph> provide information about the state of several special keys.","pos":[84,189],"source":" The properties of the `My.Computer.Keyboard` provide information about the state of several special keys."},{"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.SendKeys`</ph> method lets you send keys to the active window as if they have been typed at the keyboard.","pos":[190,316],"source":" The `My.Computer.Keyboard.SendKeys` method lets you send keys to the active window as if they have been typed at the keyboard."}]},{"pos":[325,330],"content":"Tasks","linkify":"Tasks","nodes":[{"content":"Tasks","pos":[0,5]}]},{"pos":[334,425],"content":"The following table lists an example of a task involving the <ph id=\"ph1\">`My.Computer.Keyboard`</ph> object.","source":"The following table lists an example of a task involving the `My.Computer.Keyboard` object."},{"pos":[432,434],"content":"To","nodes":[{"content":"To","pos":[0,2]}]},{"pos":[435,438],"content":"See","nodes":[{"content":"See","pos":[0,3]}]},{"pos":[451,484],"content":"Send keystrokes to an application","nodes":[{"content":"Send keystrokes to an application","pos":[0,33]}]},{"pos":[485,675],"content":"<bpt id=\"p1\">[</bpt>How to: Start an Application and Send it Keystrokes (Visual Basic)<ept id=\"p1\">](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)</ept>","source":"[How to: Start an Application and Send it Keystrokes (Visual Basic)](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)"},{"pos":[685,713],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[720,732],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[733,742],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[755,774],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[775,782],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[787,800],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[801,808],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[813,832],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[833,840],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[845,868],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[869,876],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[881,900],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[901,903],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[908,923],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[924,931],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[936,944],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[945,947],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[1088,2058],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Keyboard\"></xref> class.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"Microsoft.VisualBasic.Devices.Keyboard\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Keyboard\"></xref> class."}],"pos":[3607,3708],"yaml":true},{"content":"Gets a `Boolean` indicating if the ALT key is down.","nodes":[{"pos":[0,51],"content":"Gets a <ph id=\"ph1\">`Boolean`</ph> indicating if the ALT key is down.","source":"Gets a `Boolean` indicating if the ALT key is down."}],"pos":[4752,4804],"yaml":true},{"content":"The `My.Computer.Keyboard.AltKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,146],"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.AltKeyDown`</ph> property provides functionality similar to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;</ph> property.","source":"The `My.Computer.Keyboard.AltKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property."},{"pos":[155,183],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[190,202],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[203,212],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[225,244],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[245,252],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[257,270],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[271,278],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[283,302],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[303,310],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[315,338],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[339,346],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[351,370],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[371,373],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[378,393],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[394,401],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[406,414],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[415,417],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[4815,5248],"yaml":true,"extradata":"MT"},{"content":"A `Boolean` value: `True` if the ALT key is down; otherwise `False`.","nodes":[{"pos":[0,68],"content":"A <ph id=\"ph1\">`Boolean`</ph> value: <ph id=\"ph2\">`True`</ph> if the ALT key is down; otherwise <ph id=\"ph3\">`False`</ph>.","source":"A `Boolean` value: `True` if the ALT key is down; otherwise `False`."}],"pos":[5619,5690],"yaml":true},{"content":"Gets a `Boolean` indicating if CAPS LOCK is turned on.","nodes":[{"pos":[0,54],"content":"Gets a <ph id=\"ph1\">`Boolean`</ph> indicating if CAPS LOCK is turned on.","source":"Gets a `Boolean` indicating if CAPS LOCK is turned on."}],"pos":[6665,6720],"yaml":true},{"content":"Only the state of CAPS LOCK is returned.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,40],"content":"Only the state of CAPS LOCK is returned.","nodes":[{"content":"Only the state of CAPS LOCK is returned.","pos":[0,40]}]},{"pos":[49,77],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[84,96],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[97,106],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[119,138],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[139,146],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[151,164],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[165,172],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[177,196],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[197,204],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[209,232],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[233,240],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[245,264],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[265,267],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[272,287],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[288,295],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[300,308],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[309,311],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[6731,7058],"yaml":true,"extradata":"MT"},{"content":"A `Boolean` value: `True` if CAPS LOCK is turned on; otherwise `False`.","nodes":[{"pos":[0,71],"content":"A <ph id=\"ph1\">`Boolean`</ph> value: <ph id=\"ph2\">`True`</ph> if CAPS LOCK is turned on; otherwise <ph id=\"ph3\">`False`</ph>.","source":"A `Boolean` value: `True` if CAPS LOCK is turned on; otherwise `False`."}],"pos":[7492,7566],"yaml":true},{"content":"Gets a `Boolean` indicating if a CTRL key is down.","nodes":[{"pos":[0,50],"content":"Gets a <ph id=\"ph1\">`Boolean`</ph> indicating if a CTRL key is down.","source":"Gets a `Boolean` indicating if a CTRL key is down."}],"pos":[8625,8676],"yaml":true},{"content":"The `My.Computer.Keyboard.CtrlKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,147],"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.CtrlKeyDown`</ph> property provides functionality similar to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;</ph> property.","source":"The `My.Computer.Keyboard.CtrlKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property."},{"pos":[156,184],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[191,203],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[204,213],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[226,245],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[246,253],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[258,271],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[272,279],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[284,303],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[304,311],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[316,339],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[340,347],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[352,371],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[372,374],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[379,394],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[395,402],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[407,415],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[416,418],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[8687,9121],"yaml":true,"extradata":"MT"},{"content":"A `Boolean` value. `True` if a CTRL key is down; otherwise `False`.","nodes":[{"pos":[0,67],"content":"A `Boolean` value. `True` if a CTRL key is down; otherwise `False`.","nodes":[{"content":"A <ph id=\"ph1\">`Boolean`</ph> value.","pos":[0,18],"source":"A `Boolean` value."},{"content":"<ph id=\"ph1\">`True`</ph> if a CTRL key is down; otherwise <ph id=\"ph2\">`False`</ph>.","pos":[19,67],"source":"`True` if a CTRL key is down; otherwise `False`."}]}],"pos":[9495,9563],"yaml":true},{"content":"Gets a `Boolean` indicating if the NUM LOCK key is on.","nodes":[{"pos":[0,54],"content":"Gets a <ph id=\"ph1\">`Boolean`</ph> indicating if the NUM LOCK key is on.","source":"Gets a `Boolean` indicating if the NUM LOCK key is on."}],"pos":[10533,10588],"yaml":true},{"content":"Only the state of the NUM LOCK key is returned.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,47],"content":"Only the state of the NUM LOCK key is returned.","nodes":[{"content":"Only the state of the NUM LOCK key is returned.","pos":[0,47]}]},{"pos":[56,84],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[91,103],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[104,113],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[126,145],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[146,153],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[158,171],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[172,179],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[184,203],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[204,211],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[216,239],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[240,247],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[252,271],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[272,274],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[279,294],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[295,302],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[307,315],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[316,318],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[10599,10933],"yaml":true,"extradata":"MT"},{"content":"A `Boolean` value. `True` if NUM LOCK is on; otherwise `False`.","nodes":[{"pos":[0,63],"content":"A `Boolean` value. `True` if NUM LOCK is on; otherwise `False`.","nodes":[{"content":"A <ph id=\"ph1\">`Boolean`</ph> value.","pos":[0,18],"source":"A `Boolean` value."},{"content":"<ph id=\"ph1\">`True`</ph> if NUM LOCK is on; otherwise <ph id=\"ph2\">`False`</ph>.","pos":[19,63],"source":"`True` if NUM LOCK is on; otherwise `False`."}]}],"pos":[11361,11425],"yaml":true},{"content":"Gets a `Boolean` indicating whether the SCROLL LOCK key is on.","nodes":[{"pos":[0,62],"content":"Gets a <ph id=\"ph1\">`Boolean`</ph> indicating whether the SCROLL LOCK key is on.","source":"Gets a `Boolean` indicating whether the SCROLL LOCK key is on."}],"pos":[12477,12540],"yaml":true},{"content":"Only the state of the SCROLL LOCK key is returned.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,50],"content":"Only the state of the SCROLL LOCK key is returned.","nodes":[{"content":"Only the state of the SCROLL LOCK key is returned.","pos":[0,50]}]},{"pos":[59,87],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[94,106],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[107,116],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[129,148],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[149,156],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[161,174],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[175,182],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[187,206],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[207,214],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[219,242],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[243,250],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[255,274],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[275,277],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[282,297],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[298,305],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[310,318],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[319,321],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[12551,12888],"yaml":true,"extradata":"MT"},{"content":"A `Boolean` value. `True` if SCROLL LOCK is on; otherwise `False`.","nodes":[{"pos":[0,66],"content":"A `Boolean` value. `True` if SCROLL LOCK is on; otherwise `False`.","nodes":[{"content":"A <ph id=\"ph1\">`Boolean`</ph> value.","pos":[0,18],"source":"A `Boolean` value."},{"content":"<ph id=\"ph1\">`True`</ph> if SCROLL LOCK is on; otherwise <ph id=\"ph2\">`False`</ph>.","pos":[19,66],"source":"`True` if SCROLL LOCK is on; otherwise `False`."}]}],"pos":[13325,13392],"yaml":true},{"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","nodes":[{"pos":[0,79],"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","nodes":[{"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","pos":[0,79]}]}],"pos":[14502,14582],"yaml":true},{"content":"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.  \n  \n The `wait` argument is useful if the other application must finish before your application can continue.  \n  \n> [!NOTE]\n>  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).  \n  \n The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key.  \n  \n To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\"  \n  \n The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).  \n  \n|Key|Code|  \n|-|-|  \n|BACKSPACE|{BACKSPACE} or {BS}|  \n|BREAK|{BREAK}|  \n|CAPS LOCK|{CAPSLOCK}|  \n|CLEAR|{CLEAR}|  \n|DELETE|{DELETE} or {DEL}|  \n|DOWN ARROW|{DOWN}|  \n|END|{END}|  \n|ENTER (numeric keypad)|{ENTER}|  \n|ENTER|~|  \n|ESC|{ESCAPE} or {ESC}|  \n|HELP|{HELP}|  \n|HOME|{HOME}|  \n|INS|{INSERT}|  \n|LEFT ARROW|{LEFT}|  \n|NUM LOCK|{NUMLOCK}|  \n|PAGE DOWN|{PGDN}|  \n|PAGE UP|{PGUP}|  \n|RETURN|{RETURN}|  \n|RIGHT ARROW|{RIGHT}|  \n|SCROLL LOCK|{SCROLLLOCK}|  \n|TAB|{TAB}|  \n|UP ARROW|{UP}|  \n|F1 through F15|{F1} through {F15}|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,187],"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.SendKeys`</ph> method provides functionality similar to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;</ph> methods.","source":"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods."},{"pos":[194,298],"content":"The <ph id=\"ph1\">`wait`</ph> argument is useful if the other application must finish before your application can continue.","source":"The `wait` argument is useful if the other application must finish before your application can continue."},{"pos":[306,758],"content":"[!NOTE]\n Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).","leadings":["","> "],"nodes":[{"content":" Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).","pos":[8,450],"nodes":[{"content":"Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as <ph id=\"ph1\">`FindWindow`</ph> and <ph id=\"ph2\">`SetForegroundWindow`</ph>, to force focus on other applications.","pos":[1,292],"source":" Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Calling Windows APIs<ept id=\"p1\">](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)</ept>.","pos":[293,442],"source":" For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)."}]}]},{"pos":[765,1010],"content":"The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key.","nodes":[{"content":"The <ph id=\"ph1\">`keys`</ph> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).","pos":[0,127],"source":"The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys)."},{"content":"Each key is represented by one or more characters, such as <ph id=\"ph1\">`a`</ph> for the character \"a\", or <ph id=\"ph2\">`{ENTER}`</ph> for the ENTER key.","pos":[128,245],"source":" Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key."}]},{"pos":[1017,1442],"content":"To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\"","nodes":[{"content":"To combine a key with SHIFT, precede the key code with <ph id=\"ph1\">`+`</ph> (plus sign).","pos":[0,71],"source":"To combine a key with SHIFT, precede the key code with `+` (plus sign)."},{"content":"To combine a key with CTRL, precede the key code with <ph id=\"ph1\">`^`</ph> (caret).","pos":[72,138],"source":" To combine a key with CTRL, precede the key code with `^` (caret)."},{"content":"To combine a key with ALT, precede the key code with <ph id=\"ph1\">`%`</ph> (percent sign).","pos":[139,211],"source":" To combine a key with ALT, precede the key code with `%` (percent sign)."},{"content":"To specify repeating keys, use the form <ph id=\"ph1\">`{`</ph><bpt id=\"p1\">*</bpt>key number<ept id=\"p1\">*</ept><ph id=\"ph2\">`}`</ph>.","pos":[212,271],"source":" To specify repeating keys, use the form `{`*key number*`}`."},{"content":"You must put a space between <bpt id=\"p1\">*</bpt>key<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>number<ept id=\"p2\">*</ept>.","pos":[272,320],"source":" You must put a space between *key* and *number*."},{"content":"For example, <ph id=\"ph1\">`{LEFT 42}`</ph> means \"press the LEFT ARROW key 42 times\"; <ph id=\"ph2\">`{h 10}`</ph> means \"press 'h' 10 times.\"","pos":[321,425],"source":" For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\""}]},{"pos":[1449,1607],"content":"The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).","nodes":[{"content":"The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).","pos":[0,158]}]},{"pos":[1614,1617],"content":"Key","nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[1618,1622],"content":"Code","nodes":[{"content":"Code","pos":[0,4]}]},{"pos":[1635,1644],"content":"BACKSPACE","nodes":[{"content":"BACKSPACE","pos":[0,9]}]},{"pos":[1645,1664],"content":"{BACKSPACE} or {BS}","nodes":[{"content":"{BACKSPACE} or {BS}","pos":[0,19]}]},{"pos":[1669,1674],"content":"BREAK","nodes":[{"content":"BREAK","pos":[0,5]}]},{"pos":[1675,1682],"content":"{BREAK}","nodes":[{"content":"{BREAK}","pos":[0,7]}]},{"pos":[1687,1696],"content":"CAPS LOCK","nodes":[{"content":"CAPS LOCK","pos":[0,9]}]},{"pos":[1697,1707],"content":"{CAPSLOCK}","nodes":[{"content":"{CAPSLOCK}","pos":[0,10]}]},{"pos":[1712,1717],"content":"CLEAR","nodes":[{"content":"CLEAR","pos":[0,5]}]},{"pos":[1718,1725],"content":"{CLEAR}","nodes":[{"content":"{CLEAR}","pos":[0,7]}]},{"pos":[1730,1736],"content":"DELETE","nodes":[{"content":"DELETE","pos":[0,6]}]},{"pos":[1737,1754],"content":"{DELETE} or {DEL}","nodes":[{"content":"{DELETE} or {DEL}","pos":[0,17]}]},{"pos":[1759,1769],"content":"DOWN ARROW","nodes":[{"content":"DOWN ARROW","pos":[0,10]}]},{"pos":[1770,1776],"content":"{DOWN}","nodes":[{"content":"{DOWN}","pos":[0,6]}]},{"pos":[1781,1784],"content":"END","nodes":[{"content":"END","pos":[0,3]}]},{"pos":[1785,1790],"content":"{END}","nodes":[{"content":"{END}","pos":[0,5]}]},{"pos":[1795,1817],"content":"ENTER (numeric keypad)","nodes":[{"content":"ENTER (numeric keypad)","pos":[0,22]}]},{"pos":[1818,1825],"content":"{ENTER}","nodes":[{"content":"{ENTER}","pos":[0,7]}]},{"pos":[1830,1835],"content":"ENTER","nodes":[{"content":"ENTER","pos":[0,5]}]},{"pos":[1836,1837],"content":"~","nodes":[]},{"pos":[1842,1845],"content":"ESC","nodes":[{"content":"ESC","pos":[0,3]}]},{"pos":[1846,1863],"content":"{ESCAPE} or {ESC}","nodes":[{"content":"{ESCAPE} or {ESC}","pos":[0,17]}]},{"pos":[1868,1872],"content":"HELP","nodes":[{"content":"HELP","pos":[0,4]}]},{"pos":[1873,1879],"content":"{HELP}","nodes":[{"content":"{HELP}","pos":[0,6]}]},{"pos":[1884,1888],"content":"HOME","nodes":[{"content":"HOME","pos":[0,4]}]},{"pos":[1889,1895],"content":"{HOME}","nodes":[{"content":"{HOME}","pos":[0,6]}]},{"pos":[1900,1903],"content":"INS","nodes":[{"content":"INS","pos":[0,3]}]},{"pos":[1904,1912],"content":"{INSERT}","nodes":[{"content":"{INSERT}","pos":[0,8]}]},{"pos":[1917,1927],"content":"LEFT ARROW","nodes":[{"content":"LEFT ARROW","pos":[0,10]}]},{"pos":[1928,1934],"content":"{LEFT}","nodes":[{"content":"{LEFT}","pos":[0,6]}]},{"pos":[1939,1947],"content":"NUM LOCK","nodes":[{"content":"NUM LOCK","pos":[0,8]}]},{"pos":[1948,1957],"content":"{NUMLOCK}","nodes":[{"content":"{NUMLOCK}","pos":[0,9]}]},{"pos":[1962,1971],"content":"PAGE DOWN","nodes":[{"content":"PAGE DOWN","pos":[0,9]}]},{"pos":[1972,1978],"content":"{PGDN}","nodes":[{"content":"{PGDN}","pos":[0,6]}]},{"pos":[1983,1990],"content":"PAGE UP","nodes":[{"content":"PAGE UP","pos":[0,7]}]},{"pos":[1991,1997],"content":"{PGUP}","nodes":[{"content":"{PGUP}","pos":[0,6]}]},{"pos":[2002,2008],"content":"RETURN","nodes":[{"content":"RETURN","pos":[0,6]}]},{"pos":[2009,2017],"content":"{RETURN}","nodes":[{"content":"{RETURN}","pos":[0,8]}]},{"pos":[2022,2033],"content":"RIGHT ARROW","nodes":[{"content":"RIGHT ARROW","pos":[0,11]}]},{"pos":[2034,2041],"content":"{RIGHT}","nodes":[{"content":"{RIGHT}","pos":[0,7]}]},{"pos":[2046,2057],"content":"SCROLL LOCK","nodes":[{"content":"SCROLL LOCK","pos":[0,11]}]},{"pos":[2058,2070],"content":"{SCROLLLOCK}","nodes":[{"content":"{SCROLLLOCK}","pos":[0,12]}]},{"pos":[2075,2078],"content":"TAB","nodes":[{"content":"TAB","pos":[0,3]}]},{"pos":[2079,2084],"content":"{TAB}","nodes":[{"content":"{TAB}","pos":[0,5]}]},{"pos":[2089,2097],"content":"UP ARROW","nodes":[{"content":"UP ARROW","pos":[0,8]}]},{"pos":[2098,2102],"content":"{UP}","nodes":[{"content":"{UP}","pos":[0,4]}]},{"pos":[2107,2121],"content":"F1 through F15","nodes":[{"content":"F1 through F15","pos":[0,14]}]},{"pos":[2122,2140],"content":"{F1} through {F15}","nodes":[{"content":"{F1} through {F15}","pos":[0,18]}]},{"pos":[2150,2178],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[2185,2197],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[2198,2207],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[2220,2239],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[2240,2247],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2252,2265],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[2266,2273],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2278,2297],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[2298,2305],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2310,2333],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[2334,2341],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2346,2365],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[2366,2368],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[2373,2388],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[2389,2396],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2401,2409],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[2410,2412],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[14593,17064],"yaml":true,"extradata":"MT"},{"content":"A `String` that defines the keys to send.","nodes":[{"pos":[0,41],"content":"A <ph id=\"ph1\">`String`</ph> that defines the keys to send.","source":"A `String` that defines the keys to send."}],"pos":[17759,17801],"yaml":true},{"content":"A partial-trust situation exists in which the user lacks necessary permissions.","nodes":[{"pos":[0,79],"content":"A partial-trust situation exists in which the user lacks necessary permissions.","nodes":[{"content":"A partial-trust situation exists in which the user lacks necessary permissions.","pos":[0,79]}]}],"pos":[17988,18068],"yaml":true},{"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","nodes":[{"pos":[0,79],"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","nodes":[{"content":"Sends one or more keystrokes to the active window, as if typed on the keyboard.","pos":[0,79]}]}],"pos":[19102,19182],"yaml":true},{"content":"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.  \n  \n The `wait` argument is useful if the other application must finish before your application can continue.  \n  \n> [!NOTE]\n>  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).  \n  \n The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key.  \n  \n To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\"  \n  \n The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).  \n  \n|Key|Code|  \n|-|-|  \n|BACKSPACE|{BACKSPACE} or {BS}|  \n|BREAK|{BREAK}|  \n|CAPS LOCK|{CAPSLOCK}|  \n|CLEAR|{CLEAR}|  \n|DELETE|{DELETE} or {DEL}|  \n|DOWN ARROW|{DOWN}|  \n|END|{END}|  \n|ENTER (numeric keypad)|{ENTER}|  \n|ENTER|~|  \n|ESC|{ESCAPE} or {ESC}|  \n|HELP|{HELP}|  \n|HOME|{HOME}|  \n|INS|{INSERT}|  \n|LEFT ARROW|{LEFT}|  \n|NUM LOCK|{NUMLOCK}|  \n|PAGE DOWN|{PGDN}|  \n|PAGE UP|{PGUP}|  \n|RETURN|{RETURN}|  \n|RIGHT ARROW|{RIGHT}|  \n|SCROLL LOCK|{SCROLLLOCK}|  \n|TAB|{TAB}|  \n|UP ARROW|{UP}|  \n|F1 through F15|{F1} through {F15}|  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,187],"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.SendKeys`</ph> method provides functionality similar to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.SendKeys.Send%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.SendKeys.SendWait%2A&gt;</ph> methods.","source":"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods."},{"pos":[194,298],"content":"The <ph id=\"ph1\">`wait`</ph> argument is useful if the other application must finish before your application can continue.","source":"The `wait` argument is useful if the other application must finish before your application can continue."},{"pos":[306,758],"content":"[!NOTE]\n Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).","leadings":["","> "],"nodes":[{"content":" Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).","pos":[8,450],"nodes":[{"content":"Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as <ph id=\"ph1\">`FindWindow`</ph> and <ph id=\"ph2\">`SetForegroundWindow`</ph>, to force focus on other applications.","pos":[1,292],"source":" Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Walkthrough: Calling Windows APIs<ept id=\"p1\">](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)</ept>.","pos":[293,442],"source":" For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)."}]}]},{"pos":[765,1010],"content":"The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key.","nodes":[{"content":"The <ph id=\"ph1\">`keys`</ph> argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys).","pos":[0,127],"source":"The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys)."},{"content":"Each key is represented by one or more characters, such as <ph id=\"ph1\">`a`</ph> for the character \"a\", or <ph id=\"ph2\">`{ENTER}`</ph> for the ENTER key.","pos":[128,245],"source":" Each key is represented by one or more characters, such as `a` for the character \"a\", or `{ENTER}` for the ENTER key."}]},{"pos":[1017,1442],"content":"To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\"","nodes":[{"content":"To combine a key with SHIFT, precede the key code with <ph id=\"ph1\">`+`</ph> (plus sign).","pos":[0,71],"source":"To combine a key with SHIFT, precede the key code with `+` (plus sign)."},{"content":"To combine a key with CTRL, precede the key code with <ph id=\"ph1\">`^`</ph> (caret).","pos":[72,138],"source":" To combine a key with CTRL, precede the key code with `^` (caret)."},{"content":"To combine a key with ALT, precede the key code with <ph id=\"ph1\">`%`</ph> (percent sign).","pos":[139,211],"source":" To combine a key with ALT, precede the key code with `%` (percent sign)."},{"content":"To specify repeating keys, use the form <ph id=\"ph1\">`{`</ph><bpt id=\"p1\">*</bpt>key number<ept id=\"p1\">*</ept><ph id=\"ph2\">`}`</ph>.","pos":[212,271],"source":" To specify repeating keys, use the form `{`*key number*`}`."},{"content":"You must put a space between <bpt id=\"p1\">*</bpt>key<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>number<ept id=\"p2\">*</ept>.","pos":[272,320],"source":" You must put a space between *key* and *number*."},{"content":"For example, <ph id=\"ph1\">`{LEFT 42}`</ph> means \"press the LEFT ARROW key 42 times\"; <ph id=\"ph2\">`{h 10}`</ph> means \"press 'h' 10 times.\"","pos":[321,425],"source":" For example, `{LEFT 42}` means \"press the LEFT ARROW key 42 times\"; `{h 10}` means \"press 'h' 10 times.\""}]},{"pos":[1449,1607],"content":"The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).","nodes":[{"content":"The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).","pos":[0,158]}]},{"pos":[1614,1617],"content":"Key","nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[1618,1622],"content":"Code","nodes":[{"content":"Code","pos":[0,4]}]},{"pos":[1635,1644],"content":"BACKSPACE","nodes":[{"content":"BACKSPACE","pos":[0,9]}]},{"pos":[1645,1664],"content":"{BACKSPACE} or {BS}","nodes":[{"content":"{BACKSPACE} or {BS}","pos":[0,19]}]},{"pos":[1669,1674],"content":"BREAK","nodes":[{"content":"BREAK","pos":[0,5]}]},{"pos":[1675,1682],"content":"{BREAK}","nodes":[{"content":"{BREAK}","pos":[0,7]}]},{"pos":[1687,1696],"content":"CAPS LOCK","nodes":[{"content":"CAPS LOCK","pos":[0,9]}]},{"pos":[1697,1707],"content":"{CAPSLOCK}","nodes":[{"content":"{CAPSLOCK}","pos":[0,10]}]},{"pos":[1712,1717],"content":"CLEAR","nodes":[{"content":"CLEAR","pos":[0,5]}]},{"pos":[1718,1725],"content":"{CLEAR}","nodes":[{"content":"{CLEAR}","pos":[0,7]}]},{"pos":[1730,1736],"content":"DELETE","nodes":[{"content":"DELETE","pos":[0,6]}]},{"pos":[1737,1754],"content":"{DELETE} or {DEL}","nodes":[{"content":"{DELETE} or {DEL}","pos":[0,17]}]},{"pos":[1759,1769],"content":"DOWN ARROW","nodes":[{"content":"DOWN ARROW","pos":[0,10]}]},{"pos":[1770,1776],"content":"{DOWN}","nodes":[{"content":"{DOWN}","pos":[0,6]}]},{"pos":[1781,1784],"content":"END","nodes":[{"content":"END","pos":[0,3]}]},{"pos":[1785,1790],"content":"{END}","nodes":[{"content":"{END}","pos":[0,5]}]},{"pos":[1795,1817],"content":"ENTER (numeric keypad)","nodes":[{"content":"ENTER (numeric keypad)","pos":[0,22]}]},{"pos":[1818,1825],"content":"{ENTER}","nodes":[{"content":"{ENTER}","pos":[0,7]}]},{"pos":[1830,1835],"content":"ENTER","nodes":[{"content":"ENTER","pos":[0,5]}]},{"pos":[1836,1837],"content":"~","nodes":[]},{"pos":[1842,1845],"content":"ESC","nodes":[{"content":"ESC","pos":[0,3]}]},{"pos":[1846,1863],"content":"{ESCAPE} or {ESC}","nodes":[{"content":"{ESCAPE} or {ESC}","pos":[0,17]}]},{"pos":[1868,1872],"content":"HELP","nodes":[{"content":"HELP","pos":[0,4]}]},{"pos":[1873,1879],"content":"{HELP}","nodes":[{"content":"{HELP}","pos":[0,6]}]},{"pos":[1884,1888],"content":"HOME","nodes":[{"content":"HOME","pos":[0,4]}]},{"pos":[1889,1895],"content":"{HOME}","nodes":[{"content":"{HOME}","pos":[0,6]}]},{"pos":[1900,1903],"content":"INS","nodes":[{"content":"INS","pos":[0,3]}]},{"pos":[1904,1912],"content":"{INSERT}","nodes":[{"content":"{INSERT}","pos":[0,8]}]},{"pos":[1917,1927],"content":"LEFT ARROW","nodes":[{"content":"LEFT ARROW","pos":[0,10]}]},{"pos":[1928,1934],"content":"{LEFT}","nodes":[{"content":"{LEFT}","pos":[0,6]}]},{"pos":[1939,1947],"content":"NUM LOCK","nodes":[{"content":"NUM LOCK","pos":[0,8]}]},{"pos":[1948,1957],"content":"{NUMLOCK}","nodes":[{"content":"{NUMLOCK}","pos":[0,9]}]},{"pos":[1962,1971],"content":"PAGE DOWN","nodes":[{"content":"PAGE DOWN","pos":[0,9]}]},{"pos":[1972,1978],"content":"{PGDN}","nodes":[{"content":"{PGDN}","pos":[0,6]}]},{"pos":[1983,1990],"content":"PAGE UP","nodes":[{"content":"PAGE UP","pos":[0,7]}]},{"pos":[1991,1997],"content":"{PGUP}","nodes":[{"content":"{PGUP}","pos":[0,6]}]},{"pos":[2002,2008],"content":"RETURN","nodes":[{"content":"RETURN","pos":[0,6]}]},{"pos":[2009,2017],"content":"{RETURN}","nodes":[{"content":"{RETURN}","pos":[0,8]}]},{"pos":[2022,2033],"content":"RIGHT ARROW","nodes":[{"content":"RIGHT ARROW","pos":[0,11]}]},{"pos":[2034,2041],"content":"{RIGHT}","nodes":[{"content":"{RIGHT}","pos":[0,7]}]},{"pos":[2046,2057],"content":"SCROLL LOCK","nodes":[{"content":"SCROLL LOCK","pos":[0,11]}]},{"pos":[2058,2070],"content":"{SCROLLLOCK}","nodes":[{"content":"{SCROLLLOCK}","pos":[0,12]}]},{"pos":[2075,2078],"content":"TAB","nodes":[{"content":"TAB","pos":[0,3]}]},{"pos":[2079,2084],"content":"{TAB}","nodes":[{"content":"{TAB}","pos":[0,5]}]},{"pos":[2089,2097],"content":"UP ARROW","nodes":[{"content":"UP ARROW","pos":[0,8]}]},{"pos":[2098,2102],"content":"{UP}","nodes":[{"content":"{UP}","pos":[0,4]}]},{"pos":[2107,2121],"content":"F1 through F15","nodes":[{"content":"F1 through F15","pos":[0,14]}]},{"pos":[2122,2140],"content":"{F1} through {F15}","nodes":[{"content":"{F1} through {F15}","pos":[0,18]}]},{"pos":[2150,2178],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[2185,2197],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[2198,2207],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[2220,2239],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[2240,2247],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2252,2265],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[2266,2273],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2278,2297],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[2298,2305],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2310,2333],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[2334,2341],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2346,2365],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[2366,2368],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[2373,2388],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[2389,2396],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[2401,2409],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[2410,2412],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[19193,21664],"yaml":true,"extradata":"MT"},{"content":"A `String` that defines the keys to send.","nodes":[{"pos":[0,41],"content":"A <ph id=\"ph1\">`String`</ph> that defines the keys to send.","source":"A `String` that defines the keys to send."}],"pos":[22370,22412],"yaml":true},{"content":"Optional. A `Boolean` that specifies whether or not to wait for keystrokes to get processed before the application continues. `True` by default.","nodes":[{"pos":[0,144],"content":"Optional. A `Boolean` that specifies whether or not to wait for keystrokes to get processed before the application continues. `True` by default.","nodes":[{"content":"Optional.","pos":[0,9]},{"content":"A <ph id=\"ph1\">`Boolean`</ph> that specifies whether or not to wait for keystrokes to get processed before the application continues.","pos":[10,125],"source":" A `Boolean` that specifies whether or not to wait for keystrokes to get processed before the application continues."},{"content":"<ph id=\"ph1\">`True`</ph> by default.","pos":[126,144],"source":"`True` by default."}]}],"pos":[22473,22618],"yaml":true},{"content":"A partial-trust situation exists in which the user lacks necessary permissions.","nodes":[{"pos":[0,79],"content":"A partial-trust situation exists in which the user lacks necessary permissions.","nodes":[{"content":"A partial-trust situation exists in which the user lacks necessary permissions.","pos":[0,79]}]}],"pos":[22805,22885],"yaml":true},{"content":"Gets a `Boolean` indicating if a SHIFT key is down.","nodes":[{"pos":[0,51],"content":"Gets a <ph id=\"ph1\">`Boolean`</ph> indicating if a SHIFT key is down.","source":"Gets a `Boolean` indicating if a SHIFT key is down."}],"pos":[23804,23856],"yaml":true},{"content":"The `My.Computer.Keyboard.ShiftKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.  \n  \n## Availability by Project Type  \n  \n|Project type|Available|  \n|-|-|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|No|  \n|Windows Service|**Yes**|  \n|Web Site|No|","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">`My.Computer.Keyboard.ShiftKeyDown`</ph> property provides functionality similar to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ModifierKeys%2A&gt;</ph> property.","source":"The `My.Computer.Keyboard.ShiftKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property."},{"pos":[157,185],"content":"Availability by Project Type","linkify":"Availability by Project Type","nodes":[{"content":"Availability by Project Type","pos":[0,28]}]},{"pos":[192,204],"content":"Project type","nodes":[{"content":"Project type","pos":[0,12]}]},{"pos":[205,214],"content":"Available","nodes":[{"content":"Available","pos":[0,9]}]},{"pos":[227,246],"content":"Windows Application","nodes":[{"content":"Windows Application","pos":[0,19]}]},{"pos":[247,254],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[259,272],"content":"Class Library","nodes":[{"content":"Class Library","pos":[0,13]}]},{"pos":[273,280],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[285,304],"content":"Console Application","nodes":[{"content":"Console Application","pos":[0,19]}]},{"pos":[305,312],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[317,340],"content":"Windows Control Library","nodes":[{"content":"Windows Control Library","pos":[0,23]}]},{"pos":[341,348],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[353,372],"content":"Web Control Library","nodes":[{"content":"Web Control Library","pos":[0,19]}]},{"pos":[373,375],"content":"No","nodes":[{"content":"No","pos":[0,2]}]},{"pos":[380,395],"content":"Windows Service","nodes":[{"content":"Windows Service","pos":[0,15]}]},{"pos":[396,403],"content":"<bpt id=\"p1\">**</bpt>Yes<ept id=\"p1\">**</ept>","source":"**Yes**"},{"pos":[408,416],"content":"Web Site","nodes":[{"content":"Web Site","pos":[0,8]}]},{"pos":[417,419],"content":"No","nodes":[{"content":"No","pos":[0,2]}]}],"pos":[23867,24302],"yaml":true,"extradata":"MT"},{"content":"A `Boolean` value. `True` if a SHIFT key is down; otherwise `False`.","nodes":[{"pos":[0,68],"content":"A `Boolean` value. `True` if a SHIFT key is down; otherwise `False`.","nodes":[{"content":"A <ph id=\"ph1\">`Boolean`</ph> value.","pos":[0,18],"source":"A `Boolean` value."},{"content":"<ph id=\"ph1\">`True`</ph> if a SHIFT key is down; otherwise <ph id=\"ph2\">`False`</ph>.","pos":[19,68],"source":"`True` if a SHIFT key is down; otherwise `False`."}]}],"pos":[24687,24756],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Devices.Keyboard\n  commentId: T:Microsoft.VisualBasic.Devices.Keyboard\n  id: Keyboard\n  children:\n  - Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  - Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  - Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  - Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  - Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  - Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  - Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  langs:\n  - csharp\n  name: Keyboard\n  nameWithType: Keyboard\n  fullName: Microsoft.VisualBasic.Devices.Keyboard\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Provides properties for accessing the current state of the keyboard, such as what keys are currently pressed, and provides a method to send keystrokes to the active window.\n  remarks: \"The `My.Computer.Keyboard` object provides an interface to the computer's keyboard. The properties of the `My.Computer.Keyboard` provide information about the state of several special keys. The `My.Computer.Keyboard.SendKeys` method lets you send keys to the active window as if they have been typed at the keyboard.  \\n  \\n## Tasks  \\n The following table lists an example of a task involving the `My.Computer.Keyboard` object.  \\n  \\n|To|See|  \\n|-|-|  \\n|Send keystrokes to an application|[How to: Start an Application and Send it Keystrokes (Visual Basic)](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is pressed.  \\n  \\n [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]\"\n  syntax:\n    content: public class Keyboard\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  commentId: M:Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: Keyboard()\n  nameWithType: Keyboard.Keyboard()\n  fullName: Keyboard.Keyboard()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Initializes a new instance of the <xref href=\"Microsoft.VisualBasic.Devices.Keyboard\"></xref> class.\n  syntax:\n    content: public Keyboard ();\n    parameters: []\n  overload: Microsoft.VisualBasic.Devices.Keyboard.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  commentId: P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  id: AltKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: AltKeyDown\n  nameWithType: Keyboard.AltKeyDown\n  fullName: Keyboard.AltKeyDown\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a `Boolean` indicating if the ALT key is down.\n  remarks: \"The `My.Computer.Keyboard.AltKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.AltKeyDown` property to determine if the computer's ALT key is down.  \\n  \\n [!code-vb[VbVbalrMyComputer#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#23)]\"\n  syntax:\n    content: public bool AltKeyDown { get; }\n    return:\n      type: System.Boolean\n      description: 'A `Boolean` value: `True` if the ALT key is down; otherwise `False`.'\n  overload: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  commentId: P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  id: CapsLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: CapsLock\n  nameWithType: Keyboard.CapsLock\n  fullName: Keyboard.CapsLock\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a `Boolean` indicating if CAPS LOCK is turned on.\n  remarks: \"Only the state of CAPS LOCK is returned.  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.CapsLock` property to determine if the computer's CAPS LOCK is turned on.  \\n  \\n [!code-vb[VbVbalrMyComputer#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#50)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public bool CapsLock { get; }\n    return:\n      type: System.Boolean\n      description: 'A `Boolean` value: `True` if CAPS LOCK is turned on; otherwise `False`.'\n  overload: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  commentId: P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  id: CtrlKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: CtrlKeyDown\n  nameWithType: Keyboard.CtrlKeyDown\n  fullName: Keyboard.CtrlKeyDown\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a `Boolean` indicating if a CTRL key is down.\n  remarks: \"The `My.Computer.Keyboard.CtrlKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is down.  \\n  \\n [!code-vb[VbVbalrMyComputer#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#34)]\"\n  syntax:\n    content: public bool CtrlKeyDown { get; }\n    return:\n      type: System.Boolean\n      description: A `Boolean` value. `True` if a CTRL key is down; otherwise `False`.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  commentId: P:Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  id: NumLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: NumLock\n  nameWithType: Keyboard.NumLock\n  fullName: Keyboard.NumLock\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a `Boolean` indicating if the NUM LOCK key is on.\n  remarks: \"Only the state of the NUM LOCK key is returned.  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.NumLock` property to determine if the computer's NUM LOCK key is on.  \\n  \\n [!code-vb[VbVbalrMyComputer#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#48)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public bool NumLock { get; }\n    return:\n      type: System.Boolean\n      description: A `Boolean` value. `True` if NUM LOCK is on; otherwise `False`.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.NumLock*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  commentId: P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  id: ScrollLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: ScrollLock\n  nameWithType: Keyboard.ScrollLock\n  fullName: Keyboard.ScrollLock\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a `Boolean` indicating whether the SCROLL LOCK key is on.\n  remarks: \"Only the state of the SCROLL LOCK key is returned.  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.ScrollLock` property to determine if the computer's SCROLL LOCK key is on.  \\n  \\n [!code-vb[VbVbalrMyComputer#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#31)]\"\n  syntax:\n    content: >-\n      [get: System.Security.SecuritySafeCritical]\n\n      public bool ScrollLock { get; }\n    return:\n      type: System.Boolean\n      description: A `Boolean` value. `True` if SCROLL LOCK is on; otherwise `False`.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*\n  exceptions: []\n  attributes:\n  - type: 'get: System.Security.SecuritySafeCritical'\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  commentId: M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  id: SendKeys(System.String)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: SendKeys(String)\n  nameWithType: Keyboard.SendKeys(String)\n  fullName: Keyboard.SendKeys(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Sends one or more keystrokes to the active window, as if typed on the keyboard.\n  remarks: \"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.  \\n  \\n The `wait` argument is useful if the other application must finish before your application can continue.  \\n  \\n> [!NOTE]\\n>  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).  \\n  \\n The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \\\"a\\\", or `{ENTER}` for the ENTER key.  \\n  \\n To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \\\"press the LEFT ARROW key 42 times\\\"; `{h 10}` means \\\"press 'h' 10 times.\\\"  \\n  \\n The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).  \\n  \\n|Key|Code|  \\n|-|-|  \\n|BACKSPACE|{BACKSPACE} or {BS}|  \\n|BREAK|{BREAK}|  \\n|CAPS LOCK|{CAPSLOCK}|  \\n|CLEAR|{CLEAR}|  \\n|DELETE|{DELETE} or {DEL}|  \\n|DOWN ARROW|{DOWN}|  \\n|END|{END}|  \\n|ENTER (numeric keypad)|{ENTER}|  \\n|ENTER|~|  \\n|ESC|{ESCAPE} or {ESC}|  \\n|HELP|{HELP}|  \\n|HOME|{HOME}|  \\n|INS|{INSERT}|  \\n|LEFT ARROW|{LEFT}|  \\n|NUM LOCK|{NUMLOCK}|  \\n|PAGE DOWN|{PGDN}|  \\n|PAGE UP|{PGUP}|  \\n|RETURN|{RETURN}|  \\n|RIGHT ARROW|{RIGHT}|  \\n|SCROLL LOCK|{SCROLLLOCK}|  \\n|TAB|{TAB}|  \\n|UP ARROW|{UP}|  \\n|F1 through F15|{F1} through {F15}|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \\n  \\n [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  \\n  \\n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \\n  \\n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class).\"\n  syntax:\n    content: public void SendKeys (string keys);\n    parameters:\n    - id: keys\n      type: System.String\n      description: A `String` that defines the keys to send.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A partial-trust situation exists in which the user lacks necessary permissions.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  commentId: M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  id: SendKeys(System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: SendKeys(String, Boolean)\n  nameWithType: Keyboard.SendKeys(String, Boolean)\n  fullName: Keyboard.SendKeys(String, Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Sends one or more keystrokes to the active window, as if typed on the keyboard.\n  remarks: \"The `My.Computer.Keyboard.SendKeys` method provides functionality similar to the <xref:System.Windows.Forms.SendKeys.Send%2A> and <xref:System.Windows.Forms.SendKeys.SendWait%2A> methods.  \\n  \\n The `wait` argument is useful if the other application must finish before your application can continue.  \\n  \\n> [!NOTE]\\n>  Because there is no managed method to activate another application, you can either use this class within the current application, manually select the window to send the keys to, or use Windows API methods, such as `FindWindow` and `SetForegroundWindow`, to force focus on other applications. For more information, see [Walkthrough: Calling Windows APIs](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md).  \\n  \\n The `keys` argument can specify any single key or any key combined with ALT, CTRL, or SHIFT (or any combination of those keys). Each key is represented by one or more characters, such as `a` for the character \\\"a\\\", or `{ENTER}` for the ENTER key.  \\n  \\n To combine a key with SHIFT, precede the key code with `+` (plus sign). To combine a key with CTRL, precede the key code with `^` (caret). To combine a key with ALT, precede the key code with `%` (percent sign). To specify repeating keys, use the form `{`*key number*`}`. You must put a space between *key* and *number*. For example, `{LEFT 42}` means \\\"press the LEFT ARROW key 42 times\\\"; `{h 10}` means \\\"press 'h' 10 times.\\\"  \\n  \\n The following table lists the codes that can be used to specify characters that are not displayed when you press the corresponding key (such as ENTER or TAB).  \\n  \\n|Key|Code|  \\n|-|-|  \\n|BACKSPACE|{BACKSPACE} or {BS}|  \\n|BREAK|{BREAK}|  \\n|CAPS LOCK|{CAPSLOCK}|  \\n|CLEAR|{CLEAR}|  \\n|DELETE|{DELETE} or {DEL}|  \\n|DOWN ARROW|{DOWN}|  \\n|END|{END}|  \\n|ENTER (numeric keypad)|{ENTER}|  \\n|ENTER|~|  \\n|ESC|{ESCAPE} or {ESC}|  \\n|HELP|{HELP}|  \\n|HOME|{HOME}|  \\n|INS|{INSERT}|  \\n|LEFT ARROW|{LEFT}|  \\n|NUM LOCK|{NUMLOCK}|  \\n|PAGE DOWN|{PGDN}|  \\n|PAGE UP|{PGUP}|  \\n|RETURN|{RETURN}|  \\n|RIGHT ARROW|{RIGHT}|  \\n|SCROLL LOCK|{SCROLLLOCK}|  \\n|TAB|{TAB}|  \\n|UP ARROW|{UP}|  \\n|F1 through F15|{F1} through {F15}|  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \\n  \\n [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  \\n  \\n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \\n  \\n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class).\"\n  syntax:\n    content: public void SendKeys (string keys, bool wait);\n    parameters:\n    - id: keys\n      type: System.String\n      description: A `String` that defines the keys to send.\n    - id: wait\n      type: System.Boolean\n      description: Optional. A `Boolean` that specifies whether or not to wait for keystrokes to get processed before the application continues. `True` by default.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*\n  exceptions:\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: A partial-trust situation exists in which the user lacks necessary permissions.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  commentId: P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  id: ShiftKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  langs:\n  - csharp\n  name: ShiftKeyDown\n  nameWithType: Keyboard.ShiftKeyDown\n  fullName: Keyboard.ShiftKeyDown\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  summary: Gets a `Boolean` indicating if a SHIFT key is down.\n  remarks: \"The `My.Computer.Keyboard.ShiftKeyDown` property provides functionality similar to the <xref:System.Windows.Forms.Control.ModifierKeys%2A> property.  \\n  \\n## Availability by Project Type  \\n  \\n|Project type|Available|  \\n|-|-|  \\n|Windows Application|**Yes**|  \\n|Class Library|**Yes**|  \\n|Console Application|**Yes**|  \\n|Windows Control Library|**Yes**|  \\n|Web Control Library|No|  \\n|Windows Service|**Yes**|  \\n|Web Site|No|\"\n  example:\n  - \"This example uses the `My.Computer.Keyboard.ShiftKeyDown` property to determine if one of the computer's SHIFT keys is down.  \\n  \\n [!code-vb[VbVbalrMyComputer#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#47)]\"\n  syntax:\n    content: public bool ShiftKeyDown { get; }\n    return:\n      type: System.Boolean\n      description: A `Boolean` value. `True` if a SHIFT key is down; otherwise `False`.\n  overload: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: Keyboard()\n  nameWithType: Keyboard.Keyboard()\n  fullName: Keyboard.Keyboard()\n- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: AltKeyDown\n  nameWithType: Keyboard.AltKeyDown\n  fullName: Keyboard.AltKeyDown\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CapsLock\n  nameWithType: Keyboard.CapsLock\n  fullName: Keyboard.CapsLock\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CtrlKeyDown\n  nameWithType: Keyboard.CtrlKeyDown\n  fullName: Keyboard.CtrlKeyDown\n- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: NumLock\n  nameWithType: Keyboard.NumLock\n  fullName: Keyboard.NumLock\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ScrollLock\n  nameWithType: Keyboard.ScrollLock\n  fullName: Keyboard.ScrollLock\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: SendKeys(String)\n  nameWithType: Keyboard.SendKeys(String)\n  fullName: Keyboard.SendKeys(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: SendKeys(String, Boolean)\n  nameWithType: Keyboard.SendKeys(String, Boolean)\n  fullName: Keyboard.SendKeys(String, Boolean)\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ShiftKeyDown\n  nameWithType: Keyboard.ShiftKeyDown\n  fullName: Keyboard.ShiftKeyDown\n- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: Keyboard\n  nameWithType: Keyboard.Keyboard\n  fullName: Keyboard.Keyboard\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: AltKeyDown\n  nameWithType: Keyboard.AltKeyDown\n  fullName: Keyboard.AltKeyDown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CapsLock\n  nameWithType: Keyboard.CapsLock\n  fullName: Keyboard.CapsLock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: CtrlKeyDown\n  nameWithType: Keyboard.CtrlKeyDown\n  fullName: Keyboard.CtrlKeyDown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: NumLock\n  nameWithType: Keyboard.NumLock\n  fullName: Keyboard.NumLock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ScrollLock\n  nameWithType: Keyboard.ScrollLock\n  fullName: Keyboard.ScrollLock\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: SendKeys\n  nameWithType: Keyboard.SendKeys\n  fullName: Keyboard.SendKeys\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*\n  parent: Microsoft.VisualBasic.Devices.Keyboard\n  isExternal: false\n  name: ShiftKeyDown\n  nameWithType: Keyboard.ShiftKeyDown\n  fullName: Keyboard.ShiftKeyDown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Devices/Keyboard.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}