<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">172a44fe6e5d3f90e09817949fce285f1a298677</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Configuration.IConfigurationSectionHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3c70d3cc2cd97e85713a63b1d74cf27df052a2d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47ead7ec058c7baa22a1e2ad1299031892ffa1ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Handles the access to certain configuration sections.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept> <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler&gt;</ph> is deprecated in .NET Framework 2.0 and above.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>But, because it is used internally, it has been kept.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can find an example at <bpt id="p1">[</bpt>How to: Create Custom Configuration Sections Using IConfigurationSectionHandler<ept id="p1">](http://msdn.microsoft.com/library/07f68a3f-2920-4665-a824-47bda744e662)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the previous example, please build it with the .NET Framework version 1.0 or 1.1.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In .NET Framework version 2.0 and above, you must instead derive from the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> class to implement the related configuration section handler.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can find an example at <bpt id="p1">[</bpt>How to: Create Custom Configuration Sections Using ConfigurationSection<ept id="p1">](http://msdn.microsoft.com/library/febaca98-c727-4017-95ed-82e2fb6cf234)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler&gt;</ph> class must be thread safe and stateless.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler.Create%2A&gt;</ph> method must be callable from multiple threads simultaneously.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, the configuration object generated by the <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler.Create%2A&gt;</ph> method must be thread safe and immutable.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the configuration objects are cached by the configuration system, it is important not to modify the parent argument to the <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler.Create%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the return value of <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler.Create%2A&gt;</ph> is only a small modification of the parent, actual modifications must be made on a clone of the parent, not the original.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates a configuration section handler.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler&gt;</ph> class must be thread safe and stateless.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler.Create%2A&gt;</ph> method must be callable from multiple threads simultaneously.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, the configuration object generated by the <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler.Create%2A&gt;</ph> method must be thread safe and immutable.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the configuration objects are cached by the configuration system, it is important not to modify the parent argument to <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler.Create%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the return value of <ph id="ph1">&lt;xref:System.Configuration.IConfigurationSectionHandler.Create%2A&gt;</ph> is only a small modification of the parent, actual modifications must be made on a clone of the parent, not the original.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Parent object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Configuration context object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Section XML node.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The created section handler object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>