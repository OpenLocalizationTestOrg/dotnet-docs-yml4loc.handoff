{"nodes":[{"content":"Contributes an interception sink at the context boundary on the server end of a remoting call.","nodes":[{"pos":[0,94],"content":"Contributes an interception sink at the context boundary on the server end of a remoting call.","nodes":[{"content":"Contributes an interception sink at the context boundary on the server end of a remoting call.","pos":[0,94]}]}],"pos":[642,737],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink> interface is implemented by context properties in a <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an interception sink at the context boundary on the server end of a remoting call.  \n  \n The server context chain is composed from those properties in the server context that implement <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink> and which contribute a sink by using the <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A> method call.  \n  \n Serialization is an example of such a context property. In this case, the message sink would involve taking a synchronization primitive lock before processing a call any further.","nodes":[{"pos":[0,285],"content":"The <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink> interface is implemented by context properties in a <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an interception sink at the context boundary on the server end of a remoting call.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink&gt;</ph> interface is implemented by context properties in a <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;</ph> class that want to contribute an interception sink at the context boundary on the server end of a remoting call.","pos":[0,285],"source":"The <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink> interface is implemented by context properties in a <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an interception sink at the context boundary on the server end of a remoting call."}]},{"pos":[292,603],"content":"The server context chain is composed from those properties in the server context that implement <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink> and which contribute a sink by using the <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A> method call.","nodes":[{"content":"The server context chain is composed from those properties in the server context that implement <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink&gt;</ph> and which contribute a sink by using the <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A&gt;</ph> method call.","pos":[0,311],"source":"The server context chain is composed from those properties in the server context that implement <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink> and which contribute a sink by using the <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A> method call."}]},{"pos":[610,788],"content":"Serialization is an example of such a context property. In this case, the message sink would involve taking a synchronization primitive lock before processing a call any further.","nodes":[{"content":"Serialization is an example of such a context property. In this case, the message sink would involve taking a synchronization primitive lock before processing a call any further.","pos":[0,178],"nodes":[{"content":"Serialization is an example of such a context property.","pos":[0,55]},{"content":"In this case, the message sink would involve taking a synchronization primitive lock before processing a call any further.","pos":[56,178]}]}]}],"pos":[748,1543],"yaml":true,"extradata":"MT"},{"content":"Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.","nodes":[{"pos":[0,130],"content":"Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.","nodes":[{"content":"Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.","pos":[0,130]}]}],"pos":[3269,3400],"yaml":true},{"content":"The chain of sinks composed so far.","nodes":[{"pos":[0,35],"content":"The chain of sinks composed so far.","nodes":[{"content":"The chain of sinks composed so far.","pos":[0,35]}]}],"pos":[3670,3706],"yaml":true},{"content":"The composite sink chain.","nodes":[{"pos":[0,25],"content":"The composite sink chain.","nodes":[{"content":"The composite sink chain.","pos":[0,25]}]}],"pos":[3796,3822],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink\n  commentId: T:System.Runtime.Remoting.Contexts.IContributeServerContextSink\n  id: IContributeServerContextSink\n  children:\n  - System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)\n  langs:\n  - csharp\n  name: IContributeServerContextSink\n  nameWithType: IContributeServerContextSink\n  fullName: System.Runtime.Remoting.Contexts.IContributeServerContextSink\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Contributes an interception sink at the context boundary on the server end of a remoting call.\n  remarks: \"The <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink> interface is implemented by context properties in a <xref:System.Runtime.Remoting.Contexts.Context> class that want to contribute an interception sink at the context boundary on the server end of a remoting call.  \\n  \\n The server context chain is composed from those properties in the server context that implement <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink> and which contribute a sink by using the <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A> method call.  \\n  \\n Serialization is an example of such a context property. In this case, the message sink would involve taking a synchronization primitive lock before processing a call any further.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IContributeServerContextSink\n  derivedClasses:\n  - System.Runtime.Remoting.Contexts.SynchronizationAttribute\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/IContributeServerContextSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)\n  commentId: M:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)\n  id: GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)\n  parent: System.Runtime.Remoting.Contexts.IContributeServerContextSink\n  langs:\n  - csharp\n  name: GetServerContextSink(IMessageSink)\n  nameWithType: IContributeServerContextSink.GetServerContextSink(IMessageSink)\n  fullName: IContributeServerContextSink.GetServerContextSink(IMessageSink)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Contexts\n  summary: Takes the first sink in the chain of sinks composed so far, and then chains its message sink in front of the chain already formed.\n  syntax:\n    content: public System.Runtime.Remoting.Messaging.IMessageSink GetServerContextSink (System.Runtime.Remoting.Messaging.IMessageSink nextSink);\n    parameters:\n    - id: nextSink\n      type: System.Runtime.Remoting.Messaging.IMessageSink\n      description: The chain of sinks composed so far.\n    return:\n      type: System.Runtime.Remoting.Messaging.IMessageSink\n      description: The composite sink chain.\n  overload: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/IContributeServerContextSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)\n  parent: System.Runtime.Remoting.Contexts.IContributeServerContextSink\n  isExternal: false\n  name: GetServerContextSink(IMessageSink)\n  nameWithType: IContributeServerContextSink.GetServerContextSink(IMessageSink)\n  fullName: IContributeServerContextSink.GetServerContextSink(IMessageSink)\n- uid: System.Runtime.Remoting.Messaging.IMessageSink\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessageSink\n  nameWithType: IMessageSink\n  fullName: System.Runtime.Remoting.Messaging.IMessageSink\n- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink*\n  parent: System.Runtime.Remoting.Contexts.IContributeServerContextSink\n  isExternal: false\n  name: GetServerContextSink\n  nameWithType: IContributeServerContextSink.GetServerContextSink\n  fullName: IContributeServerContextSink.GetServerContextSink\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.Contexts/IContributeServerContextSink.xml\n"}