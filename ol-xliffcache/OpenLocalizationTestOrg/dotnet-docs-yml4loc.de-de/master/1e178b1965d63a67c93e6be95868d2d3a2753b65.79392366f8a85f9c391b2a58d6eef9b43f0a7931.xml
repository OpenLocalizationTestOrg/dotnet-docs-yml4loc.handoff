{"nodes":[{"content":"Evaluates whether an event should be sent to the related provider for processing.","nodes":[{"pos":[0,81],"content":"Evaluates whether an event should be sent to the related provider for processing.","nodes":[{"content":"Evaluates whether an event should be sent to the related provider for processing.","pos":[0,81]}]}],"pos":[575,657],"yaml":true},{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \n  \n This interface allows enabling or disabling the firing of a specific event. This is especially useful when you implement your own custom event and want to control the rate at which it is sent to the related provider for processing.  \n  \n> [!NOTE]\n>  This interface does not control how often the event is raised. It only controls how often the event information is sent to the provider for processing.","nodes":[{"pos":[0,378],"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.","pos":[0,378],"nodes":[{"content":"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.","pos":[0,101]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Management&gt;</ph> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.","pos":[102,294],"source":" The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data."},{"content":"It also contains supporting types that help during the management of health events.","pos":[295,378]}]}]},{"pos":[385,616],"content":"This interface allows enabling or disabling the firing of a specific event. This is especially useful when you implement your own custom event and want to control the rate at which it is sent to the related provider for processing.","nodes":[{"content":"This interface allows enabling or disabling the firing of a specific event. This is especially useful when you implement your own custom event and want to control the rate at which it is sent to the related provider for processing.","pos":[0,231],"nodes":[{"content":"This interface allows enabling or disabling the firing of a specific event.","pos":[0,75]},{"content":"This is especially useful when you implement your own custom event and want to control the rate at which it is sent to the related provider for processing.","pos":[76,231]}]}]},{"pos":[624,786],"content":"[!NOTE]\n This interface does not control how often the event is raised. It only controls how often the event information is sent to the provider for processing.","leadings":["","> "],"nodes":[{"content":" This interface does not control how often the event is raised. It only controls how often the event information is sent to the provider for processing.","pos":[8,160],"nodes":[{"content":"This interface does not control how often the event is raised.","pos":[1,63]},{"content":"It only controls how often the event information is sent to the provider for processing.","pos":[64,152]}]}]}],"pos":[668,1462],"yaml":true,"extradata":"MT"},{"content":"Evaluates whether an event should be raised.","nodes":[{"pos":[0,44],"content":"Evaluates whether an event should be raised.","nodes":[{"content":"Evaluates whether an event should be raised.","pos":[0,44]}]}],"pos":[4726,4771],"yaml":true},{"content":"If the custom event evaluator returns `true`, the event is raised and then processed by the associated provider.","nodes":[{"pos":[0,112],"content":"If the custom event evaluator returns <ph id=\"ph1\">`true`</ph>, the event is raised and then processed by the associated provider.","source":"If the custom event evaluator returns `true`, the event is raised and then processed by the associated provider."}],"pos":[4782,4895],"yaml":true,"extradata":"MT"},{"content":"The event to raise.","nodes":[{"pos":[0,19],"content":"The event to raise.","nodes":[{"content":"The event to raise.","pos":[0,19]}]}],"pos":[5618,5638],"yaml":true},{"content":"The <xref href=\"System.Web.Management.RuleFiringRecord\"></xref> containing information about the event.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Management.RuleFiringRecord\"&gt;&lt;/xref&gt;</ph> containing information about the event.","source":"The <xref href=\"System.Web.Management.RuleFiringRecord\"></xref> containing information about the event."}],"pos":[5725,5829],"yaml":true},{"content":"`true` if the event should be raised; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the event should be raised; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the event should be raised; otherwise, `false`."}],"pos":[5887,5947],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Management.IWebEventCustomEvaluator\n  commentId: T:System.Web.Management.IWebEventCustomEvaluator\n  id: IWebEventCustomEvaluator\n  children:\n  - System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)\n  langs:\n  - csharp\n  name: IWebEventCustomEvaluator\n  nameWithType: IWebEventCustomEvaluator\n  fullName: System.Web.Management.IWebEventCustomEvaluator\n  type: Interface\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Evaluates whether an event should be sent to the related provider for processing.\n  remarks: \"ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  \\n  \\n This interface allows enabling or disabling the firing of a specific event. This is especially useful when you implement your own custom event and want to control the rate at which it is sent to the related provider for processing.  \\n  \\n> [!NOTE]\\n>  This interface does not control how often the event is raised. It only controls how often the event information is sent to the provider for processing.\"\n  example:\n  - \"The following code example shows how to derive from the <xref:System.Web.Management.IWebEventCustomEvaluator> interface when creating a custom event.  \\n  \\n [!code-csharp[System.Web.Management.WebBaseEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#1)]\\n [!code-vb[System.Web.Management.WebBaseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#1)]  \\n  \\n The following is an excerpt of the configuration file that enables ASP.NET to use the <xref:System.Web.Management.IWebEventCustomEvaluator.CanFire%2A> method to decide whether the raised event must be sent to the provider for processing.  \\n  \\n```  \\n<healthMonitoring   \\n  heartBeatInterval=\\\"0\\\" enabled=\\\"true\\\">  \\n  \\n    <providers>  \\n      <add name=\\\"SampleWebEventProvider\\\"   \\n        type=\\\"SamplesAspNet.SampleEventProvider, webeventprovider, Version=1.0.1741.20369, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL\\\" />  \\n    </providers>  \\n  \\n    <profiles>  \\n      <add   \\n        name=\\\"Custom\\\"   \\n        minInstances=\\\"1\\\"   \\n        maxLimit=\\\"Infinite\\\"   \\n        minInterval=\\\"00:00:00\\\"   \\n        custom =\\\"SamplesAspNet.SampleWebRequestEvent,webrequestevent\\\"   \\n        />  \\n    </profiles>  \\n  \\n    <eventMappings>  \\n  \\n      <add name=\\\"SampleWebRequestEvent\\\" type=\\\"SamplesAspNet.SampleWebRequestEvent,webrequestevent, Version=1.0.1759.20533, Culture=neutral, PublicKeyToken=0d72899b07049076, processorArchitecture=MSIL\\\" />  \\n  \\n    </eventMappings>  \\n  \\n    <rules>  \\n      <clear />  \\n  \\n        <add name=\\\"Custom Web Request Event\\\"   \\n          eventName=\\\"SampleWebRequestEvent\\\"  \\n          provider=\\\"SampleWebEventProvider\\\" profile=\\\"Custom\\\" />  \\n    </rules>  \\n  \\n</healthMonitoring>  \\n```\"\n  syntax:\n    content: public interface IWebEventCustomEvaluator\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/IWebEventCustomEvaluator.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\n- uid: System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)\n  commentId: M:System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)\n  id: CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)\n  parent: System.Web.Management.IWebEventCustomEvaluator\n  langs:\n  - csharp\n  name: CanFire(WebBaseEvent, RuleFiringRecord)\n  nameWithType: IWebEventCustomEvaluator.CanFire(WebBaseEvent, RuleFiringRecord)\n  fullName: IWebEventCustomEvaluator.CanFire(WebBaseEvent, RuleFiringRecord)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.Management\n  summary: Evaluates whether an event should be raised.\n  remarks: If the custom event evaluator returns `true`, the event is raised and then processed by the associated provider.\n  example:\n  - \"The following code example shows a custom implementation of the <xref:System.Web.Management.IWebEventCustomEvaluator.CanFire%2A> method.  \\n  \\n [!code-csharp[System.Web.Management.WebBaseEvent#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/CS/webbaseevent.cs#22)]\\n [!code-vb[System.Web.Management.WebBaseEvent#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseEvent/VB/webbaseevent.vb#22)]\"\n  syntax:\n    content: public bool CanFire (System.Web.Management.WebBaseEvent raisedEvent, System.Web.Management.RuleFiringRecord record);\n    parameters:\n    - id: raisedEvent\n      type: System.Web.Management.WebBaseEvent\n      description: The event to raise.\n    - id: record\n      type: System.Web.Management.RuleFiringRecord\n      description: The <xref href=\"System.Web.Management.RuleFiringRecord\"></xref> containing information about the event.\n    return:\n      type: System.Boolean\n      description: '`true` if the event should be raised; otherwise, `false`.'\n  overload: System.Web.Management.IWebEventCustomEvaluator.CanFire*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/IWebEventCustomEvaluator.xml\n  ms.technology:\n  - dotnet-webforms\n  author: tdykstra\n  ms.author: tdykstra\n  manager: wpickett\nreferences:\n- uid: System.Web.Management.IWebEventCustomEvaluator.CanFire(System.Web.Management.WebBaseEvent,System.Web.Management.RuleFiringRecord)\n  parent: System.Web.Management.IWebEventCustomEvaluator\n  isExternal: false\n  name: CanFire(WebBaseEvent, RuleFiringRecord)\n  nameWithType: IWebEventCustomEvaluator.CanFire(WebBaseEvent, RuleFiringRecord)\n  fullName: IWebEventCustomEvaluator.CanFire(WebBaseEvent, RuleFiringRecord)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Web.Management.WebBaseEvent\n  parent: System.Web.Management\n  isExternal: false\n  name: WebBaseEvent\n  nameWithType: WebBaseEvent\n  fullName: System.Web.Management.WebBaseEvent\n- uid: System.Web.Management.RuleFiringRecord\n  parent: System.Web.Management\n  isExternal: false\n  name: RuleFiringRecord\n  nameWithType: RuleFiringRecord\n  fullName: System.Web.Management.RuleFiringRecord\n- uid: System.Web.Management.IWebEventCustomEvaluator.CanFire*\n  parent: System.Web.Management.IWebEventCustomEvaluator\n  isExternal: false\n  name: CanFire\n  nameWithType: IWebEventCustomEvaluator.CanFire\n  fullName: IWebEventCustomEvaluator.CanFire\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Management/IWebEventCustomEvaluator.xml\n"}