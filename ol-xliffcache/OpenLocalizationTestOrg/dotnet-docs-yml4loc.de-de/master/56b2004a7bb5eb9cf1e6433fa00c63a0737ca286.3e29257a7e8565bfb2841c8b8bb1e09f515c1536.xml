{"nodes":[{"content":"Encapsulates the name of an encryption algorithm.","nodes":[{"pos":[0,49],"content":"Encapsulates the name of an encryption algorithm.","nodes":[{"content":"Encapsulates the name of an encryption algorithm.","pos":[0,49]}]}],"pos":[1925,1975],"yaml":true},{"content":"The <xref:System.Security.Cryptography.CngAlgorithm> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.  \n  \n The static properties return <xref:System.Security.Cryptography.CngAlgorithm> objects. Each object's internal string is initialized to the algorithm name that corresponds to the name of the static property.  \n  \n You can also use this class to create objects for algorithm types that are not covered by the static properties.  \n  \n Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) accept <xref:System.Security.Cryptography.CngAlgorithm> objects through an `algorithm` parameter. When the class receives the <xref:System.Security.Cryptography.CngAlgorithm> object, it retrieves the embedded algorithm name by calling the object's <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> property.  \n  \n Therefore, <xref:System.Security.Cryptography.CngAlgorithm> serves as an enumeration of well-known algorithms. It lets you specify a well-known algorithm by using a strongly typed value instead of a string.","nodes":[{"pos":[0,193],"content":"The <xref:System.Security.Cryptography.CngAlgorithm> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.","nodes":[{"content":"The <xref:System.Security.Cryptography.CngAlgorithm> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.","pos":[0,193],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithm&gt;</ph> class is a utility class.","pos":[0,78],"source":"The <xref:System.Security.Cryptography.CngAlgorithm> class is a utility class."},{"content":"It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.","pos":[79,193]}]}]},{"pos":[200,406],"content":"The static properties return <xref:System.Security.Cryptography.CngAlgorithm> objects. Each object's internal string is initialized to the algorithm name that corresponds to the name of the static property.","nodes":[{"content":"The static properties return <xref:System.Security.Cryptography.CngAlgorithm> objects. Each object's internal string is initialized to the algorithm name that corresponds to the name of the static property.","pos":[0,206],"nodes":[{"content":"The static properties return <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithm&gt;</ph> objects.","pos":[0,86],"source":"The static properties return <xref:System.Security.Cryptography.CngAlgorithm> objects."},{"content":"Each object's internal string is initialized to the algorithm name that corresponds to the name of the static property.","pos":[87,206]}]}]},{"pos":[413,525],"content":"You can also use this class to create objects for algorithm types that are not covered by the static properties.","nodes":[{"content":"You can also use this class to create objects for algorithm types that are not covered by the static properties.","pos":[0,112]}]},{"pos":[532,955],"content":"Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) accept <xref:System.Security.Cryptography.CngAlgorithm> objects through an `algorithm` parameter. When the class receives the <xref:System.Security.Cryptography.CngAlgorithm> object, it retrieves the embedded algorithm name by calling the object's <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> property.","nodes":[{"content":"Several Cryptography Next Generation (CNG) classes (such as <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph>) accept <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngAlgorithm&gt;</ph> objects through an <ph id=\"ph3\">`algorithm`</ph> parameter.","pos":[0,201],"source":"Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) accept <xref:System.Security.Cryptography.CngAlgorithm> objects through an `algorithm` parameter."},{"content":"When the class receives the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithm&gt;</ph> object, it retrieves the embedded algorithm name by calling the object's <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A&gt;</ph> property.","pos":[202,423],"source":" When the class receives the <xref:System.Security.Cryptography.CngAlgorithm> object, it retrieves the embedded algorithm name by calling the object's <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> property."}]},{"pos":[962,1168],"content":"Therefore, <xref:System.Security.Cryptography.CngAlgorithm> serves as an enumeration of well-known algorithms. It lets you specify a well-known algorithm by using a strongly typed value instead of a string.","nodes":[{"content":"Therefore, <xref:System.Security.Cryptography.CngAlgorithm> serves as an enumeration of well-known algorithms. It lets you specify a well-known algorithm by using a strongly typed value instead of a string.","pos":[0,206],"nodes":[{"content":"Therefore, <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithm&gt;</ph> serves as an enumeration of well-known algorithms.","pos":[0,110],"source":"Therefore, <xref:System.Security.Cryptography.CngAlgorithm> serves as an enumeration of well-known algorithms."},{"content":"It lets you specify a well-known algorithm by using a strongly typed value instead of a string.","pos":[111,206]}]}]}],"pos":[1986,3165],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> class.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> class."}],"pos":[4877,4981],"yaml":true},{"content":"Instances of the <xref:System.Security.Cryptography.CngAlgorithm> class internally maintain the algorithm name that is specified by the `algorithm` parameter.  \n  \n The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithm> objects for algorithm types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithm> class. This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available.","nodes":[{"pos":[0,158],"content":"Instances of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithm&gt;</ph> class internally maintain the algorithm name that is specified by the <ph id=\"ph2\">`algorithm`</ph> parameter.","source":"Instances of the <xref:System.Security.Cryptography.CngAlgorithm> class internally maintain the algorithm name that is specified by the `algorithm` parameter."},{"pos":[165,665],"content":"The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithm> objects for algorithm types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithm> class. This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available.","nodes":[{"content":"The primary purpose of this constructor is to provide a method for creating <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithm&gt;</ph> objects for algorithm types that are not represented by the static properties of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngAlgorithm&gt;</ph> class.","pos":[0,265],"source":"The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithm> objects for algorithm types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithm> class."},{"content":"This capacity enables future <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available.","pos":[266,500],"source":" This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available."}]}],"pos":[4992,5662],"yaml":true,"extradata":"MT"},{"content":"The name of the algorithm to initialize.","nodes":[{"pos":[0,40],"content":"The name of the algorithm to initialize.","nodes":[{"content":"The name of the algorithm to initialize.","pos":[0,40]}]}],"pos":[5806,5847],"yaml":true},{"content":"The <code>algorithm</code> parameter is `null`.","nodes":[{"pos":[0,47],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>algorithm</code> parameter is `null`."}],"pos":[6024,6072],"yaml":true},{"content":"The <code>algorithm</code> parameter length is 0 (zero).","nodes":[{"pos":[0,56],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithm</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter length is 0 (zero).","source":"The <code>algorithm</code> parameter length is 0 (zero)."}],"pos":[6166,6223],"yaml":true},{"content":"Gets the algorithm name that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies.","nodes":[{"pos":[0,121],"content":"Gets the algorithm name that the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object specifies.","source":"Gets the algorithm name that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies."}],"pos":[7441,7563],"yaml":true},{"content":"The embedded algorithm name.","nodes":[{"pos":[0,28],"content":"The embedded algorithm name.","nodes":[{"content":"The embedded algorithm name.","pos":[0,28]}]}],"pos":[7676,7705],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm whose curve is described via a key property.","nodes":[{"pos":[0,199],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm whose curve is described via a key property.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm whose curve is described via a key property."}],"pos":[9041,9241],"yaml":true},{"content":"An object that specifies an ECDH key exchange algorithm whose curve is described via a key property.","nodes":[{"pos":[0,100],"content":"An object that specifies an ECDH key exchange algorithm whose curve is described via a key property.","nodes":[{"content":"An object that specifies an ECDH key exchange algorithm whose curve is described via a key property.","pos":[0,100]}]}],"pos":[9430,9531],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve.","nodes":[{"pos":[0,181],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve."}],"pos":[10591,10773],"yaml":true},{"content":"An object that specifies an ECDH algorithm that uses the P-256 curve.","nodes":[{"pos":[0,69],"content":"An object that specifies an ECDH algorithm that uses the P-256 curve.","nodes":[{"content":"An object that specifies an ECDH algorithm that uses the P-256 curve.","pos":[0,69]}]}],"pos":[10966,11036],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve.","nodes":[{"pos":[0,181],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve."}],"pos":[12406,12588],"yaml":true},{"content":"An object that specifies an ECDH algorithm that uses the P-384 curve.","nodes":[{"pos":[0,69],"content":"An object that specifies an ECDH algorithm that uses the P-384 curve.","nodes":[{"content":"An object that specifies an ECDH algorithm that uses the P-384 curve.","pos":[0,69]}]}],"pos":[12781,12851],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve.","nodes":[{"pos":[0,181],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve."}],"pos":[14221,14403],"yaml":true},{"content":"An object that specifies an ECDH algorithm that uses the P-521 curve.","nodes":[{"pos":[0,69],"content":"An object that specifies an ECDH algorithm that uses the P-521 curve.","nodes":[{"content":"An object that specifies an ECDH algorithm that uses the P-521 curve.","pos":[0,69]}]}],"pos":[14596,14666],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) whose curve is described via a key property.","nodes":[{"pos":[0,190],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) whose curve is described via a key property.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) whose curve is described via a key property."}],"pos":[15952,16143],"yaml":true},{"content":"An object that specifies an ECDSA whose curve is described via a key property.","nodes":[{"pos":[0,78],"content":"An object that specifies an ECDSA whose curve is described via a key property.","nodes":[{"content":"An object that specifies an ECDSA whose curve is described via a key property.","pos":[0,78]}]}],"pos":[16322,16401],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve.","nodes":[{"pos":[0,172],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve."}],"pos":[17391,17564],"yaml":true},{"content":"An object that specifies an ECDSA algorithm that uses the P-256 curve.","nodes":[{"pos":[0,70],"content":"An object that specifies an ECDSA algorithm that uses the P-256 curve.","nodes":[{"content":"An object that specifies an ECDSA algorithm that uses the P-256 curve.","pos":[0,70]}]}],"pos":[17747,17818],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve.","nodes":[{"pos":[0,172],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve."}],"pos":[19118,19291],"yaml":true},{"content":"An object that specifies an ECDSA algorithm that uses the P-384 curve.","nodes":[{"pos":[0,70],"content":"An object that specifies an ECDSA algorithm that uses the P-384 curve.","nodes":[{"content":"An object that specifies an ECDSA algorithm that uses the P-384 curve.","pos":[0,70]}]}],"pos":[19474,19545],"yaml":true},{"content":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve.","nodes":[{"pos":[0,176],"content":"Gets a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve.","source":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve."}],"pos":[20845,21022],"yaml":true},{"content":"An object that specifies an ECDSA algorithm that uses the P-521 curve.","nodes":[{"pos":[0,70],"content":"An object that specifies an ECDSA algorithm that uses the P-521 curve.","nodes":[{"content":"An object that specifies an ECDSA algorithm that uses the P-521 curve.","pos":[0,70]}]}],"pos":[21205,21276],"yaml":true},{"content":"Compares the specified <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.","nodes":[{"pos":[0,178],"content":"Compares the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object to the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object.","source":"Compares the specified <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object."}],"pos":[22727,22906],"yaml":true},{"content":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.","nodes":[{"pos":[0,110],"content":"An object to be compared to the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object.","source":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object."}],"pos":[23104,23215],"yaml":true},{"content":"`true` if the <code>other</code> parameter specifies the same algorithm as the current object; otherwise, `false`.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specifies the same algorithm as the current object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>other</code> parameter specifies the same algorithm as the current object; otherwise, `false`."}],"pos":[23273,23390],"yaml":true},{"content":"Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.","nodes":[{"pos":[0,115],"content":"Compares the specified object to the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object.","source":"Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object."}],"pos":[24736,24852],"yaml":true},{"content":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.","nodes":[{"pos":[0,110],"content":"An object to be compared to the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object.","source":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object."}],"pos":[24992,25103],"yaml":true},{"content":"`true` if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> that specifies the same algorithm as the current object; otherwise, `false`.","nodes":[{"pos":[0,185],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> that specifies the same algorithm as the current object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> that specifies the same algorithm as the current object; otherwise, `false`."}],"pos":[25161,25349],"yaml":true},{"content":"Generates a hash value for the algorithm name that is embedded in the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.","nodes":[{"pos":[0,148],"content":"Generates a hash value for the algorithm name that is embedded in the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object.","source":"Generates a hash value for the algorithm name that is embedded in the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object."}],"pos":[26662,26811],"yaml":true},{"content":"The hash value of the embedded algorithm name.","nodes":[{"pos":[0,46],"content":"The hash value of the embedded algorithm name.","nodes":[{"content":"The hash value of the embedded algorithm name.","pos":[0,46]}]}],"pos":[26945,26992],"yaml":true},{"content":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Message Digest 5 (MD5) hash algorithm.","nodes":[{"pos":[0,138],"content":"Gets a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies the Message Digest 5 (MD5) hash algorithm.","source":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Message Digest 5 (MD5) hash algorithm."}],"pos":[28258,28397],"yaml":true},{"content":"An object that specifies the MD5 algorithm.","nodes":[{"pos":[0,43],"content":"An object that specifies the MD5 algorithm.","nodes":[{"content":"An object that specifies the MD5 algorithm.","pos":[0,43]}]}],"pos":[28574,28618],"yaml":true},{"content":"Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> objects specify the same algorithm name.","nodes":[{"pos":[0,126],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> objects specify the same algorithm name.","source":"Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> objects specify the same algorithm name."}],"pos":[30263,30390],"yaml":true},{"content":"An object that specifies an algorithm name.","nodes":[{"pos":[0,43],"content":"An object that specifies an algorithm name.","nodes":[{"content":"An object that specifies an algorithm name.","pos":[0,43]}]}],"pos":[30647,30691],"yaml":true},{"content":"A second object, to be compared to the object that is identified by the <code>left</code> parameter.","nodes":[{"pos":[0,100],"content":"A second object, to be compared to the object that is identified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A second object, to be compared to the object that is identified by the <code>left</code> parameter."}],"pos":[30780,30881],"yaml":true},{"content":"`true` if the two objects specify the same algorithm name; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if the two objects specify the same algorithm name; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two objects specify the same algorithm name; otherwise, `false`."}],"pos":[30939,31020],"yaml":true},{"content":"Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> objects do not specify the same algorithm.","nodes":[{"pos":[0,128],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> objects do not specify the same algorithm.","source":"Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> objects do not specify the same algorithm."}],"pos":[32685,32814],"yaml":true},{"content":"An object that specifies an algorithm name.","nodes":[{"pos":[0,43],"content":"An object that specifies an algorithm name.","nodes":[{"content":"An object that specifies an algorithm name.","pos":[0,43]}]}],"pos":[33073,33117],"yaml":true},{"content":"A second object, to be compared to the object that is identified by the <code>left</code> parameter.","nodes":[{"pos":[0,100],"content":"A second object, to be compared to the object that is identified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A second object, to be compared to the object that is identified by the <code>left</code> parameter."}],"pos":[33206,33307],"yaml":true},{"content":"`true` if the two objects do not specify the same algorithm name; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the two objects do not specify the same algorithm name; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two objects do not specify the same algorithm name; otherwise, `false`."}],"pos":[33365,33453],"yaml":true},{"content":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the RSA hash algorithm.","nodes":[{"pos":[0,119],"content":"Gets a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies the RSA hash algorithm.","source":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the RSA hash algorithm."}],"pos":[34721,34841],"yaml":true},{"content":"An object that specifies the RSA algorithm.","nodes":[{"pos":[0,43],"content":"An object that specifies the RSA algorithm.","nodes":[{"content":"An object that specifies the RSA algorithm.","pos":[0,43]}]}],"pos":[35018,35062],"yaml":true},{"content":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm.","nodes":[{"pos":[0,142],"content":"Gets a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm.","source":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm."}],"pos":[36192,36335],"yaml":true},{"content":"An object that specifies the SHA-1 algorithm.","nodes":[{"pos":[0,45],"content":"An object that specifies the SHA-1 algorithm.","nodes":[{"content":"An object that specifies the SHA-1 algorithm.","pos":[0,45]}]}],"pos":[36513,36559],"yaml":true},{"content":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm.","nodes":[{"pos":[0,146],"content":"Gets a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm.","source":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm."}],"pos":[37836,37983],"yaml":true},{"content":"An object that specifies the SHA-256 algorithm.","nodes":[{"pos":[0,47],"content":"An object that specifies the SHA-256 algorithm.","nodes":[{"content":"An object that specifies the SHA-256 algorithm.","pos":[0,47]}]}],"pos":[38163,38211],"yaml":true},{"content":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm.","nodes":[{"pos":[0,146],"content":"Gets a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm.","source":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm."}],"pos":[39490,39637],"yaml":true},{"content":"An object that specifies the SHA-384 algorithm.","nodes":[{"pos":[0,47],"content":"An object that specifies the SHA-384 algorithm.","nodes":[{"content":"An object that specifies the SHA-384 algorithm.","pos":[0,47]}]}],"pos":[39817,39865],"yaml":true},{"content":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm.","nodes":[{"pos":[0,146],"content":"Gets a new <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm.","source":"Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm."}],"pos":[41144,41291],"yaml":true},{"content":"An object that specifies the SHA-512 algorithm.","nodes":[{"pos":[0,47],"content":"An object that specifies the SHA-512 algorithm.","nodes":[{"content":"An object that specifies the SHA-512 algorithm.","pos":[0,47]}]}],"pos":[41471,41519],"yaml":true},{"content":"Gets the name of the algorithm that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies.","nodes":[{"pos":[0,128],"content":"Gets the name of the algorithm that the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object specifies.","source":"Gets the name of the algorithm that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies."}],"pos":[42814,42943],"yaml":true},{"content":"The embedded algorithm name.","nodes":[{"pos":[0,28],"content":"The embedded algorithm name.","nodes":[{"content":"The embedded algorithm name.","pos":[0,28]}]}],"pos":[43078,43107],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CngAlgorithm\n  commentId: T:System.Security.Cryptography.CngAlgorithm\n  id: CngAlgorithm\n  children:\n  - System.Security.Cryptography.CngAlgorithm.#ctor(System.String)\n  - System.Security.Cryptography.CngAlgorithm.Algorithm\n  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellman\n  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256\n  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384\n  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521\n  - System.Security.Cryptography.CngAlgorithm.ECDsa\n  - System.Security.Cryptography.CngAlgorithm.ECDsaP256\n  - System.Security.Cryptography.CngAlgorithm.ECDsaP384\n  - System.Security.Cryptography.CngAlgorithm.ECDsaP521\n  - System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)\n  - System.Security.Cryptography.CngAlgorithm.Equals(System.Object)\n  - System.Security.Cryptography.CngAlgorithm.GetHashCode\n  - System.Security.Cryptography.CngAlgorithm.MD5\n  - System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  - System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  - System.Security.Cryptography.CngAlgorithm.Rsa\n  - System.Security.Cryptography.CngAlgorithm.Sha1\n  - System.Security.Cryptography.CngAlgorithm.Sha256\n  - System.Security.Cryptography.CngAlgorithm.Sha384\n  - System.Security.Cryptography.CngAlgorithm.Sha512\n  - System.Security.Cryptography.CngAlgorithm.ToString\n  langs:\n  - csharp\n  name: CngAlgorithm\n  nameWithType: CngAlgorithm\n  fullName: System.Security.Cryptography.CngAlgorithm\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Encapsulates the name of an encryption algorithm.\n  remarks: \"The <xref:System.Security.Cryptography.CngAlgorithm> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained, algorithm name string.  \\n  \\n The static properties return <xref:System.Security.Cryptography.CngAlgorithm> objects. Each object's internal string is initialized to the algorithm name that corresponds to the name of the static property.  \\n  \\n You can also use this class to create objects for algorithm types that are not covered by the static properties.  \\n  \\n Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) accept <xref:System.Security.Cryptography.CngAlgorithm> objects through an `algorithm` parameter. When the class receives the <xref:System.Security.Cryptography.CngAlgorithm> object, it retrieves the embedded algorithm name by calling the object's <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A> property.  \\n  \\n Therefore, <xref:System.Security.Cryptography.CngAlgorithm> serves as an enumeration of well-known algorithms. It lets you specify a well-known algorithm by using a strongly typed value instead of a string.\"\n  syntax:\n    content: 'public sealed class CngAlgorithm : IEquatable<System.Security.Cryptography.CngAlgorithm>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable{System.Security.Cryptography.CngAlgorithm}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)\n  commentId: M:System.Security.Cryptography.CngAlgorithm.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: CngAlgorithm(String)\n  nameWithType: CngAlgorithm.CngAlgorithm(String)\n  fullName: CngAlgorithm.CngAlgorithm(String)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> class.\n  remarks: \"Instances of the <xref:System.Security.Cryptography.CngAlgorithm> class internally maintain the algorithm name that is specified by the `algorithm` parameter.  \\n  \\n The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithm> objects for algorithm types that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithm> class. This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithms, which can be accessed just like the algorithms that are currently available.\"\n  syntax:\n    content: public CngAlgorithm (string algorithm);\n    parameters:\n    - id: algorithm\n      type: System.String\n      description: The name of the algorithm to initialize.\n  overload: System.Security.Cryptography.CngAlgorithm.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>algorithm</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>algorithm</code> parameter length is 0 (zero).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.Algorithm\n  commentId: P:System.Security.Cryptography.CngAlgorithm.Algorithm\n  id: Algorithm\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: Algorithm\n  nameWithType: CngAlgorithm.Algorithm\n  fullName: CngAlgorithm.Algorithm\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets the algorithm name that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies.\n  syntax:\n    content: public string Algorithm { get; }\n    return:\n      type: System.String\n      description: The embedded algorithm name.\n  overload: System.Security.Cryptography.CngAlgorithm.Algorithm*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellman\n  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellman\n  id: ECDiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: ECDiffieHellman\n  nameWithType: CngAlgorithm.ECDiffieHellman\n  fullName: CngAlgorithm.ECDiffieHellman\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm whose curve is described via a key property.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellman { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an ECDH key exchange algorithm whose curve is described via a key property.\n  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellman*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256\n  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256\n  id: ECDiffieHellmanP256\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: ECDiffieHellmanP256\n  nameWithType: CngAlgorithm.ECDiffieHellmanP256\n  fullName: CngAlgorithm.ECDiffieHellmanP256\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-256 curve.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an ECDH algorithm that uses the P-256 curve.\n  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384\n  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384\n  id: ECDiffieHellmanP384\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: ECDiffieHellmanP384\n  nameWithType: CngAlgorithm.ECDiffieHellmanP384\n  fullName: CngAlgorithm.ECDiffieHellmanP384\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-384 curve.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an ECDH algorithm that uses the P-384 curve.\n  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521\n  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521\n  id: ECDiffieHellmanP521\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: ECDiffieHellmanP521\n  nameWithType: CngAlgorithm.ECDiffieHellmanP521\n  fullName: CngAlgorithm.ECDiffieHellmanP521\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Diffie-Hellman (ECDH) key exchange algorithm that uses the P-521 curve.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an ECDH algorithm that uses the P-521 curve.\n  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsa\n  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDsa\n  id: ECDsa\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: ECDsa\n  nameWithType: CngAlgorithm.ECDsa\n  fullName: CngAlgorithm.ECDsa\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) whose curve is described via a key property.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm ECDsa { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an ECDSA whose curve is described via a key property.\n  overload: System.Security.Cryptography.CngAlgorithm.ECDsa*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256\n  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDsaP256\n  id: ECDsaP256\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: ECDsaP256\n  nameWithType: CngAlgorithm.ECDsaP256\n  fullName: CngAlgorithm.ECDsaP256\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-256 curve.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP256 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an ECDSA algorithm that uses the P-256 curve.\n  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP256*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384\n  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDsaP384\n  id: ECDsaP384\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: ECDsaP384\n  nameWithType: CngAlgorithm.ECDsaP384\n  fullName: CngAlgorithm.ECDsaP384\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-384 curve.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP384 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an ECDSA algorithm that uses the P-384 curve.\n  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP384*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521\n  commentId: P:System.Security.Cryptography.CngAlgorithm.ECDsaP521\n  id: ECDsaP521\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: ECDsaP521\n  nameWithType: CngAlgorithm.ECDsaP521\n  fullName: CngAlgorithm.ECDsaP521\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies an Elliptic Curve Digital Signature Algorithm (ECDSA) that uses the P-521 curve.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP521 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an ECDSA algorithm that uses the P-521 curve.\n  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP521*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)\n  commentId: M:System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)\n  id: Equals(System.Security.Cryptography.CngAlgorithm)\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: Equals(CngAlgorithm)\n  nameWithType: CngAlgorithm.Equals(CngAlgorithm)\n  fullName: CngAlgorithm.Equals(CngAlgorithm)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Compares the specified <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.CngAlgorithm other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>other</code> parameter specifies the same algorithm as the current object; otherwise, `false`.'\n  overload: System.Security.Cryptography.CngAlgorithm.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)\n  commentId: M:System.Security.Cryptography.CngAlgorithm.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CngAlgorithm.Equals(Object)\n  fullName: CngAlgorithm.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> that specifies the same algorithm as the current object; otherwise, `false`.'\n  overload: System.Security.Cryptography.CngAlgorithm.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode\n  commentId: M:System.Security.Cryptography.CngAlgorithm.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CngAlgorithm.GetHashCode()\n  fullName: CngAlgorithm.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Generates a hash value for the algorithm name that is embedded in the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash value of the embedded algorithm name.\n  overload: System.Security.Cryptography.CngAlgorithm.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.MD5\n  commentId: P:System.Security.Cryptography.CngAlgorithm.MD5\n  id: MD5\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: MD5\n  nameWithType: CngAlgorithm.MD5\n  fullName: CngAlgorithm.MD5\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Message Digest 5 (MD5) hash algorithm.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm MD5 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies the MD5 algorithm.\n  overload: System.Security.Cryptography.CngAlgorithm.MD5*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  commentId: M:System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  id: op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: op_Equality(CngAlgorithm, CngAlgorithm)\n  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm, CngAlgorithm)\n  fullName: CngAlgorithm.op_Equality(CngAlgorithm, CngAlgorithm)\n  type: Operator\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> objects specify the same algorithm name.\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an algorithm name.\n    - id: right\n      type: System.Security.Cryptography.CngAlgorithm\n      description: A second object, to be compared to the object that is identified by the <code>left</code> parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the two objects specify the same algorithm name; otherwise, `false`.'\n  overload: System.Security.Cryptography.CngAlgorithm.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  commentId: M:System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  id: op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: op_Inequality(CngAlgorithm, CngAlgorithm)\n  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm, CngAlgorithm)\n  fullName: CngAlgorithm.op_Inequality(CngAlgorithm, CngAlgorithm)\n  type: Operator\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> objects do not specify the same algorithm.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies an algorithm name.\n    - id: right\n      type: System.Security.Cryptography.CngAlgorithm\n      description: A second object, to be compared to the object that is identified by the <code>left</code> parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the two objects do not specify the same algorithm name; otherwise, `false`.'\n  overload: System.Security.Cryptography.CngAlgorithm.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.Rsa\n  commentId: P:System.Security.Cryptography.CngAlgorithm.Rsa\n  id: Rsa\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: Rsa\n  nameWithType: CngAlgorithm.Rsa\n  fullName: CngAlgorithm.Rsa\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the RSA hash algorithm.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm Rsa { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies the RSA algorithm.\n  overload: System.Security.Cryptography.CngAlgorithm.Rsa*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.Sha1\n  commentId: P:System.Security.Cryptography.CngAlgorithm.Sha1\n  id: Sha1\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: Sha1\n  nameWithType: CngAlgorithm.Sha1\n  fullName: CngAlgorithm.Sha1\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 1 (SHA-1) algorithm.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm Sha1 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies the SHA-1 algorithm.\n  overload: System.Security.Cryptography.CngAlgorithm.Sha1*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.Sha256\n  commentId: P:System.Security.Cryptography.CngAlgorithm.Sha256\n  id: Sha256\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: Sha256\n  nameWithType: CngAlgorithm.Sha256\n  fullName: CngAlgorithm.Sha256\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 256 (SHA-256) algorithm.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm Sha256 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies the SHA-256 algorithm.\n  overload: System.Security.Cryptography.CngAlgorithm.Sha256*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.Sha384\n  commentId: P:System.Security.Cryptography.CngAlgorithm.Sha384\n  id: Sha384\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: Sha384\n  nameWithType: CngAlgorithm.Sha384\n  fullName: CngAlgorithm.Sha384\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 384 (SHA-384) algorithm.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm Sha384 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies the SHA-384 algorithm.\n  overload: System.Security.Cryptography.CngAlgorithm.Sha384*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.Sha512\n  commentId: P:System.Security.Cryptography.CngAlgorithm.Sha512\n  id: Sha512\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: Sha512\n  nameWithType: CngAlgorithm.Sha512\n  fullName: CngAlgorithm.Sha512\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a new <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object that specifies the Secure Hash Algorithm 512 (SHA-512) algorithm.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithm Sha512 { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: An object that specifies the SHA-512 algorithm.\n  overload: System.Security.Cryptography.CngAlgorithm.Sha512*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithm.ToString\n  commentId: M:System.Security.Cryptography.CngAlgorithm.ToString\n  id: ToString\n  parent: System.Security.Cryptography.CngAlgorithm\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CngAlgorithm.ToString()\n  fullName: CngAlgorithm.ToString()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the algorithm that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The embedded algorithm name.\n  overload: System.Security.Cryptography.CngAlgorithm.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: CngAlgorithm(String)\n  nameWithType: CngAlgorithm.CngAlgorithm(String)\n  fullName: CngAlgorithm.CngAlgorithm(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngAlgorithm.Algorithm\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Algorithm\n  nameWithType: CngAlgorithm.Algorithm\n  fullName: CngAlgorithm.Algorithm\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDiffieHellman\n  nameWithType: CngAlgorithm.ECDiffieHellman\n  fullName: CngAlgorithm.ECDiffieHellman\n- uid: System.Security.Cryptography.CngAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithm\n  nameWithType: CngAlgorithm\n  fullName: System.Security.Cryptography.CngAlgorithm\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDiffieHellmanP256\n  nameWithType: CngAlgorithm.ECDiffieHellmanP256\n  fullName: CngAlgorithm.ECDiffieHellmanP256\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDiffieHellmanP384\n  nameWithType: CngAlgorithm.ECDiffieHellmanP384\n  fullName: CngAlgorithm.ECDiffieHellmanP384\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDiffieHellmanP521\n  nameWithType: CngAlgorithm.ECDiffieHellmanP521\n  fullName: CngAlgorithm.ECDiffieHellmanP521\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsa\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDsa\n  nameWithType: CngAlgorithm.ECDsa\n  fullName: CngAlgorithm.ECDsa\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDsaP256\n  nameWithType: CngAlgorithm.ECDsaP256\n  fullName: CngAlgorithm.ECDsaP256\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDsaP384\n  nameWithType: CngAlgorithm.ECDsaP384\n  fullName: CngAlgorithm.ECDsaP384\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDsaP521\n  nameWithType: CngAlgorithm.ECDsaP521\n  fullName: CngAlgorithm.ECDsaP521\n- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Equals(CngAlgorithm)\n  nameWithType: CngAlgorithm.Equals(CngAlgorithm)\n  fullName: CngAlgorithm.Equals(CngAlgorithm)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CngAlgorithm.Equals(Object)\n  fullName: CngAlgorithm.Equals(Object)\n- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CngAlgorithm.GetHashCode()\n  fullName: CngAlgorithm.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CngAlgorithm.MD5\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: MD5\n  nameWithType: CngAlgorithm.MD5\n  fullName: CngAlgorithm.MD5\n- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: op_Equality(CngAlgorithm, CngAlgorithm)\n  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm, CngAlgorithm)\n  fullName: CngAlgorithm.op_Equality(CngAlgorithm, CngAlgorithm)\n- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: op_Inequality(CngAlgorithm, CngAlgorithm)\n  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm, CngAlgorithm)\n  fullName: CngAlgorithm.op_Inequality(CngAlgorithm, CngAlgorithm)\n- uid: System.Security.Cryptography.CngAlgorithm.Rsa\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Rsa\n  nameWithType: CngAlgorithm.Rsa\n  fullName: CngAlgorithm.Rsa\n- uid: System.Security.Cryptography.CngAlgorithm.Sha1\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Sha1\n  nameWithType: CngAlgorithm.Sha1\n  fullName: CngAlgorithm.Sha1\n- uid: System.Security.Cryptography.CngAlgorithm.Sha256\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Sha256\n  nameWithType: CngAlgorithm.Sha256\n  fullName: CngAlgorithm.Sha256\n- uid: System.Security.Cryptography.CngAlgorithm.Sha384\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Sha384\n  nameWithType: CngAlgorithm.Sha384\n  fullName: CngAlgorithm.Sha384\n- uid: System.Security.Cryptography.CngAlgorithm.Sha512\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Sha512\n  nameWithType: CngAlgorithm.Sha512\n  fullName: CngAlgorithm.Sha512\n- uid: System.Security.Cryptography.CngAlgorithm.ToString\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ToString()\n  nameWithType: CngAlgorithm.ToString()\n  fullName: CngAlgorithm.ToString()\n- uid: System.Security.Cryptography.CngAlgorithm.#ctor*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: CngAlgorithm\n  nameWithType: CngAlgorithm.CngAlgorithm\n  fullName: CngAlgorithm.CngAlgorithm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.Algorithm*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Algorithm\n  nameWithType: CngAlgorithm.Algorithm\n  fullName: CngAlgorithm.Algorithm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellman*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDiffieHellman\n  nameWithType: CngAlgorithm.ECDiffieHellman\n  fullName: CngAlgorithm.ECDiffieHellman\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDiffieHellmanP256\n  nameWithType: CngAlgorithm.ECDiffieHellmanP256\n  fullName: CngAlgorithm.ECDiffieHellmanP256\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDiffieHellmanP384\n  nameWithType: CngAlgorithm.ECDiffieHellmanP384\n  fullName: CngAlgorithm.ECDiffieHellmanP384\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDiffieHellmanP521\n  nameWithType: CngAlgorithm.ECDiffieHellmanP521\n  fullName: CngAlgorithm.ECDiffieHellmanP521\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsa*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDsa\n  nameWithType: CngAlgorithm.ECDsa\n  fullName: CngAlgorithm.ECDsa\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDsaP256\n  nameWithType: CngAlgorithm.ECDsaP256\n  fullName: CngAlgorithm.ECDsaP256\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDsaP384\n  nameWithType: CngAlgorithm.ECDsaP384\n  fullName: CngAlgorithm.ECDsaP384\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ECDsaP521\n  nameWithType: CngAlgorithm.ECDsaP521\n  fullName: CngAlgorithm.ECDsaP521\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.Equals*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Equals\n  nameWithType: CngAlgorithm.Equals\n  fullName: CngAlgorithm.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CngAlgorithm.GetHashCode\n  fullName: CngAlgorithm.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.MD5*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: MD5\n  nameWithType: CngAlgorithm.MD5\n  fullName: CngAlgorithm.MD5\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.op_Equality*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: op_Equality\n  nameWithType: CngAlgorithm.op_Equality\n  fullName: CngAlgorithm.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CngAlgorithm.op_Inequality\n  fullName: CngAlgorithm.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.Rsa*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Rsa\n  nameWithType: CngAlgorithm.Rsa\n  fullName: CngAlgorithm.Rsa\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.Sha1*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Sha1\n  nameWithType: CngAlgorithm.Sha1\n  fullName: CngAlgorithm.Sha1\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.Sha256*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Sha256\n  nameWithType: CngAlgorithm.Sha256\n  fullName: CngAlgorithm.Sha256\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.Sha384*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Sha384\n  nameWithType: CngAlgorithm.Sha384\n  fullName: CngAlgorithm.Sha384\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.Sha512*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: Sha512\n  nameWithType: CngAlgorithm.Sha512\n  fullName: CngAlgorithm.Sha512\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Security.Cryptography.CngAlgorithm.ToString*\n  parent: System.Security.Cryptography.CngAlgorithm\n  isExternal: false\n  name: ToString\n  nameWithType: CngAlgorithm.ToString\n  fullName: CngAlgorithm.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithm.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Security.Cryptography.CngAlgorithm}\n  parent: System\n  isExternal: false\n  name: IEquatable<CngAlgorithm>\n  nameWithType: IEquatable<CngAlgorithm>\n  fullName: System.IEquatable<System.Security.Cryptography.CngAlgorithm>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Cryptography.CngAlgorithm\n    name: CngAlgorithm\n    nameWithType: CngAlgorithm\n    fullName: System.Security.Cryptography.CngAlgorithm\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}