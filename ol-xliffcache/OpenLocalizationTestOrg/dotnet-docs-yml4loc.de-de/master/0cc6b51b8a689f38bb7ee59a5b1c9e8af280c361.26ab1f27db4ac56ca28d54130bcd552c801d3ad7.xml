{"nodes":[{"content":"Produces instances of <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.","nodes":[{"pos":[0,338],"content":"Produces instances of <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <ph id=\"ph2\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.","source":"Produces instances of <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that can map an XML Infoset to JSON and write JSON-encoded data to a stream."}],"pos":[2040,2379],"yaml":true},{"content":"[!INCLUDE[indigo1](~/includes/indigo1-md.md)] processes JSON messages using a mapping between JSON data and the XML Infoset. Normally, this mapping is hidden from view. However, in some advanced scenarios it may be necessary to manually convert between JSON and XML. In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers. Note that not every XML Infoset element can be mapped to JSON. [!INCLUDE[crabout](~/includes/crabout-md.md)] mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).","nodes":[{"pos":[0,669],"content":"[!INCLUDE[indigo1](~/includes/indigo1-md.md)] processes JSON messages using a mapping between JSON data and the XML Infoset. Normally, this mapping is hidden from view. However, in some advanced scenarios it may be necessary to manually convert between JSON and XML. In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers. Note that not every XML Infoset element can be mapped to JSON. [!INCLUDE[crabout](~/includes/crabout-md.md)] mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> processes JSON messages using a mapping between JSON data and the XML Infoset.","pos":[0,124],"source":"[!INCLUDE[indigo1](~/includes/indigo1-md.md)] processes JSON messages using a mapping between JSON data and the XML Infoset."},{"content":"Normally, this mapping is hidden from view.","pos":[125,168]},{"content":"However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.","pos":[169,266]},{"content":"In this case, the <ph id=\"ph1\">&lt;xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory&gt;</ph> class can be used to create the necessary XML readers and writers.","pos":[267,416],"source":" In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers."},{"content":"Note that not every XML Infoset element can be mapped to JSON.","pos":[417,479]},{"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> mapping, see <bpt id=\"p1\">[</bpt>How to: Serialize and Deserialize JSON Data<ept id=\"p1\">](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md)</ept>.","pos":[480,669],"source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md)."}]}],"pos":[2390,3062],"yaml":true,"extradata":"MT"},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.","nodes":[{"pos":[0,149],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset."}],"pos":[5092,5242],"yaml":true},{"content":"This overload does not accept an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).","nodes":[{"pos":[0,173],"content":"This overload does not accept an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.","nodes":[{"content":"This overload does not accept an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.","pos":[0,173],"nodes":[{"content":"This overload does not accept an <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> parameter.","pos":[0,71],"source":"This overload does not accept an <xref:System.Text.Encoding> parameter."},{"content":"The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.","pos":[72,173]}]}]},{"pos":[180,455],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> using <ph id=\"ph2\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt;</ph> to prevent Denial of Service attacks when reading untrusted data, see <bpt id=\"p1\">[</bpt>Security Considerations for Data<ept id=\"p1\">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)."}],"pos":[5253,5713],"yaml":true,"extradata":"MT"},{"content":"The input <xref href=\"System.Byte\"></xref> buffer array from which to read.","nodes":[{"pos":[0,75],"content":"The input <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> buffer array from which to read.","source":"The input <xref href=\"System.Byte\"></xref> buffer array from which to read."}],"pos":[5938,6014],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReaderQuotas\"&gt;&lt;/xref&gt;</ph> used to prevent Denial of Service attacks when reading untrusted data.","source":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data."}],"pos":[6099,6232],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can process JavaScript Object Notation (JSON) data.","nodes":[{"pos":[0,111],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can process JavaScript Object Notation (JSON) data.","source":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can process JavaScript Object Notation (JSON) data."}],"pos":[6306,6418],"yaml":true},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.","nodes":[{"pos":[0,149],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset."}],"pos":[8134,8284],"yaml":true},{"content":"This overload does not take an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).","nodes":[{"pos":[0,171],"content":"This overload does not take an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.","nodes":[{"content":"This overload does not take an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.","pos":[0,171],"nodes":[{"content":"This overload does not take an <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> parameter.","pos":[0,69],"source":"This overload does not take an <xref:System.Text.Encoding> parameter."},{"content":"The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.","pos":[70,171]}]}]},{"pos":[178,453],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> using <ph id=\"ph2\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt;</ph> to prevent Denial of Service attacks when reading untrusted data, see <bpt id=\"p1\">[</bpt>Security Considerations for Data<ept id=\"p1\">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)."}],"pos":[8295,8753],"yaml":true,"extradata":"MT"},{"content":"The input <xref href=\"System.IO.Stream\"></xref> from which to read.","nodes":[{"pos":[0,67],"content":"The input <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> from which to read.","source":"The input <xref href=\"System.IO.Stream\"></xref> from which to read."}],"pos":[8991,9059],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReaderQuotas\"&gt;&lt;/xref&gt;</ph> used to prevent Denial of Service attacks when reading untrusted data.","source":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data."}],"pos":[9144,9277],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON).","nodes":[{"pos":[0,103],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can read JavaScript Object Notation (JSON).","source":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON)."}],"pos":[9351,9455],"yaml":true},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.","nodes":[{"pos":[0,182],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset."}],"pos":[11282,11465],"yaml":true},{"content":"This overload does not take an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.  \n  \n [!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).","nodes":[{"pos":[0,171],"content":"This overload does not take an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.","nodes":[{"content":"This overload does not take an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.","pos":[0,171],"nodes":[{"content":"This overload does not take an <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> parameter.","pos":[0,69],"source":"This overload does not take an <xref:System.Text.Encoding> parameter."},{"content":"The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.","pos":[70,171]}]}]},{"pos":[178,453],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> using <ph id=\"ph2\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt;</ph> to prevent Denial of Service attacks when reading untrusted data, see <bpt id=\"p1\">[</bpt>Security Considerations for Data<ept id=\"p1\">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)."}],"pos":[11476,11934],"yaml":true,"extradata":"MT"},{"content":"The input <xref href=\"System.Byte\"></xref> buffer array from which to read.","nodes":[{"pos":[0,75],"content":"The input <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> buffer array from which to read.","source":"The input <xref href=\"System.Byte\"></xref> buffer array from which to read."}],"pos":[12182,12258],"yaml":true},{"content":"Starting position from which to read in <code>buffer</code>.","nodes":[{"pos":[0,60],"content":"Starting position from which to read in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Starting position from which to read in <code>buffer</code>."}],"pos":[12319,12380],"yaml":true},{"content":"Number of bytes that can be read from <code>buffer</code>.","nodes":[{"pos":[0,58],"content":"Number of bytes that can be read from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Number of bytes that can be read from <code>buffer</code>."}],"pos":[12440,12499],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReaderQuotas\"&gt;&lt;/xref&gt;</ph> used to prevent Denial of Service attacks when reading untrusted data.","source":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data."}],"pos":[12584,12717],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON).","nodes":[{"pos":[0,103],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can read JavaScript Object Notation (JSON).","source":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON)."}],"pos":[12791,12895],"yaml":true},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.","nodes":[{"pos":[0,182],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset."}],"pos":[14902,15085],"yaml":true},{"content":"[!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).","nodes":[{"pos":[0,275],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> using <ph id=\"ph2\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt;</ph> to prevent Denial of Service attacks when reading untrusted data, see <bpt id=\"p1\">[</bpt>Security Considerations for Data<ept id=\"p1\">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)."}],"pos":[15096,15374],"yaml":true,"extradata":"MT"},{"content":"The input <xref href=\"System.IO.Stream\"></xref> from which to read.","nodes":[{"pos":[0,67],"content":"The input <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> from which to read.","source":"The input <xref href=\"System.IO.Stream\"></xref> from which to read."}],"pos":[15690,15758],"yaml":true},{"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the reader. If `null` is specified as the value, the reader attempts to auto-detect the encoding.","nodes":[{"pos":[0,189],"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the reader. If `null` is specified as the value, the reader attempts to auto-detect the encoding.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> that specifies the character encoding used by the reader.","pos":[0,103],"source":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the reader."},{"content":"If <ph id=\"ph1\">`null`</ph> is specified as the value, the reader attempts to auto-detect the encoding.","pos":[104,189],"source":" If `null` is specified as the value, the reader attempts to auto-detect the encoding."}]}],"pos":[15829,16019],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReaderQuotas\"&gt;&lt;/xref&gt;</ph> used to prevent Denial of Service attacks when reading untrusted data.","source":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data."}],"pos":[16104,16237],"yaml":true},{"content":"The <xref href=\"System.Xml.OnXmlDictionaryReaderClose\"></xref> delegate to call when the reader is closed.","nodes":[{"pos":[0,106],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.OnXmlDictionaryReaderClose\"&gt;&lt;/xref&gt;</ph> delegate to call when the reader is closed.","source":"The <xref href=\"System.Xml.OnXmlDictionaryReaderClose\"></xref> delegate to call when the reader is closed."}],"pos":[16324,16431],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON).","nodes":[{"pos":[0,103],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can read JavaScript Object Notation (JSON).","source":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON)."}],"pos":[16505,16609],"yaml":true},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.","nodes":[{"pos":[0,207],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset."}],"pos":[18727,18935],"yaml":true},{"content":"[!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).","nodes":[{"pos":[0,275],"content":"<ph id=\"ph1\">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> using <ph id=\"ph2\">&lt;xref:System.Xml.XmlDictionaryReaderQuotas&gt;</ph> to prevent Denial of Service attacks when reading untrusted data, see <bpt id=\"p1\">[</bpt>Security Considerations for Data<ept id=\"p1\">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.","source":"[!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)."}],"pos":[18946,19224],"yaml":true,"extradata":"MT"},{"content":"The input <xref href=\"System.Byte\"></xref> buffer array from which to read.","nodes":[{"pos":[0,75],"content":"The input <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> buffer array from which to read.","source":"The input <xref href=\"System.Byte\"></xref> buffer array from which to read."}],"pos":[19550,19626],"yaml":true},{"content":"Starting position from which to read in <code>buffer</code>.","nodes":[{"pos":[0,60],"content":"Starting position from which to read in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Starting position from which to read in <code>buffer</code>."}],"pos":[19687,19748],"yaml":true},{"content":"Number of bytes that can be read from <code>buffer</code>.","nodes":[{"pos":[0,58],"content":"Number of bytes that can be read from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Number of bytes that can be read from <code>buffer</code>."}],"pos":[19808,19867],"yaml":true},{"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the reader. If `null` is specified as the value, the reader attempts to auto-detect the encoding.","nodes":[{"pos":[0,189],"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the reader. If `null` is specified as the value, the reader attempts to auto-detect the encoding.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> that specifies the character encoding used by the reader.","pos":[0,103],"source":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the reader."},{"content":"If <ph id=\"ph1\">`null`</ph> is specified as the value, the reader attempts to auto-detect the encoding.","pos":[104,189],"source":" If `null` is specified as the value, the reader attempts to auto-detect the encoding."}]}],"pos":[19938,20128],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReaderQuotas\"&gt;&lt;/xref&gt;</ph> used to prevent Denial of Service attacks when reading untrusted data.","source":"The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data."}],"pos":[20213,20346],"yaml":true},{"content":"The <xref href=\"System.Xml.OnXmlDictionaryReaderClose\"></xref> delegate to call when the reader is closed. The default value is `null`.","nodes":[{"pos":[0,135],"content":"The <xref href=\"System.Xml.OnXmlDictionaryReaderClose\"></xref> delegate to call when the reader is closed. The default value is `null`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.OnXmlDictionaryReaderClose\"&gt;&lt;/xref&gt;</ph> delegate to call when the reader is closed.","pos":[0,106],"source":"The <xref href=\"System.Xml.OnXmlDictionaryReaderClose\"></xref> delegate to call when the reader is closed."},{"content":"The default value is <ph id=\"ph1\">`null`</ph>.","pos":[107,135],"source":" The default value is `null`."}]}],"pos":[20433,20569],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON).","nodes":[{"pos":[0,103],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryReader\"&gt;&lt;/xref&gt;</ph> that can read JavaScript Object Notation (JSON).","source":"An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON)."}],"pos":[20643,20747],"yaml":true},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream.","nodes":[{"pos":[0,110],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to a stream.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream."}],"pos":[22271,22382],"yaml":true},{"content":"The default character encoding is UTF-8. When the writer is closed, the stream is closed as well.","nodes":[{"pos":[0,97],"content":"The default character encoding is UTF-8. When the writer is closed, the stream is closed as well.","nodes":[{"content":"The default character encoding is UTF-8. When the writer is closed, the stream is closed as well.","pos":[0,97],"nodes":[{"content":"The default character encoding is UTF-8.","pos":[0,40]},{"content":"When the writer is closed, the stream is closed as well.","pos":[41,97]}]}]}],"pos":[22393,22491],"yaml":true,"extradata":"MT"},{"content":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.","nodes":[{"pos":[0,69],"content":"The output <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> for the JSON writer.","source":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer."}],"pos":[22684,22754],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to the stream based on an XML Infoset.","source":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset."}],"pos":[22828,22957],"yaml":true},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character encoding.","nodes":[{"pos":[0,146],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to a stream with a specified character encoding.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character encoding."}],"pos":[24574,24721],"yaml":true},{"content":"When the writer is closed, the stream is closed as well.","nodes":[{"pos":[0,56],"content":"When the writer is closed, the stream is closed as well.","nodes":[{"content":"When the writer is closed, the stream is closed as well.","pos":[0,56]}]}],"pos":[24732,24789],"yaml":true,"extradata":"MT"},{"content":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.","nodes":[{"pos":[0,69],"content":"The output <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> for the JSON writer.","source":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer."}],"pos":[25013,25083],"yaml":true},{"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.","nodes":[{"pos":[0,134],"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> that specifies the character encoding used by the writer.","pos":[0,103],"source":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer."},{"content":"The default encoding is UTF-8.","pos":[104,134]}]}],"pos":[25154,25289],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to the stream based on an XML Infoset.","source":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset."}],"pos":[25363,25492],"yaml":true},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character encoding.","nodes":[{"pos":[0,146],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to a stream with a specified character encoding.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character encoding."}],"pos":[27181,27328],"yaml":true},{"content":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.","nodes":[{"pos":[0,69],"content":"The output <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> for the JSON writer.","source":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer."}],"pos":[27569,27639],"yaml":true},{"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.","nodes":[{"pos":[0,134],"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> that specifies the character encoding used by the writer.","pos":[0,103],"source":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer."},{"content":"The default encoding is UTF-8.","pos":[104,134]}]}],"pos":[27710,27845],"yaml":true},{"content":"If `true`, the output stream is closed by the writer when done; otherwise `false`. The default value is `true`.","nodes":[{"pos":[0,111],"content":"If `true`, the output stream is closed by the writer when done; otherwise `false`. The default value is `true`.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the output stream is closed by the writer when done; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,82],"source":"If `true`, the output stream is closed by the writer when done; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[83,111],"source":" The default value is `true`."}]}],"pos":[27912,28024],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to the stream based on an XML Infoset.","source":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset."}],"pos":[28098,28227],"yaml":true},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character.","nodes":[{"pos":[0,137],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to a stream with a specified character.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character."}],"pos":[29988,30126],"yaml":true},{"content":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.","nodes":[{"pos":[0,69],"content":"The output <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> for the JSON writer.","source":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer."}],"pos":[30380,30450],"yaml":true},{"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.","nodes":[{"pos":[0,134],"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> that specifies the character encoding used by the writer.","pos":[0,103],"source":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer."},{"content":"The default encoding is UTF-8.","pos":[104,134]}]}],"pos":[30521,30656],"yaml":true},{"content":"If `true`, the output stream is closed by the writer when done; otherwise `false`. The default value is `true`.","nodes":[{"pos":[0,111],"content":"If `true`, the output stream is closed by the writer when done; otherwise `false`. The default value is `true`.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the output stream is closed by the writer when done; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,82],"source":"If `true`, the output stream is closed by the writer when done; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[83,111],"source":" The default value is `true`."}]}],"pos":[30723,30835],"yaml":true},{"content":"If `true`, the output uses multiline format, indenting each level properly; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"If <ph id=\"ph1\">`true`</ph>, the output uses multiline format, indenting each level properly; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"If `true`, the output uses multiline format, indenting each level properly; otherwise, `false`."}],"pos":[30898,30994],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to the stream based on an XML Infoset.","source":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset."}],"pos":[31068,31197],"yaml":true},{"content":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character.","nodes":[{"pos":[0,137],"content":"Creates an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to a stream with a specified character.","source":"Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character."}],"pos":[33024,33162],"yaml":true},{"content":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.","nodes":[{"pos":[0,69],"content":"The output <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> for the JSON writer.","source":"The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer."}],"pos":[33436,33506],"yaml":true},{"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.","nodes":[{"pos":[0,134],"content":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Text.Encoding\"&gt;&lt;/xref&gt;</ph> that specifies the character encoding used by the writer.","pos":[0,103],"source":"The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer."},{"content":"The default encoding is UTF-8.","pos":[104,134]}]}],"pos":[33577,33712],"yaml":true},{"content":"If `true`, the output stream is closed by the writer when done; otherwise `false`. The default value is `true`.","nodes":[{"pos":[0,111],"content":"If `true`, the output stream is closed by the writer when done; otherwise `false`. The default value is `true`.","nodes":[{"content":"If <ph id=\"ph1\">`true`</ph>, the output stream is closed by the writer when done; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,82],"source":"If `true`, the output stream is closed by the writer when done; otherwise `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[83,111],"source":" The default value is `true`."}]}],"pos":[33779,33891],"yaml":true},{"content":"If `true`, the output uses multiline format, indenting each level properly; otherwise, `false`.","nodes":[{"pos":[0,95],"content":"If <ph id=\"ph1\">`true`</ph>, the output uses multiline format, indenting each level properly; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"If `true`, the output uses multiline format, indenting each level properly; otherwise, `false`."}],"pos":[33954,34050],"yaml":true},{"content":"The string used to indent each level.","nodes":[{"pos":[0,37],"content":"The string used to indent each level.","nodes":[{"content":"The string used to indent each level.","pos":[0,37]}]}],"pos":[34117,34155],"yaml":true},{"content":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlDictionaryWriter\"&gt;&lt;/xref&gt;</ph> that writes data encoded with JSON to the stream based on an XML Infoset.","source":"An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset."}],"pos":[34229,34358],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  commentId: T:System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  id: JsonReaderWriterFactory\n  children:\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)\n  - System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)\n  langs:\n  - csharp\n  name: JsonReaderWriterFactory\n  nameWithType: JsonReaderWriterFactory\n  fullName: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  type: Class\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Produces instances of <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.\n  remarks: '[!INCLUDE[indigo1](~/includes/indigo1-md.md)] processes JSON messages using a mapping between JSON data and the XML Infoset. Normally, this mapping is hidden from view. However, in some advanced scenarios it may be necessary to manually convert between JSON and XML. In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers. Note that not every XML Infoset element can be mapped to JSON. [!INCLUDE[crabout](~/includes/crabout-md.md)] mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).'\n  syntax:\n    content: public static class JsonReaderWriterFactory\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)\n  id: CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonReader(Byte[], XmlDictionaryReaderQuotas)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Byte[], XmlDictionaryReaderQuotas)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Byte[], XmlDictionaryReaderQuotas)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.\n  remarks: \"This overload does not accept an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).\"\n  syntax:\n    content: public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The input <xref href=\"System.Byte\"></xref> buffer array from which to read.\n    - id: quotas\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.\n    return:\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can process JavaScript Object Notation (JSON) data.\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)\n  id: CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonReader(Stream, XmlDictionaryReaderQuotas)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Stream, XmlDictionaryReaderQuotas)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Stream, XmlDictionaryReaderQuotas)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.\n  remarks: \"This overload does not take an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).\"\n  syntax:\n    content: public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The input <xref href=\"System.IO.Stream\"></xref> from which to read.\n    - id: quotas\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.\n    return:\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON).\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)\n  id: CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonReader(Byte[], Int32, Int32, XmlDictionaryReaderQuotas)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Byte[], Int32, Int32, XmlDictionaryReaderQuotas)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Byte[], Int32, Int32, XmlDictionaryReaderQuotas)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.\n  remarks: \"This overload does not take an <xref:System.Text.Encoding> parameter. The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.  \\n  \\n [!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).\"\n  syntax:\n    content: public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The input <xref href=\"System.Byte\"></xref> buffer array from which to read.\n    - id: offset\n      type: System.Int32\n      description: Starting position from which to read in <code>buffer</code>.\n    - id: count\n      type: System.Int32\n      description: Number of bytes that can be read from <code>buffer</code>.\n    - id: quotas\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.\n    return:\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON).\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  id: CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonReader(Stream, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Stream, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Stream, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.\n  remarks: '[!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).'\n  syntax:\n    content: public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The input <xref href=\"System.IO.Stream\"></xref> from which to read.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the reader. If `null` is specified as the value, the reader attempts to auto-detect the encoding.\n    - id: quotas\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.\n    - id: onClose\n      type: System.Xml.OnXmlDictionaryReaderClose\n      description: The <xref href=\"System.Xml.OnXmlDictionaryReaderClose\"></xref> delegate to call when the reader is closed.\n    return:\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON).\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  id: CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonReader(Byte[], Int32, Int32, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Byte[], Int32, Int32, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Byte[], Int32, Int32, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.\n  remarks: '[!INCLUDE[crabout](~/includes/crabout-md.md)] using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).'\n  syntax:\n    content: public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The input <xref href=\"System.Byte\"></xref> buffer array from which to read.\n    - id: offset\n      type: System.Int32\n      description: Starting position from which to read in <code>buffer</code>.\n    - id: count\n      type: System.Int32\n      description: Number of bytes that can be read from <code>buffer</code>.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the reader. If `null` is specified as the value, the reader attempts to auto-detect the encoding.\n    - id: quotas\n      type: System.Xml.XmlDictionaryReaderQuotas\n      description: The <xref href=\"System.Xml.XmlDictionaryReaderQuotas\"></xref> used to prevent Denial of Service attacks when reading untrusted data.\n    - id: onClose\n      type: System.Xml.OnXmlDictionaryReaderClose\n      description: The <xref href=\"System.Xml.OnXmlDictionaryReaderClose\"></xref> delegate to call when the reader is closed. The default value is `null`.\n    return:\n      type: System.Xml.XmlDictionaryReader\n      description: An <xref href=\"System.Xml.XmlDictionaryReader\"></xref> that can read JavaScript Object Notation (JSON).\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)\n  id: CreateJsonWriter(System.IO.Stream)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonWriter(Stream)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream.\n  remarks: The default character encoding is UTF-8. When the writer is closed, the stream is closed as well.\n  syntax:\n    content: public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.\n    return:\n      type: System.Xml.XmlDictionaryWriter\n      description: An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)\n  id: CreateJsonWriter(System.IO.Stream,System.Text.Encoding)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonWriter(Stream, Encoding)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character encoding.\n  remarks: When the writer is closed, the stream is closed as well.\n  syntax:\n    content: public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.\n    return:\n      type: System.Xml.XmlDictionaryWriter\n      description: An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  id: CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonWriter(Stream, Encoding, Boolean)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character encoding.\n  syntax:\n    content: public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.\n    - id: ownsStream\n      type: System.Boolean\n      description: If `true`, the output stream is closed by the writer when done; otherwise `false`. The default value is `true`.\n    return:\n      type: System.Xml.XmlDictionaryWriter\n      description: An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)\n  id: CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonWriter(Stream, Encoding, Boolean, Boolean)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean, Boolean)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character.\n  syntax:\n    content: public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.\n    - id: ownsStream\n      type: System.Boolean\n      description: If `true`, the output stream is closed by the writer when done; otherwise `false`. The default value is `true`.\n    - id: indent\n      type: System.Boolean\n      description: If `true`, the output uses multiline format, indenting each level properly; otherwise, `false`.\n    return:\n      type: System.Xml.XmlDictionaryWriter\n      description: An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)\n  commentId: M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)\n  id: CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  langs:\n  - csharp\n  name: CreateJsonWriter(Stream, Encoding, Boolean, Boolean, String)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean, Boolean, String)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean, Boolean, String)\n  type: Method\n  assemblies:\n  - System.Runtime.Serialization\n  - netstandard\n  - System.Runtime.Serialization.Json\n  namespace: System.Runtime.Serialization.Json\n  summary: Creates an <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to a stream with a specified character.\n  syntax:\n    content: public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: The output <xref href=\"System.IO.Stream\"></xref> for the JSON writer.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The <xref href=\"System.Text.Encoding\"></xref> that specifies the character encoding used by the writer. The default encoding is UTF-8.\n    - id: ownsStream\n      type: System.Boolean\n      description: If `true`, the output stream is closed by the writer when done; otherwise `false`. The default value is `true`.\n    - id: indent\n      type: System.Boolean\n      description: If `true`, the output uses multiline format, indenting each level properly; otherwise, `false`.\n    - id: indentChars\n      type: System.String\n      description: The string used to indent each level.\n    return:\n      type: System.Xml.XmlDictionaryWriter\n      description: An <xref href=\"System.Xml.XmlDictionaryWriter\"></xref> that writes data encoded with JSON to the stream based on an XML Infoset.\n  overload: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonReader(Byte[], XmlDictionaryReaderQuotas)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Byte[], XmlDictionaryReaderQuotas)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Byte[], XmlDictionaryReaderQuotas)\n- uid: System.Xml.XmlDictionaryReader\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryReader\n  nameWithType: XmlDictionaryReader\n  fullName: System.Xml.XmlDictionaryReader\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.XmlDictionaryReaderQuotas\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryReaderQuotas\n  nameWithType: XmlDictionaryReaderQuotas\n  fullName: System.Xml.XmlDictionaryReaderQuotas\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonReader(Stream, XmlDictionaryReaderQuotas)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Stream, XmlDictionaryReaderQuotas)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Stream, XmlDictionaryReaderQuotas)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonReader(Byte[], Int32, Int32, XmlDictionaryReaderQuotas)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Byte[], Int32, Int32, XmlDictionaryReaderQuotas)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Byte[], Int32, Int32, XmlDictionaryReaderQuotas)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonReader(Stream, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Stream, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Stream, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Xml.OnXmlDictionaryReaderClose\n  parent: System.Xml\n  isExternal: false\n  name: OnXmlDictionaryReaderClose\n  nameWithType: OnXmlDictionaryReaderClose\n  fullName: System.Xml.OnXmlDictionaryReaderClose\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonReader(Byte[], Int32, Int32, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader(Byte[], Int32, Int32, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n  fullName: JsonReaderWriterFactory.CreateJsonReader(Byte[], Int32, Int32, Encoding, XmlDictionaryReaderQuotas, OnXmlDictionaryReaderClose)\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonWriter(Stream)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream)\n- uid: System.Xml.XmlDictionaryWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlDictionaryWriter\n  nameWithType: XmlDictionaryWriter\n  fullName: System.Xml.XmlDictionaryWriter\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonWriter(Stream, Encoding)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding)\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonWriter(Stream, Encoding, Boolean)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonWriter(Stream, Encoding, Boolean, Boolean)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean, Boolean)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean, Boolean)\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonWriter(Stream, Encoding, Boolean, Boolean, String)\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean, Boolean, String)\n  fullName: JsonReaderWriterFactory.CreateJsonWriter(Stream, Encoding, Boolean, Boolean, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader*\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonReader\n  nameWithType: JsonReaderWriterFactory.CreateJsonReader\n  fullName: JsonReaderWriterFactory.CreateJsonReader\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n- uid: System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter*\n  parent: System.Runtime.Serialization.Json.JsonReaderWriterFactory\n  isExternal: false\n  name: CreateJsonWriter\n  nameWithType: JsonReaderWriterFactory.CreateJsonWriter\n  fullName: JsonReaderWriterFactory.CreateJsonWriter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Serialization.Json/JsonReaderWriterFactory.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}