### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlTextReader
  commentId: T:System.Xml.XmlTextReader
  id: XmlTextReader
  children:
  - System.Xml.XmlTextReader.#ctor
  - System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)
  - System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)
  - System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)
  - System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)
  - System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)
  - System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)
  - System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)
  - System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)
  - System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)
  - System.Xml.XmlTextReader.#ctor(System.String)
  - System.Xml.XmlTextReader.#ctor(System.IO.TextReader)
  - System.Xml.XmlTextReader.#ctor(System.IO.Stream)
  - System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)
  - System.Xml.XmlTextReader.AttributeCount
  - System.Xml.XmlTextReader.BaseURI
  - System.Xml.XmlTextReader.CanReadBinaryContent
  - System.Xml.XmlTextReader.CanReadValueChunk
  - System.Xml.XmlTextReader.CanResolveEntity
  - System.Xml.XmlTextReader.Close
  - System.Xml.XmlTextReader.Depth
  - System.Xml.XmlTextReader.DtdProcessing
  - System.Xml.XmlTextReader.Encoding
  - System.Xml.XmlTextReader.EntityHandling
  - System.Xml.XmlTextReader.EOF
  - System.Xml.XmlTextReader.GetAttribute(System.String)
  - System.Xml.XmlTextReader.GetAttribute(System.String,System.String)
  - System.Xml.XmlTextReader.GetAttribute(System.Int32)
  - System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  - System.Xml.XmlTextReader.GetRemainder
  - System.Xml.XmlTextReader.HasLineInfo
  - System.Xml.XmlTextReader.HasValue
  - System.Xml.XmlTextReader.IsDefault
  - System.Xml.XmlTextReader.IsEmptyElement
  - System.Xml.XmlTextReader.LineNumber
  - System.Xml.XmlTextReader.LinePosition
  - System.Xml.XmlTextReader.LocalName
  - System.Xml.XmlTextReader.LookupNamespace(System.String)
  - System.Xml.XmlTextReader.MoveToAttribute(System.Int32)
  - System.Xml.XmlTextReader.MoveToAttribute(System.String)
  - System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)
  - System.Xml.XmlTextReader.MoveToElement
  - System.Xml.XmlTextReader.MoveToFirstAttribute
  - System.Xml.XmlTextReader.MoveToNextAttribute
  - System.Xml.XmlTextReader.Name
  - System.Xml.XmlTextReader.Namespaces
  - System.Xml.XmlTextReader.NamespaceURI
  - System.Xml.XmlTextReader.NameTable
  - System.Xml.XmlTextReader.NodeType
  - System.Xml.XmlTextReader.Normalization
  - System.Xml.XmlTextReader.Prefix
  - System.Xml.XmlTextReader.ProhibitDtd
  - System.Xml.XmlTextReader.QuoteChar
  - System.Xml.XmlTextReader.Read
  - System.Xml.XmlTextReader.ReadAttributeValue
  - System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlTextReader.ReadState
  - System.Xml.XmlTextReader.ReadString
  - System.Xml.XmlTextReader.ResetState
  - System.Xml.XmlTextReader.ResolveEntity
  - System.Xml.XmlTextReader.Skip
  - System.Xml.XmlTextReader.Value
  - System.Xml.XmlTextReader.WhitespaceHandling
  - System.Xml.XmlTextReader.XmlLang
  - System.Xml.XmlTextReader.XmlResolver
  - System.Xml.XmlTextReader.XmlSpace
  - System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  - System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)
  - System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)
  langs:
  - csharp
  name: XmlTextReader
  nameWithType: XmlTextReader
  fullName: System.Xml.XmlTextReader
  type: Class
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: "Represents a reader that provides fast, non-cached, forward-only access to XML data.  \n  \n Starting with the .NET Framework 2.0, we recommend that you use the <xref href=\"System.Xml.XmlReader\"></xref> class instead."
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n <xref:System.Xml.XmlTextReader> provides forward-only, read-only access to a stream of XML data. The current node refers to the node on which the reader is positioned. The reader is advanced using any of the read methods and properties reflect the value of the current node.  \n  \n This class implements <xref:System.Xml.XmlReader> and conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations. `XmlTextReader` provides the following functionality:  \n  \n-   Enforces the rules of well-formed XML.  \n  \n-   `XmlTextReader` does not provide data validation.  \n  \n-   Checks that `DocumentType` nodes are well-formed. `XmlTextReader` checks the DTD for well-formedness, but does not validate using the DTD.  \n  \n-   For nodes where <xref:System.Xml.XmlTextReader.NodeType%2A> is `XmlNodeType.EntityReference`, a single empty `EntityReference` node is returned (that is, the <xref:System.Xml.XmlTextReader.Value%2A> property is `String.Empty`).  \n  \n> [!NOTE]\n>  The actual declarations of entities in the DTD are called `Entity` nodes. When you refer to these nodes in your data, they are called `EntityReference` nodes.  \n  \n-   Does not expand default attributes.  \n  \n Because the `XmlTextReader` does not perform the extra checks required for data validation, it provides a fast well-formedness parser.  \n  \n To perform data validation, use a validating <xref:System.Xml.XmlReader>.  \n  \n To read XML data from an <xref:System.Xml.XmlDocument>, use <xref:System.Xml.XmlNodeReader>.  \n  \n `XmlTextReader` throws an <xref:System.Xml.XmlException> on XML parse errors. After an exception is thrown the state of the reader is not predictable. For example, the reported node type may be different than the actual node type of the current node. Use the <xref:System.Xml.XmlTextReader.ReadState%2A> property to check whether a reader is in error state.  \n  \n## Security Considerations  \n The following are things to consider when using the <xref:System.Xml.XmlTextReader> class.  \n  \n-   Exceptions thrown the <xref:System.Xml.XmlTextReader> can disclose path information that you do not want bubbled up to the application. Your applications must catch exceptions and process them appropriately.  \n  \n-   DTD processing is enabled by default. Disable DTD processing if you are concerned about Denial of Service issues or if you are dealing with untrusted sources. Set the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property to <xref:System.Xml.DtdProcessing.Prohibit> to disable DTD processing.  \n  \n     If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access. You can also design your application so that the XML processing is memory and time constrained. For example, configure time-out limits in your ASP.NET application.  \n  \n-   XML data can include references to external resources such as a DTD file. By default external resources are resolved using an <xref:System.Xml.XmlUrlResolver> object with no user credentials. You can secure this further by doing one of the following:  \n  \n    -   Restrict the resources that the <xref:System.Xml.XmlTextReader> can access by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.  \n  \n    -   Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to `null`.  \n  \n-   XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process. To limit the size of the input that is sent to the <xref:System.Xml.XmlTextReader>, create a custom IStream implementation and supply it the <xref:System.Xml.XmlTextReader>.  \n  \n-   The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data. This method reads a small number of characters at a time instead of allocating a single string for the whole value.  \n  \n-   By default general entities are not expanded. General entities are expanded when you call the <xref:System.Xml.XmlTextReader.ResolveEntity%2A> method."
  syntax:
    content: 'public class XmlTextReader : System.Xml.XmlReader, System.Xml.IXmlLineInfo, System.Xml.IXmlNamespaceResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlReader
  implements:
  - System.Xml.IXmlLineInfo
  - System.Xml.IXmlNamespaceResolver
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Xml.XmlReader.Create(System.IO.Stream)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  - System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.IO.TextReader)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  - System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.String)
  - System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  - System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  - System.Xml.XmlReader.Dispose
  - System.Xml.XmlReader.Dispose(System.Boolean)
  - System.Xml.XmlReader.GetValueAsync
  - System.Xml.XmlReader.HasAttributes
  - System.Xml.XmlReader.IsName(System.String)
  - System.Xml.XmlReader.IsNameToken(System.String)
  - System.Xml.XmlReader.IsStartElement
  - System.Xml.XmlReader.IsStartElement(System.String)
  - System.Xml.XmlReader.IsStartElement(System.String,System.String)
  - System.Xml.XmlReader.Item(System.Int32)
  - System.Xml.XmlReader.Item(System.String)
  - System.Xml.XmlReader.Item(System.String,System.String)
  - System.Xml.XmlReader.MoveToContent
  - System.Xml.XmlReader.MoveToContentAsync
  - System.Xml.XmlReader.ReadAsync
  - System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadContentAsBoolean
  - System.Xml.XmlReader.ReadContentAsDateTime
  - System.Xml.XmlReader.ReadContentAsDateTimeOffset
  - System.Xml.XmlReader.ReadContentAsDecimal
  - System.Xml.XmlReader.ReadContentAsDouble
  - System.Xml.XmlReader.ReadContentAsFloat
  - System.Xml.XmlReader.ReadContentAsInt
  - System.Xml.XmlReader.ReadContentAsLong
  - System.Xml.XmlReader.ReadContentAsObject
  - System.Xml.XmlReader.ReadContentAsObjectAsync
  - System.Xml.XmlReader.ReadContentAsString
  - System.Xml.XmlReader.ReadContentAsStringAsync
  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadElementContentAsBoolean
  - System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDateTime
  - System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDecimal
  - System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsDouble
  - System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsFloat
  - System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsInt
  - System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsLong
  - System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsObject
  - System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsObjectAsync
  - System.Xml.XmlReader.ReadElementContentAsString
  - System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  - System.Xml.XmlReader.ReadElementContentAsStringAsync
  - System.Xml.XmlReader.ReadElementString
  - System.Xml.XmlReader.ReadElementString(System.String)
  - System.Xml.XmlReader.ReadElementString(System.String,System.String)
  - System.Xml.XmlReader.ReadEndElement
  - System.Xml.XmlReader.ReadInnerXml
  - System.Xml.XmlReader.ReadInnerXmlAsync
  - System.Xml.XmlReader.ReadOuterXml
  - System.Xml.XmlReader.ReadOuterXmlAsync
  - System.Xml.XmlReader.ReadStartElement
  - System.Xml.XmlReader.ReadStartElement(System.String)
  - System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  - System.Xml.XmlReader.ReadSubtree
  - System.Xml.XmlReader.ReadToDescendant(System.String)
  - System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  - System.Xml.XmlReader.ReadToFollowing(System.String)
  - System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  - System.Xml.XmlReader.ReadToNextSibling(System.String)
  - System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  - System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  - System.Xml.XmlReader.SchemaInfo
  - System.Xml.XmlReader.Settings
  - System.Xml.XmlReader.SkipAsync
  - System.Xml.XmlReader.ValueType
  attributes: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor
  commentId: M:System.Xml.XmlTextReader.#ctor
  id: '#ctor'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader()
  nameWithType: XmlTextReader.XmlTextReader()
  fullName: XmlTextReader.XmlTextReader()
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the `XmlTextReader`.
  syntax:
    content: protected XmlTextReader ();
    parameters: []
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)
  id: '#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(String, XmlNodeType, XmlParserContext)
  nameWithType: XmlTextReader.XmlTextReader(String, XmlNodeType, XmlParserContext)
  fullName: XmlTextReader.XmlTextReader(String, XmlNodeType, XmlParserContext)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified string, <xref href="System.Xml.XmlNodeType"></xref>, and <xref href="System.Xml.XmlParserContext"></xref>.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This constructor parses the given string as a fragment of XML. If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents. This constructor can handle strings returned from <xref:System.Xml.XmlReader.ReadInnerXml%2A>.  \n  \n The following table lists valid values for `fragType` and how the reader parses each of the different node types.  \n  \n|XmlNodeType|Fragment May Contain|  \n|-----------------|--------------------------|  \n|Element|Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).<br /><br /> An XML declaration can also be supplied. This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.|  \n|Attribute|The value of an attribute (the part inside the quotes).|  \n|Document|The contents of an entire XML document. This enforces document level rules.|"
  example:
  - "The following example parses an XML fragment. It uses the `XmlParserContext` and its <xref:System.Xml.XmlNamespaceManager> to handle namespace resolution.  \n  \n [!code-cpp[XmlTextReader.Cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Cctor/CPP/readfrag.cpp#1)]\n [!code-csharp[XmlTextReader.Cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Cctor/CS/readfrag.cs#1)]\n [!code-vb[XmlTextReader.Cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Cctor/VB/readfrag.vb#1)]"
  syntax:
    content: public XmlTextReader (string xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);
    parameters:
    - id: xmlFragment
      type: System.String
      description: The string containing the XML fragment to parse.
    - id: fragType
      type: System.Xml.XmlNodeType
      description: The <xref href="System.Xml.XmlNodeType"></xref> of the XML fragment. This also determines what the fragment string can contain. (See table below.)
    - id: context
      type: System.Xml.XmlParserContext
      description: The <xref href="System.Xml.XmlParserContext"></xref> in which the <code>xmlFragment</code> is to be parsed. This includes the <xref href="System.Xml.XmlNameTable"></xref> to use, encoding, namespace scope, the current <code>xml:lang</code>, and the <code>xml:space</code> scope.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: <code>fragType</code> is not an `Element`, `Attribute`, or `Document``XmlNodeType`.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>xmlFragment</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)
  id: '#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(String, TextReader, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(String, TextReader, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(String, TextReader, XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified URL, <xref href="System.IO.TextReader"></xref> and <xref href="System.Xml.XmlNameTable"></xref>.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n It is assumed that the `TextReader` is already set to the correct encoding. This is used by clients that have already read some things from the stream in a multi-part MIME scenario."
  syntax:
    content: public XmlTextReader (string url, System.IO.TextReader input, System.Xml.XmlNameTable nt);
    parameters:
    - id: url
      type: System.String
      description: The URL to use for resolving external resources. The <xref href="System.Xml.XmlTextReader.BaseURI"></xref> is set to this value. If <code>url</code> is `null`, `BaseURI` is set to `String.Empty`.
    - id: input
      type: System.IO.TextReader
      description: The `TextReader` containing the XML data to read.
    - id: nt
      type: System.Xml.XmlNameTable
      description: The `XmlNameTable` to use.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>nt</code> value is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)
  id: '#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(String, Stream, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(String, Stream, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(String, Stream, XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified URL, stream and <xref href="System.Xml.XmlNameTable"></xref>.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  syntax:
    content: public XmlTextReader (string url, System.IO.Stream input, System.Xml.XmlNameTable nt);
    parameters:
    - id: url
      type: System.String
      description: The URL to use for resolving external resources. The <xref href="System.Xml.XmlTextReader.BaseURI"></xref> is set to this value. If <code>url</code> is `null`, `BaseURI` is set to `String.Empty`.
    - id: input
      type: System.IO.Stream
      description: The stream containing the XML data to read.
    - id: nt
      type: System.Xml.XmlNameTable
      description: The `XmlNameTable` to use.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The <code>input</code> or <code>nt</code> value is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)
  id: '#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(Stream, XmlNodeType, XmlParserContext)
  nameWithType: XmlTextReader.XmlTextReader(Stream, XmlNodeType, XmlParserContext)
  fullName: XmlTextReader.XmlTextReader(Stream, XmlNodeType, XmlParserContext)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified stream, <xref href="System.Xml.XmlNodeType"></xref>, and <xref href="System.Xml.XmlParserContext"></xref>.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This constructor parses the given string as a fragment of XML. If the XML fragment is an element or attribute, you can bypass the root level rules for well-formed XML documents.  \n  \n The following table lists valid values for `fragType`.  \n  \n|XmlNodeType|Fragment May Contain|  \n|-----------------|--------------------------|  \n|`Element`|Any valid element content (for example, any combination of elements, comments, processing instructions, CDATA sections, text, and entity references).<br /><br /> An XML declaration can also be supplied. This allows you to specify the encoding for the XML fragment, rather than having to set it on the <xref:System.Xml.XmlParserContext> object.|  \n|`Attribute`|The value of an attribute (the part inside the quotes).|  \n|`Document`|The contents of an entire XML document. This enforces document level rules.|  \n  \n The reader uses the following to determine the encoding of the stream.  \n  \n1.  Checks the <xref:System.Xml.XmlParserContext.Encoding%2A?displayProperty=fullName> property to determine the encoding.  \n  \n2.  If the `Encoding` property is `null`, the reader checks for a byte-order mark at the beginning of the stream.  \n  \n3.  If the `Encoding` property is `null`, and no byte-order mark is found, the reader assumes the stream is encoded in UTF-8."
  syntax:
    content: public XmlTextReader (System.IO.Stream xmlFragment, System.Xml.XmlNodeType fragType, System.Xml.XmlParserContext context);
    parameters:
    - id: xmlFragment
      type: System.IO.Stream
      description: The stream containing the XML fragment to parse.
    - id: fragType
      type: System.Xml.XmlNodeType
      description: The <xref href="System.Xml.XmlNodeType"></xref> of the XML fragment. This also determines what the fragment can contain. (See table below.)
    - id: context
      type: System.Xml.XmlParserContext
      description: The <xref href="System.Xml.XmlParserContext"></xref> in which the <code>xmlFragment</code> is to be parsed. This includes the <xref href="System.Xml.XmlNameTable"></xref> to use, encoding, namespace scope, the current <code>xml:lang</code>, and the <code>xml:space</code> scope.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: <code>fragType</code> is not an Element, Attribute, or Document `XmlNodeType`.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>xmlFragment</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)
  id: '#ctor(System.String,System.Xml.XmlNameTable)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(String, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(String, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(String, XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified file and <xref href="System.Xml.XmlNameTable"></xref>.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  syntax:
    content: public XmlTextReader (string url, System.Xml.XmlNameTable nt);
    parameters:
    - id: url
      type: System.String
      description: The URL for the file containing the XML data to read.
    - id: nt
      type: System.Xml.XmlNameTable
      description: The `XmlNameTable` to use.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The <code>nt</code> value is `null`.
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The specified file cannot be found.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: Part of the filename or directory cannot be found.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>url</code> is an empty string.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "The remote filename cannot be resolved.  \n  \n -or-  \n  \n An error occurred while processing the request."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: <code>url</code> is not a valid URI.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)
  id: '#ctor(System.String,System.IO.Stream)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(String, Stream)
  nameWithType: XmlTextReader.XmlTextReader(String, Stream)
  fullName: XmlTextReader.XmlTextReader(String, Stream)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified URL and stream.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  syntax:
    content: public XmlTextReader (string url, System.IO.Stream input);
    parameters:
    - id: url
      type: System.String
      description: The URL to use for resolving external resources. The <xref href="System.Xml.XmlTextReader.BaseURI"></xref> is set to this value.
    - id: input
      type: System.IO.Stream
      description: The stream containing the XML data to read.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>input</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)
  id: '#ctor(System.String,System.IO.TextReader)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(String, TextReader)
  nameWithType: XmlTextReader.XmlTextReader(String, TextReader)
  fullName: XmlTextReader.XmlTextReader(String, TextReader)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified URL and <xref href="System.IO.TextReader"></xref>.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n It is assumed that the `TextReader` is already set to the correct encoding. This is used by clients that have already read some things from the stream in a multi-part MIME scenario."
  syntax:
    content: public XmlTextReader (string url, System.IO.TextReader input);
    parameters:
    - id: url
      type: System.String
      description: The URL to use for resolving external resources. The <xref href="System.Xml.XmlTextReader.BaseURI"></xref> is set to this value.
    - id: input
      type: System.IO.TextReader
      description: The `TextReader` containing the XML data to read.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)
  id: '#ctor(System.IO.Stream,System.Xml.XmlNameTable)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(Stream, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(Stream, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(Stream, XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified stream and <xref href="System.Xml.XmlNameTable"></xref>.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=fullName>.  \n  \n If you specify a name table, this constructor uses the names defined already in that table."
  syntax:
    content: public XmlTextReader (System.IO.Stream input, System.Xml.XmlNameTable nt);
    parameters:
    - id: input
      type: System.IO.Stream
      description: The stream containing the XML data to read.
    - id: nt
      type: System.Xml.XmlNameTable
      description: The `XmlNameTable` to use.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The <code>input</code> or <code>nt</code> value is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified <xref href="System.Xml.XmlNameTable"></xref>.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  syntax:
    content: protected XmlTextReader (System.Xml.XmlNameTable nt);
    parameters:
    - id: nt
      type: System.Xml.XmlNameTable
      description: The `XmlNameTable` to use.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.String)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(String)
  nameWithType: XmlTextReader.XmlTextReader(String)
  fullName: XmlTextReader.XmlTextReader(String)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified file.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n If the file is located on a resource that requires access credentials, use the <xref:System.Xml.XmlTextReader.XmlResolver%2A> property to specify the necessary credentials.  \n  \n> [!NOTE]\n>  In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], partially trusted code cannot set the `XmlResolver` property. The workaround is to create an <xref:System.Xml.XmlUrlResolver> with the necessary credentials, pass the URI to the <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> method, and then construct the `XmlTextReader` using the resulting <xref:System.IO.Stream> object. The workaround is described in the following C# code.  \n  \n```  \n// Create a resolver with the necessary credentials.  \nXmlUrlResolver resolver = new XmlUrlResolver();  \nNetworkCredential nc = new NetworkCredential(SecurelyStoredUserName, SecurelyStoredPassword, SecurelyStoredDomain);  \nresolver.Credentials = nc;   \n// Get a Stream object containing the XML file.  \nUri myUri = new Uri (\"http://myServer/data/books.xml\");  \nStream s=(Stream)resolver.GetEntity(myUri, null, typeof(Stream));  \n// Construct a reader using the Stream object.  \nXmlTextReader reader = new XmlTextReader(s);  \n```"
  example:
  - "The following example reads an XML file and displays each of the nodes.  \n  \n [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  \n  \n The example uses the file, `items.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]"
  syntax:
    content: public XmlTextReader (string url);
    parameters:
    - id: url
      type: System.String
      description: The URL for the file containing the XML data. The <xref href="System.Xml.XmlTextReader.BaseURI"></xref> is set to this value.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: The specified file cannot be found.
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: Part of the filename or directory cannot be found.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>url</code> is an empty string.
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "The remote filename cannot be resolved.  \n  \n -or-  \n  \n An error occurred while processing the request."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: <code>url</code> is not a valid URI.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.IO.TextReader)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader)
  id: '#ctor(System.IO.TextReader)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(TextReader)
  nameWithType: XmlTextReader.XmlTextReader(TextReader)
  fullName: XmlTextReader.XmlTextReader(TextReader)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified <xref href="System.IO.TextReader"></xref>.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n It is assumed that the `TextReader` is already set to the correct encoding. This is used by clients that have already read some things from the stream in a multi-part MIME scenario."
  example:
  - "The following example loads an XML string into the `XmlTextReader` object using the <xref:System.IO.StringReader> class.  \n  \n [!code-cpp[XmlTextReader.cctor1#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.cctor1/CPP/rdrcctor1.cpp#1)]\n [!code-csharp[XmlTextReader.cctor1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.cctor1/CS/rdrcctor1.cs#1)]\n [!code-vb[XmlTextReader.cctor1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.cctor1/VB/rdrcctor1.vb#1)]"
  syntax:
    content: public XmlTextReader (System.IO.TextReader input);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: The `TextReader` containing the XML data to read.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.IO.Stream)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(Stream)
  nameWithType: XmlTextReader.XmlTextReader(Stream)
  fullName: XmlTextReader.XmlTextReader(Stream)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified stream.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n The <xref:System.Xml.XmlTextReader> decodes the stream using <xref:System.Text.Encoding?displayProperty=fullName>."
  syntax:
    content: public XmlTextReader (System.IO.Stream input);
    parameters:
    - id: input
      type: System.IO.Stream
      description: The stream containing the XML data to read.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>input</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)
  commentId: M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)
  id: '#ctor(System.IO.TextReader,System.Xml.XmlNameTable)'
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlTextReader(TextReader, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(TextReader, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(TextReader, XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlTextReader"></xref> class with the specified <xref href="System.IO.TextReader"></xref> and <xref href="System.Xml.XmlNameTable"></xref>.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n It is assumed that the `TextReader` is already set to the correct encoding. This is used by clients that have already read some things from the stream in a multi-part MIME scenario."
  syntax:
    content: public XmlTextReader (System.IO.TextReader input, System.Xml.XmlNameTable nt);
    parameters:
    - id: input
      type: System.IO.TextReader
      description: The `TextReader` containing the XML data to read.
    - id: nt
      type: System.Xml.XmlNameTable
      description: The `XmlNameTable` to use.
  overload: System.Xml.XmlTextReader.#ctor*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: The <code>nt</code> value is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.AttributeCount
  commentId: P:System.Xml.XmlTextReader.AttributeCount
  id: AttributeCount
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: AttributeCount
  nameWithType: XmlTextReader.AttributeCount
  fullName: XmlTextReader.AttributeCount
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the number of attributes on the current node.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only. (Other node types do not have attributes.)"
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]"
  syntax:
    content: public override int AttributeCount { get; }
    return:
      type: System.Int32
      description: The number of attributes on the current node.
  overload: System.Xml.XmlTextReader.AttributeCount*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.BaseURI
  commentId: P:System.Xml.XmlTextReader.BaseURI
  id: BaseURI
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlTextReader.BaseURI
  fullName: XmlTextReader.BaseURI
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the base URI of the current node.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places. DTD entities are an example of this, but this is not limited to DTDs. The base URI tells you where these nodes came from. If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned."
  example:
  - "The following example displays the base URI for each of the nodes.  \n  \n [!code-cpp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/VB/source.vb#1)]  \n  \n The example uses the file, `baseuri.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlTextReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.BaseURI Example/XML/source.xml#2)]"
  syntax:
    content: public override string BaseURI { get; }
    return:
      type: System.String
      description: The base URI of the current node.
  overload: System.Xml.XmlTextReader.BaseURI*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.CanReadBinaryContent
  commentId: P:System.Xml.XmlTextReader.CanReadBinaryContent
  id: CanReadBinaryContent
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: CanReadBinaryContent
  nameWithType: XmlTextReader.CanReadBinaryContent
  fullName: XmlTextReader.CanReadBinaryContent
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the <xref href="System.Xml.XmlTextReader"></xref> implements the binary content read methods.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n The binary content read methods include the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlTextReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlTextReader.ReadElementContentAsBinHex%2A> methods."
  syntax:
    content: public override bool CanReadBinaryContent { get; }
    return:
      type: System.Boolean
      description: '`true` if the binary content read methods are implemented; otherwise `false`. The <xref href="System.Xml.XmlTextReader"></xref> class always returns `true`.'
  overload: System.Xml.XmlTextReader.CanReadBinaryContent*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.CanReadValueChunk
  commentId: P:System.Xml.XmlTextReader.CanReadValueChunk
  id: CanReadValueChunk
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: CanReadValueChunk
  nameWithType: XmlTextReader.CanReadValueChunk
  fullName: XmlTextReader.CanReadValueChunk
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the <xref href="System.Xml.XmlTextReader"></xref> implements the <xref href="System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)"></xref> method.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n The <xref:System.Xml.XmlTextReader> throws a <xref:System.NotSupportedException> if the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called."
  syntax:
    content: public override bool CanReadValueChunk { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Xml.XmlTextReader"></xref> implements the <xref href="System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)"></xref> method; otherwise `false`. The <xref href="System.Xml.XmlTextReader"></xref> class always returns `false`.'
  overload: System.Xml.XmlTextReader.CanReadValueChunk*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.CanResolveEntity
  commentId: P:System.Xml.XmlTextReader.CanResolveEntity
  id: CanResolveEntity
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: CanResolveEntity
  nameWithType: XmlTextReader.CanResolveEntity
  fullName: XmlTextReader.CanResolveEntity
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether this reader can parse and resolve entities.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This is a change in the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] release. In previous versions, the `XmlTextReader` class could not resolve entities and `CanResolveEntity` always returned `false`."
  syntax:
    content: public override bool CanResolveEntity { get; }
    return:
      type: System.Boolean
      description: '`true` if the reader can parse and resolve entities; otherwise, `false`. The `XmlTextReader` class always returns `true`.'
  overload: System.Xml.XmlTextReader.CanResolveEntity*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Close
  commentId: M:System.Xml.XmlTextReader.Close
  id: Close
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Close()
  nameWithType: XmlTextReader.Close()
  fullName: XmlTextReader.Close()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Changes the <xref href="System.Xml.XmlReader.ReadState"></xref> to `Closed`.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This method also releases any resources held while reading. If this reader was constructed using a stream, this method also calls `Close` on the underlying stream.  \n  \n If `Close` has already been called, no action is performed."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Xml.XmlTextReader.Close*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Depth
  commentId: P:System.Xml.XmlTextReader.Depth
  id: Depth
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Depth
  nameWithType: XmlTextReader.Depth
  fullName: XmlTextReader.Depth
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the depth of the current node in the XML document.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  example:
  - "The following example displays each node including its depth, line number, and line position.  \n  \n [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]\n [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]\n [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]"
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: The depth of the current node in the XML document.
  overload: System.Xml.XmlTextReader.Depth*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.DtdProcessing
  commentId: P:System.Xml.XmlTextReader.DtdProcessing
  id: DtdProcessing
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: DtdProcessing
  nameWithType: XmlTextReader.DtdProcessing
  fullName: XmlTextReader.DtdProcessing
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets or sets the <xref href="System.Xml.DtdProcessing"></xref> enumeration.
  remarks: "The <xref:System.Xml.DtdProcessing> enumeration contains the <xref:System.Xml.DtdProcessing.Prohibit>, <xref:System.Xml.DtdProcessing.Ignore>, and <xref:System.Xml.DtdProcessing.Parse> enumerators. <xref:System.Xml.DtdProcessing.Parse> is the default behavior. The <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property replaces the `ProhibitDTD` property and adds the ability to ignore the DOCTYPE element.  \n  \n> [!IMPORTANT]\n>  If the <xref:System.Xml.XmlTextReader.DtdProcessing%2A> property is set to <xref:System.Xml.DtdProcessing?displayProperty=fullName>, the <xref:System.Xml.XmlTextReader> will not report the DTDs. This means that the DTD/DOCTYPE will be lost on output."
  syntax:
    content: public System.Xml.DtdProcessing DtdProcessing { get; set; }
    return:
      type: System.Xml.DtdProcessing
      description: The <xref href="System.Xml.DtdProcessing"></xref> enumeration.
  overload: System.Xml.XmlTextReader.DtdProcessing*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Encoding
  commentId: P:System.Xml.XmlTextReader.Encoding
  id: Encoding
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Encoding
  nameWithType: XmlTextReader.Encoding
  fullName: XmlTextReader.Encoding
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the encoding of the document.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n Because <xref:System.Xml.XmlTextReader> uses the <xref:System.Text.Encoding?displayProperty=fullName> class, `XmlTextReader` also supports all encodings supported by that class. The exception to this is any encoding, such as UTF-7 or EBCDIC, that maps the `<?xml` sequence to different byte values than UTF-8."
  syntax:
    content: public System.Text.Encoding Encoding { get; }
    return:
      type: System.Text.Encoding
      description: The encoding value. If no encoding attribute exists, and there is no byte-order mark, this defaults to UTF-8.
  overload: System.Xml.XmlTextReader.Encoding*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.EntityHandling
  commentId: P:System.Xml.XmlTextReader.EntityHandling
  id: EntityHandling
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: EntityHandling
  nameWithType: XmlTextReader.EntityHandling
  fullName: XmlTextReader.EntityHandling
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets or sets a value that specifies how the reader handles entities.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property can be changed on the fly and takes effect after the next <xref:System.Xml.XmlTextReader.Read%2A> call.  \n  \n When `EntityHandling` is set to `ExpandCharEntities`, attribute values are only partially normalized. The reader normalizes each individual text node independently from the content of adjacent entity reference nodes.  \n  \n To illustrate the difference between the entity handling modes consider the following XML:  \n  \n```  \n<!DOCTYPE doc [<!ENTITY num \"123\">]>  \n    <doc> &#65; &num; </doc>  \n```  \n  \n When `EntityHandling` is set to `ExpandEntities` the \"doc\" element node contains one text node with the expanded entity text:  \n  \n|Depth|Node type|Name|Value|  \n|-----------|---------------|----------|-----------|  \n|1|`Text`||A 123|  \n  \n When `EntityHandling` is set to `ExpandCharEntites`, and <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A> is set to `Significant` or `All`, the \"doc\" element expands the character entity and returns the general entity as a node:  \n  \n|Depth|Node type|Name|Value|  \n|-----------|---------------|----------|-----------|  \n|1|`Text`||A|  \n|1|`EntityReference`|num||  \n|1|`SignificantWhitespace`|||"
  syntax:
    content: public System.Xml.EntityHandling EntityHandling { get; set; }
    return:
      type: System.Xml.EntityHandling
      description: One of the <xref href="System.Xml.EntityHandling"></xref> values. If no `EntityHandling` is specified, it defaults to `EntityHandling.ExpandCharEntities`.
  overload: System.Xml.XmlTextReader.EntityHandling*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.EOF
  commentId: P:System.Xml.XmlTextReader.EOF
  id: EOF
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: EOF
  nameWithType: XmlTextReader.EOF
  fullName: XmlTextReader.EOF
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the reader is positioned at the end of the stream.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  syntax:
    content: public override bool EOF { get; }
    return:
      type: System.Boolean
      description: '`true` if the reader is positioned at the end of the stream; otherwise, `false`.'
  overload: System.Xml.XmlTextReader.EOF*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.GetAttribute(System.String)
  commentId: M:System.Xml.XmlTextReader.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: XmlTextReader.GetAttribute(String)
  fullName: XmlTextReader.GetAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the value of the attribute with the specified name.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This method does not move the reader.  \n  \n If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute(\"PUBLIC\")`"
  example:
  - "The following example gets the value of the ISBN attribute.  \n  \n [!code-cpp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.GetAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/VB/source.vb#1)]  \n  \n The example uses the file, `attrs.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlTextReader.GetAttribute1 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetAttribute1 Example/XML/source.xml#2)]"
  syntax:
    content: public override string GetAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found, `null` is returned.
  overload: System.Xml.XmlTextReader.GetAttribute*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.GetAttribute(System.String,System.String)
  commentId: M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)
  id: GetAttribute(System.String,System.String)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: GetAttribute(String, String)
  nameWithType: XmlTextReader.GetAttribute(String, String)
  fullName: XmlTextReader.GetAttribute(String, String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the value of the attribute with the specified local name and namespace URI.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n The following XML contains an attribute in a specific namespace:  \n  \n```  \n<test xmlns:dt=\"urn:datatypes\" dt:type=\"int\"/>  \n```  \n  \n You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):  \n  \n```  \nString dt = reader.GetAttribute(\"dt:type\");  \nString dt2 = reader.GetAttribute(\"type\",\"urn:datatypes\");  \n```  \n  \n To lookup the `xmlns:dt` attribute, use one of the following arguments:  \n  \n```  \nString dt3 = reader.GetAttribute(\"xmlns:dt\");  \nString dt4 = reader.GetAttribute(\"dt\",http://www.w3.org/2000/xmlns/);  \n```  \n  \n You can also get this information using the <xref:System.Xml.XmlTextReader.Prefix%2A> property."
  syntax:
    content: public override string GetAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the attribute.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the attribute.
    return:
      type: System.String
      description: The value of the specified attribute. If the attribute is not found, `null` is returned. This method does not move the reader.
  overload: System.Xml.XmlTextReader.GetAttribute*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.GetAttribute(System.Int32)
  commentId: M:System.Xml.XmlTextReader.GetAttribute(System.Int32)
  id: GetAttribute(System.Int32)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: GetAttribute(Int32)
  nameWithType: XmlTextReader.GetAttribute(Int32)
  fullName: XmlTextReader.GetAttribute(Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the value of the attribute with the specified index.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This method does not move the reader."
  syntax:
    content: public override string GetAttribute (int i);
    parameters:
    - id: i
      type: System.Int32
      description: The index of the attribute. The index is zero-based. (The first attribute has index 0.)
    return:
      type: System.String
      description: The value of the specified attribute.
  overload: System.Xml.XmlTextReader.GetAttribute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code>i</code> parameter is less than 0 or greater than or equal to <xref href="System.Xml.XmlTextReader.AttributeCount"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  commentId: M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  id: GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: GetNamespacesInScope(XmlNamespaceScope)
  nameWithType: XmlTextReader.GetNamespacesInScope(XmlNamespaceScope)
  fullName: XmlTextReader.GetNamespacesInScope(XmlNamespaceScope)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a collection that contains all namespaces currently in-scope.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n The dictionary consists of a collection of namespace names keyed by prefix. It can be used to enumerate the in-scope namespaces. The dictionary is a disconnected copy of the namespace list of the reader. It remains unchanged as the reader position, current in-scope namespace list, changes.  \n  \n The following table describes how the <xref:System.Xml.XmlNamespaceScope> enumeration value affects the whether or not the default and built-in namespaces are returned by <xref:System.Xml.XmlTextReader.GetNamespacesInScope%2A>.  \n  \n|XmlNamespaceScope Value|xmlns:xml|xmlns:xmlns|xmlns=\"\"|  \n|-----------------------------|---------------|-----------------|---------------|  \n|`All`|yes|no|no|  \n|`ExcludeXml`|no|no|no|  \n|`Local`|no|no|yes|"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);
    parameters:
    - id: scope
      type: System.Xml.XmlNamespaceScope
      description: An <xref href="System.Xml.XmlNamespaceScope"></xref> value that specifies the type of namespace nodes to return.
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An <xref href="System.Collections.IDictionary"></xref> object that contains all the current in-scope namespaces. If the reader is not positioned on an element, an empty dictionary (no namespaces) is returned.
  overload: System.Xml.XmlTextReader.GetNamespacesInScope*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.GetRemainder
  commentId: M:System.Xml.XmlTextReader.GetRemainder
  id: GetRemainder
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: GetRemainder()
  nameWithType: XmlTextReader.GetRemainder()
  fullName: XmlTextReader.GetRemainder()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the remainder of the buffered XML.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n Because <xref:System.Xml.XmlTextReader> does a buffered `Read`, it must be able to return the remainder of the unused buffer so that no data is lost. This allows protocols (such as multi-part MIME) to package XML in the same stream as other things.  \n  \n After calling this method, <xref:System.Xml.XmlTextReader.EOF%2A> is set to `true`."
  example:
  - "The following example reads the first part of an XML document and then uses `GetRemainder` to complete reading the document using a second reader.  \n  \n [!code-cpp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.GetRemainder Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/VB/source.vb#1)]  \n  \n The example uses the input file `tworeads.xml`.  \n  \n [!code-xml[Classic WebData XmlTextReader.GetRemainder Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.GetRemainder Example/XML/source.xml#2)]"
  syntax:
    content: public System.IO.TextReader GetRemainder ();
    parameters: []
    return:
      type: System.IO.TextReader
      description: A <xref href="System.IO.TextReader"></xref> containing the remainder of the buffered XML.
  overload: System.Xml.XmlTextReader.GetRemainder*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.HasLineInfo
  commentId: M:System.Xml.XmlTextReader.HasLineInfo
  id: HasLineInfo
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: HasLineInfo()
  nameWithType: XmlTextReader.HasLineInfo()
  fullName: XmlTextReader.HasLineInfo()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the class can return line information.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  syntax:
    content: public bool HasLineInfo ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the class can return line information; otherwise, `false`.'
  overload: System.Xml.XmlTextReader.HasLineInfo*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.HasValue
  commentId: P:System.Xml.XmlTextReader.HasValue
  id: HasValue
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: HasValue
  nameWithType: XmlTextReader.HasValue
  fullName: XmlTextReader.HasValue
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the current node can have a <xref href="System.Xml.XmlTextReader.Value"></xref> other than `String.Empty`.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n The following table lists node types that have a value to return.  \n  \n|Node type|Value|  \n|---------------|-----------|  \n|`Attribute`|The value of the attribute.|  \n|`CDATA`|The content of the CDATA section.|  \n|`Comment`|The content of the comment.|  \n|`DocumentType`|The internal subset.|  \n|`ProcessingInstruction`|The entire content, excluding the target.|  \n|`SignificantWhitespace`|The white space between markup in a mixed content model.|  \n|`Text`|The content of the text node.|  \n|`Whitespace`|The white space between markup.|  \n|`XmlDeclaration`|The content of the declaration.|"
  example:
  - "The following example displays the value for every node that can have a value.  \n  \n [!code-cpp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/VB/source.vb#1)]  \n  \n The example uses the file, `book1.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlTextReader.HasValue Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.HasValue Example/XML/source.xml#2)]"
  syntax:
    content: public override bool HasValue { get; }
    return:
      type: System.Boolean
      description: '`true` if the node on which the reader is currently positioned can have a `Value`; otherwise, `false`.'
  overload: System.Xml.XmlTextReader.HasValue*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.IsDefault
  commentId: P:System.Xml.XmlTextReader.IsDefault
  id: IsDefault
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: IsDefault
  nameWithType: XmlTextReader.IsDefault
  fullName: XmlTextReader.IsDefault
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property applies only to attribute nodes."
  syntax:
    content: public override bool IsDefault { get; }
    return:
      type: System.Boolean
      description: This property always returns `false`. (<xref href="System.Xml.XmlTextReader"></xref> does not expand default attributes.)
  overload: System.Xml.XmlTextReader.IsDefault*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.IsEmptyElement
  commentId: P:System.Xml.XmlTextReader.IsEmptyElement
  id: IsEmptyElement
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: IsEmptyElement
  nameWithType: XmlTextReader.IsEmptyElement
  fullName: XmlTextReader.IsEmptyElement
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets a value indicating whether the current node is an empty element (for example, <code><MyElement/></code>).
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property enables you to determine the difference between the following:  \n  \n `<item num=\"123\"/>` (`IsEmptyElement` is `true`).  \n  \n `<item num=\"123\">` (`IsEmptyElement` is `false`, although element content is empty).  \n  \n A corresponding `EndElement` node is not generated for empty elements.  \n  \n `IsEmptyElement` simply reports whether or not the element in the source document had an end element tag."
  example:
  - "The following example displays the text content of each element.  \n  \n [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  \n  \n The example uses the file, `elems.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]"
  syntax:
    content: public override bool IsEmptyElement { get; }
    return:
      type: System.Boolean
      description: '`true` if the current node is an element (<xref href="System.Xml.XmlTextReader.NodeType"></xref> equals `XmlNodeType.Element`) that ends with <code>/></code>; otherwise, `false`.'
  overload: System.Xml.XmlTextReader.IsEmptyElement*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.LineNumber
  commentId: P:System.Xml.XmlTextReader.LineNumber
  id: LineNumber
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: LineNumber
  nameWithType: XmlTextReader.LineNumber
  fullName: XmlTextReader.LineNumber
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the current line number.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property is most commonly used for error reporting, but can be called at any time. The starting value for this property is `1`.  \n  \n Combined with <xref:System.Xml.XmlTextReader.LinePosition%2A>, a value of `1,1` indicates the start of the document."
  example:
  - "The following example displays each node including its depth, line number, and line position.  \n  \n [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]\n [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]\n [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]"
  syntax:
    content: public int LineNumber { get; }
    return:
      type: System.Int32
      description: The current line number.
  overload: System.Xml.XmlTextReader.LineNumber*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.LinePosition
  commentId: P:System.Xml.XmlTextReader.LinePosition
  id: LinePosition
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: LinePosition
  nameWithType: XmlTextReader.LinePosition
  fullName: XmlTextReader.LinePosition
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the current line position.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property is most commonly used for error reporting, but can be called at any time. The property's starting value is `1`.  \n  \n The position indicated is the first character of text in the markup.  \n  \n```  \n<root>  \nabc<tag/>  \n</root>  \n```  \n  \n On the first line of the preceding XML text, a `LinePosition` of `2` corresponds to the character `r`; on the second line, a `LinePosition` of `5` corresponds to the character `t`; and on the third line, a `LinePosition` of `3` corresponds to the character `r`.  \n  \n Combined with <xref:System.Xml.XmlTextReader.LineNumber%2A>, a value of `1,1` indicates the start of the document."
  example:
  - "The following example displays each node including its depth, line number, and line position.  \n  \n [!code-cpp[XmlTextReader.LineNum#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.LineNum/CPP/readlinenum.cpp#1)]\n [!code-csharp[XmlTextReader.LineNum#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.LineNum/CS/readlinenum.cs#1)]\n [!code-vb[XmlTextReader.LineNum#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.LineNum/VB/readlinenum.vb#1)]"
  syntax:
    content: public int LinePosition { get; }
    return:
      type: System.Int32
      description: The current line position.
  overload: System.Xml.XmlTextReader.LinePosition*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.LocalName
  commentId: P:System.Xml.XmlTextReader.LocalName
  id: LocalName
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlTextReader.LocalName
  fullName: XmlTextReader.LocalName
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the local name of the current node.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  example:
  - "The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.  \n  \n [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  \n  \n The example uses the file, `book2.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]"
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "The name of the current node with the prefix removed. For example, `LocalName` is `book` for the element <code><bk:book></code>.  \n  \n For node types that do not have a name (like `Text`, `Comment`, and so on), this property returns `String.Empty`."
  overload: System.Xml.XmlTextReader.LocalName*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.LookupNamespace(System.String)
  commentId: M:System.Xml.XmlTextReader.LookupNamespace(System.String)
  id: LookupNamespace(System.String)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: LookupNamespace(String)
  nameWithType: XmlTextReader.LookupNamespace(String)
  fullName: XmlTextReader.LookupNamespace(String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Resolves a namespace prefix in the current element's scope.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n In the following XML, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace(\"a\")`. The returned string is `urn:456`.  \n  \n```  \n<root xmlns:a=\"urn:456\">  \n <item>  \n <ref href=\"a:b\"/>  \n </item>  \n</root>  \n```"
  syntax:
    content: public override string LookupNamespace (string prefix);
    parameters:
    - id: prefix
      type: System.String
      description: The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string. This string does not have to be atomized.
    return:
      type: System.String
      description: The namespace URI to which the prefix maps or `null` if no matching prefix is found.
  overload: System.Xml.XmlTextReader.LookupNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <xref href="System.Xml.XmlTextReader.Namespaces"></xref> property is set to `true` and the <code>prefix</code> value is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.MoveToAttribute(System.Int32)
  commentId: M:System.Xml.XmlTextReader.MoveToAttribute(System.Int32)
  id: MoveToAttribute(System.Int32)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: MoveToAttribute(Int32)
  nameWithType: XmlTextReader.MoveToAttribute(Int32)
  fullName: XmlTextReader.MoveToAttribute(Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Moves to the attribute with the specified index.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]"
  syntax:
    content: public override void MoveToAttribute (int i);
    parameters:
    - id: i
      type: System.Int32
      description: The index of the attribute.
  overload: System.Xml.XmlTextReader.MoveToAttribute*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The <code>i</code> parameter is less than 0 or greater than or equal to <xref href="System.Xml.XmlReader.AttributeCount"></xref>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.MoveToAttribute(System.String)
  commentId: M:System.Xml.XmlTextReader.MoveToAttribute(System.String)
  id: MoveToAttribute(System.String)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: MoveToAttribute(String)
  nameWithType: XmlTextReader.MoveToAttribute(String)
  fullName: XmlTextReader.MoveToAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Moves to the attribute with the specified name.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute."
  syntax:
    content: public override bool MoveToAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: The qualified name of the attribute.
    return:
      type: System.Boolean
      description: "`true` if the attribute is found; otherwise, `false`. If `false`, the reader's position does not change."
  overload: System.Xml.XmlTextReader.MoveToAttribute*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)
  commentId: M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)
  id: MoveToAttribute(System.String,System.String)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: MoveToAttribute(String, String)
  nameWithType: XmlTextReader.MoveToAttribute(String, String)
  fullName: XmlTextReader.MoveToAttribute(String, String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Moves to the attribute with the specified local name and namespace URI.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n After calling `MoveToAttribute`, the <xref:System.Xml.XmlTextReader.Name%2A>, <xref:System.Xml.XmlTextReader.NamespaceURI%2A>, and <xref:System.Xml.XmlTextReader.Prefix%2A> properties reflects the properties of that attribute."
  syntax:
    content: public override bool MoveToAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: The local name of the attribute.
    - id: namespaceURI
      type: System.String
      description: The namespace URI of the attribute.
    return:
      type: System.Boolean
      description: "`true` if the attribute is found; otherwise, `false`. If `false`, the reader's position does not change."
  overload: System.Xml.XmlTextReader.MoveToAttribute*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.MoveToElement
  commentId: M:System.Xml.XmlTextReader.MoveToElement
  id: MoveToElement
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: MoveToElement()
  nameWithType: XmlTextReader.MoveToElement()
  fullName: XmlTextReader.MoveToElement()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Moves to the element that contains the current attribute node.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n Use this method to return to an element after navigating through its attributes. This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`."
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-cpp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.MoveToElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToElement Example/VB/source.vb#1)]"
  syntax:
    content: public override bool MoveToElement ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); `false` if the reader is not positioned on an attribute (the position of the reader does not change).'
  overload: System.Xml.XmlTextReader.MoveToElement*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.MoveToFirstAttribute
  commentId: M:System.Xml.XmlTextReader.MoveToFirstAttribute
  id: MoveToFirstAttribute
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: MoveToFirstAttribute()
  nameWithType: XmlTextReader.MoveToFirstAttribute()
  fullName: XmlTextReader.MoveToFirstAttribute()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Moves to the first attribute.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  example:
  - "The following example gets the value of the first attribute of the root node.  \n  \n [!code-cpp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/VB/source.vb#1)]  \n  \n The example uses the file, `attrs.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlTextReader.MoveToFirstAttribute Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.MoveToFirstAttribute Example/XML/source.xml#2)]"
  syntax:
    content: public override bool MoveToFirstAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if an attribute exists (the reader moves to the first attribute); otherwise, `false` (the position of the reader does not change).'
  overload: System.Xml.XmlTextReader.MoveToFirstAttribute*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.MoveToNextAttribute
  commentId: M:System.Xml.XmlTextReader.MoveToNextAttribute
  id: MoveToNextAttribute
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: MoveToNextAttribute()
  nameWithType: XmlTextReader.MoveToNextAttribute()
  fullName: XmlTextReader.MoveToNextAttribute()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Moves to the next attribute.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlTextReader.MoveToFirstAttribute%2A>. If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change."
  example:
  - "The following example displays all attributes on the current node.  \n  \n [!code-cpp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlReader.HasAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.HasAttributes Example/VB/source.vb#1)]"
  syntax:
    content: public override bool MoveToNextAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if there is a next attribute; `false` if there are no more attributes.'
  overload: System.Xml.XmlTextReader.MoveToNextAttribute*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Name
  commentId: P:System.Xml.XmlTextReader.Name
  id: Name
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Name
  nameWithType: XmlTextReader.Name
  fullName: XmlTextReader.Name
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the qualified name of the current node.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  example:
  - "The following example reads an XML file and displays each of the nodes.  \n  \n [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  \n  \n The sample uses the file `items.xml`.  \n  \n [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "The qualified name of the current node. For example, `Name` is `bk:book` for the element <code><bk:book></code>.  \n  \n The name returned is dependent on the <xref href=\"System.Xml.XmlTextReader.NodeType\"></xref> of the node. The following node types return the listed values. All other node types return an empty string.  \n  \n <table><thead><tr><th> Node Type  \n  \n </th><th> Name  \n  \n </th></tr></thead><tbody><tr><td>`Attribute`</td><td> The name of the attribute.  \n  \n </td></tr><tr><td>`DocumentType`</td><td> The document type name.  \n  \n </td></tr><tr><td>`Element`</td><td> The tag name.  \n  \n </td></tr><tr><td>`EntityReference`</td><td> The name of the entity referenced.  \n  \n </td></tr><tr><td>`ProcessingInstruction`</td><td> The target of the processing instruction.  \n  \n </td></tr><tr><td>`XmlDeclaration`</td><td> The literal string `xml`.  \n  \n </td></tr></tbody></table>"
  overload: System.Xml.XmlTextReader.Name*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Namespaces
  commentId: P:System.Xml.XmlTextReader.Namespaces
  id: Namespaces
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Namespaces
  nameWithType: XmlTextReader.Namespaces
  fullName: XmlTextReader.Namespaces
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets or sets a value indicating whether to do namespace support.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property determines whether the reader supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.  \n  \n The `Namespaces` property cannot be set after a read operation has occurred."
  syntax:
    content: public bool Namespaces { get; set; }
    return:
      type: System.Boolean
      description: '`true` to do namespace support; otherwise, `false`. The default is `true`.'
  overload: System.Xml.XmlTextReader.Namespaces*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Setting this property after a read operation has occurred (<xref href="System.Xml.XmlTextReader.ReadState"></xref> is not `ReadState.Initial`).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.NamespaceURI
  commentId: P:System.Xml.XmlTextReader.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: NamespaceURI
  nameWithType: XmlTextReader.NamespaceURI
  fullName: XmlTextReader.NamespaceURI
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property is relevant to `Element` and `Attribute` nodes only."
  example:
  - "The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.  \n  \n [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  \n  \n The example uses the file, `book2.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]"
  syntax:
    content: public override string NamespaceURI { get; }
    return:
      type: System.String
      description: The namespace URI of the current node; otherwise an empty string.
  overload: System.Xml.XmlTextReader.NamespaceURI*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.NameTable
  commentId: P:System.Xml.XmlTextReader.NameTable
  id: NameTable
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlTextReader.NameTable
  fullName: XmlTextReader.NameTable
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlNameTable"></xref> associated with this implementation.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n All node and attribute names returned from <xref:System.Xml.XmlTextReader> are atomized using the `NameTable`. When the same name is returned multiple times (for example, `Customer`), then the same `String` object is returned for that name. This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons."
  syntax:
    content: public override System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: The `XmlNameTable` enabling you to get the atomized version of a string within the node.
  overload: System.Xml.XmlTextReader.NameTable*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.NodeType
  commentId: P:System.Xml.XmlTextReader.NodeType
  id: NodeType
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlTextReader.NodeType
  fullName: XmlTextReader.NodeType
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the type of the current node.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property never returns the following `XmlNodeType` types: `Document`, `DocumentFragment`, `Entity`, `EndEntity`, or `Notation`."
  example:
  - "The following example reads an XML file and displays each of the nodes.  \n  \n [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  \n  \n The sample uses the file `items.xml`.  \n  \n [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]"
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: One of the <xref href="System.Xml.XmlNodeType"></xref> values representing the type of the current node.
  overload: System.Xml.XmlTextReader.NodeType*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Normalization
  commentId: P:System.Xml.XmlTextReader.Normalization
  id: Normalization
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Normalization
  nameWithType: XmlTextReader.Normalization
  fullName: XmlTextReader.Normalization
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets or sets a value indicating whether to normalize white space and attribute values.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property can be changed at any time and takes effect on the next read operation.  \n  \n> [!NOTE]\n>  If the <xref:System.Xml.XmlTextReader> is used to construct an <xref:System.Xml.XmlValidatingReader>, to normalize attribute values, `Normalization` must be set to `true`.  \n  \n If `Normalization` is set to `false`, this also disables character range checking for numeric entities. As a result, character entities, such as `&#0;`, are allowed.  \n  \n The following describes attribute value normalization:  \n  \n-   For a character reference, append the referenced character to the attribute value.  \n  \n-   For an entity reference, recursively process the replacement text of the entity.  \n  \n-   For a white space character (#x20, #xD, #xA, #x9), append #x20 to the normalized value. (Only a single #x20 is appended for a \"#xD#xA\" sequence that is part of an external parsed entity or the literal entity value of an internal parsed entity.)  \n  \n-   Process other characters by appending them to the normalized value.  \n  \n-   If the declared value is not CDATA, discard any leading and trailing space (#x20) characters and replace sequences of space (#x20) characters with a single space (#x20) character.  \n  \n The `XmlTextReader` only performs attribute or CDATA normalization. It does not do DTD-specific normalization unless wrapped within an `XmlValidatingReader`.  \n  \n Refer to the W3C XML 1.0 recommendation for further discussion on normalization."
  example:
  - "The following example shows reader behavior with normalization turned on and then off.  \n  \n [!code-cpp[XmlTextReader.Normalization#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.Normalization/CPP/readnormal.cpp#1)]\n [!code-csharp[XmlTextReader.Normalization#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.Normalization/CS/readnormal.cs#1)]\n [!code-vb[XmlTextReader.Normalization#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.Normalization/VB/readnormal.vb#1)]"
  syntax:
    content: public bool Normalization { get; set; }
    return:
      type: System.Boolean
      description: '`true` to normalize; otherwise, `false`. The default is `false`.'
  overload: System.Xml.XmlTextReader.Normalization*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Setting this property when the reader is closed (<xref href="System.Xml.XmlTextReader.ReadState"></xref> is `ReadState.Closed`).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Prefix
  commentId: P:System.Xml.XmlTextReader.Prefix
  id: Prefix
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Prefix
  nameWithType: XmlTextReader.Prefix
  fullName: XmlTextReader.Prefix
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the namespace prefix associated with the current node.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  example:
  - "The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.  \n  \n [!code-cpp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.LocalName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/VB/source.vb#1)]  \n  \n The example uses the file, `book2.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlTextReader.LocalName Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.LocalName Example/XML/source.xml#2)]"
  syntax:
    content: public override string Prefix { get; }
    return:
      type: System.String
      description: The namespace prefix associated with the current node.
  overload: System.Xml.XmlTextReader.Prefix*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ProhibitDtd
  commentId: P:System.Xml.XmlTextReader.ProhibitDtd
  id: ProhibitDtd
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ProhibitDtd
  nameWithType: XmlTextReader.ProhibitDtd
  fullName: XmlTextReader.ProhibitDtd
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets or sets a value indicating whether to allow DTD processing. This property is obsolete. Use <xref href="System.Xml.XmlTextReader.DtdProcessing"></xref> instead.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n DTD processing is enabled by default for backwards compatibility. However, unless your application requires DTD processing, you should disable this setting. Disabling DTD processing can be useful in preventing certain denial of service attacks. If set to `true`, the reader throws an <xref:System.Xml.XmlException> when any DTD content is encountered.  \n  \n If you have DTD processing enabled, you need to be aware of including DTDs from untrusted sources and possible denial of service attacks. Use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlTextReader> can access. You can also design your application so that the XML processing is memory and time constrained. For example, configure time-out limits in your ASP.NET application"
  syntax:
    content: >-
      [System.Obsolete("Use DtdProcessing property instead.")]

      public bool ProhibitDtd { get; set; }
    return:
      type: System.Boolean
      description: '`true` to disallow DTD processing; otherwise `false`. The default is `false`.'
  overload: System.Xml.XmlTextReader.ProhibitDtd*
  exceptions: []
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.QuoteChar
  commentId: P:System.Xml.XmlTextReader.QuoteChar
  id: QuoteChar
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: QuoteChar
  nameWithType: XmlTextReader.QuoteChar
  fullName: XmlTextReader.QuoteChar
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the quotation mark character used to enclose the value of an attribute node.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property applies only to an attribute node."
  syntax:
    content: public override char QuoteChar { get; }
    return:
      type: System.Char
      description: The quotation mark character (" or ') used to enclose the value of an attribute node.
  overload: System.Xml.XmlTextReader.QuoteChar*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Read
  commentId: M:System.Xml.XmlTextReader.Read
  id: Read
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Read()
  nameWithType: XmlTextReader.Read()
  fullName: XmlTextReader.Read()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the next node from the stream.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n When a reader is first created and initialized, there is no information available. You must call `Read` to read the first node.  \n  \n This method requires at least four bytes from the data stream in order to begin parsing. If fewer than four bytes are returned and there is no more data in the stream, the method will fail. If there is more data in the stream, the method will block parsing until receipt of the fourth byte."
  example:
  - "The following example reads an XML file and displays each node.  \n  \n [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  \n  \n The sample uses the file `items.xml`.  \n  \n [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the next node was read successfully; `false` if there are no more nodes to read.'
  overload: System.Xml.XmlTextReader.Read*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: An error occurred while parsing the XML.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadAttributeValue
  commentId: M:System.Xml.XmlTextReader.ReadAttributeValue
  id: ReadAttributeValue
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadAttributeValue()
  nameWithType: XmlTextReader.ReadAttributeValue()
  fullName: XmlTextReader.ReadAttributeValue()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Parses the attribute value into one or more `Text`, `EntityReference`, or `EndEntity` nodes.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n Use this method after calling `MoveToAttribute` to read through the text or entity reference nodes that make up the attribute value. The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references."
  example:
  - "The following example reads an attribute with text and entity nodes.  \n  \n [!code-cpp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CPP/readattrval.cpp#1)]\n [!code-csharp[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/CS/readattrval.cs#1)]\n [!code-vb[XmlTextReader.ReadAttributeValue#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ReadAttributeValue/VB/readattrval.vb#1)]"
  syntax:
    content: public override bool ReadAttributeValue ();
    parameters: []
    return:
      type: System.Boolean
      description: "`true` if there are nodes to return.  \n  \n `false` if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.  \n  \n An empty attribute, such as, <code>misc=\"\"</code>, returns `true` with a single node with a value of `String.Empty`."
  overload: System.Xml.XmlTextReader.ReadAttributeValue*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadBase64(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadBase64(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadBase64(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Decodes Base64 and returns the decoded binary bytes.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text. It decodes Base64 content and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer. See RFC 1521. (You can obtain RFCs from the Request for Comments Web site at http://www.rfc-editor.org)"
  example:
  - "The following example reads a file containing Base64 and BinHex data.  \n  \n [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  \n  \n The sample uses the file `binary.xml`  \n  \n [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]"
  syntax:
    content: public int ReadBase64 (byte[] array, int offset, int len);
    parameters:
    - id: array
      type: System.Byte[]
      description: The array of characters that serves as the buffer to which the text contents are written.
    - id: offset
      type: System.Int32
      description: The zero-based index into the array specifying where the method can begin to write to the buffer.
    - id: len
      type: System.Int32
      description: The number of bytes to write into the buffer.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlTextReader.ReadBase64*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The Base64 sequence is not valid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value of <code>array</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>offset</code> < 0, or <code>len</code> < 0, or <code>len</code> > <code>array</code>.Length- <code>offset</code>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)
  id: ReadBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadBinHex(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadBinHex(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadBinHex(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Decodes `BinHex` and returns the decoded binary bytes.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n Like <xref:System.Xml.XmlTextReader.ReadChars%2A>, this method can be called successively to read large streams of embedded text. It decodes `BinHex` content and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer."
  example:
  - "The following example reads a file containing `Base64` and `BinHex` data.  \n  \n [!code-cpp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.ReadBase64 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/VB/source.vb#1)]  \n  \n The sample uses the file `binary.xml`  \n  \n [!code-xml[Classic WebData XmlTextReader.ReadBase64 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.ReadBase64 Example/XML/source.xml#2)]"
  syntax:
    content: public int ReadBinHex (byte[] array, int offset, int len);
    parameters:
    - id: array
      type: System.Byte[]
      description: The byte array that serves as the buffer to which the decoded binary bytes are written.
    - id: offset
      type: System.Int32
      description: The zero-based index into the array specifying where the method can begin to write to the buffer.
    - id: len
      type: System.Int32
      description: The number of bytes to write into the buffer.
    return:
      type: System.Int32
      description: The number of bytes written to your buffer.
  overload: System.Xml.XmlTextReader.ReadBinHex*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The `BinHex` sequence is not valid.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value of <code>array</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>offset</code> < 0, or <code>len</code> < 0, or <code>len</code> > <code>array</code>.Length- <code>offset</code>.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)
  id: ReadChars(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadChars(Char[], Int32, Int32)
  nameWithType: XmlTextReader.ReadChars(Char[], Int32, Int32)
  fullName: XmlTextReader.ReadChars(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the text contents of an element into a character buffer. This method is designed to read large streams of embedded text by calling it successively.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This is the most efficient way to process very large streams of text embedded in an XML document. Rather than allocating large string objects, `ReadChars` returns text content a buffer at a time. This method is designed to work only on element nodes. Other node types cause `ReadChars` to return `0`.  \n  \n In the following XML, if the reader is positioned on the start tag, `ReadChars` returns `test` and positions the reader after the end tag.  \n  \n```  \n<Item>test</Item>  \n```  \n  \n `ReadChars` has the following functionality:  \n  \n-   This method is designed to work on element nodes only. Other node types cause `ReadChars` to return 0.  \n  \n-   This method returns the actual character content. There is no attempt to resolve entities, CDATA, or any other markup encountered. `ReadChars` returns everything between the start tag and the end tag, including markup.  \n  \n-   `ReadChars` ignores XML markup that is not well-formed. For example, when reading the following XML string `<A>1<A>2</A>`, `ReadChars` returns `1<A>2</A>`. (It returns markup from the matching element pair and ignores others.)  \n  \n-   This method does not do any normalization.  \n  \n-   When `ReadChars` has reached the end of the character stream, it returns the value 0 and the reader is positioned after the end tag.  \n  \n-   Attribute read methods are not available while using `ReadChars`.  \n  \n For example, using the following XML:  \n  \n```  \n<thing>  \n some text  \n</thing>  \n<item>  \n</item>  \n```  \n  \n The reader is positioned on the `<item>` element at the end of the while loop.  \n  \n```  \nif (XmlNodeType.Element == reader.NodeType && \"thing\" == reader.Name)  \n{  \n while(0 != reader.ReadChars(buffer, 0, 1)  \n {  \n // Do something.  \n // Attribute values are not available at this point.  \n }  \n}  \n```"
  example:
  - "The following example reads in XML using `ReadChars`.  \n  \n [!code-cpp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.ReadChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.ReadChars Example/VB/source.vb#1)]  \n  \n The example uses the `items.xml` file as input.  \n  \n [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]"
  syntax:
    content: public int ReadChars (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: The array of characters that serves as the buffer to which the text contents are written.
    - id: index
      type: System.Int32
      description: The position within <code>buffer</code> where the method can begin writing text contents.
    - id: count
      type: System.Int32
      description: The number of characters to write into <code>buffer</code>.
    return:
      type: System.Int32
      description: The number of characters read. This can be `0` if the reader is not positioned on an element or if there is no more text content to return in the current context.
  overload: System.Xml.XmlTextReader.ReadChars*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>count</code> is greater than the space specified in the <code>buffer</code> (buffer size - <code>index</code>).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: >-
      <code>index</code>
          `< 0` or <code>count</code>`< 0`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadContentAsBase64(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadContentAsBase64(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadContentAsBase64(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the content and returns the `Base64` decoded binary bytes.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer. This method can be called successively to read large streams of embedded text. For more information, see RFC 1521, \"MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies\". You can obtain RFCs from the Request for Comments Web site at http://www.rfc-editor.org.  \n  \n> [!NOTE]\n>  You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method until the method returns the value 0.  \n  \n This method has the following behavior:  \n  \n-   <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on. The reader is positioned on the first non-content node.  \n  \n-   If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.  \n  \n-   <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`."
  syntax:
    content: public override int ReadContentAsBase64 (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlTextReader.ReadContentAsBase64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)"></xref> is not supported in the current node.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  id: ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadContentAsBinHex(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadContentAsBinHex(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadContentAsBinHex(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the content and returns the `BinHex` decoded binary bytes.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer. This method can be called successively to read large streams of embedded text.  \n  \n> [!NOTE]\n>  You should not access any of the reader properties between calls to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method until the method returns the value 0.  \n  \n This method has the following behavior:  \n  \n-   <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on. The reader is positioned on the first non-content node.  \n  \n-   If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.  \n  \n-   <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`."
  syntax:
    content: public override int ReadContentAsBinHex (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlTextReader.ReadContentAsBinHex*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <xref href="System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)"></xref> is not supported on the current node.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Xml.XmlTextReader"></xref> implementation does not support this method.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadElementContentAsBase64(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadElementContentAsBase64(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadElementContentAsBase64(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the element and decodes the Base64 content.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This method reads the element content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer. For more information, see RFC 1521, \"MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies\". You can obtain RFCs from the Request for Comments Web site at http://www.rfc-editor.org.  \n  \n This method can only read simple-content elements. The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions. It can also contain entity references, which are automatically expanded. The element cannot have child elements.  \n  \n This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.  \n  \n If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read. The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.  \n  \n If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called. This means that the reader reads all the text until the end element is encountered. It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node."
  example:
  - See <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=fullName> to see an example using this method.
  syntax:
    content: public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlTextReader.ReadElementContentAsBase64*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current node is not an element node.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Xml.XmlTextReader"></xref> implementation does not support this method.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The element contains mixed-content.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The content cannot be converted to the requested type.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  id: ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadElementContentAsBinHex(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadElementContentAsBinHex(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadElementContentAsBinHex(Byte[], Int32, Int32)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the element and decodes the `BinHex` content.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.  \n  \n This method can only read simple-content elements. The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions. It can also contain entity references, which are automatically expanded. The element cannot have child elements.  \n  \n This method is very similar to the <xref:System.Xml.XmlTextReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.  \n  \n If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlTextReader> reads all the remaining bytes in the document and returns the number of bytes read. The next <xref:System.Xml.XmlTextReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement>.  \n  \n If you call <xref:System.Xml.XmlTextReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlTextReader.Read%2A> method was called. This means that the reader reads all the text until the end element is encountered. It then reads the end tag node, reads the next node, and then positions itself on the next subsequent node."
  example:
  - See <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=fullName> to see an example using this method.
  syntax:
    content: public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer into which to copy the resulting text. This value cannot be `null`.
    - id: index
      type: System.Int32
      description: The offset into the buffer where to start copying the result.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to copy into the buffer. The actual number of bytes copied is returned from this method.
    return:
      type: System.Int32
      description: The number of bytes written to the buffer.
  overload: System.Xml.XmlTextReader.ReadElementContentAsBinHex*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>buffer</code> value is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The current node is not an element node.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The index into the buffer or index + count is larger than the allocated buffer size.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.Xml.XmlReader"></xref> implementation does not support this method.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: The element contains mixed-content.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: The content cannot be converted to the requested type.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadState
  commentId: P:System.Xml.XmlTextReader.ReadState
  id: ReadState
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadState
  nameWithType: XmlTextReader.ReadState
  fullName: XmlTextReader.ReadState
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the state of the reader.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  syntax:
    content: public override System.Xml.ReadState ReadState { get; }
    return:
      type: System.Xml.ReadState
      description: One of the <xref href="System.Xml.ReadState"></xref> values.
  overload: System.Xml.XmlTextReader.ReadState*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ReadString
  commentId: M:System.Xml.XmlTextReader.ReadString
  id: ReadString
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ReadString()
  nameWithType: XmlTextReader.ReadString()
  fullName: XmlTextReader.ReadString()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Reads the contents of an element or a text node as a string.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and `CData` section node types together and returns the concatenated data as the element content. It stops when any markup is encountered, including comments and processing instructions. This could occur in a mixed content model, or when an element end tag is read.  \n  \n If positioned on a text node, `ReadString` performs the same concatenation from the text node to the element end tag. If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag. It returns all the concatenated element text nodes."
  example:
  - "The following example displays the text content of each element.  \n  \n [!code-cpp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlReader.IsStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/VB/source.vb#1)]  \n  \n The example uses the file, `elems.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlReader.IsStartElement Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlReader.IsStartElement Example/XML/source.xml#2)]"
  syntax:
    content: public override string ReadString ();
    parameters: []
    return:
      type: System.String
      description: "The contents of the element or text node. This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.  \n  \n `Note:` The text node can be either an element or an attribute text node."
  overload: System.Xml.XmlTextReader.ReadString*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: An error occurred while parsing the XML.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: An invalid operation was attempted.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ResetState
  commentId: M:System.Xml.XmlTextReader.ResetState
  id: ResetState
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ResetState()
  nameWithType: XmlTextReader.ResetState()
  fullName: XmlTextReader.ResetState()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Resets the state of the reader to ReadState.Initial.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This method enables you to parse multiple XML documents in a single stream. When you reach the end of an XML document, you can call `ResetState` to reset the state of the reader in preparation for the next XML document.  \n  \n> [!IMPORTANT]\n>  The documents in the stream must share the same encoding. If this is not the case, when `ResetState` is called an <xref:System.Xml.XmlException> is thrown. (This is a change in behavior from .NET Framework version 1.1 and earlier).  \n  \n The following properties are not affected by `ResetState`.  \n  \n-   <xref:System.Xml.XmlTextReader.Normalization%2A>  \n  \n-   <xref:System.Xml.XmlTextReader.Namespaces%2A>  \n  \n-   <xref:System.Xml.XmlTextReader.XmlResolver%2A>  \n  \n-   <xref:System.Xml.XmlTextReader.WhitespaceHandling%2A>"
  example:
  - "The following example parses two XML documents in a single stream.  \n  \n [!code-cpp[XmlTextReader.ResetState#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.ResetState/CPP/resetstate.cpp#1)]\n [!code-csharp[XmlTextReader.ResetState#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.ResetState/CS/resetstate.cs#1)]\n [!code-vb[XmlTextReader.ResetState#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.ResetState/VB/resetstate.vb#1)]"
  syntax:
    content: public void ResetState ();
    parameters: []
  overload: System.Xml.XmlTextReader.ResetState*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Calling `ResetState` if the reader was constructed using an <xref href="System.Xml.XmlParserContext"></xref>.
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: Documents in a single stream do not share the same encoding.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.ResolveEntity
  commentId: M:System.Xml.XmlTextReader.ResolveEntity
  id: ResolveEntity
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: ResolveEntity()
  nameWithType: XmlTextReader.ResolveEntity()
  fullName: XmlTextReader.ResolveEntity()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Resolves the entity reference for `EntityReference` nodes.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlTextReader.Read%2A> is called after calling this method, the entity replacement text is parsed. When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.  \n  \n> [!NOTE]\n>  After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlTextReader.ReadAttributeValue%2A> to step into the entity."
  syntax:
    content: public override void ResolveEntity ();
    parameters: []
  overload: System.Xml.XmlTextReader.ResolveEntity*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Skip
  commentId: M:System.Xml.XmlTextReader.Skip
  id: Skip
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Skip()
  nameWithType: XmlTextReader.Skip()
  fullName: XmlTextReader.Skip()
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Skips the children of the current node.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.  \n  \n If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlTextReader.Read%2A>.  \n  \n```  \n<a name=\"bob\" age=\"123\">  \n  <x/>abc<y/>  \n</a>  \n<b>  \n ...  \n</b>  \n```  \n  \n This method checks for well-formed XML."
  syntax:
    content: public override void Skip ();
    parameters: []
  overload: System.Xml.XmlTextReader.Skip*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.Value
  commentId: P:System.Xml.XmlTextReader.Value
  id: Value
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: Value
  nameWithType: XmlTextReader.Value
  fullName: XmlTextReader.Value
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the text value of the current node.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  example:
  - "The following example reads an XML file and displays each node.  \n  \n [!code-cpp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/VB/source.vb#1)]  \n  \n The sample uses the file `items.xml`.  \n  \n [!code-xml[Classic WebData XmlTextReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlTextReader.Name Example/XML/source.xml#2)]"
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: "The value returned depends on the <xref href=\"System.Xml.XmlTextReader.NodeType\"></xref> of the node. The following table lists node types that have a value to return. All other node types return `String.Empty`.  \n  \n <table><thead><tr><th> Node Type  \n  \n </th><th> Value  \n  \n </th></tr></thead><tbody><tr><td>`Attribute`</td><td> The value of the attribute.  \n  \n </td></tr><tr><td>`CDATA`</td><td> The content of the CDATA section.  \n  \n </td></tr><tr><td>`Comment`</td><td> The content of the comment.  \n  \n </td></tr><tr><td>`DocumentType`</td><td> The internal subset.  \n  \n </td></tr><tr><td>`ProcessingInstruction`</td><td> The entire content, excluding the target.  \n  \n </td></tr><tr><td>`SignificantWhitespace`</td><td> The white space within an `xml:space`= 'preserve' scope.  \n  \n </td></tr><tr><td>`Text`</td><td> The content of the text node.  \n  \n </td></tr><tr><td>`Whitespace`</td><td> The white space between markup.  \n  \n </td></tr><tr><td>`XmlDeclaration`</td><td> The content of the declaration.  \n  \n </td></tr></tbody></table>"
  overload: System.Xml.XmlTextReader.Value*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.WhitespaceHandling
  commentId: P:System.Xml.XmlTextReader.WhitespaceHandling
  id: WhitespaceHandling
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: WhitespaceHandling
  nameWithType: XmlTextReader.WhitespaceHandling
  fullName: XmlTextReader.WhitespaceHandling
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets or sets a value that specifies how white space is handled.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property can be changed at any time and takes effect on the next read operation.  \n  \n Because the `XmlTextReader` does not have DTD information available to it, `SignificantWhitepsace` nodes are only returned within an `xml:space='preserve'` scope."
  example:
  - "The following example reads an XML fragment.  \n  \n [!code-cpp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlTextReader.WhitespaceHandling Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextReader.WhitespaceHandling Example/VB/source.vb#1)]"
  syntax:
    content: public System.Xml.WhitespaceHandling WhitespaceHandling { get; set; }
    return:
      type: System.Xml.WhitespaceHandling
      description: One of the <xref href="System.Xml.WhitespaceHandling"></xref> values. The default is `WhitespaceHandling.All` (returns `Whitespace` and `SignificantWhitespace` nodes).
  overload: System.Xml.XmlTextReader.WhitespaceHandling*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Invalid value specified.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Setting this property when the reader is closed (<xref href="System.Xml.XmlTextReader.ReadState"></xref> is `ReadState.Closed`).
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.XmlLang
  commentId: P:System.Xml.XmlTextReader.XmlLang
  id: XmlLang
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlLang
  nameWithType: XmlTextReader.XmlLang
  fullName: XmlTextReader.XmlLang
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the current `xml:lang` scope.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n This property represents the `xml:lang` scope within which the current node resides. For example, here is an XML fragment with `xml:lang` set to US English in the root element:  \n  \n \\<root xml:lang=\"en-us\">  \n  \n \\<name>Fred\\</name>  \n  \n \\</root>  \n  \n When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute."
  example:
  - "The following example displays the `xml:lang` value for each of the nodes.  \n  \n [!code-cpp[XmlTextReader.XmlLang#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlLang/CPP/readlang.cpp#1)]\n [!code-csharp[XmlTextReader.XmlLang#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlLang/CS/readlang.cs#1)]\n [!code-vb[XmlTextReader.XmlLang#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlLang/VB/readlang.vb#1)]"
  syntax:
    content: public override string XmlLang { get; }
    return:
      type: System.String
      description: The current `xml:lang` scope.
  overload: System.Xml.XmlTextReader.XmlLang*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.XmlResolver
  commentId: P:System.Xml.XmlTextReader.XmlResolver
  id: XmlResolver
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlTextReader.XmlResolver
  fullName: XmlTextReader.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Sets the <xref href="System.Xml.XmlResolver"></xref> used for resolving DTD references.
  remarks: "> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.  \n  \n The reader uses `XmlResolver` to resolve the location of the file loaded into the reader and also to resolve DTD references. For example, if your XML included the DOCTYPE declaration, `<!DOCTYPE book SYSTEM book.dtd>` the reader resolves this external file and ensures that the DTD is well-formed. The reader does not use the DTD for validation.  \n  \n This property can be changed at any time and takes effect on the next read operation. If this property is set to `null`, any external DTD references encountered by the reader are not resolved.  \n  \n In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], if this property is not set, the trust level of the application determines the default behavior.  \n  \n `Fully trusted code:` The reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials. If authentication is required to access a network resource, use the `XmlResolver` property to specify an `XmlResolver` with the necessary credentials.  \n  \n `Semi-trusted code:` The `XmlResolver` property is set to `null`. External resources are not resolved."
  example:
  - "The following example uses the `XmlResolver` property to specify the credentials necessary to access the networked file.  \n  \n [!code-cpp[XmlTextReader.XmlResolver#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlResolver/CPP/rdr_resolver.cpp#1)]\n [!code-csharp[XmlTextReader.XmlResolver#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlResolver/CS/rdr_resolver.cs#1)]\n [!code-vb[XmlTextReader.XmlResolver#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlResolver/VB/rdr_resolver.vb#1)]"
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "The `XmlResolver` to use. If set to `null`, external resources are not resolved.  \n  \n In version 1.1 of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the caller must be fully trusted in order to specify an `XmlResolver`."
  overload: System.Xml.XmlTextReader.XmlResolver*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.XmlSpace
  commentId: P:System.Xml.XmlTextReader.XmlSpace
  id: XmlSpace
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: XmlSpace
  nameWithType: XmlTextReader.XmlSpace
  fullName: XmlTextReader.XmlSpace
  type: Property
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: Gets the current `xml:space` scope.
  remarks: >-
    > [!NOTE]

    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A?displayProperty=fullName> method to take advantage of new functionality.
  example:
  - "The following example parses a file and returns significant white space if an `xml:space='preserve'` scope is found.  \n  \n [!code-cpp[XmlTextReader.XmlSpace#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextReader.XmlSpace/CPP/readspace.cpp#1)]\n [!code-csharp[XmlTextReader.XmlSpace#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextReader.XmlSpace/CS/readspace.cs#1)]\n [!code-vb[XmlTextReader.XmlSpace#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextReader.XmlSpace/VB/readspace.vb#1)]  \n  \n The example uses the file, `authors.xml`, as input."
  syntax:
    content: public override System.Xml.XmlSpace XmlSpace { get; }
    return:
      type: System.Xml.XmlSpace
      description: One of the <xref href="System.Xml.XmlSpace"></xref> values. If no `xml:space` scope exists, this property defaults to `XmlSpace.None`.
  overload: System.Xml.XmlTextReader.XmlSpace*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  commentId: M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  id: System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  isEii: true
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)
  nameWithType: XmlTextReader.IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)
  fullName: XmlTextReader.IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: For a description of this member, see <xref href="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.
  syntax:
    content: System.Collections.Generic.IDictionary<string,string> IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);
    parameters:
    - id: scope
      type: System.Xml.XmlNamespaceScope
      description: An <xref href="System.Xml.XmlNamespaceScope"></xref> value that specifies the type of namespace nodes to return.
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: An <xref href="System.Collections.IDictionary"></xref> that contains the current in-scope namespaces.
  overload: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)
  commentId: M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)
  id: System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)
  isEii: true
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: IXmlNamespaceResolver.LookupNamespace(String)
  nameWithType: XmlTextReader.IXmlNamespaceResolver.LookupNamespace(String)
  fullName: XmlTextReader.IXmlNamespaceResolver.LookupNamespace(String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: For a description of this member, see <xref href="System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)"></xref>.
  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Xml.XmlTextReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.
  syntax:
    content: string IXmlNamespaceResolver.LookupNamespace (string prefix);
    parameters:
    - id: prefix
      type: System.String
      description: The prefix whose namespace URI you wish to find.
    return:
      type: System.String
      description: The namespace URI that is mapped to the prefix; `null` if the prefix is not mapped to a namespace URI.
  overload: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)
  commentId: M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)
  id: System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)
  isEii: true
  parent: System.Xml.XmlTextReader
  langs:
  - csharp
  name: IXmlNamespaceResolver.LookupPrefix(String)
  nameWithType: XmlTextReader.IXmlNamespaceResolver.LookupPrefix(String)
  fullName: XmlTextReader.IXmlNamespaceResolver.LookupPrefix(String)
  type: Method
  assemblies:
  - System.Xml
  - netstandard
  - System.Xml.ReaderWriter
  namespace: System.Xml
  summary: For a description of this member, see <xref href="System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)"></xref>.
  syntax:
    content: string IXmlNamespaceResolver.LookupPrefix (string namespaceName);
    parameters:
    - id: namespaceName
      type: System.String
      description: The namespace URI whose prefix you wish to find.
    return:
      type: System.String
      description: The prefix that is mapped to the namespace URI; `null` if the namespace URI is not mapped to a prefix.
  overload: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.XmlException
  parent: System.Xml
  isExternal: false
  name: XmlException
  nameWithType: XmlException
  fullName: System.Xml.XmlException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NullReferenceException
  parent: System
  isExternal: false
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: System.IO.FileNotFoundException
  parent: System.IO
  isExternal: false
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: System.IO.DirectoryNotFoundException
  parent: System.IO
  isExternal: false
  name: DirectoryNotFoundException
  nameWithType: DirectoryNotFoundException
  fullName: System.IO.DirectoryNotFoundException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Net.WebException
  parent: System.Net
  isExternal: false
  name: WebException
  nameWithType: WebException
  fullName: System.Net.WebException
- uid: System.UriFormatException
  parent: System
  isExternal: false
  name: UriFormatException
  nameWithType: UriFormatException
  fullName: System.UriFormatException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.FormatException
  parent: System
  isExternal: false
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: System.Xml.XmlTextReader.#ctor
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader()
  nameWithType: XmlTextReader.XmlTextReader()
  fullName: XmlTextReader.XmlTextReader()
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(String, XmlNodeType, XmlParserContext)
  nameWithType: XmlTextReader.XmlTextReader(String, XmlNodeType, XmlParserContext)
  fullName: XmlTextReader.XmlTextReader(String, XmlNodeType, XmlParserContext)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: false
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlParserContext
  parent: System.Xml
  isExternal: false
  name: XmlParserContext
  nameWithType: XmlParserContext
  fullName: System.Xml.XmlParserContext
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(String, TextReader, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(String, TextReader, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(String, TextReader, XmlNameTable)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(String, Stream, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(String, Stream, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(String, Stream, XmlNameTable)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(Stream, XmlNodeType, XmlParserContext)
  nameWithType: XmlTextReader.XmlTextReader(Stream, XmlNodeType, XmlParserContext)
  fullName: XmlTextReader.XmlTextReader(Stream, XmlNodeType, XmlParserContext)
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(String, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(String, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(String, XmlNameTable)
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(String, Stream)
  nameWithType: XmlTextReader.XmlTextReader(String, Stream)
  fullName: XmlTextReader.XmlTextReader(String, Stream)
- uid: System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(String, TextReader)
  nameWithType: XmlTextReader.XmlTextReader(String, TextReader)
  fullName: XmlTextReader.XmlTextReader(String, TextReader)
- uid: System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(Stream, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(Stream, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(Stream, XmlNameTable)
- uid: System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(XmlNameTable)
- uid: System.Xml.XmlTextReader.#ctor(System.String)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(String)
  nameWithType: XmlTextReader.XmlTextReader(String)
  fullName: XmlTextReader.XmlTextReader(String)
- uid: System.Xml.XmlTextReader.#ctor(System.IO.TextReader)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(TextReader)
  nameWithType: XmlTextReader.XmlTextReader(TextReader)
  fullName: XmlTextReader.XmlTextReader(TextReader)
- uid: System.Xml.XmlTextReader.#ctor(System.IO.Stream)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(Stream)
  nameWithType: XmlTextReader.XmlTextReader(Stream)
  fullName: XmlTextReader.XmlTextReader(Stream)
- uid: System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader(TextReader, XmlNameTable)
  nameWithType: XmlTextReader.XmlTextReader(TextReader, XmlNameTable)
  fullName: XmlTextReader.XmlTextReader(TextReader, XmlNameTable)
- uid: System.Xml.XmlTextReader.AttributeCount
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: AttributeCount
  nameWithType: XmlTextReader.AttributeCount
  fullName: XmlTextReader.AttributeCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlTextReader.BaseURI
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: BaseURI
  nameWithType: XmlTextReader.BaseURI
  fullName: XmlTextReader.BaseURI
- uid: System.Xml.XmlTextReader.CanReadBinaryContent
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: CanReadBinaryContent
  nameWithType: XmlTextReader.CanReadBinaryContent
  fullName: XmlTextReader.CanReadBinaryContent
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlTextReader.CanReadValueChunk
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: CanReadValueChunk
  nameWithType: XmlTextReader.CanReadValueChunk
  fullName: XmlTextReader.CanReadValueChunk
- uid: System.Xml.XmlTextReader.CanResolveEntity
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: CanResolveEntity
  nameWithType: XmlTextReader.CanResolveEntity
  fullName: XmlTextReader.CanResolveEntity
- uid: System.Xml.XmlTextReader.Close
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Close()
  nameWithType: XmlTextReader.Close()
  fullName: XmlTextReader.Close()
- uid: System.Xml.XmlTextReader.Depth
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Depth
  nameWithType: XmlTextReader.Depth
  fullName: XmlTextReader.Depth
- uid: System.Xml.XmlTextReader.DtdProcessing
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: DtdProcessing
  nameWithType: XmlTextReader.DtdProcessing
  fullName: XmlTextReader.DtdProcessing
- uid: System.Xml.DtdProcessing
  parent: System.Xml
  isExternal: false
  name: DtdProcessing
  nameWithType: DtdProcessing
  fullName: System.Xml.DtdProcessing
- uid: System.Xml.XmlTextReader.Encoding
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Encoding
  nameWithType: XmlTextReader.Encoding
  fullName: XmlTextReader.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Xml.XmlTextReader.EntityHandling
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: EntityHandling
  nameWithType: XmlTextReader.EntityHandling
  fullName: XmlTextReader.EntityHandling
- uid: System.Xml.EntityHandling
  parent: System.Xml
  isExternal: false
  name: EntityHandling
  nameWithType: EntityHandling
  fullName: System.Xml.EntityHandling
- uid: System.Xml.XmlTextReader.EOF
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: EOF
  nameWithType: XmlTextReader.EOF
  fullName: XmlTextReader.EOF
- uid: System.Xml.XmlTextReader.GetAttribute(System.String)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: GetAttribute(String)
  nameWithType: XmlTextReader.GetAttribute(String)
  fullName: XmlTextReader.GetAttribute(String)
- uid: System.Xml.XmlTextReader.GetAttribute(System.String,System.String)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: GetAttribute(String, String)
  nameWithType: XmlTextReader.GetAttribute(String, String)
  fullName: XmlTextReader.GetAttribute(String, String)
- uid: System.Xml.XmlTextReader.GetAttribute(System.Int32)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: GetAttribute(Int32)
  nameWithType: XmlTextReader.GetAttribute(Int32)
  fullName: XmlTextReader.GetAttribute(Int32)
- uid: System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: GetNamespacesInScope(XmlNamespaceScope)
  nameWithType: XmlTextReader.GetNamespacesInScope(XmlNamespaceScope)
  fullName: XmlTextReader.GetNamespacesInScope(XmlNamespaceScope)
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlNamespaceScope
  parent: System.Xml
  isExternal: false
  name: XmlNamespaceScope
  nameWithType: XmlNamespaceScope
  fullName: System.Xml.XmlNamespaceScope
- uid: System.Xml.XmlTextReader.GetRemainder
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: GetRemainder()
  nameWithType: XmlTextReader.GetRemainder()
  fullName: XmlTextReader.GetRemainder()
- uid: System.Xml.XmlTextReader.HasLineInfo
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: HasLineInfo()
  nameWithType: XmlTextReader.HasLineInfo()
  fullName: XmlTextReader.HasLineInfo()
- uid: System.Xml.XmlTextReader.HasValue
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: HasValue
  nameWithType: XmlTextReader.HasValue
  fullName: XmlTextReader.HasValue
- uid: System.Xml.XmlTextReader.IsDefault
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: IsDefault
  nameWithType: XmlTextReader.IsDefault
  fullName: XmlTextReader.IsDefault
- uid: System.Xml.XmlTextReader.IsEmptyElement
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: IsEmptyElement
  nameWithType: XmlTextReader.IsEmptyElement
  fullName: XmlTextReader.IsEmptyElement
- uid: System.Xml.XmlTextReader.LineNumber
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: LineNumber
  nameWithType: XmlTextReader.LineNumber
  fullName: XmlTextReader.LineNumber
- uid: System.Xml.XmlTextReader.LinePosition
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: LinePosition
  nameWithType: XmlTextReader.LinePosition
  fullName: XmlTextReader.LinePosition
- uid: System.Xml.XmlTextReader.LocalName
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: LocalName
  nameWithType: XmlTextReader.LocalName
  fullName: XmlTextReader.LocalName
- uid: System.Xml.XmlTextReader.LookupNamespace(System.String)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: LookupNamespace(String)
  nameWithType: XmlTextReader.LookupNamespace(String)
  fullName: XmlTextReader.LookupNamespace(String)
- uid: System.Xml.XmlTextReader.MoveToAttribute(System.Int32)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToAttribute(Int32)
  nameWithType: XmlTextReader.MoveToAttribute(Int32)
  fullName: XmlTextReader.MoveToAttribute(Int32)
- uid: System.Xml.XmlTextReader.MoveToAttribute(System.String)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToAttribute(String)
  nameWithType: XmlTextReader.MoveToAttribute(String)
  fullName: XmlTextReader.MoveToAttribute(String)
- uid: System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToAttribute(String, String)
  nameWithType: XmlTextReader.MoveToAttribute(String, String)
  fullName: XmlTextReader.MoveToAttribute(String, String)
- uid: System.Xml.XmlTextReader.MoveToElement
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToElement()
  nameWithType: XmlTextReader.MoveToElement()
  fullName: XmlTextReader.MoveToElement()
- uid: System.Xml.XmlTextReader.MoveToFirstAttribute
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToFirstAttribute()
  nameWithType: XmlTextReader.MoveToFirstAttribute()
  fullName: XmlTextReader.MoveToFirstAttribute()
- uid: System.Xml.XmlTextReader.MoveToNextAttribute
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToNextAttribute()
  nameWithType: XmlTextReader.MoveToNextAttribute()
  fullName: XmlTextReader.MoveToNextAttribute()
- uid: System.Xml.XmlTextReader.Name
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Name
  nameWithType: XmlTextReader.Name
  fullName: XmlTextReader.Name
- uid: System.Xml.XmlTextReader.Namespaces
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Namespaces
  nameWithType: XmlTextReader.Namespaces
  fullName: XmlTextReader.Namespaces
- uid: System.Xml.XmlTextReader.NamespaceURI
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlTextReader.NamespaceURI
  fullName: XmlTextReader.NamespaceURI
- uid: System.Xml.XmlTextReader.NameTable
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: NameTable
  nameWithType: XmlTextReader.NameTable
  fullName: XmlTextReader.NameTable
- uid: System.Xml.XmlTextReader.NodeType
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: NodeType
  nameWithType: XmlTextReader.NodeType
  fullName: XmlTextReader.NodeType
- uid: System.Xml.XmlTextReader.Normalization
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Normalization
  nameWithType: XmlTextReader.Normalization
  fullName: XmlTextReader.Normalization
- uid: System.Xml.XmlTextReader.Prefix
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Prefix
  nameWithType: XmlTextReader.Prefix
  fullName: XmlTextReader.Prefix
- uid: System.Xml.XmlTextReader.ProhibitDtd
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ProhibitDtd
  nameWithType: XmlTextReader.ProhibitDtd
  fullName: XmlTextReader.ProhibitDtd
- uid: System.Xml.XmlTextReader.QuoteChar
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: QuoteChar
  nameWithType: XmlTextReader.QuoteChar
  fullName: XmlTextReader.QuoteChar
- uid: System.Char
  parent: System
  isExternal: false
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.XmlTextReader.Read
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Read()
  nameWithType: XmlTextReader.Read()
  fullName: XmlTextReader.Read()
- uid: System.Xml.XmlTextReader.ReadAttributeValue
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadAttributeValue()
  nameWithType: XmlTextReader.ReadAttributeValue()
  fullName: XmlTextReader.ReadAttributeValue()
- uid: System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadBase64(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadBase64(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadBase64(Byte[], Int32, Int32)
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadBinHex(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadBinHex(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadBinHex(Byte[], Int32, Int32)
- uid: System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadChars(Char[], Int32, Int32)
  nameWithType: XmlTextReader.ReadChars(Char[], Int32, Int32)
  fullName: XmlTextReader.ReadChars(Char[], Int32, Int32)
- uid: System.Char[]
  parent: System
  isExternal: false
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadContentAsBase64(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadContentAsBase64(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadContentAsBase64(Byte[], Int32, Int32)
- uid: System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadContentAsBinHex(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadContentAsBinHex(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadContentAsBinHex(Byte[], Int32, Int32)
- uid: System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadElementContentAsBase64(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadElementContentAsBase64(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadElementContentAsBase64(Byte[], Int32, Int32)
- uid: System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadElementContentAsBinHex(Byte[], Int32, Int32)
  nameWithType: XmlTextReader.ReadElementContentAsBinHex(Byte[], Int32, Int32)
  fullName: XmlTextReader.ReadElementContentAsBinHex(Byte[], Int32, Int32)
- uid: System.Xml.XmlTextReader.ReadState
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadState
  nameWithType: XmlTextReader.ReadState
  fullName: XmlTextReader.ReadState
- uid: System.Xml.ReadState
  parent: System.Xml
  isExternal: false
  name: ReadState
  nameWithType: ReadState
  fullName: System.Xml.ReadState
- uid: System.Xml.XmlTextReader.ReadString
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadString()
  nameWithType: XmlTextReader.ReadString()
  fullName: XmlTextReader.ReadString()
- uid: System.Xml.XmlTextReader.ResetState
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ResetState()
  nameWithType: XmlTextReader.ResetState()
  fullName: XmlTextReader.ResetState()
- uid: System.Xml.XmlTextReader.ResolveEntity
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ResolveEntity()
  nameWithType: XmlTextReader.ResolveEntity()
  fullName: XmlTextReader.ResolveEntity()
- uid: System.Xml.XmlTextReader.Skip
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Skip()
  nameWithType: XmlTextReader.Skip()
  fullName: XmlTextReader.Skip()
- uid: System.Xml.XmlTextReader.Value
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Value
  nameWithType: XmlTextReader.Value
  fullName: XmlTextReader.Value
- uid: System.Xml.XmlTextReader.WhitespaceHandling
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: WhitespaceHandling
  nameWithType: XmlTextReader.WhitespaceHandling
  fullName: XmlTextReader.WhitespaceHandling
- uid: System.Xml.WhitespaceHandling
  parent: System.Xml
  isExternal: false
  name: WhitespaceHandling
  nameWithType: WhitespaceHandling
  fullName: System.Xml.WhitespaceHandling
- uid: System.Xml.XmlTextReader.XmlLang
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlLang
  nameWithType: XmlTextReader.XmlLang
  fullName: XmlTextReader.XmlLang
- uid: System.Xml.XmlTextReader.XmlResolver
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlResolver
  nameWithType: XmlTextReader.XmlResolver
  fullName: XmlTextReader.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.XmlTextReader.XmlSpace
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlSpace
  nameWithType: XmlTextReader.XmlSpace
  fullName: XmlTextReader.XmlSpace
- uid: System.Xml.XmlSpace
  parent: System.Xml
  isExternal: false
  name: XmlSpace
  nameWithType: XmlSpace
  fullName: System.Xml.XmlSpace
- uid: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)
  nameWithType: XmlTextReader.IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)
  fullName: XmlTextReader.IXmlNamespaceResolver.GetNamespacesInScope(XmlNamespaceScope)
- uid: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: IXmlNamespaceResolver.LookupNamespace(String)
  nameWithType: XmlTextReader.IXmlNamespaceResolver.LookupNamespace(String)
  fullName: XmlTextReader.IXmlNamespaceResolver.LookupNamespace(String)
- uid: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: IXmlNamespaceResolver.LookupPrefix(String)
  nameWithType: XmlTextReader.IXmlNamespaceResolver.LookupPrefix(String)
  fullName: XmlTextReader.IXmlNamespaceResolver.LookupPrefix(String)
- uid: System.Xml.XmlTextReader.#ctor*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlTextReader
  nameWithType: XmlTextReader.XmlTextReader
  fullName: XmlTextReader.XmlTextReader
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.GetAttribute*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: GetAttribute
  nameWithType: XmlTextReader.GetAttribute
  fullName: XmlTextReader.GetAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.MoveToAttribute*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToAttribute
  nameWithType: XmlTextReader.MoveToAttribute
  fullName: XmlTextReader.MoveToAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.AttributeCount*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: AttributeCount
  nameWithType: XmlTextReader.AttributeCount
  fullName: XmlTextReader.AttributeCount
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.BaseURI*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: BaseURI
  nameWithType: XmlTextReader.BaseURI
  fullName: XmlTextReader.BaseURI
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.CanReadBinaryContent*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: CanReadBinaryContent
  nameWithType: XmlTextReader.CanReadBinaryContent
  fullName: XmlTextReader.CanReadBinaryContent
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.CanReadValueChunk*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: CanReadValueChunk
  nameWithType: XmlTextReader.CanReadValueChunk
  fullName: XmlTextReader.CanReadValueChunk
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.CanResolveEntity*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: CanResolveEntity
  nameWithType: XmlTextReader.CanResolveEntity
  fullName: XmlTextReader.CanResolveEntity
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Close*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Close
  nameWithType: XmlTextReader.Close
  fullName: XmlTextReader.Close
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Depth*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Depth
  nameWithType: XmlTextReader.Depth
  fullName: XmlTextReader.Depth
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.DtdProcessing*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: DtdProcessing
  nameWithType: XmlTextReader.DtdProcessing
  fullName: XmlTextReader.DtdProcessing
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Encoding*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Encoding
  nameWithType: XmlTextReader.Encoding
  fullName: XmlTextReader.Encoding
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.EntityHandling*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: EntityHandling
  nameWithType: XmlTextReader.EntityHandling
  fullName: XmlTextReader.EntityHandling
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.EOF*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: EOF
  nameWithType: XmlTextReader.EOF
  fullName: XmlTextReader.EOF
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.GetNamespacesInScope*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: GetNamespacesInScope
  nameWithType: XmlTextReader.GetNamespacesInScope
  fullName: XmlTextReader.GetNamespacesInScope
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.GetRemainder*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: GetRemainder
  nameWithType: XmlTextReader.GetRemainder
  fullName: XmlTextReader.GetRemainder
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.HasLineInfo*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: HasLineInfo
  nameWithType: XmlTextReader.HasLineInfo
  fullName: XmlTextReader.HasLineInfo
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.HasValue*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: HasValue
  nameWithType: XmlTextReader.HasValue
  fullName: XmlTextReader.HasValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.IsDefault*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: IsDefault
  nameWithType: XmlTextReader.IsDefault
  fullName: XmlTextReader.IsDefault
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.IsEmptyElement*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: IsEmptyElement
  nameWithType: XmlTextReader.IsEmptyElement
  fullName: XmlTextReader.IsEmptyElement
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.LineNumber*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: LineNumber
  nameWithType: XmlTextReader.LineNumber
  fullName: XmlTextReader.LineNumber
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.LinePosition*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: LinePosition
  nameWithType: XmlTextReader.LinePosition
  fullName: XmlTextReader.LinePosition
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.LocalName*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: LocalName
  nameWithType: XmlTextReader.LocalName
  fullName: XmlTextReader.LocalName
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.LookupNamespace*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: LookupNamespace
  nameWithType: XmlTextReader.LookupNamespace
  fullName: XmlTextReader.LookupNamespace
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.MoveToElement*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToElement
  nameWithType: XmlTextReader.MoveToElement
  fullName: XmlTextReader.MoveToElement
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.MoveToFirstAttribute*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToFirstAttribute
  nameWithType: XmlTextReader.MoveToFirstAttribute
  fullName: XmlTextReader.MoveToFirstAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.MoveToNextAttribute*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: MoveToNextAttribute
  nameWithType: XmlTextReader.MoveToNextAttribute
  fullName: XmlTextReader.MoveToNextAttribute
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Name*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Name
  nameWithType: XmlTextReader.Name
  fullName: XmlTextReader.Name
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Namespaces*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Namespaces
  nameWithType: XmlTextReader.Namespaces
  fullName: XmlTextReader.Namespaces
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.NamespaceURI*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlTextReader.NamespaceURI
  fullName: XmlTextReader.NamespaceURI
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.NameTable*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: NameTable
  nameWithType: XmlTextReader.NameTable
  fullName: XmlTextReader.NameTable
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.NodeType*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: NodeType
  nameWithType: XmlTextReader.NodeType
  fullName: XmlTextReader.NodeType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Normalization*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Normalization
  nameWithType: XmlTextReader.Normalization
  fullName: XmlTextReader.Normalization
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Prefix*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Prefix
  nameWithType: XmlTextReader.Prefix
  fullName: XmlTextReader.Prefix
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ProhibitDtd*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ProhibitDtd
  nameWithType: XmlTextReader.ProhibitDtd
  fullName: XmlTextReader.ProhibitDtd
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.QuoteChar*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: QuoteChar
  nameWithType: XmlTextReader.QuoteChar
  fullName: XmlTextReader.QuoteChar
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Read*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Read
  nameWithType: XmlTextReader.Read
  fullName: XmlTextReader.Read
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadAttributeValue*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadAttributeValue
  nameWithType: XmlTextReader.ReadAttributeValue
  fullName: XmlTextReader.ReadAttributeValue
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadBase64*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadBase64
  nameWithType: XmlTextReader.ReadBase64
  fullName: XmlTextReader.ReadBase64
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadBinHex*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadBinHex
  nameWithType: XmlTextReader.ReadBinHex
  fullName: XmlTextReader.ReadBinHex
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadChars*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadChars
  nameWithType: XmlTextReader.ReadChars
  fullName: XmlTextReader.ReadChars
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadContentAsBase64*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadContentAsBase64
  nameWithType: XmlTextReader.ReadContentAsBase64
  fullName: XmlTextReader.ReadContentAsBase64
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadContentAsBinHex*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadContentAsBinHex
  nameWithType: XmlTextReader.ReadContentAsBinHex
  fullName: XmlTextReader.ReadContentAsBinHex
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadElementContentAsBase64*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadElementContentAsBase64
  nameWithType: XmlTextReader.ReadElementContentAsBase64
  fullName: XmlTextReader.ReadElementContentAsBase64
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadElementContentAsBinHex*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadElementContentAsBinHex
  nameWithType: XmlTextReader.ReadElementContentAsBinHex
  fullName: XmlTextReader.ReadElementContentAsBinHex
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadState*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadState
  nameWithType: XmlTextReader.ReadState
  fullName: XmlTextReader.ReadState
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ReadString*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ReadString
  nameWithType: XmlTextReader.ReadString
  fullName: XmlTextReader.ReadString
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ResetState*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ResetState
  nameWithType: XmlTextReader.ResetState
  fullName: XmlTextReader.ResetState
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.ResolveEntity*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: ResolveEntity
  nameWithType: XmlTextReader.ResolveEntity
  fullName: XmlTextReader.ResolveEntity
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Skip*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Skip
  nameWithType: XmlTextReader.Skip
  fullName: XmlTextReader.Skip
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.Value*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: Value
  nameWithType: XmlTextReader.Value
  fullName: XmlTextReader.Value
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.WhitespaceHandling*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: WhitespaceHandling
  nameWithType: XmlTextReader.WhitespaceHandling
  fullName: XmlTextReader.WhitespaceHandling
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.XmlLang*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlLang
  nameWithType: XmlTextReader.XmlLang
  fullName: XmlTextReader.XmlLang
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.XmlResolver*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlResolver
  nameWithType: XmlTextReader.XmlResolver
  fullName: XmlTextReader.XmlResolver
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.XmlSpace*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: XmlSpace
  nameWithType: XmlTextReader.XmlSpace
  fullName: XmlTextReader.XmlSpace
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: System.Xml.IXmlNamespaceResolver.GetNamespacesInScope
  nameWithType: XmlTextReader.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope
  fullName: XmlTextReader.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: System.Xml.IXmlNamespaceResolver.LookupNamespace
  nameWithType: XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupNamespace
  fullName: XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupNamespace
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix*
  parent: System.Xml.XmlTextReader
  isExternal: false
  name: System.Xml.IXmlNamespaceResolver.LookupPrefix
  nameWithType: XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupPrefix
  fullName: XmlTextReader.System.Xml.IXmlNamespaceResolver.LookupPrefix
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextReader.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(String, XmlReaderSettings, XmlParserContext)
  nameWithType: XmlReader.Create(String, XmlReaderSettings, XmlParserContext)
  fullName: XmlReader.Create(String, XmlReaderSettings, XmlParserContext)
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader, XmlReaderSettings, XmlParserContext)
  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings, XmlParserContext)
  fullName: XmlReader.Create(TextReader, XmlReaderSettings, XmlParserContext)
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader, XmlReaderSettings, String)
  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings, String)
  fullName: XmlReader.Create(TextReader, XmlReaderSettings, String)
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream, XmlReaderSettings, String)
  nameWithType: XmlReader.Create(Stream, XmlReaderSettings, String)
  fullName: XmlReader.Create(Stream, XmlReaderSettings, String)
- uid: System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(XmlReader, XmlReaderSettings)
  nameWithType: XmlReader.Create(XmlReader, XmlReaderSettings)
  fullName: XmlReader.Create(XmlReader, XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream, XmlReaderSettings, XmlParserContext)
  nameWithType: XmlReader.Create(Stream, XmlReaderSettings, XmlParserContext)
  fullName: XmlReader.Create(Stream, XmlReaderSettings, XmlParserContext)
- uid: System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader, XmlReaderSettings)
  nameWithType: XmlReader.Create(TextReader, XmlReaderSettings)
  fullName: XmlReader.Create(TextReader, XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream, XmlReaderSettings)
  nameWithType: XmlReader.Create(Stream, XmlReaderSettings)
  fullName: XmlReader.Create(Stream, XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(String, XmlReaderSettings)
  nameWithType: XmlReader.Create(String, XmlReaderSettings)
  fullName: XmlReader.Create(String, XmlReaderSettings)
- uid: System.Xml.XmlReader.Create(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(String)
  nameWithType: XmlReader.Create(String)
  fullName: XmlReader.Create(String)
- uid: System.Xml.XmlReader.Create(System.IO.TextReader)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(TextReader)
  nameWithType: XmlReader.Create(TextReader)
  fullName: XmlReader.Create(TextReader)
- uid: System.Xml.XmlReader.Create(System.IO.Stream)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Create(Stream)
  nameWithType: XmlReader.Create(Stream)
  fullName: XmlReader.Create(Stream)
- uid: System.Xml.XmlReader.Dispose
  parent: System.Xml.XmlReader
  isExternal: false
  name: Dispose()
  nameWithType: XmlReader.Dispose()
  fullName: XmlReader.Dispose()
- uid: System.Xml.XmlReader.Dispose(System.Boolean)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XmlReader.Dispose(Boolean)
  fullName: XmlReader.Dispose(Boolean)
- uid: System.Xml.XmlReader.GetValueAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: GetValueAsync()
  nameWithType: XmlReader.GetValueAsync()
  fullName: XmlReader.GetValueAsync()
- uid: System.Xml.XmlReader.HasAttributes
  parent: System.Xml.XmlReader
  isExternal: false
  name: HasAttributes
  nameWithType: XmlReader.HasAttributes
  fullName: XmlReader.HasAttributes
- uid: System.Xml.XmlReader.IsName(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsName(String)
  nameWithType: XmlReader.IsName(String)
  fullName: XmlReader.IsName(String)
- uid: System.Xml.XmlReader.IsNameToken(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsNameToken(String)
  nameWithType: XmlReader.IsNameToken(String)
  fullName: XmlReader.IsNameToken(String)
- uid: System.Xml.XmlReader.IsStartElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement()
  nameWithType: XmlReader.IsStartElement()
  fullName: XmlReader.IsStartElement()
- uid: System.Xml.XmlReader.IsStartElement(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement(String)
  nameWithType: XmlReader.IsStartElement(String)
  fullName: XmlReader.IsStartElement(String)
- uid: System.Xml.XmlReader.IsStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: IsStartElement(String, String)
  nameWithType: XmlReader.IsStartElement(String, String)
  fullName: XmlReader.IsStartElement(String, String)
- uid: System.Xml.XmlReader.Item(System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item(Int32)
  nameWithType: XmlReader.Item(Int32)
  fullName: XmlReader.Item(Int32)
- uid: System.Xml.XmlReader.Item(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item(String)
  nameWithType: XmlReader.Item(String)
  fullName: XmlReader.Item(String)
- uid: System.Xml.XmlReader.Item(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: Item(String, String)
  nameWithType: XmlReader.Item(String, String)
  fullName: XmlReader.Item(String, String)
- uid: System.Xml.XmlReader.MoveToContent
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToContent()
  nameWithType: XmlReader.MoveToContent()
  fullName: XmlReader.MoveToContent()
- uid: System.Xml.XmlReader.MoveToContentAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: MoveToContentAsync()
  nameWithType: XmlReader.MoveToContentAsync()
  fullName: XmlReader.MoveToContentAsync()
- uid: System.Xml.XmlReader.ReadAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadAsync()
  nameWithType: XmlReader.ReadAsync()
  fullName: XmlReader.ReadAsync()
- uid: System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAs(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadContentAs(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadContentAs(Type, IXmlNamespaceResolver)
- uid: System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsAsync(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadContentAsAsync(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadContentAsAsync(Type, IXmlNamespaceResolver)
- uid: System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBase64Async(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBase64Async(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBase64Async(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBinHexAsync(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadContentAsBinHexAsync(Byte[], Int32, Int32)
  fullName: XmlReader.ReadContentAsBinHexAsync(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadContentAsBoolean
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsBoolean()
  nameWithType: XmlReader.ReadContentAsBoolean()
  fullName: XmlReader.ReadContentAsBoolean()
- uid: System.Xml.XmlReader.ReadContentAsDateTime
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDateTime()
  nameWithType: XmlReader.ReadContentAsDateTime()
  fullName: XmlReader.ReadContentAsDateTime()
- uid: System.Xml.XmlReader.ReadContentAsDateTimeOffset
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDateTimeOffset()
  nameWithType: XmlReader.ReadContentAsDateTimeOffset()
  fullName: XmlReader.ReadContentAsDateTimeOffset()
- uid: System.Xml.XmlReader.ReadContentAsDecimal
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDecimal()
  nameWithType: XmlReader.ReadContentAsDecimal()
  fullName: XmlReader.ReadContentAsDecimal()
- uid: System.Xml.XmlReader.ReadContentAsDouble
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsDouble()
  nameWithType: XmlReader.ReadContentAsDouble()
  fullName: XmlReader.ReadContentAsDouble()
- uid: System.Xml.XmlReader.ReadContentAsFloat
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsFloat()
  nameWithType: XmlReader.ReadContentAsFloat()
  fullName: XmlReader.ReadContentAsFloat()
- uid: System.Xml.XmlReader.ReadContentAsInt
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsInt()
  nameWithType: XmlReader.ReadContentAsInt()
  fullName: XmlReader.ReadContentAsInt()
- uid: System.Xml.XmlReader.ReadContentAsLong
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsLong()
  nameWithType: XmlReader.ReadContentAsLong()
  fullName: XmlReader.ReadContentAsLong()
- uid: System.Xml.XmlReader.ReadContentAsObject
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsObject()
  nameWithType: XmlReader.ReadContentAsObject()
  fullName: XmlReader.ReadContentAsObject()
- uid: System.Xml.XmlReader.ReadContentAsObjectAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsObjectAsync()
  nameWithType: XmlReader.ReadContentAsObjectAsync()
  fullName: XmlReader.ReadContentAsObjectAsync()
- uid: System.Xml.XmlReader.ReadContentAsString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsString()
  nameWithType: XmlReader.ReadContentAsString()
  fullName: XmlReader.ReadContentAsString()
- uid: System.Xml.XmlReader.ReadContentAsStringAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadContentAsStringAsync()
  nameWithType: XmlReader.ReadContentAsStringAsync()
  fullName: XmlReader.ReadContentAsStringAsync()
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAs(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver)
- uid: System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
  nameWithType: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
  fullName: XmlReader.ReadElementContentAs(Type, IXmlNamespaceResolver, String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
  nameWithType: XmlReader.ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
  fullName: XmlReader.ReadElementContentAsAsync(Type, IXmlNamespaceResolver)
- uid: System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBase64Async(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBase64Async(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBase64Async(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
  nameWithType: XmlReader.ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
  fullName: XmlReader.ReadElementContentAsBinHexAsync(Byte[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBoolean(String, String)
  nameWithType: XmlReader.ReadElementContentAsBoolean(String, String)
  fullName: XmlReader.ReadElementContentAsBoolean(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsBoolean
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsBoolean()
  nameWithType: XmlReader.ReadElementContentAsBoolean()
  fullName: XmlReader.ReadElementContentAsBoolean()
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDateTime()
  nameWithType: XmlReader.ReadElementContentAsDateTime()
  fullName: XmlReader.ReadElementContentAsDateTime()
- uid: System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDateTime(String, String)
  nameWithType: XmlReader.ReadElementContentAsDateTime(String, String)
  fullName: XmlReader.ReadElementContentAsDateTime(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDecimal()
  nameWithType: XmlReader.ReadElementContentAsDecimal()
  fullName: XmlReader.ReadElementContentAsDecimal()
- uid: System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDecimal(String, String)
  nameWithType: XmlReader.ReadElementContentAsDecimal(String, String)
  fullName: XmlReader.ReadElementContentAsDecimal(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsDouble
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDouble()
  nameWithType: XmlReader.ReadElementContentAsDouble()
  fullName: XmlReader.ReadElementContentAsDouble()
- uid: System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsDouble(String, String)
  nameWithType: XmlReader.ReadElementContentAsDouble(String, String)
  fullName: XmlReader.ReadElementContentAsDouble(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsFloat
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsFloat()
  nameWithType: XmlReader.ReadElementContentAsFloat()
  fullName: XmlReader.ReadElementContentAsFloat()
- uid: System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsFloat(String, String)
  nameWithType: XmlReader.ReadElementContentAsFloat(String, String)
  fullName: XmlReader.ReadElementContentAsFloat(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsInt
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsInt()
  nameWithType: XmlReader.ReadElementContentAsInt()
  fullName: XmlReader.ReadElementContentAsInt()
- uid: System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsInt(String, String)
  nameWithType: XmlReader.ReadElementContentAsInt(String, String)
  fullName: XmlReader.ReadElementContentAsInt(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsLong
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsLong()
  nameWithType: XmlReader.ReadElementContentAsLong()
  fullName: XmlReader.ReadElementContentAsLong()
- uid: System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsLong(String, String)
  nameWithType: XmlReader.ReadElementContentAsLong(String, String)
  fullName: XmlReader.ReadElementContentAsLong(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsObject
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObject()
  nameWithType: XmlReader.ReadElementContentAsObject()
  fullName: XmlReader.ReadElementContentAsObject()
- uid: System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObject(String, String)
  nameWithType: XmlReader.ReadElementContentAsObject(String, String)
  fullName: XmlReader.ReadElementContentAsObject(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsObjectAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsObjectAsync()
  nameWithType: XmlReader.ReadElementContentAsObjectAsync()
  fullName: XmlReader.ReadElementContentAsObjectAsync()
- uid: System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsString(String, String)
  nameWithType: XmlReader.ReadElementContentAsString(String, String)
  fullName: XmlReader.ReadElementContentAsString(String, String)
- uid: System.Xml.XmlReader.ReadElementContentAsString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsString()
  nameWithType: XmlReader.ReadElementContentAsString()
  fullName: XmlReader.ReadElementContentAsString()
- uid: System.Xml.XmlReader.ReadElementContentAsStringAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementContentAsStringAsync()
  nameWithType: XmlReader.ReadElementContentAsStringAsync()
  fullName: XmlReader.ReadElementContentAsStringAsync()
- uid: System.Xml.XmlReader.ReadElementString
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString()
  nameWithType: XmlReader.ReadElementString()
  fullName: XmlReader.ReadElementString()
- uid: System.Xml.XmlReader.ReadElementString(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString(String)
  nameWithType: XmlReader.ReadElementString(String)
  fullName: XmlReader.ReadElementString(String)
- uid: System.Xml.XmlReader.ReadElementString(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadElementString(String, String)
  nameWithType: XmlReader.ReadElementString(String, String)
  fullName: XmlReader.ReadElementString(String, String)
- uid: System.Xml.XmlReader.ReadEndElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadEndElement()
  nameWithType: XmlReader.ReadEndElement()
  fullName: XmlReader.ReadEndElement()
- uid: System.Xml.XmlReader.ReadInnerXml
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadInnerXml()
  nameWithType: XmlReader.ReadInnerXml()
  fullName: XmlReader.ReadInnerXml()
- uid: System.Xml.XmlReader.ReadInnerXmlAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadInnerXmlAsync()
  nameWithType: XmlReader.ReadInnerXmlAsync()
  fullName: XmlReader.ReadInnerXmlAsync()
- uid: System.Xml.XmlReader.ReadOuterXml
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadOuterXml()
  nameWithType: XmlReader.ReadOuterXml()
  fullName: XmlReader.ReadOuterXml()
- uid: System.Xml.XmlReader.ReadOuterXmlAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadOuterXmlAsync()
  nameWithType: XmlReader.ReadOuterXmlAsync()
  fullName: XmlReader.ReadOuterXmlAsync()
- uid: System.Xml.XmlReader.ReadStartElement
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement()
  nameWithType: XmlReader.ReadStartElement()
  fullName: XmlReader.ReadStartElement()
- uid: System.Xml.XmlReader.ReadStartElement(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement(String)
  nameWithType: XmlReader.ReadStartElement(String)
  fullName: XmlReader.ReadStartElement(String)
- uid: System.Xml.XmlReader.ReadStartElement(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadStartElement(String, String)
  nameWithType: XmlReader.ReadStartElement(String, String)
  fullName: XmlReader.ReadStartElement(String, String)
- uid: System.Xml.XmlReader.ReadSubtree
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadSubtree()
  nameWithType: XmlReader.ReadSubtree()
  fullName: XmlReader.ReadSubtree()
- uid: System.Xml.XmlReader.ReadToDescendant(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToDescendant(String, String)
  nameWithType: XmlReader.ReadToDescendant(String, String)
  fullName: XmlReader.ReadToDescendant(String, String)
- uid: System.Xml.XmlReader.ReadToDescendant(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToDescendant(String)
  nameWithType: XmlReader.ReadToDescendant(String)
  fullName: XmlReader.ReadToDescendant(String)
- uid: System.Xml.XmlReader.ReadToFollowing(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToFollowing(String)
  nameWithType: XmlReader.ReadToFollowing(String)
  fullName: XmlReader.ReadToFollowing(String)
- uid: System.Xml.XmlReader.ReadToFollowing(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToFollowing(String, String)
  nameWithType: XmlReader.ReadToFollowing(String, String)
  fullName: XmlReader.ReadToFollowing(String, String)
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToNextSibling(String)
  nameWithType: XmlReader.ReadToNextSibling(String)
  fullName: XmlReader.ReadToNextSibling(String)
- uid: System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadToNextSibling(String, String)
  nameWithType: XmlReader.ReadToNextSibling(String, String)
  fullName: XmlReader.ReadToNextSibling(String, String)
- uid: System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadValueChunk(Char[], Int32, Int32)
  nameWithType: XmlReader.ReadValueChunk(Char[], Int32, Int32)
  fullName: XmlReader.ReadValueChunk(Char[], Int32, Int32)
- uid: System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)
  parent: System.Xml.XmlReader
  isExternal: false
  name: ReadValueChunkAsync(Char[], Int32, Int32)
  nameWithType: XmlReader.ReadValueChunkAsync(Char[], Int32, Int32)
  fullName: XmlReader.ReadValueChunkAsync(Char[], Int32, Int32)
- uid: System.Xml.XmlReader.SchemaInfo
  parent: System.Xml.XmlReader
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlReader.SchemaInfo
  fullName: XmlReader.SchemaInfo
- uid: System.Xml.XmlReader.Settings
  parent: System.Xml.XmlReader
  isExternal: false
  name: Settings
  nameWithType: XmlReader.Settings
  fullName: XmlReader.Settings
- uid: System.Xml.XmlReader.SkipAsync
  parent: System.Xml.XmlReader
  isExternal: false
  name: SkipAsync()
  nameWithType: XmlReader.SkipAsync()
  fullName: XmlReader.SkipAsync()
- uid: System.Xml.XmlReader.ValueType
  parent: System.Xml.XmlReader
  isExternal: false
  name: ValueType
  nameWithType: XmlReader.ValueType
  fullName: XmlReader.ValueType
- uid: System.Xml.IXmlLineInfo
  parent: System.Xml
  isExternal: false
  name: IXmlLineInfo
  nameWithType: IXmlLineInfo
  fullName: System.Xml.IXmlLineInfo
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: false
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
