{"nodes":[{"content":"Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.  \n  \n Starting with the .NET Framework 2.0, we recommend that you use the <xref href=\"System.Xml.XmlWriter\"></xref> class instead.","nodes":[{"pos":[0,226],"content":"Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.","nodes":[{"content":"Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.","pos":[0,226]}]},{"pos":[233,357],"content":"Starting with the .NET Framework 2.0, we recommend that you use the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlWriter\"&gt;&lt;/xref&gt;</ph> class instead.","source":"Starting with the .NET Framework 2.0, we recommend that you use the <xref href=\"System.Xml.XmlWriter\"></xref> class instead."}],"pos":[2709,3073],"yaml":true},{"content":"This class implements the <xref:System.Xml.XmlWriter> class.  \n  \n> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n `XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack. Using `XmlTextWriter` you can declare namespaces manually.  \n  \n```  \nw.WriteStartElement(\"root\");  \nw.WriteAttributeString(\"xmlns\", \"x\", null, \"urn:1\");  \n w.WriteStartElement(\"item\",\"urn:1\");  \n w.WriteEndElement();  \n w.WriteStartElement(\"item\",\"urn:1\");  \n w.WriteEndElement();  \nw.WriteEndElement();  \n```  \n  \n The above C# code produces the following output. `XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements. The child elements pick up the prefix from the namespace declaration.  \n  \n```  \n<root xmlns:x=\"urn:1\">  \n <x:item/>  \n <x:item/>  \n</x:root>  \n```  \n  \n `XmlTextWriter` also allows you to override the current namespace declaration. In the following example, the namespace URI \"123\" is overridden by \"abc\" to produce the XML element `<x:node xmlns:x=\"abc\"/>`.  \n  \n```  \nw.WriteStartElement(\"x\",\"node\",\"123\");  \nw.WriteAttributeString(\"xmlns\",\"x\",null,\"abc\");  \n```  \n  \n By using the write methods that take a prefix as an argument you can also specify which prefix to use. In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x=\"urn:1\"><y:item xmlns:y=\"urn:1\"/></x:root>`.  \n  \n```  \nXmlTextWriter w = new XmlTextWriter(Console.Out);  \nw.WriteStartElement(\"x\",\"root\",\"urn:1\");  \n w.WriteStartElement(\"y\",\"item\",\"urn:1\");  \n w.WriteEndElement();  \nw.WriteEndElement();  \nw.Close();  \n```  \n  \n If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.  \n  \n```  \nXmlTextWriter w = new XmlTextWriter(Console.Out);  \nw.Formatting = Formatting.Indented;  \nw.WriteStartElement(\"x\",\"root\",\"urn:1\");  \nw.WriteStartElement(\"y\",\"item\",\"urn:1\");  \nw.WriteAttributeString(\"attr\",\"urn:1\",\"123\");  \nw.WriteEndElement();  \nw.WriteEndElement();  \nw.Close();  \n```  \n  \n In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:  \n  \n```  \n<x:root xmlns:x=\"urn:1\">  \n <y:item y:attr=\"123\" xmlns:y=\"urn:1\" />  \n</x:root>  \n```  \n  \n If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes. For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute. The generated prefixes are named `n{i}` where `i` is a number beginning at 1. The number is reset to 1 for each element.  \n  \n Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes). This conforms to section 5.2 of the W3C Namespaces in XML recommendation. If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.  \n  \n When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`. This provides compatibility with older browsers.  \n  \n When a `String` is used as method parameter, `null` and `String.Empty` are equivalent. `String.Empty` follows the W3C rules.  \n  \n To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string. For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.  \n  \n```  \nDouble price = 19.95;  \nwriter.WriteElementString(\"price\", XmlConvert.ToString(price));  \n```  \n  \n `XmlTextWriter` does not check for the following:  \n  \n-   Invalid characters in attribute and element names.  \n  \n-   Unicode characters that do not fit the specified encoding. If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.  \n  \n-   Duplicate attributes.  \n  \n-   Characters in the DOCTYPE public identifier or system identifier.  \n  \n## Security Considerations  \n The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.  \n  \n-   Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application. Your applications must catch exceptions and process them appropriately.  \n  \n-   When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application. If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.  \n  \n-   The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods. You should not pass arbitrary data to these methods.  \n  \n-   If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.  \n  \n-   Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.","nodes":[{"pos":[0,60],"content":"This class implements the <xref:System.Xml.XmlWriter> class.","nodes":[{"content":"This class implements the <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> class.","pos":[0,60],"source":"This class implements the <xref:System.Xml.XmlWriter> class."}]},{"pos":[68,356],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[363,539],"content":"`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack. Using `XmlTextWriter` you can declare namespaces manually.","nodes":[{"content":"<ph id=\"ph1\">`XmlTextWriter`</ph> maintains a namespace stack corresponding to all the namespaces defined in the current element stack.","pos":[0,117],"source":"`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack."},{"content":"Using <ph id=\"ph1\">`XmlTextWriter`</ph> you can declare namespaces manually.","pos":[118,176],"source":" Using `XmlTextWriter` you can declare namespaces manually."}]},{"pos":[798,1044],"content":"The above C# code produces the following output. `XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements. The child elements pick up the prefix from the namespace declaration.","nodes":[{"content":"The above C# code produces the following output.","pos":[0,48]},{"content":"<ph id=\"ph1\">`XmlTextWriter`</ph> promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.","pos":[49,176],"source":"`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements."},{"content":"The child elements pick up the prefix from the namespace declaration.","pos":[177,246]}]},{"pos":[1129,1334],"content":"`XmlTextWriter` also allows you to override the current namespace declaration. In the following example, the namespace URI \"123\" is overridden by \"abc\" to produce the XML element `<x:node xmlns:x=\"abc\"/>`.","nodes":[{"content":"<ph id=\"ph1\">`XmlTextWriter`</ph> also allows you to override the current namespace declaration.","pos":[0,78],"source":"`XmlTextWriter` also allows you to override the current namespace declaration."},{"content":"In the following example, the namespace URI \"123\" is overridden by \"abc\" to produce the XML element <ph id=\"ph1\">`&lt;x:node xmlns:x=\"abc\"/&gt;`</ph>.","pos":[79,205],"source":" In the following example, the namespace URI \"123\" is overridden by \"abc\" to produce the XML element `<x:node xmlns:x=\"abc\"/>`."}]},{"pos":[1447,1721],"content":"By using the write methods that take a prefix as an argument you can also specify which prefix to use. In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x=\"urn:1\"><y:item xmlns:y=\"urn:1\"/></x:root>`.","nodes":[{"content":"By using the write methods that take a prefix as an argument you can also specify which prefix to use.","pos":[0,102]},{"content":"In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text <ph id=\"ph1\">`&lt;x:root xmlns:x=\"urn:1\"&gt;&lt;y:item xmlns:y=\"urn:1\"/&gt;&lt;/x:root&gt;`</ph>.","pos":[103,274],"source":" In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x=\"urn:1\"><y:item xmlns:y=\"urn:1\"/></x:root>`."}]},{"pos":[1942,2135],"content":"If there are multiple namespace declarations mapping different prefixes to the same namespace URI, <ph id=\"ph1\">`XmlTextWriter`</ph> walks the stack of namespace declarations backwards and picks the closest one.","source":"If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one."},{"pos":[2440,2628],"content":"In the above C# example, because the <ph id=\"ph1\">`WriteAttributeString`</ph> call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:","source":"In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:"},{"pos":[2732,3095],"content":"If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes. For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute. The generated prefixes are named `n{i}` where `i` is a number beginning at 1. The number is reset to 1 for each element.","nodes":[{"content":"If namespace conflicts occur, <ph id=\"ph1\">`XmlTextWriter`</ph> resolves them by generating alternate prefixes.","pos":[0,93],"source":"If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes."},{"content":"For example, if an attribute and element have the same prefix but different namespaces, <ph id=\"ph1\">`XmlWriter`</ph> generates an alternate prefix for the attribute.","pos":[94,242],"source":" For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute."},{"content":"The generated prefixes are named <ph id=\"ph1\">`n{i}`</ph> where <ph id=\"ph2\">`i`</ph> is a number beginning at 1.","pos":[243,320],"source":" The generated prefixes are named `n{i}` where `i` is a number beginning at 1."},{"content":"The number is reset to 1 for each element.","pos":[321,363]}]},{"pos":[3102,3420],"content":"Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes). This conforms to section 5.2 of the W3C Namespaces in XML recommendation. If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.","nodes":[{"content":"Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes). This conforms to section 5.2 of the W3C Namespaces in XML recommendation. If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.","pos":[0,318],"nodes":[{"content":"Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).","pos":[0,120]},{"content":"This conforms to section 5.2 of the W3C Namespaces in XML recommendation.","pos":[121,194]},{"content":"If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.","pos":[195,318]}]}]},{"pos":[3427,3597],"content":"When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`. This provides compatibility with older browsers.","nodes":[{"content":"When writing an empty element, an additional space is added between tag name and the closing tag, for example <ph id=\"ph1\">`&lt;item /&gt;`</ph>.","pos":[0,121],"source":"When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`."},{"content":"This provides compatibility with older browsers.","pos":[122,170]}]},{"pos":[3604,3728],"content":"When a `String` is used as method parameter, `null` and `String.Empty` are equivalent. `String.Empty` follows the W3C rules.","nodes":[{"content":"When a <ph id=\"ph1\">`String`</ph> is used as method parameter, <ph id=\"ph2\">`null`</ph> and <ph id=\"ph3\">`String.Empty`</ph> are equivalent.","pos":[0,86],"source":"When a `String` is used as method parameter, `null` and `String.Empty` are equivalent."},{"content":"<ph id=\"ph1\">`String.Empty`</ph> follows the W3C rules.","pos":[87,124],"source":"`String.Empty` follows the W3C rules."}]},{"pos":[3735,3966],"content":"To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string. For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.","nodes":[{"content":"To write strongly typed data, use the <ph id=\"ph1\">&lt;xref:System.Xml.XmlConvert&gt;</ph> class to convert data types to string.","pos":[0,105],"source":"To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string."},{"content":"For example, the following C# code converts the data from <ph id=\"ph1\">`Double`</ph> to <ph id=\"ph2\">`String`</ph> and writes the element <ph id=\"ph3\">`&lt;price&gt;19.95&lt;/price&gt;`</ph>.","pos":[106,231],"source":" For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`."}]},{"pos":[4078,4127],"content":"<ph id=\"ph1\">`XmlTextWriter`</ph> does not check for the following:","source":"`XmlTextWriter` does not check for the following:"},{"pos":[4137,4187],"content":"Invalid characters in attribute and element names.","nodes":[{"content":"Invalid characters in attribute and element names.","pos":[0,50]}]},{"pos":[4197,4400],"content":"Unicode characters that do not fit the specified encoding. If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.","nodes":[{"content":"Unicode characters that do not fit the specified encoding.","pos":[0,58]},{"content":"If the Unicode characters do not fit the specified encoding, the <ph id=\"ph1\">`XmlTextWriter`</ph> does not escape the Unicode characters into character entities.","pos":[59,203],"source":" If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities."}]},{"pos":[4410,4431],"content":"Duplicate attributes.","nodes":[{"content":"Duplicate attributes.","pos":[0,21]}]},{"pos":[4441,4506],"content":"Characters in the DOCTYPE public identifier or system identifier.","nodes":[{"content":"Characters in the DOCTYPE public identifier or system identifier.","pos":[0,65]}]},{"pos":[4515,4538],"content":"Security Considerations","linkify":"Security Considerations","nodes":[{"content":"Security Considerations","pos":[0,23]}]},{"pos":[4542,4645],"content":"The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.","nodes":[{"content":"The following items are things to consider when working with the <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> class.","pos":[0,103],"source":"The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class."}]},{"pos":[4655,4865],"content":"Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application. Your applications must catch exceptions and process them appropriately.","nodes":[{"content":"Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application. Your applications must catch exceptions and process them appropriately.","pos":[0,210],"nodes":[{"content":"Exceptions thrown by the <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> can disclose path information that you do not want bubbled up to the application.","pos":[0,138],"source":"Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application."},{"content":"Your applications must catch exceptions and process them appropriately.","pos":[139,210]}]}]},{"pos":[4875,5210],"content":"When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application. If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.","nodes":[{"content":"When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application. If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.","pos":[0,335],"nodes":[{"content":"When you pass the <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> to another application the underlying stream is exposed to that application.","pos":[0,126],"source":"When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application."},{"content":"If you need to pass the <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> to a semi-trusted application, you should use an <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter&gt;</ph> object created by the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriter.Create%2A&gt;</ph> method instead.","pos":[127,335],"source":" If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead."}]}]},{"pos":[5220,5461],"content":"The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods. You should not pass arbitrary data to these methods.","nodes":[{"content":"The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods. You should not pass arbitrary data to these methods.","pos":[0,241],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> does not validate any data that is passed to the <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextWriter.WriteDocType%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A&gt;</ph> methods.","pos":[0,188],"source":"The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods."},{"content":"You should not pass arbitrary data to these methods.","pos":[189,241]}]}]},{"pos":[5471,5580],"content":"If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.","nodes":[{"content":"If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.","pos":[0,109]}]},{"pos":[5590,5699],"content":"Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.","nodes":[{"content":"Do not accept supporting components, such as an <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> object, from an untrusted source.","pos":[0,109],"source":"Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source."}]}],"pos":[3084,8965],"yaml":true,"extradata":"MT"},{"content":"Creates an instance of the `XmlTextWriter` class using the specified <xref href=\"System.IO.TextWriter\"></xref>.","nodes":[{"pos":[0,111],"content":"Creates an instance of the <ph id=\"ph1\">`XmlTextWriter`</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph>.","source":"Creates an instance of the `XmlTextWriter` class using the specified <xref href=\"System.IO.TextWriter\"></xref>."}],"pos":[15144,15256],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[15267,15570],"yaml":true,"extradata":"MT"},{"content":"The `TextWriter` to write to. It is assumed that the `TextWriter` is already set to the correct encoding.","nodes":[{"pos":[0,105],"content":"The `TextWriter` to write to. It is assumed that the `TextWriter` is already set to the correct encoding.","nodes":[{"content":"The <ph id=\"ph1\">`TextWriter`</ph> to write to.","pos":[0,29],"source":"The `TextWriter` to write to."},{"content":"It is assumed that the <ph id=\"ph1\">`TextWriter`</ph> is already set to the correct encoding.","pos":[30,105],"source":" It is assumed that the `TextWriter` is already set to the correct encoding."}]}],"pos":[15720,15826],"yaml":true},{"content":"Creates an instance of the `XmlTextWriter` class using the specified stream and encoding.","nodes":[{"pos":[0,89],"content":"Creates an instance of the <ph id=\"ph1\">`XmlTextWriter`</ph> class using the specified stream and encoding.","source":"Creates an instance of the `XmlTextWriter` class using the specified stream and encoding."}],"pos":[17163,17253],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[17264,17567],"yaml":true,"extradata":"MT"},{"content":"The stream to which you want to write.","nodes":[{"pos":[0,38],"content":"The stream to which you want to write.","nodes":[{"content":"The stream to which you want to write.","pos":[0,38]}]}],"pos":[17740,17779],"yaml":true},{"content":"The encoding to generate. If encoding is `null` it writes out the stream as UTF-8 and omits the encoding attribute from the `ProcessingInstruction`.","nodes":[{"pos":[0,148],"content":"The encoding to generate. If encoding is `null` it writes out the stream as UTF-8 and omits the encoding attribute from the `ProcessingInstruction`.","nodes":[{"content":"The encoding to generate.","pos":[0,25]},{"content":"If encoding is <ph id=\"ph1\">`null`</ph> it writes out the stream as UTF-8 and omits the encoding attribute from the <ph id=\"ph2\">`ProcessingInstruction`</ph>.","pos":[26,148],"source":" If encoding is `null` it writes out the stream as UTF-8 and omits the encoding attribute from the `ProcessingInstruction`."}]}],"pos":[17850,17999],"yaml":true},{"content":"The encoding is not supported or the stream cannot be written to.","nodes":[{"pos":[0,65],"content":"The encoding is not supported or the stream cannot be written to.","nodes":[{"content":"The encoding is not supported or the stream cannot be written to.","pos":[0,65]}]}],"pos":[18151,18217],"yaml":true},{"content":"<code>w</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;w&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>w</code> is `null`."}],"pos":[18319,18345],"yaml":true},{"content":"Creates an instance of the <xref href=\"System.Xml.XmlTextWriter\"></xref> class using the specified file.","nodes":[{"pos":[0,104],"content":"Creates an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter\"&gt;&lt;/xref&gt;</ph> class using the specified file.","source":"Creates an instance of the <xref href=\"System.Xml.XmlTextWriter\"></xref> class using the specified file."}],"pos":[19612,19717],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[19728,20031],"yaml":true,"extradata":"MT"},{"content":"The filename to write to. If the file exists, it truncates it and overwrites it with the new content.","nodes":[{"pos":[0,101],"content":"The filename to write to. If the file exists, it truncates it and overwrites it with the new content.","nodes":[{"content":"The filename to write to. If the file exists, it truncates it and overwrites it with the new content.","pos":[0,101],"nodes":[{"content":"The filename to write to.","pos":[0,25]},{"content":"If the file exists, it truncates it and overwrites it with the new content.","pos":[26,101]}]}]}],"pos":[20205,20307],"yaml":true},{"content":"The encoding to generate. If encoding is `null` it writes the file out as UTF-8, and omits the encoding attribute from the `ProcessingInstruction`.","nodes":[{"pos":[0,147],"content":"The encoding to generate. If encoding is `null` it writes the file out as UTF-8, and omits the encoding attribute from the `ProcessingInstruction`.","nodes":[{"content":"The encoding to generate.","pos":[0,25]},{"content":"If encoding is <ph id=\"ph1\">`null`</ph> it writes the file out as UTF-8, and omits the encoding attribute from the <ph id=\"ph2\">`ProcessingInstruction`</ph>.","pos":[26,147],"source":" If encoding is `null` it writes the file out as UTF-8, and omits the encoding attribute from the `ProcessingInstruction`."}]}],"pos":[20378,20526],"yaml":true},{"content":"The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.","nodes":[{"pos":[0,124],"content":"The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.","nodes":[{"content":"The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.","pos":[0,124]}]}],"pos":[20678,20803],"yaml":true},{"content":"Access is denied.","nodes":[{"pos":[0,17],"content":"Access is denied.","nodes":[{"content":"Access is denied.","pos":[0,17]}]}],"pos":[20917,20935],"yaml":true},{"content":"The filename is `null`.","nodes":[{"pos":[0,23],"content":"The filename is <ph id=\"ph1\">`null`</ph>.","source":"The filename is `null`."}],"pos":[21037,21061],"yaml":true},{"content":"The directory to write to is not found.","nodes":[{"pos":[0,39],"content":"The directory to write to is not found.","nodes":[{"content":"The directory to write to is not found.","pos":[0,39]}]}],"pos":[21179,21219],"yaml":true},{"content":"The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","nodes":[{"pos":[0,107],"content":"The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","nodes":[{"content":"The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.","pos":[0,107]}]}],"pos":[21307,21415],"yaml":true},{"content":"The caller does not have the required permission.","nodes":[{"pos":[0,49],"content":"The caller does not have the required permission.","nodes":[{"content":"The caller does not have the required permission.","pos":[0,49]}]}],"pos":[21527,21577],"yaml":true},{"content":"Gets the underlying stream object.","nodes":[{"pos":[0,34],"content":"Gets the underlying stream object.","nodes":[{"content":"Gets the underlying stream object.","pos":[0,34]}]}],"pos":[22683,22718],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=fullName> property. If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor. If the writer was constructed using a file name, this property returns the `Stream` representing the file.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,740],"content":"If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=fullName> property. If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor. If the writer was constructed using a file name, this property returns the `Stream` representing the file.","nodes":[{"content":"If the writer was constructed using a <ph id=\"ph1\">`TextWriter`</ph> that is derived from the <ph id=\"ph2\">`StreamWriter`</ph> class, this property is equivalent to the <ph id=\"ph3\">&lt;xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,211],"source":"If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=fullName> property."},{"content":"If the writer was constructed using a <ph id=\"ph1\">&lt;xref:System.IO.Stream&gt;</ph>, this property returns the <ph id=\"ph2\">`Stream`</ph> passed to the constructor.","pos":[212,336],"source":" If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor."},{"content":"If the writer was constructed using a file name, this property returns the <ph id=\"ph1\">`Stream`</ph> representing the file.","pos":[337,443],"source":" If the writer was constructed using a file name, this property returns the `Stream` representing the file."}]}],"pos":[22729,23475],"yaml":true,"extradata":"MT"},{"content":"The stream to which the `XmlTextWriter` is writing or `null` if the `XmlTextWriter` was constructed using a <xref href=\"System.IO.TextWriter\"></xref> that does not inherit from the <xref href=\"System.IO.StreamWriter\"></xref> class.","nodes":[{"pos":[0,231],"content":"The stream to which the <ph id=\"ph1\">`XmlTextWriter`</ph> is writing or <ph id=\"ph2\">`null`</ph> if the <ph id=\"ph3\">`XmlTextWriter`</ph> was constructed using a <ph id=\"ph4\">&lt;xref href=\"System.IO.TextWriter\"&gt;&lt;/xref&gt;</ph> that does not inherit from the <ph id=\"ph5\">&lt;xref href=\"System.IO.StreamWriter\"&gt;&lt;/xref&gt;</ph> class.","source":"The stream to which the `XmlTextWriter` is writing or `null` if the `XmlTextWriter` was constructed using a <xref href=\"System.IO.TextWriter\"></xref> that does not inherit from the <xref href=\"System.IO.StreamWriter\"></xref> class."}],"pos":[23602,23834],"yaml":true},{"content":"Closes this stream and the underlying stream.","nodes":[{"pos":[0,45],"content":"Closes this stream and the underlying stream.","nodes":[{"content":"Closes this stream and the underlying stream.","pos":[0,45]}]}],"pos":[24980,25026],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n Any elements or attributes left open are automatically closed.  \n  \n This method does not throw any exceptions.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,359],"content":"Any elements or attributes left open are automatically closed.","nodes":[{"content":"Any elements or attributes left open are automatically closed.","pos":[0,62]}]},{"pos":[366,408],"content":"This method does not throw any exceptions.","nodes":[{"content":"This method does not throw any exceptions.","pos":[0,42]}]}],"pos":[25037,25453],"yaml":true,"extradata":"MT"},{"content":"Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.","nodes":[{"pos":[0,99],"content":"Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.","nodes":[{"content":"Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.","pos":[0,99]}]}],"pos":[27264,27364],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,460],"content":"This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.","nodes":[{"content":"This is called instead of <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter.Close%2A&gt;</ph> when you want to write more to the underlying stream without losing what is still in the buffer.","pos":[0,163],"source":"This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer."}]}],"pos":[27375,27841],"yaml":true,"extradata":"MT"},{"content":"Indicates how the output is formatted.","nodes":[{"pos":[0,38],"content":"Indicates how the output is formatted.","nodes":[{"content":"Indicates how the output is formatted.","pos":[0,38]}]}],"pos":[29522,29561],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties. Only element content is indented. The following C# code writes out HTML elements including mixed content:  \n  \n```  \nXmlTextWriter w = new XmlTextWriter(Console.Out);   \n w.Formatting = Formatting.Indented;   \n w.WriteStartElement(\"ol\");   \n w.WriteStartElement(\"li\");   \n w.WriteString(\"The big \"); // This means \"li\" now has a mixed content model.  \n w.WriteElementString(\"b\", \"E\");   \n w.WriteElementString(\"i\", \"lephant\");   \n w.WriteString(\" walks slowly.\");   \n w.WriteEndElement();   \n w.WriteEndElement();  \n```  \n  \n The above code produces the following output:  \n  \n```  \n<ol>   \n  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   \n</ol>  \n```  \n  \n When this is viewed in HTML no white space appears between the bold and italic elements. In fact, in this example, if indenting was added between these elements the word \"Elephant\" would be incorrectly broken.  \n  \n> [!NOTE]\n>  Writing any text content, excluding `String.Empty` puts that element into mixed content mode. Child elements do not inherit this \"mixed\" mode status. A child element of a \"mixed\" element does indenting, unless it is also contains \"mixed\" content. Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,582],"content":"If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties. Only element content is indented. The following C# code writes out HTML elements including mixed content:","nodes":[{"content":"If the <ph id=\"ph1\">`Indented`</ph> option is set, child elements are indented using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextWriter.Indentation%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Xml.XmlTextWriter.IndentChar%2A&gt;</ph> properties.","pos":[0,179],"source":"If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties."},{"content":"Only element content is indented.","pos":[180,213]},{"content":"The following C# code writes out HTML elements including mixed content:","pos":[214,285]}]},{"pos":[1003,1048],"content":"The above code produces the following output:","nodes":[{"content":"The above code produces the following output:","pos":[0,45]}]},{"pos":[1145,1354],"content":"When this is viewed in HTML no white space appears between the bold and italic elements. In fact, in this example, if indenting was added between these elements the word \"Elephant\" would be incorrectly broken.","nodes":[{"content":"When this is viewed in HTML no white space appears between the bold and italic elements. In fact, in this example, if indenting was added between these elements the word \"Elephant\" would be incorrectly broken.","pos":[0,209],"nodes":[{"content":"When this is viewed in HTML no white space appears between the bold and italic elements.","pos":[0,88]},{"content":"In fact, in this example, if indenting was added between these elements the word \"Elephant\" would be incorrectly broken.","pos":[89,209]}]}]},{"pos":[1362,1846],"content":"[!NOTE]\n Writing any text content, excluding `String.Empty` puts that element into mixed content mode. Child elements do not inherit this \"mixed\" mode status. A child element of a \"mixed\" element does indenting, unless it is also contains \"mixed\" content. Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.","leadings":["","> "],"nodes":[{"content":" Writing any text content, excluding `String.Empty` puts that element into mixed content mode. Child elements do not inherit this \"mixed\" mode status. A child element of a \"mixed\" element does indenting, unless it is also contains \"mixed\" content. Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.","pos":[8,482],"nodes":[{"content":"Writing any text content, excluding <ph id=\"ph1\">`String.Empty`</ph> puts that element into mixed content mode.","pos":[1,94],"source":" Writing any text content, excluding `String.Empty` puts that element into mixed content mode."},{"content":"Child elements do not inherit this \"mixed\" mode status.","pos":[95,150]},{"content":"A child element of a \"mixed\" element does indenting, unless it is also contains \"mixed\" content.","pos":[151,247]},{"content":"Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.","pos":[248,474]}]}]}],"pos":[29572,31476],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Xml.Formatting\"></xref> values. The default is `Formatting.None` (no special formatting).","nodes":[{"pos":[0,119],"content":"One of the <xref href=\"System.Xml.Formatting\"></xref> values. The default is `Formatting.None` (no special formatting).","nodes":[{"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Formatting\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,61],"source":"One of the <xref href=\"System.Xml.Formatting\"></xref> values."},{"content":"The default is <ph id=\"ph1\">`Formatting.None`</ph> (no special formatting).","pos":[62,119],"source":" The default is `Formatting.None` (no special formatting)."}]}],"pos":[32215,32335],"yaml":true},{"content":"Gets or sets how many IndentChars to write for each level in the hierarchy when <xref href=\"System.Xml.XmlTextWriter.Formatting\"></xref> is set to `Formatting.Indented`.","nodes":[{"pos":[0,169],"content":"Gets or sets how many IndentChars to write for each level in the hierarchy when <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.Formatting\"&gt;&lt;/xref&gt;</ph> is set to <ph id=\"ph2\">`Formatting.Indented`</ph>.","source":"Gets or sets how many IndentChars to write for each level in the hierarchy when <xref href=\"System.Xml.XmlTextWriter.Formatting\"></xref> is set to `Formatting.Indented`."}],"pos":[33513,33683],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`. All other node types are not affected. The `XmlTextWriter` does not indent the internal DTD subset. However, you could do the following to apply formatting to the internal DTD subset.  \n  \n```  \nString name = \"Employees\";  \nString pubid = null;  \nString sysid = null;  \nString subset =  \n@\"  \n    <!ELEMENT Employees (Employee)+>  \n    <!ELEMENT Employee EMPTY>  \n    <!ATTLIST Employee firstname CDATA #REQUIRED>  \n    <!ENTITY Company 'Microsoft'>]>  \n\";  \nXmlTextWriter tw = new XmlTextWriter(Console.Out);  \ntw.WriteDocType(name, pubid, sysid, subset);  \n```","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,613],"content":"Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`. All other node types are not affected. The `XmlTextWriter` does not indent the internal DTD subset. However, you could do the following to apply formatting to the internal DTD subset.","nodes":[{"content":"Indentation is performed on following node types: <ph id=\"ph1\">`DocumentType`</ph>, <ph id=\"ph2\">`Element`</ph>, <ph id=\"ph3\">`Comment`</ph>, <ph id=\"ph4\">`ProcessingInstruction`</ph>, and <ph id=\"ph5\">`CDATASection`</ph>.","pos":[0,132],"source":"Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`."},{"content":"All other node types are not affected.","pos":[133,171]},{"content":"The <ph id=\"ph1\">`XmlTextWriter`</ph> does not indent the internal DTD subset.","pos":[172,232],"source":" The `XmlTextWriter` does not indent the internal DTD subset."},{"content":"However, you could do the following to apply formatting to the internal DTD subset.","pos":[233,316]}]}],"pos":[33694,34711],"yaml":true,"extradata":"MT"},{"content":"Number of `IndentChars` for each level. The default is 2.","nodes":[{"pos":[0,57],"content":"Number of `IndentChars` for each level. The default is 2.","nodes":[{"content":"Number of <ph id=\"ph1\">`IndentChars`</ph> for each level.","pos":[0,39],"source":"Number of `IndentChars` for each level."},{"content":"The default is 2.","pos":[40,57]}]}],"pos":[35424,35482],"yaml":true},{"content":"Setting this property to a negative value.","nodes":[{"pos":[0,42],"content":"Setting this property to a negative value.","nodes":[{"content":"Setting this property to a negative value.","pos":[0,42]}]}],"pos":[35640,35683],"yaml":true},{"content":"Gets or sets which character to use for indenting when <xref href=\"System.Xml.XmlTextWriter.Formatting\"></xref> is set to `Formatting.Indented`.","nodes":[{"pos":[0,144],"content":"Gets or sets which character to use for indenting when <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.Formatting\"&gt;&lt;/xref&gt;</ph> is set to <ph id=\"ph2\">`Formatting.Indented`</ph>.","source":"Gets or sets which character to use for indenting when <xref href=\"System.Xml.XmlTextWriter.Formatting\"></xref> is set to `Formatting.Indented`."}],"pos":[36789,36934],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[36945,37248],"yaml":true,"extradata":"MT"},{"content":"The character to use for indenting. The default is space.  \n  \n <block subset=\"none\" type=\"note\"><p>  \n The `XmlTextWriter` allows you to set this property to any character. To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.  \n  \n</p></block>","nodes":[{"pos":[0,57],"content":"The character to use for indenting. The default is space.","nodes":[{"content":"The character to use for indenting. The default is space.","pos":[0,57],"nodes":[{"content":"The character to use for indenting.","pos":[0,35]},{"content":"The default is space.","pos":[36,57]}]}]},{"pos":[64,267],"content":"<block subset=\"none\" type=\"note\"><p>  \n The `XmlTextWriter` allows you to set this property to any character. To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.","nodes":[{"content":" The `XmlTextWriter` allows you to set this property to any character. To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.","pos":[39,203],"nodes":[{"content":"The <ph id=\"ph1\">`XmlTextWriter`</ph> allows you to set this property to any character.","pos":[1,70],"source":" The `XmlTextWriter` allows you to set this property to any character."},{"content":"To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.","pos":[71,164]}]}]},{"pos":[273,285],"content":"</p></block>","nodes":[]}],"pos":[37363,37660],"yaml":true},{"content":"Returns the closest prefix defined in the current namespace scope for the namespace URI.","nodes":[{"pos":[0,88],"content":"Returns the closest prefix defined in the current namespace scope for the namespace URI.","nodes":[{"content":"Returns the closest prefix defined in the current namespace scope for the namespace URI.","pos":[0,88]}]}],"pos":[38911,39000],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[39011,39314],"yaml":true,"extradata":"MT"},{"content":"Namespace URI whose prefix you want to find.","nodes":[{"pos":[0,44],"content":"Namespace URI whose prefix you want to find.","nodes":[{"content":"Namespace URI whose prefix you want to find.","pos":[0,44]}]}],"pos":[40094,40139],"yaml":true},{"content":"The matching prefix. Or `null` if no matching namespace URI is found in the current scope.","nodes":[{"pos":[0,90],"content":"The matching prefix. Or `null` if no matching namespace URI is found in the current scope.","nodes":[{"content":"The matching prefix.","pos":[0,20]},{"content":"Or <ph id=\"ph1\">`null`</ph> if no matching namespace URI is found in the current scope.","pos":[21,90],"source":" Or `null` if no matching namespace URI is found in the current scope."}]}],"pos":[40196,40287],"yaml":true},{"content":"<code>ns</code> is either `null` or `String.Empty`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">&lt;code&gt;ns&lt;/code&gt;</ph> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>.","source":"<code>ns</code> is either `null` or `String.Empty`."}],"pos":[40446,40498],"yaml":true},{"content":"Gets or sets a value indicating whether to do namespace support.","nodes":[{"pos":[0,64],"content":"Gets or sets a value indicating whether to do namespace support.","nodes":[{"content":"Gets or sets a value indicating whether to do namespace support.","pos":[0,64]}]}],"pos":[41604,41669],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,430],"content":"This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.","nodes":[{"content":"This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.","pos":[0,133]}]}],"pos":[41680,42116],"yaml":true,"extradata":"MT"},{"content":"`true` to support namespaces; otherwise, `false`.  \n  \n The default is `true`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">`true`</ph> to support namespaces; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to support namespaces; otherwise, `false`."},{"pos":[56,78],"content":"The default is <ph id=\"ph1\">`true`</ph>.","source":"The default is `true`."}],"pos":[42234,42317],"yaml":true},{"content":"You can only change this property when in the `WriteState.Start` state.","nodes":[{"pos":[0,71],"content":"You can only change this property when in the <ph id=\"ph1\">`WriteState.Start`</ph> state.","source":"You can only change this property when in the `WriteState.Start` state."}],"pos":[42490,42562],"yaml":true},{"content":"Gets or sets which character to use to quote attribute values.","nodes":[{"pos":[0,62],"content":"Gets or sets which character to use to quote attribute values.","nodes":[{"content":"Gets or sets which character to use to quote attribute values.","pos":[0,62]}]}],"pos":[43662,43725],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[43736,44039],"yaml":true,"extradata":"MT"},{"content":"The character to use to quote attribute values. This must be a single quote (&#39;) or a double quote (&#34;). The default is a double quote.","nodes":[{"pos":[0,141],"content":"The character to use to quote attribute values. This must be a single quote (&#39;) or a double quote (&#34;). The default is a double quote.","nodes":[{"content":"The character to use to quote attribute values. This must be a single quote (&#39;) or a double quote (&#34;). The default is a double quote.","pos":[0,141],"nodes":[{"content":"The character to use to quote attribute values.","pos":[0,47]},{"content":"This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).","pos":[48,110],"source":" This must be a single quote (&#39;) or a double quote (&#34;)."},{"content":"The default is a double quote.","pos":[111,141]}]}]}],"pos":[44153,44295],"yaml":true},{"content":"Setting this property to something other than either a single or double quote.","nodes":[{"pos":[0,78],"content":"Setting this property to something other than either a single or double quote.","nodes":[{"content":"Setting this property to something other than either a single or double quote.","pos":[0,78]}]}],"pos":[44451,44530],"yaml":true},{"content":"Encodes the specified binary bytes as base64 and writes out the resulting text.","nodes":[{"pos":[0,79],"content":"Encodes the specified binary bytes as base64 and writes out the resulting text.","nodes":[{"content":"Encodes the specified binary bytes as base64 and writes out the resulting text.","pos":[0,79]}]}],"pos":[45829,45909],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[45920,46223],"yaml":true,"extradata":"MT"},{"content":"Byte array to encode.","nodes":[{"pos":[0,21],"content":"Byte array to encode.","nodes":[{"content":"Byte array to encode.","pos":[0,21]}]}],"pos":[47032,47054],"yaml":true},{"content":"The position within the buffer indicating the start of the bytes to write.","nodes":[{"pos":[0,74],"content":"The position within the buffer indicating the start of the bytes to write.","nodes":[{"content":"The position within the buffer indicating the start of the bytes to write.","pos":[0,74]}]}],"pos":[47114,47189],"yaml":true},{"content":"The number of bytes to write.","nodes":[{"pos":[0,29],"content":"The number of bytes to write.","nodes":[{"content":"The number of bytes to write.","pos":[0,29]}]}],"pos":[47249,47279],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[47445,47476],"yaml":true},{"content":"The buffer length minus <code>index</code> is less than <code>count</code>.","nodes":[{"pos":[0,75],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."}],"pos":[47570,47646],"yaml":true},{"content":"<code>index</code> or <code>count</code> is less than zero.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> or <code>count</code> is less than zero."}],"pos":[47760,47820],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`.","nodes":[{"pos":[0,73],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.WriteState\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`Closed`</ph>.","source":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`."}],"pos":[47930,48004],"yaml":true},{"content":"Encodes the specified binary bytes as binhex and writes out the resulting text.","nodes":[{"pos":[0,79],"content":"Encodes the specified binary bytes as binhex and writes out the resulting text.","nodes":[{"content":"Encodes the specified binary bytes as binhex and writes out the resulting text.","pos":[0,79]}]}],"pos":[49303,49383],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[49394,49697],"yaml":true,"extradata":"MT"},{"content":"Byte array to encode.","nodes":[{"pos":[0,21],"content":"Byte array to encode.","nodes":[{"content":"Byte array to encode.","pos":[0,21]}]}],"pos":[49870,49892],"yaml":true},{"content":"The position in the buffer indicating the start of the bytes to write.","nodes":[{"pos":[0,70],"content":"The position in the buffer indicating the start of the bytes to write.","nodes":[{"content":"The position in the buffer indicating the start of the bytes to write.","pos":[0,70]}]}],"pos":[49952,50023],"yaml":true},{"content":"The number of bytes to write.","nodes":[{"pos":[0,29],"content":"The number of bytes to write.","nodes":[{"content":"The number of bytes to write.","pos":[0,29]}]}],"pos":[50083,50113],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[50279,50310],"yaml":true},{"content":"The buffer length minus <code>index</code> is less than <code>count</code>.","nodes":[{"pos":[0,75],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."}],"pos":[50404,50480],"yaml":true},{"content":"<code>index</code> or <code>count</code> is less than zero.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> or <code>count</code> is less than zero."}],"pos":[50594,50654],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is Closed.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.WriteState\"&gt;&lt;/xref&gt;</ph> is Closed.","source":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is Closed."}],"pos":[50764,50836],"yaml":true},{"content":"Writes out a <![CDATA[...]]> block containing the specified text.","nodes":[{"pos":[0,65],"content":"Writes out a <ph id=\"ph1\">&lt;![CDATA[...]]&gt;</ph> block containing the specified text.","source":"Writes out a <![CDATA[...]]> block containing the specified text."}],"pos":[52009,52075],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \\<![CDATA[]]>.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,410],"content":"If <ph id=\"ph1\">`text`</ph> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>, this method writes an empty CDATA block, for example <ph id=\"ph4\">\\&lt;</ph>![CDATA[]]&gt;.","source":"If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \\<![CDATA[]]>."}],"pos":[52086,52503],"yaml":true,"extradata":"MT"},{"content":"Text to place inside the CDATA block.","nodes":[{"pos":[0,37],"content":"Text to place inside the CDATA block.","nodes":[{"content":"Text to place inside the CDATA block.","pos":[0,37]}]}],"pos":[53310,53348],"yaml":true},{"content":"The text would result in a non-well formed XML document.","nodes":[{"pos":[0,56],"content":"The text would result in a non-well formed XML document.","nodes":[{"content":"The text would result in a non-well formed XML document.","pos":[0,56]}]}],"pos":[53505,53562],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`.","nodes":[{"pos":[0,73],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.WriteState\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`Closed`</ph>.","source":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`."}],"pos":[53672,53746],"yaml":true},{"content":"Forces the generation of a character entity for the specified Unicode character value.","nodes":[{"pos":[0,86],"content":"Forces the generation of a character entity for the specified Unicode character value.","nodes":[{"content":"Forces the generation of a character entity for the specified Unicode character value.","pos":[0,86]}]}],"pos":[54937,55024],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This method writes the Unicode character in hexadecimal character entity reference format.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,387],"content":"This method writes the Unicode character in hexadecimal character entity reference format.","nodes":[{"content":"This method writes the Unicode character in hexadecimal character entity reference format.","pos":[0,90]}]}],"pos":[55035,55428],"yaml":true,"extradata":"MT"},{"content":"Unicode character for which to generate a character entity.","nodes":[{"pos":[0,59],"content":"Unicode character for which to generate a character entity.","nodes":[{"content":"Unicode character for which to generate a character entity.","pos":[0,59]}]}],"pos":[56224,56284],"yaml":true},{"content":"The character is in the surrogate pair character range, `0xd800` - `0xdfff`; or the text would result in a non-well formed XML document.","nodes":[{"pos":[0,136],"content":"The character is in the surrogate pair character range, <ph id=\"ph1\">`0xd800`</ph><ph id=\"ph2\"> - </ph><ph id=\"ph3\">`0xdfff`</ph>; or the text would result in a non-well formed XML document.","source":"The character is in the surrogate pair character range, `0xd800` - `0xdfff`; or the text would result in a non-well formed XML document."}],"pos":[56446,56583],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`.","nodes":[{"pos":[0,73],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.WriteState\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`Closed`</ph>.","source":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`."}],"pos":[56693,56767],"yaml":true},{"content":"Writes text one buffer at a time.","nodes":[{"pos":[0,33],"content":"Writes text one buffer at a time.","nodes":[{"content":"Writes text one buffer at a time.","pos":[0,33]}]}],"pos":[58060,58094],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This method can be used to write large amounts of text one buffer at a time.  \n  \n Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes. The XML specification defines the valid ranges for surrogate pairs.  \n  \n An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,373],"content":"This method can be used to write large amounts of text one buffer at a time.","nodes":[{"content":"This method can be used to write large amounts of text one buffer at a time.","pos":[0,76]}]},{"pos":[380,583],"content":"Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes. The XML specification defines the valid ranges for surrogate pairs.","nodes":[{"content":"Special handling must be done to ensure the <ph id=\"ph1\">`WriteChars`</ph> method does not split surrogate pair characters across multiple buffer writes.","pos":[0,135],"source":"Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes."},{"content":"The XML specification defines the valid ranges for surrogate pairs.","pos":[136,203]}]},{"pos":[590,731],"content":"An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.","nodes":[{"content":"An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.","pos":[0,141]}]}],"pos":[58105,58846],"yaml":true,"extradata":"MT"},{"content":"Character array containing the text to write.","nodes":[{"pos":[0,45],"content":"Character array containing the text to write.","nodes":[{"content":"Character array containing the text to write.","pos":[0,45]}]}],"pos":[59182,59228],"yaml":true},{"content":"The position in the buffer indicating the start of the text to write.","nodes":[{"pos":[0,69],"content":"The position in the buffer indicating the start of the text to write.","nodes":[{"content":"The position in the buffer indicating the start of the text to write.","pos":[0,69]}]}],"pos":[59288,59358],"yaml":true},{"content":"The number of characters to write.","nodes":[{"pos":[0,34],"content":"The number of characters to write.","nodes":[{"content":"The number of characters to write.","pos":[0,34]}]}],"pos":[59418,59453],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[59618,59649],"yaml":true},{"content":"<code>index</code> or <code>count</code> is less than zero.  \n  \n -or-  \n  \n The buffer length minus <code>index</code> is less than <code>count</code>; the call results in surrogate pair characters being split or an invalid surrogate pair being written.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> or <code>count</code> is less than zero."},{"pos":[66,70],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[77,254],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>; the call results in surrogate pair characters being split or an invalid surrogate pair being written.","source":"The buffer length minus <code>index</code> is less than <code>count</code>; the call results in surrogate pair characters being split or an invalid surrogate pair being written."}],"pos":[59763,60024],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is Closed.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.WriteState\"&gt;&lt;/xref&gt;</ph> is Closed.","source":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is Closed."}],"pos":[60134,60206],"yaml":true},{"content":"Writes out a comment <!--...--> containing the specified text.","nodes":[{"pos":[0,62],"content":"Writes out a comment <ph id=\"ph1\">&lt;!--...--&gt;</ph> containing the specified text.","source":"Writes out a comment <!--...--> containing the specified text."}],"pos":[61391,61454],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \\<!---->.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,417],"content":"If <ph id=\"ph1\">`text`</ph> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>, this method writes a <ph id=\"ph4\">`Comment`</ph> with no data content, for example <ph id=\"ph5\">\\&lt;</ph>!----&gt;.","source":"If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \\<!---->."}],"pos":[61465,61889],"yaml":true,"extradata":"MT"},{"content":"Text to place inside the comment.","nodes":[{"pos":[0,33],"content":"Text to place inside the comment.","nodes":[{"content":"Text to place inside the comment.","pos":[0,33]}]}],"pos":[62698,62732],"yaml":true},{"content":"The text would result in a non-well formed XML document","nodes":[{"pos":[0,55],"content":"The text would result in a non-well formed XML document","nodes":[{"content":"The text would result in a non-well formed XML document","pos":[0,55]}]}],"pos":[62891,62947],"yaml":true},{"content":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`.","nodes":[{"pos":[0,73],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.WriteState\"&gt;&lt;/xref&gt;</ph> is <ph id=\"ph2\">`Closed`</ph>.","source":"The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`."}],"pos":[63057,63131],"yaml":true},{"content":"Writes the DOCTYPE declaration with the specified name and optional attributes.","nodes":[{"pos":[0,79],"content":"Writes the DOCTYPE declaration with the specified name and optional attributes.","nodes":[{"content":"Writes the DOCTYPE declaration with the specified name and optional attributes.","pos":[0,79]}]}],"pos":[64514,64594],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This method does not check for invalid characters in `pubid`, `sysid` or `subset`. It also does not check that the internal subset is well-formed.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method. You should not pass arbitrary data to this method.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,443],"content":"This method does not check for invalid characters in `pubid`, `sysid` or `subset`. It also does not check that the internal subset is well-formed.","nodes":[{"content":"This method does not check for invalid characters in <ph id=\"ph1\">`pubid`</ph>, <ph id=\"ph2\">`sysid`</ph> or <ph id=\"ph3\">`subset`</ph>.","pos":[0,82],"source":"This method does not check for invalid characters in `pubid`, `sysid` or `subset`."},{"content":"It also does not check that the internal subset is well-formed.","pos":[83,146]}]},{"pos":[451,658],"content":"[!IMPORTANT]\n The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method. You should not pass arbitrary data to this method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method. You should not pass arbitrary data to this method.","pos":[13,205],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> does not validate any data that is passed to the <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextWriter.WriteDocType%2A&gt;</ph> method.","pos":[1,141],"source":" The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method."},{"content":"You should not pass arbitrary data to this method.","pos":[142,192]}]}]}],"pos":[64605,65272],"yaml":true,"extradata":"MT"},{"content":"The name of the DOCTYPE. This must be non-empty.","nodes":[{"pos":[0,48],"content":"The name of the DOCTYPE. This must be non-empty.","nodes":[{"content":"The name of the DOCTYPE. This must be non-empty.","pos":[0,48],"nodes":[{"content":"The name of the DOCTYPE.","pos":[0,24]},{"content":"This must be non-empty.","pos":[25,48]}]}]}],"pos":[66124,66173],"yaml":true},{"content":"If non-null it also writes PUBLIC \"pubid\" \"sysid\" where <code>pubid</code> and <code>sysid</code> are replaced with the value of the given arguments.","nodes":[{"pos":[0,149],"content":"If non-null it also writes PUBLIC \"pubid\" \"sysid\" where <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pubid</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">sysid</ph><ept id=\"p2\">&lt;/code&gt;</ept> are replaced with the value of the given arguments.","source":"If non-null it also writes PUBLIC \"pubid\" \"sysid\" where <code>pubid</code> and <code>sysid</code> are replaced with the value of the given arguments."}],"pos":[66234,66384],"yaml":true},{"content":"If <code>pubid</code> is null and <code>sysid</code> is non-null it writes SYSTEM \"sysid\" where <code>sysid</code> is replaced with the value of this argument.","nodes":[{"pos":[0,159],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pubid</ph><ept id=\"p1\">&lt;/code&gt;</ept> is null and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">sysid</ph><ept id=\"p2\">&lt;/code&gt;</ept> is non-null it writes SYSTEM \"sysid\" where <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">sysid</ph><ept id=\"p3\">&lt;/code&gt;</ept> is replaced with the value of this argument.","source":"If <code>pubid</code> is null and <code>sysid</code> is non-null it writes SYSTEM \"sysid\" where <code>sysid</code> is replaced with the value of this argument."}],"pos":[66445,66605],"yaml":true},{"content":"If non-null it writes [subset] where subset is replaced with the value of this argument.","nodes":[{"pos":[0,88],"content":"If non-null it writes [subset] where subset is replaced with the value of this argument.","nodes":[{"content":"If non-null it writes [subset] where subset is replaced with the value of this argument.","pos":[0,88]}]}],"pos":[66667,66756],"yaml":true},{"content":"This method was called outside the prolog (after the root element).","nodes":[{"pos":[0,67],"content":"This method was called outside the prolog (after the root element).","nodes":[{"content":"This method was called outside the prolog (after the root element).","pos":[0,67]}]}],"pos":[66931,66999],"yaml":true},{"content":"<code>name</code> is `null` or `String.Empty`  \n  \n -or-  \n  \n the value for <code>name</code> would result in invalid XML.","nodes":[{"pos":[0,45],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>","source":"<code>name</code> is `null` or `String.Empty`"},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,123],"content":"the value for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> would result in invalid XML.","source":"the value for <code>name</code> would result in invalid XML."}],"pos":[67093,67223],"yaml":true},{"content":"Closes the previous <xref href=\"System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)\"></xref> call.","nodes":[{"pos":[0,134],"content":"Closes the previous <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)\"&gt;&lt;/xref&gt;</ph> call.","source":"Closes the previous <xref href=\"System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)\"></xref> call."}],"pos":[68375,68510],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n If you call `WriteStartAttribute`, you can close the attribute with this method.  \n  \n You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,377],"content":"If you call <ph id=\"ph1\">`WriteStartAttribute`</ph>, you can close the attribute with this method.","source":"If you call `WriteStartAttribute`, you can close the attribute with this method."},{"pos":[384,580],"content":"You can also close the attribute by calling <ph id=\"ph1\">`WriteStartAttribute`</ph> again, calling <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph>, or calling <ph id=\"ph3\">&lt;xref:System.Xml.XmlTextWriter.WriteEndElement%2A&gt;</ph>.","source":"You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>."}],"pos":[68521,69109],"yaml":true,"extradata":"MT"},{"content":"Closes any open elements or attributes and puts the writer back in the Start state.","nodes":[{"pos":[0,83],"content":"Closes any open elements or attributes and puts the writer back in the Start state.","nodes":[{"content":"Closes any open elements or attributes and puts the writer back in the Start state.","pos":[0,83]}]}],"pos":[71047,71131],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[71142,71445],"yaml":true,"extradata":"MT"},{"content":"The XML document is invalid.","nodes":[{"pos":[0,28],"content":"The XML document is invalid.","nodes":[{"content":"The XML document is invalid.","pos":[0,28]}]}],"pos":[72353,72382],"yaml":true},{"content":"Closes one element and pops the corresponding namespace scope.","nodes":[{"pos":[0,62],"content":"Closes one element and pops the corresponding namespace scope.","nodes":[{"content":"Closes one element and pops the corresponding namespace scope.","pos":[0,62]}]}],"pos":[73522,73585],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n If the element contains no content a short end tag \"/>\" is written; otherwise a full end tag is written.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,401],"content":"If the element contains no content a short end tag \"/>\" is written; otherwise a full end tag is written.","nodes":[{"content":"If the element contains no content a short end tag \"/&gt;\" is written; otherwise a full end tag is written.","pos":[0,104],"source":"If the element contains no content a short end tag \"/>\" is written; otherwise a full end tag is written."}]}],"pos":[73596,74005],"yaml":true,"extradata":"MT"},{"content":"Writes out an entity reference as `&name;`.","nodes":[{"pos":[0,43],"content":"Writes out an entity reference as <ph id=\"ph1\">`&amp;name;`</ph>.","source":"Writes out an entity reference as `&name;`."}],"pos":[75999,76043],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[76054,76357],"yaml":true,"extradata":"MT"},{"content":"Name of the entity reference.","nodes":[{"pos":[0,29],"content":"Name of the entity reference.","nodes":[{"content":"Name of the entity reference.","pos":[0,29]}]}],"pos":[77168,77198],"yaml":true},{"content":"The text would result in a non-well formed XML document or <code>name</code> is either `null` or `String.Empty`.","nodes":[{"pos":[0,112],"content":"The text would result in a non-well formed XML document or <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">name</ph><ept id=\"p1\">&lt;/code&gt;</ept> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>.","source":"The text would result in a non-well formed XML document or <code>name</code> is either `null` or `String.Empty`."}],"pos":[77359,77472],"yaml":true},{"content":"Closes one element and pops the corresponding namespace scope.","nodes":[{"pos":[0,62],"content":"Closes one element and pops the corresponding namespace scope.","nodes":[{"content":"Closes one element and pops the corresponding namespace scope.","pos":[0,62]}]}],"pos":[78636,78699],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This method always writes the full end tag. This is useful when dealing with elements that must include a full end tag. For example, browsers expect HTML script blocks to be closed with \"\\</script>\".","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,496],"content":"This method always writes the full end tag. This is useful when dealing with elements that must include a full end tag. For example, browsers expect HTML script blocks to be closed with \"\\</script>\".","nodes":[{"content":"This method always writes the full end tag. This is useful when dealing with elements that must include a full end tag. For example, browsers expect HTML script blocks to be closed with \"\\</script>\".","pos":[0,199],"nodes":[{"content":"This method always writes the full end tag.","pos":[0,43]},{"content":"This is useful when dealing with elements that must include a full end tag.","pos":[44,119]},{"content":"For example, browsers expect HTML script blocks to be closed with \"<ph id=\"ph1\">\\&lt;</ph>/script&gt;\".","pos":[120,199],"source":" For example, browsers expect HTML script blocks to be closed with \"\\</script>\"."}]}]}],"pos":[78710,79215],"yaml":true,"extradata":"MT"},{"content":"Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).","nodes":[{"pos":[0,156],"content":"Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).","nodes":[{"content":"Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).","pos":[0,156]}]}],"pos":[81273,81430],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,470],"content":"If <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> is set to <ph id=\"ph2\">`true`</ph>, <ph id=\"ph3\">`WriteName`</ph> also checks that the name is also valid according to the W3C Namespaces in XML recommendation.","source":"If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation."}],"pos":[81441,81917],"yaml":true,"extradata":"MT"},{"content":"Name to write.","nodes":[{"pos":[0,14],"content":"Name to write.","nodes":[{"content":"Name to write.","pos":[0,14]}]}],"pos":[82062,82077],"yaml":true},{"content":"<code>name</code> is not a valid XML name; or <code>name</code> is either `null` or `String.Empty`.","nodes":[{"pos":[0,99],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is not a valid XML name; or <ph id=\"ph2\">&lt;code&gt;name&lt;/code&gt;</ph> is either <ph id=\"ph3\">`null`</ph> or <ph id=\"ph4\">`String.Empty`</ph>.","source":"<code>name</code> is not a valid XML name; or <code>name</code> is either `null` or `String.Empty`."}],"pos":[82233,82333],"yaml":true},{"content":"Writes out the specified name, ensuring it is a valid `NmToken` according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).","nodes":[{"pos":[0,161],"content":"Writes out the specified name, ensuring it is a valid <ph id=\"ph1\">`NmToken`</ph> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).","source":"Writes out the specified name, ensuring it is a valid `NmToken` according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name)."}],"pos":[83518,83680],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[83691,83994],"yaml":true,"extradata":"MT"},{"content":"Name to write.","nodes":[{"pos":[0,14],"content":"Name to write.","nodes":[{"content":"Name to write.","pos":[0,14]}]}],"pos":[84142,84157],"yaml":true},{"content":"<code>name</code> is not a valid `NmToken`; or <code>name</code> is either `null` or `String.Empty`.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">`NmToken`</ph>; or <ph id=\"ph3\">&lt;code&gt;name&lt;/code&gt;</ph> is either <ph id=\"ph4\">`null`</ph> or <ph id=\"ph5\">`String.Empty`</ph>.","source":"<code>name</code> is not a valid `NmToken`; or <code>name</code> is either `null` or `String.Empty`."}],"pos":[84316,84417],"yaml":true},{"content":"Writes out a processing instruction with a space between the name and text as follows: <?name text?>.","nodes":[{"pos":[0,101],"content":"Writes out a processing instruction with a space between the name and text as follows: <ph id=\"ph1\">&lt;?name text?&gt;</ph>.","source":"Writes out a processing instruction with a space between the name and text as follows: <?name text?>."}],"pos":[85752,85856],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \\<?name?>.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,432],"content":"If <ph id=\"ph1\">`text`</ph> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>, this method writes a <ph id=\"ph4\">`ProcessingInstruction`</ph> with no data content, for example <ph id=\"ph5\">\\&lt;</ph>?name?&gt;.","source":"If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \\<?name?>."}],"pos":[85867,86306],"yaml":true,"extradata":"MT"},{"content":"Name of the processing instruction.","nodes":[{"pos":[0,35],"content":"Name of the processing instruction.","nodes":[{"content":"Name of the processing instruction.","pos":[0,35]}]}],"pos":[87142,87178],"yaml":true},{"content":"Text to include in the processing instruction.","nodes":[{"pos":[0,46],"content":"Text to include in the processing instruction.","nodes":[{"content":"Text to include in the processing instruction.","pos":[0,46]}]}],"pos":[87238,87285],"yaml":true},{"content":"The text would result in a non-well formed XML document.  \n  \n <code>name</code> is either `null` or `String.Empty`.  \n  \n This method is being used to create an XML declaration after <xref href=\"System.Xml.XmlTextWriter.WriteStartDocument\"></xref> has already been called.","nodes":[{"pos":[0,56],"content":"The text would result in a non-well formed XML document.","nodes":[{"content":"The text would result in a non-well formed XML document.","pos":[0,56]}]},{"pos":[63,116],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>.","source":"<code>name</code> is either `null` or `String.Empty`."},{"pos":[123,273],"content":"This method is being used to create an XML declaration after <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlTextWriter.WriteStartDocument\"&gt;&lt;/xref&gt;</ph> has already been called.","source":"This method is being used to create an XML declaration after <xref href=\"System.Xml.XmlTextWriter.WriteStartDocument\"></xref> has already been called."}],"pos":[87458,87740],"yaml":true},{"content":"Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.","nodes":[{"pos":[0,114],"content":"Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.","nodes":[{"content":"Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.","pos":[0,114],"nodes":[{"content":"Writes out the namespace-qualified name.","pos":[0,40]},{"content":"This method looks up the prefix that is in scope for the given namespace.","pos":[41,114]}]}]}],"pos":[89027,89142],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n For example, the following Microsoft Visual C# code:  \n  \n```  \nwriter.Formatting = Formatting.Indented;  \nwriter.WriteStartElement(\"root\");  \n writer.WriteAttributeString(\"xmlns\",\"x\",null,\"urn:abc\");  \n writer.WriteStartElement(\"item\");  \n writer.WriteStartAttribute(\"href\",null);  \n writer.WriteString(\"#\");  \n writer.WriteQualifiedName(\"test\",\"urn:abc\");  \n writer.WriteEndAttribute();  \n writer.WriteEndElement();  \n writer.WriteEndElement();  \n writer.Close();  \n```  \n  \n Generates the following output:  \n  \n```  \n<root xmlns:x=\"urn:abc\">  \n <item href=\"#x:test\"/>  \n </root>  \n```  \n  \n If `ns` maps to the current default namespace, no prefix is generated.  \n  \n When writing attribute values, this method generates a prefix if `ns` is not found. When writing element content, it throws an exception if `ns` is not found.  \n  \n If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,349],"content":"For example, the following Microsoft Visual C# code:","nodes":[{"content":"For example, the following Microsoft Visual C# code:","pos":[0,52]}]},{"pos":[775,806],"content":"Generates the following output:","nodes":[{"content":"Generates the following output:","pos":[0,31]}]},{"pos":[892,962],"content":"If <ph id=\"ph1\">`ns`</ph> maps to the current default namespace, no prefix is generated.","source":"If `ns` maps to the current default namespace, no prefix is generated."},{"pos":[969,1127],"content":"When writing attribute values, this method generates a prefix if `ns` is not found. When writing element content, it throws an exception if `ns` is not found.","nodes":[{"content":"When writing attribute values, this method generates a prefix if <ph id=\"ph1\">`ns`</ph> is not found.","pos":[0,83],"source":"When writing attribute values, this method generates a prefix if `ns` is not found."},{"content":"When writing element content, it throws an exception if <ph id=\"ph1\">`ns`</ph> is not found.","pos":[84,158],"source":" When writing element content, it throws an exception if `ns` is not found."}]},{"pos":[1134,1373],"content":"If this writer supports namespaces (<ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter.Namespaces%2A&gt;</ph> is set to <ph id=\"ph2\">`true`</ph>), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).","source":"If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names)."}],"pos":[89153,90582],"yaml":true,"extradata":"MT"},{"content":"The local name to write.","nodes":[{"pos":[0,24],"content":"The local name to write.","nodes":[{"content":"The local name to write.","pos":[0,24]}]}],"pos":[91416,91441],"yaml":true},{"content":"The namespace URI to associate with the name.","nodes":[{"pos":[0,45],"content":"The namespace URI to associate with the name.","nodes":[{"content":"The namespace URI to associate with the name.","pos":[0,45]}]}],"pos":[91499,91545],"yaml":true},{"content":"<code>localName</code> is either `null` or `String.Empty`.  \n  \n <code>localName</code> is not a valid name according to the W3C Namespaces spec.","nodes":[{"pos":[0,146],"content":"<code>localName</code> is either `null` or `String.Empty`.  \n  \n <code>localName</code> is not a valid name according to the W3C Namespaces spec.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;localName&lt;/code&gt;</ph> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>.","pos":[0,58],"source":"<code>localName</code> is either `null` or `String.Empty`."},{"content":"<ph id=\"ph1\">&lt;code&gt;localName&lt;/code&gt;</ph> is not a valid name according to the W3C Namespaces spec.","pos":[65,145],"source":"<code>localName</code> is not a valid name according to the W3C Namespaces spec."}]}],"pos":[91710,91860],"yaml":true},{"content":"Writes raw markup manually from a character buffer.","nodes":[{"pos":[0,51],"content":"Writes raw markup manually from a character buffer.","nodes":[{"content":"Writes raw markup manually from a character buffer.","pos":[0,51]}]}],"pos":[93141,93193],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This method does not escape special characters.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method. You should not pass arbitrary data to this method.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,344],"content":"This method does not escape special characters.","nodes":[{"content":"This method does not escape special characters.","pos":[0,47]}]},{"pos":[352,555],"content":"[!IMPORTANT]\n The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method. You should not pass arbitrary data to this method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method. You should not pass arbitrary data to this method.","pos":[13,201],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> does not validate any data that is passed to the <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A&gt;</ph> method.","pos":[1,137],"source":" The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method."},{"content":"You should not pass arbitrary data to this method.","pos":[138,188]}]}]}],"pos":[93204,93768],"yaml":true,"extradata":"MT"},{"content":"Character array containing the text to write.","nodes":[{"pos":[0,45],"content":"Character array containing the text to write.","nodes":[{"content":"Character array containing the text to write.","pos":[0,45]}]}],"pos":[93938,93984],"yaml":true},{"content":"The position within the buffer indicating the start of the text to write.","nodes":[{"pos":[0,73],"content":"The position within the buffer indicating the start of the text to write.","nodes":[{"content":"The position within the buffer indicating the start of the text to write.","pos":[0,73]}]}],"pos":[94044,94118],"yaml":true},{"content":"The number of characters to write.","nodes":[{"pos":[0,34],"content":"The number of characters to write.","nodes":[{"content":"The number of characters to write.","pos":[0,34]}]}],"pos":[94178,94213],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[94376,94407],"yaml":true},{"content":"<code>index</code> or <code>count</code> is less than zero.  \n  \n -or-  \n  \n The buffer length minus <code>index</code> is less than <code>count</code>.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">&lt;code&gt;index&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.","source":"<code>index</code> or <code>count</code> is less than zero."},{"pos":[66,70],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[77,152],"content":"The buffer length minus <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">count</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The buffer length minus <code>index</code> is less than <code>count</code>."}],"pos":[94521,94680],"yaml":true},{"content":"Writes raw markup manually from a string.","nodes":[{"pos":[0,41],"content":"Writes raw markup manually from a string.","nodes":[{"content":"Writes raw markup manually from a string.","pos":[0,41]}]}],"pos":[95841,95883],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This method does not escape special characters.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method. You should not pass arbitrary data to this method.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,344],"content":"This method does not escape special characters.","nodes":[{"content":"This method does not escape special characters.","pos":[0,47]}]},{"pos":[352,555],"content":"[!IMPORTANT]\n The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method. You should not pass arbitrary data to this method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method. You should not pass arbitrary data to this method.","pos":[13,201],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> does not validate any data that is passed to the <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextWriter.WriteRaw%2A&gt;</ph> method.","pos":[1,137],"source":" The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method."},{"content":"You should not pass arbitrary data to this method.","pos":[138,188]}]}]}],"pos":[95894,96458],"yaml":true,"extradata":"MT"},{"content":"String containing the text to write.","nodes":[{"pos":[0,36],"content":"String containing the text to write.","nodes":[{"content":"String containing the text to write.","pos":[0,36]}]}],"pos":[97214,97251],"yaml":true},{"content":"Writes the start of an attribute.","nodes":[{"pos":[0,33],"content":"Writes the start of an attribute.","nodes":[{"content":"Writes the start of an attribute.","pos":[0,33]}]}],"pos":[98674,98708],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,513],"content":"This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.","nodes":[{"content":"This is a more advanced version of <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter.WriteAttributeString%2A&gt;</ph> that allows you to write an attribute value using multiple write methods, such as <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextWriter.WriteString%2A&gt;</ph>.","pos":[0,216],"source":"This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>."}]}],"pos":[98719,99238],"yaml":true,"extradata":"MT"},{"content":"`Namespace` prefix of the attribute.","nodes":[{"pos":[0,36],"content":"<ph id=\"ph1\">`Namespace`</ph> prefix of the attribute.","source":"`Namespace` prefix of the attribute."}],"pos":[100060,100099],"yaml":true},{"content":"`LocalName` of the attribute.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">`LocalName`</ph> of the attribute.","source":"`LocalName` of the attribute."}],"pos":[100164,100196],"yaml":true},{"content":"`NamespaceURI` of the attribute","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">`NamespaceURI`</ph> of the attribute","source":"`NamespaceURI` of the attribute"}],"pos":[100254,100288],"yaml":true},{"content":"<code>localName</code> is either `null` or `String.Empty`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">&lt;code&gt;localName&lt;/code&gt;</ph> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>.","source":"<code>localName</code> is either `null` or `String.Empty`."}],"pos":[100454,100513],"yaml":true},{"content":"Writes the XML declaration with the version \"1.0\".","nodes":[{"pos":[0,50],"content":"Writes the XML declaration with the version \"1.0\".","nodes":[{"content":"Writes the XML declaration with the version \"1.0\".","pos":[0,50]}]}],"pos":[101671,101722],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n The encoding level of the document is determined by how the writer is implemented. For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute. This method does not create a standalone attribute.  \n  \n When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document. For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on. If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.  \n  \n If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,587],"content":"The encoding level of the document is determined by how the writer is implemented. For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute. This method does not create a standalone attribute.","nodes":[{"content":"The encoding level of the document is determined by how the writer is implemented.","pos":[0,82]},{"content":"For example, if an <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id=\"ph2\">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.","pos":[83,238],"source":" For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute."},{"content":"This method does not create a standalone attribute.","pos":[239,290]}]},{"pos":[594,948],"content":"When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document. For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on. If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.","nodes":[{"content":"When <ph id=\"ph1\">`WriteStartDocument`</ph> is called the writer validates that what you are writing is a well-formed XML document.","pos":[0,113],"source":"When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document."},{"content":"For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.","pos":[114,239]},{"content":"If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.","pos":[240,354]}]},{"pos":[955,1143],"content":"If <ph id=\"ph1\">`WriteStartDocument`</ph> has been called and then the <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception is thrown.","source":"If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown."}],"pos":[101733,102886],"yaml":true,"extradata":"MT"},{"content":"This is not the first write method called after the constructor.","nodes":[{"pos":[0,64],"content":"This is not the first write method called after the constructor.","nodes":[{"content":"This is not the first write method called after the constructor.","pos":[0,64]}]}],"pos":[103814,103879],"yaml":true},{"content":"Writes the XML declaration with the version \"1.0\" and the standalone attribute.","nodes":[{"pos":[0,79],"content":"Writes the XML declaration with the version \"1.0\" and the standalone attribute.","nodes":[{"content":"Writes the XML declaration with the version \"1.0\" and the standalone attribute.","pos":[0,79]}]}],"pos":[105106,105186],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n The encoding level of the document is determined by how the writer is implemented. For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.  \n  \n When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document. For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on. If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.  \n  \n If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,535],"content":"The encoding level of the document is determined by how the writer is implemented. For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.","nodes":[{"content":"The encoding level of the document is determined by how the writer is implemented.","pos":[0,82]},{"content":"For example, if an <ph id=\"ph1\">&lt;xref:System.Text.Encoding&gt;</ph> object is specified in the <ph id=\"ph2\">`XmlTextWriter`</ph> constructor, this determines the value of the encoding attribute.","pos":[83,238],"source":" For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute."}]},{"pos":[542,896],"content":"When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document. For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on. If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.","nodes":[{"content":"When <ph id=\"ph1\">`WriteStartDocument`</ph> is called the writer validates that what you are writing is a well-formed XML document.","pos":[0,113],"source":"When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document."},{"content":"For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.","pos":[114,239]},{"content":"If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.","pos":[240,354]}]},{"pos":[903,1091],"content":"If <ph id=\"ph1\">`WriteStartDocument`</ph> has been called and then the <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A&gt;</ph> method is used to create another XML declaration, an exception is thrown.","source":"If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown."}],"pos":[105197,106298],"yaml":true,"extradata":"MT"},{"content":"If `true`, it writes \"standalone=yes\"; if `false`, it writes \"standalone=no\".","nodes":[{"pos":[0,77],"content":"If <ph id=\"ph1\">`true`</ph>, it writes \"standalone=yes\"; if <ph id=\"ph2\">`false`</ph>, it writes \"standalone=no\".","source":"If `true`, it writes \"standalone=yes\"; if `false`, it writes \"standalone=no\"."}],"pos":[106463,106541],"yaml":true},{"content":"This is not the first write method called after the constructor.","nodes":[{"pos":[0,64],"content":"This is not the first write method called after the constructor.","nodes":[{"content":"This is not the first write method called after the constructor.","pos":[0,64]}]}],"pos":[106722,106787],"yaml":true},{"content":"Writes the specified start tag and associates it with the given namespace and prefix.","nodes":[{"pos":[0,85],"content":"Writes the specified start tag and associates it with the given namespace and prefix.","nodes":[{"content":"Writes the specified start tag and associates it with the given namespace and prefix.","pos":[0,85]}]}],"pos":[108134,108220],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements. You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,674],"content":"After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements. You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.","nodes":[{"content":"After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements. You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.","pos":[0,377],"nodes":[{"content":"After calling this method you can either write attributes or create content using <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter.WriteComment%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Xml.XmlTextWriter.WriteString%2A&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Xml.XmlTextWriter.WriteStartElement%2A&gt;</ph> for child elements.","pos":[0,254],"source":"After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements."},{"content":"You can close the element with <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter.WriteEndElement%2A&gt;</ph> at which time an end tag is written out.","pos":[255,377],"source":" You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out."}]}]}],"pos":[108231,108911],"yaml":true,"extradata":"MT"},{"content":"The namespace prefix of the element.","nodes":[{"pos":[0,36],"content":"The namespace prefix of the element.","nodes":[{"content":"The namespace prefix of the element.","pos":[0,36]}]}],"pos":[109731,109768],"yaml":true},{"content":"The local name of the element.","nodes":[{"pos":[0,30],"content":"The local name of the element.","nodes":[{"content":"The local name of the element.","pos":[0,30]}]}],"pos":[109833,109864],"yaml":true},{"content":"The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.","nodes":[{"pos":[0,170],"content":"The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.","nodes":[{"content":"The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.","pos":[0,170],"nodes":[{"content":"The namespace URI to associate with the element.","pos":[0,48]},{"content":"If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.","pos":[49,170]}]}]}],"pos":[109922,110093],"yaml":true},{"content":"The writer is closed.","nodes":[{"pos":[0,21],"content":"The writer is closed.","nodes":[{"content":"The writer is closed.","pos":[0,21]}]}],"pos":[110273,110295],"yaml":true},{"content":"Gets the state of the writer.","nodes":[{"pos":[0,29],"content":"Gets the state of the writer.","nodes":[{"content":"Gets the state of the writer.","pos":[0,29]}]}],"pos":[111401,111431],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]}],"pos":[111442,111745],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Xml.WriteState\"></xref> values.","nodes":[{"pos":[0,61],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.WriteState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Xml.WriteState\"></xref> values."}],"pos":[111891,111953],"yaml":true},{"content":"Writes the given text content.","nodes":[{"pos":[0,30],"content":"Writes the given text content.","nodes":[{"content":"Writes the given text content.","pos":[0,30]}]}],"pos":[113198,113229],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n `WriteString` does the following  \n  \n-   The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.  \n  \n-   Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).  \n  \n-   If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.  \n  \n For example, this input string `test<item>test` is written as  \n  \n```  \ntest&lt;item&gt;test  \n```  \n  \n If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,329],"content":"<ph id=\"ph1\">`WriteString`</ph> does the following","source":"`WriteString` does the following"},{"pos":[339,432],"content":"The characters <ph id=\"ph1\">`&amp;`</ph>, <ph id=\"ph2\">`&lt;`</ph>, and <ph id=\"ph3\">`&gt;`</ph> are replaced with <ph id=\"ph4\">`&amp;amp;`</ph>, <ph id=\"ph5\">`&amp;lt;`</ph>, and <ph id=\"ph6\">`&amp;gt;`</ph>, respectively.","source":"The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively."},{"pos":[442,604],"content":"Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (<ph id=\"ph1\">`&amp;#0;`</ph> through <ph id=\"ph2\">`&amp;#0x1F`</ph>).","source":"Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`)."},{"pos":[614,757],"content":"If <ph id=\"ph1\">`WriteString`</ph> is called in the context of an attribute value, double and single quotes are replaced with <ph id=\"ph2\">`&amp;quot;`</ph> and <ph id=\"ph3\">`&amp;apos;`</ph> respectively.","source":"If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively."},{"pos":[764,825],"content":"For example, this input string <ph id=\"ph1\">`test&lt;item&gt;test`</ph> is written as","source":"For example, this input string `test<item>test` is written as"},{"pos":[870,968],"content":"If <ph id=\"ph1\">`text`</ph> is either <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">`String.Empty`</ph>, this method writes a text node with no data content.","source":"If `text` is either `null` or `String.Empty`, this method writes a text node with no data content."}],"pos":[113240,114228],"yaml":true,"extradata":"MT"},{"content":"Text to write.","nodes":[{"pos":[0,14],"content":"Text to write.","nodes":[{"content":"Text to write.","pos":[0,14]}]}],"pos":[114972,114987],"yaml":true},{"content":"The text string contains an invalid surrogate pair.","nodes":[{"pos":[0,51],"content":"The text string contains an invalid surrogate pair.","nodes":[{"content":"The text string contains an invalid surrogate pair.","pos":[0,51]}]}],"pos":[115145,115197],"yaml":true},{"content":"Generates and writes the surrogate character entity for the surrogate character pair.","nodes":[{"pos":[0,85],"content":"Generates and writes the surrogate character entity for the surrogate character pair.","nodes":[{"content":"Generates and writes the surrogate character entity for the surrogate character pair.","pos":[0,85]}]}],"pos":[116496,116582],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This method is only applicable on systems that use UTF-16 encoding.  \n  \n The surrogate character entity is written in hexadecimal format. The range for surrogate characters is `#x10000` to `#x10FFFF`. The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) * `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.  \n  \n For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646]. A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate). These 16-bit units are referred to as a surrogate pair.  \n  \n For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,364],"content":"This method is only applicable on systems that use UTF-16 encoding.","nodes":[{"content":"This method is only applicable on systems that use UTF-16 encoding.","pos":[0,67]}]},{"pos":[371,644],"content":"The surrogate character entity is written in hexadecimal format. The range for surrogate characters is `#x10000` to `#x10FFFF`. The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) * `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.","nodes":[{"content":"The surrogate character entity is written in hexadecimal format.","pos":[0,64]},{"content":"The range for surrogate characters is <ph id=\"ph1\">`#x10000`</ph> to <ph id=\"ph2\">`#x10FFFF`</ph>.","pos":[65,127],"source":" The range for surrogate characters is `#x10000` to `#x10FFFF`."},{"content":"The following formula is used to generate the surrogate character entity: (<ph id=\"ph1\">`highChar`</ph><ph id=\"ph2\"> - </ph><ph id=\"ph3\">`0xD800`</ph>) * <ph id=\"ph4\">`0x400`</ph> + (<ph id=\"ph5\">`lowChar`</ph><ph id=\"ph6\"> - </ph><ph id=\"ph7\">`0xDC00`</ph>) + <ph id=\"ph8\">`0x10000`</ph>.","pos":[128,273],"source":" The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) * `0x400` + (`lowChar` - `0xDC00`) + `0x10000`."}]},{"pos":[651,1015],"content":"For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646]. A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate). These 16-bit units are referred to as a surrogate pair.","nodes":[{"content":"For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646]. A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate). These 16-bit units are referred to as a surrogate pair.","pos":[0,364],"nodes":[{"content":"For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].","pos":[0,139]},{"content":"A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).","pos":[140,308]},{"content":"These 16-bit units are referred to as a surrogate pair.","pos":[309,364]}]}]},{"pos":[1022,1273],"content":"For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.","nodes":[{"content":"For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.","pos":[0,251]}]}],"pos":[116593,117878],"yaml":true,"extradata":"MT"},{"content":"The low surrogate. This must be a value between `0xDC00` and `0xDFFF`.","nodes":[{"pos":[0,70],"content":"The low surrogate. This must be a value between `0xDC00` and `0xDFFF`.","nodes":[{"content":"The low surrogate.","pos":[0,18]},{"content":"This must be a value between <ph id=\"ph1\">`0xDC00`</ph> and <ph id=\"ph2\">`0xDFFF`</ph>.","pos":[19,70],"source":" This must be a value between `0xDC00` and `0xDFFF`."}]}],"pos":[118055,118126],"yaml":true},{"content":"The high surrogate. This must be a value between `0xD800` and `0xDBFF`.","nodes":[{"pos":[0,71],"content":"The high surrogate. This must be a value between `0xD800` and `0xDBFF`.","nodes":[{"content":"The high surrogate.","pos":[0,19]},{"content":"This must be a value between <ph id=\"ph1\">`0xD800`</ph> and <ph id=\"ph2\">`0xDBFF`</ph>.","pos":[20,71],"source":" This must be a value between `0xD800` and `0xDBFF`."}]}],"pos":[118188,118260],"yaml":true},{"content":"An invalid surrogate character pair was passed.","nodes":[{"pos":[0,47],"content":"An invalid surrogate character pair was passed.","nodes":[{"content":"An invalid surrogate character pair was passed.","pos":[0,47]}]}],"pos":[118415,118463],"yaml":true},{"content":"Writes out the given white space.","nodes":[{"pos":[0,33],"content":"Writes out the given white space.","nodes":[{"content":"Writes out the given white space.","pos":[0,33]}]}],"pos":[119666,119700],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This method is used to manually format your document. Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,465],"content":"This method is used to manually format your document. Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.","nodes":[{"content":"This method is used to manually format your document. Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.","pos":[0,168],"nodes":[{"content":"This method is used to manually format your document.","pos":[0,53]},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Xml.XmlTextWriter.Formatting%2A&gt;</ph> property to have the writer format the output automatically.","pos":[54,168],"source":" Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically."}]}]}],"pos":[119711,120182],"yaml":true,"extradata":"MT"},{"content":"The string of white space characters.","nodes":[{"pos":[0,37],"content":"The string of white space characters.","nodes":[{"content":"The string of white space characters.","pos":[0,37]}]}],"pos":[120962,121000],"yaml":true},{"content":"The string contains non-white space characters.","nodes":[{"pos":[0,47],"content":"The string contains non-white space characters.","nodes":[{"content":"The string contains non-white space characters.","pos":[0,47]}]}],"pos":[121162,121210],"yaml":true},{"content":"Gets the current `xml:lang` scope.","nodes":[{"pos":[0,34],"content":"Gets the current <ph id=\"ph1\">`xml:lang`</ph> scope.","source":"Gets the current `xml:lang` scope."}],"pos":[122298,122333],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This property allows one component to find out what state another component has left the writer in. For example, perhaps one component wants to tell another which language help text to generate. The language information is communicated by writing an `xml:lang` attribute.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,568],"content":"This property allows one component to find out what state another component has left the writer in. For example, perhaps one component wants to tell another which language help text to generate. The language information is communicated by writing an `xml:lang` attribute.","nodes":[{"content":"This property allows one component to find out what state another component has left the writer in.","pos":[0,99]},{"content":"For example, perhaps one component wants to tell another which language help text to generate.","pos":[100,194]},{"content":"The language information is communicated by writing an <ph id=\"ph1\">`xml:lang`</ph> attribute.","pos":[195,271],"source":" The language information is communicated by writing an `xml:lang` attribute."}]}],"pos":[122344,122918],"yaml":true,"extradata":"MT"},{"content":"The current `xml:lang` or `null` if there is no `xml:lang` in the current scope.","nodes":[{"pos":[0,80],"content":"The current <ph id=\"ph1\">`xml:lang`</ph> or <ph id=\"ph2\">`null`</ph> if there is no <ph id=\"ph3\">`xml:lang`</ph> in the current scope.","source":"The current `xml:lang` or `null` if there is no `xml:lang` in the current scope."}],"pos":[123038,123119],"yaml":true},{"content":"Gets an <xref href=\"System.Xml.XmlSpace\"></xref> representing the current `xml:space` scope.","nodes":[{"pos":[0,92],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlSpace\"&gt;&lt;/xref&gt;</ph> representing the current <ph id=\"ph2\">`xml:space`</ph> scope.","source":"Gets an <xref href=\"System.Xml.XmlSpace\"></xref> representing the current `xml:space` scope."}],"pos":[124276,124369],"yaml":true},{"content":"> [!NOTE]\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \n  \n This property allows one component to find out in what state another component has left the writer.","nodes":[{"pos":[2,290],"content":"[!NOTE]\n Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.","leadings":["","> "],"nodes":[{"content":"Starting with the .NET Framework 2.0, we recommend that you create <ph id=\"ph1\">&lt;xref:System.Xml.XmlWriter&gt;</ph> instances by using the <ph id=\"ph2\">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method and the <ph id=\"ph3\">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> class to take advantage of new functionality.","pos":[9,286],"source":" Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality."}]},{"pos":[297,396],"content":"This property allows one component to find out in what state another component has left the writer.","nodes":[{"content":"This property allows one component to find out in what state another component has left the writer.","pos":[0,99]}]}],"pos":[124380,124782],"yaml":true,"extradata":"MT"},{"content":"An `XmlSpace` representing the current `xml:space` scope.  \n  \n <table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> None  \n  \n </td><td> This is the default if no `xml:space` scope exists.  \n  \n </td></tr><tr><td> Default  \n  \n </td><td> The current scope is `xml:space`=\"default\".  \n  \n </td></tr><tr><td> Preserve  \n  \n </td><td> The current scope is `xml:space`=\"preserve\".  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,57],"content":"An <ph id=\"ph1\">`XmlSpace`</ph> representing the current <ph id=\"ph2\">`xml:space`</ph> scope.","source":"An `XmlSpace` representing the current `xml:space` scope."},{"pos":[64,451],"content":"<table><thead><tr><th> Value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> None  \n  \n </td><td> This is the default if no `xml:space` scope exists.  \n  \n </td></tr><tr><td> Default  \n  \n </td><td> The current scope is `xml:space`=\"default\".  \n  \n </td></tr><tr><td> Preserve  \n  \n </td><td> The current scope is `xml:space`=\"preserve\".  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Value","pos":[23,33],"source":" Value  \n  \n "},{"content":"Meaning","pos":[45,57],"source":" Meaning  \n  \n "},{"content":"None","pos":[93,102],"source":" None  \n  \n "},{"content":" This is the default if no `xml:space` scope exists.  \n  \n ","pos":[113,172],"nodes":[{"content":"This is the default if no <ph id=\"ph1\">`xml:space`</ph> scope exists.","pos":[1,52],"source":" This is the default if no `xml:space` scope exists."}]},{"content":"Default","pos":[191,203],"source":" Default  \n  \n "},{"content":" The current scope is `xml:space`=\"default\".  \n  \n ","pos":[214,265],"nodes":[{"content":"The current scope is <ph id=\"ph1\">`xml:space`</ph>=\"default\".","pos":[1,44],"source":" The current scope is `xml:space`=\"default\"."}]},{"content":"Preserve","pos":[284,297],"source":" Preserve  \n  \n "},{"content":" The current scope is `xml:space`=\"preserve\".  \n  \n ","pos":[308,360],"nodes":[{"content":"The current scope is <ph id=\"ph1\">`xml:space`</ph>=\"preserve\".","pos":[1,45],"source":" The current scope is `xml:space`=\"preserve\"."}]}]}],"pos":[125555,126030],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlTextWriter\n  commentId: T:System.Xml.XmlTextWriter\n  id: XmlTextWriter\n  children:\n  - System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)\n  - System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  - System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)\n  - System.Xml.XmlTextWriter.BaseStream\n  - System.Xml.XmlTextWriter.Close\n  - System.Xml.XmlTextWriter.Flush\n  - System.Xml.XmlTextWriter.Formatting\n  - System.Xml.XmlTextWriter.Indentation\n  - System.Xml.XmlTextWriter.IndentChar\n  - System.Xml.XmlTextWriter.LookupPrefix(System.String)\n  - System.Xml.XmlTextWriter.Namespaces\n  - System.Xml.XmlTextWriter.QuoteChar\n  - System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlTextWriter.WriteCData(System.String)\n  - System.Xml.XmlTextWriter.WriteCharEntity(System.Char)\n  - System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)\n  - System.Xml.XmlTextWriter.WriteComment(System.String)\n  - System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)\n  - System.Xml.XmlTextWriter.WriteEndAttribute\n  - System.Xml.XmlTextWriter.WriteEndDocument\n  - System.Xml.XmlTextWriter.WriteEndElement\n  - System.Xml.XmlTextWriter.WriteEntityRef(System.String)\n  - System.Xml.XmlTextWriter.WriteFullEndElement\n  - System.Xml.XmlTextWriter.WriteName(System.String)\n  - System.Xml.XmlTextWriter.WriteNmToken(System.String)\n  - System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)\n  - System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)\n  - System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)\n  - System.Xml.XmlTextWriter.WriteRaw(System.String)\n  - System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)\n  - System.Xml.XmlTextWriter.WriteStartDocument\n  - System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)\n  - System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)\n  - System.Xml.XmlTextWriter.WriteState\n  - System.Xml.XmlTextWriter.WriteString(System.String)\n  - System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)\n  - System.Xml.XmlTextWriter.WriteWhitespace(System.String)\n  - System.Xml.XmlTextWriter.XmlLang\n  - System.Xml.XmlTextWriter.XmlSpace\n  langs:\n  - csharp\n  name: XmlTextWriter\n  nameWithType: XmlTextWriter\n  fullName: System.Xml.XmlTextWriter\n  type: Class\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: \"Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.  \\n  \\n Starting with the .NET Framework 2.0, we recommend that you use the <xref href=\\\"System.Xml.XmlWriter\\\"></xref> class instead.\"\n  remarks: \"This class implements the <xref:System.Xml.XmlWriter> class.  \\n  \\n> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n `XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack. Using `XmlTextWriter` you can declare namespaces manually.  \\n  \\n```  \\nw.WriteStartElement(\\\"root\\\");  \\nw.WriteAttributeString(\\\"xmlns\\\", \\\"x\\\", null, \\\"urn:1\\\");  \\n w.WriteStartElement(\\\"item\\\",\\\"urn:1\\\");  \\n w.WriteEndElement();  \\n w.WriteStartElement(\\\"item\\\",\\\"urn:1\\\");  \\n w.WriteEndElement();  \\nw.WriteEndElement();  \\n```  \\n  \\n The above C# code produces the following output. `XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements. The child elements pick up the prefix from the namespace declaration.  \\n  \\n```  \\n<root xmlns:x=\\\"urn:1\\\">  \\n <x:item/>  \\n <x:item/>  \\n</x:root>  \\n```  \\n  \\n `XmlTextWriter` also allows you to override the current namespace declaration. In the following example, the namespace URI \\\"123\\\" is overridden by \\\"abc\\\" to produce the XML element `<x:node xmlns:x=\\\"abc\\\"/>`.  \\n  \\n```  \\nw.WriteStartElement(\\\"x\\\",\\\"node\\\",\\\"123\\\");  \\nw.WriteAttributeString(\\\"xmlns\\\",\\\"x\\\",null,\\\"abc\\\");  \\n```  \\n  \\n By using the write methods that take a prefix as an argument you can also specify which prefix to use. In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x=\\\"urn:1\\\"><y:item xmlns:y=\\\"urn:1\\\"/></x:root>`.  \\n  \\n```  \\nXmlTextWriter w = new XmlTextWriter(Console.Out);  \\nw.WriteStartElement(\\\"x\\\",\\\"root\\\",\\\"urn:1\\\");  \\n w.WriteStartElement(\\\"y\\\",\\\"item\\\",\\\"urn:1\\\");  \\n w.WriteEndElement();  \\nw.WriteEndElement();  \\nw.Close();  \\n```  \\n  \\n If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.  \\n  \\n```  \\nXmlTextWriter w = new XmlTextWriter(Console.Out);  \\nw.Formatting = Formatting.Indented;  \\nw.WriteStartElement(\\\"x\\\",\\\"root\\\",\\\"urn:1\\\");  \\nw.WriteStartElement(\\\"y\\\",\\\"item\\\",\\\"urn:1\\\");  \\nw.WriteAttributeString(\\\"attr\\\",\\\"urn:1\\\",\\\"123\\\");  \\nw.WriteEndElement();  \\nw.WriteEndElement();  \\nw.Close();  \\n```  \\n  \\n In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:  \\n  \\n```  \\n<x:root xmlns:x=\\\"urn:1\\\">  \\n <y:item y:attr=\\\"123\\\" xmlns:y=\\\"urn:1\\\" />  \\n</x:root>  \\n```  \\n  \\n If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes. For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute. The generated prefixes are named `n{i}` where `i` is a number beginning at 1. The number is reset to 1 for each element.  \\n  \\n Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes). This conforms to section 5.2 of the W3C Namespaces in XML recommendation. If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.  \\n  \\n When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`. This provides compatibility with older browsers.  \\n  \\n When a `String` is used as method parameter, `null` and `String.Empty` are equivalent. `String.Empty` follows the W3C rules.  \\n  \\n To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string. For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.  \\n  \\n```  \\nDouble price = 19.95;  \\nwriter.WriteElementString(\\\"price\\\", XmlConvert.ToString(price));  \\n```  \\n  \\n `XmlTextWriter` does not check for the following:  \\n  \\n-   Invalid characters in attribute and element names.  \\n  \\n-   Unicode characters that do not fit the specified encoding. If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.  \\n  \\n-   Duplicate attributes.  \\n  \\n-   Characters in the DOCTYPE public identifier or system identifier.  \\n  \\n## Security Considerations  \\n The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.  \\n  \\n-   Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application. Your applications must catch exceptions and process them appropriately.  \\n  \\n-   When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application. If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.  \\n  \\n-   The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods. You should not pass arbitrary data to these methods.  \\n  \\n-   If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.  \\n  \\n-   Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.\"\n  syntax:\n    content: 'public class XmlTextWriter : System.Xml.XmlWriter'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlWriter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Xml.XmlWriter.Create(System.IO.Stream)\n  - System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)\n  - System.Xml.XmlWriter.Create(System.IO.TextWriter)\n  - System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)\n  - System.Xml.XmlWriter.Create(System.String)\n  - System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)\n  - System.Xml.XmlWriter.Create(System.Text.StringBuilder)\n  - System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)\n  - System.Xml.XmlWriter.Create(System.Xml.XmlWriter)\n  - System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)\n  - System.Xml.XmlWriter.Dispose\n  - System.Xml.XmlWriter.Dispose(System.Boolean)\n  - System.Xml.XmlWriter.FlushAsync\n  - System.Xml.XmlWriter.Settings\n  - System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)\n  - System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)\n  - System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)\n  - System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)\n  - System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)\n  - System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)\n  - System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  - System.Xml.XmlWriter.WriteCDataAsync(System.String)\n  - System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)\n  - System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)\n  - System.Xml.XmlWriter.WriteCommentAsync(System.String)\n  - System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)\n  - System.Xml.XmlWriter.WriteElementString(System.String,System.String)\n  - System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)\n  - System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)\n  - System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)\n  - System.Xml.XmlWriter.WriteEndAttributeAsync\n  - System.Xml.XmlWriter.WriteEndDocumentAsync\n  - System.Xml.XmlWriter.WriteEndElementAsync\n  - System.Xml.XmlWriter.WriteEntityRefAsync(System.String)\n  - System.Xml.XmlWriter.WriteFullEndElementAsync\n  - System.Xml.XmlWriter.WriteNameAsync(System.String)\n  - System.Xml.XmlWriter.WriteNmTokenAsync(System.String)\n  - System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)\n  - System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)\n  - System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)\n  - System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)\n  - System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)\n  - System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)\n  - System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)\n  - System.Xml.XmlWriter.WriteRawAsync(System.String)\n  - System.Xml.XmlWriter.WriteStartAttribute(System.String)\n  - System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)\n  - System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)\n  - System.Xml.XmlWriter.WriteStartDocumentAsync\n  - System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)\n  - System.Xml.XmlWriter.WriteStartElement(System.String)\n  - System.Xml.XmlWriter.WriteStartElement(System.String,System.String)\n  - System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)\n  - System.Xml.XmlWriter.WriteStringAsync(System.String)\n  - System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)\n  - System.Xml.XmlWriter.WriteValue(System.Boolean)\n  - System.Xml.XmlWriter.WriteValue(System.DateTime)\n  - System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)\n  - System.Xml.XmlWriter.WriteValue(System.Decimal)\n  - System.Xml.XmlWriter.WriteValue(System.Double)\n  - System.Xml.XmlWriter.WriteValue(System.Int32)\n  - System.Xml.XmlWriter.WriteValue(System.Int64)\n  - System.Xml.XmlWriter.WriteValue(System.Object)\n  - System.Xml.XmlWriter.WriteValue(System.Single)\n  - System.Xml.XmlWriter.WriteValue(System.String)\n  - System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)\n  commentId: M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)\n  id: '#ctor(System.IO.TextWriter)'\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: XmlTextWriter(TextWriter)\n  nameWithType: XmlTextWriter.XmlTextWriter(TextWriter)\n  fullName: XmlTextWriter.XmlTextWriter(TextWriter)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Creates an instance of the `XmlTextWriter` class using the specified <xref href=\"System.IO.TextWriter\"></xref>.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  syntax:\n    content: public XmlTextWriter (System.IO.TextWriter w);\n    parameters:\n    - id: w\n      type: System.IO.TextWriter\n      description: The `TextWriter` to write to. It is assumed that the `TextWriter` is already set to the correct encoding.\n  overload: System.Xml.XmlTextWriter.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  commentId: M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding)'\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: XmlTextWriter(Stream, Encoding)\n  nameWithType: XmlTextWriter.XmlTextWriter(Stream, Encoding)\n  fullName: XmlTextWriter.XmlTextWriter(Stream, Encoding)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Creates an instance of the `XmlTextWriter` class using the specified stream and encoding.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  syntax:\n    content: public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);\n    parameters:\n    - id: w\n      type: System.IO.Stream\n      description: The stream to which you want to write.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The encoding to generate. If encoding is `null` it writes out the stream as UTF-8 and omits the encoding attribute from the `ProcessingInstruction`.\n  overload: System.Xml.XmlTextWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The encoding is not supported or the stream cannot be written to.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>w</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)\n  commentId: M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)\n  id: '#ctor(System.String,System.Text.Encoding)'\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: XmlTextWriter(String, Encoding)\n  nameWithType: XmlTextWriter.XmlTextWriter(String, Encoding)\n  fullName: XmlTextWriter.XmlTextWriter(String, Encoding)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Creates an instance of the <xref href=\"System.Xml.XmlTextWriter\"></xref> class using the specified file.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  syntax:\n    content: public XmlTextWriter (string filename, System.Text.Encoding encoding);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The filename to write to. If the file exists, it truncates it and overwrites it with the new content.\n    - id: encoding\n      type: System.Text.Encoding\n      description: The encoding to generate. If encoding is `null` it writes the file out as UTF-8, and omits the encoding attribute from the `ProcessingInstruction`.\n  overload: System.Xml.XmlTextWriter.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access is denied.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The filename is `null`.\n  - type: System.IO.DirectoryNotFoundException\n    commentId: T:System.IO.DirectoryNotFoundException\n    description: The directory to write to is not found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have the required permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.BaseStream\n  commentId: P:System.Xml.XmlTextWriter.BaseStream\n  id: BaseStream\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: XmlTextWriter.BaseStream\n  fullName: XmlTextWriter.BaseStream\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets the underlying stream object.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=fullName> property. If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor. If the writer was constructed using a file name, this property returns the `Stream` representing the file.\"\n  syntax:\n    content: public System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: The stream to which the `XmlTextWriter` is writing or `null` if the `XmlTextWriter` was constructed using a <xref href=\"System.IO.TextWriter\"></xref> that does not inherit from the <xref href=\"System.IO.StreamWriter\"></xref> class.\n  overload: System.Xml.XmlTextWriter.BaseStream*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.Close\n  commentId: M:System.Xml.XmlTextWriter.Close\n  id: Close\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: XmlTextWriter.Close()\n  fullName: XmlTextWriter.Close()\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Closes this stream and the underlying stream.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n Any elements or attributes left open are automatically closed.  \\n  \\n This method does not throw any exceptions.\"\n  example:\n  - \"The following example writes an XML fragment.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Xml.XmlTextWriter.Close*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.Flush\n  commentId: M:System.Xml.XmlTextWriter.Flush\n  id: Flush\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: XmlTextWriter.Flush()\n  fullName: XmlTextWriter.Flush()\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.\"\n  example:\n  - \"The following example writes out two XML fragments.  \\n  \\n [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]\\n [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]\\n [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]\"\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Xml.XmlTextWriter.Flush*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.Formatting\n  commentId: P:System.Xml.XmlTextWriter.Formatting\n  id: Formatting\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: Formatting\n  nameWithType: XmlTextWriter.Formatting\n  fullName: XmlTextWriter.Formatting\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Indicates how the output is formatted.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties. Only element content is indented. The following C# code writes out HTML elements including mixed content:  \\n  \\n```  \\nXmlTextWriter w = new XmlTextWriter(Console.Out);   \\n w.Formatting = Formatting.Indented;   \\n w.WriteStartElement(\\\"ol\\\");   \\n w.WriteStartElement(\\\"li\\\");   \\n w.WriteString(\\\"The big \\\"); // This means \\\"li\\\" now has a mixed content model.  \\n w.WriteElementString(\\\"b\\\", \\\"E\\\");   \\n w.WriteElementString(\\\"i\\\", \\\"lephant\\\");   \\n w.WriteString(\\\" walks slowly.\\\");   \\n w.WriteEndElement();   \\n w.WriteEndElement();  \\n```  \\n  \\n The above code produces the following output:  \\n  \\n```  \\n<ol>   \\n  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   \\n</ol>  \\n```  \\n  \\n When this is viewed in HTML no white space appears between the bold and italic elements. In fact, in this example, if indenting was added between these elements the word \\\"Elephant\\\" would be incorrectly broken.  \\n  \\n> [!NOTE]\\n>  Writing any text content, excluding `String.Empty` puts that element into mixed content mode. Child elements do not inherit this \\\"mixed\\\" mode status. A child element of a \\\"mixed\\\" element does indenting, unless it is also contains \\\"mixed\\\" content. Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.\"\n  example:\n  - \"The following example writes an XML fragment.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Xml.Formatting Formatting { get; set; }\n    return:\n      type: System.Xml.Formatting\n      description: One of the <xref href=\"System.Xml.Formatting\"></xref> values. The default is `Formatting.None` (no special formatting).\n  overload: System.Xml.XmlTextWriter.Formatting*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.Indentation\n  commentId: P:System.Xml.XmlTextWriter.Indentation\n  id: Indentation\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: Indentation\n  nameWithType: XmlTextWriter.Indentation\n  fullName: XmlTextWriter.Indentation\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets or sets how many IndentChars to write for each level in the hierarchy when <xref href=\"System.Xml.XmlTextWriter.Formatting\"></xref> is set to `Formatting.Indented`.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`. All other node types are not affected. The `XmlTextWriter` does not indent the internal DTD subset. However, you could do the following to apply formatting to the internal DTD subset.  \\n  \\n```  \\nString name = \\\"Employees\\\";  \\nString pubid = null;  \\nString sysid = null;  \\nString subset =  \\n@\\\"  \\n    <!ELEMENT Employees (Employee)+>  \\n    <!ELEMENT Employee EMPTY>  \\n    <!ATTLIST Employee firstname CDATA #REQUIRED>  \\n    <!ENTITY Company 'Microsoft'>]>  \\n\\\";  \\nXmlTextWriter tw = new XmlTextWriter(Console.Out);  \\ntw.WriteDocType(name, pubid, sysid, subset);  \\n```\"\n  example:\n  - \"The following example writes an XML fragment.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]\"\n  syntax:\n    content: public int Indentation { get; set; }\n    return:\n      type: System.Int32\n      description: Number of `IndentChars` for each level. The default is 2.\n  overload: System.Xml.XmlTextWriter.Indentation*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Setting this property to a negative value.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.IndentChar\n  commentId: P:System.Xml.XmlTextWriter.IndentChar\n  id: IndentChar\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: IndentChar\n  nameWithType: XmlTextWriter.IndentChar\n  fullName: XmlTextWriter.IndentChar\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets or sets which character to use for indenting when <xref href=\"System.Xml.XmlTextWriter.Formatting\"></xref> is set to `Formatting.Indented`.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  syntax:\n    content: public char IndentChar { get; set; }\n    return:\n      type: System.Char\n      description: \"The character to use for indenting. The default is space.  \\n  \\n <block subset=\\\"none\\\" type=\\\"note\\\"><p>  \\n The `XmlTextWriter` allows you to set this property to any character. To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.  \\n  \\n</p></block>\"\n  overload: System.Xml.XmlTextWriter.IndentChar*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.LookupPrefix(System.String)\n  commentId: M:System.Xml.XmlTextWriter.LookupPrefix(System.String)\n  id: LookupPrefix(System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: LookupPrefix(String)\n  nameWithType: XmlTextWriter.LookupPrefix(String)\n  fullName: XmlTextWriter.LookupPrefix(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Returns the closest prefix defined in the current namespace scope for the namespace URI.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  example:\n  - \"The following example writes out a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override string LookupPrefix (string ns);\n    parameters:\n    - id: ns\n      type: System.String\n      description: Namespace URI whose prefix you want to find.\n    return:\n      type: System.String\n      description: The matching prefix. Or `null` if no matching namespace URI is found in the current scope.\n  overload: System.Xml.XmlTextWriter.LookupPrefix*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>ns</code> is either `null` or `String.Empty`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.Namespaces\n  commentId: P:System.Xml.XmlTextWriter.Namespaces\n  id: Namespaces\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: Namespaces\n  nameWithType: XmlTextWriter.Namespaces\n  fullName: XmlTextWriter.Namespaces\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets or sets a value indicating whether to do namespace support.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.\"\n  syntax:\n    content: public bool Namespaces { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` to support namespaces; otherwise, `false`.  \\n  \\n The default is `true`.\"\n  overload: System.Xml.XmlTextWriter.Namespaces*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: You can only change this property when in the `WriteState.Start` state.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.QuoteChar\n  commentId: P:System.Xml.XmlTextWriter.QuoteChar\n  id: QuoteChar\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: QuoteChar\n  nameWithType: XmlTextWriter.QuoteChar\n  fullName: XmlTextWriter.QuoteChar\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets or sets which character to use to quote attribute values.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  syntax:\n    content: public char QuoteChar { get; set; }\n    return:\n      type: System.Char\n      description: The character to use to quote attribute values. This must be a single quote (&#39;) or a double quote (&#34;). The default is a double quote.\n  overload: System.Xml.XmlTextWriter.QuoteChar*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Setting this property to something other than either a single or double quote.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)\n  id: WriteBase64(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteBase64(Byte[], Int32, Int32)\n  nameWithType: XmlTextWriter.WriteBase64(Byte[], Int32, Int32)\n  fullName: XmlTextWriter.WriteBase64(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Encodes the specified binary bytes as base64 and writes out the resulting text.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  example:\n  - \"The following example encodes an input file using `WriteBase64` and generates a temporary XML file. The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.  \\n  \\n [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]\\n [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]\\n [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]\"\n  syntax:\n    content: public override void WriteBase64 (byte[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Byte array to encode.\n    - id: index\n      type: System.Int32\n      description: The position within the buffer indicating the start of the bytes to write.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to write.\n  overload: System.Xml.XmlTextWriter.WriteBase64*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The buffer length minus <code>index</code> is less than <code>count</code>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is less than zero.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)\n  id: WriteBinHex(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteBinHex(Byte[], Int32, Int32)\n  nameWithType: XmlTextWriter.WriteBinHex(Byte[], Int32, Int32)\n  fullName: XmlTextWriter.WriteBinHex(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Encodes the specified binary bytes as binhex and writes out the resulting text.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  syntax:\n    content: public override void WriteBinHex (byte[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Byte array to encode.\n    - id: index\n      type: System.Int32\n      description: The position in the buffer indicating the start of the bytes to write.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to write.\n  overload: System.Xml.XmlTextWriter.WriteBinHex*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The buffer length minus <code>index</code> is less than <code>count</code>.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>index</code> or <code>count</code> is less than zero.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is Closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteCData(System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteCData(System.String)\n  id: WriteCData(System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteCData(String)\n  nameWithType: XmlTextWriter.WriteCData(String)\n  fullName: XmlTextWriter.WriteCData(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes out a <![CDATA[...]]> block containing the specified text.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \\\\<![CDATA[]]>.\"\n  example:\n  - \"The following example writes an XML file representing a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteCData (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: Text to place inside the CDATA block.\n  overload: System.Xml.XmlTextWriter.WriteCData*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The text would result in a non-well formed XML document.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteCharEntity(System.Char)\n  commentId: M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)\n  id: WriteCharEntity(System.Char)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteCharEntity(Char)\n  nameWithType: XmlTextWriter.WriteCharEntity(Char)\n  fullName: XmlTextWriter.WriteCharEntity(Char)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Forces the generation of a character entity for the specified Unicode character value.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This method writes the Unicode character in hexadecimal character entity reference format.\"\n  example:\n  - \"The following example uses the `WriteCharEntity` method to write an e-mail address.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteCharEntity (char ch);\n    parameters:\n    - id: ch\n      type: System.Char\n      description: Unicode character for which to generate a character entity.\n  overload: System.Xml.XmlTextWriter.WriteCharEntity*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The character is in the surrogate pair character range, `0xd800` - `0xdfff`; or the text would result in a non-well formed XML document.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)\n  id: WriteChars(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteChars(Char[], Int32, Int32)\n  nameWithType: XmlTextWriter.WriteChars(Char[], Int32, Int32)\n  fullName: XmlTextWriter.WriteChars(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes text one buffer at a time.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This method can be used to write large amounts of text one buffer at a time.  \\n  \\n Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes. The XML specification defines the valid ranges for surrogate pairs.  \\n  \\n An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.\"\n  example:\n  - '[!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]'\n  syntax:\n    content: public override void WriteChars (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: Character array containing the text to write.\n    - id: index\n      type: System.Int32\n      description: The position in the buffer indicating the start of the text to write.\n    - id: count\n      type: System.Int32\n      description: The number of characters to write.\n  overload: System.Xml.XmlTextWriter.WriteChars*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> or <code>count</code> is less than zero.  \\n  \\n -or-  \\n  \\n The buffer length minus <code>index</code> is less than <code>count</code>; the call results in surrogate pair characters being split or an invalid surrogate pair being written.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is Closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteComment(System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteComment(System.String)\n  id: WriteComment(System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteComment(String)\n  nameWithType: XmlTextWriter.WriteComment(String)\n  fullName: XmlTextWriter.WriteComment(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes out a comment <!--...--> containing the specified text.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \\\\<!---->.\"\n  example:\n  - \"The following example writes an XML file representing a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteComment (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: Text to place inside the comment.\n  overload: System.Xml.XmlTextWriter.WriteComment*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The text would result in a non-well formed XML document\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Xml.XmlTextWriter.WriteState\"></xref> is `Closed`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)\n  id: WriteDocType(System.String,System.String,System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteDocType(String, String, String, String)\n  nameWithType: XmlTextWriter.WriteDocType(String, String, String, String)\n  fullName: XmlTextWriter.WriteDocType(String, String, String, String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes the DOCTYPE declaration with the specified name and optional attributes.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This method does not check for invalid characters in `pubid`, `sysid` or `subset`. It also does not check that the internal subset is well-formed.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method. You should not pass arbitrary data to this method.\"\n  example:\n  - \"The following example writes an XML file representing a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteDocType (string name, string pubid, string sysid, string subset);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the DOCTYPE. This must be non-empty.\n    - id: pubid\n      type: System.String\n      description: If non-null it also writes PUBLIC \"pubid\" \"sysid\" where <code>pubid</code> and <code>sysid</code> are replaced with the value of the given arguments.\n    - id: sysid\n      type: System.String\n      description: If <code>pubid</code> is null and <code>sysid</code> is non-null it writes SYSTEM \"sysid\" where <code>sysid</code> is replaced with the value of this argument.\n    - id: subset\n      type: System.String\n      description: If non-null it writes [subset] where subset is replaced with the value of this argument.\n  overload: System.Xml.XmlTextWriter.WriteDocType*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method was called outside the prolog (after the root element).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>name</code> is `null` or `String.Empty`  \\n  \\n -or-  \\n  \\n the value for <code>name</code> would result in invalid XML.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteEndAttribute\n  commentId: M:System.Xml.XmlTextWriter.WriteEndAttribute\n  id: WriteEndAttribute\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteEndAttribute()\n  nameWithType: XmlTextWriter.WriteEndAttribute()\n  fullName: XmlTextWriter.WriteEndAttribute()\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Closes the previous <xref href=\"System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)\"></xref> call.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n If you call `WriteStartAttribute`, you can close the attribute with this method.  \\n  \\n You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.\"\n  example:\n  - \"The following example writes out a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteEndAttribute ();\n    parameters: []\n  overload: System.Xml.XmlTextWriter.WriteEndAttribute*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteEndDocument\n  commentId: M:System.Xml.XmlTextWriter.WriteEndDocument\n  id: WriteEndDocument\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteEndDocument()\n  nameWithType: XmlTextWriter.WriteEndDocument()\n  fullName: XmlTextWriter.WriteEndDocument()\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Closes any open elements or attributes and puts the writer back in the Start state.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  example:\n  - \"The following example writes an XML file representing a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteEndDocument ();\n    parameters: []\n  overload: System.Xml.XmlTextWriter.WriteEndDocument*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The XML document is invalid.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteEndElement\n  commentId: M:System.Xml.XmlTextWriter.WriteEndElement\n  id: WriteEndElement\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteEndElement()\n  nameWithType: XmlTextWriter.WriteEndElement()\n  fullName: XmlTextWriter.WriteEndElement()\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Closes one element and pops the corresponding namespace scope.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n If the element contains no content a short end tag \\\"/>\\\" is written; otherwise a full end tag is written.\"\n  example:\n  - \"The following example writes an XML file representing a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteEndElement ();\n    parameters: []\n  overload: System.Xml.XmlTextWriter.WriteEndElement*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteEntityRef(System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)\n  id: WriteEntityRef(System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteEntityRef(String)\n  nameWithType: XmlTextWriter.WriteEntityRef(String)\n  fullName: XmlTextWriter.WriteEntityRef(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes out an entity reference as `&name;`.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  example:\n  - \"The following example writes an XML file representing a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteEntityRef (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name of the entity reference.\n  overload: System.Xml.XmlTextWriter.WriteEntityRef*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The text would result in a non-well formed XML document or <code>name</code> is either `null` or `String.Empty`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteFullEndElement\n  commentId: M:System.Xml.XmlTextWriter.WriteFullEndElement\n  id: WriteFullEndElement\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteFullEndElement()\n  nameWithType: XmlTextWriter.WriteFullEndElement()\n  fullName: XmlTextWriter.WriteFullEndElement()\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Closes one element and pops the corresponding namespace scope.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This method always writes the full end tag. This is useful when dealing with elements that must include a full end tag. For example, browsers expect HTML script blocks to be closed with \\\"\\\\</script>\\\".\"\n  example:\n  - \"The following example writes out an element with no content. It uses WriteFullEndElement to write the full end element tag.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteFullEndElement ();\n    parameters: []\n  overload: System.Xml.XmlTextWriter.WriteFullEndElement*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteName(System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteName(System.String)\n  id: WriteName(System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteName(String)\n  nameWithType: XmlTextWriter.WriteName(String)\n  fullName: XmlTextWriter.WriteName(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.\"\n  syntax:\n    content: public override void WriteName (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name to write.\n  overload: System.Xml.XmlTextWriter.WriteName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> is not a valid XML name; or <code>name</code> is either `null` or `String.Empty`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteNmToken(System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteNmToken(System.String)\n  id: WriteNmToken(System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteNmToken(String)\n  nameWithType: XmlTextWriter.WriteNmToken(String)\n  fullName: XmlTextWriter.WriteNmToken(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes out the specified name, ensuring it is a valid `NmToken` according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  syntax:\n    content: public override void WriteNmToken (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name to write.\n  overload: System.Xml.XmlTextWriter.WriteNmToken*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>name</code> is not a valid `NmToken`; or <code>name</code> is either `null` or `String.Empty`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)\n  id: WriteProcessingInstruction(System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteProcessingInstruction(String, String)\n  nameWithType: XmlTextWriter.WriteProcessingInstruction(String, String)\n  fullName: XmlTextWriter.WriteProcessingInstruction(String, String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: 'Writes out a processing instruction with a space between the name and text as follows: <?name text?>.'\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \\\\<?name?>.\"\n  example:\n  - \"The following example writes an XML file representing a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteProcessingInstruction (string name, string text);\n    parameters:\n    - id: name\n      type: System.String\n      description: Name of the processing instruction.\n    - id: text\n      type: System.String\n      description: Text to include in the processing instruction.\n  overload: System.Xml.XmlTextWriter.WriteProcessingInstruction*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The text would result in a non-well formed XML document.  \\n  \\n <code>name</code> is either `null` or `String.Empty`.  \\n  \\n This method is being used to create an XML declaration after <xref href=\\\"System.Xml.XmlTextWriter.WriteStartDocument\\\"></xref> has already been called.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)\n  id: WriteQualifiedName(System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteQualifiedName(String, String)\n  nameWithType: XmlTextWriter.WriteQualifiedName(String, String)\n  fullName: XmlTextWriter.WriteQualifiedName(String, String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n For example, the following Microsoft Visual C# code:  \\n  \\n```  \\nwriter.Formatting = Formatting.Indented;  \\nwriter.WriteStartElement(\\\"root\\\");  \\n writer.WriteAttributeString(\\\"xmlns\\\",\\\"x\\\",null,\\\"urn:abc\\\");  \\n writer.WriteStartElement(\\\"item\\\");  \\n writer.WriteStartAttribute(\\\"href\\\",null);  \\n writer.WriteString(\\\"#\\\");  \\n writer.WriteQualifiedName(\\\"test\\\",\\\"urn:abc\\\");  \\n writer.WriteEndAttribute();  \\n writer.WriteEndElement();  \\n writer.WriteEndElement();  \\n writer.Close();  \\n```  \\n  \\n Generates the following output:  \\n  \\n```  \\n<root xmlns:x=\\\"urn:abc\\\">  \\n <item href=\\\"#x:test\\\"/>  \\n </root>  \\n```  \\n  \\n If `ns` maps to the current default namespace, no prefix is generated.  \\n  \\n When writing attribute values, this method generates a prefix if `ns` is not found. When writing element content, it throws an exception if `ns` is not found.  \\n  \\n If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).\"\n  example:\n  - \"The following example writes out a portion of a XSD schema.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteQualifiedName (string localName, string ns);\n    parameters:\n    - id: localName\n      type: System.String\n      description: The local name to write.\n    - id: ns\n      type: System.String\n      description: The namespace URI to associate with the name.\n  overload: System.Xml.XmlTextWriter.WriteQualifiedName*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>localName</code> is either `null` or `String.Empty`.  \\n  \\n <code>localName</code> is not a valid name according to the W3C Namespaces spec.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)\n  commentId: M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)\n  id: WriteRaw(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteRaw(Char[], Int32, Int32)\n  nameWithType: XmlTextWriter.WriteRaw(Char[], Int32, Int32)\n  fullName: XmlTextWriter.WriteRaw(Char[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes raw markup manually from a character buffer.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This method does not escape special characters.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method. You should not pass arbitrary data to this method.\"\n  syntax:\n    content: public override void WriteRaw (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: Character array containing the text to write.\n    - id: index\n      type: System.Int32\n      description: The position within the buffer indicating the start of the text to write.\n    - id: count\n      type: System.Int32\n      description: The number of characters to write.\n  overload: System.Xml.XmlTextWriter.WriteRaw*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>index</code> or <code>count</code> is less than zero.  \\n  \\n -or-  \\n  \\n The buffer length minus <code>index</code> is less than <code>count</code>.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteRaw(System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteRaw(System.String)\n  id: WriteRaw(System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteRaw(String)\n  nameWithType: XmlTextWriter.WriteRaw(String)\n  fullName: XmlTextWriter.WriteRaw(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes raw markup manually from a string.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This method does not escape special characters.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method. You should not pass arbitrary data to this method.\"\n  example:\n  - \"The following example writes a string using the `WriteRaw` method.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteRaw (string data);\n    parameters:\n    - id: data\n      type: System.String\n      description: String containing the text to write.\n  overload: System.Xml.XmlTextWriter.WriteRaw*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)\n  id: WriteStartAttribute(System.String,System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteStartAttribute(String, String, String)\n  nameWithType: XmlTextWriter.WriteStartAttribute(String, String, String)\n  fullName: XmlTextWriter.WriteStartAttribute(String, String, String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes the start of an attribute.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.\"\n  example:\n  - \"The following example writes out a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteStartAttribute (string prefix, string localName, string ns);\n    parameters:\n    - id: prefix\n      type: System.String\n      description: '`Namespace` prefix of the attribute.'\n    - id: localName\n      type: System.String\n      description: '`LocalName` of the attribute.'\n    - id: ns\n      type: System.String\n      description: '`NamespaceURI` of the attribute'\n  overload: System.Xml.XmlTextWriter.WriteStartAttribute*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>localName</code> is either `null` or `String.Empty`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteStartDocument\n  commentId: M:System.Xml.XmlTextWriter.WriteStartDocument\n  id: WriteStartDocument\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteStartDocument()\n  nameWithType: XmlTextWriter.WriteStartDocument()\n  fullName: XmlTextWriter.WriteStartDocument()\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes the XML declaration with the version \"1.0\".\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n The encoding level of the document is determined by how the writer is implemented. For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute. This method does not create a standalone attribute.  \\n  \\n When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document. For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on. If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.  \\n  \\n If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.\"\n  example:\n  - \"The following example writes an XML file representing a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteStartDocument ();\n    parameters: []\n  overload: System.Xml.XmlTextWriter.WriteStartDocument*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This is not the first write method called after the constructor.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)\n  commentId: M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)\n  id: WriteStartDocument(System.Boolean)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteStartDocument(Boolean)\n  nameWithType: XmlTextWriter.WriteStartDocument(Boolean)\n  fullName: XmlTextWriter.WriteStartDocument(Boolean)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes the XML declaration with the version \"1.0\" and the standalone attribute.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n The encoding level of the document is determined by how the writer is implemented. For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.  \\n  \\n When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document. For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on. If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.  \\n  \\n If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.\"\n  syntax:\n    content: public override void WriteStartDocument (bool standalone);\n    parameters:\n    - id: standalone\n      type: System.Boolean\n      description: If `true`, it writes \"standalone=yes\"; if `false`, it writes \"standalone=no\".\n  overload: System.Xml.XmlTextWriter.WriteStartDocument*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This is not the first write method called after the constructor.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)\n  id: WriteStartElement(System.String,System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteStartElement(String, String, String)\n  nameWithType: XmlTextWriter.WriteStartElement(String, String, String)\n  fullName: XmlTextWriter.WriteStartElement(String, String, String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes the specified start tag and associates it with the given namespace and prefix.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements. You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.\"\n  example:\n  - \"The following example writes out a book.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteStartElement (string prefix, string localName, string ns);\n    parameters:\n    - id: prefix\n      type: System.String\n      description: The namespace prefix of the element.\n    - id: localName\n      type: System.String\n      description: The local name of the element.\n    - id: ns\n      type: System.String\n      description: The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.\n  overload: System.Xml.XmlTextWriter.WriteStartElement*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The writer is closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteState\n  commentId: P:System.Xml.XmlTextWriter.WriteState\n  id: WriteState\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteState\n  nameWithType: XmlTextWriter.WriteState\n  fullName: XmlTextWriter.WriteState\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets the state of the writer.\n  remarks: >-\n    > [!NOTE]\n\n    >  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.\n  syntax:\n    content: public override System.Xml.WriteState WriteState { get; }\n    return:\n      type: System.Xml.WriteState\n      description: One of the <xref href=\"System.Xml.WriteState\"></xref> values.\n  overload: System.Xml.XmlTextWriter.WriteState*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteString(System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteString(System.String)\n  id: WriteString(System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteString(String)\n  nameWithType: XmlTextWriter.WriteString(String)\n  fullName: XmlTextWriter.WriteString(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes the given text content.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n `WriteString` does the following  \\n  \\n-   The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.  \\n  \\n-   Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).  \\n  \\n-   If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.  \\n  \\n For example, this input string `test<item>test` is written as  \\n  \\n```  \\ntest&lt;item&gt;test  \\n```  \\n  \\n If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.\"\n  example:\n  - \"The following example writes an XML fragment.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteString (string text);\n    parameters:\n    - id: text\n      type: System.String\n      description: Text to write.\n  overload: System.Xml.XmlTextWriter.WriteString*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The text string contains an invalid surrogate pair.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)\n  commentId: M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)\n  id: WriteSurrogateCharEntity(System.Char,System.Char)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteSurrogateCharEntity(Char, Char)\n  nameWithType: XmlTextWriter.WriteSurrogateCharEntity(Char, Char)\n  fullName: XmlTextWriter.WriteSurrogateCharEntity(Char, Char)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Generates and writes the surrogate character entity for the surrogate character pair.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This method is only applicable on systems that use UTF-16 encoding.  \\n  \\n The surrogate character entity is written in hexadecimal format. The range for surrogate characters is `#x10000` to `#x10FFFF`. The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) * `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.  \\n  \\n For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646]. A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate). These 16-bit units are referred to as a surrogate pair.  \\n  \\n For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.\"\n  syntax:\n    content: public override void WriteSurrogateCharEntity (char lowChar, char highChar);\n    parameters:\n    - id: lowChar\n      type: System.Char\n      description: The low surrogate. This must be a value between `0xDC00` and `0xDFFF`.\n    - id: highChar\n      type: System.Char\n      description: The high surrogate. This must be a value between `0xD800` and `0xDBFF`.\n  overload: System.Xml.XmlTextWriter.WriteSurrogateCharEntity*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: An invalid surrogate character pair was passed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.WriteWhitespace(System.String)\n  commentId: M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)\n  id: WriteWhitespace(System.String)\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: WriteWhitespace(String)\n  nameWithType: XmlTextWriter.WriteWhitespace(String)\n  fullName: XmlTextWriter.WriteWhitespace(String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Writes out the given white space.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This method is used to manually format your document. Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.\"\n  example:\n  - \"The following example uses the `WriteWhitespace` method to control how the file is formatted.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override void WriteWhitespace (string ws);\n    parameters:\n    - id: ws\n      type: System.String\n      description: The string of white space characters.\n  overload: System.Xml.XmlTextWriter.WriteWhitespace*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The string contains non-white space characters.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.XmlLang\n  commentId: P:System.Xml.XmlTextWriter.XmlLang\n  id: XmlLang\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: XmlLang\n  nameWithType: XmlTextWriter.XmlLang\n  fullName: XmlTextWriter.XmlLang\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets the current `xml:lang` scope.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This property allows one component to find out what state another component has left the writer in. For example, perhaps one component wants to tell another which language help text to generate. The language information is communicated by writing an `xml:lang` attribute.\"\n  syntax:\n    content: public override string XmlLang { get; }\n    return:\n      type: System.String\n      description: The current `xml:lang` or `null` if there is no `xml:lang` in the current scope.\n  overload: System.Xml.XmlTextWriter.XmlLang*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlTextWriter.XmlSpace\n  commentId: P:System.Xml.XmlTextWriter.XmlSpace\n  id: XmlSpace\n  parent: System.Xml.XmlTextWriter\n  langs:\n  - csharp\n  name: XmlSpace\n  nameWithType: XmlTextWriter.XmlSpace\n  fullName: XmlTextWriter.XmlSpace\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Gets an <xref href=\"System.Xml.XmlSpace\"></xref> representing the current `xml:space` scope.\n  remarks: \"> [!NOTE]\\n>  Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.  \\n  \\n This property allows one component to find out in what state another component has left the writer.\"\n  example:\n  - \"The following example uses the `WriteWhitespace` method to control how the file is formatted.  \\n  \\n [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override System.Xml.XmlSpace XmlSpace { get; }\n    return:\n      type: System.Xml.XmlSpace\n      description: \"An `XmlSpace` representing the current `xml:space` scope.  \\n  \\n <table><thead><tr><th> Value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> None  \\n  \\n </td><td> This is the default if no `xml:space` scope exists.  \\n  \\n </td></tr><tr><td> Default  \\n  \\n </td><td> The current scope is `xml:space`=\\\"default\\\".  \\n  \\n </td></tr><tr><td> Preserve  \\n  \\n </td><td> The current scope is `xml:space`=\\\"preserve\\\".  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Xml.XmlTextWriter.XmlSpace*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Xml.XmlWriter\n  parent: System.Xml\n  isExternal: false\n  name: XmlWriter\n  nameWithType: XmlWriter\n  fullName: System.Xml.XmlWriter\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.IO.DirectoryNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: DirectoryNotFoundException\n  nameWithType: DirectoryNotFoundException\n  fullName: System.IO.DirectoryNotFoundException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: XmlTextWriter(TextWriter)\n  nameWithType: XmlTextWriter.XmlTextWriter(TextWriter)\n  fullName: XmlTextWriter.XmlTextWriter(TextWriter)\n- uid: System.IO.TextWriter\n  parent: System.IO\n  isExternal: false\n  name: TextWriter\n  nameWithType: TextWriter\n  fullName: System.IO.TextWriter\n- uid: System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: XmlTextWriter(Stream, Encoding)\n  nameWithType: XmlTextWriter.XmlTextWriter(Stream, Encoding)\n  fullName: XmlTextWriter.XmlTextWriter(Stream, Encoding)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: XmlTextWriter(String, Encoding)\n  nameWithType: XmlTextWriter.XmlTextWriter(String, Encoding)\n  fullName: XmlTextWriter.XmlTextWriter(String, Encoding)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.XmlTextWriter.BaseStream\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: BaseStream\n  nameWithType: XmlTextWriter.BaseStream\n  fullName: XmlTextWriter.BaseStream\n- uid: System.Xml.XmlTextWriter.Close\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Close()\n  nameWithType: XmlTextWriter.Close()\n  fullName: XmlTextWriter.Close()\n- uid: System.Xml.XmlTextWriter.Flush\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Flush()\n  nameWithType: XmlTextWriter.Flush()\n  fullName: XmlTextWriter.Flush()\n- uid: System.Xml.XmlTextWriter.Formatting\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Formatting\n  nameWithType: XmlTextWriter.Formatting\n  fullName: XmlTextWriter.Formatting\n- uid: System.Xml.Formatting\n  parent: System.Xml\n  isExternal: false\n  name: Formatting\n  nameWithType: Formatting\n  fullName: System.Xml.Formatting\n- uid: System.Xml.XmlTextWriter.Indentation\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Indentation\n  nameWithType: XmlTextWriter.Indentation\n  fullName: XmlTextWriter.Indentation\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.XmlTextWriter.IndentChar\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: IndentChar\n  nameWithType: XmlTextWriter.IndentChar\n  fullName: XmlTextWriter.IndentChar\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Xml.XmlTextWriter.LookupPrefix(System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: LookupPrefix(String)\n  nameWithType: XmlTextWriter.LookupPrefix(String)\n  fullName: XmlTextWriter.LookupPrefix(String)\n- uid: System.Xml.XmlTextWriter.Namespaces\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Namespaces\n  nameWithType: XmlTextWriter.Namespaces\n  fullName: XmlTextWriter.Namespaces\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlTextWriter.QuoteChar\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: QuoteChar\n  nameWithType: XmlTextWriter.QuoteChar\n  fullName: XmlTextWriter.QuoteChar\n- uid: System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteBase64(Byte[], Int32, Int32)\n  nameWithType: XmlTextWriter.WriteBase64(Byte[], Int32, Int32)\n  fullName: XmlTextWriter.WriteBase64(Byte[], Int32, Int32)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteBinHex(Byte[], Int32, Int32)\n  nameWithType: XmlTextWriter.WriteBinHex(Byte[], Int32, Int32)\n  fullName: XmlTextWriter.WriteBinHex(Byte[], Int32, Int32)\n- uid: System.Xml.XmlTextWriter.WriteCData(System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteCData(String)\n  nameWithType: XmlTextWriter.WriteCData(String)\n  fullName: XmlTextWriter.WriteCData(String)\n- uid: System.Xml.XmlTextWriter.WriteCharEntity(System.Char)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteCharEntity(Char)\n  nameWithType: XmlTextWriter.WriteCharEntity(Char)\n  fullName: XmlTextWriter.WriteCharEntity(Char)\n- uid: System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteChars(Char[], Int32, Int32)\n  nameWithType: XmlTextWriter.WriteChars(Char[], Int32, Int32)\n  fullName: XmlTextWriter.WriteChars(Char[], Int32, Int32)\n- uid: System.Char[]\n  parent: System\n  isExternal: false\n  name: Char[]\n  nameWithType: Char[]\n  fullName: System.Char[]\n  spec.csharp:\n  - uid: System.Char\n    name: Char\n    nameWithType: Char\n    fullName: System.Char\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.XmlTextWriter.WriteComment(System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteComment(String)\n  nameWithType: XmlTextWriter.WriteComment(String)\n  fullName: XmlTextWriter.WriteComment(String)\n- uid: System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteDocType(String, String, String, String)\n  nameWithType: XmlTextWriter.WriteDocType(String, String, String, String)\n  fullName: XmlTextWriter.WriteDocType(String, String, String, String)\n- uid: System.Xml.XmlTextWriter.WriteEndAttribute\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteEndAttribute()\n  nameWithType: XmlTextWriter.WriteEndAttribute()\n  fullName: XmlTextWriter.WriteEndAttribute()\n- uid: System.Xml.XmlTextWriter.WriteEndDocument\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteEndDocument()\n  nameWithType: XmlTextWriter.WriteEndDocument()\n  fullName: XmlTextWriter.WriteEndDocument()\n- uid: System.Xml.XmlTextWriter.WriteEndElement\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteEndElement()\n  nameWithType: XmlTextWriter.WriteEndElement()\n  fullName: XmlTextWriter.WriteEndElement()\n- uid: System.Xml.XmlTextWriter.WriteEntityRef(System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteEntityRef(String)\n  nameWithType: XmlTextWriter.WriteEntityRef(String)\n  fullName: XmlTextWriter.WriteEntityRef(String)\n- uid: System.Xml.XmlTextWriter.WriteFullEndElement\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteFullEndElement()\n  nameWithType: XmlTextWriter.WriteFullEndElement()\n  fullName: XmlTextWriter.WriteFullEndElement()\n- uid: System.Xml.XmlTextWriter.WriteName(System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteName(String)\n  nameWithType: XmlTextWriter.WriteName(String)\n  fullName: XmlTextWriter.WriteName(String)\n- uid: System.Xml.XmlTextWriter.WriteNmToken(System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteNmToken(String)\n  nameWithType: XmlTextWriter.WriteNmToken(String)\n  fullName: XmlTextWriter.WriteNmToken(String)\n- uid: System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteProcessingInstruction(String, String)\n  nameWithType: XmlTextWriter.WriteProcessingInstruction(String, String)\n  fullName: XmlTextWriter.WriteProcessingInstruction(String, String)\n- uid: System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteQualifiedName(String, String)\n  nameWithType: XmlTextWriter.WriteQualifiedName(String, String)\n  fullName: XmlTextWriter.WriteQualifiedName(String, String)\n- uid: System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteRaw(Char[], Int32, Int32)\n  nameWithType: XmlTextWriter.WriteRaw(Char[], Int32, Int32)\n  fullName: XmlTextWriter.WriteRaw(Char[], Int32, Int32)\n- uid: System.Xml.XmlTextWriter.WriteRaw(System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteRaw(String)\n  nameWithType: XmlTextWriter.WriteRaw(String)\n  fullName: XmlTextWriter.WriteRaw(String)\n- uid: System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteStartAttribute(String, String, String)\n  nameWithType: XmlTextWriter.WriteStartAttribute(String, String, String)\n  fullName: XmlTextWriter.WriteStartAttribute(String, String, String)\n- uid: System.Xml.XmlTextWriter.WriteStartDocument\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteStartDocument()\n  nameWithType: XmlTextWriter.WriteStartDocument()\n  fullName: XmlTextWriter.WriteStartDocument()\n- uid: System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteStartDocument(Boolean)\n  nameWithType: XmlTextWriter.WriteStartDocument(Boolean)\n  fullName: XmlTextWriter.WriteStartDocument(Boolean)\n- uid: System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteStartElement(String, String, String)\n  nameWithType: XmlTextWriter.WriteStartElement(String, String, String)\n  fullName: XmlTextWriter.WriteStartElement(String, String, String)\n- uid: System.Xml.XmlTextWriter.WriteState\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteState\n  nameWithType: XmlTextWriter.WriteState\n  fullName: XmlTextWriter.WriteState\n- uid: System.Xml.WriteState\n  parent: System.Xml\n  isExternal: false\n  name: WriteState\n  nameWithType: WriteState\n  fullName: System.Xml.WriteState\n- uid: System.Xml.XmlTextWriter.WriteString(System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteString(String)\n  nameWithType: XmlTextWriter.WriteString(String)\n  fullName: XmlTextWriter.WriteString(String)\n- uid: System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteSurrogateCharEntity(Char, Char)\n  nameWithType: XmlTextWriter.WriteSurrogateCharEntity(Char, Char)\n  fullName: XmlTextWriter.WriteSurrogateCharEntity(Char, Char)\n- uid: System.Xml.XmlTextWriter.WriteWhitespace(System.String)\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteWhitespace(String)\n  nameWithType: XmlTextWriter.WriteWhitespace(String)\n  fullName: XmlTextWriter.WriteWhitespace(String)\n- uid: System.Xml.XmlTextWriter.XmlLang\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: XmlLang\n  nameWithType: XmlTextWriter.XmlLang\n  fullName: XmlTextWriter.XmlLang\n- uid: System.Xml.XmlTextWriter.XmlSpace\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: XmlSpace\n  nameWithType: XmlTextWriter.XmlSpace\n  fullName: XmlTextWriter.XmlSpace\n- uid: System.Xml.XmlSpace\n  parent: System.Xml\n  isExternal: false\n  name: XmlSpace\n  nameWithType: XmlSpace\n  fullName: System.Xml.XmlSpace\n- uid: System.Xml.XmlTextWriter.#ctor*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: XmlTextWriter\n  nameWithType: XmlTextWriter.XmlTextWriter\n  fullName: XmlTextWriter.XmlTextWriter\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteRaw*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteRaw\n  nameWithType: XmlTextWriter.WriteRaw\n  fullName: XmlTextWriter.WriteRaw\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteStartDocument*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteStartDocument\n  nameWithType: XmlTextWriter.WriteStartDocument\n  fullName: XmlTextWriter.WriteStartDocument\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.BaseStream*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: BaseStream\n  nameWithType: XmlTextWriter.BaseStream\n  fullName: XmlTextWriter.BaseStream\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.Close*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Close\n  nameWithType: XmlTextWriter.Close\n  fullName: XmlTextWriter.Close\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.Flush*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Flush\n  nameWithType: XmlTextWriter.Flush\n  fullName: XmlTextWriter.Flush\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.Formatting*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Formatting\n  nameWithType: XmlTextWriter.Formatting\n  fullName: XmlTextWriter.Formatting\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.Indentation*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Indentation\n  nameWithType: XmlTextWriter.Indentation\n  fullName: XmlTextWriter.Indentation\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.IndentChar*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: IndentChar\n  nameWithType: XmlTextWriter.IndentChar\n  fullName: XmlTextWriter.IndentChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.LookupPrefix*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: LookupPrefix\n  nameWithType: XmlTextWriter.LookupPrefix\n  fullName: XmlTextWriter.LookupPrefix\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.Namespaces*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: Namespaces\n  nameWithType: XmlTextWriter.Namespaces\n  fullName: XmlTextWriter.Namespaces\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.QuoteChar*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: QuoteChar\n  nameWithType: XmlTextWriter.QuoteChar\n  fullName: XmlTextWriter.QuoteChar\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteBase64*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteBase64\n  nameWithType: XmlTextWriter.WriteBase64\n  fullName: XmlTextWriter.WriteBase64\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteBinHex*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteBinHex\n  nameWithType: XmlTextWriter.WriteBinHex\n  fullName: XmlTextWriter.WriteBinHex\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteCData*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteCData\n  nameWithType: XmlTextWriter.WriteCData\n  fullName: XmlTextWriter.WriteCData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteCharEntity*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteCharEntity\n  nameWithType: XmlTextWriter.WriteCharEntity\n  fullName: XmlTextWriter.WriteCharEntity\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteChars*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteChars\n  nameWithType: XmlTextWriter.WriteChars\n  fullName: XmlTextWriter.WriteChars\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteComment*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteComment\n  nameWithType: XmlTextWriter.WriteComment\n  fullName: XmlTextWriter.WriteComment\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteDocType*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteDocType\n  nameWithType: XmlTextWriter.WriteDocType\n  fullName: XmlTextWriter.WriteDocType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteEndAttribute*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteEndAttribute\n  nameWithType: XmlTextWriter.WriteEndAttribute\n  fullName: XmlTextWriter.WriteEndAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteEndDocument*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteEndDocument\n  nameWithType: XmlTextWriter.WriteEndDocument\n  fullName: XmlTextWriter.WriteEndDocument\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteEndElement*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteEndElement\n  nameWithType: XmlTextWriter.WriteEndElement\n  fullName: XmlTextWriter.WriteEndElement\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteEntityRef*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteEntityRef\n  nameWithType: XmlTextWriter.WriteEntityRef\n  fullName: XmlTextWriter.WriteEntityRef\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteFullEndElement*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteFullEndElement\n  nameWithType: XmlTextWriter.WriteFullEndElement\n  fullName: XmlTextWriter.WriteFullEndElement\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteName*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteName\n  nameWithType: XmlTextWriter.WriteName\n  fullName: XmlTextWriter.WriteName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteNmToken*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteNmToken\n  nameWithType: XmlTextWriter.WriteNmToken\n  fullName: XmlTextWriter.WriteNmToken\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteProcessingInstruction*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteProcessingInstruction\n  nameWithType: XmlTextWriter.WriteProcessingInstruction\n  fullName: XmlTextWriter.WriteProcessingInstruction\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteQualifiedName*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteQualifiedName\n  nameWithType: XmlTextWriter.WriteQualifiedName\n  fullName: XmlTextWriter.WriteQualifiedName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteStartAttribute*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteStartAttribute\n  nameWithType: XmlTextWriter.WriteStartAttribute\n  fullName: XmlTextWriter.WriteStartAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteStartElement*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteStartElement\n  nameWithType: XmlTextWriter.WriteStartElement\n  fullName: XmlTextWriter.WriteStartElement\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteState*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteState\n  nameWithType: XmlTextWriter.WriteState\n  fullName: XmlTextWriter.WriteState\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteString*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteString\n  nameWithType: XmlTextWriter.WriteString\n  fullName: XmlTextWriter.WriteString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteSurrogateCharEntity*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteSurrogateCharEntity\n  nameWithType: XmlTextWriter.WriteSurrogateCharEntity\n  fullName: XmlTextWriter.WriteSurrogateCharEntity\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.WriteWhitespace*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: WriteWhitespace\n  nameWithType: XmlTextWriter.WriteWhitespace\n  fullName: XmlTextWriter.WriteWhitespace\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.XmlLang*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: XmlLang\n  nameWithType: XmlTextWriter.XmlLang\n  fullName: XmlTextWriter.XmlLang\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Xml.XmlTextWriter.XmlSpace*\n  parent: System.Xml.XmlTextWriter\n  isExternal: false\n  name: XmlSpace\n  nameWithType: XmlTextWriter.XmlSpace\n  fullName: XmlTextWriter.XmlSpace\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlTextWriter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(StringBuilder, XmlWriterSettings)\n  nameWithType: XmlWriter.Create(StringBuilder, XmlWriterSettings)\n  fullName: XmlWriter.Create(StringBuilder, XmlWriterSettings)\n- uid: System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(String, XmlWriterSettings)\n  nameWithType: XmlWriter.Create(String, XmlWriterSettings)\n  fullName: XmlWriter.Create(String, XmlWriterSettings)\n- uid: System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(TextWriter, XmlWriterSettings)\n  nameWithType: XmlWriter.Create(TextWriter, XmlWriterSettings)\n  fullName: XmlWriter.Create(TextWriter, XmlWriterSettings)\n- uid: System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(Stream, XmlWriterSettings)\n  nameWithType: XmlWriter.Create(Stream, XmlWriterSettings)\n  fullName: XmlWriter.Create(Stream, XmlWriterSettings)\n- uid: System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(XmlWriter, XmlWriterSettings)\n  nameWithType: XmlWriter.Create(XmlWriter, XmlWriterSettings)\n  fullName: XmlWriter.Create(XmlWriter, XmlWriterSettings)\n- uid: System.Xml.XmlWriter.Create(System.Text.StringBuilder)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(StringBuilder)\n  nameWithType: XmlWriter.Create(StringBuilder)\n  fullName: XmlWriter.Create(StringBuilder)\n- uid: System.Xml.XmlWriter.Create(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(String)\n  nameWithType: XmlWriter.Create(String)\n  fullName: XmlWriter.Create(String)\n- uid: System.Xml.XmlWriter.Create(System.IO.TextWriter)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(TextWriter)\n  nameWithType: XmlWriter.Create(TextWriter)\n  fullName: XmlWriter.Create(TextWriter)\n- uid: System.Xml.XmlWriter.Create(System.IO.Stream)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(Stream)\n  nameWithType: XmlWriter.Create(Stream)\n  fullName: XmlWriter.Create(Stream)\n- uid: System.Xml.XmlWriter.Create(System.Xml.XmlWriter)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Create(XmlWriter)\n  nameWithType: XmlWriter.Create(XmlWriter)\n  fullName: XmlWriter.Create(XmlWriter)\n- uid: System.Xml.XmlWriter.Dispose\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Dispose()\n  nameWithType: XmlWriter.Dispose()\n  fullName: XmlWriter.Dispose()\n- uid: System.Xml.XmlWriter.Dispose(System.Boolean)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: XmlWriter.Dispose(Boolean)\n  fullName: XmlWriter.Dispose(Boolean)\n- uid: System.Xml.XmlWriter.FlushAsync\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: XmlWriter.FlushAsync()\n  fullName: XmlWriter.FlushAsync()\n- uid: System.Xml.XmlWriter.Settings\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: Settings\n  nameWithType: XmlWriter.Settings\n  fullName: XmlWriter.Settings\n- uid: System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteAttributes(XmlReader, Boolean)\n  nameWithType: XmlWriter.WriteAttributes(XmlReader, Boolean)\n  fullName: XmlWriter.WriteAttributes(XmlReader, Boolean)\n- uid: System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteAttributesAsync(XmlReader, Boolean)\n  nameWithType: XmlWriter.WriteAttributesAsync(XmlReader, Boolean)\n  fullName: XmlWriter.WriteAttributesAsync(XmlReader, Boolean)\n- uid: System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteAttributeString(String, String)\n  nameWithType: XmlWriter.WriteAttributeString(String, String)\n  fullName: XmlWriter.WriteAttributeString(String, String)\n- uid: System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteAttributeString(String, String, String)\n  nameWithType: XmlWriter.WriteAttributeString(String, String, String)\n  fullName: XmlWriter.WriteAttributeString(String, String, String)\n- uid: System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteAttributeString(String, String, String, String)\n  nameWithType: XmlWriter.WriteAttributeString(String, String, String, String)\n  fullName: XmlWriter.WriteAttributeString(String, String, String, String)\n- uid: System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteAttributeStringAsync(String, String, String, String)\n  nameWithType: XmlWriter.WriteAttributeStringAsync(String, String, String, String)\n  fullName: XmlWriter.WriteAttributeStringAsync(String, String, String, String)\n- uid: System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteBase64Async(Byte[], Int32, Int32)\n  nameWithType: XmlWriter.WriteBase64Async(Byte[], Int32, Int32)\n  fullName: XmlWriter.WriteBase64Async(Byte[], Int32, Int32)\n- uid: System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteBinHexAsync(Byte[], Int32, Int32)\n  nameWithType: XmlWriter.WriteBinHexAsync(Byte[], Int32, Int32)\n  fullName: XmlWriter.WriteBinHexAsync(Byte[], Int32, Int32)\n- uid: System.Xml.XmlWriter.WriteCDataAsync(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteCDataAsync(String)\n  nameWithType: XmlWriter.WriteCDataAsync(String)\n  fullName: XmlWriter.WriteCDataAsync(String)\n- uid: System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteCharEntityAsync(Char)\n  nameWithType: XmlWriter.WriteCharEntityAsync(Char)\n  fullName: XmlWriter.WriteCharEntityAsync(Char)\n- uid: System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteCharsAsync(Char[], Int32, Int32)\n  nameWithType: XmlWriter.WriteCharsAsync(Char[], Int32, Int32)\n  fullName: XmlWriter.WriteCharsAsync(Char[], Int32, Int32)\n- uid: System.Xml.XmlWriter.WriteCommentAsync(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteCommentAsync(String)\n  nameWithType: XmlWriter.WriteCommentAsync(String)\n  fullName: XmlWriter.WriteCommentAsync(String)\n- uid: System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteDocTypeAsync(String, String, String, String)\n  nameWithType: XmlWriter.WriteDocTypeAsync(String, String, String, String)\n  fullName: XmlWriter.WriteDocTypeAsync(String, String, String, String)\n- uid: System.Xml.XmlWriter.WriteElementString(System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteElementString(String, String)\n  nameWithType: XmlWriter.WriteElementString(String, String)\n  fullName: XmlWriter.WriteElementString(String, String)\n- uid: System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteElementString(String, String, String)\n  nameWithType: XmlWriter.WriteElementString(String, String, String)\n  fullName: XmlWriter.WriteElementString(String, String, String)\n- uid: System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteElementString(String, String, String, String)\n  nameWithType: XmlWriter.WriteElementString(String, String, String, String)\n  fullName: XmlWriter.WriteElementString(String, String, String, String)\n- uid: System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteElementStringAsync(String, String, String, String)\n  nameWithType: XmlWriter.WriteElementStringAsync(String, String, String, String)\n  fullName: XmlWriter.WriteElementStringAsync(String, String, String, String)\n- uid: System.Xml.XmlWriter.WriteEndAttributeAsync\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteEndAttributeAsync()\n  nameWithType: XmlWriter.WriteEndAttributeAsync()\n  fullName: XmlWriter.WriteEndAttributeAsync()\n- uid: System.Xml.XmlWriter.WriteEndDocumentAsync\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteEndDocumentAsync()\n  nameWithType: XmlWriter.WriteEndDocumentAsync()\n  fullName: XmlWriter.WriteEndDocumentAsync()\n- uid: System.Xml.XmlWriter.WriteEndElementAsync\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteEndElementAsync()\n  nameWithType: XmlWriter.WriteEndElementAsync()\n  fullName: XmlWriter.WriteEndElementAsync()\n- uid: System.Xml.XmlWriter.WriteEntityRefAsync(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteEntityRefAsync(String)\n  nameWithType: XmlWriter.WriteEntityRefAsync(String)\n  fullName: XmlWriter.WriteEntityRefAsync(String)\n- uid: System.Xml.XmlWriter.WriteFullEndElementAsync\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteFullEndElementAsync()\n  nameWithType: XmlWriter.WriteFullEndElementAsync()\n  fullName: XmlWriter.WriteFullEndElementAsync()\n- uid: System.Xml.XmlWriter.WriteNameAsync(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteNameAsync(String)\n  nameWithType: XmlWriter.WriteNameAsync(String)\n  fullName: XmlWriter.WriteNameAsync(String)\n- uid: System.Xml.XmlWriter.WriteNmTokenAsync(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteNmTokenAsync(String)\n  nameWithType: XmlWriter.WriteNmTokenAsync(String)\n  fullName: XmlWriter.WriteNmTokenAsync(String)\n- uid: System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteNode(XmlReader, Boolean)\n  nameWithType: XmlWriter.WriteNode(XmlReader, Boolean)\n  fullName: XmlWriter.WriteNode(XmlReader, Boolean)\n- uid: System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteNode(XPathNavigator, Boolean)\n  nameWithType: XmlWriter.WriteNode(XPathNavigator, Boolean)\n  fullName: XmlWriter.WriteNode(XPathNavigator, Boolean)\n- uid: System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteNodeAsync(XmlReader, Boolean)\n  nameWithType: XmlWriter.WriteNodeAsync(XmlReader, Boolean)\n  fullName: XmlWriter.WriteNodeAsync(XmlReader, Boolean)\n- uid: System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteNodeAsync(XPathNavigator, Boolean)\n  nameWithType: XmlWriter.WriteNodeAsync(XPathNavigator, Boolean)\n  fullName: XmlWriter.WriteNodeAsync(XPathNavigator, Boolean)\n- uid: System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteProcessingInstructionAsync(String, String)\n  nameWithType: XmlWriter.WriteProcessingInstructionAsync(String, String)\n  fullName: XmlWriter.WriteProcessingInstructionAsync(String, String)\n- uid: System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteQualifiedNameAsync(String, String)\n  nameWithType: XmlWriter.WriteQualifiedNameAsync(String, String)\n  fullName: XmlWriter.WriteQualifiedNameAsync(String, String)\n- uid: System.Xml.XmlWriter.WriteRawAsync(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteRawAsync(String)\n  nameWithType: XmlWriter.WriteRawAsync(String)\n  fullName: XmlWriter.WriteRawAsync(String)\n- uid: System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteRawAsync(Char[], Int32, Int32)\n  nameWithType: XmlWriter.WriteRawAsync(Char[], Int32, Int32)\n  fullName: XmlWriter.WriteRawAsync(Char[], Int32, Int32)\n- uid: System.Xml.XmlWriter.WriteStartAttribute(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteStartAttribute(String)\n  nameWithType: XmlWriter.WriteStartAttribute(String)\n  fullName: XmlWriter.WriteStartAttribute(String)\n- uid: System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteStartAttribute(String, String)\n  nameWithType: XmlWriter.WriteStartAttribute(String, String)\n  fullName: XmlWriter.WriteStartAttribute(String, String)\n- uid: System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteStartAttributeAsync(String, String, String)\n  nameWithType: XmlWriter.WriteStartAttributeAsync(String, String, String)\n  fullName: XmlWriter.WriteStartAttributeAsync(String, String, String)\n- uid: System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteStartDocumentAsync(Boolean)\n  nameWithType: XmlWriter.WriteStartDocumentAsync(Boolean)\n  fullName: XmlWriter.WriteStartDocumentAsync(Boolean)\n- uid: System.Xml.XmlWriter.WriteStartDocumentAsync\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteStartDocumentAsync()\n  nameWithType: XmlWriter.WriteStartDocumentAsync()\n  fullName: XmlWriter.WriteStartDocumentAsync()\n- uid: System.Xml.XmlWriter.WriteStartElement(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteStartElement(String)\n  nameWithType: XmlWriter.WriteStartElement(String)\n  fullName: XmlWriter.WriteStartElement(String)\n- uid: System.Xml.XmlWriter.WriteStartElement(System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteStartElement(String, String)\n  nameWithType: XmlWriter.WriteStartElement(String, String)\n  fullName: XmlWriter.WriteStartElement(String, String)\n- uid: System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteStartElementAsync(String, String, String)\n  nameWithType: XmlWriter.WriteStartElementAsync(String, String, String)\n  fullName: XmlWriter.WriteStartElementAsync(String, String, String)\n- uid: System.Xml.XmlWriter.WriteStringAsync(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteStringAsync(String)\n  nameWithType: XmlWriter.WriteStringAsync(String)\n  fullName: XmlWriter.WriteStringAsync(String)\n- uid: System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteSurrogateCharEntityAsync(Char, Char)\n  nameWithType: XmlWriter.WriteSurrogateCharEntityAsync(Char, Char)\n  fullName: XmlWriter.WriteSurrogateCharEntityAsync(Char, Char)\n- uid: System.Xml.XmlWriter.WriteValue(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(String)\n  nameWithType: XmlWriter.WriteValue(String)\n  fullName: XmlWriter.WriteValue(String)\n- uid: System.Xml.XmlWriter.WriteValue(System.Single)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(Single)\n  nameWithType: XmlWriter.WriteValue(Single)\n  fullName: XmlWriter.WriteValue(Single)\n- uid: System.Xml.XmlWriter.WriteValue(System.Object)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(Object)\n  nameWithType: XmlWriter.WriteValue(Object)\n  fullName: XmlWriter.WriteValue(Object)\n- uid: System.Xml.XmlWriter.WriteValue(System.Int64)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(Int64)\n  nameWithType: XmlWriter.WriteValue(Int64)\n  fullName: XmlWriter.WriteValue(Int64)\n- uid: System.Xml.XmlWriter.WriteValue(System.Int32)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(Int32)\n  nameWithType: XmlWriter.WriteValue(Int32)\n  fullName: XmlWriter.WriteValue(Int32)\n- uid: System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(DateTimeOffset)\n  nameWithType: XmlWriter.WriteValue(DateTimeOffset)\n  fullName: XmlWriter.WriteValue(DateTimeOffset)\n- uid: System.Xml.XmlWriter.WriteValue(System.Decimal)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(Decimal)\n  nameWithType: XmlWriter.WriteValue(Decimal)\n  fullName: XmlWriter.WriteValue(Decimal)\n- uid: System.Xml.XmlWriter.WriteValue(System.DateTime)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(DateTime)\n  nameWithType: XmlWriter.WriteValue(DateTime)\n  fullName: XmlWriter.WriteValue(DateTime)\n- uid: System.Xml.XmlWriter.WriteValue(System.Boolean)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(Boolean)\n  nameWithType: XmlWriter.WriteValue(Boolean)\n  fullName: XmlWriter.WriteValue(Boolean)\n- uid: System.Xml.XmlWriter.WriteValue(System.Double)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteValue(Double)\n  nameWithType: XmlWriter.WriteValue(Double)\n  fullName: XmlWriter.WriteValue(Double)\n- uid: System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)\n  parent: System.Xml.XmlWriter\n  isExternal: false\n  name: WriteWhitespaceAsync(String)\n  nameWithType: XmlWriter.WriteWhitespaceAsync(String)\n  fullName: XmlWriter.WriteWhitespaceAsync(String)\n"}