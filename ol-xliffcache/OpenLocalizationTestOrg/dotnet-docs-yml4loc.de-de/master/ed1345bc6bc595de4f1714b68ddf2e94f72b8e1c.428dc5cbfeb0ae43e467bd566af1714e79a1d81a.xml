{"nodes":[{"content":"Controls access to stores containing X.509 certificates. This class cannot be inherited.","nodes":[{"pos":[0,88],"content":"Controls access to stores containing X.509 certificates. This class cannot be inherited.","nodes":[{"content":"Controls access to stores containing X.509 certificates. This class cannot be inherited.","pos":[0,88],"nodes":[{"content":"Controls access to stores containing X.509 certificates.","pos":[0,56]},{"content":"This class cannot be inherited.","pos":[57,88]}]}]}],"pos":[1209,1298],"yaml":true},{"content":"<xref:System.Security.Permissions.StorePermission> controls the access that code is granted to X.509 stores. The permission is based on flags representing the access levels that apply to every store.","nodes":[{"pos":[0,199],"content":"<xref:System.Security.Permissions.StorePermission> controls the access that code is granted to X.509 stores. The permission is based on flags representing the access levels that apply to every store.","nodes":[{"content":"<xref:System.Security.Permissions.StorePermission> controls the access that code is granted to X.509 stores. The permission is based on flags representing the access levels that apply to every store.","pos":[0,199],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Permissions.StorePermission&gt;</ph> controls the access that code is granted to X.509 stores.","pos":[0,108],"source":"<xref:System.Security.Permissions.StorePermission> controls the access that code is granted to X.509 stores."},{"content":"The permission is based on flags representing the access levels that apply to every store.","pos":[109,199]}]}]}],"pos":[1309,1509],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with either fully restricted or unrestricted permission state.","nodes":[{"pos":[0,167],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermission\"&gt;&lt;/xref&gt;</ph> class with either fully restricted or unrestricted permission state.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with either fully restricted or unrestricted permission state."}],"pos":[4208,4376],"yaml":true},{"content":"The permission object provides either fully restricted (`None`) or `Unrestricted` access to X.509 stores. If fully restricted (`None`), the <xref:System.Security.Permissions.StorePermission.Flags%2A> property can then be set to specify the type of access allowed.","nodes":[{"pos":[0,263],"content":"The permission object provides either fully restricted (`None`) or `Unrestricted` access to X.509 stores. If fully restricted (`None`), the <xref:System.Security.Permissions.StorePermission.Flags%2A> property can then be set to specify the type of access allowed.","nodes":[{"content":"The permission object provides either fully restricted (<ph id=\"ph1\">`None`</ph>) or <ph id=\"ph2\">`Unrestricted`</ph> access to X.509 stores.","pos":[0,105],"source":"The permission object provides either fully restricted (`None`) or `Unrestricted` access to X.509 stores."},{"content":"If fully restricted (<ph id=\"ph1\">`None`</ph>), the <ph id=\"ph2\">&lt;xref:System.Security.Permissions.StorePermission.Flags%2A&gt;</ph> property can then be set to specify the type of access allowed.","pos":[106,263],"source":" If fully restricted (`None`), the <xref:System.Security.Permissions.StorePermission.Flags%2A> property can then be set to specify the type of access allowed."}]}],"pos":[4387,4651],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[4857,4941],"yaml":true},{"content":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value."}],"pos":[5112,5218],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with the specified access.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermission\"&gt;&lt;/xref&gt;</ph> class with the specified access.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with the specified access."}],"pos":[6500,6632],"yaml":true},{"content":"The `flag` parameter specifies the permitted access to X.509 stores. The specified permitted access applies to all stores. It is not possible to specify access to an individual store.","nodes":[{"pos":[0,183],"content":"The `flag` parameter specifies the permitted access to X.509 stores. The specified permitted access applies to all stores. It is not possible to specify access to an individual store.","nodes":[{"content":"The <ph id=\"ph1\">`flag`</ph> parameter specifies the permitted access to X.509 stores.","pos":[0,68],"source":"The `flag` parameter specifies the permitted access to X.509 stores."},{"content":"The specified permitted access applies to all stores.","pos":[69,122]},{"content":"It is not possible to specify access to an individual store.","pos":[123,183]}]}],"pos":[6643,6827],"yaml":true,"extradata":"MT"},{"content":"<code>flags</code> is not a valid combination of <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values.","nodes":[{"pos":[0,126],"content":"<ph id=\"ph1\">&lt;code&gt;flags&lt;/code&gt;</ph> is not a valid combination of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.StorePermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>flags</code> is not a valid combination of <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values."}],"pos":[7216,7343],"yaml":true},{"content":"Creates and returns an identical copy of the current permission.","nodes":[{"pos":[0,64],"content":"Creates and returns an identical copy of the current permission.","nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]}],"pos":[8372,8437],"yaml":true},{"content":"A copy of a permission represents the same access to resources as the original permission.","nodes":[{"pos":[0,90],"content":"A copy of a permission represents the same access to resources as the original permission.","nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]}]}],"pos":[8448,8539],"yaml":true,"extradata":"MT"},{"content":"A copy of the current permission.","nodes":[{"pos":[0,33],"content":"A copy of the current permission.","nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]}],"pos":[8705,8739],"yaml":true},{"content":"Gets or sets the type of <xref href=\"System.Security.Cryptography.X509Certificates.X509Store\"></xref> access allowed by the current permission.","nodes":[{"pos":[0,143],"content":"Gets or sets the type of <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Store\"&gt;&lt;/xref&gt;</ph> access allowed by the current permission.","source":"Gets or sets the type of <xref href=\"System.Security.Cryptography.X509Certificates.X509Store\"></xref> access allowed by the current permission."}],"pos":[9849,9993],"yaml":true},{"content":"The <xref:System.Security.Permissions.StorePermission.Flags%2A> property specifies the permitted access to X.509 stores. X.509 stores are physical stores used to persist and manage X.509 certificates.","nodes":[{"pos":[0,200],"content":"The <xref:System.Security.Permissions.StorePermission.Flags%2A> property specifies the permitted access to X.509 stores. X.509 stores are physical stores used to persist and manage X.509 certificates.","nodes":[{"content":"The <xref:System.Security.Permissions.StorePermission.Flags%2A> property specifies the permitted access to X.509 stores. X.509 stores are physical stores used to persist and manage X.509 certificates.","pos":[0,200],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.StorePermission.Flags%2A&gt;</ph> property specifies the permitted access to X.509 stores.","pos":[0,120],"source":"The <xref:System.Security.Permissions.StorePermission.Flags%2A> property specifies the permitted access to X.509 stores."},{"content":"X.509 stores are physical stores used to persist and manage X.509 certificates.","pos":[121,200]}]}]}],"pos":[10004,10205],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values.","nodes":[{"pos":[0,106],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermissionFlags\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values."}],"pos":[10396,10503],"yaml":true},{"content":"An attempt is made to set this property to an invalid value. See <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> for the valid values.","nodes":[{"pos":[0,156],"content":"An attempt is made to set this property to an invalid value. See <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> for the valid values.","nodes":[{"content":"An attempt is made to set this property to an invalid value.","pos":[0,60]},{"content":"See <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.StorePermissionFlags\"&gt;&lt;/xref&gt;</ph> for the valid values.","pos":[61,156],"source":" See <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> for the valid values."}]}],"pos":[10674,10831],"yaml":true},{"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"pos":[0,70],"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]}],"pos":[12022,12093],"yaml":true},{"content":"The <xref:System.Security.Permissions.StorePermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.StorePermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.StorePermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.StorePermission>, including state information.","nodes":[{"pos":[0,401],"content":"The <xref:System.Security.Permissions.StorePermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.StorePermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.StorePermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.StorePermission>, including state information.","nodes":[{"content":"The <xref:System.Security.Permissions.StorePermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.StorePermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.StorePermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.StorePermission>, including state information.","pos":[0,401],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Permissions.StorePermission.FromXml%2A&gt;</ph> method reconstructs a <ph id=\"ph2\">&lt;xref:System.Security.Permissions.StorePermission&gt;</ph> object from an XML encoding defined by the <ph id=\"ph3\">&lt;xref:System.Security.SecurityElement&gt;</ph> class.","pos":[0,227],"source":"The <xref:System.Security.Permissions.StorePermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.StorePermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class."},{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.StorePermission.ToXml%2A&gt;</ph> method to XML-encode the <ph id=\"ph2\">&lt;xref:System.Security.Permissions.StorePermission&gt;</ph>, including state information.","pos":[228,401],"source":" Use the <xref:System.Security.Permissions.StorePermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.StorePermission>, including state information."}]}]}],"pos":[12104,12506],"yaml":true,"extradata":"MT"},{"content":"<code>e</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;e&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>e</code> is `null`."}],"pos":[12884,12910],"yaml":true},{"content":"<code>e</code> is not a valid permission element.  \n  \n -or-  \n  \n The version number in <code>e</code> is not valid.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;e&lt;/code&gt;</ph> is not a valid permission element.","source":"<code>e</code> is not a valid permission element."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,117],"content":"The version number in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">e</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not valid.","source":"The version number in <code>e</code> is not valid."}],"pos":[13004,13128],"yaml":true},{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,113],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]}],"pos":[14307,14421],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the set of operations that both permissions describe in common. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"pos":[0,210],"content":"The intersection of two permissions is a permission that describes the set of operations that both permissions describe in common. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations that both permissions describe in common. Only a demand that passes both original permissions will pass the intersection.","pos":[0,210],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations that both permissions describe in common.","pos":[0,130]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[131,210]}]}]}],"pos":[14432,14643],"yaml":true,"extradata":"MT"},{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,109],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]}],"pos":[14850,14960],"yaml":true},{"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"pos":[0,165],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <ph id=\"ph1\">`null`</ph> if the intersection is empty.","pos":[106,165],"source":" This new permission is `null` if the intersection is empty."}]}],"pos":[15031,15197],"yaml":true},{"content":"<code>target</code> s not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> s not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"<code>target</code> s not `null` and is not of the same type as the current permission."}],"pos":[15372,15460],"yaml":true},{"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,82],"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]}],"pos":[16645,16728],"yaml":true},{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.","nodes":[{"pos":[0,441],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.","nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.","pos":[0,172]},{"content":"For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:<ph id=\"ph1\">\\\\</ph>.","pos":[173,299],"source":" For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\."},{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.","pos":[300,441],"source":" If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission."}]}],"pos":[16739,17181],"yaml":true,"extradata":"MT"},{"content":"A permission to test for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"pos":[0,117],"content":"A permission to test for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"content":"A permission to test for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,117],"nodes":[{"content":"A permission to test for the subset relationship.","pos":[0,49]},{"content":"This permission must be of the same type as the current permission.","pos":[50,117]}]}]}],"pos":[17366,17484],"yaml":true},{"content":"`true` if the current permission is a subset of the specified permission; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is a subset of the specified permission; otherwise, `false`."}],"pos":[17542,17638],"yaml":true},{"content":"<code>target</code> is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"<code>target</code> is not `null` and is not of the same type as the current permission."}],"pos":[17814,17903],"yaml":true},{"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"pos":[0,74],"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]}],"pos":[18992,19067],"yaml":true},{"content":"An unrestricted permission represents access to all resources protected by the permission.","nodes":[{"pos":[0,90],"content":"An unrestricted permission represents access to all resources protected by the permission.","nodes":[{"content":"An unrestricted permission represents access to all resources protected by the permission.","pos":[0,90]}]}],"pos":[19078,19169],"yaml":true,"extradata":"MT"},{"content":"`true` if the current permission is unrestricted; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is unrestricted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is unrestricted; otherwise, `false`."}],"pos":[19300,19372],"yaml":true},{"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"pos":[0,64],"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]}],"pos":[20496,20561],"yaml":true},{"content":"Use the <xref:System.Security.Permissions.StorePermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.","nodes":[{"pos":[0,156],"content":"Use the <xref:System.Security.Permissions.StorePermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.StorePermission.FromXml%2A&gt;</ph> method to restore the state information from a <ph id=\"ph2\">&lt;xref:System.Security.SecurityElement&gt;</ph>.","pos":[0,156],"source":"Use the <xref:System.Security.Permissions.StorePermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>."}]}],"pos":[20572,20729],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains an XML encoding of the permission, including any state information.","nodes":[{"pos":[0,136],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.SecurityElement\"&gt;&lt;/xref&gt;</ph> that contains an XML encoding of the permission, including any state information.","source":"A <xref href=\"System.Security.SecurityElement\"></xref> that contains an XML encoding of the permission, including any state information."}],"pos":[20904,21041],"yaml":true},{"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"pos":[0,94],"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]}],"pos":[22276,22371],"yaml":true},{"content":"The result of a call to <xref:System.Security.Permissions.StorePermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"pos":[0,264],"content":"The result of a call to <xref:System.Security.Permissions.StorePermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"content":"The result of a call to <xref:System.Security.Permissions.StorePermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","pos":[0,264],"nodes":[{"content":"The result of a call to <ph id=\"ph1\">&lt;xref:System.Security.Permissions.StorePermission.Union%2A&gt;</ph> is a permission that represents all operations represented by both the current permission and the specified permission.","pos":[0,203],"source":"The result of a call to <xref:System.Security.Permissions.StorePermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission."},{"content":"Any demand that passes either permission passes their union.","pos":[204,264]}]}]}],"pos":[22382,22647],"yaml":true,"extradata":"MT"},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[22850,22958],"yaml":true},{"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,98],"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"pos":[23029,23128],"yaml":true},{"content":"<code>target</code> is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,88],"content":"<ph id=\"ph1\">&lt;code&gt;target&lt;/code&gt;</ph> is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"<code>target</code> is not `null` and is not of the same type as the current permission."}],"pos":[23299,23388],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.StorePermission\n  commentId: T:System.Security.Permissions.StorePermission\n  id: StorePermission\n  children:\n  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)\n  - System.Security.Permissions.StorePermission.Copy\n  - System.Security.Permissions.StorePermission.Flags\n  - System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.StorePermission.IsUnrestricted\n  - System.Security.Permissions.StorePermission.ToXml\n  - System.Security.Permissions.StorePermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: StorePermission\n  nameWithType: StorePermission\n  fullName: System.Security.Permissions.StorePermission\n  type: Class\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Controls access to stores containing X.509 certificates. This class cannot be inherited.\n  remarks: <xref:System.Security.Permissions.StorePermission> controls the access that code is granted to X.509 stores. The permission is based on flags representing the access levels that apply to every store.\n  syntax:\n    content: 'public sealed class StorePermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: StorePermission(PermissionState)\n  nameWithType: StorePermission.StorePermission(PermissionState)\n  fullName: StorePermission.StorePermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with either fully restricted or unrestricted permission state.\n  remarks: The permission object provides either fully restricted (`None`) or `Unrestricted` access to X.509 stores. If fully restricted (`None`), the <xref:System.Security.Permissions.StorePermission.Flags%2A> property can then be set to specify the type of access allowed.\n  syntax:\n    content: public StorePermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.StorePermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>state</code> is not a valid <xref href=\"System.Security.Permissions.PermissionState\"></xref> value.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)\n  commentId: M:System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)\n  id: '#ctor(System.Security.Permissions.StorePermissionFlags)'\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: StorePermission(StorePermissionFlags)\n  nameWithType: StorePermission.StorePermission(StorePermissionFlags)\n  fullName: StorePermission.StorePermission(StorePermissionFlags)\n  type: Constructor\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.StorePermission\"></xref> class with the specified access.\n  remarks: The `flag` parameter specifies the permitted access to X.509 stores. The specified permitted access applies to all stores. It is not possible to specify access to an individual store.\n  syntax:\n    content: public StorePermission (System.Security.Permissions.StorePermissionFlags flags);\n    parameters:\n    - id: flag\n      type: System.Security.Permissions.StorePermissionFlags\n      description: ''\n  overload: System.Security.Permissions.StorePermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>flags</code> is not a valid combination of <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.Copy\n  commentId: M:System.Security.Permissions.StorePermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: StorePermission.Copy()\n  fullName: StorePermission.Copy()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of a permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.StorePermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.Flags\n  commentId: P:System.Security.Permissions.StorePermission.Flags\n  id: Flags\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: StorePermission.Flags\n  fullName: StorePermission.Flags\n  type: Property\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the type of <xref href=\"System.Security.Cryptography.X509Certificates.X509Store\"></xref> access allowed by the current permission.\n  remarks: The <xref:System.Security.Permissions.StorePermission.Flags%2A> property specifies the permitted access to X.509 stores. X.509 stores are physical stores used to persist and manage X.509 certificates.\n  syntax:\n    content: public System.Security.Permissions.StorePermissionFlags Flags { get; set; }\n    return:\n      type: System.Security.Permissions.StorePermissionFlags\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> values.\n  overload: System.Security.Permissions.StorePermission.Flags*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to set this property to an invalid value. See <xref href=\"System.Security.Permissions.StorePermissionFlags\"></xref> for the valid values.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: StorePermission.FromXml(SecurityElement)\n  fullName: StorePermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  remarks: The <xref:System.Security.Permissions.StorePermission.FromXml%2A> method reconstructs a <xref:System.Security.Permissions.StorePermission> object from an XML encoding defined by the <xref:System.Security.SecurityElement> class. Use the <xref:System.Security.Permissions.StorePermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.StorePermission>, including state information.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement e);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: ''\n  overload: System.Security.Permissions.StorePermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>e</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>e</code> is not a valid permission element.  \\n  \\n -or-  \\n  \\n The version number in <code>e</code> is not valid.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: StorePermission.Intersect(IPermission)\n  fullName: StorePermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the set of operations that both permissions describe in common. Only a demand that passes both original permissions will pass the intersection.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.\n  overload: System.Security.Permissions.StorePermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> s not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: StorePermission.IsSubsetOf(IPermission)\n  fullName: StorePermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to test for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'\n  overload: System.Security.Permissions.StorePermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.IsUnrestricted\n  commentId: M:System.Security.Permissions.StorePermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: StorePermission.IsUnrestricted()\n  fullName: StorePermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: An unrestricted permission represents access to all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is unrestricted; otherwise, `false`.'\n  overload: System.Security.Permissions.StorePermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.ToXml\n  commentId: M:System.Security.Permissions.StorePermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: StorePermission.ToXml()\n  fullName: StorePermission.ToXml()\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  remarks: Use the <xref:System.Security.Permissions.StorePermission.FromXml%2A> method to restore the state information from a <xref:System.Security.SecurityElement>.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: A <xref href=\"System.Security.SecurityElement\"></xref> that contains an XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.StorePermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.StorePermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: StorePermission.Union(IPermission)\n  fullName: StorePermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: The result of a call to <xref:System.Security.Permissions.StorePermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.StorePermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>target</code> is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: StorePermission(PermissionState)\n  nameWithType: StorePermission.StorePermission(PermissionState)\n  fullName: StorePermission.StorePermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.StorePermission.#ctor(System.Security.Permissions.StorePermissionFlags)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: StorePermission(StorePermissionFlags)\n  nameWithType: StorePermission.StorePermission(StorePermissionFlags)\n  fullName: StorePermission.StorePermission(StorePermissionFlags)\n- uid: System.Security.Permissions.StorePermissionFlags\n  parent: System.Security.Permissions\n  isExternal: false\n  name: StorePermissionFlags\n  nameWithType: StorePermissionFlags\n  fullName: System.Security.Permissions.StorePermissionFlags\n- uid: System.Security.Permissions.StorePermission.Copy\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Copy()\n  nameWithType: StorePermission.Copy()\n  fullName: StorePermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.StorePermission.Flags\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Flags\n  nameWithType: StorePermission.Flags\n  fullName: StorePermission.Flags\n- uid: System.Security.Permissions.StorePermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: StorePermission.FromXml(SecurityElement)\n  fullName: StorePermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.StorePermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: StorePermission.Intersect(IPermission)\n  fullName: StorePermission.Intersect(IPermission)\n- uid: System.Security.Permissions.StorePermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: StorePermission.IsSubsetOf(IPermission)\n  fullName: StorePermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.StorePermission.IsUnrestricted\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: StorePermission.IsUnrestricted()\n  fullName: StorePermission.IsUnrestricted()\n- uid: System.Security.Permissions.StorePermission.ToXml\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: StorePermission.ToXml()\n  fullName: StorePermission.ToXml()\n- uid: System.Security.Permissions.StorePermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: StorePermission.Union(IPermission)\n  fullName: StorePermission.Union(IPermission)\n- uid: System.Security.Permissions.StorePermission.#ctor*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: StorePermission\n  nameWithType: StorePermission.StorePermission\n  fullName: StorePermission.StorePermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n- uid: System.Security.Permissions.StorePermission.Copy*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Copy\n  nameWithType: StorePermission.Copy\n  fullName: StorePermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n- uid: System.Security.Permissions.StorePermission.Flags*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Flags\n  nameWithType: StorePermission.Flags\n  fullName: StorePermission.Flags\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n- uid: System.Security.Permissions.StorePermission.FromXml*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: FromXml\n  nameWithType: StorePermission.FromXml\n  fullName: StorePermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n- uid: System.Security.Permissions.StorePermission.Intersect*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Intersect\n  nameWithType: StorePermission.Intersect\n  fullName: StorePermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n- uid: System.Security.Permissions.StorePermission.IsSubsetOf*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: StorePermission.IsSubsetOf\n  fullName: StorePermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n- uid: System.Security.Permissions.StorePermission.IsUnrestricted*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: StorePermission.IsUnrestricted\n  fullName: StorePermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n- uid: System.Security.Permissions.StorePermission.ToXml*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: ToXml\n  nameWithType: StorePermission.ToXml\n  fullName: StorePermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n- uid: System.Security.Permissions.StorePermission.Union*\n  parent: System.Security.Permissions.StorePermission\n  isExternal: false\n  name: Union\n  nameWithType: StorePermission.Union\n  fullName: StorePermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/StorePermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}