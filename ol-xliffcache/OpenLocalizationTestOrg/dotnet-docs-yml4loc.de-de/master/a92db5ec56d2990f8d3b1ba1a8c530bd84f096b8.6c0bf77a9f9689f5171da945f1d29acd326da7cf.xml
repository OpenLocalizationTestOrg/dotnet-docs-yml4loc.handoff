{"nodes":[{"content":"Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a <xref href=\"System.Windows.PropertyChangedCallback\"></xref> implementation.","nodes":[{"pos":[0,259],"content":"Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a <xref href=\"System.Windows.PropertyChangedCallback\"></xref> implementation.","nodes":[{"content":"Provides data for various property changed events.","pos":[0,50]},{"content":"Typically these events report effective value changes in the value of a read-only dependency property.","pos":[51,153]},{"content":"Another usage is as part of a <ph id=\"ph1\">&lt;xref href=\"System.Windows.PropertyChangedCallback\"&gt;&lt;/xref&gt;</ph> implementation.","pos":[154,259],"source":" Another usage is as part of a <xref href=\"System.Windows.PropertyChangedCallback\"></xref> implementation."}]}],"pos":[1373,1633],"yaml":true},{"content":"The events that use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events). Some class handling methods that \"handle\" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, also use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data.  \n  \n The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property. A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.","nodes":[{"pos":[0,759],"content":"The events that use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events). Some class handling methods that \"handle\" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, also use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data.","nodes":[{"content":"The events that use the <ph id=\"ph1\">&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt;</ph> class for event data, and the <ph id=\"ph2\">&lt;xref:System.Windows.DependencyPropertyChangedEventHandler&gt;</ph> method implementations for handlers, generally follow the naming pattern <ph id=\"ph3\">`Is*Changed`</ph>, and are generally implemented as <ph id=\"ph4\">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> events without <ph id=\"ph5\">&lt;xref:System.Windows.RoutedEvent&gt;</ph> backing (they are not routed events).","pos":[0,435],"source":"The events that use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events)."},{"content":"Some class handling methods that \"handle\" otherwise unexposed events that report a state change through a property change, such as <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName&gt;</ph>, also use the <ph id=\"ph2\">&lt;xref:System.Windows.DependencyPropertyChangedEventArgs&gt;</ph> class for event data.","pos":[436,759],"source":" Some class handling methods that \"handle\" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, also use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data."}]},{"pos":[766,1126],"content":"The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property. A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.","nodes":[{"content":"The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property. A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.","pos":[0,360],"nodes":[{"content":"The scenario for <ph id=\"ph1\">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> is to use the arguments to report old and new values that come from the property system evaluation of the property.","pos":[0,178],"source":"The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property."},{"content":"A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.","pos":[179,360]}]}]}],"pos":[1644,2777],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> class."}],"pos":[5396,5508],"yaml":true},{"content":"Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.","nodes":[{"pos":[0,186],"content":"Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.","nodes":[{"content":"Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.","pos":[0,186]}]}],"pos":[5519,5706],"yaml":true,"extradata":"MT"},{"content":"The identifier for the dependency property that changed.","nodes":[{"pos":[0,56],"content":"The identifier for the dependency property that changed.","nodes":[{"content":"The identifier for the dependency property that changed.","pos":[0,56]}]}],"pos":[5951,6008],"yaml":true},{"content":"The value of the property before the change reported by the relevant event or state change.","nodes":[{"pos":[0,91],"content":"The value of the property before the change reported by the relevant event or state change.","nodes":[{"content":"The value of the property before the change reported by the relevant event or state change.","pos":[0,91]}]}],"pos":[6072,6164],"yaml":true},{"content":"The value of the property after the change reported by the relevant event or state change.","nodes":[{"pos":[0,90],"content":"The value of the property after the change reported by the relevant event or state change.","nodes":[{"content":"The value of the property after the change reported by the relevant event or state change.","pos":[0,90]}]}],"pos":[6228,6319],"yaml":true},{"content":"Determines whether the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.","nodes":[{"pos":[0,139],"content":"Determines whether the provided object is equivalent to the current <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>."}],"pos":[7458,7598],"yaml":true},{"content":"This implementation relies on value equivalence of all properties, including internal properties.","nodes":[{"pos":[0,97],"content":"This implementation relies on value equivalence of all properties, including internal properties.","nodes":[{"content":"This implementation relies on value equivalence of all properties, including internal properties.","pos":[0,97]}]}],"pos":[7609,7707],"yaml":true,"extradata":"MT"},{"content":"The object to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.","nodes":[{"pos":[0,108],"content":"The object to compare to the current <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph>.","source":"The object to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>."}],"pos":[7847,7956],"yaml":true},{"content":"`true` if the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">`true`</ph> if the provided object is equivalent to the current <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, `false`."}],"pos":[8014,8167],"yaml":true},{"content":"Determines whether the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.","nodes":[{"pos":[0,203],"content":"Determines whether the provided <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> is equivalent to the current <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>."}],"pos":[9499,9703],"yaml":true},{"content":"This implementation relies on value equivalence of all properties, including internal properties.","nodes":[{"pos":[0,97],"content":"This implementation relies on value equivalence of all properties, including internal properties.","nodes":[{"content":"This implementation relies on value equivalence of all properties, including internal properties.","pos":[0,97]}]}],"pos":[9714,9812],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>","nodes":[{"pos":[0,171],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> to compare to the current <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph>","source":"The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>"}],"pos":[10024,10196],"yaml":true},{"content":"`true` if the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,214],"content":"<ph id=\"ph1\">`true`</ph> if the provided <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> is equivalent to the current <ph id=\"ph3\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, `false`."}],"pos":[10254,10471],"yaml":true},{"content":"Gets a hash code  for this <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.","nodes":[{"pos":[0,98],"content":"Gets a hash code  for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a hash code  for this <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>."}],"pos":[11578,11677],"yaml":true},{"content":"A signed 32-bit integer hash code.","nodes":[{"pos":[0,34],"content":"A signed 32-bit integer hash code.","nodes":[{"content":"A signed 32-bit integer hash code.","pos":[0,34]}]}],"pos":[11811,11846],"yaml":true},{"content":"Gets the value of the property after the change.","nodes":[{"pos":[0,48],"content":"Gets the value of the property after the change.","nodes":[{"content":"Gets the value of the property after the change.","pos":[0,48]}]}],"pos":[12936,12985],"yaml":true},{"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","nodes":[{"pos":[0,111],"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","nodes":[{"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","pos":[0,111]}]}],"pos":[12996,13108],"yaml":true,"extradata":"MT"},{"content":"The property value after the change.","nodes":[{"pos":[0,36],"content":"The property value after the change.","nodes":[{"content":"The property value after the change.","pos":[0,36]}]}],"pos":[14327,14364],"yaml":true},{"content":"Gets the value of the property before the change.","nodes":[{"pos":[0,49],"content":"Gets the value of the property before the change.","nodes":[{"content":"Gets the value of the property before the change.","pos":[0,49]}]}],"pos":[15429,15479],"yaml":true},{"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","nodes":[{"pos":[0,111],"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","nodes":[{"content":"The type of the value provided should always be castable to the type of the dependency property being reported.","pos":[0,111]}]}],"pos":[15490,15602],"yaml":true,"extradata":"MT"},{"content":"The property value before the change.","nodes":[{"pos":[0,37],"content":"The property value before the change.","nodes":[{"content":"The property value before the change.","pos":[0,37]}]}],"pos":[16821,16859],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects have the same value.","nodes":[{"pos":[0,132],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> objects have the same value.","source":"Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects have the same value."}],"pos":[18483,18616],"yaml":true},{"content":"The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.","nodes":[{"pos":[0,109],"content":"The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.","nodes":[{"content":"The implementation uses the same logic as <ph id=\"ph1\">&lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;</ph>.","pos":[0,109],"source":"The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>."}]}],"pos":[18627,18737],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.","nodes":[{"pos":[0,92],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare."}],"pos":[19018,19111],"yaml":true},{"content":"The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.","nodes":[{"pos":[0,93],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare."}],"pos":[19208,19302],"yaml":true},{"content":"`true` if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are equivalent; otherwise, `false`.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> instances are equivalent; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are equivalent; otherwise, `false`."}],"pos":[19360,19497],"yaml":true},{"content":"Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects are different.","nodes":[{"pos":[0,126],"content":"Determines whether two specified <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> objects are different.","source":"Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects are different."}],"pos":[21114,21241],"yaml":true},{"content":"The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.","nodes":[{"pos":[0,128],"content":"The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.","nodes":[{"content":"The implementation returns the negation of the same logic as <ph id=\"ph1\">&lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A&gt;</ph>.","pos":[0,128],"source":"The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>."}]}],"pos":[21252,21381],"yaml":true,"extradata":"MT"},{"content":"The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.","nodes":[{"pos":[0,92],"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare."}],"pos":[21664,21757],"yaml":true},{"content":"The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.","nodes":[{"pos":[0,93],"content":"The second <ph id=\"ph1\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> to compare.","source":"The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare."}],"pos":[21854,21948],"yaml":true},{"content":"`true` if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are different; otherwise, `false`.","nodes":[{"pos":[0,133],"content":"<ph id=\"ph1\">`true`</ph> if the two <ph id=\"ph2\">&lt;xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"&gt;&lt;/xref&gt;</ph> instances are different; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are different; otherwise, `false`."}],"pos":[22006,22142],"yaml":true},{"content":"Gets the identifier for the dependency property where the value change occurred.","nodes":[{"pos":[0,80],"content":"Gets the identifier for the dependency property where the value change occurred.","nodes":[{"content":"Gets the identifier for the dependency property where the value change occurred.","pos":[0,80]}]}],"pos":[23234,23315],"yaml":true},{"content":"This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback. <xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change. The event that was raised is itself the indication of which property changed.","nodes":[{"pos":[0,520],"content":"This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback. <xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change. The event that was raised is itself the indication of which property changed.","nodes":[{"content":"This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback. <xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change. The event that was raised is itself the indication of which property changed.","pos":[0,520],"nodes":[{"content":"This property is relevant if used within a common <ph id=\"ph1\">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback.","pos":[0,218],"source":"This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A&gt;</ph> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change.","pos":[219,442],"source":" <xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change."},{"content":"The event that was raised is itself the indication of which property changed.","pos":[443,520]}]}]}],"pos":[23326,23847],"yaml":true,"extradata":"MT"},{"content":"The identifier field of the dependency property where the value change occurred.","nodes":[{"pos":[0,80],"content":"The identifier field of the dependency property where the value change occurred.","nodes":[{"content":"The identifier field of the dependency property where the value change occurred.","pos":[0,80]}]}],"pos":[24006,24087],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  commentId: T:System.Windows.DependencyPropertyChangedEventArgs\n  id: DependencyPropertyChangedEventArgs\n  children:\n  - System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)\n  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)\n  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyPropertyChangedEventArgs.GetHashCode\n  - System.Windows.DependencyPropertyChangedEventArgs.NewValue\n  - System.Windows.DependencyPropertyChangedEventArgs.OldValue\n  - System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyPropertyChangedEventArgs.Property\n  langs:\n  - csharp\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n  type: Struct\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a <xref href=\"System.Windows.PropertyChangedCallback\"></xref> implementation.\n  remarks: \"The events that use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events). Some class handling methods that \\\"handle\\\" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, also use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data.  \\n  \\n The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property. A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.\"\n  example:\n  - \"The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \\\"ValueChanged\\\" event defined by and raised by the custom class.  \\n  \\n [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]\\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]\"\n  syntax:\n    content: public struct DependencyPropertyChangedEventArgs\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)\n  commentId: M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)\n  id: '#ctor(System.Windows.DependencyProperty,System.Object,System.Object)'\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: DependencyPropertyChangedEventArgs(DependencyProperty, Object, Object)\n  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty, Object, Object)\n  fullName: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty, Object, Object)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> class.\n  remarks: Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.\n  syntax:\n    content: public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);\n    parameters:\n    - id: property\n      type: System.Windows.DependencyProperty\n      description: The identifier for the dependency property that changed.\n    - id: oldValue\n      type: System.Object\n      description: The value of the property before the change reported by the relevant event or state change.\n    - id: newValue\n      type: System.Object\n      description: The value of the property after the change reported by the relevant event or state change.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)\n  commentId: M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)\n  fullName: DependencyPropertyChangedEventArgs.Equals(Object)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.\n  remarks: This implementation relies on value equivalence of all properties, including internal properties.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the provided object is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, `false`.'\n  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)\n  commentId: M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)\n  id: Equals(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: Equals(DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)\n  fullName: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.\n  remarks: This implementation relies on value equivalence of all properties, including internal properties.\n  syntax:\n    content: public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);\n    parameters:\n    - id: args\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>\n    return:\n      type: System.Boolean\n      description: '`true` if the provided <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> is equivalent to the current <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>; otherwise, `false`.'\n  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode\n  commentId: M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()\n  fullName: DependencyPropertyChangedEventArgs.GetHashCode()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets a hash code  for this <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A signed 32-bit integer hash code.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue\n  commentId: P:System.Windows.DependencyPropertyChangedEventArgs.NewValue\n  id: NewValue\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: NewValue\n  nameWithType: DependencyPropertyChangedEventArgs.NewValue\n  fullName: DependencyPropertyChangedEventArgs.NewValue\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the value of the property after the change.\n  remarks: The type of the value provided should always be castable to the type of the dependency property being reported.\n  example:\n  - \"The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \\\"ValueChanged\\\" event defined by and raised by the custom class.  \\n  \\n [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]\\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]\"\n  syntax:\n    content: public object NewValue { get; }\n    return:\n      type: System.Object\n      description: The property value after the change.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.NewValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue\n  commentId: P:System.Windows.DependencyPropertyChangedEventArgs.OldValue\n  id: OldValue\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: OldValue\n  nameWithType: DependencyPropertyChangedEventArgs.OldValue\n  fullName: DependencyPropertyChangedEventArgs.OldValue\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the value of the property before the change.\n  remarks: The type of the value provided should always be castable to the type of the dependency property being reported.\n  example:\n  - \"The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \\\"ValueChanged\\\" event defined by and raised by the custom class.  \\n  \\n [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]\\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]\"\n  syntax:\n    content: public object OldValue { get; }\n    return:\n      type: System.Object\n      description: The property value before the change.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.OldValue*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  commentId: M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  id: op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: op_Equality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  fullName: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects have the same value.\n  remarks: The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.\n  syntax:\n    content: public static bool op_Equality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);\n    parameters:\n    - id: left\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.\n    - id: right\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are equivalent; otherwise, `false`.'\n  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  commentId: M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  id: op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: op_Inequality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  fullName: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  type: Operator\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Determines whether two specified <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> objects are different.\n  remarks: The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.\n  syntax:\n    content: public static bool op_Inequality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);\n    parameters:\n    - id: left\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The first <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.\n    - id: right\n      type: System.Windows.DependencyPropertyChangedEventArgs\n      description: The second <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the two <xref href=\"System.Windows.DependencyPropertyChangedEventArgs\"></xref> instances are different; otherwise, `false`.'\n  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Property\n  commentId: P:System.Windows.DependencyPropertyChangedEventArgs.Property\n  id: Property\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  langs:\n  - csharp\n  name: Property\n  nameWithType: DependencyPropertyChangedEventArgs.Property\n  fullName: DependencyPropertyChangedEventArgs.Property\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Windows\n  summary: Gets the identifier for the dependency property where the value change occurred.\n  remarks: This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback. <xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change. The event that was raised is itself the indication of which property changed.\n  syntax:\n    content: public System.Windows.DependencyProperty Property { get; }\n    return:\n      type: System.Windows.DependencyProperty\n      description: The identifier field of the dependency property where the value change occurred.\n  overload: System.Windows.DependencyPropertyChangedEventArgs.Property*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs(DependencyProperty, Object, Object)\n  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty, Object, Object)\n  fullName: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty, Object, Object)\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)\n  fullName: DependencyPropertyChangedEventArgs.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Equals(DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)\n  fullName: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs\n  parent: System.Windows\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs\n  fullName: System.Windows.DependencyPropertyChangedEventArgs\n- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()\n  fullName: DependencyPropertyChangedEventArgs.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: NewValue\n  nameWithType: DependencyPropertyChangedEventArgs.NewValue\n  fullName: DependencyPropertyChangedEventArgs.NewValue\n- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: OldValue\n  nameWithType: DependencyPropertyChangedEventArgs.OldValue\n  fullName: DependencyPropertyChangedEventArgs.OldValue\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: op_Equality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  fullName: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: op_Inequality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n  fullName: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs, DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Property\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Property\n  nameWithType: DependencyPropertyChangedEventArgs.Property\n  fullName: DependencyPropertyChangedEventArgs.Property\n- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: DependencyPropertyChangedEventArgs\n  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs\n  fullName: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Equals\n  nameWithType: DependencyPropertyChangedEventArgs.Equals\n  fullName: DependencyPropertyChangedEventArgs.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: GetHashCode\n  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode\n  fullName: DependencyPropertyChangedEventArgs.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: NewValue\n  nameWithType: DependencyPropertyChangedEventArgs.NewValue\n  fullName: DependencyPropertyChangedEventArgs.NewValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: OldValue\n  nameWithType: DependencyPropertyChangedEventArgs.OldValue\n  fullName: DependencyPropertyChangedEventArgs.OldValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: op_Equality\n  nameWithType: DependencyPropertyChangedEventArgs.op_Equality\n  fullName: DependencyPropertyChangedEventArgs.op_Equality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: op_Inequality\n  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality\n  fullName: DependencyPropertyChangedEventArgs.op_Inequality\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n- uid: System.Windows.DependencyPropertyChangedEventArgs.Property*\n  parent: System.Windows.DependencyPropertyChangedEventArgs\n  isExternal: false\n  name: Property\n  nameWithType: DependencyPropertyChangedEventArgs.Property\n  fullName: DependencyPropertyChangedEventArgs.Property\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/DependencyPropertyChangedEventArgs.xml\n"}