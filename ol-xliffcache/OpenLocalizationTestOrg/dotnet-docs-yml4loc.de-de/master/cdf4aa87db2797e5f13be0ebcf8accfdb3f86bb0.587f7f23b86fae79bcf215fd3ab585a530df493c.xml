{"nodes":[{"content":"Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client. This class cannot be inherited.","nodes":[{"pos":[0,155],"content":"Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client. This class cannot be inherited.","nodes":[{"content":"Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client. This class cannot be inherited.","pos":[0,155],"nodes":[{"content":"Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client.","pos":[0,123]},{"content":"This class cannot be inherited.","pos":[124,155]}]}]}],"pos":[879,1035],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.WindowsClientElement\"></xref> class.","nodes":[{"pos":[0,116],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.WindowsClientElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.WindowsClientElement\"></xref> class."}],"pos":[5217,5334],"yaml":true},{"content":"Gets or sets the permissible impersonation level.","nodes":[{"pos":[0,49],"content":"Gets or sets the permissible impersonation level.","nodes":[{"content":"Gets or sets the permissible impersonation level.","pos":[0,49]}]}],"pos":[6619,6669],"yaml":true},{"content":"See <xref:System.Security.Principal.TokenImpersonationLevel> for a description of the enumeration.","nodes":[{"pos":[0,98],"content":"See <xref:System.Security.Principal.TokenImpersonationLevel> for a description of the enumeration.","nodes":[{"content":"See <ph id=\"ph1\">&lt;xref:System.Security.Principal.TokenImpersonationLevel&gt;</ph> for a description of the enumeration.","pos":[0,98],"source":"See <xref:System.Security.Principal.TokenImpersonationLevel> for a description of the enumeration."}]}],"pos":[6680,6779],"yaml":true,"extradata":"MT"},{"content":"A valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value that specifies the permissible impersonation level. The default is <xref href=\"System.Security.Principal.TokenImpersonationLevel.Identification\"></xref>.","nodes":[{"pos":[0,238],"content":"A valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value that specifies the permissible impersonation level. The default is <xref href=\"System.Security.Principal.TokenImpersonationLevel.Identification\"></xref>.","nodes":[{"content":"A valid <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.TokenImpersonationLevel\"&gt;&lt;/xref&gt;</ph> value that specifies the permissible impersonation level.","pos":[0,136],"source":"A valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value that specifies the permissible impersonation level."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Security.Principal.TokenImpersonationLevel.Identification\"&gt;&lt;/xref&gt;</ph>.","pos":[137,238],"source":" The default is <xref href=\"System.Security.Principal.TokenImpersonationLevel.Identification\"></xref>."}]}],"pos":[7131,7370],"yaml":true},{"content":"Gets or sets a boolean value that specifies whether NTLM authentication is allowed.","nodes":[{"pos":[0,83],"content":"Gets or sets a boolean value that specifies whether NTLM authentication is allowed.","nodes":[{"content":"Gets or sets a boolean value that specifies whether NTLM authentication is allowed.","pos":[0,83]}]}],"pos":[8581,8665],"yaml":true},{"content":"When this property is set to `true`, Windows security is enabled at the workgroup level. Otherwise, Windows security is only supported at the domain level.","nodes":[{"pos":[0,155],"content":"When this property is set to `true`, Windows security is enabled at the workgroup level. Otherwise, Windows security is only supported at the domain level.","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, Windows security is enabled at the workgroup level.","pos":[0,88],"source":"When this property is set to `true`, Windows security is enabled at the workgroup level."},{"content":"Otherwise, Windows security is only supported at the domain level.","pos":[89,155]}]}],"pos":[8676,8832],"yaml":true,"extradata":"MT"},{"content":"`true` if Windows security is enabled in the workgroup scenario; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,108],"content":"`true` if Windows security is enabled in the workgroup scenario; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if Windows security is enabled in the workgroup scenario; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,84],"source":"`true` if Windows security is enabled in the workgroup scenario; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[85,108],"source":" The default is `false`."}]}],"pos":[9072,9183],"yaml":true},{"content":"Copies the content of the specified configuration element to this configuration element.","nodes":[{"pos":[0,88],"content":"Copies the content of the specified configuration element to this configuration element.","nodes":[{"content":"Copies the content of the specified configuration element to this configuration element.","pos":[0,88]}]}],"pos":[10580,10669],"yaml":true},{"content":"The configuration element to be copied.","nodes":[{"pos":[0,39],"content":"The configuration element to be copied.","nodes":[{"content":"The configuration element to be copied.","pos":[0,39]}]}],"pos":[10889,10929],"yaml":true},{"content":"<code>from</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;from&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>from</code> is `null`."}],"pos":[11118,11147],"yaml":true},{"content":"The configuration file is read-only.","nodes":[{"pos":[0,36],"content":"The configuration file is read-only.","nodes":[{"content":"The configuration file is read-only.","pos":[0,36]}]}],"pos":[11291,11328],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.WindowsClientElement\n  commentId: T:System.ServiceModel.Configuration.WindowsClientElement\n  id: WindowsClientElement\n  children:\n  - System.ServiceModel.Configuration.WindowsClientElement.#ctor\n  - System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel\n  - System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm\n  - System.ServiceModel.Configuration.WindowsClientElement.Copy(System.ServiceModel.Configuration.WindowsClientElement)\n  - System.ServiceModel.Configuration.WindowsClientElement.Properties\n  langs:\n  - csharp\n  name: WindowsClientElement\n  nameWithType: WindowsClientElement\n  fullName: System.ServiceModel.Configuration.WindowsClientElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Represents a configuration element that specifies the settings for a Windows credential to be used to represent the client. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class WindowsClientElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.WindowsClientElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.WindowsClientElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: WindowsClientElement()\n  nameWithType: WindowsClientElement.WindowsClientElement()\n  fullName: WindowsClientElement.WindowsClientElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.WindowsClientElement\"></xref> class.\n  syntax:\n    content: public WindowsClientElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.WindowsClientElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel\n  commentId: P:System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel\n  id: AllowedImpersonationLevel\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: AllowedImpersonationLevel\n  nameWithType: WindowsClientElement.AllowedImpersonationLevel\n  fullName: WindowsClientElement.AllowedImpersonationLevel\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the permissible impersonation level.\n  remarks: See <xref:System.Security.Principal.TokenImpersonationLevel> for a description of the enumeration.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"allowedImpersonationLevel\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }\n    return:\n      type: System.Security.Principal.TokenImpersonationLevel\n      description: A valid <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref> value that specifies the permissible impersonation level. The default is <xref href=\"System.Security.Principal.TokenImpersonationLevel.Identification\"></xref>.\n  overload: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm\n  commentId: P:System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm\n  id: AllowNtlm\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: AllowNtlm\n  nameWithType: WindowsClientElement.AllowNtlm\n  fullName: WindowsClientElement.AllowNtlm\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a boolean value that specifies whether NTLM authentication is allowed.\n  remarks: When this property is set to `true`, Windows security is enabled at the workgroup level. Otherwise, Windows security is only supported at the domain level.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"allowNtlm\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool AllowNtlm { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if Windows security is enabled in the workgroup scenario; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Copy(System.ServiceModel.Configuration.WindowsClientElement)\n  commentId: M:System.ServiceModel.Configuration.WindowsClientElement.Copy(System.ServiceModel.Configuration.WindowsClientElement)\n  id: Copy(System.ServiceModel.Configuration.WindowsClientElement)\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: Copy(WindowsClientElement)\n  nameWithType: WindowsClientElement.Copy(WindowsClientElement)\n  fullName: WindowsClientElement.Copy(WindowsClientElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Copies the content of the specified configuration element to this configuration element.\n  syntax:\n    content: public void Copy (System.ServiceModel.Configuration.WindowsClientElement from);\n    parameters:\n    - id: from\n      type: System.ServiceModel.Configuration.WindowsClientElement\n      description: The configuration element to be copied.\n  overload: System.ServiceModel.Configuration.WindowsClientElement.Copy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>from</code> is `null`.\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The configuration file is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Properties\n  commentId: P:System.ServiceModel.Configuration.WindowsClientElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: WindowsClientElement.Properties\n  fullName: WindowsClientElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.WindowsClientElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ServiceModel.Configuration.WindowsClientElement.#ctor\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: WindowsClientElement()\n  nameWithType: WindowsClientElement.WindowsClientElement()\n  fullName: WindowsClientElement.WindowsClientElement()\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: AllowedImpersonationLevel\n  nameWithType: WindowsClientElement.AllowedImpersonationLevel\n  fullName: WindowsClientElement.AllowedImpersonationLevel\n- uid: System.Security.Principal.TokenImpersonationLevel\n  parent: System.Security.Principal\n  isExternal: false\n  name: TokenImpersonationLevel\n  nameWithType: TokenImpersonationLevel\n  fullName: System.Security.Principal.TokenImpersonationLevel\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: AllowNtlm\n  nameWithType: WindowsClientElement.AllowNtlm\n  fullName: WindowsClientElement.AllowNtlm\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Copy(System.ServiceModel.Configuration.WindowsClientElement)\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: Copy(WindowsClientElement)\n  nameWithType: WindowsClientElement.Copy(WindowsClientElement)\n  fullName: WindowsClientElement.Copy(WindowsClientElement)\n- uid: System.ServiceModel.Configuration.WindowsClientElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: WindowsClientElement\n  nameWithType: WindowsClientElement\n  fullName: System.ServiceModel.Configuration.WindowsClientElement\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Properties\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: Properties\n  nameWithType: WindowsClientElement.Properties\n  fullName: WindowsClientElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.WindowsClientElement.#ctor*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: WindowsClientElement\n  nameWithType: WindowsClientElement.WindowsClientElement\n  fullName: WindowsClientElement.WindowsClientElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowedImpersonationLevel*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: AllowedImpersonationLevel\n  nameWithType: WindowsClientElement.AllowedImpersonationLevel\n  fullName: WindowsClientElement.AllowedImpersonationLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n- uid: System.ServiceModel.Configuration.WindowsClientElement.AllowNtlm*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: AllowNtlm\n  nameWithType: WindowsClientElement.AllowNtlm\n  fullName: WindowsClientElement.AllowNtlm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Copy*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: Copy\n  nameWithType: WindowsClientElement.Copy\n  fullName: WindowsClientElement.Copy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n- uid: System.ServiceModel.Configuration.WindowsClientElement.Properties*\n  parent: System.ServiceModel.Configuration.WindowsClientElement\n  isExternal: false\n  name: Properties\n  nameWithType: WindowsClientElement.Properties\n  fullName: WindowsClientElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/WindowsClientElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}