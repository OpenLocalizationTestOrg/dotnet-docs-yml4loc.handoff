{"nodes":[{"content":"Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server.","nodes":[{"pos":[0,136],"content":"Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server.","nodes":[{"content":"Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server.","pos":[0,136]}]}],"pos":[1664,1801],"yaml":true},{"content":"The <xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink> is used to create WSDL in situations where the URL ends with the string \"?wsdl\".  \n  \n The following table shows the channel configuration properties that can be specified for this channel sink. The first two properties combine to control the WSDL publication of objects published by the application domain. If `false` is specified for the first property, no WSDL is returned, regardless of the second property. (The default is `true`.) Otherwise, the second controls whether the global metadata object URI is permitted to respond. (The default is `false`.)  \n  \n|Property|Description|  \n|--------------|-----------------|  \n|`metadataEnabled`|A Boolean value that specifies whether to honor requests that end in \"?wsdl\" if this sink is in the channel sink chain. The default setting is `true`. If `false`, the sink throws an exception in all cases where metadata is requested for any object in the application domain.<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|  \n|`remoteApplicationMetadataEnabled`|A Boolean value that specifies whether to honor requests for the object URI \"RemoteApplicationMetadata?wsdl\", which returns WSDL that describes all objects that are published by the application domain. If `false`, then any request to \"RemoteApplicationMetadata.rem\" throws an exception. All other \"?wsdl\" requests for particular object URIs are honored. If `true`, the global metadata request is honored. The default setting is `false`.<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|","nodes":[{"pos":[0,147],"content":"The <xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink> is used to create WSDL in situations where the URL ends with the string \"?wsdl\".","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink&gt;</ph> is used to create WSDL in situations where the URL ends with the string \"?wsdl\".","pos":[0,147],"source":"The <xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink> is used to create WSDL in situations where the URL ends with the string \"?wsdl\"."}]},{"pos":[154,624],"content":"The following table shows the channel configuration properties that can be specified for this channel sink. The first two properties combine to control the WSDL publication of objects published by the application domain. If `false` is specified for the first property, no WSDL is returned, regardless of the second property. (The default is `true`.) Otherwise, the second controls whether the global metadata object URI is permitted to respond. (The default is `false`.)","nodes":[{"content":"The following table shows the channel configuration properties that can be specified for this channel sink.","pos":[0,107]},{"content":"The first two properties combine to control the WSDL publication of objects published by the application domain.","pos":[108,220]},{"content":"If <ph id=\"ph1\">`false`</ph> is specified for the first property, no WSDL is returned, regardless of the second property.","pos":[221,324],"source":" If `false` is specified for the first property, no WSDL is returned, regardless of the second property."},{"content":"(The default is <ph id=\"ph1\">`true`</ph>.) Otherwise, the second controls whether the global metadata object URI is permitted to respond.","pos":[325,444],"source":" (The default is `true`.) Otherwise, the second controls whether the global metadata object URI is permitted to respond."},{"content":"(The default is <ph id=\"ph1\">`false`</ph>.)","pos":[445,470],"source":" (The default is `false`.)"}]},{"pos":[631,639],"content":"Property","nodes":[{"content":"Property","pos":[0,8]}]},{"pos":[640,651],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[711,1239],"content":"A Boolean value that specifies whether to honor requests that end in \"?wsdl\" if this sink is in the channel sink chain. The default setting is `true`. If `false`, the sink throws an exception in all cases where metadata is requested for any object in the application domain.<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.","nodes":[{"content":"A Boolean value that specifies whether to honor requests that end in \"?wsdl\" if this sink is in the channel sink chain. The default setting is `true`. If `false`, the sink throws an exception in all cases where metadata is requested for any object in the application domain.","pos":[0,274],"nodes":[{"content":"A Boolean value that specifies whether to honor requests that end in \"?wsdl\" if this sink is in the channel sink chain.","pos":[0,119]},{"content":"The default setting is <ph id=\"ph1\">`true`</ph>.","pos":[120,150],"source":" The default setting is `true`."},{"content":"If <ph id=\"ph1\">`false`</ph>, the sink throws an exception in all cases where metadata is requested for any object in the application domain.","pos":[151,274],"source":" If `false`, the sink throws an exception in all cases where metadata is requested for any object in the application domain."}]},{"content":"This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.","pos":[287,528]}]},{"pos":[1279,1969],"content":"A Boolean value that specifies whether to honor requests for the object URI \"RemoteApplicationMetadata?wsdl\", which returns WSDL that describes all objects that are published by the application domain. If `false`, then any request to \"RemoteApplicationMetadata.rem\" throws an exception. All other \"?wsdl\" requests for particular object URIs are honored. If `true`, the global metadata request is honored. The default setting is `false`.<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.","nodes":[{"content":"A Boolean value that specifies whether to honor requests for the object URI \"RemoteApplicationMetadata?wsdl\", which returns WSDL that describes all objects that are published by the application domain. If `false`, then any request to \"RemoteApplicationMetadata.rem\" throws an exception. All other \"?wsdl\" requests for particular object URIs are honored. If `true`, the global metadata request is honored. The default setting is `false`.","pos":[0,436],"nodes":[{"content":"A Boolean value that specifies whether to honor requests for the object URI \"RemoteApplicationMetadata?wsdl\", which returns WSDL that describes all objects that are published by the application domain.","pos":[0,201]},{"content":"If <ph id=\"ph1\">`false`</ph>, then any request to \"RemoteApplicationMetadata.rem\" throws an exception.","pos":[202,286],"source":" If `false`, then any request to \"RemoteApplicationMetadata.rem\" throws an exception."},{"content":"All other \"?wsdl\" requests for particular object URIs are honored.","pos":[287,353]},{"content":"If <ph id=\"ph1\">`true`</ph>, the global metadata request is honored.","pos":[354,404],"source":" If `true`, the global metadata request is honored."},{"content":"The default setting is <ph id=\"ph1\">`false`</ph>.","pos":[405,436],"source":" The default setting is `false`."}]},{"content":"This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.","pos":[449,690]}]}],"pos":[1812,3802],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.MetadataServices.SdlChannelSink\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.MetadataServices.SdlChannelSink\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Remoting.MetadataServices.SdlChannelSink\"></xref> class."}],"pos":[5727,5845],"yaml":true},{"content":"Indicates the channel that will receive the messages serialized by the new instance of <xref href=\"System.Runtime.Remoting.MetadataServices.SdlChannelSink\"></xref>.","nodes":[{"pos":[0,164],"content":"Indicates the channel that will receive the messages serialized by the new instance of <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.MetadataServices.SdlChannelSink\"&gt;&lt;/xref&gt;</ph>.","source":"Indicates the channel that will receive the messages serialized by the new instance of <xref href=\"System.Runtime.Remoting.MetadataServices.SdlChannelSink\"></xref>."}],"pos":[6130,6295],"yaml":true},{"content":"The next sink in the sink chain.","nodes":[{"pos":[0,32],"content":"The next sink in the sink chain.","nodes":[{"content":"The next sink in the sink chain.","pos":[0,32]}]}],"pos":[6397,6430],"yaml":true},{"content":"Requests processing from the current sink of the response from a method call that was sent asynchronously.","nodes":[{"pos":[0,106],"content":"Requests processing from the current sink of the response from a method call that was sent asynchronously.","nodes":[{"content":"Requests processing from the current sink of the response from a method call that was sent asynchronously.","pos":[0,106]}]}],"pos":[8383,8490],"yaml":true},{"content":"A stack of sinks that lead back to the server transport sink.","nodes":[{"pos":[0,61],"content":"A stack of sinks that lead back to the server transport sink.","nodes":[{"content":"A stack of sinks that lead back to the server transport sink.","pos":[0,61]}]}],"pos":[8903,8965],"yaml":true},{"content":"Information associated with the current sink, generated on the request side, and needed on the response side.","nodes":[{"pos":[0,109],"content":"Information associated with the current sink, generated on the request side, and needed on the response side.","nodes":[{"content":"Information associated with the current sink, generated on the request side, and needed on the response side.","pos":[0,109]}]}],"pos":[9026,9136],"yaml":true},{"content":"The response message.","nodes":[{"pos":[0,21],"content":"The response message.","nodes":[{"content":"The response message.","pos":[0,21]}]}],"pos":[9224,9246],"yaml":true},{"content":"The headers to add to the return message heading to the client.","nodes":[{"pos":[0,63],"content":"The headers to add to the return message heading to the client.","nodes":[{"content":"The headers to add to the return message heading to the client.","pos":[0,63]}]}],"pos":[9346,9410],"yaml":true},{"content":"The stream heading back to the transport sink.","nodes":[{"pos":[0,46],"content":"The stream heading back to the transport sink.","nodes":[{"content":"The stream heading back to the transport sink.","pos":[0,46]}]}],"pos":[9475,9522],"yaml":true},{"content":"Returns the <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized.","nodes":[{"pos":[0,111],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> onto which the provided response message is to be serialized.","source":"Returns the <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized."}],"pos":[11397,11509],"yaml":true},{"content":"The current method is called when a response stream needs to be created.","nodes":[{"pos":[0,72],"content":"The current method is called when a response stream needs to be created.","nodes":[{"content":"The current method is called when a response stream needs to be created.","pos":[0,72]}]}],"pos":[11520,11593],"yaml":true,"extradata":"MT"},{"content":"A stack of sinks that lead back to the server transport sink.","nodes":[{"pos":[0,61],"content":"A stack of sinks that lead back to the server transport sink.","nodes":[{"content":"A stack of sinks that lead back to the server transport sink.","pos":[0,61]}]}],"pos":[11990,12052],"yaml":true},{"content":"Information associated with the current sink, generated on the request side, and needed on the response side.","nodes":[{"pos":[0,109],"content":"Information associated with the current sink, generated on the request side, and needed on the response side.","nodes":[{"content":"Information associated with the current sink, generated on the request side, and needed on the response side.","pos":[0,109]}]}],"pos":[12113,12223],"yaml":true},{"content":"The response message to serialize.","nodes":[{"pos":[0,34],"content":"The response message to serialize.","nodes":[{"content":"The response message to serialize.","pos":[0,34]}]}],"pos":[12311,12346],"yaml":true},{"content":"The headers to put in the response stream to the client.","nodes":[{"pos":[0,56],"content":"The headers to put in the response stream to the client.","nodes":[{"content":"The headers to put in the response stream to the client.","pos":[0,56]}]}],"pos":[12446,12503],"yaml":true},{"content":"The <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> onto which the provided response message is to be serialized.","source":"The <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized."}],"pos":[12563,12667],"yaml":true},{"content":"Gets the next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain.","nodes":[{"pos":[0,105],"content":"Gets the next <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"&gt;&lt;/xref&gt;</ph> in the sink chain.","source":"Gets the next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain."}],"pos":[13797,13903],"yaml":true},{"content":"The next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain.","nodes":[{"pos":[0,100],"content":"The next <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"&gt;&lt;/xref&gt;</ph> in the sink chain.","source":"The next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain."}],"pos":[14105,14206],"yaml":true},{"content":"Requests message processing from the current sink.","nodes":[{"pos":[0,50],"content":"Requests message processing from the current sink.","nodes":[{"content":"Requests message processing from the current sink.","pos":[0,50]}]}],"pos":[16472,16523],"yaml":true},{"content":"The proxy's job is to convert a method call that is invoked on it into a message object. The Message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work. For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.  \n  \n When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter. The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink. This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink. After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.  \n  \n After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink. When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.  \n  \n When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink. The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called.","nodes":[{"pos":[0,731],"content":"The proxy's job is to convert a method call that is invoked on it into a message object. The Message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work. For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.","nodes":[{"content":"The proxy's job is to convert a method call that is invoked on it into a message object. The Message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work. For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.","pos":[0,731],"nodes":[{"content":"The proxy's job is to convert a method call that is invoked on it into a message object.","pos":[0,88]},{"content":"The Message object, which implements the <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;</ph> interface, is passed from the client end to the server end by invoking <ph id=\"ph2\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</ph> on message sink objects.","pos":[89,352],"source":" The Message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects."},{"content":"Message sinks are chained together, which means that every message sink is responsible for calling <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A&gt;</ph> on the next message sink after it has performed its work.","pos":[353,586],"source":" Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work."},{"content":"For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.","pos":[587,731]}]}]},{"pos":[738,1470],"content":"When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter. The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink. This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink. After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.","nodes":[{"content":"When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter. The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink. This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink. After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.","pos":[0,732],"nodes":[{"content":"When the formatter channel sink gets a message that needs to be sent over the channel, it calls <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A&gt;</ph>, passing the message as a parameter.","pos":[0,208],"source":"When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter."},{"content":"The formatter sink then creates the transport header array and calls <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A&gt;</ph> on the formatter sink.","pos":[209,379],"source":" The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink."},{"content":"This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink.","pos":[380,507]},{"content":"After this call returns, the message is serialized, <ph id=\"ph1\">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;</ph> is called on the first chain in the sink chain, and the message is passed to the channel sinks.","pos":[508,732],"source":" After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks."}]}]},{"pos":[1477,1856],"content":"After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink. When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.","nodes":[{"content":"After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink. When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.","pos":[0,379],"nodes":[{"content":"After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink.","pos":[0,190]},{"content":"When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.","pos":[191,379]}]}]},{"pos":[1863,2221],"content":"When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink. The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called.","nodes":[{"content":"When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink. The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called.","pos":[0,358],"nodes":[{"content":"When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink.","pos":[0,200]},{"content":"The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called.","pos":[201,358]}]}]}],"pos":[16534,18764],"yaml":true,"extradata":"MT"},{"content":"A stack of channel sinks that called the current sink.","nodes":[{"pos":[0,54],"content":"A stack of channel sinks that called the current sink.","nodes":[{"content":"A stack of channel sinks that called the current sink.","pos":[0,54]}]}],"pos":[19376,19431],"yaml":true},{"content":"The message that contains the request.","nodes":[{"pos":[0,38],"content":"The message that contains the request.","nodes":[{"content":"The message that contains the request.","pos":[0,38]}]}],"pos":[19526,19565],"yaml":true},{"content":"The headers that are retrieved from the incoming message from the client.","nodes":[{"pos":[0,73],"content":"The headers that are retrieved from the incoming message from the client.","nodes":[{"content":"The headers that are retrieved from the incoming message from the client.","pos":[0,73]}]}],"pos":[19672,19746],"yaml":true},{"content":"The stream that needs to be processed and passed on to the deserialization sink.","nodes":[{"pos":[0,80],"content":"The stream that needs to be processed and passed on to the deserialization sink.","nodes":[{"content":"The stream that needs to be processed and passed on to the deserialization sink.","pos":[0,80]}]}],"pos":[19818,19899],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message. This parameter is passed uninitialized.","nodes":[{"pos":[0,173],"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Messaging.IMessage\"&gt;&lt;/xref&gt;</ph> that holds the response message.","pos":[0,133],"source":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message."},{"content":"This parameter is passed uninitialized.","pos":[134,173]}]}],"pos":[19995,20169],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers to add to return message heading to the client. This parameter is passed uninitialized.","nodes":[{"pos":[0,219],"content":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers to add to return message heading to the client. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"&gt;&lt;/xref&gt;</ph> that holds the headers to add to return message heading to the client.","pos":[0,179],"source":"When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers to add to return message heading to the client."},{"content":"This parameter is passed uninitialized.","pos":[180,219]}]}],"pos":[20277,20497],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.IO.Stream\"></xref> that is heading to the transport sink. This parameter is passed uninitialized.","nodes":[{"pos":[0,153],"content":"When this method returns, contains a <xref href=\"System.IO.Stream\"></xref> that is heading to the transport sink. This parameter is passed uninitialized.","nodes":[{"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that is heading to the transport sink.","pos":[0,113],"source":"When this method returns, contains a <xref href=\"System.IO.Stream\"></xref> that is heading to the transport sink."},{"content":"This parameter is passed uninitialized.","pos":[114,153]}]}],"pos":[20570,20724],"yaml":true},{"content":"A <xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"></xref> status value that provides information about how the message was processed.","nodes":[{"pos":[0,148],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"&gt;&lt;/xref&gt;</ph> status value that provides information about how the message was processed.","source":"A <xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"></xref> status value that provides information about how the message was processed."}],"pos":[20817,20966],"yaml":true},{"content":"Gets a <xref href=\"System.Collections.IDictionary\"></xref> of properties for the current channel sink.","nodes":[{"pos":[0,102],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> of properties for the current channel sink.","source":"Gets a <xref href=\"System.Collections.IDictionary\"></xref> of properties for the current channel sink."}],"pos":[22063,22166],"yaml":true},{"content":"> [!NOTE]\n>  For more information, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).","nodes":[{"pos":[2,177],"content":"[!NOTE]\n For more information, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).","leadings":["","> "],"nodes":[{"content":"For more information, see <bpt id=\"p1\">[</bpt>&amp;#91;<ph id=\"ph1\">\\&lt;</ph>topic://cpconchannelformatterconfigurationproperties&gt;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)</ept>.","pos":[9,173],"source":" For more information, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."}]}],"pos":[22177,22367],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Collections.IDictionary\"></xref> of properties for the current channel sink.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Collections.IDictionary\"&gt;&lt;/xref&gt;</ph> of properties for the current channel sink.","source":"A <xref href=\"System.Collections.IDictionary\"></xref> of properties for the current channel sink."}],"pos":[22522,22620],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  commentId: T:System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  id: SdlChannelSink\n  children:\n  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)\n  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink\n  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  - System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties\n  langs:\n  - csharp\n  name: SdlChannelSink\n  nameWithType: SdlChannelSink\n  fullName: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  type: Class\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.MetadataServices\n  summary: Provides the implementation for a server channel sink that generates Web Services Description Language (WSDL) dynamically on the server.\n  remarks: \"The <xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink> is used to create WSDL in situations where the URL ends with the string \\\"?wsdl\\\".  \\n  \\n The following table shows the channel configuration properties that can be specified for this channel sink. The first two properties combine to control the WSDL publication of objects published by the application domain. If `false` is specified for the first property, no WSDL is returned, regardless of the second property. (The default is `true`.) Otherwise, the second controls whether the global metadata object URI is permitted to respond. (The default is `false`.)  \\n  \\n|Property|Description|  \\n|--------------|-----------------|  \\n|`metadataEnabled`|A Boolean value that specifies whether to honor requests that end in \\\"?wsdl\\\" if this sink is in the channel sink chain. The default setting is `true`. If `false`, the sink throws an exception in all cases where metadata is requested for any object in the application domain.<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|  \\n|`remoteApplicationMetadataEnabled`|A Boolean value that specifies whether to honor requests for the object URI \\\"RemoteApplicationMetadata?wsdl\\\", which returns WSDL that describes all objects that are published by the application domain. If `false`, then any request to \\\"RemoteApplicationMetadata.rem\\\" throws an exception. All other \\\"?wsdl\\\" requests for particular object URIs are honored. If `true`, the global metadata request is honored. The default setting is `false`.<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, Windows Server 2003 family.|\"\n  syntax:\n    content: 'public class SdlChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.Remoting.Channels.IServerChannelSink\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)\n  commentId: M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)\n  id: '#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)'\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  langs:\n  - csharp\n  name: SdlChannelSink(IChannelReceiver, IServerChannelSink)\n  nameWithType: SdlChannelSink.SdlChannelSink(IChannelReceiver, IServerChannelSink)\n  fullName: SdlChannelSink.SdlChannelSink(IChannelReceiver, IServerChannelSink)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.MetadataServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Remoting.MetadataServices.SdlChannelSink\"></xref> class.\n  syntax:\n    content: public SdlChannelSink (System.Runtime.Remoting.Channels.IChannelReceiver receiver, System.Runtime.Remoting.Channels.IServerChannelSink nextSink);\n    parameters:\n    - id: receiver\n      type: System.Runtime.Remoting.Channels.IChannelReceiver\n      description: Indicates the channel that will receive the messages serialized by the new instance of <xref href=\"System.Runtime.Remoting.MetadataServices.SdlChannelSink\"></xref>.\n    - id: nextSink\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The next sink in the sink chain.\n  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  commentId: M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  langs:\n  - csharp\n  name: AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  nameWithType: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  fullName: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.MetadataServices\n  summary: Requests processing from the current sink of the response from a method call that was sent asynchronously.\n  syntax:\n    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);\n    parameters:\n    - id: sinkStack\n      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n      description: A stack of sinks that lead back to the server transport sink.\n    - id: state\n      type: System.Object\n      description: Information associated with the current sink, generated on the request side, and needed on the response side.\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The response message.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers to add to the return message heading to the client.\n    - id: stream\n      type: System.IO.Stream\n      description: The stream heading back to the transport sink.\n  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  commentId: M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  id: GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  langs:\n  - csharp\n  name: GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  nameWithType: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  fullName: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.MetadataServices\n  summary: Returns the <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized.\n  remarks: The current method is called when a response stream needs to be created.\n  syntax:\n    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);\n    parameters:\n    - id: sinkStack\n      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n      description: A stack of sinks that lead back to the server transport sink.\n    - id: state\n      type: System.Object\n      description: Information associated with the current sink, generated on the request side, and needed on the response side.\n    - id: msg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The response message to serialize.\n    - id: headers\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers to put in the response stream to the client.\n    return:\n      type: System.IO.Stream\n      description: The <xref href=\"System.IO.Stream\"></xref> onto which the provided response message is to be serialized.\n  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink\n  commentId: P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink\n  id: NextChannelSink\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  langs:\n  - csharp\n  name: NextChannelSink\n  nameWithType: SdlChannelSink.NextChannelSink\n  fullName: SdlChannelSink.NextChannelSink\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.MetadataServices\n  summary: Gets the next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain.\n  syntax:\n    content: public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }\n    return:\n      type: System.Runtime.Remoting.Channels.IServerChannelSink\n      description: The next <xref href=\"System.Runtime.Remoting.Channels.IServerChannelSink\"></xref> in the sink chain.\n  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  commentId: M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  id: ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  langs:\n  - csharp\n  name: ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  nameWithType: SdlChannelSink.ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  fullName: SdlChannelSink.ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  type: Method\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.MetadataServices\n  summary: Requests message processing from the current sink.\n  remarks: \"The proxy's job is to convert a method call that is invoked on it into a message object. The Message object, which implements the <xref:System.Runtime.Remoting.Messaging.IMessage> interface, is passed from the client end to the server end by invoking <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on message sink objects. Message sinks are chained together, which means that every message sink is responsible for calling <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> on the next message sink after it has performed its work. For instance, a synchronization-related message sink might cause a lock to be acquired or released and delegated to the downstream message sink.  \\n  \\n When the formatter channel sink gets a message that needs to be sent over the channel, it calls <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passing the message as a parameter. The formatter sink then creates the transport header array and calls <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> on the formatter sink. This call is forwarded down the sink chain, and any sink can create a request stream that is passed back to the formatter sink. After this call returns, the message is serialized, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> is called on the first chain in the sink chain, and the message is passed to the channel sinks.  \\n  \\n After the channel sinks get the message, they can write data to the stream, add headers to the header array, and add themselves to the sink stack before forwarding the call to the next sink. When the call reaches the transport sink at the end of the chain, the transport sink sends the headers and serialized message over the channel to the server, where the process is reversed.  \\n  \\n When the message reaches the server side, the transport sink retrieves the headers and serialized message from the stream and forwards these through the sink chain until they reach the formatter sink. The formatter sink then deserializes the message and forwards it to remoting, where the message is turned into a method call and the server object is called.\"\n  syntax:\n    content: public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);\n    parameters:\n    - id: sinkStack\n      type: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n      description: A stack of channel sinks that called the current sink.\n    - id: requestMsg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: The message that contains the request.\n    - id: requestHeaders\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: The headers that are retrieved from the incoming message from the client.\n    - id: requestStream\n      type: System.IO.Stream\n      description: The stream that needs to be processed and passed on to the deserialization sink.\n    - id: responseMsg\n      type: System.Runtime.Remoting.Messaging.IMessage\n      description: When this method returns, contains a <xref href=\"System.Runtime.Remoting.Messaging.IMessage\"></xref> that holds the response message. This parameter is passed uninitialized.\n    - id: responseHeaders\n      type: System.Runtime.Remoting.Channels.ITransportHeaders\n      description: When this method returns, contains a <xref href=\"System.Runtime.Remoting.Channels.ITransportHeaders\"></xref> that holds the headers to add to return message heading to the client. This parameter is passed uninitialized.\n    - id: responseStream\n      type: System.IO.Stream\n      description: When this method returns, contains a <xref href=\"System.IO.Stream\"></xref> that is heading to the transport sink. This parameter is passed uninitialized.\n    return:\n      type: System.Runtime.Remoting.Channels.ServerProcessing\n      description: A <xref href=\"System.Runtime.Remoting.Channels.ServerProcessing\"></xref> status value that provides information about how the message was processed.\n  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties\n  commentId: P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties\n  id: Properties\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: SdlChannelSink.Properties\n  fullName: SdlChannelSink.Properties\n  type: Property\n  assemblies:\n  - System.Runtime.Remoting\n  namespace: System.Runtime.Remoting.MetadataServices\n  summary: Gets a <xref href=\"System.Collections.IDictionary\"></xref> of properties for the current channel sink.\n  remarks: >-\n    > [!NOTE]\n\n    >  For more information, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).\n  syntax:\n    content: public System.Collections.IDictionary Properties { get; }\n    return:\n      type: System.Collections.IDictionary\n      description: A <xref href=\"System.Collections.IDictionary\"></xref> of properties for the current channel sink.\n  overload: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: SdlChannelSink(IChannelReceiver, IServerChannelSink)\n  nameWithType: SdlChannelSink.SdlChannelSink(IChannelReceiver, IServerChannelSink)\n  fullName: SdlChannelSink.SdlChannelSink(IChannelReceiver, IServerChannelSink)\n- uid: System.Runtime.Remoting.Channels.IChannelReceiver\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IChannelReceiver\n  nameWithType: IChannelReceiver\n  fullName: System.Runtime.Remoting.Channels.IChannelReceiver\n- uid: System.Runtime.Remoting.Channels.IServerChannelSink\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSink\n  nameWithType: IServerChannelSink\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSink\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  nameWithType: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n  fullName: SdlChannelSink.AsyncProcessResponse(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders, Stream)\n- uid: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerResponseChannelSinkStack\n  nameWithType: IServerResponseChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack\n- uid: System.Runtime.Remoting.Messaging.IMessage\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: IMessage\n  nameWithType: IMessage\n  fullName: System.Runtime.Remoting.Messaging.IMessage\n- uid: System.Runtime.Remoting.Channels.ITransportHeaders\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ITransportHeaders\n  nameWithType: ITransportHeaders\n  fullName: System.Runtime.Remoting.Channels.ITransportHeaders\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  nameWithType: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n  fullName: SdlChannelSink.GetResponseStream(IServerResponseChannelSinkStack, Object, IMessage, ITransportHeaders)\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: NextChannelSink\n  nameWithType: SdlChannelSink.NextChannelSink\n  fullName: SdlChannelSink.NextChannelSink\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  nameWithType: SdlChannelSink.ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n  fullName: SdlChannelSink.ProcessMessage(IServerChannelSinkStack, IMessage, ITransportHeaders, Stream, IMessage, ITransportHeaders, Stream)\n- uid: System.Runtime.Remoting.Channels.ServerProcessing\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: ServerProcessing\n  nameWithType: ServerProcessing\n  fullName: System.Runtime.Remoting.Channels.ServerProcessing\n- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n  parent: System.Runtime.Remoting.Channels\n  isExternal: false\n  name: IServerChannelSinkStack\n  nameWithType: IServerChannelSinkStack\n  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: Properties\n  nameWithType: SdlChannelSink.Properties\n  fullName: SdlChannelSink.Properties\n- uid: System.Collections.IDictionary\n  parent: System.Collections\n  isExternal: false\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor*\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: SdlChannelSink\n  nameWithType: SdlChannelSink.SdlChannelSink\n  fullName: SdlChannelSink.SdlChannelSink\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse*\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: AsyncProcessResponse\n  nameWithType: SdlChannelSink.AsyncProcessResponse\n  fullName: SdlChannelSink.AsyncProcessResponse\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream*\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: GetResponseStream\n  nameWithType: SdlChannelSink.GetResponseStream\n  fullName: SdlChannelSink.GetResponseStream\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink*\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: NextChannelSink\n  nameWithType: SdlChannelSink.NextChannelSink\n  fullName: SdlChannelSink.NextChannelSink\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage*\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: ProcessMessage\n  nameWithType: SdlChannelSink.ProcessMessage\n  fullName: SdlChannelSink.ProcessMessage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n- uid: System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties*\n  parent: System.Runtime.Remoting.MetadataServices.SdlChannelSink\n  isExternal: false\n  name: Properties\n  nameWithType: SdlChannelSink.Properties\n  fullName: SdlChannelSink.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Remoting.MetadataServices/SdlChannelSink.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}