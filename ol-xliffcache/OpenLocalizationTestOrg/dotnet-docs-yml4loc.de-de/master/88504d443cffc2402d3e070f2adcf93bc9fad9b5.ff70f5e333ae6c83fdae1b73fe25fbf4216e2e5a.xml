{"nodes":[{"content":"Provides an event for resolving reflection-only type requests for types that are provided by Windows Metadata files, and methods for performing the resolution.","nodes":[{"pos":[0,159],"content":"Provides an event for resolving reflection-only type requests for types that are provided by Windows Metadata files, and methods for performing the resolution.","nodes":[{"content":"Provides an event for resolving reflection-only type requests for types that are provided by Windows Metadata files, and methods for performing the resolution.","pos":[0,159]}]}],"pos":[1053,1213],"yaml":true},{"content":"Unlike the .NET Framework, assembly identity isn’t important for [!INCLUDE[wrt](~/includes/wrt-md.md)] types. In the [!INCLUDE[wrt](~/includes/wrt-md.md)], Windows Metadata files (.WinMD files) contain only metadata, not code. Types can move from one Windows Metadata file to another in a service pack release, so it’s important to be able to locate the Windows Metadata files that are associated with a namespace.  \n  \n> [!NOTE]\n>  Sub-namespaces don’t imply containment. That is, namespace A.B isn't contained in namespace A.","nodes":[{"pos":[0,414],"content":"Unlike the .NET Framework, assembly identity isn’t important for [!INCLUDE[wrt](~/includes/wrt-md.md)] types. In the [!INCLUDE[wrt](~/includes/wrt-md.md)], Windows Metadata files (.WinMD files) contain only metadata, not code. Types can move from one Windows Metadata file to another in a service pack release, so it’s important to be able to locate the Windows Metadata files that are associated with a namespace.","nodes":[{"content":"Unlike the .NET Framework, assembly identity isn’t important for <ph id=\"ph1\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> types.","pos":[0,109],"source":"Unlike the .NET Framework, assembly identity isn’t important for [!INCLUDE[wrt](~/includes/wrt-md.md)] types."},{"content":"In the <ph id=\"ph1\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph>, Windows Metadata files (.WinMD files) contain only metadata, not code.","pos":[110,226],"source":" In the [!INCLUDE[wrt](~/includes/wrt-md.md)], Windows Metadata files (.WinMD files) contain only metadata, not code."},{"content":"Types can move from one Windows Metadata file to another in a service pack release, so it’s important to be able to locate the Windows Metadata files that are associated with a namespace.","pos":[227,414]}]},{"pos":[422,527],"content":"[!NOTE]\n Sub-namespaces don’t imply containment. That is, namespace A.B isn't contained in namespace A.","leadings":["","> "],"nodes":[{"content":" Sub-namespaces don’t imply containment. That is, namespace A.B isn't contained in namespace A.","pos":[8,103],"nodes":[{"content":"Sub-namespaces don’t imply containment.","pos":[1,40]},{"content":"That is, namespace A.B isn't contained in namespace A.","pos":[41,95]}]}]}],"pos":[1224,1757],"yaml":true,"extradata":"MT"},{"content":"Occurs when the resolution of a Windows Metadata file fails in the design environment.","nodes":[{"pos":[0,86],"content":"Occurs when the resolution of a Windows Metadata file fails in the design environment.","nodes":[{"content":"Occurs when the resolution of a Windows Metadata file fails in the design environment.","pos":[0,86]}]}],"pos":[3468,3555],"yaml":true},{"content":"Occurs when the resolution of a Windows Metadata file fails in the reflection-only context.","nodes":[{"pos":[0,91],"content":"Occurs when the resolution of a Windows Metadata file fails in the reflection-only context.","nodes":[{"content":"Occurs when the resolution of a Windows Metadata file fails in the reflection-only context.","pos":[0,91]}]}],"pos":[5219,5311],"yaml":true},{"content":"After this event is raised and handled, it is not raised again for the lifetime of the application domain. The list of files that defines the namespace cannot be changed. This event is analogous to the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event for managed assemblies.  \n  \n See the <xref:System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs> class.  \n  \n> [!IMPORTANT]\n>  The event handler for this event should not throw exceptions.","nodes":[{"pos":[0,285],"content":"After this event is raised and handled, it is not raised again for the lifetime of the application domain. The list of files that defines the namespace cannot be changed. This event is analogous to the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event for managed assemblies.","nodes":[{"content":"After this event is raised and handled, it is not raised again for the lifetime of the application domain. The list of files that defines the namespace cannot be changed. This event is analogous to the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event for managed assemblies.","pos":[0,285],"nodes":[{"content":"After this event is raised and handled, it is not raised again for the lifetime of the application domain.","pos":[0,106]},{"content":"The list of files that defines the namespace cannot be changed.","pos":[107,170]},{"content":"This event is analogous to the <ph id=\"ph1\">&lt;xref:System.AppDomain.ReflectionOnlyAssemblyResolve&gt;</ph> event for managed assemblies.","pos":[171,285],"source":" This event is analogous to the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event for managed assemblies."}]}]},{"pos":[292,385],"content":"See the <xref:System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs> class.","nodes":[{"content":"See the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs&gt;</ph> class.","pos":[0,93],"source":"See the <xref:System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs> class."}]},{"pos":[393,470],"content":"[!IMPORTANT]\n The event handler for this event should not throw exceptions.","leadings":["","> "],"nodes":[{"content":"The event handler for this event should not throw exceptions.","pos":[14,75]}]}],"pos":[5322,5800],"yaml":true,"extradata":"MT"},{"content":"Locates the Windows Metadata files for the specified namespace, given the specified locations to search.","nodes":[{"pos":[0,104],"content":"Locates the Windows Metadata files for the specified namespace, given the specified locations to search.","nodes":[{"content":"Locates the Windows Metadata files for the specified namespace, given the specified locations to search.","pos":[0,104]}]}],"pos":[7665,7770],"yaml":true},{"content":"Calling this method overload is equivalent to calling the <xref:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace%28System.String%2CSystem.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method overload and specifying `null` for the `windowsSdkFilePath` parameter.","nodes":[{"pos":[0,323],"content":"Calling this method overload is equivalent to calling the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace%28System.String%2CSystem.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29&gt;</ph> method overload and specifying <ph id=\"ph2\">`null`</ph> for the <ph id=\"ph3\">`windowsSdkFilePath`</ph> parameter.","source":"Calling this method overload is equivalent to calling the <xref:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace%28System.String%2CSystem.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method overload and specifying `null` for the `windowsSdkFilePath` parameter."}],"pos":[7781,8105],"yaml":true,"extradata":"MT"},{"content":"The namespace to resolve.","nodes":[{"pos":[0,25],"content":"The namespace to resolve.","nodes":[{"content":"The namespace to resolve.","pos":[0,25]}]}],"pos":[8385,8411],"yaml":true},{"content":"The application paths to search for Windows Metadata files, or `null` to search only for Windows Metadata files from the operating system installation.","nodes":[{"pos":[0,151],"content":"The application paths to search for Windows Metadata files, or <ph id=\"ph1\">`null`</ph> to search only for Windows Metadata files from the operating system installation.","source":"The application paths to search for Windows Metadata files, or `null` to search only for Windows Metadata files from the operating system installation."}],"pos":[8528,8680],"yaml":true},{"content":"An enumerable list of strings that represent the Windows Metadata files that define <code>namespaceName</code>.","nodes":[{"pos":[0,111],"content":"An enumerable list of strings that represent the Windows Metadata files that define <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">namespaceName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An enumerable list of strings that represent the Windows Metadata files that define <code>namespaceName</code>."}],"pos":[8777,8889],"yaml":true},{"content":"The operating system version does not support the [!INCLUDE[wrt](~/includes/wrt-md.md)].","nodes":[{"pos":[0,88],"content":"The operating system version does not support the <ph id=\"ph1\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph>.","source":"The operating system version does not support the [!INCLUDE[wrt](~/includes/wrt-md.md)]."}],"pos":[9120,9209],"yaml":true},{"content":"<code>namespaceName</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;namespaceName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>namespaceName</code> is `null`."}],"pos":[9311,9349],"yaml":true},{"content":"Locates the Windows Metadata files for the specified namespace, given the specified locations to search.","nodes":[{"pos":[0,104],"content":"Locates the Windows Metadata files for the specified namespace, given the specified locations to search.","nodes":[{"content":"Locates the Windows Metadata files for the specified namespace, given the specified locations to search.","pos":[0,104]}]}],"pos":[10963,11068],"yaml":true},{"content":"The path you specify for `windowsSdkFilePath` is searched only for namespaces that begin with Windows.","nodes":[{"pos":[0,102],"content":"The path you specify for <ph id=\"ph1\">`windowsSdkFilePath`</ph> is searched only for namespaces that begin with Windows.","source":"The path you specify for `windowsSdkFilePath` is searched only for namespaces that begin with Windows."}],"pos":[11079,11182],"yaml":true,"extradata":"MT"},{"content":"The namespace to resolve.","nodes":[{"pos":[0,25],"content":"The namespace to resolve.","nodes":[{"content":"The namespace to resolve.","pos":[0,25]}]}],"pos":[11489,11515],"yaml":true},{"content":"The path to search for Windows Metadata files provided by the SDK, or `null` to search for Windows Metadata files from the operating system installation.","nodes":[{"pos":[0,153],"content":"The path to search for Windows Metadata files provided by the SDK, or <ph id=\"ph1\">`null`</ph> to search for Windows Metadata files from the operating system installation.","source":"The path to search for Windows Metadata files provided by the SDK, or `null` to search for Windows Metadata files from the operating system installation."}],"pos":[11589,11743],"yaml":true},{"content":"The application paths to search for Windows Metadata files.","nodes":[{"pos":[0,59],"content":"The application paths to search for Windows Metadata files.","nodes":[{"content":"The application paths to search for Windows Metadata files.","pos":[0,59]}]}],"pos":[11860,11920],"yaml":true},{"content":"An enumerable list of strings that represent the Windows Metadata files that define <code>namespaceName</code>.","nodes":[{"pos":[0,111],"content":"An enumerable list of strings that represent the Windows Metadata files that define <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">namespaceName</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An enumerable list of strings that represent the Windows Metadata files that define <code>namespaceName</code>."}],"pos":[12017,12129],"yaml":true},{"content":"The operating system version does not support the [!INCLUDE[wrt](~/includes/wrt-md.md)].","nodes":[{"pos":[0,88],"content":"The operating system version does not support the <ph id=\"ph1\">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph>.","source":"The operating system version does not support the [!INCLUDE[wrt](~/includes/wrt-md.md)]."}],"pos":[12360,12449],"yaml":true},{"content":"<code>namespaceName</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;namespaceName&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>namespaceName</code> is `null`."}],"pos":[12551,12589],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  commentId: T:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  id: WindowsRuntimeMetadata\n  children:\n  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.DesignerNamespaceResolve\n  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ReflectionOnlyNamespaceResolve\n  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace(System.String,System.Collections.Generic.IEnumerable{System.String})\n  - System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})\n  langs:\n  - csharp\n  name: WindowsRuntimeMetadata\n  nameWithType: WindowsRuntimeMetadata\n  fullName: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: Provides an event for resolving reflection-only type requests for types that are provided by Windows Metadata files, and methods for performing the resolution.\n  remarks: \"Unlike the .NET Framework, assembly identity isn’t important for [!INCLUDE[wrt](~/includes/wrt-md.md)] types. In the [!INCLUDE[wrt](~/includes/wrt-md.md)], Windows Metadata files (.WinMD files) contain only metadata, not code. Types can move from one Windows Metadata file to another in a service pack release, so it’s important to be able to locate the Windows Metadata files that are associated with a namespace.  \\n  \\n> [!NOTE]\\n>  Sub-namespaces don’t imply containment. That is, namespace A.B isn't contained in namespace A.\"\n  syntax:\n    content: public static class WindowsRuntimeMetadata\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/WindowsRuntimeMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.DesignerNamespaceResolve\n  commentId: E:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.DesignerNamespaceResolve\n  id: DesignerNamespaceResolve\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  langs:\n  - csharp\n  name: DesignerNamespaceResolve\n  nameWithType: WindowsRuntimeMetadata.DesignerNamespaceResolve\n  fullName: WindowsRuntimeMetadata.DesignerNamespaceResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: Occurs when the resolution of a Windows Metadata file fails in the design environment.\n  syntax:\n    content: public static event EventHandler<System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs> DesignerNamespaceResolve;\n    return:\n      type: System.EventHandler{System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/WindowsRuntimeMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ReflectionOnlyNamespaceResolve\n  commentId: E:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ReflectionOnlyNamespaceResolve\n  id: ReflectionOnlyNamespaceResolve\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  langs:\n  - csharp\n  name: ReflectionOnlyNamespaceResolve\n  nameWithType: WindowsRuntimeMetadata.ReflectionOnlyNamespaceResolve\n  fullName: WindowsRuntimeMetadata.ReflectionOnlyNamespaceResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: Occurs when the resolution of a Windows Metadata file fails in the reflection-only context.\n  remarks: \"After this event is raised and handled, it is not raised again for the lifetime of the application domain. The list of files that defines the namespace cannot be changed. This event is analogous to the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event for managed assemblies.  \\n  \\n See the <xref:System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs> class.  \\n  \\n> [!IMPORTANT]\\n>  The event handler for this event should not throw exceptions.\"\n  syntax:\n    content: public static event EventHandler<System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs> ReflectionOnlyNamespaceResolve;\n    return:\n      type: System.EventHandler{System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/WindowsRuntimeMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace(System.String,System.Collections.Generic.IEnumerable{System.String})\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace(System.String,System.Collections.Generic.IEnumerable{System.String})\n  id: ResolveNamespace(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  langs:\n  - csharp\n  name: ResolveNamespace(String, IEnumerable<String>)\n  nameWithType: WindowsRuntimeMetadata.ResolveNamespace(String, IEnumerable<String>)\n  fullName: WindowsRuntimeMetadata.ResolveNamespace(String, IEnumerable<String>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: Locates the Windows Metadata files for the specified namespace, given the specified locations to search.\n  remarks: Calling this method overload is equivalent to calling the <xref:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace%28System.String%2CSystem.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method overload and specifying `null` for the `windowsSdkFilePath` parameter.\n  syntax:\n    content: public static System.Collections.Generic.IEnumerable<string> ResolveNamespace (string namespaceName, System.Collections.Generic.IEnumerable<string> packageGraphFilePaths);\n    parameters:\n    - id: namespaceName\n      type: System.String\n      description: The namespace to resolve.\n    - id: packageGraphFilePaths\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The application paths to search for Windows Metadata files, or `null` to search only for Windows Metadata files from the operating system installation.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: An enumerable list of strings that represent the Windows Metadata files that define <code>namespaceName</code>.\n  overload: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The operating system version does not support the [!INCLUDE[wrt](~/includes/wrt-md.md)].\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>namespaceName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/WindowsRuntimeMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})\n  commentId: M:System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})\n  id: ResolveNamespace(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  langs:\n  - csharp\n  name: ResolveNamespace(String, String, IEnumerable<String>)\n  nameWithType: WindowsRuntimeMetadata.ResolveNamespace(String, String, IEnumerable<String>)\n  fullName: WindowsRuntimeMetadata.ResolveNamespace(String, String, IEnumerable<String>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices.WindowsRuntime\n  summary: Locates the Windows Metadata files for the specified namespace, given the specified locations to search.\n  remarks: The path you specify for `windowsSdkFilePath` is searched only for namespaces that begin with Windows.\n  syntax:\n    content: public static System.Collections.Generic.IEnumerable<string> ResolveNamespace (string namespaceName, string windowsSdkFilePath, System.Collections.Generic.IEnumerable<string> packageGraphFilePaths);\n    parameters:\n    - id: namespaceName\n      type: System.String\n      description: The namespace to resolve.\n    - id: windowsSdkFilePath\n      type: System.String\n      description: The path to search for Windows Metadata files provided by the SDK, or `null` to search for Windows Metadata files from the operating system installation.\n    - id: packageGraphFilePaths\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: The application paths to search for Windows Metadata files.\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: An enumerable list of strings that represent the Windows Metadata files that define <code>namespaceName</code>.\n  overload: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The operating system version does not support the [!INCLUDE[wrt](~/includes/wrt-md.md)].\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>namespaceName</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/WindowsRuntimeMetadata.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.DesignerNamespaceResolve\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  isExternal: false\n  name: DesignerNamespaceResolve\n  nameWithType: WindowsRuntimeMetadata.DesignerNamespaceResolve\n  fullName: WindowsRuntimeMetadata.DesignerNamespaceResolve\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs\n  name: DesignerNamespaceResolveEventArgs\n  nameWithType: DesignerNamespaceResolveEventArgs\n  fullName: System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs\n- uid: System.EventHandler{System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<DesignerNamespaceResolveEventArgs>\n  nameWithType: EventHandler<DesignerNamespaceResolveEventArgs>\n  fullName: System.EventHandler<System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs\n    name: DesignerNamespaceResolveEventArgs\n    nameWithType: DesignerNamespaceResolveEventArgs\n    fullName: System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ReflectionOnlyNamespaceResolve\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  isExternal: false\n  name: ReflectionOnlyNamespaceResolve\n  nameWithType: WindowsRuntimeMetadata.ReflectionOnlyNamespaceResolve\n  fullName: WindowsRuntimeMetadata.ReflectionOnlyNamespaceResolve\n- uid: System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs\n  name: NamespaceResolveEventArgs\n  nameWithType: NamespaceResolveEventArgs\n  fullName: System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs\n- uid: System.EventHandler{System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<NamespaceResolveEventArgs>\n  nameWithType: EventHandler<NamespaceResolveEventArgs>\n  fullName: System.EventHandler<System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs\n    name: NamespaceResolveEventArgs\n    nameWithType: NamespaceResolveEventArgs\n    fullName: System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace(System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  isExternal: false\n  name: ResolveNamespace(String, IEnumerable<String>)\n  nameWithType: WindowsRuntimeMetadata.ResolveNamespace(String, IEnumerable<String>)\n  fullName: WindowsRuntimeMetadata.ResolveNamespace(String, IEnumerable<String>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  isExternal: false\n  name: ResolveNamespace(String, String, IEnumerable<String>)\n  nameWithType: WindowsRuntimeMetadata.ResolveNamespace(String, String, IEnumerable<String>)\n  fullName: WindowsRuntimeMetadata.ResolveNamespace(String, String, IEnumerable<String>)\n- uid: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata.ResolveNamespace*\n  parent: System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata\n  isExternal: false\n  name: ResolveNamespace\n  nameWithType: WindowsRuntimeMetadata.ResolveNamespace\n  fullName: WindowsRuntimeMetadata.ResolveNamespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices.WindowsRuntime/WindowsRuntimeMetadata.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}