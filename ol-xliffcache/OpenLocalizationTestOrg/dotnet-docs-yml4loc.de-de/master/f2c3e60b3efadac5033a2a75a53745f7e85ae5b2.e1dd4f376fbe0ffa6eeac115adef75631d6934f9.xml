{"nodes":[{"content":"Represents a class that is used to prepopulate the cache with DTDs or XML streams.","nodes":[{"pos":[0,82],"content":"Represents a class that is used to prepopulate the cache with DTDs or XML streams.","nodes":[{"content":"Represents a class that is used to prepopulate the cache with DTDs or XML streams.","pos":[0,82]}]}],"pos":[1820,1903],"yaml":true},{"content":"The <xref:System.Xml.Resolvers.XmlPreloadedResolver> type is used as a resolver when automatic calls to the network are not desired or are not possible. For example, this type can be used for loading cached external DTDs. Or, you might use <xref:System.Xml.Resolvers.XmlPreloadedResolver> to preload well-known DTDs that are defined in XHTML 1.0. Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly. Currently, <xref:System.Xml.Resolvers.XmlPreloadedResolver> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.","nodes":[{"pos":[0,608],"content":"The <xref:System.Xml.Resolvers.XmlPreloadedResolver> type is used as a resolver when automatic calls to the network are not desired or are not possible. For example, this type can be used for loading cached external DTDs. Or, you might use <xref:System.Xml.Resolvers.XmlPreloadedResolver> to preload well-known DTDs that are defined in XHTML 1.0. Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly. Currently, <xref:System.Xml.Resolvers.XmlPreloadedResolver> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.","nodes":[{"content":"The <xref:System.Xml.Resolvers.XmlPreloadedResolver> type is used as a resolver when automatic calls to the network are not desired or are not possible. For example, this type can be used for loading cached external DTDs. Or, you might use <xref:System.Xml.Resolvers.XmlPreloadedResolver> to preload well-known DTDs that are defined in XHTML 1.0. Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly. Currently, <xref:System.Xml.Resolvers.XmlPreloadedResolver> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.","pos":[0,608],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> type is used as a resolver when automatic calls to the network are not desired or are not possible.","pos":[0,152],"source":"The <xref:System.Xml.Resolvers.XmlPreloadedResolver> type is used as a resolver when automatic calls to the network are not desired or are not possible."},{"content":"For example, this type can be used for loading cached external DTDs.","pos":[153,221]},{"content":"Or, you might use <ph id=\"ph1\">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> to preload well-known DTDs that are defined in XHTML 1.0.","pos":[222,346],"source":" Or, you might use <xref:System.Xml.Resolvers.XmlPreloadedResolver> to preload well-known DTDs that are defined in XHTML 1.0."},{"content":"Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly.","pos":[347,486]},{"content":"Currently, <ph id=\"ph1\">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.","pos":[487,608],"source":" Currently, <xref:System.Xml.Resolvers.XmlPreloadedResolver> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91."}]}]}],"pos":[1914,2523],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class.","nodes":[{"pos":[0,103],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class."}],"pos":[4202,4306],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified preloaded well-known DTDs.","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> class with the specified preloaded well-known DTDs.","source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified preloaded well-known DTDs."}],"pos":[5823,5972],"yaml":true},{"content":"The well-known DTDs that should be prepopulated into the cache.","nodes":[{"pos":[0,63],"content":"The well-known DTDs that should be prepopulated into the cache.","nodes":[{"content":"The well-known DTDs that should be prepopulated into the cache.","pos":[0,63]}]}],"pos":[6179,6243],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver.","nodes":[{"pos":[0,140],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> class with the specified fallback resolver.","source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver."}],"pos":[7650,7791],"yaml":true},{"content":"The `XmlResolver`, `XmlXapResolver`, or your own resolver.","nodes":[{"pos":[0,58],"content":"The <ph id=\"ph1\">`XmlResolver`</ph>, <ph id=\"ph2\">`XmlXapResolver`</ph>, or your own resolver.","source":"The `XmlResolver`, `XmlXapResolver`, or your own resolver."}],"pos":[7982,8041],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver and preloaded well-known DTDs.","nodes":[{"pos":[0,170],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> class with the specified fallback resolver and preloaded well-known DTDs.","source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver and preloaded well-known DTDs."}],"pos":[9592,9763],"yaml":true},{"content":"The `XmlResolver`, `XmlXapResolver`, or your own resolver.","nodes":[{"pos":[0,58],"content":"The <ph id=\"ph1\">`XmlResolver`</ph>, <ph id=\"ph2\">`XmlXapResolver`</ph>, or your own resolver.","source":"The `XmlResolver`, `XmlXapResolver`, or your own resolver."}],"pos":[10003,10062],"yaml":true},{"content":"The well-known DTDs that should be prepopulated into the cache.","nodes":[{"pos":[0,63],"content":"The well-known DTDs that should be prepopulated into the cache.","nodes":[{"content":"The well-known DTDs that should be prepopulated into the cache.","pos":[0,63]}]}],"pos":[10151,10215],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.","nodes":[{"pos":[0,194],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.","source":"Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer."}],"pos":[12009,12204],"yaml":true},{"content":"Use this constructor overload if you want to customize URI comparison.","nodes":[{"pos":[0,70],"content":"Use this constructor overload if you want to customize URI comparison.","nodes":[{"content":"Use this constructor overload if you want to customize URI comparison.","pos":[0,70]}]}],"pos":[12215,12286],"yaml":true,"extradata":"MT"},{"content":"The `XmlResolver`, `XmlXapResolver`, or your own resolver.","nodes":[{"pos":[0,58],"content":"The <ph id=\"ph1\">`XmlResolver`</ph>, <ph id=\"ph2\">`XmlXapResolver`</ph>, or your own resolver.","source":"The `XmlResolver`, `XmlXapResolver`, or your own resolver."}],"pos":[12589,12648],"yaml":true},{"content":"The well-known DTDs that should be prepopulated into cache.","nodes":[{"pos":[0,59],"content":"The well-known DTDs that should be prepopulated into cache.","nodes":[{"content":"The well-known DTDs that should be prepopulated into cache.","pos":[0,59]}]}],"pos":[12737,12797],"yaml":true},{"content":"The implementation of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\"></xref> generic interface to use when you compare URIs.","nodes":[{"pos":[0,141],"content":"The implementation of the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEqualityComparer`1\"&gt;&lt;/xref&gt;</ph> generic interface to use when you compare URIs.","source":"The implementation of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\"></xref> generic interface to use when you compare URIs."}],"pos":[12907,13049],"yaml":true},{"content":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","nodes":[{"pos":[0,209],"content":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","nodes":[{"content":"Adds a byte array to the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> store and maps it to a URI.","pos":[0,115],"source":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI."},{"content":"If the store already contains a mapping for the same URI, the existing mapping is overridden.","pos":[116,209]}]}],"pos":[14398,14608],"yaml":true},{"content":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.","nodes":[{"pos":[0,116],"content":"The URI of the data that is being added to the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> store.","source":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."}],"pos":[14744,14861],"yaml":true},{"content":"A byte array with the data that corresponds to the provided URI.","nodes":[{"pos":[0,64],"content":"A byte array with the data that corresponds to the provided URI.","nodes":[{"content":"A byte array with the data that corresponds to the provided URI.","pos":[0,64]}]}],"pos":[14922,14987],"yaml":true},{"content":"<code>uri</code> or <code>value</code> is `null`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>uri</code> or <code>value</code> is `null`."}],"pos":[15162,15212],"yaml":true},{"content":"Adds a <xref href=\"System.IO.Stream\"></xref> to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","nodes":[{"pos":[0,236],"content":"Adds a <xref href=\"System.IO.Stream\"></xref> to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","nodes":[{"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> to the <ph id=\"ph2\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> store and maps it to a URI.","pos":[0,142],"source":"Adds a <xref href=\"System.IO.Stream\"></xref> to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI."},{"content":"If the store already contains a mapping for the same URI, the existing mapping is overridden.","pos":[143,236]}]}],"pos":[16492,16729],"yaml":true},{"content":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.","nodes":[{"pos":[0,116],"content":"The URI of the data that is being added to the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> store.","source":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."}],"pos":[16875,16992],"yaml":true},{"content":"A <xref href=\"System.IO.Stream\"></xref> with the data that corresponds to the provided URI.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> with the data that corresponds to the provided URI.","source":"A <xref href=\"System.IO.Stream\"></xref> with the data that corresponds to the provided URI."}],"pos":[17056,17148],"yaml":true},{"content":"<code>uri</code> or <code>value</code> is `null`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>uri</code> or <code>value</code> is `null`."}],"pos":[17323,17373],"yaml":true},{"content":"Adds a string with preloaded data to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","nodes":[{"pos":[0,225],"content":"Adds a string with preloaded data to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","nodes":[{"content":"Adds a string with preloaded data to the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> store and maps it to a URI.","pos":[0,131],"source":"Adds a string with preloaded data to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI."},{"content":"If the store already contains a mapping for the same URI, the existing mapping is overridden.","pos":[132,225]}]}],"pos":[18644,18870],"yaml":true},{"content":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.","nodes":[{"pos":[0,116],"content":"The URI of the data that is being added to the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> store.","source":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."}],"pos":[19006,19123],"yaml":true},{"content":"A `String` with the data that corresponds to the provided URI.","nodes":[{"pos":[0,62],"content":"A <ph id=\"ph1\">`String`</ph> with the data that corresponds to the provided URI.","source":"A `String` with the data that corresponds to the provided URI."}],"pos":[19184,19247],"yaml":true},{"content":"<code>uri</code> or <code>value</code> is `null`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>uri</code> or <code>value</code> is `null`."}],"pos":[19422,19472],"yaml":true},{"content":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","nodes":[{"pos":[0,209],"content":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.","nodes":[{"content":"Adds a byte array to the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> store and maps it to a URI.","pos":[0,115],"source":"Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI."},{"content":"If the store already contains a mapping for the same URI, the existing mapping is overridden.","pos":[116,209]}]}],"pos":[20863,21073],"yaml":true},{"content":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.","nodes":[{"pos":[0,116],"content":"The URI of the data that is being added to the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> store.","source":"The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."}],"pos":[21232,21349],"yaml":true},{"content":"A byte array with the data that corresponds to the provided URI.","nodes":[{"pos":[0,64],"content":"A byte array with the data that corresponds to the provided URI.","nodes":[{"content":"A byte array with the data that corresponds to the provided URI.","pos":[0,64]}]}],"pos":[21410,21475],"yaml":true},{"content":"The offset in the provided byte array where the data starts.","nodes":[{"pos":[0,60],"content":"The offset in the provided byte array where the data starts.","nodes":[{"content":"The offset in the provided byte array where the data starts.","pos":[0,60]}]}],"pos":[21536,21597],"yaml":true},{"content":"The number of bytes to read from the byte array, starting at the provided offset.","nodes":[{"pos":[0,81],"content":"The number of bytes to read from the byte array, starting at the provided offset.","nodes":[{"content":"The number of bytes to read from the byte array, starting at the provided offset.","pos":[0,81]}]}],"pos":[21657,21739],"yaml":true},{"content":"<code>uri</code> or <code>value</code> is `null`.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph3\">`null`</ph>.","source":"<code>uri</code> or <code>value</code> is `null`."}],"pos":[21914,21964],"yaml":true},{"content":"<code>offset</code> or <code>count</code> is less than 0.  \n  \n -or-  \n  \n The length of the <code>value</code> minus <code>offset</code> is less than <code>count.</code>","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0.","source":"<code>offset</code> or <code>count</code> is less than 0."},{"pos":[64,68],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[75,170],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> minus <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">offset</ph><ept id=\"p2\">&lt;/code&gt;</ept> is less than <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">count.</ph><ept id=\"p3\">&lt;/code&gt;</ept>","source":"The length of the <code>value</code> minus <code>offset</code> is less than <code>count.</code>"}],"pos":[22078,22255],"yaml":true},{"content":"Sets the credentials that are used to authenticate the underlying <xref href=\"System.Net.WebRequest\"></xref>.","nodes":[{"pos":[0,109],"content":"Sets the credentials that are used to authenticate the underlying <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph>.","source":"Sets the credentials that are used to authenticate the underlying <xref href=\"System.Net.WebRequest\"></xref>."}],"pos":[23459,23569],"yaml":true},{"content":"The credentials that are used to authenticate the underlying web request.","nodes":[{"pos":[0,73],"content":"The credentials that are used to authenticate the underlying web request.","nodes":[{"content":"The credentials that are used to authenticate the underlying web request.","pos":[0,73]}]}],"pos":[23720,23794],"yaml":true},{"content":"Maps a URI to an object that contains the actual resource.","nodes":[{"pos":[0,58],"content":"Maps a URI to an object that contains the actual resource.","nodes":[{"content":"Maps a URI to an object that contains the actual resource.","pos":[0,58]}]}],"pos":[25239,25298],"yaml":true},{"content":"The <xref:System.Xml.Resolvers.XmlPreloadedResolver> will first try to look up the resource in its store of preloaded data. If it cannot find it, it will call the fallback resolver's `GetEntity` method. If no fallback resolver was provided in the <xref:System.Xml.Resolvers.XmlPreloadedResolver> constructor, an exception is thrown.","nodes":[{"pos":[0,332],"content":"The <xref:System.Xml.Resolvers.XmlPreloadedResolver> will first try to look up the resource in its store of preloaded data. If it cannot find it, it will call the fallback resolver's `GetEntity` method. If no fallback resolver was provided in the <xref:System.Xml.Resolvers.XmlPreloadedResolver> constructor, an exception is thrown.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> will first try to look up the resource in its store of preloaded data.","pos":[0,123],"source":"The <xref:System.Xml.Resolvers.XmlPreloadedResolver> will first try to look up the resource in its store of preloaded data."},{"content":"If it cannot find it, it will call the fallback resolver's <ph id=\"ph1\">`GetEntity`</ph> method.","pos":[124,202],"source":" If it cannot find it, it will call the fallback resolver's `GetEntity` method."},{"content":"If no fallback resolver was provided in the <ph id=\"ph1\">&lt;xref:System.Xml.Resolvers.XmlPreloadedResolver&gt;</ph> constructor, an exception is thrown.","pos":[203,332],"source":" If no fallback resolver was provided in the <xref:System.Xml.Resolvers.XmlPreloadedResolver> constructor, an exception is thrown."}]}],"pos":[25309,25642],"yaml":true,"extradata":"MT"},{"content":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.","nodes":[{"pos":[0,103],"content":"The URI returned from <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>."}],"pos":[25833,25937],"yaml":true},{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","nodes":[{"pos":[0,296],"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","nodes":[{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","pos":[0,296],"nodes":[{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.","pos":[0,106]},{"content":"This parameter is provided for future extensibility purposes.","pos":[107,168]},{"content":"For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","pos":[169,296]}]}]}],"pos":[25997,26294],"yaml":true},{"content":"The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref href=\"System.IO.Stream\"></xref> objects and <xref href=\"System.IO.TextReader\"></xref> objects for URIs that were added as `String`. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"></xref> method to determine whether a certain `Type` is supported by this resolver.","nodes":[{"pos":[0,512],"content":"The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref href=\"System.IO.Stream\"></xref> objects and <xref href=\"System.IO.TextReader\"></xref> objects for URIs that were added as `String`. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"></xref> method to determine whether a certain `Type` is supported by this resolver.","nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> supports <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> objects and <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> objects for URIs that were added as <ph id=\"ph4\">`String`</ph>.","pos":[30,243],"source":" The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref href=\"System.IO.Stream\"></xref> objects and <xref href=\"System.IO.TextReader\"></xref> objects for URIs that were added as `String`."},{"content":"If the requested type is not supported by the resolver, an exception will be thrown.","pos":[244,328]},{"content":"Use the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"&gt;&lt;/xref&gt;</ph> method to determine whether a certain <ph id=\"ph2\">`Type`</ph> is supported by this resolver.","pos":[329,512],"source":" Use the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"></xref> method to determine whether a certain `Type` is supported by this resolver."}]}],"pos":[26364,26877],"yaml":true},{"content":"A <xref href=\"System.IO.Stream\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object that corresponds to the actual source.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object that corresponds to the actual source.","source":"A <xref href=\"System.IO.Stream\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object that corresponds to the actual source."}],"pos":[26934,27065],"yaml":true},{"content":"<code>absoluteUri</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>absoluteUri</code> is `null`."}],"pos":[27246,27282],"yaml":true},{"content":"Cannot resolve URI passed in <code>absoluteUri</code>.  \n  \n -or-  \n  \n <code>ofObjectToReturn</code> is not of a supported type.","nodes":[{"pos":[0,54],"content":"Cannot resolve URI passed in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">absoluteUri</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"Cannot resolve URI passed in <code>absoluteUri</code>."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,129],"content":"<ph id=\"ph1\">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is not of a supported type.","source":"<code>ofObjectToReturn</code> is not of a supported type."}],"pos":[27374,27510],"yaml":true},{"content":"Asynchronously maps a URI to an object that contains the actual resource.","nodes":[{"pos":[0,73],"content":"Asynchronously maps a URI to an object that contains the actual resource.","nodes":[{"content":"Asynchronously maps a URI to an object that contains the actual resource.","pos":[0,73]}]}],"pos":[28901,28975],"yaml":true},{"content":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.","nodes":[{"pos":[0,103],"content":"The URI returned from <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>."}],"pos":[29200,29304],"yaml":true},{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","nodes":[{"pos":[0,296],"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","nodes":[{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","pos":[0,296],"nodes":[{"content":"The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs.","pos":[0,106]},{"content":"This parameter is provided for future extensibility purposes.","pos":[107,168]},{"content":"For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.","pos":[169,296]}]}]}],"pos":[29364,29661],"yaml":true},{"content":"The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref href=\"System.IO.Stream\"></xref> objects and <xref href=\"System.IO.TextReader\"></xref> objects for URIs that were added as `String`. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"></xref> method to determine whether a certain `Type` is supported by this resolver.","nodes":[{"pos":[0,512],"content":"The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref href=\"System.IO.Stream\"></xref> objects and <xref href=\"System.IO.TextReader\"></xref> objects for URIs that were added as `String`. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"></xref> method to determine whether a certain `Type` is supported by this resolver.","nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> supports <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> objects and <ph id=\"ph3\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> objects for URIs that were added as <ph id=\"ph4\">`String`</ph>.","pos":[30,243],"source":" The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref href=\"System.IO.Stream\"></xref> objects and <xref href=\"System.IO.TextReader\"></xref> objects for URIs that were added as `String`."},{"content":"If the requested type is not supported by the resolver, an exception will be thrown.","pos":[244,328]},{"content":"Use the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"&gt;&lt;/xref&gt;</ph> method to determine whether a certain <ph id=\"ph2\">`Type`</ph> is supported by this resolver.","pos":[329,512],"source":" Use the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"></xref> method to determine whether a certain `Type` is supported by this resolver."}]}],"pos":[29731,30244],"yaml":true},{"content":"A <xref href=\"System.IO.Stream\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object that corresponds to the actual source.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.IO.TextReader\"&gt;&lt;/xref&gt;</ph> object that corresponds to the actual source.","source":"A <xref href=\"System.IO.Stream\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object that corresponds to the actual source."}],"pos":[30330,30461],"yaml":true},{"content":"Gets a collection of preloaded URIs.","nodes":[{"pos":[0,36],"content":"Gets a collection of preloaded URIs.","nodes":[{"content":"Gets a collection of preloaded URIs.","pos":[0,36]}]}],"pos":[31764,31801],"yaml":true},{"content":"The collection of preloaded URIs.","nodes":[{"pos":[0,33],"content":"The collection of preloaded URIs.","nodes":[{"content":"The collection of preloaded URIs.","pos":[0,33]}]}],"pos":[31992,32026],"yaml":true},{"content":"Removes the data that corresponds to the URI from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref>.","nodes":[{"pos":[0,117],"content":"Removes the data that corresponds to the URI from the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph>.","source":"Removes the data that corresponds to the URI from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref>."}],"pos":[33335,33453],"yaml":true},{"content":"No exception is thrown if the data does not exist in the store.","nodes":[{"pos":[0,63],"content":"No exception is thrown if the data does not exist in the store.","nodes":[{"content":"No exception is thrown if the data does not exist in the store.","pos":[0,63]}]}],"pos":[33464,33528],"yaml":true,"extradata":"MT"},{"content":"The URI of the data that should be removed from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.","nodes":[{"pos":[0,121],"content":"The URI of the data that should be removed from the <ph id=\"ph1\">&lt;xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"&gt;&lt;/xref&gt;</ph> store.","source":"The URI of the data that should be removed from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store."}],"pos":[33653,33775],"yaml":true},{"content":"<code>uri</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>uri</code> is `null`."}],"pos":[33953,33981],"yaml":true},{"content":"Resolves the absolute URI from the base and relative URIs.","nodes":[{"pos":[0,58],"content":"Resolves the absolute URI from the base and relative URIs.","nodes":[{"content":"Resolves the absolute URI from the base and relative URIs.","pos":[0,58]}]}],"pos":[35294,35353],"yaml":true},{"content":"The base URI used to resolve the relative URI.","nodes":[{"pos":[0,46],"content":"The base URI used to resolve the relative URI.","nodes":[{"content":"The base URI used to resolve the relative URI.","pos":[0,46]}]}],"pos":[35518,35565],"yaml":true},{"content":"The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.","nodes":[{"pos":[0,213],"content":"The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.","nodes":[{"content":"The URI to resolve.","pos":[0,19]},{"content":"The URI can be absolute or relative.","pos":[20,56]},{"content":"If absolute, this value effectively replaces the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> value.","pos":[57,133],"source":" If absolute, this value effectively replaces the <code>baseUri</code> value."},{"content":"If relative, it combines with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> to make an absolute URI.","pos":[134,213],"source":" If relative, it combines with the <code>baseUri</code> to make an absolute URI."}]}],"pos":[35632,35846],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> representing the absolute URI or `null` if the relative URI cannot be resolved.","nodes":[{"pos":[0,115],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> representing the absolute URI or <ph id=\"ph2\">`null`</ph> if the relative URI cannot be resolved.","source":"The <xref href=\"System.Uri\"></xref> representing the absolute URI or `null` if the relative URI cannot be resolved."}],"pos":[35900,36016],"yaml":true},{"content":"<code>uri</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>uri</code> is `null`."}],"pos":[36198,36226],"yaml":true},{"content":"Determines whether the resolver supports other <xref href=\"System.Type\"></xref>s than just <xref href=\"System.IO.Stream\"></xref>.","nodes":[{"pos":[0,129],"content":"Determines whether the resolver supports other <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>s than just <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the resolver supports other <xref href=\"System.Type\"></xref>s than just <xref href=\"System.IO.Stream\"></xref>."}],"pos":[37539,37669],"yaml":true},{"content":"The absolute URI to check.","nodes":[{"pos":[0,26],"content":"The absolute URI to check.","nodes":[{"content":"The absolute URI to check.","pos":[0,26]}]}],"pos":[37836,37863],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to return.","nodes":[{"pos":[0,47],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to return.","source":"The <xref href=\"System.Type\"></xref> to return."}],"pos":[37921,37969],"yaml":true},{"content":"`true` if the <xref href=\"System.Type\"></xref> is supported; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> is supported; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <xref href=\"System.Type\"></xref> is supported; otherwise, `false`."}],"pos":[38027,38110],"yaml":true},{"content":"<code>uri</code> is `null`.","nodes":[{"pos":[0,27],"content":"<ph id=\"ph1\">&lt;code&gt;uri&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>uri</code> is `null`."}],"pos":[38294,38322],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Resolvers.XmlPreloadedResolver\n  commentId: T:System.Xml.Resolvers.XmlPreloadedResolver\n  id: XmlPreloadedResolver\n  children:\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)\n  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})\n  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])\n  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)\n  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)\n  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)\n  - System.Xml.Resolvers.XmlPreloadedResolver.Credentials\n  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)\n  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  - System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris\n  - System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)\n  - System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)\n  - System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\n  langs:\n  - csharp\n  name: XmlPreloadedResolver\n  nameWithType: XmlPreloadedResolver\n  fullName: System.Xml.Resolvers.XmlPreloadedResolver\n  type: Class\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Represents a class that is used to prepopulate the cache with DTDs or XML streams.\n  remarks: The <xref:System.Xml.Resolvers.XmlPreloadedResolver> type is used as a resolver when automatic calls to the network are not desired or are not possible. For example, this type can be used for loading cached external DTDs. Or, you might use <xref:System.Xml.Resolvers.XmlPreloadedResolver> to preload well-known DTDs that are defined in XHTML 1.0. Preloading well-known DTDs does not start any network connections because these DTDs are already embedded in the System.Xml.Utils assembly. Currently, <xref:System.Xml.Resolvers.XmlPreloadedResolver> includes the DTDs that are defined in XHTML 1.0 and RSS 0.91.\n  syntax:\n    content: 'public class XmlPreloadedResolver : System.Xml.XmlResolver'\n  inheritance:\n  - System.Object\n  - System.Xml.XmlResolver\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor\n  id: '#ctor'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver()\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver()\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class.\n  syntax:\n    content: public XmlPreloadedResolver ();\n    parameters: []\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)\n  id: '#ctor(System.Xml.Resolvers.XmlKnownDtds)'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver(XmlKnownDtds)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified preloaded well-known DTDs.\n  syntax:\n    content: public XmlPreloadedResolver (System.Xml.Resolvers.XmlKnownDtds preloadedDtds);\n    parameters:\n    - id: preloadedDtds\n      type: System.Xml.Resolvers.XmlKnownDtds\n      description: The well-known DTDs that should be prepopulated into the cache.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)\n  id: '#ctor(System.Xml.XmlResolver)'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver(XmlResolver)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver.\n  syntax:\n    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver);\n    parameters:\n    - id: fallbackResolver\n      type: System.Xml.XmlResolver\n      description: The `XmlResolver`, `XmlXapResolver`, or your own resolver.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)\n  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver(XmlResolver, XmlKnownDtds)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds)\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver and preloaded well-known DTDs.\n  syntax:\n    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds);\n    parameters:\n    - id: fallbackResolver\n      type: System.Xml.XmlResolver\n      description: The `XmlResolver`, `XmlXapResolver`, or your own resolver.\n    - id: preloadedDtds\n      type: System.Xml.Resolvers.XmlKnownDtds\n      description: The well-known DTDs that should be prepopulated into the cache.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})\n  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})'\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Initializes a new instance of the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> class with the specified fallback resolver, preloaded well-known DTDs, and URI equality comparer.\n  remarks: Use this constructor overload if you want to customize URI comparison.\n  syntax:\n    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds, System.Collections.Generic.IEqualityComparer<Uri> uriComparer);\n    parameters:\n    - id: fallbackResolver\n      type: System.Xml.XmlResolver\n      description: The `XmlResolver`, `XmlXapResolver`, or your own resolver.\n    - id: preloadedDtds\n      type: System.Xml.Resolvers.XmlKnownDtds\n      description: The well-known DTDs that should be prepopulated into cache.\n    - id: uriComparer\n      type: System.Collections.Generic.IEqualityComparer{System.Uri}\n      description: The implementation of the <xref href=\"System.Collections.Generic.IEqualityComparer`1\"></xref> generic interface to use when you compare URIs.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])\n  id: Add(System.Uri,System.Byte[])\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Add(Uri, Byte[])\n  nameWithType: XmlPreloadedResolver.Add(Uri, Byte[])\n  fullName: XmlPreloadedResolver.Add(Uri, Byte[])\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.\n  syntax:\n    content: public void Add (Uri uri, byte[] value);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n    - id: value\n      type: System.Byte[]\n      description: A byte array with the data that corresponds to the provided URI.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> or <code>value</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)\n  id: Add(System.Uri,System.IO.Stream)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Add(Uri, Stream)\n  nameWithType: XmlPreloadedResolver.Add(Uri, Stream)\n  fullName: XmlPreloadedResolver.Add(Uri, Stream)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Adds a <xref href=\"System.IO.Stream\"></xref> to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.\n  syntax:\n    content: public void Add (Uri uri, System.IO.Stream value);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n    - id: value\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> with the data that corresponds to the provided URI.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> or <code>value</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)\n  id: Add(System.Uri,System.String)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Add(Uri, String)\n  nameWithType: XmlPreloadedResolver.Add(Uri, String)\n  fullName: XmlPreloadedResolver.Add(Uri, String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Adds a string with preloaded data to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.\n  syntax:\n    content: public void Add (Uri uri, string value);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n    - id: value\n      type: System.String\n      description: A `String` with the data that corresponds to the provided URI.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> or <code>value</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)\n  id: Add(System.Uri,System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Add(Uri, Byte[], Int32, Int32)\n  nameWithType: XmlPreloadedResolver.Add(Uri, Byte[], Int32, Int32)\n  fullName: XmlPreloadedResolver.Add(Uri, Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Adds a byte array to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store and maps it to a URI. If the store already contains a mapping for the same URI, the existing mapping is overridden.\n  syntax:\n    content: public void Add (Uri uri, byte[] value, int offset, int count);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that is being added to the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n    - id: value\n      type: System.Byte[]\n      description: A byte array with the data that corresponds to the provided URI.\n    - id: offset\n      type: System.Int32\n      description: The offset in the provided byte array where the data starts.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to read from the byte array, starting at the provided offset.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> or <code>value</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> or <code>count</code> is less than 0.  \\n  \\n -or-  \\n  \\n The length of the <code>value</code> minus <code>offset</code> is less than <code>count.</code>\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials\n  commentId: P:System.Xml.Resolvers.XmlPreloadedResolver.Credentials\n  id: Credentials\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: XmlPreloadedResolver.Credentials\n  fullName: XmlPreloadedResolver.Credentials\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Sets the credentials that are used to authenticate the underlying <xref href=\"System.Net.WebRequest\"></xref>.\n  syntax:\n    content: public override System.Net.ICredentials Credentials { set; }\n    return:\n      type: System.Net.ICredentials\n      description: The credentials that are used to authenticate the underlying web request.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)\n  id: GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: GetEntity(Uri, String, Type)\n  nameWithType: XmlPreloadedResolver.GetEntity(Uri, String, Type)\n  fullName: XmlPreloadedResolver.GetEntity(Uri, String, Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Maps a URI to an object that contains the actual resource.\n  remarks: The <xref:System.Xml.Resolvers.XmlPreloadedResolver> will first try to look up the resource in its store of preloaded data. If it cannot find it, it will call the fallback resolver's `GetEntity` method. If no fallback resolver was provided in the <xref:System.Xml.Resolvers.XmlPreloadedResolver> constructor, an exception is thrown.\n  syntax:\n    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.\n    - id: role\n      type: System.String\n      description: The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref href=\"System.IO.Stream\"></xref> objects and <xref href=\"System.IO.TextReader\"></xref> objects for URIs that were added as `String`. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"></xref> method to determine whether a certain `Type` is supported by this resolver.\n    return:\n      type: System.Object\n      description: A <xref href=\"System.IO.Stream\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object that corresponds to the actual source.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>absoluteUri</code> is `null`.\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: \"Cannot resolve URI passed in <code>absoluteUri</code>.  \\n  \\n -or-  \\n  \\n <code>ofObjectToReturn</code> is not of a supported type.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  id: GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: GetEntityAsync(Uri, String, Type)\n  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri, String, Type)\n  fullName: XmlPreloadedResolver.GetEntityAsync(Uri, String, Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Asynchronously maps a URI to an object that contains the actual resource.\n  syntax:\n    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.\n    - id: role\n      type: System.String\n      description: The current version of the .NET Framework for Silverlight does not use this parameter when resolving URIs. This parameter is provided for future extensibility purposes. For example, this parameter can be mapped to the xlink:role and used as an implementation-specific argument in other scenarios.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> supports <xref href=\"System.IO.Stream\"></xref> objects and <xref href=\"System.IO.TextReader\"></xref> objects for URIs that were added as `String`. If the requested type is not supported by the resolver, an exception will be thrown. Use the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\"></xref> method to determine whether a certain `Type` is supported by this resolver.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: A <xref href=\"System.IO.Stream\"></xref> or <xref href=\"System.IO.TextReader\"></xref> object that corresponds to the actual source.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris\n  commentId: P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris\n  id: PreloadedUris\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: PreloadedUris\n  nameWithType: XmlPreloadedResolver.PreloadedUris\n  fullName: XmlPreloadedResolver.PreloadedUris\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Gets a collection of preloaded URIs.\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Uri> PreloadedUris { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Uri}\n      description: The collection of preloaded URIs.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)\n  id: Remove(System.Uri)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: Remove(Uri)\n  nameWithType: XmlPreloadedResolver.Remove(Uri)\n  fullName: XmlPreloadedResolver.Remove(Uri)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Removes the data that corresponds to the URI from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref>.\n  remarks: No exception is thrown if the data does not exist in the store.\n  syntax:\n    content: public void Remove (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The URI of the data that should be removed from the <xref href=\"System.Xml.Resolvers.XmlPreloadedResolver\"></xref> store.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.Remove*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)\n  id: ResolveUri(System.Uri,System.String)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: ResolveUri(Uri, String)\n  nameWithType: XmlPreloadedResolver.ResolveUri(Uri, String)\n  fullName: XmlPreloadedResolver.ResolveUri(Uri, String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Resolves the absolute URI from the base and relative URIs.\n  syntax:\n    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: The base URI used to resolve the relative URI.\n    - id: relativeUri\n      type: System.String\n      description: The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.\n    return:\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> representing the absolute URI or `null` if the relative URI cannot be resolved.\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\n  commentId: M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\n  id: SupportsType(System.Uri,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  langs:\n  - csharp\n  name: SupportsType(Uri, Type)\n  nameWithType: XmlPreloadedResolver.SupportsType(Uri, Type)\n  fullName: XmlPreloadedResolver.SupportsType(Uri, Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml.Resolvers\n  summary: Determines whether the resolver supports other <xref href=\"System.Type\"></xref>s than just <xref href=\"System.IO.Stream\"></xref>.\n  syntax:\n    content: public override bool SupportsType (Uri absoluteUri, Type type);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The absolute URI to check.\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to return.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Type\"></xref> is supported; otherwise, `false`.'\n  overload: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>uri</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Xml.XmlResolver\n  parent: System.Xml\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlResolver\n  fullName: System.Xml.XmlResolver\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Xml.XmlException\n  parent: System.Xml\n  isExternal: false\n  name: XmlException\n  nameWithType: XmlException\n  fullName: System.Xml.XmlException\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver()\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver()\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver(XmlKnownDtds)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)\n- uid: System.Xml.Resolvers.XmlKnownDtds\n  parent: System.Xml.Resolvers\n  isExternal: false\n  name: XmlKnownDtds\n  nameWithType: XmlKnownDtds\n  fullName: System.Xml.Resolvers.XmlKnownDtds\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver(XmlResolver)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver(XmlResolver, XmlKnownDtds)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds)\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds)\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver, XmlKnownDtds, IEqualityComparer<Uri>)\n- uid: System.Collections.Generic.IEqualityComparer`1\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n- uid: System.Uri\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Collections.Generic.IEqualityComparer{System.Uri}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<Uri>\n  nameWithType: IEqualityComparer<Uri>\n  fullName: System.Collections.Generic.IEqualityComparer<System.Uri>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEqualityComparer`1\n    name: IEqualityComparer\n    nameWithType: IEqualityComparer\n    fullName: System.Collections.Generic.IEqualityComparer\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add(Uri, Byte[])\n  nameWithType: XmlPreloadedResolver.Add(Uri, Byte[])\n  fullName: XmlPreloadedResolver.Add(Uri, Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add(Uri, Stream)\n  nameWithType: XmlPreloadedResolver.Add(Uri, Stream)\n  fullName: XmlPreloadedResolver.Add(Uri, Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add(Uri, String)\n  nameWithType: XmlPreloadedResolver.Add(Uri, String)\n  fullName: XmlPreloadedResolver.Add(Uri, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add(Uri, Byte[], Int32, Int32)\n  nameWithType: XmlPreloadedResolver.Add(Uri, Byte[], Int32, Int32)\n  fullName: XmlPreloadedResolver.Add(Uri, Byte[], Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlPreloadedResolver.Credentials\n  fullName: XmlPreloadedResolver.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: GetEntity(Uri, String, Type)\n  nameWithType: XmlPreloadedResolver.GetEntity(Uri, String, Type)\n  fullName: XmlPreloadedResolver.GetEntity(Uri, String, Type)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: GetEntityAsync(Uri, String, Type)\n  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri, String, Type)\n  fullName: XmlPreloadedResolver.GetEntityAsync(Uri, String, Type)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Object>\n  nameWithType: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: PreloadedUris\n  nameWithType: XmlPreloadedResolver.PreloadedUris\n  fullName: XmlPreloadedResolver.PreloadedUris\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Uri}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Uri>\n  nameWithType: IEnumerable<Uri>\n  fullName: System.Collections.Generic.IEnumerable<System.Uri>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Remove(Uri)\n  nameWithType: XmlPreloadedResolver.Remove(Uri)\n  fullName: XmlPreloadedResolver.Remove(Uri)\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: ResolveUri(Uri, String)\n  nameWithType: XmlPreloadedResolver.ResolveUri(Uri, String)\n  fullName: XmlPreloadedResolver.ResolveUri(Uri, String)\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: SupportsType(Uri, Type)\n  nameWithType: XmlPreloadedResolver.SupportsType(Uri, Type)\n  fullName: XmlPreloadedResolver.SupportsType(Uri, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: XmlPreloadedResolver\n  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver\n  fullName: XmlPreloadedResolver.XmlPreloadedResolver\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Add\n  nameWithType: XmlPreloadedResolver.Add\n  fullName: XmlPreloadedResolver.Add\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlPreloadedResolver.Credentials\n  fullName: XmlPreloadedResolver.Credentials\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: GetEntity\n  nameWithType: XmlPreloadedResolver.GetEntity\n  fullName: XmlPreloadedResolver.GetEntity\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: GetEntityAsync\n  nameWithType: XmlPreloadedResolver.GetEntityAsync\n  fullName: XmlPreloadedResolver.GetEntityAsync\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: PreloadedUris\n  nameWithType: XmlPreloadedResolver.PreloadedUris\n  fullName: XmlPreloadedResolver.PreloadedUris\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: Remove\n  nameWithType: XmlPreloadedResolver.Remove\n  fullName: XmlPreloadedResolver.Remove\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: ResolveUri\n  nameWithType: XmlPreloadedResolver.ResolveUri\n  fullName: XmlPreloadedResolver.ResolveUri\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*\n  parent: System.Xml.Resolvers.XmlPreloadedResolver\n  isExternal: false\n  name: SupportsType\n  nameWithType: XmlPreloadedResolver.SupportsType\n  fullName: XmlPreloadedResolver.SupportsType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Resolvers/XmlPreloadedResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}