{"nodes":[{"content":"Specifies how new animations interact with any existing ones that are already applied to a property.","nodes":[{"pos":[0,100],"content":"Specifies how new animations interact with any existing ones that are already applied to a property.","nodes":[{"content":"Specifies how new animations interact with any existing ones that are already applied to a property.","pos":[0,100]}]}],"pos":[553,654],"yaml":true},{"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using Compose, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove the clocks automatically.  \n  \n To avoid performance issues when you apply a large number of clocks using Compose, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:  \n  \n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.  \n  \n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \n  \n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.  \n  \n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).","nodes":[{"pos":[0,406],"content":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using Compose, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove the clocks automatically.","nodes":[{"content":"When you apply a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property by using Compose, any <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove the clocks automatically.","pos":[0,406],"source":"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using Compose, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove the clocks automatically."}]},{"pos":[413,620],"content":"To avoid performance issues when you apply a large number of clocks using Compose, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:","nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using Compose, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:","pos":[0,207],"nodes":[{"content":"To avoid performance issues when you apply a large number of clocks using Compose, you should remove composing clocks from the animated property after they complete.","pos":[0,165]},{"content":"There are several ways to remove a clock:","pos":[166,207]}]}]},{"pos":[630,1162],"content":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.","nodes":[{"content":"To remove all clocks from a property, use the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.","pos":[0,389],"source":"To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object."},{"content":"Specify the property being animated as the first parameter, and <ph id=\"ph1\">`null`</ph> as the second.","pos":[390,475],"source":" Specify the property being animated as the first parameter, and `null` as the second."},{"content":"This will remove all animation clocks from the property.","pos":[476,532]}]},{"pos":[1172,2205],"content":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.","nodes":[{"content":"To remove a specific <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id=\"ph4\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id=\"ph5\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id=\"ph6\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.","pos":[0,447],"source":"To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>."},{"content":"This is typically done in the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.","pos":[448,558],"source":" This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock."},{"content":"Note that only root clocks can be controlled by a <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock returns <ph id=\"ph3\">`null`</ph>.","pos":[559,767],"source":" Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`."},{"content":"Note also that the <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be raised if the effective duration of the clock is forever.","pos":[768,916],"source":" Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be raised if the effective duration of the clock is forever."},{"content":"In that case, the user must determine when to call <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.","pos":[918,1033],"source":"  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>."}]},{"pos":[2212,2389],"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.","nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.","pos":[0,177],"nodes":[{"content":"This is primarily an issue for animations on objects that have a long lifetime.","pos":[0,79]},{"content":"When an object is garbage collected, its clocks will also be disconnected and garbage collected.","pos":[81,177]}]}]},{"pos":[2396,2563],"content":"For more information about clock objects, see <bpt id=\"p1\">[</bpt>Animation and Timing System Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.","source":"For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)."}],"pos":[665,3241],"yaml":true,"extradata":"MT"},{"content":"New animations are combined with existing animations by appending the new animations to the end of the composition chain.","nodes":[{"pos":[0,121],"content":"New animations are combined with existing animations by appending the new animations to the end of the composition chain.","nodes":[{"content":"New animations are combined with existing animations by appending the new animations to the end of the composition chain.","pos":[0,121]}]}],"pos":[4300,4422],"yaml":true},{"content":"New animations replace any existing animations on the properties to which they are applied.","nodes":[{"pos":[0,91],"content":"New animations replace any existing animations on the properties to which they are applied.","nodes":[{"content":"New animations replace any existing animations on the properties to which they are applied.","pos":[0,91]}]}],"pos":[5498,5590],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.HandoffBehavior\n  commentId: T:System.Windows.Media.Animation.HandoffBehavior\n  id: HandoffBehavior\n  children:\n  - System.Windows.Media.Animation.HandoffBehavior.Compose\n  - System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\n  langs:\n  - csharp\n  name: HandoffBehavior\n  nameWithType: HandoffBehavior\n  fullName: System.Windows.Media.Animation.HandoffBehavior\n  type: Enum\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Specifies how new animations interact with any existing ones that are already applied to a property.\n  remarks: \"When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using Compose, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system will not remove the clocks automatically.  \\n  \\n To avoid performance issues when you apply a large number of clocks using Compose, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:  \\n  \\n-   To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object. Specify the property being animated as the first parameter, and `null` as the second. This will remove all animation clocks from the property.  \\n  \\n-   To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>. This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock. Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`. Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event will not be raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  \\n  \\n This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks will also be disconnected and garbage collected.  \\n  \\n For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).\"\n  syntax:\n    content: public enum HandoffBehavior\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/HandoffBehavior.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.HandoffBehavior.Compose\n  commentId: F:System.Windows.Media.Animation.HandoffBehavior.Compose\n  id: Compose\n  parent: System.Windows.Media.Animation.HandoffBehavior\n  langs:\n  - csharp\n  name: Compose\n  nameWithType: HandoffBehavior.Compose\n  fullName: HandoffBehavior.Compose\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: New animations are combined with existing animations by appending the new animations to the end of the composition chain.\n  syntax:\n    content: Compose\n    return:\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/HandoffBehavior.xml\n- uid: System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\n  commentId: F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\n  id: SnapshotAndReplace\n  parent: System.Windows.Media.Animation.HandoffBehavior\n  langs:\n  - csharp\n  name: SnapshotAndReplace\n  nameWithType: HandoffBehavior.SnapshotAndReplace\n  fullName: HandoffBehavior.SnapshotAndReplace\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: New animations replace any existing animations on the properties to which they are applied.\n  syntax:\n    content: SnapshotAndReplace\n    return:\n      type: System.Windows.Media.Animation.HandoffBehavior\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/HandoffBehavior.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Windows.Media.Animation.HandoffBehavior.Compose\n  parent: System.Windows.Media.Animation.HandoffBehavior\n  isExternal: false\n  name: Compose\n  nameWithType: HandoffBehavior.Compose\n  fullName: HandoffBehavior.Compose\n- uid: System.Windows.Media.Animation.HandoffBehavior\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: HandoffBehavior\n  nameWithType: HandoffBehavior\n  fullName: System.Windows.Media.Animation.HandoffBehavior\n- uid: System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace\n  parent: System.Windows.Media.Animation.HandoffBehavior\n  isExternal: false\n  name: SnapshotAndReplace\n  nameWithType: HandoffBehavior.SnapshotAndReplace\n  fullName: HandoffBehavior.SnapshotAndReplace\n"}