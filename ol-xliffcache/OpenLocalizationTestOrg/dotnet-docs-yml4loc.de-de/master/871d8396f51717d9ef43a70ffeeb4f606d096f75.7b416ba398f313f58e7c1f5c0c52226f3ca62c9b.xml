{"nodes":[{"content":"Enumerates the members of a <xref href=\"System.Windows.FreezableCollection`1\"></xref>.","nodes":[{"pos":[0,86],"content":"Enumerates the members of a <ph id=\"ph1\">&lt;xref href=\"System.Windows.FreezableCollection`1\"&gt;&lt;/xref&gt;</ph>.","source":"Enumerates the members of a <xref href=\"System.Windows.FreezableCollection`1\"></xref>."}],"pos":[816,903],"yaml":true},{"content":"Gets a value that represents the current element in the collection.","nodes":[{"pos":[0,67],"content":"Gets a value that represents the current element in the collection.","nodes":[{"content":"Gets a value that represents the current element in the collection.","pos":[0,67]}]}],"pos":[2202,2270],"yaml":true},{"content":"The current element in the collection.","nodes":[{"pos":[0,38],"content":"The current element in the collection.","nodes":[{"content":"The current element in the collection.","pos":[0,38]}]}],"pos":[2364,2403],"yaml":true},{"content":"Advances the enumerator to the next element in the collection.","nodes":[{"pos":[0,62],"content":"Advances the enumerator to the next element in the collection.","nodes":[{"content":"Advances the enumerator to the next element in the collection.","pos":[0,62]}]}],"pos":[3486,3549],"yaml":true},{"content":"`true` if the enumerator successfully advanced to the next element in the collection; otherwise, `false`.","nodes":[{"pos":[0,105],"content":"<ph id=\"ph1\">`true`</ph> if the enumerator successfully advanced to the next element in the collection; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the enumerator successfully advanced to the next element in the collection; otherwise, `false`."}],"pos":[3674,3782],"yaml":true},{"content":"Resets the enumerator to its initial position.","nodes":[{"pos":[0,46],"content":"Resets the enumerator to its initial position.","nodes":[{"content":"Resets the enumerator to its initial position.","pos":[0,46]}]}],"pos":[4848,4895],"yaml":true},{"content":"The initial position is before the first element in the collection.","nodes":[{"pos":[0,67],"content":"The initial position is before the first element in the collection.","nodes":[{"content":"The initial position is before the first element in the collection.","pos":[0,67]}]}],"pos":[4906,4974],"yaml":true,"extradata":"MT"},{"content":"This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.","nodes":[{"pos":[0,165],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code."}],"pos":[6252,6418],"yaml":true},{"content":"This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.","nodes":[{"pos":[0,165],"content":"This member supports the <ph id=\"ph1\">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.","source":"This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code."}],"pos":[7739,7905],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.FreezableCollection`1.Enumerator\n  commentId: T:System.Windows.FreezableCollection`1.Enumerator\n  id: FreezableCollection`1.Enumerator\n  children:\n  - System.Windows.FreezableCollection`1.Enumerator.Current\n  - System.Windows.FreezableCollection`1.Enumerator.MoveNext\n  - System.Windows.FreezableCollection`1.Enumerator.Reset\n  - System.Windows.FreezableCollection`1.Enumerator.System#Collections#IEnumerator#Current\n  - System.Windows.FreezableCollection`1.Enumerator.System#IDisposable#Dispose\n  langs:\n  - csharp\n  name: FreezableCollection<T>.Enumerator\n  nameWithType: FreezableCollection<T>.Enumerator\n  fullName: System.Windows.FreezableCollection<T>.Enumerator\n  type: Struct\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Enumerates the members of a <xref href=\"System.Windows.FreezableCollection`1\"></xref>.\n  syntax:\n    content: 'public struct FreezableCollection<T>.Enumerator : System.Collections.Generic.IEnumerator<T> where T : DependencyObject'\n    typeParameters:\n    - id: T\n      description: ''\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.Generic.IEnumerator{T}\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Enumerator.Current\n  commentId: P:System.Windows.FreezableCollection`1.Enumerator.Current\n  id: Current\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: FreezableCollection<T>.Enumerator.Current\n  fullName: FreezableCollection<T>.Enumerator.Current\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Gets a value that represents the current element in the collection.\n  syntax:\n    content: public T Current { get; }\n    return:\n      type: T\n      description: The current element in the collection.\n  overload: System.Windows.FreezableCollection`1.Enumerator.Current*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Enumerator.MoveNext\n  commentId: M:System.Windows.FreezableCollection`1.Enumerator.MoveNext\n  id: MoveNext\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: FreezableCollection<T>.Enumerator.MoveNext()\n  fullName: FreezableCollection<T>.Enumerator.MoveNext()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Advances the enumerator to the next element in the collection.\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the enumerator successfully advanced to the next element in the collection; otherwise, `false`.'\n  overload: System.Windows.FreezableCollection`1.Enumerator.MoveNext*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Enumerator.Reset\n  commentId: M:System.Windows.FreezableCollection`1.Enumerator.Reset\n  id: Reset\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: FreezableCollection<T>.Enumerator.Reset()\n  fullName: FreezableCollection<T>.Enumerator.Reset()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: Resets the enumerator to its initial position.\n  remarks: The initial position is before the first element in the collection.\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  overload: System.Windows.FreezableCollection`1.Enumerator.Reset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Enumerator.System#Collections#IEnumerator#Current\n  commentId: P:System.Windows.FreezableCollection`1.Enumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  langs:\n  - csharp\n  name: IEnumerator.Current\n  nameWithType: FreezableCollection<T>.Enumerator.IEnumerator.Current\n  fullName: FreezableCollection<T>.Enumerator.IEnumerator.Current\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: ''\n  overload: System.Windows.FreezableCollection`1.Enumerator.System#Collections#IEnumerator#Current*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.FreezableCollection`1.Enumerator.System#IDisposable#Dispose\n  commentId: M:System.Windows.FreezableCollection`1.Enumerator.System#IDisposable#Dispose\n  id: System#IDisposable#Dispose\n  isEii: true\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  langs:\n  - csharp\n  name: IDisposable.Dispose()\n  nameWithType: FreezableCollection<T>.Enumerator.IDisposable.Dispose()\n  fullName: FreezableCollection<T>.Enumerator.IDisposable.Dispose()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  summary: This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.\n  syntax:\n    content: void IDisposable.Dispose ();\n    parameters: []\n  overload: System.Windows.FreezableCollection`1.Enumerator.System#IDisposable#Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Windows.FreezableCollection`1.Enumerator.Current\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: FreezableCollection<T>.Enumerator.Current\n  fullName: FreezableCollection<T>.Enumerator.Current\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Windows.FreezableCollection`1.Enumerator.MoveNext\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: FreezableCollection<T>.Enumerator.MoveNext()\n  fullName: FreezableCollection<T>.Enumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FreezableCollection`1.Enumerator.Reset\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: Reset()\n  nameWithType: FreezableCollection<T>.Enumerator.Reset()\n  fullName: FreezableCollection<T>.Enumerator.Reset()\n- uid: System.Windows.FreezableCollection`1.Enumerator.System#Collections#IEnumerator#Current\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: IEnumerator.Current\n  nameWithType: FreezableCollection<T>.Enumerator.IEnumerator.Current\n  fullName: FreezableCollection<T>.Enumerator.IEnumerator.Current\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FreezableCollection`1.Enumerator.System#IDisposable#Dispose\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: FreezableCollection<T>.Enumerator.IDisposable.Dispose()\n  fullName: FreezableCollection<T>.Enumerator.IDisposable.Dispose()\n- uid: System.Windows.FreezableCollection`1.Enumerator.Current*\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: FreezableCollection<T>.Enumerator.Current\n  fullName: FreezableCollection<T>.Enumerator.Current\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n- uid: System.Windows.FreezableCollection`1.Enumerator.MoveNext*\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: MoveNext\n  nameWithType: FreezableCollection<T>.Enumerator.MoveNext\n  fullName: FreezableCollection<T>.Enumerator.MoveNext\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n- uid: System.Windows.FreezableCollection`1.Enumerator.Reset*\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: Reset\n  nameWithType: FreezableCollection<T>.Enumerator.Reset\n  fullName: FreezableCollection<T>.Enumerator.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n- uid: System.Windows.FreezableCollection`1.Enumerator.System#Collections#IEnumerator#Current*\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: FreezableCollection<T>.Enumerator.System.Collections.IEnumerator.Current\n  fullName: FreezableCollection<T>.Enumerator.System.Collections.IEnumerator.Current\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n- uid: System.Windows.FreezableCollection`1.Enumerator.System#IDisposable#Dispose*\n  parent: System.Windows.FreezableCollection`1.Enumerator\n  isExternal: false\n  name: System.IDisposable.Dispose\n  nameWithType: FreezableCollection<T>.Enumerator.System.IDisposable.Dispose\n  fullName: FreezableCollection<T>.Enumerator.System.IDisposable.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/FreezableCollection`1+Enumerator.xml\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n"}