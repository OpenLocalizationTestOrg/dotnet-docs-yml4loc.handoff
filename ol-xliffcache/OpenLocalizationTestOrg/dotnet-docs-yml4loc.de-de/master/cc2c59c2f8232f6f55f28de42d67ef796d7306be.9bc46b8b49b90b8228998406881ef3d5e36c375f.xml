{"nodes":[{"content":"A specialty class that allows applications to call the <xref href=\"System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\"></xref> method on an Http handler chain.","nodes":[{"pos":[0,224],"content":"A specialty class that allows applications to call the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\"&gt;&lt;/xref&gt;</ph> method on an Http handler chain.","source":"A specialty class that allows applications to call the <xref href=\"System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\"></xref> method on an Http handler chain."}],"pos":[805,1030],"yaml":true},{"content":"This class is the base type for <xref:System.Net.Http.HttpClient> and other message originators.  \n  \n Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.","nodes":[{"pos":[0,96],"content":"This class is the base type for <xref:System.Net.Http.HttpClient> and other message originators.","nodes":[{"content":"This class is the base type for <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClient&gt;</ph> and other message originators.","pos":[0,96],"source":"This class is the base type for <xref:System.Net.Http.HttpClient> and other message originators."}]},{"pos":[103,277],"content":"Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.","nodes":[{"content":"Most applications that are connecting to a web site will use one of the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClient.SendAsync%2A&gt;</ph> methods on the <ph id=\"ph2\">&lt;xref:System.Net.Http.HttpClient&gt;</ph> class.","pos":[0,174],"source":"Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class."}]}],"pos":[1041,1323],"yaml":true,"extradata":"MT"},{"content":"Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>.","nodes":[{"pos":[0,163],"content":"Initializes an instance of a <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpMessageInvoker\"&gt;&lt;/xref&gt;</ph> class with a specific <ph id=\"ph2\">&lt;xref href=\"System.Net.Http.HttpMessageHandler\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>."}],"pos":[3334,3498],"yaml":true},{"content":"The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpMessageHandler\"&gt;&lt;/xref&gt;</ph> responsible for processing the HTTP response messages.","source":"The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages."}],"pos":[3693,3808],"yaml":true},{"content":"Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>.","nodes":[{"pos":[0,163],"content":"Initializes an instance of a <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpMessageInvoker\"&gt;&lt;/xref&gt;</ph> class with a specific <ph id=\"ph2\">&lt;xref href=\"System.Net.Http.HttpMessageHandler\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>."}],"pos":[5478,5642],"yaml":true},{"content":"The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages.","nodes":[{"pos":[0,114],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpMessageHandler\"&gt;&lt;/xref&gt;</ph> responsible for processing the HTTP response messages.","source":"The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages."}],"pos":[5858,5973],"yaml":true},{"content":"`true` if the inner handler should be disposed of by Dispose(), `false` if you intend to reuse the inner handler.","nodes":[{"pos":[0,113],"content":"<ph id=\"ph1\">`true`</ph> if the inner handler should be disposed of by Dispose(), <ph id=\"ph2\">`false`</ph> if you intend to reuse the inner handler.","source":"`true` if the inner handler should be disposed of by Dispose(), `false` if you intend to reuse the inner handler."}],"pos":[6044,6160],"yaml":true},{"content":"Releases the unmanaged resources and disposes of the managed resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref>.","nodes":[{"pos":[0,139],"content":"Releases the unmanaged resources and disposes of the managed resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpMessageInvoker\"&gt;&lt;/xref&gt;</ph>.","source":"Releases the unmanaged resources and disposes of the managed resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref>."}],"pos":[7562,7702],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> and optionally disposes of the managed resources.","nodes":[{"pos":[0,150],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.Http.HttpMessageInvoker\"&gt;&lt;/xref&gt;</ph> and optionally disposes of the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> and optionally disposes of the managed resources."}],"pos":[9241,9392],"yaml":true},{"content":"`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to releases only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources."}],"pos":[9546,9650],"yaml":true},{"content":"Send an HTTP request as an asynchronous operation.","nodes":[{"pos":[0,50],"content":"Send an HTTP request as an asynchronous operation.","nodes":[{"content":"Send an HTTP request as an asynchronous operation.","pos":[0,50]}]}],"pos":[11390,11441],"yaml":true},{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.  \n  \n Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.","nodes":[{"pos":[0,155],"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.","nodes":[{"content":"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.","pos":[0,155],"nodes":[{"content":"This operation will not block.","pos":[0,30]},{"content":"The returned <ph id=\"ph1\">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete once the entire response including content is read.","pos":[31,155],"source":" The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read."}]}]},{"pos":[162,336],"content":"Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.","nodes":[{"content":"Most applications that are connecting to a web site will use one of the <ph id=\"ph1\">&lt;xref:System.Net.Http.HttpClient.SendAsync%2A&gt;</ph> methods on the <ph id=\"ph2\">&lt;xref:System.Net.Http.HttpClient&gt;</ph> class.","pos":[0,174],"source":"Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class."}]}],"pos":[11452,11793],"yaml":true,"extradata":"MT"},{"content":"The HTTP request message to send.","nodes":[{"pos":[0,33],"content":"The HTTP request message to send.","nodes":[{"content":"The HTTP request message to send.","pos":[0,33]}]}],"pos":[12106,12140],"yaml":true},{"content":"The cancellation token to cancel operation.","nodes":[{"pos":[0,43],"content":"The cancellation token to cancel operation.","nodes":[{"content":"The cancellation token to cancel operation.","pos":[0,43]}]}],"pos":[12234,12278],"yaml":true},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[12386,12443],"yaml":true},{"content":"The <code>request</code> was `null`.","nodes":[{"pos":[0,36],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">request</ph><ept id=\"p1\">&lt;/code&gt;</ept> was <ph id=\"ph2\">`null`</ph>.","source":"The <code>request</code> was `null`."}],"pos":[12617,12654],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Http.HttpMessageInvoker\n  commentId: T:System.Net.Http.HttpMessageInvoker\n  id: HttpMessageInvoker\n  children:\n  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  - System.Net.Http.HttpMessageInvoker.Dispose\n  - System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  - System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: HttpMessageInvoker\n  nameWithType: HttpMessageInvoker\n  fullName: System.Net.Http.HttpMessageInvoker\n  type: Class\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: A specialty class that allows applications to call the <xref href=\"System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\"></xref> method on an Http handler chain.\n  remarks: \"This class is the base type for <xref:System.Net.Http.HttpClient> and other message originators.  \\n  \\n Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.\"\n  syntax:\n    content: 'public class HttpMessageInvoker : IDisposable'\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Net.Http.HttpClient\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  commentId: M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  id: '#ctor(System.Net.Http.HttpMessageHandler)'\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: HttpMessageInvoker(HttpMessageHandler)\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)\n  fullName: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>.\n  syntax:\n    content: public HttpMessageInvoker (System.Net.Http.HttpMessageHandler handler);\n    parameters:\n    - id: handler\n      type: System.Net.Http.HttpMessageHandler\n      description: The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages.\n  overload: System.Net.Http.HttpMessageInvoker.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  commentId: M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  id: '#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)'\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: HttpMessageInvoker(HttpMessageHandler, Boolean)\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler, Boolean)\n  fullName: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Initializes an instance of a <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> class with a specific <xref href=\"System.Net.Http.HttpMessageHandler\"></xref>.\n  syntax:\n    content: public HttpMessageInvoker (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);\n    parameters:\n    - id: handler\n      type: System.Net.Http.HttpMessageHandler\n      description: The <xref href=\"System.Net.Http.HttpMessageHandler\"></xref> responsible for processing the HTTP response messages.\n    - id: disposeHandler\n      type: System.Boolean\n      description: '`true` if the inner handler should be disposed of by Dispose(), `false` if you intend to reuse the inner handler.'\n  overload: System.Net.Http.HttpMessageInvoker.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpMessageInvoker.Dispose\n  commentId: M:System.Net.Http.HttpMessageInvoker.Dispose\n  id: Dispose\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: HttpMessageInvoker.Dispose()\n  fullName: HttpMessageInvoker.Dispose()\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Releases the unmanaged resources and disposes of the managed resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref>.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Net.Http.HttpMessageInvoker.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  commentId: M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: HttpMessageInvoker.Dispose(Boolean)\n  fullName: HttpMessageInvoker.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Net.Http.HttpMessageInvoker\"></xref> and optionally disposes of the managed resources.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.'\n  overload: System.Net.Http.HttpMessageInvoker.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  commentId: M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpMessageInvoker\n  langs:\n  - csharp\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  nameWithType: HttpMessageInvoker.SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: HttpMessageInvoker.SendAsync(HttpRequestMessage, CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Http\n  - netstandard\n  namespace: System.Net.Http\n  summary: Send an HTTP request as an asynchronous operation.\n  remarks: \"This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.  \\n  \\n Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class.\"\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: request\n      type: System.Net.Http.HttpRequestMessage\n      description: The HTTP request message to send.\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: The cancellation token to cancel operation.\n    return:\n      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Http.HttpMessageInvoker.SendAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>request</code> was `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: HttpMessageInvoker(HttpMessageHandler)\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)\n  fullName: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)\n- uid: System.Net.Http.HttpMessageHandler\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpMessageHandler\n  nameWithType: HttpMessageHandler\n  fullName: System.Net.Http.HttpMessageHandler\n- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: HttpMessageInvoker(HttpMessageHandler, Boolean)\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler, Boolean)\n  fullName: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Http.HttpMessageInvoker.Dispose\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: Dispose()\n  nameWithType: HttpMessageInvoker.Dispose()\n  fullName: HttpMessageInvoker.Dispose()\n- uid: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: HttpMessageInvoker.Dispose(Boolean)\n  fullName: HttpMessageInvoker.Dispose(Boolean)\n- uid: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: SendAsync(HttpRequestMessage, CancellationToken)\n  nameWithType: HttpMessageInvoker.SendAsync(HttpRequestMessage, CancellationToken)\n  fullName: HttpMessageInvoker.SendAsync(HttpRequestMessage, CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Net.Http.HttpResponseMessage\n  name: HttpResponseMessage\n  nameWithType: HttpResponseMessage\n  fullName: System.Net.Http.HttpResponseMessage\n- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<HttpResponseMessage>\n  nameWithType: Task<HttpResponseMessage>\n  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.Http.HttpResponseMessage\n    name: HttpResponseMessage\n    nameWithType: HttpResponseMessage\n    fullName: System.Net.Http.HttpResponseMessage\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.Http.HttpRequestMessage\n  parent: System.Net.Http\n  isExternal: false\n  name: HttpRequestMessage\n  nameWithType: HttpRequestMessage\n  fullName: System.Net.Http.HttpRequestMessage\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Net.Http.HttpMessageInvoker.#ctor*\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: HttpMessageInvoker\n  nameWithType: HttpMessageInvoker.HttpMessageInvoker\n  fullName: HttpMessageInvoker.HttpMessageInvoker\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml\n- uid: System.Net.Http.HttpMessageInvoker.Dispose*\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: Dispose\n  nameWithType: HttpMessageInvoker.Dispose\n  fullName: HttpMessageInvoker.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml\n- uid: System.Net.Http.HttpMessageInvoker.SendAsync*\n  parent: System.Net.Http.HttpMessageInvoker\n  isExternal: false\n  name: SendAsync\n  nameWithType: HttpMessageInvoker.SendAsync\n  fullName: HttpMessageInvoker.SendAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}