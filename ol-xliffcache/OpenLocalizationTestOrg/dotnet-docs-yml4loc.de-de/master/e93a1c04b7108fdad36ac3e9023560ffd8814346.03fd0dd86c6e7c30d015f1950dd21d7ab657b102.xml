{"nodes":[{"content":"Provides methods that help you use X.509 v.3 certificates.","nodes":[{"pos":[0,58],"content":"Provides methods that help you use X.509 v.3 certificates.","nodes":[{"content":"Provides methods that help you use X.509 v.3 certificates.","pos":[0,58]}]}],"pos":[6573,6632],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.  \n  \n For most scenarios, you should use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class instead.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.  \n>   \n>  For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.","nodes":[{"pos":[0,65],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]},{"pos":[72,195],"content":"For most scenarios, you should use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class instead.","nodes":[{"content":"For most scenarios, you should use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ph> class instead.","pos":[0,123],"source":"For most scenarios, you should use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class instead."}]},{"pos":[203,794],"content":"[!IMPORTANT]\n Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","leadings":["","> "],"nodes":[{"content":" Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic.","pos":[13,589],"nodes":[{"content":"Starting with the <ph id=\"ph1\">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, this type implements the <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface.","pos":[1,127],"source":" Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface."},{"content":"When you have finished using the type, you should dispose of it either directly or indirectly.","pos":[128,222]},{"content":"To dispose of the type directly, call its <ph id=\"ph1\">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id=\"ph2\">`try`</ph><ph id=\"ph3\">/</ph><ph id=\"ph4\">`catch`</ph> block.","pos":[223,334],"source":" To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block."},{"content":"To dispose of it indirectly, use a language construct such as <ph id=\"ph1\">`using`</ph> (in C#) or <ph id=\"ph2\">`Using`</ph> (in Visual Basic).","pos":[335,442],"source":" To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic)."},{"content":"For more information, see the \"Using an Object that Implements IDisposable\" section in the <ph id=\"ph1\">&lt;xref:System.IDisposable&gt;</ph> interface topic.","pos":[443,576],"source":" For more information, see the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."}]}]},{"pos":[805,1085],"content":"For apps that target the <ph id=\"ph1\">[!INCLUDE[net_v452](~/includes/net-v452-md.md)]</ph> and earlier versions, the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> class does not implement the <ph id=\"ph3\">&lt;xref:System.IDisposable&gt;</ph> interface and therefore does not have a <ph id=\"ph4\">`Dispose`</ph> method.","source":"For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method."}],"pos":[6643,7740],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class."}],"pos":[10746,10870],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"pos":[0,65],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]}],"pos":[10881,10947],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a certificate file name, a password, and a key storage flag.","nodes":[{"pos":[0,189],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using a certificate file name, a password, and a key storage flag.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a certificate file name, a password, and a key storage flag."}],"pos":[13075,13265],"yaml":true},{"content":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,337],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`fileName`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[13276,13614],"yaml":true,"extradata":"MT"},{"content":"The name of a certificate file.","nodes":[{"pos":[0,31],"content":"The name of a certificate file.","nodes":[{"content":"The name of a certificate file.","pos":[0,31]}]}],"pos":[13881,13913],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[13992,14052],"yaml":true},{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"pos":[0,101],"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","pos":[0,101]}]}],"pos":[14175,14277],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[14520,14712],"yaml":true},{"content":"The <code>fileName</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileName</code> parameter is `null`."}],"pos":[14806,14853],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array, a password, and a key storage flag.","nodes":[{"pos":[0,178],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using a byte array, a password, and a key storage flag.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array, a password, and a key storage flag."}],"pos":[16567,16746],"yaml":true},{"content":"This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.  Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).  \n  \n The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how the private key is imported.  \n  \n ASN.1 DER is the only certificate format supported by this class.  \n  \n> [!IMPORTANT]\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \n  \n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,369],"content":"This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.  Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).","nodes":[{"content":"This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.  Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).","pos":[0,369],"nodes":[{"content":"This constructor creates a new <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.","pos":[0,208],"source":"This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a byte array, a password that is needed to access the certificate data, and a key storage flag."},{"content":"Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).","pos":[210,369]}]}]},{"pos":[376,524],"content":"The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how the private key is imported.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags&gt;</ph> value can be used to control where and how the private key is imported.","pos":[0,148],"source":"The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how the private key is imported."}]},{"pos":[531,596],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]},{"pos":[604,909],"content":"[!IMPORTANT]\n Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]},{"pos":[916,1252],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`rawData`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[16757,18021],"yaml":true,"extradata":"MT"},{"content":"A byte array containing data from an X.509 certificate.","nodes":[{"pos":[0,55],"content":"A byte array containing data from an X.509 certificate.","nodes":[{"content":"A byte array containing data from an X.509 certificate.","pos":[0,55]}]}],"pos":[18264,18320],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[18384,18444],"yaml":true},{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"pos":[0,101],"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","pos":[0,101]}]}],"pos":[18567,18669],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[18912,19104],"yaml":true},{"content":"The <code>rawData</code> parameter is `null`.  \n  \n -or-  \n  \n The length of the <code>rawData</code> parameter is 0.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rawData</code> parameter is `null`."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,117],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is 0.","source":"The length of the <code>rawData</code> parameter is 0."}],"pos":[19198,19322],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array, a password, and a key storage flag.","nodes":[{"pos":[0,178],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using a byte array, a password, and a key storage flag.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array, a password, and a key storage flag."}],"pos":[21283,21462],"yaml":true},{"content":"Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).  \n  \n ASN.1 DER is the only certificate format supported by this class.  \n  \n> [!IMPORTANT]\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \n  \n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,159],"content":"Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).","nodes":[{"content":"Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).","pos":[0,159]}]},{"pos":[166,231],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]},{"pos":[239,544],"content":"[!IMPORTANT]\n Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]},{"pos":[551,887],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`rawData`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[21473,22370],"yaml":true,"extradata":"MT"},{"content":"A byte array that contains data from an X.509 certificate.","nodes":[{"pos":[0,58],"content":"A byte array that contains data from an X.509 certificate.","nodes":[{"content":"A byte array that contains data from an X.509 certificate.","pos":[0,58]}]}],"pos":[22635,22694],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[22773,22833],"yaml":true},{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"pos":[0,101],"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","pos":[0,101]}]}],"pos":[22956,23058],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[23301,23493],"yaml":true},{"content":"The <code>rawData</code> parameter is `null`.  \n  \n -or-  \n  \n The length of the <code>rawData</code> parameter is 0.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rawData</code> parameter is `null`."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,117],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is 0.","source":"The length of the <code>rawData</code> parameter is 0."}],"pos":[23587,23711],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using the name of a PKCS7 signed file and a password to access the certificate.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using the name of a PKCS7 signed file and a password to access the certificate.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using the name of a PKCS7 signed file and a password to access the certificate."}],"pos":[25164,25367],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.  \n  \n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,175],"content":"ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.","pos":[0,175],"nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]},{"content":"Calling this constructor with the correct password decrypts the private key and saves it to a key container.","pos":[67,175]}]}]},{"pos":[182,519],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`fileName`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[25378,25902],"yaml":true,"extradata":"MT"},{"content":"The name of a PKCS7 signed file.","nodes":[{"pos":[0,32],"content":"The name of a PKCS7 signed file.","nodes":[{"content":"The name of a PKCS7 signed file.","pos":[0,32]}]}],"pos":[26064,26097],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[26161,26221],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[26464,26656],"yaml":true},{"content":"The <code>fileName</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileName</code> parameter is `null`."}],"pos":[26750,26797],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a certificate file name and a password.","nodes":[{"pos":[0,168],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using a certificate file name and a password.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a certificate file name and a password."}],"pos":[28497,28666],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.  \n  \n> [!IMPORTANT]\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \n  \n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,175],"content":"ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.","pos":[0,175],"nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]},{"content":"Calling this constructor with the correct password decrypts the private key and saves it to a key container.","pos":[67,175]}]}]},{"pos":[183,488],"content":"[!IMPORTANT]\n Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]},{"pos":[495,832],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`fileName`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[28677,29517],"yaml":true,"extradata":"MT"},{"content":"The name of a certificate file.","nodes":[{"pos":[0,31],"content":"The name of a certificate file.","nodes":[{"content":"The name of a certificate file.","pos":[0,31]}]}],"pos":[29701,29733],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[29812,29872],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[30115,30307],"yaml":true},{"content":"The <code>fileName</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileName</code> parameter is `null`."}],"pos":[30401,30448],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object and a <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure.","nodes":[{"pos":[0,289],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using a <ph id=\"ph2\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object and a <ph id=\"ph3\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> structure.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object and a <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure."}],"pos":[32159,32449],"yaml":true},{"content":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that describes serialization information.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> object that describes serialization information.","source":"A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that describes serialization information."}],"pos":[32714,32833],"yaml":true},{"content":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure that describes how serialization should be performed.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> structure that describes how serialization should be performed.","source":"A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure that describes how serialization should be performed."}],"pos":[32928,33061],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[33304,33496],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using the name of a PKCS7 signed file, a password to access the certificate, and a key storage flag.","nodes":[{"pos":[0,223],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using the name of a PKCS7 signed file, a password to access the certificate, and a key storage flag.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using the name of a PKCS7 signed file, a password to access the certificate, and a key storage flag."}],"pos":[35210,35434],"yaml":true},{"content":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,337],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`fileName`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[35445,35783],"yaml":true,"extradata":"MT"},{"content":"The name of a PKCS7 signed file.","nodes":[{"pos":[0,32],"content":"The name of a PKCS7 signed file.","nodes":[{"content":"The name of a PKCS7 signed file.","pos":[0,32]}]}],"pos":[36028,36061],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[36125,36185],"yaml":true},{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"pos":[0,101],"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","pos":[0,101]}]}],"pos":[36308,36410],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[36653,36845],"yaml":true},{"content":"The <code>fileName</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileName</code> parameter is `null`."}],"pos":[36939,36986],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array and a password.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using a byte array and a password.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array and a password."}],"pos":[38686,38844],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.  \n  \n> [!IMPORTANT]\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \n  \n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,65],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]},{"pos":[73,378],"content":"[!IMPORTANT]\n Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]},{"pos":[385,721],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`rawData`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[38855,39584],"yaml":true,"extradata":"MT"},{"content":"A byte array that contains data from an X.509 certificate.","nodes":[{"pos":[0,58],"content":"A byte array that contains data from an X.509 certificate.","nodes":[{"content":"A byte array that contains data from an X.509 certificate.","pos":[0,58]}]}],"pos":[39766,39825],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[39904,39964],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[40207,40399],"yaml":true},{"content":"The <code>rawData</code> parameter is `null`.  \n  \n -or-  \n  \n The length of the <code>rawData</code> parameter is 0.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rawData</code> parameter is `null`."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,117],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is 0.","source":"The length of the <code>rawData</code> parameter is 0."}],"pos":[40493,40617],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using the name of a PKCS7 signed file.","nodes":[{"pos":[0,161],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using the name of a PKCS7 signed file.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using the name of a PKCS7 signed file."}],"pos":[42004,42166],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.  \n  \n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,65],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]},{"pos":[72,409],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`fileName`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[42177,42591],"yaml":true,"extradata":"MT"},{"content":"The name of a PKCS7 signed file.","nodes":[{"pos":[0,32],"content":"The name of a PKCS7 signed file.","nodes":[{"content":"The name of a PKCS7 signed file.","pos":[0,32]}]}],"pos":[43471,43504],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[43747,43939],"yaml":true},{"content":"The <code>fileName</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileName</code> parameter is `null`."}],"pos":[44033,44080],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using another <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class.","nodes":[{"pos":[0,226],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using another <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using another <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class."}],"pos":[45822,46049],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"pos":[0,65],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]}],"pos":[46060,46126],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class from which to initialize this class.","nodes":[{"pos":[0,127],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class from which to initialize this class.","source":"A <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class from which to initialize this class."}],"pos":[46366,46494],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[46737,46929],"yaml":true},{"content":"The value of the <code>cert</code> parameter is `null`.","nodes":[{"pos":[0,55],"content":"The value of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">cert</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The value of the <code>cert</code> parameter is `null`."}],"pos":[47031,47087],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a handle to an unmanaged `PCCERT_CONTEXT` structure.","nodes":[{"pos":[0,181],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using a handle to an unmanaged <ph id=\"ph2\">`PCCERT_CONTEXT`</ph> structure.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a handle to an unmanaged `PCCERT_CONTEXT` structure."}],"pos":[48474,48656],"yaml":true},{"content":"This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.  \n  \n> [!IMPORTANT]\n>  This constructor creates a copy of the certificate context. Do not assume that the context structure you passed to the constructor is valid; it may have been released. You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.","nodes":[{"pos":[0,196],"content":"This constructor creates a new <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> object using a handle for the Microsoft Cryptographic API certificate context, <ph id=\"ph2\">`PCCERT_CONTEXT`</ph>.","source":"This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`."},{"pos":[204,671],"content":"[!IMPORTANT]\n This constructor creates a copy of the certificate context. Do not assume that the context structure you passed to the constructor is valid; it may have been released. You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.","leadings":["","> "],"nodes":[{"content":" This constructor creates a copy of the certificate context. Do not assume that the context structure you passed to the constructor is valid; it may have been released. You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.","pos":[13,465],"nodes":[{"content":"This constructor creates a copy of the certificate context.","pos":[1,60]},{"content":"Do not assume that the context structure you passed to the constructor is valid; it may have been released.","pos":[61,168]},{"content":"You can get a copy of the current <ph id=\"ph1\">`PCCERT_CONTEXT`</ph> structure from the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A&gt;</ph> property, but it is valid only during the lifetime of the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> object.","pos":[169,452],"source":" You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object."}]}]}],"pos":[48667,49344],"yaml":true,"extradata":"MT"},{"content":"A handle to an unmanaged `PCCERT_CONTEXT` structure.","nodes":[{"pos":[0,52],"content":"A handle to an unmanaged <ph id=\"ph1\">`PCCERT_CONTEXT`</ph> structure.","source":"A handle to an unmanaged `PCCERT_CONTEXT` structure."}],"pos":[49485,49538],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[49781,49973],"yaml":true},{"content":"The handle parameter does not represent a valid `PCCERT_CONTEXT` structure.","nodes":[{"pos":[0,75],"content":"The handle parameter does not represent a valid <ph id=\"ph1\">`PCCERT_CONTEXT`</ph> structure.","source":"The handle parameter does not represent a valid `PCCERT_CONTEXT` structure."}],"pos":[50067,50143],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class defined from a sequence of bytes representing an X.509v3 certificate.","nodes":[{"pos":[0,192],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class defined from a sequence of bytes representing an X.509v3 certificate.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class defined from a sequence of bytes representing an X.509v3 certificate."}],"pos":[51714,51907],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.  \n  \n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `data`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,65],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]},{"pos":[72,405],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`data`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `data`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[51918,52328],"yaml":true,"extradata":"MT"},{"content":"A byte array containing data from an X.509 certificate.","nodes":[{"pos":[0,55],"content":"A byte array containing data from an X.509 certificate.","nodes":[{"content":"A byte array containing data from an X.509 certificate.","pos":[0,55]}]}],"pos":[53381,53437],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[53680,53872],"yaml":true},{"content":"The <code>rawData</code> parameter is `null`.  \n  \n -or-  \n  \n The length of the <code>rawData</code> parameter is 0.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rawData</code> parameter is `null`."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,117],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is 0.","source":"The length of the <code>rawData</code> parameter is 0."}],"pos":[53966,54090],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array and a password.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> class using a byte array and a password.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array and a password."}],"pos":[55727,55885],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.  \n  \n> [!IMPORTANT]\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \n  \n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.","nodes":[{"pos":[0,65],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]},{"pos":[73,378],"content":"[!IMPORTANT]\n Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]},{"pos":[385,721],"content":"If you create an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> certificate by specifying a PKCS7 signed file store for <ph id=\"ph2\">`rawData`</ph>, the <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> is created for the certificate that signed the store rather than for any of the certificates within the store.","source":"If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store."}],"pos":[55896,56625],"yaml":true,"extradata":"MT"},{"content":"A byte array containing data from an X.509 certificate.","nodes":[{"pos":[0,55],"content":"A byte array containing data from an X.509 certificate.","nodes":[{"content":"A byte array containing data from an X.509 certificate.","pos":[0,55]}]}],"pos":[56785,56841],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[56905,56965],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[57208,57400],"yaml":true},{"content":"The <code>rawData</code> parameter is `null`.  \n  \n -or-  \n  \n The length of the <code>rawData</code> parameter is 0.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rawData</code> parameter is `null`."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,117],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is 0.","source":"The length of the <code>rawData</code> parameter is 0."}],"pos":[57494,57618],"yaml":true},{"content":"Creates an X.509v3 certificate from the specified PKCS7 signed file.","nodes":[{"pos":[0,68],"content":"Creates an X.509v3 certificate from the specified PKCS7 signed file.","nodes":[{"content":"Creates an X.509v3 certificate from the specified PKCS7 signed file.","pos":[0,68]}]}],"pos":[59230,59299],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.  \n  \n> [!NOTE]\n>  The certificate file is not restricted to .cerfiles. Any PKCS7 signed file can be used, including an Authenticode signed .pfx file.","nodes":[{"pos":[0,65],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]},{"pos":[73,215],"content":"[!NOTE]\n The certificate file is not restricted to .cerfiles. Any PKCS7 signed file can be used, including an Authenticode signed .pfx file.","leadings":["","> "],"nodes":[{"content":" The certificate file is not restricted to .cerfiles. Any PKCS7 signed file can be used, including an Authenticode signed .pfx file.","pos":[8,140],"nodes":[{"content":"The certificate file is not restricted to .cerfiles.","pos":[1,53]},{"content":"Any PKCS7 signed file can be used, including an Authenticode signed .pfx file.","pos":[54,132]}]}]}],"pos":[59310,59531],"yaml":true,"extradata":"MT"},{"content":"The path of the PKCS7 signed file from which to create the X.509 certificate.","nodes":[{"pos":[0,77],"content":"The path of the PKCS7 signed file from which to create the X.509 certificate.","nodes":[{"content":"The path of the PKCS7 signed file from which to create the X.509 certificate.","pos":[0,77]}]}],"pos":[60336,60414],"yaml":true},{"content":"The newly created X.509 certificate.","nodes":[{"pos":[0,36],"content":"The newly created X.509 certificate.","nodes":[{"content":"The newly created X.509 certificate.","pos":[0,36]}]}],"pos":[60519,60556],"yaml":true},{"content":"The <code>filename</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">filename</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>filename</code> parameter is `null`."}],"pos":[60758,60805],"yaml":true},{"content":"Creates an X.509v3 certificate from the specified signed file.","nodes":[{"pos":[0,62],"content":"Creates an X.509v3 certificate from the specified signed file.","nodes":[{"content":"Creates an X.509v3 certificate from the specified signed file.","pos":[0,62]}]}],"pos":[62245,62308],"yaml":true},{"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"pos":[0,65],"content":"ASN.1 DER is the only certificate format supported by this class.","nodes":[{"content":"ASN.1 DER is the only certificate format supported by this class.","pos":[0,65]}]}],"pos":[62319,62385],"yaml":true,"extradata":"MT"},{"content":"The path of the signed file from which to create the X.509 certificate.","nodes":[{"pos":[0,71],"content":"The path of the signed file from which to create the X.509 certificate.","nodes":[{"content":"The path of the signed file from which to create the X.509 certificate.","pos":[0,71]}]}],"pos":[62604,62676],"yaml":true},{"content":"The newly created X.509 certificate.","nodes":[{"pos":[0,36],"content":"The newly created X.509 certificate.","nodes":[{"content":"The newly created X.509 certificate.","pos":[0,36]}]}],"pos":[62781,62818],"yaml":true},{"content":"Releases all of the unmanaged resources used by this <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,182],"content":"Releases all of the unmanaged resources used by this <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases all of the unmanaged resources used by this <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> and optionally releases the managed resources."}],"pos":[64299,64482],"yaml":true},{"content":"> [!NOTE]\n>  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.","nodes":[{"pos":[2,406],"content":"[!NOTE]\n <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> implements the <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface starting with the <ph id=\"ph3\">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in previous versions of the .NET Framework, the <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> class does not implement this interface, and therefore the <ph id=\"ph5\">`Dispose`</ph> method does not exist.","pos":[9,402],"source":" <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist."}]}],"pos":[64493,64912],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[65066,65169],"yaml":true},{"content":"Releases all resources used by the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.","nodes":[{"pos":[0,133],"content":"Releases all resources used by the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object.","source":"Releases all resources used by the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object."}],"pos":[66618,66752],"yaml":true},{"content":"> [!NOTE]\n>  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.","nodes":[{"pos":[2,406],"content":"[!NOTE]\n <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.","leadings":["","> "],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> implements the <ph id=\"ph2\">&lt;xref:System.IDisposable&gt;</ph> interface starting with the <ph id=\"ph3\">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>; in previous versions of the .NET Framework, the <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> class does not implement this interface, and therefore the <ph id=\"ph5\">`Dispose`</ph> method does not exist.","pos":[9,402],"source":" <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist."}]}],"pos":[66763,67182],"yaml":true,"extradata":"MT"},{"content":"Compares two <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> objects for equality.","nodes":[{"pos":[0,117],"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> objects for equality.","source":"Compares two <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> objects for equality."}],"pos":[68754,68872],"yaml":true},{"content":"Two objects are considered equal if they are <xref:System.Security.Cryptography.X509Certificates.X509Certificate> objects and they have the same issuer and serial number.","nodes":[{"pos":[0,170],"content":"Two objects are considered equal if they are <xref:System.Security.Cryptography.X509Certificates.X509Certificate> objects and they have the same issuer and serial number.","nodes":[{"content":"Two objects are considered equal if they are <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> objects and they have the same issuer and serial number.","pos":[0,170],"source":"Two objects are considered equal if they are <xref:System.Security.Cryptography.X509Certificates.X509Certificate> objects and they have the same issuer and serial number."}]}],"pos":[68883,69054],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to compare to the current object.","nodes":[{"pos":[0,126],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object to compare to the current object.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to compare to the current object."}],"pos":[69760,69887],"yaml":true},{"content":"`true` if the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object is equal to the object specified by the <code>other</code> parameter; otherwise, `false`.","nodes":[{"pos":[0,201],"content":"<ph id=\"ph1\">`true`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object is equal to the object specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object is equal to the object specified by the <code>other</code> parameter; otherwise, `false`."}],"pos":[69945,70149],"yaml":true},{"content":"Compares two <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> objects for equality.","nodes":[{"pos":[0,117],"content":"Compares two <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> objects for equality.","source":"Compares two <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> objects for equality."}],"pos":[72034,72152],"yaml":true},{"content":"Two <xref:System.Security.Cryptography.X509Certificates.X509Certificate> objects are considered equal if they have the same issuer and serial number.","nodes":[{"pos":[0,149],"content":"Two <xref:System.Security.Cryptography.X509Certificates.X509Certificate> objects are considered equal if they have the same issuer and serial number.","nodes":[{"content":"Two <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> objects are considered equal if they have the same issuer and serial number.","pos":[0,149],"source":"Two <xref:System.Security.Cryptography.X509Certificates.X509Certificate> objects are considered equal if they have the same issuer and serial number."}]}],"pos":[72163,72313],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to compare to the current object.","nodes":[{"pos":[0,126],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object to compare to the current object.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to compare to the current object."}],"pos":[73058,73185],"yaml":true},{"content":"`true` if the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object is equal to the object specified by the <code>other</code> parameter; otherwise, `false`.","nodes":[{"pos":[0,201],"content":"<ph id=\"ph1\">`true`</ph> if the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object is equal to the object specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object is equal to the object specified by the <code>other</code> parameter; otherwise, `false`."}],"pos":[73243,73447],"yaml":true},{"content":"Exports the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to a byte array in a format described by one of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values.","nodes":[{"pos":[0,252],"content":"Exports the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object to a byte array in a format described by one of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"&gt;&lt;/xref&gt;</ph> values.","source":"Exports the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to a byte array in a format described by one of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values."}],"pos":[75257,75510],"yaml":true},{"content":"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.","nodes":[{"pos":[0,498],"content":"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.","nodes":[{"content":"The <ph id=\"ph1\">`contentType`</ph> parameter accepts only the following values of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType&gt;</ph> enumeration: <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12&gt;</ph>.","pos":[0,391],"source":"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>."},{"content":"Passing any other value causes a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> to be thrown.","pos":[393,498],"source":"  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown."}]}],"pos":[75521,76022],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values that describes how to format the output data.","nodes":[{"pos":[0,146],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"&gt;&lt;/xref&gt;</ph> values that describes how to format the output data.","source":"One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values that describes how to format the output data."}],"pos":[77265,77412],"yaml":true},{"content":"An array of bytes that represents the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.","nodes":[{"pos":[0,136],"content":"An array of bytes that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object.","source":"An array of bytes that represents the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object."}],"pos":[77469,77606],"yaml":true},{"content":"A value other than <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\"></xref>, <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\"></xref>, or <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\"></xref> was passed to the <code>contentType</code> parameter.  \n  \n -or-  \n  \n The certificate could not be exported.","nodes":[{"pos":[0,353],"content":"A value other than <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\"&gt;&lt;/xref&gt;</ph> was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">contentType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A value other than <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\"></xref>, <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\"></xref>, or <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\"></xref> was passed to the <code>contentType</code> parameter."},{"pos":[360,364],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[371,409],"content":"The certificate could not be exported.","nodes":[{"content":"The certificate could not be exported.","pos":[0,38]}]}],"pos":[77850,78272],"yaml":true},{"content":"Exports the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to a byte array using the specified format and a password.","nodes":[{"pos":[0,168],"content":"Exports the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object to a byte array using the specified format and a password.","source":"Exports the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to a byte array using the specified format and a password."}],"pos":[80187,80356],"yaml":true},{"content":"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.  \n  \n> [!IMPORTANT]\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","nodes":[{"pos":[0,498],"content":"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.","nodes":[{"content":"The <ph id=\"ph1\">`contentType`</ph> parameter accepts only the following values of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType&gt;</ph> enumeration: <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12&gt;</ph>.","pos":[0,391],"source":"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>."},{"content":"Passing any other value causes a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> to be thrown.","pos":[393,498],"source":"  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown."}]},{"pos":[506,811],"content":"[!IMPORTANT]\n Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]}],"pos":[80367,81184],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values that describes how to format the output data.","nodes":[{"pos":[0,146],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"&gt;&lt;/xref&gt;</ph> values that describes how to format the output data.","source":"One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values that describes how to format the output data."}],"pos":[81483,81630],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[81709,81769],"yaml":true},{"content":"A byte array that represents the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.","nodes":[{"pos":[0,131],"content":"A byte array that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object.","source":"A byte array that represents the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object."}],"pos":[81826,81958],"yaml":true},{"content":"A value other than <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\"></xref>, <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\"></xref>, or <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\"></xref> was passed to the <code>contentType</code> parameter.  \n  \n -or-  \n  \n The certificate could not be exported.","nodes":[{"pos":[0,353],"content":"A value other than <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\"&gt;&lt;/xref&gt;</ph> was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">contentType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A value other than <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\"></xref>, <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\"></xref>, or <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\"></xref> was passed to the <code>contentType</code> parameter."},{"pos":[360,364],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[371,409],"content":"The certificate could not be exported.","nodes":[{"content":"The certificate could not be exported.","pos":[0,38]}]}],"pos":[82202,82624],"yaml":true},{"content":"Exports the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to a byte array in a format described by one of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values, and using the specified password.","nodes":[{"pos":[0,286],"content":"Exports the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object to a byte array in a format described by one of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"&gt;&lt;/xref&gt;</ph> values, and using the specified password.","source":"Exports the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to a byte array in a format described by one of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values, and using the specified password."}],"pos":[84217,84504],"yaml":true},{"content":"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.  \n  \n> [!IMPORTANT]\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","nodes":[{"pos":[0,498],"content":"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.","nodes":[{"content":"The <ph id=\"ph1\">`contentType`</ph> parameter accepts only the following values of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType&gt;</ph> enumeration: <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert&gt;</ph>, and <ph id=\"ph5\">&lt;xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12&gt;</ph>.","pos":[0,391],"source":"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>."},{"content":"Passing any other value causes a <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CryptographicException&gt;</ph> to be thrown.","pos":[393,498],"source":"  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown."}]},{"pos":[506,811],"content":"[!IMPORTANT]\n Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]}],"pos":[84515,85332],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values that describes how to format the output data.","nodes":[{"pos":[0,146],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"&gt;&lt;/xref&gt;</ph> values that describes how to format the output data.","source":"One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values that describes how to format the output data."}],"pos":[85676,85823],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[85887,85947],"yaml":true},{"content":"An array of bytes that represents the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.","nodes":[{"pos":[0,136],"content":"An array of bytes that represents the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object.","source":"An array of bytes that represents the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object."}],"pos":[86004,86141],"yaml":true},{"content":"A value other than <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\"></xref>, <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\"></xref>, or <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\"></xref> was passed to the <code>contentType</code> parameter.  \n  \n -or-  \n  \n The certificate could not be exported.","nodes":[{"pos":[0,353],"content":"A value other than <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\"&gt;&lt;/xref&gt;</ph> was passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph4\">contentType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A value other than <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\"></xref>, <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\"></xref>, or <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\"></xref> was passed to the <code>contentType</code> parameter."},{"pos":[360,364],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[371,409],"content":"The certificate could not be exported.","nodes":[{"content":"The certificate could not be exported.","pos":[0,38]}]}],"pos":[86385,86807],"yaml":true},{"content":"Converts the specified date and time to a string.","nodes":[{"pos":[0,49],"content":"Converts the specified date and time to a string.","nodes":[{"content":"Converts the specified date and time to a string.","pos":[0,49]}]}],"pos":[88458,88508],"yaml":true},{"content":"Some cultures cannot convert future dates into strings. If the expiration date of an X.509 certificate is beyond the range of the culture, <xref:System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate%2A> falls back to a calendar that can express the date. If the <xref:System.Globalization.CultureInfo.Calendar%2A> value is <xref:System.Globalization.UmAlQuraCalendar>, the calendar is changed to the <xref:System.Globalization.HijriCalendar> class; otherwise, it is changed to the <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.","nodes":[{"pos":[0,560],"content":"Some cultures cannot convert future dates into strings. If the expiration date of an X.509 certificate is beyond the range of the culture, <xref:System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate%2A> falls back to a calendar that can express the date. If the <xref:System.Globalization.CultureInfo.Calendar%2A> value is <xref:System.Globalization.UmAlQuraCalendar>, the calendar is changed to the <xref:System.Globalization.HijriCalendar> class; otherwise, it is changed to the <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.","nodes":[{"content":"Some cultures cannot convert future dates into strings. If the expiration date of an X.509 certificate is beyond the range of the culture, <xref:System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate%2A> falls back to a calendar that can express the date. If the <xref:System.Globalization.CultureInfo.Calendar%2A> value is <xref:System.Globalization.UmAlQuraCalendar>, the calendar is changed to the <xref:System.Globalization.HijriCalendar> class; otherwise, it is changed to the <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.","pos":[0,560],"nodes":[{"content":"Some cultures cannot convert future dates into strings.","pos":[0,55]},{"content":"If the expiration date of an X.509 certificate is beyond the range of the culture, <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate%2A&gt;</ph> falls back to a calendar that can express the date.","pos":[56,273],"source":" If the expiration date of an X.509 certificate is beyond the range of the culture, <xref:System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate%2A> falls back to a calendar that can express the date."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> value is <ph id=\"ph2\">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph>, the calendar is changed to the <ph id=\"ph3\">&lt;xref:System.Globalization.HijriCalendar&gt;</ph> class; otherwise, it is changed to the <ph id=\"ph4\">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph>.","pos":[274,560],"source":" If the <xref:System.Globalization.CultureInfo.Calendar%2A> value is <xref:System.Globalization.UmAlQuraCalendar>, the calendar is changed to the <xref:System.Globalization.HijriCalendar> class; otherwise, it is changed to the <xref:System.Globalization.CultureInfo.InvariantCulture%2A>."}]}]}],"pos":[88519,89080],"yaml":true,"extradata":"MT"},{"content":"The date and time to convert.","nodes":[{"pos":[0,29],"content":"The date and time to convert.","nodes":[{"content":"The date and time to convert.","pos":[0,29]}]}],"pos":[89233,89263],"yaml":true},{"content":"A string representation of the value of the <xref href=\"System.DateTime\"></xref> object.","nodes":[{"pos":[0,88],"content":"A string representation of the value of the <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> object.","source":"A string representation of the value of the <xref href=\"System.DateTime\"></xref> object."}],"pos":[89320,89409],"yaml":true},{"content":"Returns the hash value for the X.509v3 certificate as an array of bytes.","nodes":[{"pos":[0,72],"content":"Returns the hash value for the X.509v3 certificate as an array of bytes.","nodes":[{"content":"Returns the hash value for the X.509v3 certificate as an array of bytes.","pos":[0,72]}]}],"pos":[90835,90908],"yaml":true},{"content":"The hash value for the X.509 certificate.","nodes":[{"pos":[0,41],"content":"The hash value for the X.509 certificate.","nodes":[{"content":"The hash value for the X.509 certificate.","pos":[0,41]}]}],"pos":[91720,91762],"yaml":true},{"content":"Returns the SHA1 hash value for the X.509v3 certificate as a hexadecimal string.","nodes":[{"pos":[0,80],"content":"Returns the SHA1 hash value for the X.509v3 certificate as a hexadecimal string.","nodes":[{"content":"Returns the SHA1 hash value for the X.509v3 certificate as a hexadecimal string.","pos":[0,80]}]}],"pos":[93409,93490],"yaml":true},{"content":"The hexadecimal string representation of the X.509 certificate hash value.","nodes":[{"pos":[0,74],"content":"The hexadecimal string representation of the X.509 certificate hash value.","nodes":[{"content":"The hexadecimal string representation of the X.509 certificate hash value.","pos":[0,74]}]}],"pos":[94373,94448],"yaml":true},{"content":"Returns the effective date of this X.509v3 certificate.","nodes":[{"pos":[0,55],"content":"Returns the effective date of this X.509v3 certificate.","nodes":[{"content":"Returns the effective date of this X.509v3 certificate.","pos":[0,55]}]}],"pos":[95947,96003],"yaml":true},{"content":"The effective date is the date after which the X.509 certificate is considered valid.  \n  \n The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.","nodes":[{"pos":[0,85],"content":"The effective date is the date after which the X.509 certificate is considered valid.","nodes":[{"content":"The effective date is the date after which the X.509 certificate is considered valid.","pos":[0,85]}]},{"pos":[92,393],"content":"The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.","nodes":[{"content":"The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.","pos":[0,301],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString%2A&gt;</ph> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.","pos":[0,227],"source":"The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern."},{"content":"The date and time are formatted using the current culture and time zone.","pos":[229,301]}]}]}],"pos":[96014,96412],"yaml":true,"extradata":"MT"},{"content":"The effective date for this X.509 certificate.","nodes":[{"pos":[0,46],"content":"The effective date for this X.509 certificate.","nodes":[{"content":"The effective date for this X.509 certificate.","pos":[0,46]}]}],"pos":[97301,97348],"yaml":true},{"content":"Returns the expiration date of this X.509v3 certificate.","nodes":[{"pos":[0,56],"content":"Returns the expiration date of this X.509v3 certificate.","nodes":[{"content":"Returns the expiration date of this X.509v3 certificate.","pos":[0,56]}]}],"pos":[98858,98915],"yaml":true},{"content":"The expiration date is the date after which the X.509 certificate is no longer considered valid.  \n  \n The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.  \n  \n> [!NOTE]\n>  This method may return a different string format on Macintosh computers, although the underlying <xref:System.DateTime> object will represent the same value.","nodes":[{"pos":[0,96],"content":"The expiration date is the date after which the X.509 certificate is no longer considered valid.","nodes":[{"content":"The expiration date is the date after which the X.509 certificate is no longer considered valid.","pos":[0,96]}]},{"pos":[103,405],"content":"The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.","nodes":[{"content":"The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.","pos":[0,302],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString%2A&gt;</ph> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.","pos":[0,228],"source":"The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern."},{"content":"The date and time are formatted using the current culture and time zone.","pos":[230,302]}]}]},{"pos":[413,581],"content":"[!NOTE]\n This method may return a different string format on Macintosh computers, although the underlying <xref:System.DateTime> object will represent the same value.","leadings":["","> "],"nodes":[{"content":"This method may return a different string format on Macintosh computers, although the underlying <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> object will represent the same value.","pos":[9,166],"source":" This method may return a different string format on Macintosh computers, although the underlying <xref:System.DateTime> object will represent the same value."}]}],"pos":[98926,99515],"yaml":true,"extradata":"MT"},{"content":"The expiration date for this X.509 certificate.","nodes":[{"pos":[0,47],"content":"The expiration date for this X.509 certificate.","nodes":[{"content":"The expiration date for this X.509 certificate.","pos":[0,47]}]}],"pos":[100413,100461],"yaml":true},{"content":"Returns the name of the format of this X.509v3 certificate.","nodes":[{"pos":[0,59],"content":"Returns the name of the format of this X.509v3 certificate.","nodes":[{"content":"Returns the name of the format of this X.509v3 certificate.","pos":[0,59]}]}],"pos":[101888,101948],"yaml":true},{"content":"The format X.509 is always returned in this implementation.","nodes":[{"pos":[0,59],"content":"The format X.509 is always returned in this implementation.","nodes":[{"content":"The format X.509 is always returned in this implementation.","pos":[0,59]}]}],"pos":[101959,102019],"yaml":true,"extradata":"MT"},{"content":"The format of this X.509 certificate.","nodes":[{"pos":[0,37],"content":"The format of this X.509 certificate.","nodes":[{"content":"The format of this X.509 certificate.","pos":[0,37]}]}],"pos":[102796,102834],"yaml":true},{"content":"Returns the hash code for the X.509v3 certificate as an integer.","nodes":[{"pos":[0,64],"content":"Returns the hash code for the X.509v3 certificate as an integer.","nodes":[{"content":"Returns the hash code for the X.509v3 certificate as an integer.","pos":[0,64]}]}],"pos":[104443,104508],"yaml":true},{"content":"If the X.509 certificate hash is an array of more than 4 bytes, any byte after the fourth byte is not seen in this integer representation.","nodes":[{"pos":[0,138],"content":"If the X.509 certificate hash is an array of more than 4 bytes, any byte after the fourth byte is not seen in this integer representation.","nodes":[{"content":"If the X.509 certificate hash is an array of more than 4 bytes, any byte after the fourth byte is not seen in this integer representation.","pos":[0,138]}]}],"pos":[104519,104658],"yaml":true,"extradata":"MT"},{"content":"The hash code for the X.509 certificate as an integer.","nodes":[{"pos":[0,54],"content":"The hash code for the X.509 certificate as an integer.","nodes":[{"content":"The hash code for the X.509 certificate as an integer.","pos":[0,54]}]}],"pos":[105478,105533],"yaml":true},{"content":"Returns the name of the certification authority that issued the X.509v3 certificate.","nodes":[{"pos":[0,84],"content":"Returns the name of the certification authority that issued the X.509v3 certificate.","nodes":[{"content":"Returns the name of the certification authority that issued the X.509v3 certificate.","pos":[0,84]}]}],"pos":[107156,107241],"yaml":true},{"content":"The name of the certification authority that issued the X.509 certificate.","nodes":[{"pos":[0,74],"content":"The name of the certification authority that issued the X.509 certificate.","nodes":[{"content":"The name of the certification authority that issued the X.509 certificate.","pos":[0,74]}]}],"pos":[108131,108206],"yaml":true},{"content":"An error with the certificate occurs. For example:  \n  \n-   The certificate file does not exist.  \n  \n-   The certificate is invalid.  \n  \n-   The certificate's password is incorrect.","nodes":[{"pos":[0,50],"content":"An error with the certificate occurs. For example:","nodes":[{"content":"An error with the certificate occurs. For example:","pos":[0,50],"nodes":[{"content":"An error with the certificate occurs.","pos":[0,37]},{"content":"For example:","pos":[38,50]}]}]},{"pos":[60,96],"content":"The certificate file does not exist.","nodes":[{"content":"The certificate file does not exist.","pos":[0,36]}]},{"pos":[106,133],"content":"The certificate is invalid.","nodes":[{"content":"The certificate is invalid.","pos":[0,27]}]},{"pos":[143,183],"content":"The certificate's password is incorrect.","nodes":[{"content":"The certificate's password is incorrect.","pos":[0,40]}]}],"pos":[108457,108649],"yaml":true},{"content":"Returns the key algorithm information for this X.509v3 certificate as a string.","nodes":[{"pos":[0,79],"content":"Returns the key algorithm information for this X.509v3 certificate as a string.","nodes":[{"content":"Returns the key algorithm information for this X.509v3 certificate as a string.","pos":[0,79]}]}],"pos":[110045,110125],"yaml":true},{"content":"The key algorithm information for this X.509 certificate as a string.","nodes":[{"pos":[0,69],"content":"The key algorithm information for this X.509 certificate as a string.","nodes":[{"content":"The key algorithm information for this X.509 certificate as a string.","pos":[0,69]}]}],"pos":[110983,111053],"yaml":true},{"content":"The certificate context is invalid.","nodes":[{"pos":[0,35],"content":"The certificate context is invalid.","nodes":[{"content":"The certificate context is invalid.","pos":[0,35]}]}],"pos":[111306,111342],"yaml":true},{"content":"Returns the key algorithm parameters for the X.509v3 certificate as an array of bytes.","nodes":[{"pos":[0,86],"content":"Returns the key algorithm parameters for the X.509v3 certificate as an array of bytes.","nodes":[{"content":"Returns the key algorithm parameters for the X.509v3 certificate as an array of bytes.","pos":[0,86]}]}],"pos":[112933,113020],"yaml":true},{"content":"The key algorithm parameters for the X.509 certificate as an array of bytes.","nodes":[{"pos":[0,76],"content":"The key algorithm parameters for the X.509 certificate as an array of bytes.","nodes":[{"content":"The key algorithm parameters for the X.509 certificate as an array of bytes.","pos":[0,76]}]}],"pos":[113976,114053],"yaml":true},{"content":"The certificate context is invalid.","nodes":[{"pos":[0,35],"content":"The certificate context is invalid.","nodes":[{"content":"The certificate context is invalid.","pos":[0,35]}]}],"pos":[114316,114352],"yaml":true},{"content":"Returns the key algorithm parameters for the X.509v3 certificate as a hexadecimal string.","nodes":[{"pos":[0,89],"content":"Returns the key algorithm parameters for the X.509v3 certificate as a hexadecimal string.","nodes":[{"content":"Returns the key algorithm parameters for the X.509v3 certificate as a hexadecimal string.","pos":[0,89]}]}],"pos":[115979,116069],"yaml":true},{"content":"The key algorithm parameters for the X.509 certificate as a hexadecimal string.","nodes":[{"pos":[0,79],"content":"The key algorithm parameters for the X.509 certificate as a hexadecimal string.","nodes":[{"content":"The key algorithm parameters for the X.509 certificate as a hexadecimal string.","pos":[0,79]}]}],"pos":[117027,117107],"yaml":true},{"content":"The certificate context is invalid.","nodes":[{"pos":[0,35],"content":"The certificate context is invalid.","nodes":[{"content":"The certificate context is invalid.","pos":[0,35]}]}],"pos":[117376,117412],"yaml":true},{"content":"Returns the name of the principal to which the certificate was issued.","nodes":[{"pos":[0,70],"content":"Returns the name of the principal to which the certificate was issued.","nodes":[{"content":"Returns the name of the principal to which the certificate was issued.","pos":[0,70]}]}],"pos":[118895,118966],"yaml":true},{"content":"The name of the principal to which the certificate was issued.","nodes":[{"pos":[0,62],"content":"The name of the principal to which the certificate was issued.","nodes":[{"content":"The name of the principal to which the certificate was issued.","pos":[0,62]}]}],"pos":[119817,119880],"yaml":true},{"content":"The certificate context is invalid.","nodes":[{"pos":[0,35],"content":"The certificate context is invalid.","nodes":[{"content":"The certificate context is invalid.","pos":[0,35]}]}],"pos":[120125,120161],"yaml":true},{"content":"Returns the public key for the X.509v3 certificate as an array of bytes.","nodes":[{"pos":[0,72],"content":"Returns the public key for the X.509v3 certificate as an array of bytes.","nodes":[{"content":"Returns the public key for the X.509v3 certificate as an array of bytes.","pos":[0,72]}]}],"pos":[121539,121612],"yaml":true},{"content":"The public key for the X.509 certificate as an array of bytes.","nodes":[{"pos":[0,62],"content":"The public key for the X.509 certificate as an array of bytes.","nodes":[{"content":"The public key for the X.509 certificate as an array of bytes.","pos":[0,62]}]}],"pos":[122450,122513],"yaml":true},{"content":"The certificate context is invalid.","nodes":[{"pos":[0,35],"content":"The certificate context is invalid.","nodes":[{"content":"The certificate context is invalid.","pos":[0,35]}]}],"pos":[122763,122799],"yaml":true},{"content":"Returns the public key for the X.509v3 certificate as a hexadecimal string.","nodes":[{"pos":[0,75],"content":"Returns the public key for the X.509v3 certificate as a hexadecimal string.","nodes":[{"content":"Returns the public key for the X.509v3 certificate as a hexadecimal string.","pos":[0,75]}]}],"pos":[124348,124424],"yaml":true},{"content":"The public key for the X.509 certificate as a hexadecimal string.","nodes":[{"pos":[0,65],"content":"The public key for the X.509 certificate as a hexadecimal string.","nodes":[{"content":"The public key for the X.509 certificate as a hexadecimal string.","pos":[0,65]}]}],"pos":[125301,125367],"yaml":true},{"content":"Returns the raw data for the entire X.509v3 certificate as an array of bytes.","nodes":[{"pos":[0,77],"content":"Returns the raw data for the entire X.509v3 certificate as an array of bytes.","nodes":[{"content":"Returns the raw data for the entire X.509v3 certificate as an array of bytes.","pos":[0,77]}]}],"pos":[126819,126897],"yaml":true},{"content":"A byte array containing the X.509 certificate data.","nodes":[{"pos":[0,51],"content":"A byte array containing the X.509 certificate data.","nodes":[{"content":"A byte array containing the X.509 certificate data.","pos":[0,51]}]}],"pos":[127749,127801],"yaml":true},{"content":"Returns the raw data for the entire X.509v3 certificate as a hexadecimal string.","nodes":[{"pos":[0,80],"content":"Returns the raw data for the entire X.509v3 certificate as a hexadecimal string.","nodes":[{"content":"Returns the raw data for the entire X.509v3 certificate as a hexadecimal string.","pos":[0,80]}]}],"pos":[129285,129366],"yaml":true},{"content":"The X.509 certificate data as a hexadecimal string.","nodes":[{"pos":[0,51],"content":"The X.509 certificate data as a hexadecimal string.","nodes":[{"content":"The X.509 certificate data as a hexadecimal string.","pos":[0,51]}]}],"pos":[130257,130309],"yaml":true},{"content":"Returns the serial number of the X.509v3 certificate as an array of bytes.","nodes":[{"pos":[0,74],"content":"Returns the serial number of the X.509v3 certificate as an array of bytes.","nodes":[{"content":"Returns the serial number of the X.509v3 certificate as an array of bytes.","pos":[0,74]}]}],"pos":[131769,131844],"yaml":true},{"content":"The serial number of the X.509 certificate as an array of bytes.","nodes":[{"pos":[0,64],"content":"The serial number of the X.509 certificate as an array of bytes.","nodes":[{"content":"The serial number of the X.509 certificate as an array of bytes.","pos":[0,64]}]}],"pos":[132709,132774],"yaml":true},{"content":"The certificate context is invalid.","nodes":[{"pos":[0,35],"content":"The certificate context is invalid.","nodes":[{"content":"The certificate context is invalid.","pos":[0,35]}]}],"pos":[133027,133063],"yaml":true},{"content":"Returns the serial number of the X.509v3 certificate as a hexadecimal string.","nodes":[{"pos":[0,77],"content":"Returns the serial number of the X.509v3 certificate as a hexadecimal string.","nodes":[{"content":"Returns the serial number of the X.509v3 certificate as a hexadecimal string.","pos":[0,77]}]}],"pos":[134630,134708],"yaml":true},{"content":"The serial number of the X.509 certificate as a hexadecimal string.","nodes":[{"pos":[0,67],"content":"The serial number of the X.509 certificate as a hexadecimal string.","nodes":[{"content":"The serial number of the X.509 certificate as a hexadecimal string.","pos":[0,67]}]}],"pos":[135612,135680],"yaml":true},{"content":"Gets a handle to a Microsoft Cryptographic API certificate context described by an unmanaged `PCCERT_CONTEXT` structure.","nodes":[{"pos":[0,120],"content":"Gets a handle to a Microsoft Cryptographic API certificate context described by an unmanaged <ph id=\"ph1\">`PCCERT_CONTEXT`</ph> structure.","source":"Gets a handle to a Microsoft Cryptographic API certificate context described by an unmanaged `PCCERT_CONTEXT` structure."}],"pos":[137083,137204],"yaml":true},{"content":"The handle is valid only for the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.","nodes":[{"pos":[0,125],"content":"The handle is valid only for the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.","nodes":[{"content":"The handle is valid only for the lifetime of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> object.","pos":[0,125],"source":"The handle is valid only for the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object."}]}],"pos":[137215,137341],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IntPtr\"></xref> structure that represents an unmanaged `PCCERT_CONTEXT` structure.","nodes":[{"pos":[0,104],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IntPtr\"&gt;&lt;/xref&gt;</ph> structure that represents an unmanaged <ph id=\"ph2\">`PCCERT_CONTEXT`</ph> structure.","source":"An <xref href=\"System.IntPtr\"></xref> structure that represents an unmanaged `PCCERT_CONTEXT` structure."}],"pos":[137518,137623],"yaml":true},{"content":"Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with data from a byte array.","nodes":[{"pos":[0,132],"content":"Populates the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object with data from a byte array.","source":"Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with data from a byte array."}],"pos":[139337,139470],"yaml":true},{"content":"This method can be used to take the raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object with its associated values.","nodes":[{"pos":[0,195],"content":"This method can be used to take the raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object with its associated values.","nodes":[{"content":"This method can be used to take the raw byte array of an X.509 certificate and populate the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> object with its associated values.","pos":[0,195],"source":"This method can be used to take the raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object with its associated values."}]}],"pos":[139481,139677],"yaml":true,"extradata":"MT"},{"content":"A byte array containing data from an X.509 certificate.","nodes":[{"pos":[0,55],"content":"A byte array containing data from an X.509 certificate.","nodes":[{"content":"A byte array containing data from an X.509 certificate.","pos":[0,55]}]}],"pos":[139891,139947],"yaml":true},{"content":"The <code>rawData</code> parameter is `null`.  \n  \n -or-  \n  \n The length of the <code>rawData</code> parameter is 0.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rawData</code> parameter is `null`."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,117],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is 0.","source":"The length of the <code>rawData</code> parameter is 0."}],"pos":[140137,140261],"yaml":true},{"content":"Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with information from a certificate file.","nodes":[{"pos":[0,145],"content":"Populates the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object with information from a certificate file.","source":"Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with information from a certificate file."}],"pos":[141692,141838],"yaml":true},{"content":"This method uses a certificate file (such as a file with a .cer extension) that represents an X.509 certificate, and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object with the certificate that the file contains.","nodes":[{"pos":[0,251],"content":"This method uses a certificate file (such as a file with a .cer extension) that represents an X.509 certificate, and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object with the certificate that the file contains.","nodes":[{"content":"This method uses a certificate file (such as a file with a .cer extension) that represents an X.509 certificate, and populates the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> object with the certificate that the file contains.","pos":[0,251],"source":"This method uses a certificate file (such as a file with a .cer extension) that represents an X.509 certificate, and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object with the certificate that the file contains."}]}],"pos":[141849,142101],"yaml":true,"extradata":"MT"},{"content":"The name of a certificate file represented as a string.","nodes":[{"pos":[0,55],"content":"The name of a certificate file represented as a string.","nodes":[{"content":"The name of a certificate file represented as a string.","pos":[0,55]}]}],"pos":[143091,143147],"yaml":true},{"content":"The <code>fileName</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileName</code> parameter is `null`."}],"pos":[143337,143384],"yaml":true},{"content":"Populates an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object using data from a byte array, a password, and a key storage flag.","nodes":[{"pos":[0,168],"content":"Populates an <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object using data from a byte array, a password, and a key storage flag.","source":"Populates an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object using data from a byte array, a password, and a key storage flag."}],"pos":[145205,145374],"yaml":true},{"content":"> [!IMPORTANT]\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","nodes":[{"pos":[2,307],"content":"[!IMPORTANT]\n Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]}],"pos":[145385,145705],"yaml":true,"extradata":"MT"},{"content":"A byte array that contains data from an X.509 certificate.","nodes":[{"pos":[0,58],"content":"A byte array that contains data from an X.509 certificate.","nodes":[{"content":"A byte array that contains data from an X.509 certificate.","pos":[0,58]}]}],"pos":[145974,146033],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[146112,146172],"yaml":true},{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"pos":[0,101],"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","pos":[0,101]}]}],"pos":[146295,146397],"yaml":true},{"content":"The <code>rawData</code> parameter is `null`.  \n  \n -or-  \n  \n The length of the <code>rawData</code> parameter is 0.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rawData</code> parameter is `null`."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,117],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is 0.","source":"The length of the <code>rawData</code> parameter is 0."}],"pos":[146587,146711],"yaml":true},{"content":"Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object using data from a byte array, a password, and flags for determining how the private key is imported.","nodes":[{"pos":[0,204],"content":"Populates the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object using data from a byte array, a password, and flags for determining how the private key is imported.","source":"Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object using data from a byte array, a password, and flags for determining how the private key is imported."}],"pos":[148394,148599],"yaml":true},{"content":"This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a password for the certificate represented by the byte array. The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how the private key is imported.","nodes":[{"pos":[0,331],"content":"This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a password for the certificate represented by the byte array. The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how the private key is imported.","nodes":[{"content":"This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a password for the certificate represented by the byte array. The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how the private key is imported.","pos":[0,331],"nodes":[{"content":"This method can be used to populate an <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate&gt;</ph> object using a password for the certificate represented by the byte array.","pos":[0,182],"source":"This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a password for the certificate represented by the byte array."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags&gt;</ph> value can be used to control where and how the private key is imported.","pos":[183,331],"source":" The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how the private key is imported."}]}]}],"pos":[148610,148942],"yaml":true,"extradata":"MT"},{"content":"A byte array containing data from an X.509 certificate.","nodes":[{"pos":[0,55],"content":"A byte array containing data from an X.509 certificate.","nodes":[{"content":"A byte array containing data from an X.509 certificate.","pos":[0,55]}]}],"pos":[149256,149312],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[149376,149436],"yaml":true},{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"pos":[0,101],"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","pos":[0,101]}]}],"pos":[149559,149661],"yaml":true},{"content":"The <code>rawData</code> parameter is `null`.  \n  \n -or-  \n  \n The length of the <code>rawData</code> parameter is 0.","nodes":[{"pos":[0,45],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>rawData</code> parameter is `null`."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,117],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">rawData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is 0.","source":"The length of the <code>rawData</code> parameter is 0."}],"pos":[149851,149975],"yaml":true},{"content":"Populates an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with information from a certificate file, a password, and a key storage flag.","nodes":[{"pos":[0,180],"content":"Populates an <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object with information from a certificate file, a password, and a key storage flag.","source":"Populates an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with information from a certificate file, a password, and a key storage flag."}],"pos":[151796,151977],"yaml":true},{"content":"> [!IMPORTANT]\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","nodes":[{"pos":[2,307],"content":"[!IMPORTANT]\n Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]}],"pos":[151988,152308],"yaml":true,"extradata":"MT"},{"content":"The name of a certificate file.","nodes":[{"pos":[0,31],"content":"The name of a certificate file.","nodes":[{"content":"The name of a certificate file.","pos":[0,31]}]}],"pos":[152579,152611],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[152690,152750],"yaml":true},{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"pos":[0,101],"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","pos":[0,101]}]}],"pos":[152873,152975],"yaml":true},{"content":"The <code>fileName</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileName</code> parameter is `null`."}],"pos":[153165,153212],"yaml":true},{"content":"Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with information from a certificate file, a password, and a <xref href=\"System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\"></xref> value.","nodes":[{"pos":[0,257],"content":"Populates the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object with information from a certificate file, a password, and a <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\"&gt;&lt;/xref&gt;</ph> value.","source":"Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with information from a certificate file, a password, and a <xref href=\"System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\"></xref> value."}],"pos":[154895,155153],"yaml":true},{"content":"> [!IMPORTANT]\n>  Never hard-code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","nodes":[{"pos":[2,307],"content":"[!IMPORTANT]\n Never hard-code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","leadings":["","> "],"nodes":[{"content":" Never hard-code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[13,303],"nodes":[{"content":"Never hard-code a password within your source code.","pos":[1,52]},{"content":"Hard-coded passwords can be retrieved from an assembly using the <bpt id=\"p1\">[</bpt>Ildasm.exe (IL Disassembler)<ept id=\"p1\">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.","pos":[54,290],"source":"  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe."}]}]}],"pos":[155164,155484],"yaml":true,"extradata":"MT"},{"content":"The name of a certificate file represented as a string.","nodes":[{"pos":[0,55],"content":"The name of a certificate file represented as a string.","nodes":[{"content":"The name of a certificate file represented as a string.","pos":[0,55]}]}],"pos":[155800,155856],"yaml":true},{"content":"The password required to access the X.509 certificate data.","nodes":[{"pos":[0,59],"content":"The password required to access the X.509 certificate data.","nodes":[{"content":"The password required to access the X.509 certificate data.","pos":[0,59]}]}],"pos":[155920,155980],"yaml":true},{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"pos":[0,101],"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","nodes":[{"content":"A bitwise combination of the enumeration values that control where and how to import the certificate.","pos":[0,101]}]}],"pos":[156103,156205],"yaml":true},{"content":"The <code>fileName</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">fileName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>fileName</code> parameter is `null`."}],"pos":[156395,156442],"yaml":true},{"content":"Gets the name of the certificate authority that issued the X.509v3 certificate.","nodes":[{"pos":[0,79],"content":"Gets the name of the certificate authority that issued the X.509v3 certificate.","nodes":[{"content":"Gets the name of the certificate authority that issued the X.509v3 certificate.","pos":[0,79]}]}],"pos":[157806,157886],"yaml":true},{"content":"The name of the certificate authority that issued the X.509v3 certificate.","nodes":[{"pos":[0,74],"content":"The name of the certificate authority that issued the X.509v3 certificate.","nodes":[{"content":"The name of the certificate authority that issued the X.509v3 certificate.","pos":[0,74]}]}],"pos":[157996,158071],"yaml":true},{"content":"The certificate handle is invalid.","nodes":[{"pos":[0,34],"content":"The certificate handle is invalid.","nodes":[{"content":"The certificate handle is invalid.","pos":[0,34]}]}],"pos":[158315,158350],"yaml":true},{"content":"Resets the state of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object.","nodes":[{"pos":[0,115],"content":"Resets the state of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"&gt;&lt;/xref&gt;</ph> object.","source":"Resets the state of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object."}],"pos":[159821,159937],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Reset%2A> method to reset the state of the certificate. This method also frees any resources associated with the certificate.","nodes":[{"pos":[0,201],"content":"Use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Reset%2A> method to reset the state of the certificate. This method also frees any resources associated with the certificate.","nodes":[{"content":"Use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Reset%2A> method to reset the state of the certificate. This method also frees any resources associated with the certificate.","pos":[0,201],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.X509Certificates.X509Certificate.Reset%2A&gt;</ph> method to reset the state of the certificate.","pos":[0,131],"source":"Use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Reset%2A> method to reset the state of the certificate."},{"content":"This method also frees any resources associated with the certificate.","pos":[132,201]}]}]}],"pos":[159948,160150],"yaml":true,"extradata":"MT"},{"content":"Gets the subject distinguished name from the certificate.","nodes":[{"pos":[0,57],"content":"Gets the subject distinguished name from the certificate.","nodes":[{"content":"Gets the subject distinguished name from the certificate.","pos":[0,57]}]}],"pos":[161757,161815],"yaml":true},{"content":"The subject distinguished name from the certificate.","nodes":[{"pos":[0,52],"content":"The subject distinguished name from the certificate.","nodes":[{"content":"The subject distinguished name from the certificate.","pos":[0,52]}]}],"pos":[161926,161979],"yaml":true},{"content":"The certificate handle is invalid.","nodes":[{"pos":[0,34],"content":"The certificate handle is invalid.","nodes":[{"content":"The certificate handle is invalid.","pos":[0,34]}]}],"pos":[162224,162259],"yaml":true},{"content":"Returns a string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.","nodes":[{"pos":[0,137],"content":"Returns a string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns a string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object."}],"pos":[163748,163886],"yaml":true},{"content":"A string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.","nodes":[{"pos":[0,129],"content":"A string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object.","source":"A string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object."}],"pos":[164657,164787],"yaml":true},{"content":"Returns a string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object, with extra information, if specified.","nodes":[{"pos":[0,175],"content":"Returns a string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object, with extra information, if specified.","source":"Returns a string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object, with extra information, if specified."}],"pos":[166446,166622],"yaml":true},{"content":"`true` to produce the verbose form of the string representation; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> to produce the verbose form of the string representation; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to produce the verbose form of the string representation; otherwise, `false`."}],"pos":[167410,167497],"yaml":true},{"content":"A string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.","nodes":[{"pos":[0,129],"content":"A string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object.","source":"A string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object."}],"pos":[167554,167684],"yaml":true},{"content":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete.","nodes":[{"pos":[0,170],"content":"Implements the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.ISerializable\"&gt;&lt;/xref&gt;</ph> interface and is called back by the deserialization event when deserialization is complete.","source":"Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete."}],"pos":[169642,169813],"yaml":true},{"content":"The source of the deserialization event.","nodes":[{"pos":[0,40],"content":"The source of the deserialization event.","nodes":[{"content":"The source of the deserialization event.","pos":[0,40]}]}],"pos":[169979,170020],"yaml":true},{"content":"Gets serialization information with all the data needed to recreate an instance of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.","nodes":[{"pos":[0,185],"content":"Gets serialization information with all the data needed to recreate an instance of the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets serialization information with all the data needed to recreate an instance of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object."}],"pos":[172091,172277],"yaml":true},{"content":"The object to populate with serialization information.","nodes":[{"pos":[0,54],"content":"The object to populate with serialization information.","nodes":[{"content":"The object to populate with serialization information.","pos":[0,54]}]}],"pos":[172552,172607],"yaml":true},{"content":"The destination context of the serialization.","nodes":[{"pos":[0,45],"content":"The destination context of the serialization.","nodes":[{"content":"The destination context of the serialization.","pos":[0,45]}]}],"pos":[172702,172748],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  commentId: T:System.Security.Cryptography.X509Certificates.X509Certificate\n  id: X509Certificate\n  children:\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])\n  - System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Dispose\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetName\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber\n  - System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Handle\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Reset\n  - System.Security.Cryptography.X509Certificates.X509Certificate.Subject\n  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString\n  - System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  langs:\n  - csharp\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Provides methods that help you use X.509 v.3 certificates.\n  remarks: \"ASN.1 DER is the only certificate format supported by this class.  \\n  \\n For most scenarios, you should use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class instead.  \\n  \\n> [!IMPORTANT]\\n>  Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the \\\"Using an Object that Implements IDisposable\\\" section in the <xref:System.IDisposable> interface topic.  \\n>   \\n>  For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.\"\n  example:\n  - \"The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate/CPP/example.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Certificate#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate/CS/example.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate/VB/example.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class X509Certificate : IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Security.Cryptography.X509Certificates.X509Certificate2\n  implements:\n  - System.IDisposable\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate()\n  nameWithType: X509Certificate.X509Certificate()\n  fullName: X509Certificate.X509Certificate()\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class.\n  remarks: ASN.1 DER is the only certificate format supported by this class.\n  syntax:\n    content: public X509Certificate ();\n    parameters: []\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: '#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String, SecureString, X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(String, SecureString, X509KeyStorageFlags)\n  fullName: X509Certificate.X509Certificate(String, SecureString, X509KeyStorageFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a certificate file name, a password, and a key storage flag.\n  remarks: If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\n  syntax:\n    content: public X509Certificate (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of a certificate file.\n    - id: password\n      type: System.Security.SecureString\n      description: The password required to access the X.509 certificate data.\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: A bitwise combination of the enumeration values that control where and how to import the certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>fileName</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: '#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[], String, X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(Byte[], String, X509KeyStorageFlags)\n  fullName: X509Certificate.X509Certificate(Byte[], String, X509KeyStorageFlags)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array, a password, and a key storage flag.\n  remarks: \"This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.  Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).  \\n  \\n The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how the private key is imported.  \\n  \\n ASN.1 DER is the only certificate format supported by this class.  \\n  \\n> [!IMPORTANT]\\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \\n  \\n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\"\n  syntax:\n    content: public X509Certificate (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: A byte array containing data from an X.509 certificate.\n    - id: password\n      type: System.String\n      description: The password required to access the X.509 certificate data.\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: A bitwise combination of the enumeration values that control where and how to import the certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>rawData</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The length of the <code>rawData</code> parameter is 0.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: '#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[], SecureString, X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(Byte[], SecureString, X509KeyStorageFlags)\n  fullName: X509Certificate.X509Certificate(Byte[], SecureString, X509KeyStorageFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array, a password, and a key storage flag.\n  remarks: \"Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).  \\n  \\n ASN.1 DER is the only certificate format supported by this class.  \\n  \\n> [!IMPORTANT]\\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \\n  \\n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\"\n  syntax:\n    content: public X509Certificate (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: A byte array that contains data from an X.509 certificate.\n    - id: password\n      type: System.Security.SecureString\n      description: The password required to access the X.509 certificate data.\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: A bitwise combination of the enumeration values that control where and how to import the certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>rawData</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The length of the <code>rawData</code> parameter is 0.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String, String)\n  nameWithType: X509Certificate.X509Certificate(String, String)\n  fullName: X509Certificate.X509Certificate(String, String)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using the name of a PKCS7 signed file and a password to access the certificate.\n  remarks: \"ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.  \\n  \\n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\"\n  syntax:\n    content: public X509Certificate (string fileName, string password);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of a PKCS7 signed file.\n    - id: password\n      type: System.String\n      description: The password required to access the X.509 certificate data.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>fileName</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)\n  id: '#ctor(System.String,System.Security.SecureString)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String, SecureString)\n  nameWithType: X509Certificate.X509Certificate(String, SecureString)\n  fullName: X509Certificate.X509Certificate(String, SecureString)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a certificate file name and a password.\n  remarks: \"ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.  \\n  \\n> [!IMPORTANT]\\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \\n  \\n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\"\n  syntax:\n    content: public X509Certificate (string fileName, System.Security.SecureString password);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of a certificate file.\n    - id: password\n      type: System.Security.SecureString\n      description: The password required to access the X.509 certificate data.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>fileName</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(SerializationInfo, StreamingContext)\n  nameWithType: X509Certificate.X509Certificate(SerializationInfo, StreamingContext)\n  fullName: X509Certificate.X509Certificate(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object and a <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure.\n  syntax:\n    content: public X509Certificate (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: A <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> object that describes serialization information.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: A <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> structure that describes how serialization should be performed.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: '#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String, String, X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(String, String, X509KeyStorageFlags)\n  fullName: X509Certificate.X509Certificate(String, String, X509KeyStorageFlags)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using the name of a PKCS7 signed file, a password to access the certificate, and a key storage flag.\n  remarks: If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\n  syntax:\n    content: public X509Certificate (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of a PKCS7 signed file.\n    - id: password\n      type: System.String\n      description: The password required to access the X.509 certificate data.\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: A bitwise combination of the enumeration values that control where and how to import the certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>fileName</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)\n  id: '#ctor(System.Byte[],System.Security.SecureString)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[], SecureString)\n  nameWithType: X509Certificate.X509Certificate(Byte[], SecureString)\n  fullName: X509Certificate.X509Certificate(Byte[], SecureString)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array and a password.\n  remarks: \"ASN.1 DER is the only certificate format supported by this class.  \\n  \\n> [!IMPORTANT]\\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \\n  \\n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\"\n  syntax:\n    content: public X509Certificate (byte[] rawData, System.Security.SecureString password);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: A byte array that contains data from an X.509 certificate.\n    - id: password\n      type: System.Security.SecureString\n      description: The password required to access the X.509 certificate data.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>rawData</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The length of the <code>rawData</code> parameter is 0.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(String)\n  nameWithType: X509Certificate.X509Certificate(String)\n  fullName: X509Certificate.X509Certificate(String)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using the name of a PKCS7 signed file.\n  remarks: \"ASN.1 DER is the only certificate format supported by this class.  \\n  \\n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\"\n  example:\n  - \"The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Certificate#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate/CPP/example.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Certificate#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate/CS/example.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Certificate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate/VB/example.vb#1)]\"\n  syntax:\n    content: public X509Certificate (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of a PKCS7 signed file.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>fileName</code> parameter is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(X509Certificate)\n  nameWithType: X509Certificate.X509Certificate(X509Certificate)\n  fullName: X509Certificate.X509Certificate(X509Certificate)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using another <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class.\n  remarks: ASN.1 DER is the only certificate format supported by this class.\n  syntax:\n    content: public X509Certificate (System.Security.Cryptography.X509Certificates.X509Certificate cert);\n    parameters:\n    - id: cert\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: A <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class from which to initialize this class.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value of the <code>cert</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)\n  id: '#ctor(System.IntPtr)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(IntPtr)\n  nameWithType: X509Certificate.X509Certificate(IntPtr)\n  fullName: X509Certificate.X509Certificate(IntPtr)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a handle to an unmanaged `PCCERT_CONTEXT` structure.\n  remarks: \"This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.  \\n  \\n> [!IMPORTANT]\\n>  This constructor creates a copy of the certificate context. Do not assume that the context structure you passed to the constructor is valid; it may have been released. You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.\"\n  syntax:\n    content: public X509Certificate (IntPtr handle);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: A handle to an unmanaged `PCCERT_CONTEXT` structure.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The handle parameter does not represent a valid `PCCERT_CONTEXT` structure.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[])\n  nameWithType: X509Certificate.X509Certificate(Byte[])\n  fullName: X509Certificate.X509Certificate(Byte[])\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class defined from a sequence of bytes representing an X.509v3 certificate.\n  remarks: \"ASN.1 DER is the only certificate format supported by this class.  \\n  \\n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `data`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\"\n  example:\n  - \"The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate.Import-Export/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate.Import-Export/CS/sample.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate.Import-Export/VB/sample.vb#1)]\"\n  syntax:\n    content: public X509Certificate (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: A byte array containing data from an X.509 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>rawData</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The length of the <code>rawData</code> parameter is 0.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)\n  id: '#ctor(System.Byte[],System.String)'\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: X509Certificate(Byte[], String)\n  nameWithType: X509Certificate.X509Certificate(Byte[], String)\n  fullName: X509Certificate.X509Certificate(Byte[], String)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> class using a byte array and a password.\n  remarks: \"ASN.1 DER is the only certificate format supported by this class.  \\n  \\n> [!IMPORTANT]\\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  \\n  \\n If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.\"\n  syntax:\n    content: public X509Certificate (byte[] rawData, string password);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: A byte array containing data from an X.509 certificate.\n    - id: password\n      type: System.String\n      description: The password required to access the X.509 certificate data.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>rawData</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The length of the <code>rawData</code> parameter is 0.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)\n  id: CreateFromCertFile(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: CreateFromCertFile(String)\n  nameWithType: X509Certificate.CreateFromCertFile(String)\n  fullName: X509Certificate.CreateFromCertFile(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Creates an X.509v3 certificate from the specified PKCS7 signed file.\n  remarks: \"ASN.1 DER is the only certificate format supported by this class.  \\n  \\n> [!NOTE]\\n>  The certificate file is not restricted to .cerfiles. Any PKCS7 signed file can be used, including an Authenticode signed .pfx file.\"\n  example:\n  - \"The following example creates an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> from a specified certification file.  \\n  \\n [!code-cpp[X509Certificate.ToString Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.ToString Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.ToString Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.ToString Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.ToString Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.ToString Method/VB/example.vb#1)]\"\n  syntax:\n    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromCertFile (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The path of the PKCS7 signed file from which to create the X.509 certificate.\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The newly created X.509 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>filename</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)\n  id: CreateFromSignedFile(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: CreateFromSignedFile(String)\n  nameWithType: X509Certificate.CreateFromSignedFile(String)\n  fullName: X509Certificate.CreateFromSignedFile(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Creates an X.509v3 certificate from the specified signed file.\n  remarks: ASN.1 DER is the only certificate format supported by this class.\n  syntax:\n    content: public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromSignedFile (string filename);\n    parameters:\n    - id: filename\n      type: System.String\n      description: The path of the signed file from which to create the X.509 certificate.\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The newly created X.509 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: X509Certificate.Dispose(Boolean)\n  fullName: X509Certificate.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Releases all of the unmanaged resources used by this <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> and optionally releases the managed resources.\n  remarks: >-\n    > [!NOTE]\n\n    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: X509Certificate.Dispose()\n  fullName: X509Certificate.Dispose()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Releases all resources used by the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.\n  remarks: >-\n    > [!NOTE]\n\n    >  <xref:System.Security.Cryptography.X509Certificates.X509Certificate> implements the <xref:System.IDisposable> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> class does not implement this interface, and therefore the `Dispose` method does not exist.\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: X509Certificate.Equals(Object)\n  fullName: X509Certificate.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Compares two <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> objects for equality.\n  remarks: Two objects are considered equal if they are <xref:System.Security.Cryptography.X509Certificates.X509Certificate> objects and they have the same issuer and serial number.\n  example:\n  - \"The following example compares two certificates for equality.  \\n  \\n [!code-cpp[X509Certificate.Equals Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.Equals Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.Equals Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.Equals Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.Equals Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.Equals Method/VB/example.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to compare to the current object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object is equal to the object specified by the <code>other</code> parameter; otherwise, `false`.'\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: Equals(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Equals(X509Certificate)\n  nameWithType: X509Certificate.Equals(X509Certificate)\n  fullName: X509Certificate.Equals(X509Certificate)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Compares two <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> objects for equality.\n  remarks: Two <xref:System.Security.Cryptography.X509Certificates.X509Certificate> objects are considered equal if they have the same issuer and serial number.\n  example:\n  - \"The following example compares two certificates for equality.  \\n  \\n [!code-cpp[X509Certificate.Equals Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.Equals Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.Equals Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.Equals Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.Equals Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.Equals Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual bool Equals (System.Security.Cryptography.X509Certificates.X509Certificate other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to compare to the current object.\n    return:\n      type: System.Boolean\n      description: '`true` if the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object is equal to the object specified by the <code>other</code> parameter; otherwise, `false`.'\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Export(X509ContentType)\n  nameWithType: X509Certificate.Export(X509ContentType)\n  fullName: X509Certificate.Export(X509ContentType)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Exports the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to a byte array in a format described by one of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values.\n  remarks: 'The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.'\n  example:\n  - \"The following example loads an X.509 certificate file into an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object, exports the certificate as a byte array, and then imports the byte array into another <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate.Import-Export/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate.Import-Export/CS/sample.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import-Export#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate.Import-Export/VB/sample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType);\n    parameters:\n    - id: contentType\n      type: System.Security.Cryptography.X509Certificates.X509ContentType\n      description: One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values that describes how to format the output data.\n    return:\n      type: System.Byte[]\n      description: An array of bytes that represents the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"A value other than <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\\\"></xref>, <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\\\"></xref>, or <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\\\"></xref> was passed to the <code>contentType</code> parameter.  \\n  \\n -or-  \\n  \\n The certificate could not be exported.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)\n  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Export(X509ContentType, SecureString)\n  nameWithType: X509Certificate.Export(X509ContentType, SecureString)\n  fullName: X509Certificate.Export(X509ContentType, SecureString)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Exports the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to a byte array using the specified format and a password.\n  remarks: \"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.  \\n  \\n> [!IMPORTANT]\\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.\"\n  syntax:\n    content: public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, System.Security.SecureString password);\n    parameters:\n    - id: contentType\n      type: System.Security.Cryptography.X509Certificates.X509ContentType\n      description: One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values that describes how to format the output data.\n    - id: password\n      type: System.Security.SecureString\n      description: The password required to access the X.509 certificate data.\n    return:\n      type: System.Byte[]\n      description: A byte array that represents the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"A value other than <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\\\"></xref>, <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\\\"></xref>, or <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\\\"></xref> was passed to the <code>contentType</code> parameter.  \\n  \\n -or-  \\n  \\n The certificate could not be exported.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  id: Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Export(X509ContentType, String)\n  nameWithType: X509Certificate.Export(X509ContentType, String)\n  fullName: X509Certificate.Export(X509ContentType, String)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Exports the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object to a byte array in a format described by one of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values, and using the specified password.\n  remarks: \"The `contentType` parameter accepts only the following values of the <xref:System.Security.Cryptography.X509Certificates.X509ContentType> enumeration: <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Cert>, <xref:System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert>, and <xref:System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12>.  Passing any other value causes a <xref:System.Security.Cryptography.CryptographicException> to be thrown.  \\n  \\n> [!IMPORTANT]\\n>  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);\n    parameters:\n    - id: contentType\n      type: System.Security.Cryptography.X509Certificates.X509ContentType\n      description: One of the <xref href=\"System.Security.Cryptography.X509Certificates.X509ContentType\"></xref> values that describes how to format the output data.\n    - id: password\n      type: System.String\n      description: The password required to access the X.509 certificate data.\n    return:\n      type: System.Byte[]\n      description: An array of bytes that represents the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Export*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"A value other than <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType.Cert\\\"></xref>, <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType.SerializedCert\\\"></xref>, or <xref href=\\\"System.Security.Cryptography.X509Certificates.X509ContentType.Pkcs12\\\"></xref> was passed to the <code>contentType</code> parameter.  \\n  \\n -or-  \\n  \\n The certificate could not be exported.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)\n  id: FormatDate(System.DateTime)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: FormatDate(DateTime)\n  nameWithType: X509Certificate.FormatDate(DateTime)\n  fullName: X509Certificate.FormatDate(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Converts the specified date and time to a string.\n  remarks: Some cultures cannot convert future dates into strings. If the expiration date of an X.509 certificate is beyond the range of the culture, <xref:System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate%2A> falls back to a calendar that can express the date. If the <xref:System.Globalization.CultureInfo.Calendar%2A> value is <xref:System.Globalization.UmAlQuraCalendar>, the calendar is changed to the <xref:System.Globalization.HijriCalendar> class; otherwise, it is changed to the <xref:System.Globalization.CultureInfo.InvariantCulture%2A>.\n  syntax:\n    content: protected static string FormatDate (DateTime date);\n    parameters:\n    - id: date\n      type: System.DateTime\n      description: The date and time to convert.\n    return:\n      type: System.String\n      description: A string representation of the value of the <xref href=\"System.DateTime\"></xref> object.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash\n  id: GetCertHash\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetCertHash()\n  nameWithType: X509Certificate.GetCertHash()\n  fullName: X509Certificate.GetCertHash()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the hash value for the X.509v3 certificate as an array of bytes.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash%2A> method to fill an array of bytes with the hash value for an X.509 certificate.  \\n  \\n [!code-cpp[X509Certificate.GetCertHash Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetCertHash Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetCertHash Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetCertHash Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetCertHash Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetCertHash Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual byte[] GetCertHash ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The hash value for the X.509 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString\n  id: GetCertHashString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetCertHashString()\n  nameWithType: X509Certificate.GetCertHashString()\n  fullName: X509Certificate.GetCertHashString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the SHA1 hash value for the X.509v3 certificate as a hexadecimal string.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString%2A> method to get an X.509 certificate hash value, convert it to a string, and display it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetCertHashString Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetCertHashString Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetCertHashString Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetCertHashString Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetCertHashString Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetCertHashString Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string GetCertHashString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The hexadecimal string representation of the X.509 certificate hash value.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString\n  id: GetEffectiveDateString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetEffectiveDateString()\n  nameWithType: X509Certificate.GetEffectiveDateString()\n  fullName: X509Certificate.GetEffectiveDateString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the effective date of this X.509v3 certificate.\n  remarks: \"The effective date is the date after which the X.509 certificate is considered valid.  \\n  \\n The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.\"\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString%2A> method to get the effective date of a certificate and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetEffectiveDateString Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetEffectiveDateString Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetEffectiveDateString Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetEffectiveDateString Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetEffectiveDateString Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetEffectiveDateString Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string GetEffectiveDateString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The effective date for this X.509 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString\n  id: GetExpirationDateString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetExpirationDateString()\n  nameWithType: X509Certificate.GetExpirationDateString()\n  fullName: X509Certificate.GetExpirationDateString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the expiration date of this X.509v3 certificate.\n  remarks: \"The expiration date is the date after which the X.509 certificate is no longer considered valid.  \\n  \\n The <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString%2A> method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.  \\n  \\n> [!NOTE]\\n>  This method may return a different string format on Macintosh computers, although the underlying <xref:System.DateTime> object will represent the same value.\"\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString%2A> method to get the expiration date of a certificate and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetExpirationDateString Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetExpirationDateString Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetExpirationDateString Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetExpirationDateString Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetExpirationDateString Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetExpirationDateString Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string GetExpirationDateString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The expiration date for this X.509 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat\n  id: GetFormat\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetFormat()\n  nameWithType: X509Certificate.GetFormat()\n  fullName: X509Certificate.GetFormat()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the name of the format of this X.509v3 certificate.\n  remarks: The format X.509 is always returned in this implementation.\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat%2A> method to get the format of a certificate and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetFormat Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetFormat Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetFormat Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetFormat Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetFormat Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetFormat Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string GetFormat ();\n    parameters: []\n    return:\n      type: System.String\n      description: The format of this X.509 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: X509Certificate.GetHashCode()\n  fullName: X509Certificate.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the hash code for the X.509v3 certificate as an integer.\n  remarks: If the X.509 certificate hash is an array of more than 4 bytes, any byte after the fourth byte is not seen in this integer representation.\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode%2A> method to return an integer representation of a certificate's hash code and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetHashCode Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetHashCode Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetHashCode Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetHashCode Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetHashCode Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetHashCode Method/VB/example.vb#1)]\"\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for the X.509 certificate as an integer.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName\n  id: GetIssuerName\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetIssuerName()\n  nameWithType: X509Certificate.GetIssuerName()\n  fullName: X509Certificate.GetIssuerName()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the name of the certification authority that issued the X.509v3 certificate.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName%2A> method to return the certificate issuer's name and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetIssuerName Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetIssuerName Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetIssuerName Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetIssuerName Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetIssuerName Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetIssuerName Method/VB/example.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use the Issuer property.\")]\n\n      public virtual string GetIssuerName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The name of the certification authority that issued the X.509 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"An error with the certificate occurs. For example:  \\n  \\n-   The certificate file does not exist.  \\n  \\n-   The certificate is invalid.  \\n  \\n-   The certificate's password is incorrect.\"\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm\n  id: GetKeyAlgorithm\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetKeyAlgorithm()\n  nameWithType: X509Certificate.GetKeyAlgorithm()\n  fullName: X509Certificate.GetKeyAlgorithm()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the key algorithm information for this X.509v3 certificate as a string.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm%2A> method to get a certificate's key algorithm in string format and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetKeyAlgorithm Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetKeyAlgorithm Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetKeyAlgorithm Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetKeyAlgorithm Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetKeyAlgorithm Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetKeyAlgorithm Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string GetKeyAlgorithm ();\n    parameters: []\n    return:\n      type: System.String\n      description: The key algorithm information for this X.509 certificate as a string.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The certificate context is invalid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters\n  id: GetKeyAlgorithmParameters\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetKeyAlgorithmParameters()\n  nameWithType: X509Certificate.GetKeyAlgorithmParameters()\n  fullName: X509Certificate.GetKeyAlgorithmParameters()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the key algorithm parameters for the X.509v3 certificate as an array of bytes.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters%2A> method to return a certificate's key algorithm parameters as an array of bytes and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetKeyAlgorithmParameters Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetKeyAlgorithmParameters Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetKeyAlgorithmParameters Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetKeyAlgorithmParameters Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetKeyAlgorithmParameters Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetKeyAlgorithmParameters Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual byte[] GetKeyAlgorithmParameters ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The key algorithm parameters for the X.509 certificate as an array of bytes.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The certificate context is invalid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString\n  id: GetKeyAlgorithmParametersString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetKeyAlgorithmParametersString()\n  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()\n  fullName: X509Certificate.GetKeyAlgorithmParametersString()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the key algorithm parameters for the X.509v3 certificate as a hexadecimal string.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString%2A> method to return a certificate's key algorithm parameters in string format and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetKeyAlgorithmParametersString#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetKeyAlgorithmParametersString/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetKeyAlgorithmParametersString#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetKeyAlgorithmParametersString/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetKeyAlgorithmParametersString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetKeyAlgorithmParametersString/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string GetKeyAlgorithmParametersString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The key algorithm parameters for the X.509 certificate as a hexadecimal string.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The certificate context is invalid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetName\n  id: GetName\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetName()\n  nameWithType: X509Certificate.GetName()\n  fullName: X509Certificate.GetName()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the name of the principal to which the certificate was issued.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetName%2A> method to return the name of a certificate's principal and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetName Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetName Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetName Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetName Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetName Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetName Method/VB/example.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"Use the Subject property.\")]\n\n      public virtual string GetName ();\n    parameters: []\n    return:\n      type: System.String\n      description: The name of the principal to which the certificate was issued.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The certificate context is invalid.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey\n  id: GetPublicKey\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetPublicKey()\n  nameWithType: X509Certificate.GetPublicKey()\n  fullName: X509Certificate.GetPublicKey()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the public key for the X.509v3 certificate as an array of bytes.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey%2A> method to return a certificate's public key as an array of bytes and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetPublicKey Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetPublicKey Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetPublicKey Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetPublicKey Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetPublicKey Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetPublicKey Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual byte[] GetPublicKey ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The public key for the X.509 certificate as an array of bytes.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The certificate context is invalid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString\n  id: GetPublicKeyString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetPublicKeyString()\n  nameWithType: X509Certificate.GetPublicKeyString()\n  fullName: X509Certificate.GetPublicKeyString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the public key for the X.509v3 certificate as a hexadecimal string.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString%2A> method to return a certificate's public key as a string and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetPublicKeyString Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetPublicKeyString Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetPublicKeyString Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetPublicKeyString Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetPublicKeyString Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetPublicKeyString Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string GetPublicKeyString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The public key for the X.509 certificate as a hexadecimal string.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData\n  id: GetRawCertData\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetRawCertData()\n  nameWithType: X509Certificate.GetRawCertData()\n  fullName: X509Certificate.GetRawCertData()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the raw data for the entire X.509v3 certificate as an array of bytes.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData%2A> method to return a certificate's raw data as an array of bytes and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetRawCertData Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetRawCertData Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetRawCertData Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetRawCertData Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetRawCertData Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetRawCertData Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual byte[] GetRawCertData ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: A byte array containing the X.509 certificate data.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString\n  id: GetRawCertDataString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetRawCertDataString()\n  nameWithType: X509Certificate.GetRawCertDataString()\n  fullName: X509Certificate.GetRawCertDataString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the raw data for the entire X.509v3 certificate as a hexadecimal string.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString%2A> method to return a certificate's raw data as a string and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetRawCertDataString Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetRawCertDataString Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetRawCertDataString Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetRawCertDataString Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetRawCertDataString Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetRawCertDataString Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string GetRawCertDataString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The X.509 certificate data as a hexadecimal string.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber\n  id: GetSerialNumber\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetSerialNumber()\n  nameWithType: X509Certificate.GetSerialNumber()\n  fullName: X509Certificate.GetSerialNumber()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the serial number of the X.509v3 certificate as an array of bytes.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber%2A> method to return a certificate's serial number as an array of bytes and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetSerialNumber Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetSerialNumber Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetSerialNumber Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetSerialNumber Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetSerialNumber Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetSerialNumber Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual byte[] GetSerialNumber ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: The serial number of the X.509 certificate as an array of bytes.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The certificate context is invalid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString\n  id: GetSerialNumberString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: GetSerialNumberString()\n  nameWithType: X509Certificate.GetSerialNumberString()\n  fullName: X509Certificate.GetSerialNumberString()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns the serial number of the X.509v3 certificate as a hexadecimal string.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString%2A> method to return a certificate's serial number as a string and displays it to the console.  \\n  \\n [!code-cpp[X509Certificate.GetSerialNumberString Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.GetSerialNumberString Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.GetSerialNumberString Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.GetSerialNumberString Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.GetSerialNumberString Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.GetSerialNumberString Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string GetSerialNumberString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The serial number of the X.509 certificate as a hexadecimal string.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate.Handle\n  id: Handle\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: X509Certificate.Handle\n  fullName: X509Certificate.Handle\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets a handle to a Microsoft Cryptographic API certificate context described by an unmanaged `PCCERT_CONTEXT` structure.\n  remarks: The handle is valid only for the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public IntPtr Handle { get; }\n    return:\n      type: System.IntPtr\n      description: An <xref href=\"System.IntPtr\"></xref> structure that represents an unmanaged `PCCERT_CONTEXT` structure.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])\n  id: Import(System.Byte[])\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(Byte[])\n  nameWithType: X509Certificate.Import(Byte[])\n  fullName: X509Certificate.Import(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with data from a byte array.\n  remarks: This method can be used to take the raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object with its associated values.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual void Import (byte[] rawData);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: A byte array containing data from an X.509 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>rawData</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The length of the <code>rawData</code> parameter is 0.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)\n  id: Import(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(String)\n  nameWithType: X509Certificate.Import(String)\n  fullName: X509Certificate.Import(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with information from a certificate file.\n  remarks: This method uses a certificate file (such as a file with a .cer extension) that represents an X.509 certificate, and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object with the certificate that the file contains.\n  example:\n  - \"The following example loads an X.509 certificate from a file, calls the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method, and displays the results to the console.  \\n  \\n [!code-cpp[Cryptography.X509Certificates.X509Certificate.Import#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate.Import/CPP/sample.cpp#1)]\\n [!code-csharp[Cryptography.X509Certificates.X509Certificate.Import#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate.Import/CS/sample.cs#1)]\\n [!code-vb[Cryptography.X509Certificates.X509Certificate.Import#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.X509Certificates.X509Certificate.Import/VB/sample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual void Import (string fileName);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of a certificate file represented as a string.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>fileName</code> parameter is `null`.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(Byte[], SecureString, X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(Byte[], SecureString, X509KeyStorageFlags)\n  fullName: X509Certificate.Import(Byte[], SecureString, X509KeyStorageFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Populates an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object using data from a byte array, a password, and a key storage flag.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.\n  syntax:\n    content: public virtual void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: A byte array that contains data from an X.509 certificate.\n    - id: password\n      type: System.Security.SecureString\n      description: The password required to access the X.509 certificate data.\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: A bitwise combination of the enumeration values that control where and how to import the certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>rawData</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The length of the <code>rawData</code> parameter is 0.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(Byte[], String, X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(Byte[], String, X509KeyStorageFlags)\n  fullName: X509Certificate.Import(Byte[], String, X509KeyStorageFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object using data from a byte array, a password, and flags for determining how the private key is imported.\n  remarks: This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object using a password for the certificate represented by the byte array. The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how the private key is imported.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: rawData\n      type: System.Byte[]\n      description: A byte array containing data from an X.509 certificate.\n    - id: password\n      type: System.String\n      description: The password required to access the X.509 certificate data.\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: A bitwise combination of the enumeration values that control where and how to import the certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>rawData</code> parameter is `null`.  \\n  \\n -or-  \\n  \\n The length of the <code>rawData</code> parameter is 0.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(String, SecureString, X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(String, SecureString, X509KeyStorageFlags)\n  fullName: X509Certificate.Import(String, SecureString, X509KeyStorageFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Populates an <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with information from a certificate file, a password, and a key storage flag.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.\n  syntax:\n    content: public virtual void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of a certificate file.\n    - id: password\n      type: System.Security.SecureString\n      description: The password required to access the X.509 certificate data.\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: A bitwise combination of the enumeration values that control where and how to import the certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>fileName</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  id: Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Import(String, String, X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(String, String, X509KeyStorageFlags)\n  fullName: X509Certificate.Import(String, String, X509KeyStorageFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Populates the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object with information from a certificate file, a password, and a <xref href=\"System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\"></xref> value.\n  remarks: >-\n    > [!IMPORTANT]\n\n    >  Never hard-code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);\n    parameters:\n    - id: fileName\n      type: System.String\n      description: The name of a certificate file represented as a string.\n    - id: password\n      type: System.String\n      description: The password required to access the X.509 certificate data.\n    - id: keyStorageFlags\n      type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n      description: A bitwise combination of the enumeration values that control where and how to import the certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>fileName</code> parameter is `null`.\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\n  id: Issuer\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Issuer\n  nameWithType: X509Certificate.Issuer\n  fullName: X509Certificate.Issuer\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets the name of the certificate authority that issued the X.509v3 certificate.\n  syntax:\n    content: public string Issuer { get; }\n    return:\n      type: System.String\n      description: The name of the certificate authority that issued the X.509v3 certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The certificate handle is invalid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.Reset\n  id: Reset\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: X509Certificate.Reset()\n  fullName: X509Certificate.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Resets the state of the <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate2\"></xref> object.\n  remarks: Use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Reset%2A> method to reset the state of the certificate. This method also frees any resources associated with the certificate.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public virtual void Reset ();\n    parameters: []\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject\n  commentId: P:System.Security.Cryptography.X509Certificates.X509Certificate.Subject\n  id: Subject\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: Subject\n  nameWithType: X509Certificate.Subject\n  fullName: X509Certificate.Subject\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets the subject distinguished name from the certificate.\n  syntax:\n    content: public string Subject { get; }\n    return:\n      type: System.String\n      description: The subject distinguished name from the certificate.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The certificate handle is invalid.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.ToString\n  id: ToString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: X509Certificate.ToString()\n  fullName: X509Certificate.ToString()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns a string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method to display the value of a certificate to the console.  \\n  \\n [!code-cpp[X509Certificate.ToString Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.ToString Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.ToString Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.ToString Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.ToString Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.ToString Method/VB/example.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)\n  id: ToString(System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: ToString(Boolean)\n  nameWithType: X509Certificate.ToString(Boolean)\n  fullName: X509Certificate.ToString(Boolean)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.X509Certificates\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Returns a string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object, with extra information, if specified.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.ToString%2A> method to display the value of a certificate to the console.  \\n  \\n [!code-cpp[X509Certificate.ToString Method#1](~/samples/snippets/cpp/VS_Snippets_CLR/X509Certificate.ToString Method/CPP/example.cpp#1)]\\n [!code-csharp[X509Certificate.ToString Method#1](~/samples/snippets/csharp/VS_Snippets_CLR/X509Certificate.ToString Method/CS/example.cs#1)]\\n [!code-vb[X509Certificate.ToString Method#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/X509Certificate.ToString Method/VB/example.vb#1)]\"\n  syntax:\n    content: public virtual string ToString (bool fVerbose);\n    parameters:\n    - id: fVerbose\n      type: System.Boolean\n      description: '`true` to produce the verbose form of the string representation; otherwise, `false`.'\n    return:\n      type: System.String\n      description: A string representation of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: X509Certificate.IDeserializationCallback.OnDeserialization(Object)\n  fullName: X509Certificate.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Implements the <xref href=\"System.Runtime.Serialization.ISerializable\"></xref> interface and is called back by the deserialization event when deserialization is complete.\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The source of the deserialization event.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  langs:\n  - csharp\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: X509Certificate.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: X509Certificate.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.X509Certificates\n  namespace: System.Security.Cryptography.X509Certificates\n  summary: Gets serialization information with all the data needed to recreate an instance of the current <xref href=\"System.Security.Cryptography.X509Certificates.X509Certificate\"></xref> object.\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The object to populate with serialization information.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The destination context of the serialization.\n  overload: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate()\n  nameWithType: X509Certificate.X509Certificate()\n  fullName: X509Certificate.X509Certificate()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String, SecureString, X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(String, SecureString, X509KeyStorageFlags)\n  fullName: X509Certificate.X509Certificate(String, SecureString, X509KeyStorageFlags)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509KeyStorageFlags\n  nameWithType: X509KeyStorageFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[], String, X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(Byte[], String, X509KeyStorageFlags)\n  fullName: X509Certificate.X509Certificate(Byte[], String, X509KeyStorageFlags)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[], SecureString, X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(Byte[], SecureString, X509KeyStorageFlags)\n  fullName: X509Certificate.X509Certificate(Byte[], SecureString, X509KeyStorageFlags)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String, String)\n  nameWithType: X509Certificate.X509Certificate(String, String)\n  fullName: X509Certificate.X509Certificate(String, String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.Security.SecureString)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String, SecureString)\n  nameWithType: X509Certificate.X509Certificate(String, SecureString)\n  fullName: X509Certificate.X509Certificate(String, SecureString)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(SerializationInfo, StreamingContext)\n  nameWithType: X509Certificate.X509Certificate(SerializationInfo, StreamingContext)\n  fullName: X509Certificate.X509Certificate(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String, String, X509KeyStorageFlags)\n  nameWithType: X509Certificate.X509Certificate(String, String, X509KeyStorageFlags)\n  fullName: X509Certificate.X509Certificate(String, String, X509KeyStorageFlags)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.Security.SecureString)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[], SecureString)\n  nameWithType: X509Certificate.X509Certificate(Byte[], SecureString)\n  fullName: X509Certificate.X509Certificate(Byte[], SecureString)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(String)\n  nameWithType: X509Certificate.X509Certificate(String)\n  fullName: X509Certificate.X509Certificate(String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(X509Certificate)\n  nameWithType: X509Certificate.X509Certificate(X509Certificate)\n  fullName: X509Certificate.X509Certificate(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.IntPtr)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(IntPtr)\n  nameWithType: X509Certificate.X509Certificate(IntPtr)\n  fullName: X509Certificate.X509Certificate(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[])\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[])\n  nameWithType: X509Certificate.X509Certificate(Byte[])\n  fullName: X509Certificate.X509Certificate(Byte[])\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor(System.Byte[],System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate(Byte[], String)\n  nameWithType: X509Certificate.X509Certificate(Byte[], String)\n  fullName: X509Certificate.X509Certificate(Byte[], String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: CreateFromCertFile(String)\n  nameWithType: X509Certificate.CreateFromCertFile(String)\n  fullName: X509Certificate.CreateFromCertFile(String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: CreateFromSignedFile(String)\n  nameWithType: X509Certificate.CreateFromSignedFile(String)\n  fullName: X509Certificate.CreateFromSignedFile(String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: X509Certificate.Dispose(Boolean)\n  fullName: X509Certificate.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Dispose()\n  nameWithType: X509Certificate.Dispose()\n  fullName: X509Certificate.Dispose()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: X509Certificate.Equals(Object)\n  fullName: X509Certificate.Equals(Object)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Equals(X509Certificate)\n  nameWithType: X509Certificate.Equals(X509Certificate)\n  fullName: X509Certificate.Equals(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Export(X509ContentType)\n  nameWithType: X509Certificate.Export(X509ContentType)\n  fullName: X509Certificate.Export(X509ContentType)\n- uid: System.Security.Cryptography.X509Certificates.X509ContentType\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509ContentType\n  nameWithType: X509ContentType\n  fullName: System.Security.Cryptography.X509Certificates.X509ContentType\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.Security.SecureString)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Export(X509ContentType, SecureString)\n  nameWithType: X509Certificate.Export(X509ContentType, SecureString)\n  fullName: X509Certificate.Export(X509ContentType, SecureString)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Export(X509ContentType, String)\n  nameWithType: X509Certificate.Export(X509ContentType, String)\n  fullName: X509Certificate.Export(X509ContentType, String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate(System.DateTime)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: FormatDate(DateTime)\n  nameWithType: X509Certificate.FormatDate(DateTime)\n  fullName: X509Certificate.FormatDate(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetCertHash()\n  nameWithType: X509Certificate.GetCertHash()\n  fullName: X509Certificate.GetCertHash()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetCertHashString()\n  nameWithType: X509Certificate.GetCertHashString()\n  fullName: X509Certificate.GetCertHashString()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetEffectiveDateString()\n  nameWithType: X509Certificate.GetEffectiveDateString()\n  fullName: X509Certificate.GetEffectiveDateString()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetExpirationDateString()\n  nameWithType: X509Certificate.GetExpirationDateString()\n  fullName: X509Certificate.GetExpirationDateString()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetFormat()\n  nameWithType: X509Certificate.GetFormat()\n  fullName: X509Certificate.GetFormat()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: X509Certificate.GetHashCode()\n  fullName: X509Certificate.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetIssuerName()\n  nameWithType: X509Certificate.GetIssuerName()\n  fullName: X509Certificate.GetIssuerName()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetKeyAlgorithm()\n  nameWithType: X509Certificate.GetKeyAlgorithm()\n  fullName: X509Certificate.GetKeyAlgorithm()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetKeyAlgorithmParameters()\n  nameWithType: X509Certificate.GetKeyAlgorithmParameters()\n  fullName: X509Certificate.GetKeyAlgorithmParameters()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetKeyAlgorithmParametersString()\n  nameWithType: X509Certificate.GetKeyAlgorithmParametersString()\n  fullName: X509Certificate.GetKeyAlgorithmParametersString()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetName()\n  nameWithType: X509Certificate.GetName()\n  fullName: X509Certificate.GetName()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetPublicKey()\n  nameWithType: X509Certificate.GetPublicKey()\n  fullName: X509Certificate.GetPublicKey()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetPublicKeyString()\n  nameWithType: X509Certificate.GetPublicKeyString()\n  fullName: X509Certificate.GetPublicKeyString()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetRawCertData()\n  nameWithType: X509Certificate.GetRawCertData()\n  fullName: X509Certificate.GetRawCertData()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetRawCertDataString()\n  nameWithType: X509Certificate.GetRawCertDataString()\n  fullName: X509Certificate.GetRawCertDataString()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetSerialNumber()\n  nameWithType: X509Certificate.GetSerialNumber()\n  fullName: X509Certificate.GetSerialNumber()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetSerialNumberString()\n  nameWithType: X509Certificate.GetSerialNumberString()\n  fullName: X509Certificate.GetSerialNumberString()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Handle\n  nameWithType: X509Certificate.Handle\n  fullName: X509Certificate.Handle\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[])\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(Byte[])\n  nameWithType: X509Certificate.Import(Byte[])\n  fullName: X509Certificate.Import(Byte[])\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(String)\n  nameWithType: X509Certificate.Import(String)\n  fullName: X509Certificate.Import(String)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(Byte[], SecureString, X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(Byte[], SecureString, X509KeyStorageFlags)\n  fullName: X509Certificate.Import(Byte[], SecureString, X509KeyStorageFlags)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(Byte[], String, X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(Byte[], String, X509KeyStorageFlags)\n  fullName: X509Certificate.Import(Byte[], String, X509KeyStorageFlags)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(String, SecureString, X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(String, SecureString, X509KeyStorageFlags)\n  fullName: X509Certificate.Import(String, SecureString, X509KeyStorageFlags)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import(String, String, X509KeyStorageFlags)\n  nameWithType: X509Certificate.Import(String, String, X509KeyStorageFlags)\n  fullName: X509Certificate.Import(String, String, X509KeyStorageFlags)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Issuer\n  nameWithType: X509Certificate.Issuer\n  fullName: X509Certificate.Issuer\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Reset()\n  nameWithType: X509Certificate.Reset()\n  fullName: X509Certificate.Reset()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Subject\n  nameWithType: X509Certificate.Subject\n  fullName: X509Certificate.Subject\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: ToString()\n  nameWithType: X509Certificate.ToString()\n  fullName: X509Certificate.ToString()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString(System.Boolean)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: ToString(Boolean)\n  nameWithType: X509Certificate.ToString(Boolean)\n  fullName: X509Certificate.ToString(Boolean)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: X509Certificate.IDeserializationCallback.OnDeserialization(Object)\n  fullName: X509Certificate.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: X509Certificate.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: X509Certificate.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Dispose\n  nameWithType: X509Certificate.Dispose\n  fullName: X509Certificate.Dispose\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.#ctor*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate.X509Certificate\n  fullName: X509Certificate.X509Certificate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: CreateFromCertFile\n  nameWithType: X509Certificate.CreateFromCertFile\n  fullName: X509Certificate.CreateFromCertFile\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: CreateFromSignedFile\n  nameWithType: X509Certificate.CreateFromSignedFile\n  fullName: X509Certificate.CreateFromSignedFile\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Equals*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Equals\n  nameWithType: X509Certificate.Equals\n  fullName: X509Certificate.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Export*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Export\n  nameWithType: X509Certificate.Export\n  fullName: X509Certificate.Export\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: FormatDate\n  nameWithType: X509Certificate.FormatDate\n  fullName: X509Certificate.FormatDate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetCertHash\n  nameWithType: X509Certificate.GetCertHash\n  fullName: X509Certificate.GetCertHash\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetCertHashString\n  nameWithType: X509Certificate.GetCertHashString\n  fullName: X509Certificate.GetCertHashString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetEffectiveDateString\n  nameWithType: X509Certificate.GetEffectiveDateString\n  fullName: X509Certificate.GetEffectiveDateString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetExpirationDateString\n  nameWithType: X509Certificate.GetExpirationDateString\n  fullName: X509Certificate.GetExpirationDateString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetFormat\n  nameWithType: X509Certificate.GetFormat\n  fullName: X509Certificate.GetFormat\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetHashCode\n  nameWithType: X509Certificate.GetHashCode\n  fullName: X509Certificate.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetIssuerName\n  nameWithType: X509Certificate.GetIssuerName\n  fullName: X509Certificate.GetIssuerName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetKeyAlgorithm\n  nameWithType: X509Certificate.GetKeyAlgorithm\n  fullName: X509Certificate.GetKeyAlgorithm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetKeyAlgorithmParameters\n  nameWithType: X509Certificate.GetKeyAlgorithmParameters\n  fullName: X509Certificate.GetKeyAlgorithmParameters\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetKeyAlgorithmParametersString\n  nameWithType: X509Certificate.GetKeyAlgorithmParametersString\n  fullName: X509Certificate.GetKeyAlgorithmParametersString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetName*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetName\n  nameWithType: X509Certificate.GetName\n  fullName: X509Certificate.GetName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetPublicKey\n  nameWithType: X509Certificate.GetPublicKey\n  fullName: X509Certificate.GetPublicKey\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetPublicKeyString\n  nameWithType: X509Certificate.GetPublicKeyString\n  fullName: X509Certificate.GetPublicKeyString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetRawCertData\n  nameWithType: X509Certificate.GetRawCertData\n  fullName: X509Certificate.GetRawCertData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetRawCertDataString\n  nameWithType: X509Certificate.GetRawCertDataString\n  fullName: X509Certificate.GetRawCertDataString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetSerialNumber\n  nameWithType: X509Certificate.GetSerialNumber\n  fullName: X509Certificate.GetSerialNumber\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: GetSerialNumberString\n  nameWithType: X509Certificate.GetSerialNumberString\n  fullName: X509Certificate.GetSerialNumberString\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Handle*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Handle\n  nameWithType: X509Certificate.Handle\n  fullName: X509Certificate.Handle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Import*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Import\n  nameWithType: X509Certificate.Import\n  fullName: X509Certificate.Import\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Issuer*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Issuer\n  nameWithType: X509Certificate.Issuer\n  fullName: X509Certificate.Issuer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Reset*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Reset\n  nameWithType: X509Certificate.Reset\n  fullName: X509Certificate.Reset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.Subject*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: Subject\n  nameWithType: X509Certificate.Subject\n  fullName: X509Certificate.Subject\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.ToString*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: ToString\n  nameWithType: X509Certificate.ToString\n  fullName: X509Certificate.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  nameWithType: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  fullName: X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData*\n  parent: System.Security.Cryptography.X509Certificates.X509Certificate\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData\n  nameWithType: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData\n  fullName: X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n- uid: System.Runtime.Serialization.IDeserializationCallback\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IDeserializationCallback\n  nameWithType: IDeserializationCallback\n  fullName: System.Runtime.Serialization.IDeserializationCallback\n- uid: System.Runtime.Serialization.ISerializable\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: ISerializable\n  nameWithType: ISerializable\n  fullName: System.Runtime.Serialization.ISerializable\n"}