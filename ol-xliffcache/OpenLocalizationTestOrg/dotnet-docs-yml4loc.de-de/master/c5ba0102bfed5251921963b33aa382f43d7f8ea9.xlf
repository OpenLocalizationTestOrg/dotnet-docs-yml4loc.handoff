<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5ba0102bfed5251921963b33aa382f43d7f8ea9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.TransportSecurityBindingElement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1de838c83628a3a9a2cfdcb87592a0c21f71b664</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e64df66a544ac40d4720dd4777e24130dc72b90</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a custom binding element that supports mixed-mode security (such as, optimized message security over a secure transport).</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom binding contains a collection of binding elements arranged in a specific order: the element that represents the top of the binding stack is added first, the next element down in the binding stack is added second, and so forth.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add this class to a binding</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create custom binding elements that will be above this binding element in the binding stack, such as the optional <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionFlowBindingElement&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.ReliableSessionBindingElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add these elements in the previously mentioned order to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElementCollection&gt;</ph> using the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportSecurityBindingElement&gt;</ph> and add it to the collection.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add any additional custom binding elements to the collection, such as <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TcpTransportBindingElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> Once an instance of this object is created, you should treat the properties of its base class, <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph>, as immutable.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">`set`</ph> on some properties may have unpredictable effects: the binding may behave as if the property retained its old value, with a run-time failure being the only indication of an issue.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two properties known to behave this way are <ph id="ph1">&lt;xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>There may be other properties for which this is true.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates an instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.TransportSecurityBindingElement"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingElement"&gt;&lt;/xref&gt;</ph> object initialized from the current class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This creates a complete copy of the current binding element object tree, also called a deep clone.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>(This can also be described as copying the entire object graph.) Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a deep clone is not returned, the run-time behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shallow clone of an object, by contrast, is a copy of the object only.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingElement"&gt;&lt;/xref&gt;</ph> object with property values equal to those of the current instance.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets a property from the specified <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method gets the specified object from the base class or from one of that class's ancestors.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object returned is usually a collection of properties, for example an object that implements <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ISecurityCapabilities&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The property to get.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The property from the specified <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BindingContext"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">`null`</ph> if the object is not found.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Exports a custom policy assertion about bindings.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> to communicate to clients the existence of this custom binding element in the binding stack.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method takes two parameters: the <ph id="ph1">&lt;xref:System.ServiceModel.Description.MetadataExporter&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A&gt;</ph> methods to obtain collections of policy assertions that have already been exported at various scopes.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then use this method to add your own policy assertions to the appropriate collection.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A&gt;</ph> property exposes the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> for the endpoint that is being exported.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows this method to correctly scope their exported policy assertions.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, security attributes in code may add behaviors to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> that indicate where security policy assertions should be added.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyImportExtension&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.MetadataExporter"&gt;&lt;/xref&gt;</ph> that you can use to modify the exporting process.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.PolicyConversionContext"&gt;&lt;/xref&gt;</ph> that you can use to insert your custom policy assertion.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>