{"nodes":[{"content":"The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.","nodes":[{"pos":[0,135],"content":"The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.","nodes":[{"content":"The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.","pos":[0,135]}]}],"pos":[1490,1626],"yaml":true},{"content":"This exception is typically thrown when there are too many headers or headers are missing from the message. This can include infrastructure headers such as the Action and Reliable Message headers. This exception derives from <xref:System.ServiceModel.ProtocolException>, which in turn derives from <xref:System.ServiceModel.CommunicationException>. The <xref:System.ServiceModel.CommunicationException> class represents a class of recoverable errors that may be thrown during communication between endpoints and that robust [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client and service applications are expected to handle. To prevent the more generic <xref:System.ServiceModel.CommunicationException> handler from catching the more specific <xref:System.ServiceModel.ProtocolException>, catch this exception prior to handling <xref:System.ServiceModel.CommunicationException>.","nodes":[{"pos":[0,879],"content":"This exception is typically thrown when there are too many headers or headers are missing from the message. This can include infrastructure headers such as the Action and Reliable Message headers. This exception derives from <xref:System.ServiceModel.ProtocolException>, which in turn derives from <xref:System.ServiceModel.CommunicationException>. The <xref:System.ServiceModel.CommunicationException> class represents a class of recoverable errors that may be thrown during communication between endpoints and that robust [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client and service applications are expected to handle. To prevent the more generic <xref:System.ServiceModel.CommunicationException> handler from catching the more specific <xref:System.ServiceModel.ProtocolException>, catch this exception prior to handling <xref:System.ServiceModel.CommunicationException>.","nodes":[{"content":"This exception is typically thrown when there are too many headers or headers are missing from the message.","pos":[0,107]},{"content":"This can include infrastructure headers such as the Action and Reliable Message headers.","pos":[108,196]},{"content":"This exception derives from <ph id=\"ph1\">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, which in turn derives from <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.","pos":[197,348],"source":" This exception derives from <xref:System.ServiceModel.ProtocolException>, which in turn derives from <xref:System.ServiceModel.CommunicationException>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> class represents a class of recoverable errors that may be thrown during communication between endpoints and that robust <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client and service applications are expected to handle.","pos":[349,625],"source":" The <xref:System.ServiceModel.CommunicationException> class represents a class of recoverable errors that may be thrown during communication between endpoints and that robust [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client and service applications are expected to handle."},{"content":"To prevent the more generic <ph id=\"ph1\">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> handler from catching the more specific <ph id=\"ph2\">&lt;xref:System.ServiceModel.ProtocolException&gt;</ph>, catch this exception prior to handling <ph id=\"ph3\">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.","pos":[626,879],"source":" To prevent the more generic <xref:System.ServiceModel.CommunicationException> handler from catching the more specific <xref:System.ServiceModel.ProtocolException>, catch this exception prior to handling <xref:System.ServiceModel.CommunicationException>."}]}],"pos":[1637,2517],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class."}],"pos":[4684,4789],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class with the specified message.","nodes":[{"pos":[0,131],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> class with the specified message.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class with the specified message."}],"pos":[6135,6267],"yaml":true},{"content":"Use this constructor when you want to pass an error message to the user. The content of the message parameter should be understandable to the intended users.","nodes":[{"pos":[0,157],"content":"Use this constructor when you want to pass an error message to the user. The content of the message parameter should be understandable to the intended users.","nodes":[{"content":"Use this constructor when you want to pass an error message to the user. The content of the message parameter should be understandable to the intended users.","pos":[0,157],"nodes":[{"content":"Use this constructor when you want to pass an error message to the user.","pos":[0,72]},{"content":"The content of the message parameter should be understandable to the intended users.","pos":[73,157]}]}]}],"pos":[6278,6436],"yaml":true,"extradata":"MT"},{"content":"The message carried in the exception.","nodes":[{"pos":[0,37],"content":"The message carried in the exception.","nodes":[{"content":"The message carried in the exception.","pos":[0,37]}]}],"pos":[6586,6624],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class used to deserialize data into a <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> object.","nodes":[{"pos":[0,207],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> class used to deserialize data into a <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> object.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class used to deserialize data into a <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> object."}],"pos":[8218,8426],"yaml":true},{"content":"This constructor is called during deserialization to restore the exception object transmitted over a stream.","nodes":[{"pos":[0,108],"content":"This constructor is called during deserialization to restore the exception object transmitted over a stream.","nodes":[{"content":"This constructor is called during deserialization to restore the exception object transmitted over a stream.","pos":[0,108]}]}],"pos":[8437,8546],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.","nodes":[{"pos":[0,143],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.SerializationInfo\"&gt;&lt;/xref&gt;</ph> that holds the serialized object data about the exception being thrown.","source":"The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown."}],"pos":[8821,8965],"yaml":true},{"content":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.","nodes":[{"pos":[0,140],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Serialization.StreamingContext\"&gt;&lt;/xref&gt;</ph> that contains contextual information about the source or destination.","source":"The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination."}],"pos":[9060,9201],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.","nodes":[{"pos":[0,215],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message and a value that indicates whether the message header is a duplicate or is missing."}],"pos":[10543,10759],"yaml":true},{"content":"The exception message.","nodes":[{"pos":[0,22],"content":"The exception message.","nodes":[{"content":"The exception message.","pos":[0,22]}]}],"pos":[10927,10950],"yaml":true},{"content":"`true` if the multiple message header is a duplicate; `false` if there are no message headers.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if the multiple message header is a duplicate; <ph id=\"ph2\">`false`</ph> if there are no message headers.","source":"`true` if the multiple message header is a duplicate; `false` if there are no message headers."}],"pos":[11018,11115],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message and the inner exception that caused the exception.","nodes":[{"pos":[0,182],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> class using the specified message and the inner exception that caused the exception.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message and the inner exception that caused the exception."}],"pos":[12469,12652],"yaml":true},{"content":"Use this constructor when you want to pass an error message and information about an inner exception up to the user. The content of the message parameter should be understandable to the intended users.  \n  \n An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor or a `null` reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"pos":[0,201],"content":"Use this constructor when you want to pass an error message and information about an inner exception up to the user. The content of the message parameter should be understandable to the intended users.","nodes":[{"content":"Use this constructor when you want to pass an error message and information about an inner exception up to the user. The content of the message parameter should be understandable to the intended users.","pos":[0,201],"nodes":[{"content":"Use this constructor when you want to pass an error message and information about an inner exception up to the user.","pos":[0,116]},{"content":"The content of the message parameter should be understandable to the intended users.","pos":[117,201]}]}]},{"pos":[208,671],"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor or a `null` reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.","nodes":[{"content":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.","pos":[0,179],"source":"An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor or a <ph id=\"ph2\">`null`</ph> reference (<ph id=\"ph3\">`Nothing`</ph> in Visual Basic) if the <ph id=\"ph4\">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.","pos":[180,463],"source":" The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor or a `null` reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor."}]}],"pos":[12663,13339],"yaml":true,"extradata":"MT"},{"content":"The exception message.","nodes":[{"pos":[0,22],"content":"The exception message.","nodes":[{"content":"The exception message.","pos":[0,22]}]}],"pos":[13515,13538],"yaml":true},{"content":"The <xref href=\"System.Exception\"></xref> that contains the inner exception that caused the exception.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that contains the inner exception that caused the exception.","source":"The <xref href=\"System.Exception\"></xref> that contains the inner exception that caused the exception."}],"pos":[13611,13714],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace.","nodes":[{"pos":[0,159],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> class using the specified message, header name and namespace.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace."}],"pos":[15116,15276],"yaml":true},{"content":"The exception message.","nodes":[{"pos":[0,22],"content":"The exception message.","nodes":[{"content":"The exception message.","pos":[0,22]}]}],"pos":[15456,15479],"yaml":true},{"content":"The name of the message header.","nodes":[{"pos":[0,31],"content":"The name of the message header.","nodes":[{"content":"The name of the message header.","pos":[0,31]}]}],"pos":[15545,15577],"yaml":true},{"content":"The namespace of the message header.","nodes":[{"pos":[0,36],"content":"The namespace of the message header.","nodes":[{"content":"The namespace of the message header.","pos":[0,36]}]}],"pos":[15635,15672],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.","nodes":[{"pos":[0,243],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing."}],"pos":[17146,17390],"yaml":true},{"content":"The exception message.","nodes":[{"pos":[0,22],"content":"The exception message.","nodes":[{"content":"The exception message.","pos":[0,22]}]}],"pos":[17588,17611],"yaml":true},{"content":"The name of the message header.","nodes":[{"pos":[0,31],"content":"The name of the message header.","nodes":[{"content":"The name of the message header.","pos":[0,31]}]}],"pos":[17677,17709],"yaml":true},{"content":"The namespace of the message header.","nodes":[{"pos":[0,36],"content":"The namespace of the message header.","nodes":[{"content":"The namespace of the message header.","pos":[0,36]}]}],"pos":[17767,17804],"yaml":true},{"content":"`true` if the multiple message header is a duplicate; `false` if there are no message headers.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if the multiple message header is a duplicate; <ph id=\"ph2\">`false`</ph> if there are no message headers.","source":"`true` if the multiple message header is a duplicate; `false` if there are no message headers."}],"pos":[17872,17969],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace, and the inner exception that caused the exception.","nodes":[{"pos":[0,210],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> class using the specified message, header name and namespace, and the inner exception that caused the exception.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace, and the inner exception that caused the exception."}],"pos":[19455,19666],"yaml":true},{"content":"The exception message.","nodes":[{"pos":[0,22],"content":"The exception message.","nodes":[{"content":"The exception message.","pos":[0,22]}]}],"pos":[19872,19895],"yaml":true},{"content":"The name of the message header.","nodes":[{"pos":[0,31],"content":"The name of the message header.","nodes":[{"content":"The name of the message header.","pos":[0,31]}]}],"pos":[19961,19993],"yaml":true},{"content":"The namespace of the message header.","nodes":[{"pos":[0,36],"content":"The namespace of the message header.","nodes":[{"content":"The namespace of the message header.","pos":[0,36]}]}],"pos":[20051,20088],"yaml":true},{"content":"The <xref href=\"System.Exception\"></xref> that contains the inner exception that caused the exception.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that contains the inner exception that caused the exception.","source":"The <xref href=\"System.Exception\"></xref> that contains the inner exception that caused the exception."}],"pos":[20161,20264],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.","nodes":[{"pos":[0,290],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.MessageHeaderException\"&gt;&lt;/xref&gt;</ph> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception."}],"pos":[21822,22113],"yaml":true},{"content":"The exception message.","nodes":[{"pos":[0,22],"content":"The exception message.","nodes":[{"content":"The exception message.","pos":[0,22]}]}],"pos":[22337,22360],"yaml":true},{"content":"The name of the message header.","nodes":[{"pos":[0,31],"content":"The name of the message header.","nodes":[{"content":"The name of the message header.","pos":[0,31]}]}],"pos":[22426,22458],"yaml":true},{"content":"The namespace of the message header.","nodes":[{"pos":[0,36],"content":"The namespace of the message header.","nodes":[{"content":"The namespace of the message header.","pos":[0,36]}]}],"pos":[22516,22553],"yaml":true},{"content":"`true` if the multiple message header is a duplicate; `false` if there are no message headers.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if the multiple message header is a duplicate; <ph id=\"ph2\">`false`</ph> if there are no message headers.","source":"`true` if the multiple message header is a duplicate; `false` if there are no message headers."}],"pos":[22621,22718],"yaml":true},{"content":"The <xref href=\"System.Exception\"></xref> that contains the inner exception that caused the exception.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that contains the inner exception that caused the exception.","source":"The <xref href=\"System.Exception\"></xref> that contains the inner exception that caused the exception."}],"pos":[22791,22894],"yaml":true},{"content":"Gets the name of the SOAP header that caused the exception.","nodes":[{"pos":[0,59],"content":"Gets the name of the SOAP header that caused the exception.","nodes":[{"content":"Gets the name of the SOAP header that caused the exception.","pos":[0,59]}]}],"pos":[24069,24129],"yaml":true},{"content":"The name of the SOAP header.","nodes":[{"pos":[0,28],"content":"The name of the SOAP header.","nodes":[{"content":"The name of the SOAP header.","pos":[0,28]}]}],"pos":[24243,24272],"yaml":true},{"content":"Gets the namespace of the SOAP header that caused the exception.","nodes":[{"pos":[0,64],"content":"Gets the namespace of the SOAP header that caused the exception.","nodes":[{"content":"Gets the namespace of the SOAP header that caused the exception.","pos":[0,64]}]}],"pos":[25482,25547],"yaml":true},{"content":"The namespace of the SOAP header.","nodes":[{"pos":[0,33],"content":"The namespace of the SOAP header.","nodes":[{"content":"The namespace of the SOAP header.","pos":[0,33]}]}],"pos":[25666,25700],"yaml":true},{"content":"Gets a value that indicates whether there are multiple message headers or no message headers.","nodes":[{"pos":[0,93],"content":"Gets a value that indicates whether there are multiple message headers or no message headers.","nodes":[{"content":"Gets a value that indicates whether there are multiple message headers or no message headers.","pos":[0,93]}]}],"pos":[26891,26985],"yaml":true},{"content":"`true` if the multiple message header is a duplicate; `false` if there are no message headers.","nodes":[{"pos":[0,94],"content":"<ph id=\"ph1\">`true`</ph> if the multiple message header is a duplicate; <ph id=\"ph2\">`false`</ph> if there are no message headers.","source":"`true` if the multiple message header is a duplicate; `false` if there are no message headers."}],"pos":[27099,27196],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.MessageHeaderException\n  commentId: T:System.ServiceModel.MessageHeaderException\n  id: MessageHeaderException\n  children:\n  - System.ServiceModel.MessageHeaderException.#ctor\n  - System.ServiceModel.MessageHeaderException.#ctor(System.String)\n  - System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)\n  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)\n  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)\n  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)\n  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)\n  - System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)\n  - System.ServiceModel.MessageHeaderException.HeaderName\n  - System.ServiceModel.MessageHeaderException.HeaderNamespace\n  - System.ServiceModel.MessageHeaderException.IsDuplicate\n  langs:\n  - csharp\n  name: MessageHeaderException\n  nameWithType: MessageHeaderException\n  fullName: System.ServiceModel.MessageHeaderException\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.\n  remarks: This exception is typically thrown when there are too many headers or headers are missing from the message. This can include infrastructure headers such as the Action and Reliable Message headers. This exception derives from <xref:System.ServiceModel.ProtocolException>, which in turn derives from <xref:System.ServiceModel.CommunicationException>. The <xref:System.ServiceModel.CommunicationException> class represents a class of recoverable errors that may be thrown during communication between endpoints and that robust [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client and service applications are expected to handle. To prevent the more generic <xref:System.ServiceModel.CommunicationException> handler from catching the more specific <xref:System.ServiceModel.ProtocolException>, catch this exception prior to handling <xref:System.ServiceModel.CommunicationException>.\n  syntax:\n    content: 'public class MessageHeaderException : System.ServiceModel.ProtocolException'\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.SystemException\n  - System.ServiceModel.CommunicationException\n  - System.ServiceModel.ProtocolException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.#ctor\n  commentId: M:System.ServiceModel.MessageHeaderException.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: MessageHeaderException()\n  nameWithType: MessageHeaderException.MessageHeaderException()\n  fullName: MessageHeaderException.MessageHeaderException()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class.\n  syntax:\n    content: public MessageHeaderException ();\n    parameters: []\n  overload: System.ServiceModel.MessageHeaderException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String)\n  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: MessageHeaderException(String)\n  nameWithType: MessageHeaderException.MessageHeaderException(String)\n  fullName: MessageHeaderException.MessageHeaderException(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class with the specified message.\n  remarks: Use this constructor when you want to pass an error message to the user. The content of the message parameter should be understandable to the intended users.\n  syntax:\n    content: public MessageHeaderException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: The message carried in the exception.\n  overload: System.ServiceModel.MessageHeaderException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: MessageHeaderException(SerializationInfo, StreamingContext)\n  nameWithType: MessageHeaderException.MessageHeaderException(SerializationInfo, StreamingContext)\n  fullName: MessageHeaderException.MessageHeaderException(SerializationInfo, StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class used to deserialize data into a <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> object.\n  remarks: This constructor is called during deserialization to restore the exception object transmitted over a stream.\n  syntax:\n    content: protected MessageHeaderException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: The <xref href=\"System.Runtime.Serialization.SerializationInfo\"></xref> that holds the serialized object data about the exception being thrown.\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: The <xref href=\"System.Runtime.Serialization.StreamingContext\"></xref> that contains contextual information about the source or destination.\n  overload: System.ServiceModel.MessageHeaderException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)\n  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)\n  id: '#ctor(System.String,System.Boolean)'\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: MessageHeaderException(String, Boolean)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, Boolean)\n  fullName: MessageHeaderException.MessageHeaderException(String, Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.\n  syntax:\n    content: public MessageHeaderException (string message, bool isDuplicate);\n    parameters:\n    - id: message\n      type: System.String\n      description: The exception message.\n    - id: isDuplicate\n      type: System.Boolean\n      description: '`true` if the multiple message header is a duplicate; `false` if there are no message headers.'\n  overload: System.ServiceModel.MessageHeaderException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)\n  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: MessageHeaderException(String, Exception)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, Exception)\n  fullName: MessageHeaderException.MessageHeaderException(String, Exception)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message and the inner exception that caused the exception.\n  remarks: \"Use this constructor when you want to pass an error message and information about an inner exception up to the user. The content of the message parameter should be understandable to the intended users.  \\n  \\n An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property. The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor or a `null` reference (`Nothing` in Visual Basic) if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.\"\n  syntax:\n    content: public MessageHeaderException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The exception message.\n    - id: innerException\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> that contains the inner exception that caused the exception.\n  overload: System.ServiceModel.MessageHeaderException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)\n  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: MessageHeaderException(String, String, String)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String)\n  fullName: MessageHeaderException.MessageHeaderException(String, String, String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace.\n  syntax:\n    content: public MessageHeaderException (string message, string headerName, string ns);\n    parameters:\n    - id: message\n      type: System.String\n      description: The exception message.\n    - id: headerName\n      type: System.String\n      description: The name of the message header.\n    - id: ns\n      type: System.String\n      description: The namespace of the message header.\n  overload: System.ServiceModel.MessageHeaderException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)\n  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)\n  id: '#ctor(System.String,System.String,System.String,System.Boolean)'\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: MessageHeaderException(String, String, String, Boolean)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String, Boolean)\n  fullName: MessageHeaderException.MessageHeaderException(String, String, String, Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.\n  syntax:\n    content: public MessageHeaderException (string message, string headerName, string ns, bool isDuplicate);\n    parameters:\n    - id: message\n      type: System.String\n      description: The exception message.\n    - id: headerName\n      type: System.String\n      description: The name of the message header.\n    - id: ns\n      type: System.String\n      description: The namespace of the message header.\n    - id: isDuplicate\n      type: System.Boolean\n      description: '`true` if the multiple message header is a duplicate; `false` if there are no message headers.'\n  overload: System.ServiceModel.MessageHeaderException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)\n  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)\n  id: '#ctor(System.String,System.String,System.String,System.Exception)'\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: MessageHeaderException(String, String, String, Exception)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String, Exception)\n  fullName: MessageHeaderException.MessageHeaderException(String, String, String, Exception)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace, and the inner exception that caused the exception.\n  syntax:\n    content: public MessageHeaderException (string message, string headerName, string ns, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The exception message.\n    - id: headerName\n      type: System.String\n      description: The name of the message header.\n    - id: ns\n      type: System.String\n      description: The namespace of the message header.\n    - id: innerException\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> that contains the inner exception that caused the exception.\n  overload: System.ServiceModel.MessageHeaderException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)\n  commentId: M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)\n  id: '#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)'\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: MessageHeaderException(String, String, String, Boolean, Exception)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String, Boolean, Exception)\n  fullName: MessageHeaderException.MessageHeaderException(String, String, String, Boolean, Exception)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.MessageHeaderException\"></xref> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.\n  syntax:\n    content: public MessageHeaderException (string message, string headerName, string ns, bool isDuplicate, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: The exception message.\n    - id: headerName\n      type: System.String\n      description: The name of the message header.\n    - id: ns\n      type: System.String\n      description: The namespace of the message header.\n    - id: isDuplicate\n      type: System.Boolean\n      description: '`true` if the multiple message header is a duplicate; `false` if there are no message headers.'\n    - id: innerException\n      type: System.Exception\n      description: The <xref href=\"System.Exception\"></xref> that contains the inner exception that caused the exception.\n  overload: System.ServiceModel.MessageHeaderException.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.HeaderName\n  commentId: P:System.ServiceModel.MessageHeaderException.HeaderName\n  id: HeaderName\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: HeaderName\n  nameWithType: MessageHeaderException.HeaderName\n  fullName: MessageHeaderException.HeaderName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the name of the SOAP header that caused the exception.\n  syntax:\n    content: public string HeaderName { get; }\n    return:\n      type: System.String\n      description: The name of the SOAP header.\n  overload: System.ServiceModel.MessageHeaderException.HeaderName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.HeaderNamespace\n  commentId: P:System.ServiceModel.MessageHeaderException.HeaderNamespace\n  id: HeaderNamespace\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: HeaderNamespace\n  nameWithType: MessageHeaderException.HeaderNamespace\n  fullName: MessageHeaderException.HeaderNamespace\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the namespace of the SOAP header that caused the exception.\n  syntax:\n    content: public string HeaderNamespace { get; }\n    return:\n      type: System.String\n      description: The namespace of the SOAP header.\n  overload: System.ServiceModel.MessageHeaderException.HeaderNamespace*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.MessageHeaderException.IsDuplicate\n  commentId: P:System.ServiceModel.MessageHeaderException.IsDuplicate\n  id: IsDuplicate\n  parent: System.ServiceModel.MessageHeaderException\n  langs:\n  - csharp\n  name: IsDuplicate\n  nameWithType: MessageHeaderException.IsDuplicate\n  fullName: MessageHeaderException.IsDuplicate\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets a value that indicates whether there are multiple message headers or no message headers.\n  syntax:\n    content: public bool IsDuplicate { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the multiple message header is a duplicate; `false` if there are no message headers.'\n  overload: System.ServiceModel.MessageHeaderException.IsDuplicate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.ProtocolException\n  parent: System.ServiceModel\n  isExternal: false\n  name: ProtocolException\n  nameWithType: ProtocolException\n  fullName: System.ServiceModel.ProtocolException\n- uid: System.ServiceModel.MessageHeaderException.#ctor\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException()\n  nameWithType: MessageHeaderException.MessageHeaderException()\n  fullName: MessageHeaderException.MessageHeaderException()\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String)\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException(String)\n  nameWithType: MessageHeaderException.MessageHeaderException(String)\n  fullName: MessageHeaderException.MessageHeaderException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException(SerializationInfo, StreamingContext)\n  nameWithType: MessageHeaderException.MessageHeaderException(SerializationInfo, StreamingContext)\n  fullName: MessageHeaderException.MessageHeaderException(SerializationInfo, StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException(String, Boolean)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, Boolean)\n  fullName: MessageHeaderException.MessageHeaderException(String, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException(String, Exception)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, Exception)\n  fullName: MessageHeaderException.MessageHeaderException(String, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException(String, String, String)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String)\n  fullName: MessageHeaderException.MessageHeaderException(String, String, String)\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException(String, String, String, Boolean)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String, Boolean)\n  fullName: MessageHeaderException.MessageHeaderException(String, String, String, Boolean)\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException(String, String, String, Exception)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String, Exception)\n  fullName: MessageHeaderException.MessageHeaderException(String, String, String, Exception)\n- uid: System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException(String, String, String, Boolean, Exception)\n  nameWithType: MessageHeaderException.MessageHeaderException(String, String, String, Boolean, Exception)\n  fullName: MessageHeaderException.MessageHeaderException(String, String, String, Boolean, Exception)\n- uid: System.ServiceModel.MessageHeaderException.HeaderName\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: HeaderName\n  nameWithType: MessageHeaderException.HeaderName\n  fullName: MessageHeaderException.HeaderName\n- uid: System.ServiceModel.MessageHeaderException.HeaderNamespace\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: HeaderNamespace\n  nameWithType: MessageHeaderException.HeaderNamespace\n  fullName: MessageHeaderException.HeaderNamespace\n- uid: System.ServiceModel.MessageHeaderException.IsDuplicate\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: IsDuplicate\n  nameWithType: MessageHeaderException.IsDuplicate\n  fullName: MessageHeaderException.IsDuplicate\n- uid: System.ServiceModel.MessageHeaderException.#ctor*\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: MessageHeaderException\n  nameWithType: MessageHeaderException.MessageHeaderException\n  fullName: MessageHeaderException.MessageHeaderException\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n- uid: System.ServiceModel.MessageHeaderException.HeaderName*\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: HeaderName\n  nameWithType: MessageHeaderException.HeaderName\n  fullName: MessageHeaderException.HeaderName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n- uid: System.ServiceModel.MessageHeaderException.HeaderNamespace*\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: HeaderNamespace\n  nameWithType: MessageHeaderException.HeaderNamespace\n  fullName: MessageHeaderException.HeaderNamespace\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n- uid: System.ServiceModel.MessageHeaderException.IsDuplicate*\n  parent: System.ServiceModel.MessageHeaderException\n  isExternal: false\n  name: IsDuplicate\n  nameWithType: MessageHeaderException.IsDuplicate\n  fullName: MessageHeaderException.IsDuplicate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/MessageHeaderException.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Exception.GetType\n  parent: System.Exception\n  isExternal: false\n  name: GetType()\n  nameWithType: Exception.GetType()\n  fullName: Exception.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Exception.ToString\n  parent: System.Exception\n  isExternal: false\n  name: ToString()\n  nameWithType: Exception.ToString()\n  fullName: Exception.ToString()\n- uid: System.Exception.Data\n  parent: System.Exception\n  isExternal: false\n  name: Data\n  nameWithType: Exception.Data\n  fullName: Exception.Data\n- uid: System.Exception.GetBaseException\n  parent: System.Exception\n  isExternal: false\n  name: GetBaseException()\n  nameWithType: Exception.GetBaseException()\n  fullName: Exception.GetBaseException()\n- uid: System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Exception\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Exception.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Exception.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Exception.HelpLink\n  parent: System.Exception\n  isExternal: false\n  name: HelpLink\n  nameWithType: Exception.HelpLink\n  fullName: Exception.HelpLink\n- uid: System.Exception.HResult\n  parent: System.Exception\n  isExternal: false\n  name: HResult\n  nameWithType: Exception.HResult\n  fullName: Exception.HResult\n- uid: System.Exception.InnerException\n  parent: System.Exception\n  isExternal: false\n  name: InnerException\n  nameWithType: Exception.InnerException\n  fullName: Exception.InnerException\n- uid: System.Exception.Message\n  parent: System.Exception\n  isExternal: false\n  name: Message\n  nameWithType: Exception.Message\n  fullName: Exception.Message\n- uid: System.Exception.SerializeObjectState\n  parent: System.Exception\n  isExternal: false\n  name: SerializeObjectState\n  nameWithType: Exception.SerializeObjectState\n  fullName: Exception.SerializeObjectState\n- uid: System.Exception.Source\n  parent: System.Exception\n  isExternal: false\n  name: Source\n  nameWithType: Exception.Source\n  fullName: Exception.Source\n- uid: System.Exception.StackTrace\n  parent: System.Exception\n  isExternal: false\n  name: StackTrace\n  nameWithType: Exception.StackTrace\n  fullName: Exception.StackTrace\n- uid: System.Exception.TargetSite\n  parent: System.Exception\n  isExternal: false\n  name: TargetSite\n  nameWithType: Exception.TargetSite\n  fullName: Exception.TargetSite\n"}