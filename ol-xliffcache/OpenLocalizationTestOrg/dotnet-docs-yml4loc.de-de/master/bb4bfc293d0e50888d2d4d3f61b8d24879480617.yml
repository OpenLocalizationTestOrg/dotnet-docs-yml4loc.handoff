### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  commentId: T:System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Validates user credentials and manages user settings. This class cannot be inherited.
  remarks: "The <xref:System.Web.Security.Membership> class is used in ASP.NET applications to validate user credentials and manage user settings such as passwords and e-mail addresses. The <xref:System.Web.Security.Membership> class can be used on its own, or in conjunction with the <xref:System.Web.Security.FormsAuthentication> to create a complete system for authenticating users of a Web application or site. The <xref:System.Web.UI.WebControls.Login> control encapsulates the <xref:System.Web.Security.Membership> class to provide a convenient mechanism for validating users.  \n  \n> [!NOTE]\n>  If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) before continuing. For a list of other topics related to membership, see [Managing Users by Using Membership](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  \n  \n The <xref:System.Web.Security.Membership> class provides facilities for:  \n  \n-   Creating new users.  \n  \n-   Storing membership information (user names, passwords, e-mail addresses, and supporting data) in Microsoft SQL Server or in an alternative data store.  \n  \n-   Authenticating users who visit your site. You can authenticate users programmatically, or you can use the <xref:System.Web.UI.WebControls.Login> control to create a complete authentication system that requires little or no code.  \n  \n-   Managing passwords, which includes creating, changing, retrieving, and resetting them, and so on. You can optionally configure ASP.NET membership to require a password question and answer to authenticate password reset or retrieval requests for users that have forgotten their password.  \n  \n Although ASP.NET membership is a self-standing feature in ASP.NET For authentication, it can be integrated with ASP.NET role management to provide authorization services for your site. Membership can also be integrated with the ASP.NET user <xref:System.Web.Profile> to provide application-specific customization that can be tailored to individual users. For details, see [Understanding Role Management](http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6) and [ASP.NET Profile Properties Overview](http://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d).  \n  \n The <xref:System.Web.Security.Membership> class relies on membership providers to communicate with a data source. The .NET Framework includes a <xref:System.Web.Security.SqlMembershipProvider>, which stores user information in a Microsoft SQL Server database, and an <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, which enables you to store user information on an Active Directory or Active Directory Application Mode (ADAM) server. You can also implement a custom membership provider to communicate with an alternative data source that can be used by the <xref:System.Web.Security.Membership> class. Custom membership providers inherit the <xref:System.Web.Security.MembershipProvider> abstract class. For more information, see [Implementing a Membership Provider](http://msdn.microsoft.com/library/d8658b8e-c962-4f64-95e1-4acce35e4582).  \n  \n By default, ASP.NET membership is enabled for all ASP.NET applications. The default membership provider is the <xref:System.Web.Security.SqlMembershipProvider> and is specified in the machine configuration with the name `AspNetSqlProvider`. The default instance of the <xref:System.Web.Security.SqlMembershipProvider> is configured to connect to a local instance of Microsoft SQL Server.  \n  \n You can modify the default settings to specify a <xref:System.Web.Security.SqlMembershipProvider> other than the `AspNetSqlProvider` instance as the default provider, or specify an instance of a custom provider as the default provider for your ASP.NET application using the Web.config file. You can specify the ASP.NET membership configuration for your Web application using the  configuration section in the Web.config file. You can use the `providers` subsection of the  section to specify a membership provider other than one of the default providers. For example, the following  section removes the default membership providers from the current application configuration and adds a new provider with a name of `SqlProvider` that connects to a SQL Server instance named `AspSqlServer`.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <remove name=\"AspNetSqlProvider\" />  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the <xref:System.Web.Security.Membership> class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  -->"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.ApplicationName
  commentId: P:System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets or sets the name of the application.
  remarks: "The <xref:System.Web.Security.Membership.ApplicationName%2A> is used to identify users specific to an application. That is, the same user name can exist in the database for multiple ASP.NET applications that specify a different <xref:System.Web.Security.Membership.ApplicationName%2A>. This enables multiple applications to use the same database to store user information without running into duplicate user name conflicts. Alternatively, multiple ASP.NET applications can use the same user database by specifying the same <xref:System.Web.Security.Membership.ApplicationName%2A>. The <xref:System.Web.Security.Membership.ApplicationName%2A> can be set programmatically or declaratively in the configuration for the Web application.  \n  \n> [!CAUTION]\n>  Because a single default membership provider instance is used for all of the requests served by an <xref:System.Web.HttpApplication> object, you can have multiple requests executing concurrently and attempting to set the <xref:System.Web.Security.Membership.ApplicationName%2A> property value. The <xref:System.Web.Security.Membership.ApplicationName%2A> property is not thread safe for multiple writes, and changing the <xref:System.Web.Security.Membership.ApplicationName%2A> property value can result in unexpected behavior for multiple users of an application. We recommend that you avoid writing code that allows users to set the <xref:System.Web.Security.Membership.ApplicationName%2A> property, unless you must. An example of an application where setting the <xref:System.Web.Security.Membership.ApplicationName%2A> property may be required is an administrative application that manages membership data for multiple applications. Such an application should be a single-user application and not a Web application."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the <xref:System.Web.Security.Membership.ApplicationName%2A> to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: The name of the application.
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  commentId: M:System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String, String)
  nameWithType: Membership.CreateUser(String, String)
  fullName: Membership.CreateUser(String, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Adds a new user to the data store.
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A> adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, a <xref:System.Web.Security.MembershipCreateUserException> is thrown. You can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> property of the <xref:System.Web.Security.MembershipCreateUserException> that indicates why user creation failed.  \n  \n Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods, such as <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> for applications where <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is `true`, or by setting the property values of the <xref:System.Web.Security.MembershipUser> object and passing them to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.  \n  \n If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider> provides an option to require a unique e-mail address for each user. If the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property is `true`, you will need to use one of the <xref:System.Web.Security.Membership.CreateUser%2A> overloads that allows you to specify an e-mail address for the user being created. Otherwise, a <xref:System.Web.Security.MembershipCreateUserException> will be thrown.  \n  \n Leading and trailing spaces are trimmed from all parameter values."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser2cs.aspx#2)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser2vb.aspx#2)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: The user name for the new user.
    - id: password
      type: System.String
      description: The password for the new user.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object for the newly created user.
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: The user was not created. Check the <xref href="System.Web.Security.MembershipCreateUserException.StatusCode"></xref> property for a <xref href="System.Web.Security.MembershipCreateStatus"></xref> value.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  commentId: M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String, String, String)
  nameWithType: Membership.CreateUser(String, String, String)
  fullName: Membership.CreateUser(String, String, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Adds a new user with a specified e-mail address to the data store.
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A> adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, a <xref:System.Web.Security.MembershipCreateUserException> is thrown. You can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> property of the <xref:System.Web.Security.MembershipCreateUserException> that indicates why user creation failed.  \n  \n Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods, such as <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> for applications where <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is `true`, or by setting the property values of the <xref:System.Web.Security.MembershipUser> object and passing them to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.  \n  \n If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.  \n  \n Leading and trailing spaces are trimmed from all parameter values."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/createuser1cs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/createuser1vb.aspx#1)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: The user name for the new user.
    - id: password
      type: System.String
      description: The password for the new user.
    - id: email
      type: System.String
      description: The e-mail address for the new user.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object for the newly created user.
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: The user was not created. Check the <xref href="System.Web.Security.MembershipCreateUserException.StatusCode"></xref> property for a <xref href="System.Web.Security.MembershipCreateStatus"></xref> value.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  commentId: M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String, String, String, String, String, Boolean, MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String, String, String, String, String, Boolean, MembershipCreateStatus)
  fullName: Membership.CreateUser(String, String, String, String, String, Boolean, MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Adds a new user with specified property values to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A> adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, you can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the `status` output parameter that indicates why user creation failed.  \n  \n The <xref:System.Web.Security.Membership.CreateUser%2A> method will return `null` if `password` is an empty string or `null`, `username` is an empty string or `null` or contains a comma (,), `passwordQuestion` is not `null` and is an empty string, or `passwordAnswer` is not `null` and contains an empty string.  \n  \n Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods and by setting the property values of the <xref:System.Web.Security.MembershipUser> object and then passing the <xref:System.Web.Security.MembershipUser> object to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.  \n  \n If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.  \n  \n Leading and trailing spaces are trimmed from all string parameter values."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: The user name for the new user.
    - id: password
      type: System.String
      description: The password for the new user.
    - id: email
      type: System.String
      description: The e-mail address for the new user.
    - id: passwordQuestion
      type: System.String
      description: The password-question value for the membership user.
    - id: passwordAnswer
      type: System.String
      description: The password-answer value for the membership user.
    - id: isApproved
      type: System.Boolean
      description: A Boolean that indicates whether the new user is approved to log on.
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: A <xref href="System.Web.Security.MembershipCreateStatus"></xref> indicating that the user was created successfully or the reason that creation failed.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object for the newly created user. If no user was created, this method returns `null`.
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  commentId: M:System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  fullName: Membership.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Adds a new user with specified property values and a unique identifier to the data store and returns a status parameter indicating that the user was successfully created or the reason the user creation failed.
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A> adds a new user to the data store and returns a <xref:System.Web.Security.MembershipUser> object for the newly created user. If the user creation fails, you can retrieve a <xref:System.Web.Security.MembershipCreateStatus> value from the `status` output parameter that indicates why user creation failed. You can specify a unique identifier for the user, such as a primary key value for a database, by using the `providerUserKey` parameter.  \n  \n The <xref:System.Web.Security.Membership.CreateUser%2A> method will return `null` if `password` is an empty string or `null`, `username` is an empty string or `null` or contains a comma (,), `passwordQuestion` is not `null` and contains an empty string, or `passwordAnswer` is not `null` and contains an empty string.  \n  \n Once a membership user has been created and you have a reference to a <xref:System.Web.Security.MembershipUser> object for that user, you can modify the settings for that user with the <xref:System.Web.Security.MembershipUser> public methods and by setting the property values of the <xref:System.Web.Security.MembershipUser> object and then passing the <xref:System.Web.Security.MembershipUser> object to the <xref:System.Web.Security.Membership.UpdateUser%2A> method.  \n  \n If a user already exists in the data source for the application, you can obtain a <xref:System.Web.Security.MembershipUser> object for the existing user with the <xref:System.Web.Security.Membership.GetUser%2A> method.  \n  \n Leading and trailing spaces are trimmed from all string parameter values."
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: The user name for the new user.
    - id: password
      type: System.String
      description: The password for the new user.
    - id: email
      type: System.String
      description: The e-mail address for the new user.
    - id: passwordQuestion
      type: System.String
      description: The password-question value for the membership user.
    - id: passwordAnswer
      type: System.String
      description: The password-answer value for the membership user.
    - id: isApproved
      type: System.Boolean
      description: A Boolean that indicates whether the new user is approved to log on.
    - id: providerUserKey
      type: System.Object
      description: The user identifier for the user that should be stored in the membership data store.
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: A <xref href="System.Web.Security.MembershipCreateStatus"></xref> indicating that the user was created successfully or the reason creation failed.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object for the newly created user. If no user was created, this method returns `null`.
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  commentId: M:System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Deletes a user and any related user data from the database.
  remarks: User data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted when you are using the <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, and <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> objects for data storage.
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/DeleteUsercs.aspx#8)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/DeleteUservb.aspx#8)]  -->"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to delete.
    return:
      type: System.Boolean
      description: '`true` if the user was deleted; otherwise, `false`.'
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>username</code> is an empty string or contains a comma (,).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>username</code> is `null.`
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  commentId: M:System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String, Boolean)
  nameWithType: Membership.DeleteUser(String, Boolean)
  fullName: Membership.DeleteUser(String, Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Deletes a user from the database.
  remarks: "Users deleted from the database are only deleted from the configured `applicationName`.  \n  \n If `deleteAllRelatedData` is `true`, user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, or <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted when you are using the <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, and <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> objects for data storage."
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  -->"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to delete.
    - id: deleteAllRelatedData
      type: System.Boolean
      description: '`true` to delete data related to the user from the database; `false` to leave data related to the user in the database.'
    return:
      type: System.Boolean
      description: '`true` if the user was deleted; otherwise, `false`.'
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>username</code> is an empty string or contains a comma (,).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>username</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.EnablePasswordReset
  commentId: P:System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the current membership provider is configured to allow users to reset their passwords.
  remarks: Password reset is the ability for ASP.NET membership to replace the current password for a user name with a new, randomly generated password when a user has forgotten their password or the current password is no longer valid. This is especially useful when password format is set to <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, as users cannot retrieve hashed password values.
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that <xref:System.Web.Security.Membership.EnablePasswordReset%2A> is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  -->"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: '`true` if the membership provider supports password reset; otherwise, `false`.'
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  commentId: P:System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the current membership provider is configured to allow users to retrieve their passwords.
  remarks: "If <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> is `false`, the underlying membership provider may throw a <xref:System.Web.HttpException>.  \n  \n The providers that are included with the .NET Framework support multiple password formats to enhance password security. If the password format is set to <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, then users will not be able to retrieve their existing password from the database. The <xref:System.Web.Security.MembershipPasswordFormat.Hashed> password format provides one-way encoding of password values. Passwords are \"hashed\" and compared to values stored in the database for authentication. \"Hashed\" values cannot be un-encoded to retrieve the original password value. For more information, see <xref:System.Web.Security.MembershipPasswordFormat>."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  -->"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: '`true` if the membership provider supports password retrieval; otherwise, `false`.'
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String, Int32, Int32, Int32)
  nameWithType: Membership.FindUsersByEmail(String, Int32, Int32, Int32)
  fullName: Membership.FindUsersByEmail(String, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a collection of membership users, in a page of data, where the e-mail address contains the specified e-mail address to match.
  remarks: "<xref:System.Web.Security.Membership.FindUsersByEmail%2A> returns a list of membership users where the e-mail address matches the supplied `emailToMatch` for the configured `applicationName`.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `emailToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `emailToMatch` parameter value.  \n  \n The results returned by <xref:System.Web.Security.Membership.FindUsersByEmail%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `emailToMatch` value. For example, if 13 users were found where `emailToMatch` matched part of or the entire e-mail address, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.  \n  \n Leading and trailing spaces are trimmed from the `emailToMatch` parameter value."
  example:
  - "The following code example uses the <xref:System.Web.Security.Membership.FindUsersByEmail%2A> method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: The e-mail address to search for.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: The total number of matched users.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: A <xref href="System.Web.Security.MembershipUserCollection"></xref> that contains a page of <code>pageSize</code><xref href="System.Web.Security.MembershipUser"></xref> objects beginning at the page specified by <code>pageIndex</code>.
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code> is less than zero.  \n  \n -or-  \n  \n <code>pageSize</code> is less than 1."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  commentId: M:System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.
  remarks: "<xref:System.Web.Security.Membership.FindUsersByEmail%2A> returns a list of membership users where the e-mail address matches the supplied `emailToMatch` for the configured `applicationName`.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `emailToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `emailToMatch` parameter value."
  example:
  - "The following code example uses the <xref:System.Web.Security.Membership.FindUsersByEmail%2A> method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByEmailcs.aspx#9)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByEmailvb.aspx#9)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: The e-mail address to search for.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> that contains all users that match the <code>emailToMatch</code> parameter.  \n  \n Leading and trailing spaces are trimmed from the <code>emailToMatch</code> parameter value."
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  commentId: M:System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a collection of membership users where the user name contains the specified user name to match.
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured `applicationName`.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `usernameToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `usernameToMatch` parameter value.  \n  \n Leading and trailing spaces are trimmed from all parameter values."
  example:
  - "The following code example uses the <xref:System.Web.Security.Membership.FindUsersByName%2A> method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/FindUsersByNamecs.aspx#10)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/FindUsersByNamevb.aspx#10)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: The user name to search for.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> that contains all users that match the <code>usernameToMatch</code> parameter.  \n  \n Leading and trailing spaces are trimmed from the <code>usernameToMatch</code> parameter value."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>usernameToMatch</code> is an empty string.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>usernameToMatch</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String, Int32, Int32, Int32)
  nameWithType: Membership.FindUsersByName(String, Int32, Int32, Int32)
  fullName: Membership.FindUsersByName(String, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a collection of membership users, in a page of data, where the user name contains the specified user name to match.
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured `applicationName`.  \n  \n The <xref:System.Web.Security.SqlMembershipProvider> performs its search using a LIKE clause against the `usernameToMatch` parameter. Any wildcards that are supported by SQL Server in LIKE clauses can be used in the `usernameToMatch` parameter value.  \n  \n The results returned by <xref:System.Web.Security.Membership.FindUsersByName%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `usernameToMatch` value. For example, if 13 users were found where `usernameToMatch` matched part of or the entire user name, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. `totalRecords` would be set to 13."
  example:
  - "The following code example uses the <xref:System.Web.Security.Membership.FindUsersByName%2A> method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: The user name to search for.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: The total number of matched users.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref href=\"System.Web.Security.MembershipUserCollection\"></xref> that contains a page of <code>pageSize</code><xref href=\"System.Web.Security.MembershipUser\"></xref> objects beginning at the page specified by <code>pageIndex</code>.  \n  \n Leading and trailing spaces are trimmed from the <code>usernameToMatch</code> parameter value."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string.  \n  \n -or-  \n  \n <code>pageIndex</code> is less than zero.  \n  \n -or-  \n  \n <code>pageSize</code> is less than 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>usernameToMatch</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  commentId: M:System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32, Int32)
  nameWithType: Membership.GeneratePassword(Int32, Int32)
  fullName: Membership.GeneratePassword(Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Generates a random password of the specified length.
  remarks: "The <xref:System.Web.Security.Membership.GeneratePassword%2A> method is used to generate a random password and is most commonly used by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method implemented by a membership provider to reset the password for a user to a new, temporary password.  \n  \n The generated password only contains alphanumeric characters and the following punctuation marks: `!@#$%^&*()_-+=[{]};:<>|./?`. No hidden or non-printable control characters are included in the generated password.  \n  \n> [!NOTE]\n>  The random password created by the <xref:System.Web.Security.Membership.GeneratePassword%2A> method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property and the `numberOfNonAlphanumericCharacters` parameter."
  example:
  - "The following code example creates a new membership user and uses the <xref:System.Web.Security.Membership.GeneratePassword%2A> method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/GeneratePasswordcs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/GeneratePasswordvb.aspx#5)]  -->"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: The number of characters in the generated password. The length must be between 1 and 128 characters.
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: 'The minimum number of non-alphanumeric characters (such as @, #, !, %, &, and so on) in the generated password.'
    return:
      type: System.String
      description: A random password of the specified length.
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code> is less than 1 or greater than 128 -or-  \n  \n <code>numberOfNonAlphanumericCharacters</code> is less than 0 or greater than <code>length</code>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetAllUsers
  commentId: M:System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a collection of all the users in the database.
  remarks: <xref:System.Web.Security.Membership.GetAllUsers%2A> returns the information for all membership users for an application as a collection of <xref:System.Web.Security.MembershipUser> objects. Be careful when using the <xref:System.Web.Security.Membership.GetAllUsers%2A> method with very large user databases, as the resulting <xref:System.Web.Security.MembershipUserCollection> in your ASP.NET page may degrade the performance of your application.
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: A <xref href="System.Web.Security.MembershipUserCollection"></xref> of <xref href="System.Web.Security.MembershipUser"></xref> objects representing all of the users in the database.
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32, Int32, Int32)
  nameWithType: Membership.GetAllUsers(Int32, Int32, Int32)
  fullName: Membership.GetAllUsers(Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a collection of all the users in the database in pages of data.
  remarks: The results returned by <xref:System.Web.Security.Membership.GetAllUsers%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection>. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users for the configured `applicationName`. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value was 1 with a `pageSize` of 5, the <xref:System.Web.Security.MembershipUserCollection> returned would contain the sixth through the tenth users returned. `totalRecords` would be set to 13.
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. Use 0 to indicate the first page.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: totalRecords
      type: System.Int32
      description: The total number of users.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: A <xref href="System.Web.Security.MembershipUserCollection"></xref> of <xref href="System.Web.Security.MembershipUser"></xref> objects representing all the users in the database for the configured `applicationName`.
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code> is less than zero.  \n  \n -or-  \n  \n <code>pageSize</code> is less than 1."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  commentId: M:System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the number of users currently accessing an application.
  remarks: <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> returns the number of users for the current <xref:System.Web.Security.Membership.ApplicationName%2A> where the last-activity date is greater than the current time less the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. The last-activity date/time stamp is updated to the current date and time when user credentials are validated by way of the <xref:System.Web.Security.Membership.ValidateUser%2A> or <xref:System.Web.Security.Membership.UpdateUser%2A> method or when a call to a <xref:System.Web.Security.Membership.GetUser%2A> overload that takes no parameters or one that uses the `userIsOnline` parameter to specify that the date/time stamp should be updated.
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  -->"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: The number of users currently accessing an application.
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  commentId: M:System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String, Boolean)
  nameWithType: Membership.GetUser(String, Boolean)
  fullName: Membership.GetUser(String, Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the information from the data source for the specified membership user. Updates the last-activity date/time stamp for the user, if specified.
  remarks: "The <xref:System.Web.Security.Membership.GetUser%2A> method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data.  \n  \n If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.  \n  \n You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> implicitly updates the last-activity date/time stamp for the user. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> and <xref:System.Web.Security.Membership.GetUser%2A> do not."
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to retrieve.
    - id: userIsOnline
      type: System.Boolean
      description: If `true`, updates the last-activity date/time stamp for the specified user.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object representing the specified user. If the <code>username</code> parameter does not correspond to an existing user, this method returns `null`.
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>username</code> contains a comma (,).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>username</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  commentId: M:System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object, Boolean)
  nameWithType: Membership.GetUser(Object, Boolean)
  fullName: Membership.GetUser(Object, Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the information from the data source for the membership user associated with the specified unique identifier. Updates the last-activity date/time stamp for the user, if specified.
  remarks: The <xref:System.Web.Security.Membership.GetUser%2A> method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. The user is identified with the unique identifier from the data source specified in the `providerUserKey` parameter.
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: The unique user identifier from the membership data source for the user.
    - id: userIsOnline
      type: System.Boolean
      description: If `true`, updates the last-activity date/time stamp for the specified user.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object representing the user associated with the specified unique identifier.
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>providerUserKey</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetUser(System.String)
  commentId: M:System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the information from the data source for the specified membership user.
  remarks: "The <xref:System.Web.Security.Membership.GetUser%2A> method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.  \n  \n You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> implicitly updates the last-activity date/time stamp for the user. <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> and <xref:System.Web.Security.Membership.GetUser%2A> do not."
  example:
  - "The following code example uses the <xref:System.Web.Security.Membership.GetUser%2A> method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to retrieve.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object representing the specified user. If the <code>username</code> parameter does not correspond to an existing user, this method returns `null`.
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>username</code> contains a comma (,).
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>username</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  commentId: M:System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the information from the data source for the current logged-on membership user. Updates the last-activity date/time stamp for the current logged-on membership user, if specified.
  remarks: "The <xref:System.Web.Security.Membership.GetUser%2A> method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.  \n  \n You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved using the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user. `GetUser(System.String)` and `GetUser(System.Object)` do not."
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default2cs.aspx#4)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default2vb.aspx#4)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: If `true`, updates the last-activity date/time stamp for the specified user.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object representing the current logged-on user.
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: No membership user is currently logged in.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetUser
  commentId: M:System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the information from the data source and updates the last-activity date/time stamp for the current logged-on membership user.
  remarks: "<xref:System.Web.Security.Membership.GetUser> retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. If you use one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that does not take a `username` parameter, <xref:System.Web.Security.Membership.GetUser%2A> returns the information for the current logged-on membership user. The current logged-on membership user is identified by the <xref:System.Security.Principal.IIdentity.Name%2A> of the user in the current <xref:System.Web.HttpContext>.  \n  \n You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved using the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user. `GetUser(System.String)` and `GetUser(System.Object)` do not."
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/default1cs.aspx#3)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/default1vb.aspx#3)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object representing the current logged-on user.
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: No membership user is currently logged in.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetUser(System.Object)
  commentId: M:System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the information from the data source for the membership user associated with the specified unique identifier.
  remarks: "The <xref:System.Web.Security.Membership.GetUser%2A> method retrieves the user information from the data source and creates a <xref:System.Web.Security.MembershipUser> object populated with the returned data. The user is identified using the unique identifier from the data source specified using the `providerUserKey` parameter.  \n  \n You can also specify whether you want <xref:System.Web.Security.Membership.GetUser%2A> to update the last-activity date/time stamp for the user being retrieved with the `userIsOnline` parameter. Of the <xref:System.Web.Security.Membership.GetUser%2A> overloads that do not take a `userIsOnline` parameter, `GetUser()` implicitly updates the last-activity date/time stamp for the user. `GetUser(System.String)` and `GetUser(System.Object)` do not"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: The unique user identifier from the membership data source for the user.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object representing the user associated with the specified unique identifier.
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>providerUserKey</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  commentId: M:System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a user name where the e-mail address for the user matches the specified e-mail address.
  remarks: "<xref:System.Web.Security.Membership.GetUserNameByEmail%2A> can be used to retrieve the user name for a membership user in the case where a user does not know their user name, but does know their e-mail address. If more than one user in the data store has the same e-mail address, the first user name encountered is returned.  \n  \n Leading and trailing spaces are trimmed from all parameter values."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  -->"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: The e-mail address to search for.
    return:
      type: System.String
      description: The user name where the e-mail address for the user matches the specified e-mail address. If no match is found, `null` is returned.
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.HashAlgorithmType
  commentId: P:System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: The identifier of the algorithm used to hash passwords.
  remarks: "The <xref:System.Web.Security.Membership.HashAlgorithmType%2A> property identifies the custom hash algorithm used by the <xref:System.Web.Security.Membership> class. You set the <xref:System.Web.Security.Membership.HashAlgorithmType%2A> property using the `hashAlgorithmType` attribute of the  element.  \n  \n The .NET Framework enables you to configure custom cryptography classes using the  element configuration section. The <xref:System.Web.Security.Membership.HashAlgorithmType%2A> property must match the `name` attribute of the  element in a  element. For more information, see [Mapping Algorithm Names to Cryptography Classes](~/docs/framework/configure-apps/map-algorithm-names-to-cryptography-classes.md).  \n  \n If the <xref:System.Web.Security.Membership.HashAlgorithmType%2A> property is not set, the <xref:System.Web.Security.Membership> class uses the hash algorithm set in the `validation` attribute of the  element."
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: The identifier of the algorithm used to hash passwords, or blank to use the default hash algorithm.
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  commentId: P:System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.
  remarks: "The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property to guard against an unwanted source using repeated attempts to guess the password or password answer of a membership user.  \n  \n If the number of invalid passwords or password answers entered for a membership user is greater than or equal to the value of the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property within the number of minutes specified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, then the user is locked out of the Web site by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method.  \n  \n If a valid password or password answer is supplied before the value of the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is reached, the counter that tracks the number of invalid attempts is set to zero.  \n  \n Invalid password and password answer attempts are tracked separately. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, the user has up to five attempts to enter a correct password and up to five attempts to enter a correct password answer without being locked out.  \n  \n The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value is set in the application configuration using the `maxInvalidPasswordAttempts` attribute of the  configuration element.  \n  \n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is `false`, invalid password-answer attempts are not tracked."
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: The number of invalid password or password-answer attempts allowed before the membership user is locked out.
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  commentId: P:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the minimum number of special characters that must be present in a valid password.
  remarks: "The <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> property returns the minimum number of special, non-alphanumeric characters that must be entered to create a valid password for the membership provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property.  \n  \n The <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A> property value is set in the application configuration using the `minRequiredNonAlphanumericCharacters` attribute of the  configuration element.  \n  \n A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: The minimum number of special characters that must be present in a valid password.
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  commentId: P:System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the minimum length required for a password.
  remarks: "The <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property gets the minimum number of characters that must be entered to create a valid password for the membership provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property.  \n  \n The <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the  configuration element."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: The minimum length required for a password.
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  commentId: P:System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the time window between which consecutive failed attempts to provide a valid password or password answer are tracked.
  remarks: "The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property works in conjunction with the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property to help guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. When a user attempts to log in with, change, or reset his or her password, only a certain number of consecutive attempts are allowed within a specified time window. The length of this time window is specified in the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, which identifies the number of minutes allowed between invalid attempts.  \n  \n If the number of consecutive failed attempts that a user makes to reset his or her password equals the value stored in the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property, and the time elapsed since the last invalid attempt is less than the number of minutes specified in the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property, then the membership user is locked out. The user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method.  \n  \n If the interval between the current failed attempt and the last failed attempt is greater than the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property setting, the current invalid attempt is counted as the first. If a valid password answer is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password-answer attempts is set to 0 (zero). If a valid password is supplied before the maximum number of allowed invalid attempts is reached, the count of invalid password attempts and the count of invalid password-answer attempts are set to 0 (zero).  \n  \n Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> for the membership user to be locked out.  \n  \n The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property value is set in the application configuration by using the `passwordAttemptWindow` attribute of the  configuration-element section.  \n  \n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: The time window, in minutes, during which consecutive failed attempts to provide a valid password or password answer are tracked. The default is 10 minutes. If the interval between the current failed attempt and the last failed attempt is greater than the <xref href="System.Web.Security.Membership.PasswordAttemptWindow"></xref> property setting, each failed attempt is treated as if it were the first failed attempt.
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  commentId: P:System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the regular expression used to evaluate a password.
  remarks: "The <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property gets the regular expression used to evaluate password complexity from the provider specified in the <xref:System.Web.Security.Membership.Provider%2A> property.  \n  \n The <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the  configuration element.  \n  \n For more information about regular expressions, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md)."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: A regular expression used to evaluate a password.
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.Provider
  commentId: P:System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a reference to the default membership provider for the application.
  remarks: The <xref:System.Web.Security.Membership.Provider%2A> property enables you to reference the default membership provider for an application directly. This is commonly used to access custom members of the membership provider that are not part of the <xref:System.Web.Security.MembershipProvider> abstract base class.
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the <xref:System.Web.Security.Membership.Provider%2A> property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providercs.aspx#6)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providervb.aspx#6)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: The default membership provider for the application exposed using the <xref href="System.Web.Security.MembershipProvider"></xref> abstract base class.
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.Providers
  commentId: P:System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a collection of the membership providers for the ASP.NET application.
  remarks: "The <xref:System.Web.Security.Membership.Providers%2A> property references all of the membership providers enabled for an application, including providers added in the Web.config file for the application and the Machine.config file for all applications. You can control which membership providers are available for an application using the `providers` element of the  section in the configuration for your application. For example, the following sample shows the  section in the Web.config file for an application that removes the <xref:System.Web.Security.SqlMembershipProvider> instance (`AspNetSqlProvider`) specified in the machine configuration file and adds a <xref:System.Web.Security.SqlMembershipProvider> instance named `SqlProvider` as the default membership provider for the application.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <remove name=\"AspNetSqlProvider\" />  \n          <add name=\"SqlProvider\"  \n            type=\"System.Web.Security.SqlMembershipProvider\"  \n            connectionStringName=\"SqlServices\"  \n            enablePasswordRetrieval=\"false\"  \n            enablePasswordReset=\"true\"  \n            requiresQuestionAndAnswer=\"true\"  \n            passwordFormat=\"Hashed\"  \n            applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n When specifying the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) section, you must specify the `defaultProvider` attribute. If you do not specify a [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) section in your Web.config, the values from the machine configuration are used and the <xref:System.Web.Security.SqlMembershipProvider> instance named `AspNetSqlProvider` is established as the `defaultProvider`.  \n  \n You can obtain a strongly typed reference to a provider from the <xref:System.Web.Security.Membership.Providers%2A> collection by indexing the membership provider by name and casting it as the desired type."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.Membership#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/Providerscs.aspx#7)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.Membership#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/Providersvb.aspx#7)]  -->"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: A <xref href="System.Web.Security.MembershipProviderCollection"></xref> of the membership providers configured for the ASP.NET application.
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  commentId: P:System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the default membership provider requires the user to answer a password question for password reset and retrieval.
  remarks: "Requiring a password question and answer provides an additional layer of security when retrieving or resetting a user's password. Users can supply a question and answer when their user name is created that they can later use to retrieve or reset a forgotten password.  \n  \n <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is checked when <xref:System.Web.Security.MembershipUser.ResetPassword%2A> or <xref:System.Web.Security.MembershipUser.GetPassword%2A> is called. The provider provided with the .NET Framework throws a <xref:System.NotSupportedException> if <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> is `true` and the supplied password answer is `null`.  \n  \n If <xref:System.Web.Security.Membership.EnablePasswordReset%2A> and <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> are both `false`, <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> can still be used to enforce the creation of questions and answers when new users are created; however, the question and answer will not be used. You will be able to retrieve the question by using the <xref:System.Web.Security.MembershipUser> class.  \n  \n For more information, see <xref:System.Web.Security.MembershipUser.ResetPassword%2A> and <xref:System.Web.Security.MembershipUser.GetPassword%2A>."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  -->"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: '`true` if a password answer is required for password reset and retrieval; otherwise, `false`.'
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  commentId: M:System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Updates the database with the information for the specified user.
  remarks: <xref:System.Web.Security.Membership.UpdateUser%2A> takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with current information for the membership user and updates the data source with the property values of the <xref:System.Web.Security.MembershipUser> object. You can construct a new <xref:System.Web.Security.MembershipUser>, or retrieve a <xref:System.Web.Security.MembershipUser> object populated with current values at the data source using the <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, or <xref:System.Web.Security.Membership.FindUsersByEmail%2A> methods.
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  -->"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object that represents the user to be updated and the updated information for the user.
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>user</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  commentId: P:System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Specifies the number of minutes after the last-activity date/time stamp for a user during which the user is considered online.
  remarks: "The <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> property value is checked during the call to <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>. If the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a user is greater than the current date and time minus the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> value in minutes, then the user is considered online. You can determine whether a membership user is considered online with the <xref:System.Web.Security.MembershipUser.IsOnline%2A> property of the <xref:System.Web.Security.MembershipUser> class.  \n  \n The <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a user is updated when a user's credentials are successfully validated by the <xref:System.Web.Security.Membership.ValidateUser%2A> method. You can also update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for a membership user when you call one of the <xref:System.Web.Security.Membership.GetUser%2A> overloads. If you call a <xref:System.Web.Security.Membership.GetUser%2A> overload that takes a `userIsOnline` parameter, specify a value of `true` to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> for the user."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: The number of minutes after the last-activity date/time stamp for a user during which the user is considered online.
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  commentId: M:System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String, String)
  nameWithType: Membership.ValidateUser(String, String)
  fullName: Membership.ValidateUser(String, String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Verifies that the supplied user name and password are valid.
  remarks: <xref:System.Web.Security.Membership.ValidateUser%2A> provides an easy way to verify a user name and password from the data source. Note that, if the `username` parameter is empty or `null`, an <xref:System.Web.HttpException> is thrown.
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  -->"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to be validated.
    - id: password
      type: System.String
      description: The password for the specified user.
    return:
      type: System.Boolean
      description: '`true` if the supplied user name and password are valid; otherwise, `false`.'
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.Membership.ValidatingPassword
  commentId: E:System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Occurs when a user is created, a password is changed, or a password is reset.
  remarks: "The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event is raised when the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method, the <xref:System.Web.Security.MembershipProvider.ChangePassword%2A> method, or the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method of a membership provider is called.  \n  \n You can use the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event to validate password formats and values for membership users.  \n  \n You can cancel the current <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, or <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> action by setting the <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> property of the supplied <xref:System.Web.Security.ValidatePasswordEventArgs> to `true` during the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event.  \n  \n If you cancel the current action by setting the <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> property to `true`, you can set the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property of the supplied <xref:System.Web.Security.ValidatePasswordEventArgs> to an exception that describes the reason for the password-validation failure. The calling method will throw the exception that the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property is set to. If the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property is `null`, the caller will throw a generic password-validation-failure exception."
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-csharp[System.Web.Security.Membership#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Membership/CS/CreateUser3cs.aspx#11)]\n [!code-vb[System.Web.Security.Membership#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Membership/VB/CreateUser3vb.aspx#11)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  parent: System.Web.Security
  isExternal: false
  name: MembershipCreateUserException
  nameWithType: MembershipCreateUserException
  fullName: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String, String)
  nameWithType: Membership.CreateUser(String, String)
  fullName: Membership.CreateUser(String, String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: false
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String, String, String)
  nameWithType: Membership.CreateUser(String, String, String)
  fullName: Membership.CreateUser(String, String, String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String, String, String, String, String, Boolean, MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String, String, String, String, String, Boolean, MembershipCreateStatus)
  fullName: Membership.CreateUser(String, String, String, String, String, Boolean, MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: false
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  fullName: Membership.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String, Boolean)
  nameWithType: Membership.DeleteUser(String, Boolean)
  fullName: Membership.DeleteUser(String, Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String, Int32, Int32, Int32)
  nameWithType: Membership.FindUsersByEmail(String, Int32, Int32, Int32)
  fullName: Membership.FindUsersByEmail(String, Int32, Int32, Int32)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: false
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: Membership.FindUsersByEmail(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String, Int32, Int32, Int32)
  nameWithType: Membership.FindUsersByName(String, Int32, Int32, Int32)
  fullName: Membership.FindUsersByName(String, Int32, Int32, Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32, Int32)
  nameWithType: Membership.GeneratePassword(Int32, Int32)
  fullName: Membership.GeneratePassword(Int32, Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32, Int32, Int32)
  nameWithType: Membership.GetAllUsers(Int32, Int32, Int32)
  fullName: Membership.GetAllUsers(Int32, Int32, Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String, Boolean)
  nameWithType: Membership.GetUser(String, Boolean)
  fullName: Membership.GetUser(String, Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object, Boolean)
  nameWithType: Membership.GetUser(Object, Boolean)
  fullName: Membership.GetUser(Object, Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: false
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: false
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String, String)
  nameWithType: Membership.ValidateUser(String, String)
  fullName: Membership.ValidateUser(String, String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: false
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: Membership.ApplicationName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
  fullName: Membership.CreateUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
  fullName: Membership.DeleteUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: Membership.EnablePasswordReset
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: Membership.EnablePasswordRetrieval
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
  fullName: Membership.FindUsersByEmail
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
  fullName: Membership.FindUsersByName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
  fullName: Membership.GeneratePassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
  fullName: Membership.GetAllUsers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
  fullName: Membership.GetNumberOfUsersOnline
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
  fullName: Membership.GetUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
  fullName: Membership.GetUserNameByEmail
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: Membership.HashAlgorithmType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: Membership.MaxInvalidPasswordAttempts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: Membership.MinRequiredNonAlphanumericCharacters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: Membership.MinRequiredPasswordLength
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: Membership.PasswordAttemptWindow
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: Membership.PasswordStrengthRegularExpression
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: Membership.Provider
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: Membership.Providers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: Membership.RequiresQuestionAndAnswer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
  fullName: Membership.UpdateUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: Membership.UserIsOnlineTimeWindow
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
  fullName: Membership.ValidateUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/Membership.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
