### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  commentId: T:System.Web.Services.Protocols.HttpWebClientProtocol
  id: HttpWebClientProtocol
  children:
  - System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  langs:
  - csharp
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol
  type: Class
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Represents the base class for all XML Web service client proxies that use the HTTP transport protocol.
  remarks: "The properties on this class are used to control the behavior of the HTTP request object used to transmit the XML Web service request and response. The properties map to properties found on <xref:System.Net.HttpWebRequest>.  \n  \n To communicate with an XML Web service using HTTP, you must create a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> for the XML Web service. Instead of creating the proxy class manually, you can use the Wsdl.exe tool to create a proxy class for a given XML Web service's service description.  \n  \n Since HttpWebClientProtocol is the base class for all proxy classes, its properties are on your proxy classes. These properties are useful for controlling the request behavior of the underlying transport. For example, use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property for calling XML Web services through a firewall. Many of these properties are used to initialize the <xref:System.Net.HttpWebRequest> that makes the Web request.  \n  \n <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive directly or indirectly from <xref:System.Web.Services.Protocols.HttpWebClientProtocol> to provide support for SOAP, HTTP-GET and HTTP-POST respectively."
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form allows the server to automatically redirect the client to other sites. It also sets client authentication credentials, proxy settings, the request encoding and the time out for the request before calling the XML Web service method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[Classic HttpWebClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebClientProtocol Example/CS/sourcecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[Classic HttpWebClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebClientProtocol Example/VB/sourcevb.aspx#1)]  -->"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HttpWebClientProtocol : System.Web.Services.Protocols.WebClientProtocol
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  derivedClasses:
  - System.Web.Services.Discovery.DiscoveryClientProtocol
  - System.Web.Services.Protocols.HttpSimpleClientProtocol
  - System.Web.Services.Protocols.SoapHttpClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: HttpWebClientProtocol.HttpWebClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Initializes a new instance of the <xref href="System.Web.Services.Protocols.HttpWebClientProtocol"></xref> class.
  syntax:
    content: protected HttpWebClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: HttpWebClientProtocol.AllowAutoRedirect
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets whether the client automatically follows server redirects.
  remarks: "If a client sends authentication information, such as a user name and password, you do not want to enable the server to redirect, because this can compromise security.  \n  \n A <xref:System.Net.WebException> is thrown if the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect%2A> property is `false` and the Web server attempts to redirect the request. The <xref:System.Net.WebException.Response%2A> property contains an <xref:System.Net.HttpWebResponse> object, where both the <xref:System.Net.HttpWebResponse.StatusCode%2A> and <xref:System.Net.HttpWebResponse.Headers%2A> properties reflect details regarding the attempted redirect. The <xref:System.Net.HttpWebResponse.StatusCode%2A> property contains an <xref:System.Net.HttpStatusCode> equivalent to one of the HTTP redirect status codes (301, 302, and 307) and the `Location` header within the <xref:System.Net.HttpWebResponse.Headers%2A> collection points to the URI that the request attempted to be redirected to."
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    return:
      type: System.Boolean
      description: '`true` to automatically redirect the client to follow server redirects; otherwise, `false`. The default is `false`.'
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: The <xref href="System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect"></xref> property is `false` and the Web server attempts to redirect the request.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  id: CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: HttpWebClientProtocol.CancelAsync(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Cancels an asynchronous call to an XML Web service method, unless the call has already completed.
  syntax:
    content: protected void CancelAsync (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: The object provided in the last parameter to the asynchronous call of the `Begin` method.
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  id: ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: HttpWebClientProtocol.ClientCertificates
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets the collection of client certificates.
  remarks: This property allows a client to pass one or more client certificates, also known as Authenticode X.509 v.3 certificates, when calling an XML Web service method. If the XML Web service method has been configured to use client certificates, a client certificate can be used as one mechanism for authenticating a client. For details on setting up client certificates, see the Internet Information Services (IIS) documentation.
  example:
  - "The following code example demonstrates how to load in a client certificate from a file and then add it to the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates%2A> property for calling an XML Web service method that uses client certificates for authentication.  \n  \n [!code-csharp[HttpWebClientProtocol.ClientCertificates#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.ClientCertificates/CS/certcs.aspx#1)]\n [!code-vb[HttpWebClientProtocol.ClientCertificates#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.ClientCertificates/VB/certvb.aspx#1)]"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: An <xref href="System.Security.Cryptography.X509Certificates.X509CertificateCollection"></xref> that represents the client certificates.
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  id: CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: HttpWebClientProtocol.CookieContainer
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets the collection of cookies.
  remarks: If an XML Web service method uses session state, then a cookie is passed back in the response headers to the XML Web service client that uniquely identifies the session for that XML Web service client. In order for an XML Web service to maintain session state for a client, the client must store the cookie. Clients receive the HTTP cookie by creating a new instance of <xref:System.Net.CookieContainer> and assigning that to the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of the proxy class before calling the XML Web service method. If you need to maintain session state beyond when the proxy class instance goes out of scope, the client must store the HTTP cookie between calls to the XML Web service. For instance, a Web Forms client can store the HTTP cookie by saving the <xref:System.Net.CookieContainer> in its own session state. Because not all XML Web services use session state and thus clients are not always required to use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> property of a client proxy, the documentation for the XML Web service must state whether session state is used.
  example:
  - "The following code example is a Web Forms client of an XML Web service that uses session state. The client stores the HTTP cookie that uniquely identifies the session by storing it in the client's session state.  \n  \n <!-- TODO: review snippet reference [!code-csharp[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[HttpWebClientProtocol.CookieContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  -->"
  syntax:
    content: public System.Net.CookieContainer CookieContainer { get; set; }
    return:
      type: System.Net.CookieContainer
      description: A <xref href="System.Net.CookieContainer"></xref> that represents the cookies for a Web Services client.
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  id: EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: HttpWebClientProtocol.EnableDecompression
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets a value that indicates whether decompression is enabled for this <xref href="System.Web.Services.Protocols.HttpWebClientProtocol"></xref>.
  syntax:
    content: public bool EnableDecompression { get; set; }
    return:
      type: System.Boolean
      description: '`true` if decompression is enabled for this <xref href="System.Web.Services.Protocols.HttpWebClientProtocol"></xref>; otherwise, `false`. The default is `false`.'
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type, ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)
  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets the <xref href="System.Xml.Serialization.XmlMembersMapping"></xref> for each XML Web service method exposed by the specified type, and stores the mappings in the specified <xref href="System.Collections.ArrayList"></xref>.
  syntax:
    content: public static bool GenerateXmlMappings (Type type, System.Collections.ArrayList mapping);
    parameters:
    - id: type
      type: System.Type
      description: The <xref href="System.Type"></xref> that exposes the XML Web service methods.
    - id: mappings
      type: System.Collections.ArrayList
      description: ''
    return:
      type: System.Boolean
      description: '`true` if <code>type</code> can be assigned to a <xref href="System.Web.Services.Protocols.SoapHttpClientProtocol"></xref>; otherwise, `false`.'
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type[], ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)
  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets the <xref href="System.Xml.Serialization.XmlMembersMapping"></xref> for each XML Web service method exposed by the specified types, and stores the mappings in the specified <xref href="System.Collections.ArrayList"></xref>, as well as in a <xref href="System.Collections.Hashtable"></xref> that this method returns.
  syntax:
    content: public static System.Collections.Hashtable GenerateXmlMappings (Type[] types, System.Collections.ArrayList mapping);
    parameters:
    - id: types
      type: System.Type[]
      description: An array of type <xref href="System.Type"></xref> that contains the types that expose the XML Web service methods.
    - id: mappings
      type: System.Collections.ArrayList
      description: ''
    return:
      type: System.Collections.Hashtable
      description: A <xref href="System.Collections.Hashtable"></xref> that contains the <xref href="System.Xml.Serialization.XmlMembersMapping"></xref> for each XML Web service method exposed by the specified types. The types contained in <code>types</code> are used as keys.
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: HttpWebClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Creates a <xref href="System.Net.WebRequest"></xref> for the specified URI.
  syntax:
    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: The <xref href="System.Uri"></xref> for creating the <xref href="System.Net.WebRequest"></xref>.
    return:
      type: System.Net.WebRequest
      description: The created <xref href="System.Net.WebRequest"></xref>.
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <code>uri</code> parameter is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  id: GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Returns a response from a synchronous request to an XML Web service method.
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: The <xref href="System.Net.WebRequest"></xref> from which to get the response.
    return:
      type: System.Net.WebResponse
      description: A response from a synchronous request to an XML Web service method.
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  commentId: M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest, IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)
  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Returns a response from an asynchronous request to an XML Web service method.
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: The <xref href="System.Net.WebRequest"></xref> from which to get the response.
    - id: result
      type: System.IAsyncResult
      description: The <xref href="System.IAsyncResult"></xref> to pass to <xref href="System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)"></xref> when the response has completed.
    return:
      type: System.Net.WebResponse
      description: A response from an asynchronous request to an XML Web service method.
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  id: Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: HttpWebClientProtocol.Proxy
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets proxy information for making an XML Web service request through a firewall.
  remarks: "Use the <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> property if a client needs to use different proxy settings than those in the system settings. Use the <xref:System.Net.WebProxy> class to set the proxy settings, because it implements <xref:System.Net.IWebProxy>.  \n  \n Default proxy settings can be set in a configuration file. For details, see [Configuring Internet Applications](~/docs/framework/network-programming/configuring-internet-applications.md)."
  example:
  - "The following example sets the following proxy settings prior to invoking the `Math` XML Web service: the proxy server to http://proxyserver, the proxy port to 80 and the bypass to the proxy server for local addresses.  \n  \n [!code-cpp[Classic HttpWebClientProtocol.Proxy Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/CPP/source.cpp#1)]\n [!code-csharp[Classic HttpWebClientProtocol.Proxy Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/CS/source.cs#1)]\n [!code-vb[Classic HttpWebClientProtocol.Proxy Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/VB/source.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: An <xref href="System.Net.IWebProxy"></xref> that contains the proxy information for making requests through a firewall. The default value is the operating system proxy settings.
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  id: UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets a value that indicates whether connection sharing is enabled when the client uses NTLM authentication to connect to the Web server that hosts the XML Web service.
  remarks: This property sets the value of the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property of the <xref:System.Net.HttpWebRequest> used to communicate with the Web server.
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public bool UnsafeAuthenticatedConnectionSharing { get; set; }
    return:
      type: System.Boolean
      description: '`true` if connection sharing is enabled; otherwise, `false`. The default is `false`.'
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  commentId: P:System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  id: UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: HttpWebClientProtocol.UserAgent
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: Gets or sets the value for the user agent header that is sent with each request.
  remarks: The user agent string allows a Web server to identify the client.
  example:
  - >-
    [!code-cpp[HttpWebClientProtocol_UserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/CPP/httpwebclientprotocol_useragent.cpp#1)]
     [!code-csharp[HttpWebClientProtocol_UserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/CS/httpwebclientprotocol_useragent.cs#1)]
     [!code-vb[HttpWebClientProtocol_UserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/VB/httpwebclientprotocol_useragent.vb#1)]
  syntax:
    content: >-
      [System.ComponentModel.Browsable(false)]

      public string UserAgent { get; set; }
    return:
      type: System.String
      description: The value of the HTTP protocol user agent header. The default is "MS Web Services Client Protocol <code>number</code> ", where <code>number</code> is the version of the common language runtime (for example, 1.0.3705.0).
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  exceptions: []
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
  ms.technology:
  - dotnet-webforms
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Web.Services.Protocols.WebClientProtocol
  parent: System.Web.Services.Protocols
  isExternal: false
  name: WebClientProtocol
  nameWithType: WebClientProtocol
  fullName: System.Web.Services.Protocols.WebClientProtocol
- uid: System.Net.WebException
  parent: System.Net
  isExternal: false
  name: WebException
  nameWithType: WebException
  fullName: System.Net.WebException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: HttpWebClientProtocol.HttpWebClientProtocol()
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: HttpWebClientProtocol.CancelAsync(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: HttpWebClientProtocol.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: HttpWebClientProtocol.CookieContainer
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: false
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type, ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)
  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type[], ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)
  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Type[]
  parent: System
  isExternal: false
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: HttpWebClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: false
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: false
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: false
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest, IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)
  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: false
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: HttpWebClientProtocol.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: false
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: HttpWebClientProtocol.UserAgent
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol
  fullName: HttpWebClientProtocol.HttpWebClientProtocol
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: HttpWebClientProtocol.AllowAutoRedirect
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync
  nameWithType: HttpWebClientProtocol.CancelAsync
  fullName: HttpWebClientProtocol.CancelAsync
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: HttpWebClientProtocol.ClientCertificates
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: HttpWebClientProtocol.CookieContainer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: HttpWebClientProtocol.EnableDecompression
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings
  fullName: HttpWebClientProtocol.GenerateXmlMappings
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: HttpWebClientProtocol.GetWebRequest
  fullName: HttpWebClientProtocol.GetWebRequest
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse
  nameWithType: HttpWebClientProtocol.GetWebResponse
  fullName: HttpWebClientProtocol.GetWebResponse
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: HttpWebClientProtocol.Proxy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: HttpWebClientProtocol.UserAgent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpWebClientProtocol.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.ComponentModel.Component.ToString
  parent: System.ComponentModel.Component
  isExternal: false
  name: ToString()
  nameWithType: Component.ToString()
  fullName: Component.ToString()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.ComponentModel.Component.CanRaiseEvents
  parent: System.ComponentModel.Component
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Component.CanRaiseEvents
  fullName: Component.CanRaiseEvents
- uid: System.ComponentModel.Component.Container
  parent: System.ComponentModel.Component
  isExternal: false
  name: Container
  nameWithType: Component.Container
  fullName: Component.Container
- uid: System.ComponentModel.Component.DesignMode
  parent: System.ComponentModel.Component
  isExternal: false
  name: DesignMode
  nameWithType: Component.DesignMode
  fullName: Component.DesignMode
- uid: System.ComponentModel.Component.Dispose
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose()
  nameWithType: Component.Dispose()
  fullName: Component.Dispose()
- uid: System.ComponentModel.Component.Dispose(System.Boolean)
  parent: System.ComponentModel.Component
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Component.Dispose(Boolean)
  fullName: Component.Dispose(Boolean)
- uid: System.ComponentModel.Component.Disposed
  parent: System.ComponentModel.Component
  isExternal: false
  name: Disposed
  nameWithType: Component.Disposed
  fullName: Component.Disposed
- uid: System.ComponentModel.Component.Events
  parent: System.ComponentModel.Component
  isExternal: false
  name: Events
  nameWithType: Component.Events
  fullName: Component.Events
- uid: System.ComponentModel.Component.GetService(System.Type)
  parent: System.ComponentModel.Component
  isExternal: false
  name: GetService(Type)
  nameWithType: Component.GetService(Type)
  fullName: Component.GetService(Type)
- uid: System.ComponentModel.Component.Site
  parent: System.ComponentModel.Component
  isExternal: false
  name: Site
  nameWithType: Component.Site
  fullName: Component.Site
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Abort()
  nameWithType: WebClientProtocol.Abort()
  fullName: WebClientProtocol.Abort()
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: AddToCache(Type, Object)
  nameWithType: WebClientProtocol.AddToCache(Type, Object)
  fullName: WebClientProtocol.AddToCache(Type, Object)
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
  fullName: WebClientProtocol.ConnectionGroupName
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
  fullName: WebClientProtocol.Credentials
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetFromCache(Type)
  nameWithType: WebClientProtocol.GetFromCache(Type)
  fullName: WebClientProtocol.GetFromCache(Type)
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
  fullName: WebClientProtocol.PreAuthenticate
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
  fullName: WebClientProtocol.RequestEncoding
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
  fullName: WebClientProtocol.Timeout
- uid: System.Web.Services.Protocols.WebClientProtocol.Url
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Url
  nameWithType: WebClientProtocol.Url
  fullName: WebClientProtocol.Url
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
  fullName: WebClientProtocol.UseDefaultCredentials
