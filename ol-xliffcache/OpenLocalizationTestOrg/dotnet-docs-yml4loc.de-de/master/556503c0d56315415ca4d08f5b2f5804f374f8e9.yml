### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualStateGroup
  commentId: T:System.Windows.VisualStateGroup
  id: VisualStateGroup
  children:
  - System.Windows.VisualStateGroup.#ctor
  - System.Windows.VisualStateGroup.CurrentState
  - System.Windows.VisualStateGroup.CurrentStateChanged
  - System.Windows.VisualStateGroup.CurrentStateChanging
  - System.Windows.VisualStateGroup.Name
  - System.Windows.VisualStateGroup.States
  - System.Windows.VisualStateGroup.Transitions
  langs:
  - csharp
  name: VisualStateGroup
  nameWithType: VisualStateGroup
  fullName: System.Windows.VisualStateGroup
  type: Class
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Contains mutually exclusive <xref href="System.Windows.VisualState"></xref> objects and <xref href="System.Windows.VisualTransition"></xref> objects that are used to move from one state to another.
  remarks: "Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`).  \n  \n You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>. For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects. One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`. The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`. The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.  \n  \n Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>. If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template. The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>.  \n  \n For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  \n  \n The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>."
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("States")]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public class VisualStateGroup : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  attributes:
  - type: System.Windows.Markup.ContentPropertyAttribute
  - type: System.Windows.Markup.RuntimeNamePropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualStateGroup.#ctor
  commentId: M:System.Windows.VisualStateGroup.#ctor
  id: '#ctor'
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: VisualStateGroup.VisualStateGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Initializes a new instance of the <xref href="System.Windows.VisualStateGroup"></xref> class.
  syntax:
    content: public VisualStateGroup ();
    parameters: []
  overload: System.Windows.VisualStateGroup.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualStateGroup.CurrentState
  commentId: P:System.Windows.VisualStateGroup.CurrentState
  id: CurrentState
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: VisualStateGroup.CurrentState
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets the <xref href="System.Windows.VisualState"></xref> that is currently applied to the control.
  syntax:
    content: public System.Windows.VisualState CurrentState { get; }
    return:
      type: System.Windows.VisualState
      description: The <xref href="System.Windows.VisualState"></xref> that is currently applied to the control.
  overload: System.Windows.VisualStateGroup.CurrentState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  commentId: E:System.Windows.VisualStateGroup.CurrentStateChanged
  id: CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: VisualStateGroup.CurrentStateChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Occurs after a control transitions to a different state.
  remarks: This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs.
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanged;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  commentId: E:System.Windows.VisualStateGroup.CurrentStateChanging
  id: CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: VisualStateGroup.CurrentStateChanging
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Occurs when a control starts transitioning to a different state.
  remarks: The event occurs when the control begins to transition states. If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins. If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.
  syntax:
    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanging;
    return:
      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualStateGroup.Name
  commentId: P:System.Windows.VisualStateGroup.Name
  id: Name
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: VisualStateGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the name of the <xref href="System.Windows.VisualStateGroup"></xref>.
  remarks: Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>. Set the <xref:System.Windows.VisualStateGroup.Name%2A> of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property.
  example:
  - "The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`. The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  \n  \n [!code-xml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: The name of the <xref href="System.Windows.VisualStateGroup"></xref>.
  overload: System.Windows.VisualStateGroup.Name*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.VisualStateGroup.States
  commentId: P:System.Windows.VisualStateGroup.States
  id: States
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: States
  nameWithType: VisualStateGroup.States
  fullName: VisualStateGroup.States
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets the collection of mutually exclusive <xref href="System.Windows.VisualState"></xref> objects.
  remarks: ''
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList States { get; }
    return:
      type: System.Collections.IList
      description: The collection of mutually exclusive <xref href="System.Windows.VisualState"></xref> objects.
  overload: System.Windows.VisualStateGroup.States*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualStateGroup.Transitions
  commentId: P:System.Windows.VisualStateGroup.Transitions
  id: Transitions
  parent: System.Windows.VisualStateGroup
  langs:
  - csharp
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: VisualStateGroup.Transitions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets the collection of <xref href="System.Windows.VisualTransition"></xref> objects.
  remarks: The <xref:System.Windows.VisualTransition> objects in <xref:System.Windows.VisualStateGroup.Transitions%2A> are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.
  example:
  - "The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \n  \n [!code-xml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]"
  syntax:
    content: public System.Collections.IList Transitions { get; }
    return:
      type: System.Collections.IList
      description: The collection of <xref href="System.Windows.VisualTransition"></xref> objects.
  overload: System.Windows.VisualStateGroup.Transitions*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.VisualStateGroup.#ctor
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup()
  nameWithType: VisualStateGroup.VisualStateGroup()
  fullName: VisualStateGroup.VisualStateGroup()
- uid: System.Windows.VisualStateGroup.CurrentState
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: VisualStateGroup.CurrentState
- uid: System.Windows.VisualState
  parent: System.Windows
  isExternal: false
  name: VisualState
  nameWithType: VisualState
  fullName: System.Windows.VisualState
- uid: System.Windows.VisualStateGroup.CurrentStateChanged
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanged
  nameWithType: VisualStateGroup.CurrentStateChanged
  fullName: VisualStateGroup.CurrentStateChanged
- uid: System.EventHandler`1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
- uid: System.Windows.VisualStateChangedEventArgs
  name: VisualStateChangedEventArgs
  nameWithType: VisualStateChangedEventArgs
  fullName: System.Windows.VisualStateChangedEventArgs
- uid: System.EventHandler{System.Windows.VisualStateChangedEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<VisualStateChangedEventArgs>
  nameWithType: EventHandler<VisualStateChangedEventArgs>
  fullName: System.EventHandler<System.Windows.VisualStateChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.VisualStateChangedEventArgs
    name: VisualStateChangedEventArgs
    nameWithType: VisualStateChangedEventArgs
    fullName: System.Windows.VisualStateChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.VisualStateGroup.CurrentStateChanging
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentStateChanging
  nameWithType: VisualStateGroup.CurrentStateChanging
  fullName: VisualStateGroup.CurrentStateChanging
- uid: System.Windows.VisualStateGroup.Name
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: VisualStateGroup.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualStateGroup.States
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
  fullName: VisualStateGroup.States
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: false
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.VisualStateGroup.Transitions
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: VisualStateGroup.Transitions
- uid: System.Windows.VisualStateGroup.#ctor*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: VisualStateGroup
  nameWithType: VisualStateGroup.VisualStateGroup
  fullName: VisualStateGroup.VisualStateGroup
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
- uid: System.Windows.VisualStateGroup.CurrentState*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: CurrentState
  nameWithType: VisualStateGroup.CurrentState
  fullName: VisualStateGroup.CurrentState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
- uid: System.Windows.VisualStateGroup.Name*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Name
  nameWithType: VisualStateGroup.Name
  fullName: VisualStateGroup.Name
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
- uid: System.Windows.VisualStateGroup.States*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: States
  nameWithType: VisualStateGroup.States
  fullName: VisualStateGroup.States
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
- uid: System.Windows.VisualStateGroup.Transitions*
  parent: System.Windows.VisualStateGroup
  isExternal: false
  name: Transitions
  nameWithType: VisualStateGroup.Transitions
  fullName: VisualStateGroup.Transitions
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml
- uid: System.Windows.DependencyObject.Equals(System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyObject.Equals(Object)
  fullName: DependencyObject.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Windows.DependencyObject.GetHashCode
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyObject.GetHashCode()
  fullName: DependencyObject.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Windows.Threading.DispatcherObject.CheckAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: CheckAccess()
  nameWithType: DispatcherObject.CheckAccess()
  fullName: DispatcherObject.CheckAccess()
- uid: System.Windows.Threading.DispatcherObject.Dispatcher
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherObject.Dispatcher
  fullName: DispatcherObject.Dispatcher
- uid: System.Windows.Threading.DispatcherObject.VerifyAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: VerifyAccess()
  nameWithType: DispatcherObject.VerifyAccess()
  fullName: DispatcherObject.VerifyAccess()
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: DependencyObject.ClearValue(DependencyProperty)
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: DependencyObject.ClearValue(DependencyPropertyKey)
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: DependencyObject.CoerceValue(DependencyProperty)
- uid: System.Windows.DependencyObject.DependencyObjectType
  parent: System.Windows.DependencyObject
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObject.DependencyObjectType
  fullName: DependencyObject.DependencyObjectType
- uid: System.Windows.DependencyObject.GetLocalValueEnumerator
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetLocalValueEnumerator()
  nameWithType: DependencyObject.GetLocalValueEnumerator()
  fullName: DependencyObject.GetLocalValueEnumerator()
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: DependencyObject.GetValue(DependencyProperty)
- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: InvalidateProperty(DependencyProperty)
  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)
  fullName: DependencyObject.InvalidateProperty(DependencyProperty)
- uid: System.Windows.DependencyObject.IsSealed
  parent: System.Windows.DependencyObject
  isExternal: false
  name: IsSealed
  nameWithType: DependencyObject.IsSealed
  fullName: DependencyObject.IsSealed
- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: DependencyObject.ReadLocalValue(DependencyProperty)
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: DependencyObject.SetValue(DependencyProperty, Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyPropertyKey, Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)
  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)
- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ShouldSerializeProperty(DependencyProperty)
  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)
  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)
