{"nodes":[{"content":"Controls the ability to access files or folders through a **File** dialog box. This class cannot be inherited.","nodes":[{"pos":[0,110],"content":"Controls the ability to access files or folders through a **File** dialog box. This class cannot be inherited.","nodes":[{"content":"Controls the ability to access files or folders through a <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> dialog box.","pos":[0,78],"source":"Controls the ability to access files or folders through a **File** dialog box."},{"content":"This class cannot be inherited.","pos":[79,110]}]}],"pos":[1298,1409],"yaml":true},{"content":"This permission is typically used to provide limited access to user-specified files when <xref:System.Security.Permissions.FileIOPermission> is not granted.","nodes":[{"pos":[0,156],"content":"This permission is typically used to provide limited access to user-specified files when <xref:System.Security.Permissions.FileIOPermission> is not granted.","nodes":[{"content":"This permission is typically used to provide limited access to user-specified files when <ph id=\"ph1\">&lt;xref:System.Security.Permissions.FileIOPermission&gt;</ph> is not granted.","pos":[0,156],"source":"This permission is typically used to provide limited access to user-specified files when <xref:System.Security.Permissions.FileIOPermission> is not granted."}]}],"pos":[1420,1577],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with the specified access.","nodes":[{"pos":[0,136],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileDialogPermission\"&gt;&lt;/xref&gt;</ph> class with the specified access.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with the specified access."}],"pos":[4619,4756],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values.","nodes":[{"pos":[0,112],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values."}],"pos":[4991,5104],"yaml":true},{"content":"The <code>access</code> parameter is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values.","nodes":[{"pos":[0,151],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">access</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid combination of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"The <code>access</code> parameter is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values."}],"pos":[5280,5432],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with either restricted or unrestricted permission, as specified.","nodes":[{"pos":[0,174],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.FileDialogPermission\"&gt;&lt;/xref&gt;</ph> class with either restricted or unrestricted permission, as specified.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with either restricted or unrestricted permission, as specified."}],"pos":[6817,6992],"yaml":true},{"content":"Creates either fully restricted (`None`) or `Unrestricted` access to **File** dialog boxes.","nodes":[{"pos":[0,91],"content":"Creates either fully restricted (<ph id=\"ph1\">`None`</ph>) or <ph id=\"ph2\">`Unrestricted`</ph> access to <bpt id=\"p1\">**</bpt>File<ept id=\"p1\">**</ept> dialog boxes.","source":"Creates either fully restricted (`None`) or `Unrestricted` access to **File** dialog boxes."}],"pos":[7003,7095],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values (`Unrestricted` or `None`).","nodes":[{"pos":[0,110],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values (<ph id=\"ph2\">`Unrestricted`</ph> or <ph id=\"ph3\">`None`</ph>).","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values (`Unrestricted` or `None`)."}],"pos":[7306,7417],"yaml":true},{"content":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,122],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[7593,7716],"yaml":true},{"content":"Gets or sets the permitted access to files.","nodes":[{"pos":[0,43],"content":"Gets or sets the permitted access to files.","nodes":[{"content":"Gets or sets the permitted access to files.","pos":[0,43]}]}],"pos":[8871,8915],"yaml":true},{"content":"The permitted access to files.","nodes":[{"pos":[0,30],"content":"The permitted access to files.","nodes":[{"content":"The permitted access to files.","pos":[0,30]}]}],"pos":[9119,9150],"yaml":true},{"content":"An attempt is made to set the <code>access</code> parameter to a value that is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values.","nodes":[{"pos":[0,193],"content":"An attempt is made to set the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">access</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter to a value that is not a valid combination of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"An attempt is made to set the <code>access</code> parameter to a value that is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values."}],"pos":[9327,9521],"yaml":true},{"content":"Creates and returns an identical copy of the current permission.","nodes":[{"pos":[0,64],"content":"Creates and returns an identical copy of the current permission.","nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]}],"pos":[10668,10733],"yaml":true},{"content":"A copy of the permission represents the same access to resources as the original permission.","nodes":[{"pos":[0,92],"content":"A copy of the permission represents the same access to resources as the original permission.","nodes":[{"content":"A copy of the permission represents the same access to resources as the original permission.","pos":[0,92]}]}],"pos":[10744,10837],"yaml":true,"extradata":"MT"},{"content":"A copy of the current permission.","nodes":[{"pos":[0,33],"content":"A copy of the current permission.","nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]}],"pos":[11003,11037],"yaml":true},{"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"pos":[0,70],"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]}],"pos":[12430,12501],"yaml":true},{"content":"The XML encoding used to reconstruct the permission.","nodes":[{"pos":[0,52],"content":"The XML encoding used to reconstruct the permission.","nodes":[{"content":"The XML encoding used to reconstruct the permission.","pos":[0,52]}]}],"pos":[12685,12738],"yaml":true},{"content":"The <code>esd</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>esd</code> parameter is `null`."}],"pos":[12924,12966],"yaml":true},{"content":"The <code>esd</code> parameter is not a valid permission element.  \n  \n -or-  \n  \n The version number of the <code>esd</code> parameter is not supported.","nodes":[{"pos":[0,65],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid permission element.","source":"The <code>esd</code> parameter is not a valid permission element."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,153],"content":"The version number of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not supported.","source":"The version number of the <code>esd</code> parameter is not supported."}],"pos":[13060,13220],"yaml":true},{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,113],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]}],"pos":[14517,14631],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"pos":[0,198],"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.","pos":[0,198],"nodes":[{"content":"The intersection of two permissions is a permission that describes the set of operations they both describe in common.","pos":[0,118]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[119,198]}]}]}],"pos":[14642,14841],"yaml":true,"extradata":"MT"},{"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","nodes":[{"pos":[0,106],"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","nodes":[{"content":"A permission to intersect with the current permission. It must be the same type as the current permission.","pos":[0,106],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be the same type as the current permission.","pos":[55,106]}]}]}],"pos":[15048,15155],"yaml":true},{"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"pos":[0,165],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <ph id=\"ph1\">`null`</ph> if the intersection is empty.","pos":[106,165],"source":" This new permission is `null` if the intersection is empty."}]}],"pos":[15226,15392],"yaml":true},{"content":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission."}],"pos":[15572,15675],"yaml":true},{"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,82],"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]}],"pos":[16978,17061],"yaml":true},{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.Open> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.OpenSave> access.","nodes":[{"pos":[0,387],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.Open> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.OpenSave> access.","nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.Open> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.OpenSave> access.","pos":[0,387],"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.","pos":[0,172]},{"content":"For example, a permission for <ph id=\"ph1\">&lt;xref:System.Security.Permissions.FileDialogPermissionAccess.Open&gt;</ph> access is a subset of a permission for <ph id=\"ph2\">&lt;xref:System.Security.Permissions.FileDialogPermissionAccess.OpenSave&gt;</ph> access.","pos":[173,387],"source":" For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.Open> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.OpenSave> access."}]}]}],"pos":[17072,17460],"yaml":true,"extradata":"MT"},{"content":"A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.","nodes":[{"pos":[0,127],"content":"A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.","nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.","pos":[0,127],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be the same type as the current permission.","pos":[63,127]}]}]}],"pos":[17645,17773],"yaml":true},{"content":"`true` if the current permission is a subset of the specified permission; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is a subset of the specified permission; otherwise, `false`."}],"pos":[17831,17927],"yaml":true},{"content":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission."}],"pos":[18108,18211],"yaml":true},{"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"pos":[0,74],"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]}],"pos":[19418,19493],"yaml":true},{"content":"An unrestricted permission represents access to all resources protected by the permission.","nodes":[{"pos":[0,90],"content":"An unrestricted permission represents access to all resources protected by the permission.","nodes":[{"content":"An unrestricted permission represents access to all resources protected by the permission.","pos":[0,90]}]}],"pos":[19504,19595],"yaml":true,"extradata":"MT"},{"content":"`true` if the current permission is unrestricted; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is unrestricted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is unrestricted; otherwise, `false`."}],"pos":[19726,19798],"yaml":true},{"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"pos":[0,64],"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]}],"pos":[21045,21110],"yaml":true},{"content":"An XML encoding of the permission, including state information.","nodes":[{"pos":[0,63],"content":"An XML encoding of the permission, including state information.","nodes":[{"content":"An XML encoding of the permission, including state information.","pos":[0,63]}]}],"pos":[21285,21349],"yaml":true},{"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"pos":[0,94],"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]}],"pos":[22707,22802],"yaml":true},{"content":"The result of a call to <xref:System.Security.Permissions.FileDialogPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"pos":[0,269],"content":"The result of a call to <xref:System.Security.Permissions.FileDialogPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"content":"The result of a call to <xref:System.Security.Permissions.FileDialogPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","pos":[0,269],"nodes":[{"content":"The result of a call to <ph id=\"ph1\">&lt;xref:System.Security.Permissions.FileDialogPermission.Union%2A&gt;</ph> is a permission that represents all operations represented by both the current permission and the specified permission.","pos":[0,208],"source":"The result of a call to <xref:System.Security.Permissions.FileDialogPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission."},{"content":"Any demand that passes either permission passes their union.","pos":[209,269]}]}]}],"pos":[22813,23083],"yaml":true,"extradata":"MT"},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[23286,23394],"yaml":true},{"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,98],"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"pos":[23465,23564],"yaml":true},{"content":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission."}],"pos":[23740,23843],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.FileDialogPermission\n  commentId: T:System.Security.Permissions.FileDialogPermission\n  id: FileDialogPermission\n  children:\n  - System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)\n  - System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.FileDialogPermission.Access\n  - System.Security.Permissions.FileDialogPermission.Copy\n  - System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.FileDialogPermission.IsUnrestricted\n  - System.Security.Permissions.FileDialogPermission.ToXml\n  - System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: FileDialogPermission\n  nameWithType: FileDialogPermission\n  fullName: System.Security.Permissions.FileDialogPermission\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Controls the ability to access files or folders through a **File** dialog box. This class cannot be inherited.\n  remarks: This permission is typically used to provide limited access to user-specified files when <xref:System.Security.Permissions.FileIOPermission> is not granted.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class FileDialogPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)\n  commentId: M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)\n  id: '#ctor(System.Security.Permissions.FileDialogPermissionAccess)'\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: FileDialogPermission(FileDialogPermissionAccess)\n  nameWithType: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)\n  fullName: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with the specified access.\n  syntax:\n    content: public FileDialogPermission (System.Security.Permissions.FileDialogPermissionAccess access);\n    parameters:\n    - id: access\n      type: System.Security.Permissions.FileDialogPermissionAccess\n      description: A bitwise combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values.\n  overload: System.Security.Permissions.FileDialogPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>access</code> parameter is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: FileDialogPermission(PermissionState)\n  nameWithType: FileDialogPermission.FileDialogPermission(PermissionState)\n  fullName: FileDialogPermission.FileDialogPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.FileDialogPermission\"></xref> class with either restricted or unrestricted permission, as specified.\n  remarks: Creates either fully restricted (`None`) or `Unrestricted` access to **File** dialog boxes.\n  syntax:\n    content: public FileDialogPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values (`Unrestricted` or `None`).\n  overload: System.Security.Permissions.FileDialogPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.Access\n  commentId: P:System.Security.Permissions.FileDialogPermission.Access\n  id: Access\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: Access\n  nameWithType: FileDialogPermission.Access\n  fullName: FileDialogPermission.Access\n  type: Property\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets or sets the permitted access to files.\n  syntax:\n    content: public System.Security.Permissions.FileDialogPermissionAccess Access { get; set; }\n    return:\n      type: System.Security.Permissions.FileDialogPermissionAccess\n      description: The permitted access to files.\n  overload: System.Security.Permissions.FileDialogPermission.Access*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An attempt is made to set the <code>access</code> parameter to a value that is not a valid combination of the <xref href=\"System.Security.Permissions.FileDialogPermissionAccess\"></xref> values.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.Copy\n  commentId: M:System.Security.Permissions.FileDialogPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: FileDialogPermission.Copy()\n  fullName: FileDialogPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of the permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.FileDialogPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: FileDialogPermission.FromXml(SecurityElement)\n  fullName: FileDialogPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: The XML encoding used to reconstruct the permission.\n  overload: System.Security.Permissions.FileDialogPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>esd</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>esd</code> parameter is not a valid permission element.  \\n  \\n -or-  \\n  \\n The version number of the <code>esd</code> parameter is not supported.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: FileDialogPermission.Intersect(IPermission)\n  fullName: FileDialogPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.\n  overload: System.Security.Permissions.FileDialogPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: FileDialogPermission.IsSubsetOf(IPermission)\n  fullName: FileDialogPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.Open> access is a subset of a permission for <xref:System.Security.Permissions.FileDialogPermissionAccess.OpenSave> access.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'\n  overload: System.Security.Permissions.FileDialogPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted\n  commentId: M:System.Security.Permissions.FileDialogPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: FileDialogPermission.IsUnrestricted()\n  fullName: FileDialogPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: An unrestricted permission represents access to all resources protected by the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is unrestricted; otherwise, `false`.'\n  overload: System.Security.Permissions.FileDialogPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.ToXml\n  commentId: M:System.Security.Permissions.FileDialogPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: FileDialogPermission.ToXml()\n  fullName: FileDialogPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including state information.\n  overload: System.Security.Permissions.FileDialogPermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: FileDialogPermission.Union(IPermission)\n  fullName: FileDialogPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: The result of a call to <xref:System.Security.Permissions.FileDialogPermission.Union%2A> is a permission that represents all operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.FileDialogPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.FileDialogPermissionAccess)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FileDialogPermission(FileDialogPermissionAccess)\n  nameWithType: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)\n  fullName: FileDialogPermission.FileDialogPermission(FileDialogPermissionAccess)\n- uid: System.Security.Permissions.FileDialogPermissionAccess\n  parent: System.Security.Permissions\n  isExternal: false\n  name: FileDialogPermissionAccess\n  nameWithType: FileDialogPermissionAccess\n  fullName: System.Security.Permissions.FileDialogPermissionAccess\n- uid: System.Security.Permissions.FileDialogPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FileDialogPermission(PermissionState)\n  nameWithType: FileDialogPermission.FileDialogPermission(PermissionState)\n  fullName: FileDialogPermission.FileDialogPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.FileDialogPermission.Access\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Access\n  nameWithType: FileDialogPermission.Access\n  fullName: FileDialogPermission.Access\n- uid: System.Security.Permissions.FileDialogPermission.Copy\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: FileDialogPermission.Copy()\n  fullName: FileDialogPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.FileDialogPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: FileDialogPermission.FromXml(SecurityElement)\n  fullName: FileDialogPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.FileDialogPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: FileDialogPermission.Intersect(IPermission)\n  fullName: FileDialogPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: FileDialogPermission.IsSubsetOf(IPermission)\n  fullName: FileDialogPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: FileDialogPermission.IsUnrestricted()\n  fullName: FileDialogPermission.IsUnrestricted()\n- uid: System.Security.Permissions.FileDialogPermission.ToXml\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: FileDialogPermission.ToXml()\n  fullName: FileDialogPermission.ToXml()\n- uid: System.Security.Permissions.FileDialogPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: FileDialogPermission.Union(IPermission)\n  fullName: FileDialogPermission.Union(IPermission)\n- uid: System.Security.Permissions.FileDialogPermission.#ctor*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FileDialogPermission\n  nameWithType: FileDialogPermission.FileDialogPermission\n  fullName: FileDialogPermission.FileDialogPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n- uid: System.Security.Permissions.FileDialogPermission.Access*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Access\n  nameWithType: FileDialogPermission.Access\n  fullName: FileDialogPermission.Access\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n- uid: System.Security.Permissions.FileDialogPermission.Copy*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Copy\n  nameWithType: FileDialogPermission.Copy\n  fullName: FileDialogPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n- uid: System.Security.Permissions.FileDialogPermission.FromXml*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: FileDialogPermission.FromXml\n  fullName: FileDialogPermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n- uid: System.Security.Permissions.FileDialogPermission.Intersect*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: FileDialogPermission.Intersect\n  fullName: FileDialogPermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n- uid: System.Security.Permissions.FileDialogPermission.IsSubsetOf*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: FileDialogPermission.IsSubsetOf\n  fullName: FileDialogPermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n- uid: System.Security.Permissions.FileDialogPermission.IsUnrestricted*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: FileDialogPermission.IsUnrestricted\n  fullName: FileDialogPermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n- uid: System.Security.Permissions.FileDialogPermission.ToXml*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: FileDialogPermission.ToXml\n  fullName: FileDialogPermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n- uid: System.Security.Permissions.FileDialogPermission.Union*\n  parent: System.Security.Permissions.FileDialogPermission\n  isExternal: false\n  name: Union\n  nameWithType: FileDialogPermission.Union\n  fullName: FileDialogPermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/FileDialogPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}