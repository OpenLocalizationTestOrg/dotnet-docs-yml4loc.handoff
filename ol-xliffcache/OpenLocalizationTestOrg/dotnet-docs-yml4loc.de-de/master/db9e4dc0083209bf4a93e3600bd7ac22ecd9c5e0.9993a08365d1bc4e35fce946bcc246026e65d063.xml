{"nodes":[{"content":"Represents a log-structured storage.","nodes":[{"pos":[0,36],"content":"Represents a log-structured storage.","nodes":[{"content":"Represents a log-structured storage.","pos":[0,36]}]}],"pos":[1465,1502],"yaml":true},{"content":"The <xref:System.IO.Log.LogRecordSequence> class provides an implementation of the record sequence interface on top of a Common Log File System (CLFS) log. It works with the <xref:System.IO.Log.LogStore> class, which provides an interface for directly manipulating and managing a CLFS log file. A log store provides append-only storage across a set of disk extents. The <xref:System.IO.Log.LogStore> class represents this storage, and provides methods for adding and removing containers, setting policy, and creating archives. It does not provide methods for reading from and writing to the storage; these methods are provided by the <xref:System.IO.Log.LogRecordSequence> class.  \n  \n The relationship between the <xref:System.IO.Log.LogStore> class and the <xref:System.IO.Log.LogRecordSequence> class is similar to the relationship between a disk file and a <xref:System.IO.FileStream> object. The disk file provides the actual storage and has attributes such as length and last access time, while the <xref:System.IO.FileStream> object provides a view on the file that can be used to read from it and write to it. Similarly, the <xref:System.IO.Log.LogStore> class has attributes like a policy and a collection of disk extents, and the <xref:System.IO.Log.LogRecordSequence> class provides a record-oriented mechanism for reading and writing data.  \n  \n Unlike the file record sequence represented by the <xref:System.IO.Log.FileRecordSequence> class, a <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments. To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A> and <xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which can be returned by the <xref:System.IO.Log.LogStore.Extents%2A> property.  \n  \n A <xref:System.IO.Log.LogStore> instance can have policies associated with it. These are represented by <xref:System.IO.Log.LogPolicy> instances that can be returned by the <xref:System.IO.Log.LogStore.Policy%2A> property. A policy dictates rules that the log will attempt to follow, such as maximum number of extents and minimum size, and instructions on growing or shrinking the <xref:System.IO.Log.LogStore> under certain conditions. In addition, you can specify whether a <xref:System.IO.Log.LogStore> instance can be archived. Policies are set per log and are volatile, which means that once every handle to the log is closed, the policy no longer exists.","nodes":[{"pos":[0,679],"content":"The <xref:System.IO.Log.LogRecordSequence> class provides an implementation of the record sequence interface on top of a Common Log File System (CLFS) log. It works with the <xref:System.IO.Log.LogStore> class, which provides an interface for directly manipulating and managing a CLFS log file. A log store provides append-only storage across a set of disk extents. The <xref:System.IO.Log.LogStore> class represents this storage, and provides methods for adding and removing containers, setting policy, and creating archives. It does not provide methods for reading from and writing to the storage; these methods are provided by the <xref:System.IO.Log.LogRecordSequence> class.","nodes":[{"content":"The <xref:System.IO.Log.LogRecordSequence> class provides an implementation of the record sequence interface on top of a Common Log File System (CLFS) log. It works with the <xref:System.IO.Log.LogStore> class, which provides an interface for directly manipulating and managing a CLFS log file. A log store provides append-only storage across a set of disk extents. The <xref:System.IO.Log.LogStore> class represents this storage, and provides methods for adding and removing containers, setting policy, and creating archives. It does not provide methods for reading from and writing to the storage; these methods are provided by the <xref:System.IO.Log.LogRecordSequence> class.","pos":[0,679],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Log.LogRecordSequence&gt;</ph> class provides an implementation of the record sequence interface on top of a Common Log File System (CLFS) log.","pos":[0,155],"source":"The <xref:System.IO.Log.LogRecordSequence> class provides an implementation of the record sequence interface on top of a Common Log File System (CLFS) log."},{"content":"It works with the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> class, which provides an interface for directly manipulating and managing a CLFS log file.","pos":[156,294],"source":" It works with the <xref:System.IO.Log.LogStore> class, which provides an interface for directly manipulating and managing a CLFS log file."},{"content":"A log store provides append-only storage across a set of disk extents.","pos":[295,365]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> class represents this storage, and provides methods for adding and removing containers, setting policy, and creating archives.","pos":[366,526],"source":" The <xref:System.IO.Log.LogStore> class represents this storage, and provides methods for adding and removing containers, setting policy, and creating archives."},{"content":"It does not provide methods for reading from and writing to the storage; these methods are provided by the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogRecordSequence&gt;</ph> class.","pos":[527,679],"source":" It does not provide methods for reading from and writing to the storage; these methods are provided by the <xref:System.IO.Log.LogRecordSequence> class."}]}]},{"pos":[686,1351],"content":"The relationship between the <xref:System.IO.Log.LogStore> class and the <xref:System.IO.Log.LogRecordSequence> class is similar to the relationship between a disk file and a <xref:System.IO.FileStream> object. The disk file provides the actual storage and has attributes such as length and last access time, while the <xref:System.IO.FileStream> object provides a view on the file that can be used to read from it and write to it. Similarly, the <xref:System.IO.Log.LogStore> class has attributes like a policy and a collection of disk extents, and the <xref:System.IO.Log.LogRecordSequence> class provides a record-oriented mechanism for reading and writing data.","nodes":[{"content":"The relationship between the <xref:System.IO.Log.LogStore> class and the <xref:System.IO.Log.LogRecordSequence> class is similar to the relationship between a disk file and a <xref:System.IO.FileStream> object. The disk file provides the actual storage and has attributes such as length and last access time, while the <xref:System.IO.FileStream> object provides a view on the file that can be used to read from it and write to it. Similarly, the <xref:System.IO.Log.LogStore> class has attributes like a policy and a collection of disk extents, and the <xref:System.IO.Log.LogRecordSequence> class provides a record-oriented mechanism for reading and writing data.","pos":[0,665],"nodes":[{"content":"The relationship between the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> class and the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogRecordSequence&gt;</ph> class is similar to the relationship between a disk file and a <ph id=\"ph3\">&lt;xref:System.IO.FileStream&gt;</ph> object.","pos":[0,210],"source":"The relationship between the <xref:System.IO.Log.LogStore> class and the <xref:System.IO.Log.LogRecordSequence> class is similar to the relationship between a disk file and a <xref:System.IO.FileStream> object."},{"content":"The disk file provides the actual storage and has attributes such as length and last access time, while the <ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph> object provides a view on the file that can be used to read from it and write to it.","pos":[211,431],"source":" The disk file provides the actual storage and has attributes such as length and last access time, while the <xref:System.IO.FileStream> object provides a view on the file that can be used to read from it and write to it."},{"content":"Similarly, the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> class has attributes like a policy and a collection of disk extents, and the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogRecordSequence&gt;</ph> class provides a record-oriented mechanism for reading and writing data.","pos":[432,665],"source":" Similarly, the <xref:System.IO.Log.LogStore> class has attributes like a policy and a collection of disk extents, and the <xref:System.IO.Log.LogRecordSequence> class provides a record-oriented mechanism for reading and writing data."}]}]},{"pos":[1358,2077],"content":"Unlike the file record sequence represented by the <xref:System.IO.Log.FileRecordSequence> class, a <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments. To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A> and <xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which can be returned by the <xref:System.IO.Log.LogStore.Extents%2A> property.","nodes":[{"content":"Unlike the file record sequence represented by the <xref:System.IO.Log.FileRecordSequence> class, a <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments. To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A> and <xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which can be returned by the <xref:System.IO.Log.LogStore.Extents%2A> property.","pos":[0,719],"nodes":[{"content":"Unlike the file record sequence represented by the <ph id=\"ph1\">&lt;xref:System.IO.Log.FileRecordSequence&gt;</ph> class, a <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore&gt;</ph> instance stores its data in a collection of disk extents, represented by <ph id=\"ph3\">&lt;xref:System.IO.Log.LogExtent&gt;</ph> instances.","pos":[0,244],"source":"Unlike the file record sequence represented by the <xref:System.IO.Log.FileRecordSequence> class, a <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances."},{"content":"The extents in a given <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> instance are all of uniform size, and space is added to and removed from a <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore&gt;</ph> instance in extent increments.","pos":[245,433],"source":" The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments."},{"content":"To add and remove log extents, use the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogExtentCollection.Add%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IO.Log.LogExtentCollection.Remove%2A&gt;</ph> methods of the <ph id=\"ph3\">&lt;xref:System.IO.Log.LogExtentCollection&gt;</ph> object, which can be returned by the <ph id=\"ph4\">&lt;xref:System.IO.Log.LogStore.Extents%2A&gt;</ph> property.","pos":[434,719],"source":" To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A> and <xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which can be returned by the <xref:System.IO.Log.LogStore.Extents%2A> property."}]}]},{"pos":[2084,2744],"content":"A <xref:System.IO.Log.LogStore> instance can have policies associated with it. These are represented by <xref:System.IO.Log.LogPolicy> instances that can be returned by the <xref:System.IO.Log.LogStore.Policy%2A> property. A policy dictates rules that the log will attempt to follow, such as maximum number of extents and minimum size, and instructions on growing or shrinking the <xref:System.IO.Log.LogStore> under certain conditions. In addition, you can specify whether a <xref:System.IO.Log.LogStore> instance can be archived. Policies are set per log and are volatile, which means that once every handle to the log is closed, the policy no longer exists.","nodes":[{"content":"A <xref:System.IO.Log.LogStore> instance can have policies associated with it. These are represented by <xref:System.IO.Log.LogPolicy> instances that can be returned by the <xref:System.IO.Log.LogStore.Policy%2A> property. A policy dictates rules that the log will attempt to follow, such as maximum number of extents and minimum size, and instructions on growing or shrinking the <xref:System.IO.Log.LogStore> under certain conditions. In addition, you can specify whether a <xref:System.IO.Log.LogStore> instance can be archived. Policies are set per log and are volatile, which means that once every handle to the log is closed, the policy no longer exists.","pos":[0,660],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> instance can have policies associated with it.","pos":[0,78],"source":"A <xref:System.IO.Log.LogStore> instance can have policies associated with it."},{"content":"These are represented by <ph id=\"ph1\">&lt;xref:System.IO.Log.LogPolicy&gt;</ph> instances that can be returned by the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore.Policy%2A&gt;</ph> property.","pos":[79,222],"source":" These are represented by <xref:System.IO.Log.LogPolicy> instances that can be returned by the <xref:System.IO.Log.LogStore.Policy%2A> property."},{"content":"A policy dictates rules that the log will attempt to follow, such as maximum number of extents and minimum size, and instructions on growing or shrinking the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> under certain conditions.","pos":[223,436],"source":" A policy dictates rules that the log will attempt to follow, such as maximum number of extents and minimum size, and instructions on growing or shrinking the <xref:System.IO.Log.LogStore> under certain conditions."},{"content":"In addition, you can specify whether a <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> instance can be archived.","pos":[437,531],"source":" In addition, you can specify whether a <xref:System.IO.Log.LogStore> instance can be archived."},{"content":"Policies are set per log and are volatile, which means that once every handle to the log is closed, the policy no longer exists.","pos":[532,660]}]}]}],"pos":[1513,4266],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class for the specified handle.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> class for the specified handle.","source":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class for the specified handle."}],"pos":[6095,6205],"yaml":true},{"content":"A file handle for the log file that the current <xref href=\"System.IO.Log.LogStore\"></xref> object encapsulates.","nodes":[{"pos":[0,112],"content":"A file handle for the log file that the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> object encapsulates.","source":"A file handle for the log file that the current <xref href=\"System.IO.Log.LogStore\"></xref> object encapsulates."}],"pos":[6404,6517],"yaml":true},{"content":"<code>handle</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;handle&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>handle</code> is `null`."}],"pos":[6675,6706],"yaml":true},{"content":"The log handle could not be bound to the thread pool.","nodes":[{"pos":[0,53],"content":"The log handle could not be bound to the thread pool.","nodes":[{"content":"The log handle could not be bound to the thread pool.","pos":[0,53]}]}],"pos":[6794,6848],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[6962,7032],"yaml":true},{"content":"The method was called after the sequence has been disposed of.","nodes":[{"pos":[0,62],"content":"The method was called after the sequence has been disposed of.","nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]}],"pos":[7138,7201],"yaml":true},{"content":"There is not enough memory to continue the execution of a program.","nodes":[{"pos":[0,66],"content":"There is not enough memory to continue the execution of a program.","nodes":[{"content":"There is not enough memory to continue the execution of a program.","pos":[0,66]}]}],"pos":[7301,7368],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class with the specified path and mode.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> class with the specified path and mode.","source":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class with the specified path and mode."}],"pos":[8360,8478],"yaml":true},{"content":"Use this constructor to open a log store with the specified path and mode. The store is opened with read/write access, and shares read access.  \n  \n The `path` parameter should use the following syntax:  \n  \n `log:<physical log name>[::<log client name>]`  \n  \n where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.  \n  \n Clients that share the same physical log name share the same extents collection and policy.","nodes":[{"pos":[0,142],"content":"Use this constructor to open a log store with the specified path and mode. The store is opened with read/write access, and shares read access.","nodes":[{"content":"Use this constructor to open a log store with the specified path and mode. The store is opened with read/write access, and shares read access.","pos":[0,142],"nodes":[{"content":"Use this constructor to open a log store with the specified path and mode.","pos":[0,74]},{"content":"The store is opened with read/write access, and shares read access.","pos":[75,142]}]}]},{"pos":[149,202],"content":"The <ph id=\"ph1\">`path`</ph> parameter should use the following syntax:","source":"The `path` parameter should use the following syntax:"},{"pos":[262,725],"content":"where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.","nodes":[{"content":"where <ph id=\"ph1\">`&lt;physical log name&gt;`</ph> is a valid path to a log file, and <ph id=\"ph2\">`&lt;log client name&gt;`</ph> is a unique client identifier.","pos":[0,113],"source":"where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier."},{"content":"A log store should be either a physical log store or a virtual log store, but not both.","pos":[114,201]},{"content":"Once a log store has been created physically or virtually, it remains so for its lifetime.","pos":[202,292]},{"content":"A physical log store is created by specifying only the physical log name.","pos":[293,366]},{"content":"A virtual log store is created by specifying both the physical log name and the log client name.","pos":[367,463]}]},{"pos":[732,823],"content":"Clients that share the same physical log name share the same extents collection and policy.","nodes":[{"content":"Clients that share the same physical log name share the same extents collection and policy.","pos":[0,91]}]}],"pos":[8489,9323],"yaml":true,"extradata":"MT"},{"content":"A relative or absolute path for the base file of the log store to open.","nodes":[{"pos":[0,71],"content":"A relative or absolute path for the base file of the log store to open.","nodes":[{"content":"A relative or absolute path for the base file of the log store to open.","pos":[0,71]}]}],"pos":[9478,9550],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store.","nodes":[{"pos":[0,106],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> values that determines how to open or create the store.","source":"One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store."}],"pos":[9615,9722],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[9880,9909],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>path</code> contains only white space.  \n  \n -or-  \n  \n <code>path</code> contains one or more invalid characters.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."},{"pos":[49,53],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[60,104],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains only white space.","source":"<code>path</code> contains only white space."},{"pos":[111,115],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[122,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains one or more invalid characters.","source":"<code>path</code> contains one or more invalid characters."}],"pos":[10003,10196],"yaml":true},{"content":"<code>mode</code> contains an invalid value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.","source":"<code>mode</code> contains an invalid value."}],"pos":[10310,10355],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[10463,10489],"yaml":true},{"content":"An I/O error occurs when opening the log store.","nodes":[{"pos":[0,47],"content":"An I/O error occurs when opening the log store.","nodes":[{"content":"An I/O error occurs when opening the log store.","pos":[0,47]}]}],"pos":[10577,10625],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[10739,10809],"yaml":true},{"content":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.","nodes":[{"pos":[0,281],"content":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> cannot be used because the required Common Log File System (CLFS) component is not installed.","pos":[0,137],"source":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed."},{"content":"Install the CLFS component if it is available for your platform or use the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.FileRecordSequence\"&gt;&lt;/xref&gt;</ph> class instead.","pos":[138,281],"source":" Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead."}]}],"pos":[10927,11209],"yaml":true},{"content":"There is not enough memory to continue the execution of a program.","nodes":[{"pos":[0,66],"content":"There is not enough memory to continue the execution of a program.","nodes":[{"content":"There is not enough memory to continue the execution of a program.","pos":[0,66]}]}],"pos":[11309,11376],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class with the specified path, mode, and access.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> class with the specified path, mode, and access.","source":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class with the specified path, mode, and access."}],"pos":[12467,12594],"yaml":true},{"content":"Use this constructor to open a new log store with the specified path, mode, and access. The store is opened sharing read access.  \n  \n The `path` parameter should use the following syntax:  \n  \n `log:<physical log name>[::<log client name>]`  \n  \n where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.  \n  \n Clients that share the same physical log name share the same extents collection and policy.","nodes":[{"pos":[0,128],"content":"Use this constructor to open a new log store with the specified path, mode, and access. The store is opened sharing read access.","nodes":[{"content":"Use this constructor to open a new log store with the specified path, mode, and access. The store is opened sharing read access.","pos":[0,128],"nodes":[{"content":"Use this constructor to open a new log store with the specified path, mode, and access.","pos":[0,87]},{"content":"The store is opened sharing read access.","pos":[88,128]}]}]},{"pos":[135,188],"content":"The <ph id=\"ph1\">`path`</ph> parameter should use the following syntax:","source":"The `path` parameter should use the following syntax:"},{"pos":[248,711],"content":"where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.","nodes":[{"content":"where <ph id=\"ph1\">`&lt;physical log name&gt;`</ph> is a valid path to a log file, and <ph id=\"ph2\">`&lt;log client name&gt;`</ph> is a unique client identifier.","pos":[0,113],"source":"where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier."},{"content":"A log store should be either a physical log store or a virtual log store, but not both.","pos":[114,201]},{"content":"Once a log store has been created physically or virtually, it remains so for its lifetime.","pos":[202,292]},{"content":"A physical log store is created by specifying only the physical log name.","pos":[293,366]},{"content":"A virtual log store is created by specifying both the physical log name and the log client name.","pos":[367,463]}]},{"pos":[718,809],"content":"Clients that share the same physical log name share the same extents collection and policy.","nodes":[{"content":"Clients that share the same physical log name share the same extents collection and policy.","pos":[0,91]}]}],"pos":[12605,13425],"yaml":true,"extradata":"MT"},{"content":"A relative or absolute path for the base file of the log store to open.","nodes":[{"pos":[0,71],"content":"A relative or absolute path for the base file of the log store to open.","nodes":[{"content":"A relative or absolute path for the base file of the log store to open.","pos":[0,71]}]}],"pos":[13609,13681],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store.","nodes":[{"pos":[0,106],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> values that determines how to open or create the store.","source":"One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store."}],"pos":[13746,13853],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileAccess\"></xref> values that determines how the file can be accessed by the <xref href=\"System.IO.Log.LogStore\"></xref>.","nodes":[{"pos":[0,156],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAccess\"&gt;&lt;/xref&gt;</ph> values that determines how the file can be accessed by the <ph id=\"ph2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph>.","source":"One of the <xref href=\"System.IO.FileAccess\"></xref> values that determines how the file can be accessed by the <xref href=\"System.IO.Log.LogStore\"></xref>."}],"pos":[13922,14079],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[14237,14266],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>path</code> contains only white space.  \n  \n -or-  \n  \n <code>path</code> contains one or more invalid characters.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."},{"pos":[49,53],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[60,104],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains only white space.","source":"<code>path</code> contains only white space."},{"pos":[111,115],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[122,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains one or more invalid characters.","source":"<code>path</code> contains one or more invalid characters."}],"pos":[14360,14553],"yaml":true},{"content":"<code>mode</code> contains an invalid value.  \n  \n -or  \n  \n <code>access</code> contains an invalid value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.","source":"<code>mode</code> contains an invalid value."},{"pos":[51,54],"content":"-or","nodes":[{"content":"-or","pos":[0,3]}]},{"pos":[61,107],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> contains an invalid value.","source":"<code>access</code> contains an invalid value."}],"pos":[14667,14781],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[14889,14915],"yaml":true},{"content":"An I/O error occurs when opening the log store.","nodes":[{"pos":[0,47],"content":"An I/O error occurs when opening the log store.","nodes":[{"content":"An I/O error occurs when opening the log store.","pos":[0,47]}]}],"pos":[15003,15051],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[15165,15235],"yaml":true},{"content":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.","nodes":[{"pos":[0,281],"content":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> cannot be used because the required Common Log File System (CLFS) component is not installed.","pos":[0,137],"source":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed."},{"content":"Install the CLFS component if it is available for your platform or use the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.FileRecordSequence\"&gt;&lt;/xref&gt;</ph> class instead.","pos":[138,281],"source":" Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead."}]}],"pos":[15353,15635],"yaml":true},{"content":"There is not enough memory to continue the execution of a program.","nodes":[{"pos":[0,66],"content":"There is not enough memory to continue the execution of a program.","nodes":[{"content":"There is not enough memory to continue the execution of a program.","pos":[0,66]}]}],"pos":[15735,15802],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class.","nodes":[{"pos":[0,84],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class."}],"pos":[16986,17071],"yaml":true},{"content":"This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access. The store is opened sharing the specified access.  \n  \n The `path` parameter should use the following syntax:  \n  \n `log:<physical log name>[::<log client name>]`  \n  \n where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.  \n  \n Clients that share the same physical log name share the same extents collection and policy.","nodes":[{"pos":[0,178],"content":"This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access. The store is opened sharing the specified access.","nodes":[{"content":"This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access. The store is opened sharing the specified access.","pos":[0,178],"nodes":[{"content":"This constructor initializes a new <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> object that it opens with the specified path, mode, and access.","pos":[0,128],"source":"This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access."},{"content":"The store is opened sharing the specified access.","pos":[129,178]}]}]},{"pos":[185,238],"content":"The <ph id=\"ph1\">`path`</ph> parameter should use the following syntax:","source":"The `path` parameter should use the following syntax:"},{"pos":[298,761],"content":"where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.","nodes":[{"content":"where <ph id=\"ph1\">`&lt;physical log name&gt;`</ph> is a valid path to a log file, and <ph id=\"ph2\">`&lt;log client name&gt;`</ph> is a unique client identifier.","pos":[0,113],"source":"where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier."},{"content":"A log store should be either a physical log store or a virtual log store, but not both.","pos":[114,201]},{"content":"Once a log store has been created physically or virtually, it remains so for its lifetime.","pos":[202,292]},{"content":"A physical log store is created by specifying only the physical log name.","pos":[293,366]},{"content":"A virtual log store is created by specifying both the physical log name and the log client name.","pos":[367,463]}]},{"pos":[768,859],"content":"Clients that share the same physical log name share the same extents collection and policy.","nodes":[{"content":"Clients that share the same physical log name share the same extents collection and policy.","pos":[0,91]}]}],"pos":[17082,17952],"yaml":true,"extradata":"MT"},{"content":"A relative or absolute path for the base file of the log store to open.","nodes":[{"pos":[0,71],"content":"A relative or absolute path for the base file of the log store to open.","nodes":[{"content":"A relative or absolute path for the base file of the log store to open.","pos":[0,71]}]}],"pos":[18163,18235],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store.","nodes":[{"pos":[0,106],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> values that determines how to open or create the store.","source":"One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store."}],"pos":[18300,18407],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileAccess\"></xref> values that determines how the file can be accessed by the <xref href=\"System.IO.Log.LogStore\"></xref>.","nodes":[{"pos":[0,156],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAccess\"&gt;&lt;/xref&gt;</ph> values that determines how the file can be accessed by the <ph id=\"ph2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph>.","source":"One of the <xref href=\"System.IO.FileAccess\"></xref> values that determines how the file can be accessed by the <xref href=\"System.IO.Log.LogStore\"></xref>."}],"pos":[18476,18633],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileShare\"></xref> values that determines how the log store will be shared among processes.","nodes":[{"pos":[0,124],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileShare\"&gt;&lt;/xref&gt;</ph> values that determines how the log store will be shared among processes.","source":"One of the <xref href=\"System.IO.FileShare\"></xref> values that determines how the log store will be shared among processes."}],"pos":[18700,18825],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[18983,19012],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>path</code> contains only white space.  \n  \n -or-  \n  \n <code>path</code> contains one or more invalid characters.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."},{"pos":[49,53],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[60,104],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains only white space.","source":"<code>path</code> contains only white space."},{"pos":[111,115],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[122,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains one or more invalid characters.","source":"<code>path</code> contains one or more invalid characters."}],"pos":[19106,19299],"yaml":true},{"content":"<code>mode</code> contains an invalid value.  \n  \n -or  \n  \n <code>access</code> contains an invalid value.  \n  \n -or-  \n  \n <code>share</code> contains an invalid value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.","source":"<code>mode</code> contains an invalid value."},{"pos":[51,54],"content":"-or","nodes":[{"content":"-or","pos":[0,3]}]},{"pos":[61,107],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> contains an invalid value.","source":"<code>access</code> contains an invalid value."},{"pos":[114,118],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[125,170],"content":"<ph id=\"ph1\">&lt;code&gt;share&lt;/code&gt;</ph> contains an invalid value.","source":"<code>share</code> contains an invalid value."}],"pos":[19413,19594],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[19702,19728],"yaml":true},{"content":"An I/O error occurs when opening the log store.","nodes":[{"pos":[0,47],"content":"An I/O error occurs when opening the log store.","nodes":[{"content":"An I/O error occurs when opening the log store.","pos":[0,47]}]}],"pos":[19816,19864],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[19978,20048],"yaml":true},{"content":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.","nodes":[{"pos":[0,281],"content":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> cannot be used because the required Common Log File System (CLFS) component is not installed.","pos":[0,137],"source":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed."},{"content":"Install the CLFS component if it is available for your platform or use the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.FileRecordSequence\"&gt;&lt;/xref&gt;</ph> class instead.","pos":[138,281],"source":" Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead."}]}],"pos":[20166,20448],"yaml":true},{"content":"There is not enough memory to continue the execution of a program.","nodes":[{"pos":[0,66],"content":"There is not enough memory to continue the execution of a program.","nodes":[{"content":"There is not enough memory to continue the execution of a program.","pos":[0,66]}]}],"pos":[20548,20615],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class.","nodes":[{"pos":[0,84],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class."}],"pos":[21970,22055],"yaml":true},{"content":"This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access. The store is opened sharing the specified access. The `path` parameter should follow the following syntax:  \n  \n `log:<physical log name>[::<log client name>]`  \n  \n where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.  \n  \n Clients that share the same physical log name share the same extents collection and policy.","nodes":[{"pos":[0,235],"content":"This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access. The store is opened sharing the specified access. The `path` parameter should follow the following syntax:","nodes":[{"content":"This constructor initializes a new <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> object that it opens with the specified path, mode, and access.","pos":[0,128],"source":"This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access."},{"content":"The store is opened sharing the specified access.","pos":[129,178]},{"content":"The <ph id=\"ph1\">`path`</ph> parameter should follow the following syntax:","pos":[179,235],"source":" The `path` parameter should follow the following syntax:"}]},{"pos":[295,758],"content":"where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.","nodes":[{"content":"where <ph id=\"ph1\">`&lt;physical log name&gt;`</ph> is a valid path to a log file, and <ph id=\"ph2\">`&lt;log client name&gt;`</ph> is a unique client identifier.","pos":[0,113],"source":"where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier."},{"content":"A log store should be either a physical log store or a virtual log store, but not both.","pos":[114,201]},{"content":"Once a log store has been created physically or virtually, it remains so for its lifetime.","pos":[202,292]},{"content":"A physical log store is created by specifying only the physical log name.","pos":[293,366]},{"content":"A virtual log store is created by specifying both the physical log name and the log client name.","pos":[367,463]}]},{"pos":[765,856],"content":"Clients that share the same physical log name share the same extents collection and policy.","nodes":[{"content":"Clients that share the same physical log name share the same extents collection and policy.","pos":[0,91]}]}],"pos":[22066,22931],"yaml":true,"extradata":"MT"},{"content":"A relative or absolute path for the base file of the log store to open.","nodes":[{"pos":[0,71],"content":"A relative or absolute path for the base file of the log store to open.","nodes":[{"content":"A relative or absolute path for the base file of the log store to open.","pos":[0,71]}]}],"pos":[23199,23271],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store.","nodes":[{"pos":[0,106],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileMode\"&gt;&lt;/xref&gt;</ph> values that determines how to open or create the store.","source":"One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store."}],"pos":[23336,23443],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileAccess\"></xref> values that determines how the file can be accessed by the <xref href=\"System.IO.Log.LogStore\"></xref>.","nodes":[{"pos":[0,156],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileAccess\"&gt;&lt;/xref&gt;</ph> values that determines how the file can be accessed by the <ph id=\"ph2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph>.","source":"One of the <xref href=\"System.IO.FileAccess\"></xref> values that determines how the file can be accessed by the <xref href=\"System.IO.Log.LogStore\"></xref>."}],"pos":[23512,23669],"yaml":true},{"content":"One of the <xref href=\"System.IO.FileShare\"></xref> values that determines how the log store will be shared among processes.","nodes":[{"pos":[0,124],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.FileShare\"&gt;&lt;/xref&gt;</ph> values that determines how the log store will be shared among processes.","source":"One of the <xref href=\"System.IO.FileShare\"></xref> values that determines how the log store will be shared among processes."}],"pos":[23736,23861],"yaml":true},{"content":"One of the <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> value that specifies the security to set on the newly created store if the store must be created.","nodes":[{"pos":[0,172],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.AccessControl.FileSecurity\"&gt;&lt;/xref&gt;</ph> value that specifies the security to set on the newly created store if the store must be created.","source":"One of the <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> value that specifies the security to set on the newly created store if the store must be created."}],"pos":[23958,24131],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[24289,24318],"yaml":true},{"content":"The log store file name specified by <code>path</code> is not valid.  \n  \n -or-  \n  \n <code>Mode</code> is `CreateNew`, which cannot be used without write access.  \n  \n -or-  \n  \n <code>Mode</code> is `OpenOrCreate`, which cannot be used without write access.","nodes":[{"pos":[0,68],"content":"The log store file name specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not valid.","source":"The log store file name specified by <code>path</code> is not valid."},{"pos":[75,79],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[86,162],"content":"<ph id=\"ph1\">&lt;code&gt;Mode&lt;/code&gt;</ph> is <ph id=\"ph2\">`CreateNew`</ph>, which cannot be used without write access.","source":"<code>Mode</code> is `CreateNew`, which cannot be used without write access."},{"pos":[169,173],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[180,259],"content":"<ph id=\"ph1\">&lt;code&gt;Mode&lt;/code&gt;</ph> is <ph id=\"ph2\">`OpenOrCreate`</ph>, which cannot be used without write access.","source":"<code>Mode</code> is `OpenOrCreate`, which cannot be used without write access."}],"pos":[24412,24682],"yaml":true},{"content":"<code>mode</code> contains an invalid value.  \n  \n -or  \n  \n <code>access</code> contains an invalid value.  \n  \n -or-  \n  \n <code>share</code> contains an invalid value.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> contains an invalid value.","source":"<code>mode</code> contains an invalid value."},{"pos":[51,54],"content":"-or","nodes":[{"content":"-or","pos":[0,3]}]},{"pos":[61,107],"content":"<ph id=\"ph1\">&lt;code&gt;access&lt;/code&gt;</ph> contains an invalid value.","source":"<code>access</code> contains an invalid value."},{"pos":[114,118],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[125,170],"content":"<ph id=\"ph1\">&lt;code&gt;share&lt;/code&gt;</ph> contains an invalid value.","source":"<code>share</code> contains an invalid value."}],"pos":[24796,24977],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[25085,25111],"yaml":true},{"content":"An I/O error occurs when opening the log store.  \n  \n The file specified by <code>path</code> cannot be accessed because it is in use by another process.  \n  \n -or-  \n  \n The file specified by <code>path</code> cannot be created because the file or directory already exists.  \n  \n -or-  \n  \n The log handle could not be bound to the thread pool.  \n  \n -or-  \n  \n The specified log file format or version is invalid.","nodes":[{"pos":[0,47],"content":"An I/O error occurs when opening the log store.","nodes":[{"content":"An I/O error occurs when opening the log store.","pos":[0,47]}]},{"pos":[54,153],"content":"The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be accessed because it is in use by another process.","source":"The file specified by <code>path</code> cannot be accessed because it is in use by another process."},{"pos":[160,164],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[171,274],"content":"The file specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">path</ph><ept id=\"p1\">&lt;/code&gt;</ept> cannot be created because the file or directory already exists.","source":"The file specified by <code>path</code> cannot be created because the file or directory already exists."},{"pos":[281,285],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[292,345],"content":"The log handle could not be bound to the thread pool.","nodes":[{"content":"The log handle could not be bound to the thread pool.","pos":[0,53]}]},{"pos":[352,356],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[363,415],"content":"The specified log file format or version is invalid.","nodes":[{"content":"The specified log file format or version is invalid.","pos":[0,52]}]}],"pos":[25199,25631],"yaml":true},{"content":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.","nodes":[{"pos":[0,281],"content":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> cannot be used because the required Common Log File System (CLFS) component is not installed.","pos":[0,137],"source":"<xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed."},{"content":"Install the CLFS component if it is available for your platform or use the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.FileRecordSequence\"&gt;&lt;/xref&gt;</ph> class instead.","pos":[138,281],"source":" Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead."}]}],"pos":[25749,26031],"yaml":true},{"content":"The method was called after the sequence has been disposed of.","nodes":[{"pos":[0,62],"content":"The method was called after the sequence has been disposed of.","nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]}],"pos":[26137,26200],"yaml":true},{"content":"There is not enough memory to continue the execution of a program.","nodes":[{"pos":[0,66],"content":"There is not enough memory to continue the execution of a program.","nodes":[{"content":"There is not enough memory to continue the execution of a program.","pos":[0,66]}]}],"pos":[26300,26367],"yaml":true},{"content":"The record sequence is full.","nodes":[{"pos":[0,28],"content":"The record sequence is full.","nodes":[{"content":"The record sequence is full.","pos":[0,28]}]}],"pos":[26483,26512],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[26626,26696],"yaml":true},{"content":"Gets a value indicating whether this <xref href=\"System.IO.Log.LogStore\"></xref> instance can be archived.","nodes":[{"pos":[0,106],"content":"Gets a value indicating whether this <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> instance can be archived.","source":"Gets a value indicating whether this <xref href=\"System.IO.Log.LogStore\"></xref> instance can be archived."}],"pos":[27548,27655],"yaml":true},{"content":"If a <xref:System.IO.Log.LogStore> is not archivable, calls to the <xref:System.IO.Log.LogStore.CreateLogArchiveSnapshot%2A> and <xref:System.IO.Log.LogStore.SetArchiveTail%2A> methods result in a <xref:System.NotSupportedException> being thrown.","nodes":[{"pos":[0,246],"content":"If a <xref:System.IO.Log.LogStore> is not archivable, calls to the <xref:System.IO.Log.LogStore.CreateLogArchiveSnapshot%2A> and <xref:System.IO.Log.LogStore.SetArchiveTail%2A> methods result in a <xref:System.NotSupportedException> being thrown.","nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> is not archivable, calls to the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore.CreateLogArchiveSnapshot%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.IO.Log.LogStore.SetArchiveTail%2A&gt;</ph> methods result in a <ph id=\"ph4\">&lt;xref:System.NotSupportedException&gt;</ph> being thrown.","pos":[0,246],"source":"If a <xref:System.IO.Log.LogStore> is not archivable, calls to the <xref:System.IO.Log.LogStore.CreateLogArchiveSnapshot%2A> and <xref:System.IO.Log.LogStore.SetArchiveTail%2A> methods result in a <xref:System.NotSupportedException> being thrown."}]}],"pos":[27666,27913],"yaml":true,"extradata":"MT"},{"content":"`true` if this <xref href=\"System.IO.Log.LogStore\"></xref> instance can be archived; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> if this <ph id=\"ph2\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> instance can be archived; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this <xref href=\"System.IO.Log.LogStore\"></xref> instance can be archived; otherwise, `false`."}],"pos":[28031,28138],"yaml":true},{"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"pos":[0,66],"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"content":"The property was accessed after the sequence has been disposed of.","pos":[0,66]}]}],"pos":[28305,28372],"yaml":true},{"content":"Gets the lowest sequence number that corresponds to a valid record in this <xref href=\"System.IO.Log.LogStore\"></xref> instance.","nodes":[{"pos":[0,128],"content":"Gets the lowest sequence number that corresponds to a valid record in this <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets the lowest sequence number that corresponds to a valid record in this <xref href=\"System.IO.Log.LogStore\"></xref> instance."}],"pos":[29272,29401],"yaml":true},{"content":"Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>.","nodes":[{"pos":[0,170],"content":"Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>.","nodes":[{"content":"Valid sequence numbers are greater than or equal to <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore.BaseSequenceNumber%2A&gt;</ph> and less than <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore.LastSequenceNumber%2A&gt;</ph>.","pos":[0,170],"source":"Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>."}]}],"pos":[29412,29583],"yaml":true,"extradata":"MT"},{"content":"The lowest sequence number that corresponds to a valid record in this <xref href=\"System.IO.Log.LogStore\"></xref> instance.","nodes":[{"pos":[0,123],"content":"The lowest sequence number that corresponds to a valid record in this <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> instance.","source":"The lowest sequence number that corresponds to a valid record in this <xref href=\"System.IO.Log.LogStore\"></xref> instance."}],"pos":[29742,29866],"yaml":true},{"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"pos":[0,66],"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"content":"The property was accessed after the sequence has been disposed of.","pos":[0,66]}]}],"pos":[30041,30108],"yaml":true},{"content":"Takes a snapshot of the log store state for making a backup.","nodes":[{"pos":[0,60],"content":"Takes a snapshot of the log store state for making a backup.","nodes":[{"content":"Takes a snapshot of the log store state for making a backup.","pos":[0,60]}]}],"pos":[31048,31109],"yaml":true},{"content":"A <xref href=\"System.IO.Log.LogArchiveSnapshot\"></xref> object that contains the state necessary to make an archive.","nodes":[{"pos":[0,116],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogArchiveSnapshot\"&gt;&lt;/xref&gt;</ph> object that contains the state necessary to make an archive.","source":"A <xref href=\"System.IO.Log.LogArchiveSnapshot\"></xref> object that contains the state necessary to make an archive."}],"pos":[31691,31808],"yaml":true},{"content":"The log store is not archivable.","nodes":[{"pos":[0,32],"content":"The log store is not archivable.","nodes":[{"content":"The log store is not archivable.","pos":[0,32]}]}],"pos":[31985,32018],"yaml":true},{"content":"The method was called after the sequence has been disposed of.","nodes":[{"pos":[0,62],"content":"The method was called after the sequence has been disposed of.","nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]}],"pos":[32124,32187],"yaml":true},{"content":"An I/O error occurs when creating the archive snapshot.","nodes":[{"pos":[0,55],"content":"An I/O error occurs when creating the archive snapshot.","nodes":[{"content":"An I/O error occurs when creating the archive snapshot.","pos":[0,55]}]}],"pos":[32275,32331],"yaml":true},{"content":"An argument is not valid.","nodes":[{"pos":[0,25],"content":"An argument is not valid.","nodes":[{"content":"An argument is not valid.","pos":[0,25]}]}],"pos":[32425,32451],"yaml":true},{"content":"An invalid operation has been executed.","nodes":[{"pos":[0,39],"content":"An invalid operation has been executed.","nodes":[{"content":"An invalid operation has been executed.","pos":[0,39]}]}],"pos":[32561,32601],"yaml":true},{"content":"There is not enough memory to continue the execution of a program.","nodes":[{"pos":[0,66],"content":"There is not enough memory to continue the execution of a program.","nodes":[{"content":"There is not enough memory to continue the execution of a program.","pos":[0,66]}]}],"pos":[32701,32768],"yaml":true},{"content":"The record sequence is full.","nodes":[{"pos":[0,28],"content":"The record sequence is full.","nodes":[{"content":"The record sequence is full.","pos":[0,28]}]}],"pos":[32884,32913],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[33027,33097],"yaml":true},{"content":"Takes a snapshot of the log store state between the specified sequence numbers for making a backup.","nodes":[{"pos":[0,99],"content":"Takes a snapshot of the log store state between the specified sequence numbers for making a backup.","nodes":[{"content":"Takes a snapshot of the log store state between the specified sequence numbers for making a backup.","pos":[0,99]}]}],"pos":[34304,34404],"yaml":true},{"content":"The archive snapshot returned from this method encompasses information from either the base sequence number or the archive sequence number, whichever is lower, to the last sequence number. It is not inclusive for the last sequence number, which means that the archive only includes records up to but not including last. In addition, when using this method, the start SequenceNumber must be equal to the BaseSequenceNumber in order for the archive to be consistent.","nodes":[{"pos":[0,464],"content":"The archive snapshot returned from this method encompasses information from either the base sequence number or the archive sequence number, whichever is lower, to the last sequence number. It is not inclusive for the last sequence number, which means that the archive only includes records up to but not including last. In addition, when using this method, the start SequenceNumber must be equal to the BaseSequenceNumber in order for the archive to be consistent.","nodes":[{"content":"The archive snapshot returned from this method encompasses information from either the base sequence number or the archive sequence number, whichever is lower, to the last sequence number. It is not inclusive for the last sequence number, which means that the archive only includes records up to but not including last. In addition, when using this method, the start SequenceNumber must be equal to the BaseSequenceNumber in order for the archive to be consistent.","pos":[0,464],"nodes":[{"content":"The archive snapshot returned from this method encompasses information from either the base sequence number or the archive sequence number, whichever is lower, to the last sequence number.","pos":[0,188]},{"content":"It is not inclusive for the last sequence number, which means that the archive only includes records up to but not including last.","pos":[189,319]},{"content":"In addition, when using this method, the start SequenceNumber must be equal to the BaseSequenceNumber in order for the archive to be consistent.","pos":[320,464]}]}]}],"pos":[34415,34880],"yaml":true,"extradata":"MT"},{"content":"The starting sequence number in the range to archive.","nodes":[{"pos":[0,53],"content":"The starting sequence number in the range to archive.","nodes":[{"content":"The starting sequence number in the range to archive.","pos":[0,53]}]}],"pos":[35133,35187],"yaml":true},{"content":"The ending sequence number in the range to archive.","nodes":[{"pos":[0,51],"content":"The ending sequence number in the range to archive.","nodes":[{"content":"The ending sequence number in the range to archive.","pos":[0,51]}]}],"pos":[35262,35314],"yaml":true},{"content":"A <xref href=\"System.IO.Log.LogArchiveSnapshot\"></xref> object that contains the state necessary to make an archive.","nodes":[{"pos":[0,116],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogArchiveSnapshot\"&gt;&lt;/xref&gt;</ph> object that contains the state necessary to make an archive.","source":"A <xref href=\"System.IO.Log.LogArchiveSnapshot\"></xref> object that contains the state necessary to make an archive."}],"pos":[35390,35507],"yaml":true},{"content":"<code>first</code> or <code>last</code> is not between the base and last sequence numbers of this sequence.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;code&gt;first&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;last&lt;/code&gt;</ph> is not between the base and last sequence numbers of this sequence.","source":"<code>first</code> or <code>last</code> is not between the base and last sequence numbers of this sequence."}],"pos":[35696,35804],"yaml":true},{"content":"<code>first</code> is larger than <code>last</code>.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">&lt;code&gt;first&lt;/code&gt;</ph> is larger than <ph id=\"ph2\">&lt;code&gt;last&lt;/code&gt;</ph>.","source":"<code>first</code> is larger than <code>last</code>."}],"pos":[35898,35951],"yaml":true},{"content":"An invalid operation has been executed.","nodes":[{"pos":[0,39],"content":"An invalid operation has been executed.","nodes":[{"content":"An invalid operation has been executed.","pos":[0,39]}]}],"pos":[36061,36101],"yaml":true},{"content":"An I/O error occurs when creating the archive snapshot.","nodes":[{"pos":[0,55],"content":"An I/O error occurs when creating the archive snapshot.","nodes":[{"content":"An I/O error occurs when creating the archive snapshot.","pos":[0,55]}]}],"pos":[36189,36245],"yaml":true},{"content":"The log store is not archivable.","nodes":[{"pos":[0,32],"content":"The log store is not archivable.","nodes":[{"content":"The log store is not archivable.","pos":[0,32]}]}],"pos":[36347,36380],"yaml":true},{"content":"The method was called after the sequence has been disposed of.","nodes":[{"pos":[0,62],"content":"The method was called after the sequence has been disposed of.","nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]}],"pos":[36486,36549],"yaml":true},{"content":"There is not enough memory to continue the execution of a program.","nodes":[{"pos":[0,66],"content":"There is not enough memory to continue the execution of a program.","nodes":[{"content":"There is not enough memory to continue the execution of a program.","pos":[0,66]}]}],"pos":[36649,36716],"yaml":true},{"content":"The record sequence is full.","nodes":[{"pos":[0,28],"content":"The record sequence is full.","nodes":[{"content":"The record sequence is full.","pos":[0,28]}]}],"pos":[36832,36861],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[36975,37045],"yaml":true},{"content":"Removes the log store.","nodes":[{"pos":[0,22],"content":"Removes the log store.","nodes":[{"content":"Removes the log store.","pos":[0,22]}]}],"pos":[37940,37963],"yaml":true},{"content":"A relative or absolute path for the base file of the log store to remove.","nodes":[{"pos":[0,73],"content":"A relative or absolute path for the base file of the log store to remove.","nodes":[{"content":"A relative or absolute path for the base file of the log store to remove.","pos":[0,73]}]}],"pos":[38103,38177],"yaml":true},{"content":"<code>path</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>path</code> is `null`."}],"pos":[38336,38365],"yaml":true},{"content":"<code>path</code> is an empty string (\"\").  \n  \n -or-  \n  \n <code>path</code> contains only white space.  \n  \n -or-  \n  \n <code>path</code> contains one or more invalid characters.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string (\"\").","source":"<code>path</code> is an empty string (\"\")."},{"pos":[49,53],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[60,104],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains only white space.","source":"<code>path</code> contains only white space."},{"pos":[111,115],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[122,180],"content":"<ph id=\"ph1\">&lt;code&gt;path&lt;/code&gt;</ph> contains one or more invalid characters.","source":"<code>path</code> contains one or more invalid characters."}],"pos":[38459,38652],"yaml":true},{"content":"The file cannot be found.","nodes":[{"pos":[0,25],"content":"The file cannot be found.","nodes":[{"content":"The file cannot be found.","pos":[0,25]}]}],"pos":[38760,38786],"yaml":true},{"content":"An I/O error occurs when opening the log store.","nodes":[{"pos":[0,47],"content":"An I/O error occurs when opening the log store.","nodes":[{"content":"An I/O error occurs when opening the log store.","pos":[0,47]}]}],"pos":[38874,38922],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[39036,39106],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.IO.Log.LogStore\"></xref>.","nodes":[{"pos":[0,79],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph>.","source":"Releases all resources used by the <xref href=\"System.IO.Log.LogStore\"></xref>."}],"pos":[39944,40024],"yaml":true},{"content":"Call <xref:System.IO.Log.LogStore.Dispose%2A> when you have finished using the <xref:System.IO.Log.LogStore>. The <xref:System.IO.Log.LogStore.Dispose%2A> method leaves the <xref:System.IO.Log.LogStore> in an unusable state. After calling <xref:System.IO.Log.LogStore.Dispose%2A> , you must release all references to the <xref:System.IO.Log.LogStore> so the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogStore> was occupying.  \n  \n> [!NOTE]\n>  Always call <xref:System.IO.Log.LogStore.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogStore>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Log.LogStore> object's `Finalize` method.","nodes":[{"pos":[0,452],"content":"Call <xref:System.IO.Log.LogStore.Dispose%2A> when you have finished using the <xref:System.IO.Log.LogStore>. The <xref:System.IO.Log.LogStore.Dispose%2A> method leaves the <xref:System.IO.Log.LogStore> in an unusable state. After calling <xref:System.IO.Log.LogStore.Dispose%2A> , you must release all references to the <xref:System.IO.Log.LogStore> so the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogStore> was occupying.","nodes":[{"content":"Call <xref:System.IO.Log.LogStore.Dispose%2A> when you have finished using the <xref:System.IO.Log.LogStore>. The <xref:System.IO.Log.LogStore.Dispose%2A> method leaves the <xref:System.IO.Log.LogStore> in an unusable state. After calling <xref:System.IO.Log.LogStore.Dispose%2A> , you must release all references to the <xref:System.IO.Log.LogStore> so the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogStore> was occupying.","pos":[0,452],"nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore.Dispose%2A&gt;</ph> when you have finished using the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore&gt;</ph>.","pos":[0,109],"source":"Call <xref:System.IO.Log.LogStore.Dispose%2A> when you have finished using the <xref:System.IO.Log.LogStore>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore&gt;</ph> in an unusable state.","pos":[110,224],"source":" The <xref:System.IO.Log.LogStore.Dispose%2A> method leaves the <xref:System.IO.Log.LogStore> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore.Dispose%2A&gt;</ph> , you must release all references to the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.IO.Log.LogStore&gt;</ph> was occupying.","pos":[225,452],"source":" After calling <xref:System.IO.Log.LogStore.Dispose%2A> , you must release all references to the <xref:System.IO.Log.LogStore> so the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogStore> was occupying."}]}]},{"pos":[460,751],"content":"[!NOTE]\n Always call <xref:System.IO.Log.LogStore.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogStore>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Log.LogStore> object's `Finalize` method.","leadings":["","> "],"nodes":[{"content":" Always call <xref:System.IO.Log.LogStore.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogStore>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Log.LogStore> object's `Finalize` method.","pos":[8,289],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore&gt;</ph>.","pos":[1,130],"source":" Always call <xref:System.IO.Log.LogStore.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogStore>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> object's <ph id=\"ph2\">`Finalize`</ph> method.","pos":[131,281],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Log.LogStore> object's `Finalize` method."}]}]}],"pos":[40035,40792],"yaml":true,"extradata":"MT"},{"content":"The method was called after the sequence has been disposed of.","nodes":[{"pos":[0,62],"content":"The method was called after the sequence has been disposed of.","nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]}],"pos":[41022,41085],"yaml":true},{"content":"Gets the collection of log extents that contain the data for this log store.","nodes":[{"pos":[0,76],"content":"Gets the collection of log extents that contain the data for this log store.","nodes":[{"content":"Gets the collection of log extents that contain the data for this log store.","pos":[0,76]}]}],"pos":[41919,41996],"yaml":true},{"content":"A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments. To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A>and<xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which is returned by this property.","nodes":[{"pos":[0,575],"content":"A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments. To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A>and<xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which is returned by this property.","nodes":[{"content":"A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments. To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A>and<xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which is returned by this property.","pos":[0,575],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> instance stores its data in a collection of disk extents, represented by <ph id=\"ph2\">&lt;xref:System.IO.Log.LogExtent&gt;</ph> instances.","pos":[0,146],"source":"A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances."},{"content":"The extents in a given <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore&gt;</ph> instance are all of uniform size, and space is added to and removed from a <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore&gt;</ph> instance in extent increments.","pos":[147,335],"source":" The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments."},{"content":"To add and remove log extents, use the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogExtentCollection.Add%2A&gt;</ph>and<ph id=\"ph2\">&lt;xref:System.IO.Log.LogExtentCollection.Remove%2A&gt;</ph> methods of the <ph id=\"ph3\">&lt;xref:System.IO.Log.LogExtentCollection&gt;</ph> object, which is returned by this property.","pos":[336,575],"source":" To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A>and<xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which is returned by this property."}]}]}],"pos":[42007,42583],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Log.LogExtentCollection\"></xref> instance containing the collection of log extents that encapsulates data for this log store.","nodes":[{"pos":[0,149],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogExtentCollection\"&gt;&lt;/xref&gt;</ph> instance containing the collection of log extents that encapsulates data for this log store.","source":"A <xref href=\"System.IO.Log.LogExtentCollection\"></xref> instance containing the collection of log extents that encapsulates data for this log store."}],"pos":[42741,42891],"yaml":true},{"content":"Gets the number of bytes available in the log store.","nodes":[{"pos":[0,52],"content":"Gets the number of bytes available in the log store.","nodes":[{"content":"Gets the number of bytes available in the log store.","pos":[0,52]}]}],"pos":[43798,43851],"yaml":true},{"content":"The number of bytes available in the log store.","nodes":[{"pos":[0,47],"content":"The number of bytes available in the log store.","nodes":[{"content":"The number of bytes available in the log store.","pos":[0,47]}]}],"pos":[43961,44009],"yaml":true},{"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"pos":[0,66],"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"content":"The property was accessed after the sequence has been disposed of.","pos":[0,66]}]}],"pos":[44175,44242],"yaml":true},{"content":"Gets the operating system file handle for the log file that the current <xref href=\"System.IO.Log.LogStore\"></xref> instance encapsulates.","nodes":[{"pos":[0,138],"content":"Gets the operating system file handle for the log file that the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> instance encapsulates.","source":"Gets the operating system file handle for the log file that the current <xref href=\"System.IO.Log.LogStore\"></xref> instance encapsulates."}],"pos":[45070,45209],"yaml":true},{"content":"The operating system file handle for the log file that the current <xref href=\"System.IO.Log.LogStore\"></xref> instance encapsulates.","nodes":[{"pos":[0,133],"content":"The operating system file handle for the log file that the current <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogStore\"&gt;&lt;/xref&gt;</ph> instance encapsulates.","source":"The operating system file handle for the log file that the current <xref href=\"System.IO.Log.LogStore\"></xref> instance encapsulates."}],"pos":[45384,45518],"yaml":true},{"content":"When overridden in a derived class, gets the sequence number of the next record to be appended to the log store.","nodes":[{"pos":[0,112],"content":"When overridden in a derived class, gets the sequence number of the next record to be appended to the log store.","nodes":[{"content":"When overridden in a derived class, gets the sequence number of the next record to be appended to the log store.","pos":[0,112]}]}],"pos":[46478,46591],"yaml":true},{"content":"Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>.","nodes":[{"pos":[0,170],"content":"Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>.","nodes":[{"content":"Valid sequence numbers are greater than or equal to <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore.BaseSequenceNumber%2A&gt;</ph> and less than <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore.LastSequenceNumber%2A&gt;</ph>.","pos":[0,170],"source":"Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>."}]}],"pos":[46602,46773],"yaml":true,"extradata":"MT"},{"content":"The sequence number of the next record to be appended to the log store.","nodes":[{"pos":[0,71],"content":"The sequence number of the next record to be appended to the log store.","nodes":[{"content":"The sequence number of the next record to be appended to the log store.","pos":[0,71]}]}],"pos":[46932,47004],"yaml":true},{"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"pos":[0,66],"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"content":"The property was accessed after the sequence has been disposed of.","pos":[0,66]}]}],"pos":[47179,47246],"yaml":true},{"content":"Gets the size of the log store, in bytes.","nodes":[{"pos":[0,41],"content":"Gets the size of the log store, in bytes.","nodes":[{"content":"Gets the size of the log store, in bytes.","pos":[0,41]}]}],"pos":[48074,48116],"yaml":true},{"content":"The size of the log store is the sum of the sizes of the log extents.","nodes":[{"pos":[0,69],"content":"The size of the log store is the sum of the sizes of the log extents.","nodes":[{"content":"The size of the log store is the sum of the sizes of the log extents.","pos":[0,69]}]}],"pos":[48127,48197],"yaml":true,"extradata":"MT"},{"content":"The size of the log store, in bytes.","nodes":[{"pos":[0,36],"content":"The size of the log store, in bytes.","nodes":[{"content":"The size of the log store, in bytes.","pos":[0,36]}]}],"pos":[48304,48341],"yaml":true},{"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"pos":[0,66],"content":"The property was accessed after the sequence has been disposed of.","nodes":[{"content":"The property was accessed after the sequence has been disposed of.","pos":[0,66]}]}],"pos":[48504,48571],"yaml":true},{"content":"Gets the policy associated with this log store.","nodes":[{"pos":[0,47],"content":"Gets the policy associated with this log store.","nodes":[{"content":"Gets the policy associated with this log store.","pos":[0,47]}]}],"pos":[49399,49447],"yaml":true},{"content":"You can use the <xref:System.IO.Log.LogPolicy> instance returned by this property to examine and manipulate the log policy associated with this <xref:System.IO.Log.LogStore>.","nodes":[{"pos":[0,174],"content":"You can use the <xref:System.IO.Log.LogPolicy> instance returned by this property to examine and manipulate the log policy associated with this <xref:System.IO.Log.LogStore>.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogPolicy&gt;</ph> instance returned by this property to examine and manipulate the log policy associated with this <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore&gt;</ph>.","pos":[0,174],"source":"You can use the <xref:System.IO.Log.LogPolicy> instance returned by this property to examine and manipulate the log policy associated with this <xref:System.IO.Log.LogStore>."}]}],"pos":[49458,49633],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Log.LogPolicy\"></xref> instance representing the policy associated with this log store.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Log.LogPolicy\"&gt;&lt;/xref&gt;</ph> instance representing the policy associated with this log store.","source":"A <xref href=\"System.IO.Log.LogPolicy\"></xref> instance representing the policy associated with this log store."}],"pos":[49770,49882],"yaml":true},{"content":"Sets the sequence number of the archive tail.","nodes":[{"pos":[0,45],"content":"Sets the sequence number of the archive tail.","nodes":[{"content":"Sets the sequence number of the archive tail.","pos":[0,45]}]}],"pos":[50954,51000],"yaml":true},{"content":"The smaller of the base sequence number and the archive tail determines the tail of the log.","nodes":[{"pos":[0,92],"content":"The smaller of the base sequence number and the archive tail determines the tail of the log.","nodes":[{"content":"The smaller of the base sequence number and the archive tail determines the tail of the log.","pos":[0,92]}]}],"pos":[51011,51104],"yaml":true,"extradata":"MT"},{"content":"The sequence number of the archive tail.","nodes":[{"pos":[0,40],"content":"The sequence number of the archive tail.","nodes":[{"content":"The sequence number of the archive tail.","pos":[0,40]}]}],"pos":[51677,51718],"yaml":true},{"content":"<code>archiveTail</code> is not between the base and last sequence numbers of this sequence.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">&lt;code&gt;archiveTail&lt;/code&gt;</ph> is not between the base and last sequence numbers of this sequence.","source":"<code>archiveTail</code> is not between the base and last sequence numbers of this sequence."}],"pos":[51897,51990],"yaml":true},{"content":"<code>archiveTail</code> is not valid for this sequence.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">&lt;code&gt;archiveTail&lt;/code&gt;</ph> is not valid for this sequence.","source":"<code>archiveTail</code> is not valid for this sequence."}],"pos":[52084,52141],"yaml":true},{"content":"An invalid operation has been executed.","nodes":[{"pos":[0,39],"content":"An invalid operation has been executed.","nodes":[{"content":"An invalid operation has been executed.","pos":[0,39]}]}],"pos":[52251,52291],"yaml":true},{"content":"An I/O error occurs when creating the archive snapshot.","nodes":[{"pos":[0,55],"content":"An I/O error occurs when creating the archive snapshot.","nodes":[{"content":"An I/O error occurs when creating the archive snapshot.","pos":[0,55]}]}],"pos":[52379,52435],"yaml":true},{"content":"The log store is not archivable.","nodes":[{"pos":[0,32],"content":"The log store is not archivable.","nodes":[{"content":"The log store is not archivable.","pos":[0,32]}]}],"pos":[52537,52570],"yaml":true},{"content":"The method was called after the sequence has been disposed of.","nodes":[{"pos":[0,62],"content":"The method was called after the sequence has been disposed of.","nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]}],"pos":[52676,52739],"yaml":true},{"content":"There is not enough memory to continue the execution of a program.","nodes":[{"pos":[0,66],"content":"There is not enough memory to continue the execution of a program.","nodes":[{"content":"There is not enough memory to continue the execution of a program.","pos":[0,66]}]}],"pos":[52839,52906],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[53020,53090],"yaml":true},{"content":"Gets the number of log streams in this log store.","nodes":[{"pos":[0,49],"content":"Gets the number of log streams in this log store.","nodes":[{"content":"Gets the number of log streams in this log store.","pos":[0,49]}]}],"pos":[53948,53998],"yaml":true},{"content":"The number of log streams in this log store.","nodes":[{"pos":[0,44],"content":"The number of log streams in this log store.","nodes":[{"content":"The number of log streams in this log store.","pos":[0,44]}]}],"pos":[54109,54154],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Log.LogStore\n  commentId: T:System.IO.Log.LogStore\n  id: LogStore\n  children:\n  - System.IO.Log.LogStore.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)\n  - System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode)\n  - System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  - System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  - System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)\n  - System.IO.Log.LogStore.Archivable\n  - System.IO.Log.LogStore.BaseSequenceNumber\n  - System.IO.Log.LogStore.CreateLogArchiveSnapshot\n  - System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  - System.IO.Log.LogStore.Delete(System.String)\n  - System.IO.Log.LogStore.Dispose\n  - System.IO.Log.LogStore.Extents\n  - System.IO.Log.LogStore.FreeBytes\n  - System.IO.Log.LogStore.Handle\n  - System.IO.Log.LogStore.LastSequenceNumber\n  - System.IO.Log.LogStore.Length\n  - System.IO.Log.LogStore.Policy\n  - System.IO.Log.LogStore.SetArchiveTail(System.IO.Log.SequenceNumber)\n  - System.IO.Log.LogStore.StreamCount\n  langs:\n  - csharp\n  name: LogStore\n  nameWithType: LogStore\n  fullName: System.IO.Log.LogStore\n  type: Class\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Represents a log-structured storage.\n  remarks: \"The <xref:System.IO.Log.LogRecordSequence> class provides an implementation of the record sequence interface on top of a Common Log File System (CLFS) log. It works with the <xref:System.IO.Log.LogStore> class, which provides an interface for directly manipulating and managing a CLFS log file. A log store provides append-only storage across a set of disk extents. The <xref:System.IO.Log.LogStore> class represents this storage, and provides methods for adding and removing containers, setting policy, and creating archives. It does not provide methods for reading from and writing to the storage; these methods are provided by the <xref:System.IO.Log.LogRecordSequence> class.  \\n  \\n The relationship between the <xref:System.IO.Log.LogStore> class and the <xref:System.IO.Log.LogRecordSequence> class is similar to the relationship between a disk file and a <xref:System.IO.FileStream> object. The disk file provides the actual storage and has attributes such as length and last access time, while the <xref:System.IO.FileStream> object provides a view on the file that can be used to read from it and write to it. Similarly, the <xref:System.IO.Log.LogStore> class has attributes like a policy and a collection of disk extents, and the <xref:System.IO.Log.LogRecordSequence> class provides a record-oriented mechanism for reading and writing data.  \\n  \\n Unlike the file record sequence represented by the <xref:System.IO.Log.FileRecordSequence> class, a <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments. To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A> and <xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which can be returned by the <xref:System.IO.Log.LogStore.Extents%2A> property.  \\n  \\n A <xref:System.IO.Log.LogStore> instance can have policies associated with it. These are represented by <xref:System.IO.Log.LogPolicy> instances that can be returned by the <xref:System.IO.Log.LogStore.Policy%2A> property. A policy dictates rules that the log will attempt to follow, such as maximum number of extents and minimum size, and instructions on growing or shrinking the <xref:System.IO.Log.LogStore> under certain conditions. In addition, you can specify whether a <xref:System.IO.Log.LogStore> instance can be archived. Policies are set per log and are volatile, which means that once every handle to the log is closed, the policy no longer exists.\"\n  example:\n  - \"The following example shows how to archive a <xref:System.IO.Log.LogStore> to an XML document.  \\n  \\n [!code-csharp[logarchievesnapshot#0](~/samples/snippets/csharp/VS_Snippets_CFX/logarchievesnapshot/cs/logarchievesnapshot.cs#0)]\\n [!code-vb[logarchievesnapshot#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/logarchievesnapshot/vb/logarchievesnapshot.vb#0)]\"\n  syntax:\n    content: 'public sealed class LogStore : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)\n  commentId: M:System.IO.Log.LogStore.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)\n  id: '#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)'\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: LogStore(SafeFileHandle)\n  nameWithType: LogStore.LogStore(SafeFileHandle)\n  fullName: LogStore.LogStore(SafeFileHandle)\n  type: Constructor\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class for the specified handle.\n  syntax:\n    content: public LogStore (Microsoft.Win32.SafeHandles.SafeFileHandle handle);\n    parameters:\n    - id: handle\n      type: Microsoft.Win32.SafeHandles.SafeFileHandle\n      description: A file handle for the log file that the current <xref href=\"System.IO.Log.LogStore\"></xref> object encapsulates.\n  overload: System.IO.Log.LogStore.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>handle</code> is `null`.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The log handle could not be bound to the thread pool.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of a program.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode)\n  commentId: M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode)\n  id: '#ctor(System.String,System.IO.FileMode)'\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: LogStore(String, FileMode)\n  nameWithType: LogStore.LogStore(String, FileMode)\n  fullName: LogStore.LogStore(String, FileMode)\n  type: Constructor\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class with the specified path and mode.\n  remarks: \"Use this constructor to open a log store with the specified path and mode. The store is opened with read/write access, and shares read access.  \\n  \\n The `path` parameter should use the following syntax:  \\n  \\n `log:<physical log name>[::<log client name>]`  \\n  \\n where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.  \\n  \\n Clients that share the same physical log name share the same extents collection and policy.\"\n  syntax:\n    content: public LogStore (string path, System.IO.FileMode mode);\n    parameters:\n    - id: path\n      type: System.String\n      description: A relative or absolute path for the base file of the log store to open.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store.\n  overload: System.IO.Log.LogStore.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>path</code> contains only white space.  \\n  \\n -or-  \\n  \\n <code>path</code> contains one or more invalid characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>mode</code> contains an invalid value.\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs when opening the log store.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: <xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of a program.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  commentId: M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)'\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: LogStore(String, FileMode, FileAccess)\n  nameWithType: LogStore.LogStore(String, FileMode, FileAccess)\n  fullName: LogStore.LogStore(String, FileMode, FileAccess)\n  type: Constructor\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class with the specified path, mode, and access.\n  remarks: \"Use this constructor to open a new log store with the specified path, mode, and access. The store is opened sharing read access.  \\n  \\n The `path` parameter should use the following syntax:  \\n  \\n `log:<physical log name>[::<log client name>]`  \\n  \\n where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.  \\n  \\n Clients that share the same physical log name share the same extents collection and policy.\"\n  syntax:\n    content: public LogStore (string path, System.IO.FileMode mode, System.IO.FileAccess access);\n    parameters:\n    - id: path\n      type: System.String\n      description: A relative or absolute path for the base file of the log store to open.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store.\n    - id: access\n      type: System.IO.FileAccess\n      description: One of the <xref href=\"System.IO.FileAccess\"></xref> values that determines how the file can be accessed by the <xref href=\"System.IO.Log.LogStore\"></xref>.\n  overload: System.IO.Log.LogStore.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>path</code> contains only white space.  \\n  \\n -or-  \\n  \\n <code>path</code> contains one or more invalid characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>mode</code> contains an invalid value.  \\n  \\n -or  \\n  \\n <code>access</code> contains an invalid value.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs when opening the log store.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: <xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of a program.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  commentId: M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)'\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: LogStore(String, FileMode, FileAccess, FileShare)\n  nameWithType: LogStore.LogStore(String, FileMode, FileAccess, FileShare)\n  fullName: LogStore.LogStore(String, FileMode, FileAccess, FileShare)\n  type: Constructor\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class.\n  remarks: \"This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access. The store is opened sharing the specified access.  \\n  \\n The `path` parameter should use the following syntax:  \\n  \\n `log:<physical log name>[::<log client name>]`  \\n  \\n where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.  \\n  \\n Clients that share the same physical log name share the same extents collection and policy.\"\n  syntax:\n    content: public LogStore (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);\n    parameters:\n    - id: path\n      type: System.String\n      description: A relative or absolute path for the base file of the log store to open.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store.\n    - id: access\n      type: System.IO.FileAccess\n      description: One of the <xref href=\"System.IO.FileAccess\"></xref> values that determines how the file can be accessed by the <xref href=\"System.IO.Log.LogStore\"></xref>.\n    - id: share\n      type: System.IO.FileShare\n      description: One of the <xref href=\"System.IO.FileShare\"></xref> values that determines how the log store will be shared among processes.\n  overload: System.IO.Log.LogStore.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>path</code> contains only white space.  \\n  \\n -or-  \\n  \\n <code>path</code> contains one or more invalid characters.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>mode</code> contains an invalid value.  \\n  \\n -or  \\n  \\n <code>access</code> contains an invalid value.  \\n  \\n -or-  \\n  \\n <code>share</code> contains an invalid value.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs when opening the log store.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: <xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of a program.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)\n  commentId: M:System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)\n  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)'\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: LogStore(String, FileMode, FileAccess, FileShare, FileSecurity)\n  nameWithType: LogStore.LogStore(String, FileMode, FileAccess, FileShare, FileSecurity)\n  fullName: LogStore.LogStore(String, FileMode, FileAccess, FileShare, FileSecurity)\n  type: Constructor\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Initializes a new instance of the <xref href=\"System.IO.Log.LogStore\"></xref> class.\n  remarks: \"This constructor initializes a new <xref:System.IO.Log.LogStore> object that it opens with the specified path, mode, and access. The store is opened sharing the specified access. The `path` parameter should follow the following syntax:  \\n  \\n `log:<physical log name>[::<log client name>]`  \\n  \\n where `<physical log name>` is a valid path to a log file, and `<log client name>` is a unique client identifier. A log store should be either a physical log store or a virtual log store, but not both. Once a log store has been created physically or virtually, it remains so for its lifetime. A physical log store is created by specifying only the physical log name. A virtual log store is created by specifying both the physical log name and the log client name.  \\n  \\n Clients that share the same physical log name share the same extents collection and policy.\"\n  syntax:\n    content: public LogStore (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.Security.AccessControl.FileSecurity fileSecurity);\n    parameters:\n    - id: path\n      type: System.String\n      description: A relative or absolute path for the base file of the log store to open.\n    - id: mode\n      type: System.IO.FileMode\n      description: One of the <xref href=\"System.IO.FileMode\"></xref> values that determines how to open or create the store.\n    - id: access\n      type: System.IO.FileAccess\n      description: One of the <xref href=\"System.IO.FileAccess\"></xref> values that determines how the file can be accessed by the <xref href=\"System.IO.Log.LogStore\"></xref>.\n    - id: share\n      type: System.IO.FileShare\n      description: One of the <xref href=\"System.IO.FileShare\"></xref> values that determines how the log store will be shared among processes.\n    - id: fileSecurity\n      type: System.Security.AccessControl.FileSecurity\n      description: One of the <xref href=\"System.Security.AccessControl.FileSecurity\"></xref> value that specifies the security to set on the newly created store if the store must be created.\n  overload: System.IO.Log.LogStore.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The log store file name specified by <code>path</code> is not valid.  \\n  \\n -or-  \\n  \\n <code>Mode</code> is `CreateNew`, which cannot be used without write access.  \\n  \\n -or-  \\n  \\n <code>Mode</code> is `OpenOrCreate`, which cannot be used without write access.\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>mode</code> contains an invalid value.  \\n  \\n -or  \\n  \\n <code>access</code> contains an invalid value.  \\n  \\n -or-  \\n  \\n <code>share</code> contains an invalid value.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"An I/O error occurs when opening the log store.  \\n  \\n The file specified by <code>path</code> cannot be accessed because it is in use by another process.  \\n  \\n -or-  \\n  \\n The file specified by <code>path</code> cannot be created because the file or directory already exists.  \\n  \\n -or-  \\n  \\n The log handle could not be bound to the thread pool.  \\n  \\n -or-  \\n  \\n The specified log file format or version is invalid.\"\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: <xref href=\"System.IO.Log.LogStore\"></xref> cannot be used because the required Common Log File System (CLFS) component is not installed. Install the CLFS component if it is available for your platform or use the <xref href=\"System.IO.Log.FileRecordSequence\"></xref> class instead.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of a program.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: The record sequence is full.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.Archivable\n  commentId: P:System.IO.Log.LogStore.Archivable\n  id: Archivable\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: Archivable\n  nameWithType: LogStore.Archivable\n  fullName: LogStore.Archivable\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets a value indicating whether this <xref href=\"System.IO.Log.LogStore\"></xref> instance can be archived.\n  remarks: If a <xref:System.IO.Log.LogStore> is not archivable, calls to the <xref:System.IO.Log.LogStore.CreateLogArchiveSnapshot%2A> and <xref:System.IO.Log.LogStore.SetArchiveTail%2A> methods result in a <xref:System.NotSupportedException> being thrown.\n  syntax:\n    content: public bool Archivable { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if this <xref href=\"System.IO.Log.LogStore\"></xref> instance can be archived; otherwise, `false`.'\n  overload: System.IO.Log.LogStore.Archivable*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The property was accessed after the sequence has been disposed of.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.BaseSequenceNumber\n  commentId: P:System.IO.Log.LogStore.BaseSequenceNumber\n  id: BaseSequenceNumber\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: BaseSequenceNumber\n  nameWithType: LogStore.BaseSequenceNumber\n  fullName: LogStore.BaseSequenceNumber\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the lowest sequence number that corresponds to a valid record in this <xref href=\"System.IO.Log.LogStore\"></xref> instance.\n  remarks: Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>.\n  syntax:\n    content: public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }\n    return:\n      type: System.IO.Log.SequenceNumber\n      description: The lowest sequence number that corresponds to a valid record in this <xref href=\"System.IO.Log.LogStore\"></xref> instance.\n  overload: System.IO.Log.LogStore.BaseSequenceNumber*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The property was accessed after the sequence has been disposed of.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.CreateLogArchiveSnapshot\n  commentId: M:System.IO.Log.LogStore.CreateLogArchiveSnapshot\n  id: CreateLogArchiveSnapshot\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: CreateLogArchiveSnapshot()\n  nameWithType: LogStore.CreateLogArchiveSnapshot()\n  fullName: LogStore.CreateLogArchiveSnapshot()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Takes a snapshot of the log store state for making a backup.\n  remarks: ''\n  example:\n  - \"The following example shows how to archive a <xref:System.IO.Log.LogStore> to an XML document.  \\n  \\n [!code-csharp[logarchievesnapshot#0](~/samples/snippets/csharp/VS_Snippets_CFX/logarchievesnapshot/cs/logarchievesnapshot.cs#0)]\\n [!code-vb[logarchievesnapshot#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/logarchievesnapshot/vb/logarchievesnapshot.vb#0)]\"\n  syntax:\n    content: public System.IO.Log.LogArchiveSnapshot CreateLogArchiveSnapshot ();\n    parameters: []\n    return:\n      type: System.IO.Log.LogArchiveSnapshot\n      description: A <xref href=\"System.IO.Log.LogArchiveSnapshot\"></xref> object that contains the state necessary to make an archive.\n  overload: System.IO.Log.LogStore.CreateLogArchiveSnapshot*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The log store is not archivable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs when creating the archive snapshot.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An argument is not valid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An invalid operation has been executed.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of a program.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: The record sequence is full.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  commentId: M:System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  id: CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: CreateLogArchiveSnapshot(SequenceNumber, SequenceNumber)\n  nameWithType: LogStore.CreateLogArchiveSnapshot(SequenceNumber, SequenceNumber)\n  fullName: LogStore.CreateLogArchiveSnapshot(SequenceNumber, SequenceNumber)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Takes a snapshot of the log store state between the specified sequence numbers for making a backup.\n  remarks: The archive snapshot returned from this method encompasses information from either the base sequence number or the archive sequence number, whichever is lower, to the last sequence number. It is not inclusive for the last sequence number, which means that the archive only includes records up to but not including last. In addition, when using this method, the start SequenceNumber must be equal to the BaseSequenceNumber in order for the archive to be consistent.\n  syntax:\n    content: public System.IO.Log.LogArchiveSnapshot CreateLogArchiveSnapshot (System.IO.Log.SequenceNumber first, System.IO.Log.SequenceNumber last);\n    parameters:\n    - id: first\n      type: System.IO.Log.SequenceNumber\n      description: The starting sequence number in the range to archive.\n    - id: last\n      type: System.IO.Log.SequenceNumber\n      description: The ending sequence number in the range to archive.\n    return:\n      type: System.IO.Log.LogArchiveSnapshot\n      description: A <xref href=\"System.IO.Log.LogArchiveSnapshot\"></xref> object that contains the state necessary to make an archive.\n  overload: System.IO.Log.LogStore.CreateLogArchiveSnapshot*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>first</code> or <code>last</code> is not between the base and last sequence numbers of this sequence.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>first</code> is larger than <code>last</code>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An invalid operation has been executed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs when creating the archive snapshot.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The log store is not archivable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of a program.\n  - type: System.IO.Log.SequenceFullException\n    commentId: T:System.IO.Log.SequenceFullException\n    description: The record sequence is full.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.Delete(System.String)\n  commentId: M:System.IO.Log.LogStore.Delete(System.String)\n  id: Delete(System.String)\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: Delete(String)\n  nameWithType: LogStore.Delete(String)\n  fullName: LogStore.Delete(String)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Removes the log store.\n  syntax:\n    content: public static void Delete (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: A relative or absolute path for the base file of the log store to remove.\n  overload: System.IO.Log.LogStore.Delete*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>path</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>path</code> is an empty string (\\\"\\\").  \\n  \\n -or-  \\n  \\n <code>path</code> contains only white space.  \\n  \\n -or-  \\n  \\n <code>path</code> contains one or more invalid characters.\"\n  - type: System.IO.FileNotFoundException\n    commentId: T:System.IO.FileNotFoundException\n    description: The file cannot be found.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs when opening the log store.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.Dispose\n  commentId: M:System.IO.Log.LogStore.Dispose\n  id: Dispose\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: LogStore.Dispose()\n  fullName: LogStore.Dispose()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Releases all resources used by the <xref href=\"System.IO.Log.LogStore\"></xref>.\n  remarks: \"Call <xref:System.IO.Log.LogStore.Dispose%2A> when you have finished using the <xref:System.IO.Log.LogStore>. The <xref:System.IO.Log.LogStore.Dispose%2A> method leaves the <xref:System.IO.Log.LogStore> in an unusable state. After calling <xref:System.IO.Log.LogStore.Dispose%2A> , you must release all references to the <xref:System.IO.Log.LogStore> so the garbage collector can reclaim the memory that the <xref:System.IO.Log.LogStore> was occupying.  \\n  \\n> [!NOTE]\\n>  Always call <xref:System.IO.Log.LogStore.Dispose%2A> before you release your last reference to the <xref:System.IO.Log.LogStore>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Log.LogStore> object's `Finalize` method.\"\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.IO.Log.LogStore.Dispose*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.Extents\n  commentId: P:System.IO.Log.LogStore.Extents\n  id: Extents\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: Extents\n  nameWithType: LogStore.Extents\n  fullName: LogStore.Extents\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the collection of log extents that contain the data for this log store.\n  remarks: A <xref:System.IO.Log.LogStore> instance stores its data in a collection of disk extents, represented by <xref:System.IO.Log.LogExtent> instances. The extents in a given <xref:System.IO.Log.LogStore> instance are all of uniform size, and space is added to and removed from a <xref:System.IO.Log.LogStore> instance in extent increments. To add and remove log extents, use the <xref:System.IO.Log.LogExtentCollection.Add%2A>and<xref:System.IO.Log.LogExtentCollection.Remove%2A> methods of the <xref:System.IO.Log.LogExtentCollection> object, which is returned by this property.\n  syntax:\n    content: public System.IO.Log.LogExtentCollection Extents { get; }\n    return:\n      type: System.IO.Log.LogExtentCollection\n      description: A <xref href=\"System.IO.Log.LogExtentCollection\"></xref> instance containing the collection of log extents that encapsulates data for this log store.\n  overload: System.IO.Log.LogStore.Extents*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.FreeBytes\n  commentId: P:System.IO.Log.LogStore.FreeBytes\n  id: FreeBytes\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: FreeBytes\n  nameWithType: LogStore.FreeBytes\n  fullName: LogStore.FreeBytes\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the number of bytes available in the log store.\n  syntax:\n    content: public long FreeBytes { get; }\n    return:\n      type: System.Int64\n      description: The number of bytes available in the log store.\n  overload: System.IO.Log.LogStore.FreeBytes*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The property was accessed after the sequence has been disposed of.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.Handle\n  commentId: P:System.IO.Log.LogStore.Handle\n  id: Handle\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: LogStore.Handle\n  fullName: LogStore.Handle\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the operating system file handle for the log file that the current <xref href=\"System.IO.Log.LogStore\"></xref> instance encapsulates.\n  syntax:\n    content: public Microsoft.Win32.SafeHandles.SafeFileHandle Handle { get; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeFileHandle\n      description: The operating system file handle for the log file that the current <xref href=\"System.IO.Log.LogStore\"></xref> instance encapsulates.\n  overload: System.IO.Log.LogStore.Handle*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.LastSequenceNumber\n  commentId: P:System.IO.Log.LogStore.LastSequenceNumber\n  id: LastSequenceNumber\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: LastSequenceNumber\n  nameWithType: LogStore.LastSequenceNumber\n  fullName: LogStore.LastSequenceNumber\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: When overridden in a derived class, gets the sequence number of the next record to be appended to the log store.\n  remarks: Valid sequence numbers are greater than or equal to <xref:System.IO.Log.LogStore.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.LogStore.LastSequenceNumber%2A>.\n  syntax:\n    content: public System.IO.Log.SequenceNumber LastSequenceNumber { get; }\n    return:\n      type: System.IO.Log.SequenceNumber\n      description: The sequence number of the next record to be appended to the log store.\n  overload: System.IO.Log.LogStore.LastSequenceNumber*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The property was accessed after the sequence has been disposed of.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.Length\n  commentId: P:System.IO.Log.LogStore.Length\n  id: Length\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: Length\n  nameWithType: LogStore.Length\n  fullName: LogStore.Length\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the size of the log store, in bytes.\n  remarks: The size of the log store is the sum of the sizes of the log extents.\n  syntax:\n    content: public long Length { get; }\n    return:\n      type: System.Int64\n      description: The size of the log store, in bytes.\n  overload: System.IO.Log.LogStore.Length*\n  exceptions:\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The property was accessed after the sequence has been disposed of.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.Policy\n  commentId: P:System.IO.Log.LogStore.Policy\n  id: Policy\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: Policy\n  nameWithType: LogStore.Policy\n  fullName: LogStore.Policy\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the policy associated with this log store.\n  remarks: You can use the <xref:System.IO.Log.LogPolicy> instance returned by this property to examine and manipulate the log policy associated with this <xref:System.IO.Log.LogStore>.\n  syntax:\n    content: public System.IO.Log.LogPolicy Policy { get; }\n    return:\n      type: System.IO.Log.LogPolicy\n      description: A <xref href=\"System.IO.Log.LogPolicy\"></xref> instance representing the policy associated with this log store.\n  overload: System.IO.Log.LogStore.Policy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.SetArchiveTail(System.IO.Log.SequenceNumber)\n  commentId: M:System.IO.Log.LogStore.SetArchiveTail(System.IO.Log.SequenceNumber)\n  id: SetArchiveTail(System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: SetArchiveTail(SequenceNumber)\n  nameWithType: LogStore.SetArchiveTail(SequenceNumber)\n  fullName: LogStore.SetArchiveTail(SequenceNumber)\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Sets the sequence number of the archive tail.\n  remarks: The smaller of the base sequence number and the archive tail determines the tail of the log.\n  example:\n  - \"The following example shows how to archive a <xref:System.IO.Log.LogStore> to an XML document.  \\n  \\n [!code-csharp[logarchievesnapshot#0](~/samples/snippets/csharp/VS_Snippets_CFX/logarchievesnapshot/cs/logarchievesnapshot.cs#0)]\\n [!code-vb[logarchievesnapshot#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/logarchievesnapshot/vb/logarchievesnapshot.vb#0)]\"\n  syntax:\n    content: public void SetArchiveTail (System.IO.Log.SequenceNumber archiveTail);\n    parameters:\n    - id: archiveTail\n      type: System.IO.Log.SequenceNumber\n      description: The sequence number of the archive tail.\n  overload: System.IO.Log.LogStore.SetArchiveTail*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>archiveTail</code> is not between the base and last sequence numbers of this sequence.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>archiveTail</code> is not valid for this sequence.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: An invalid operation has been executed.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: An I/O error occurs when creating the archive snapshot.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The log store is not archivable.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of a program.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.LogStore.StreamCount\n  commentId: P:System.IO.Log.LogStore.StreamCount\n  id: StreamCount\n  parent: System.IO.Log.LogStore\n  langs:\n  - csharp\n  name: StreamCount\n  nameWithType: LogStore.StreamCount\n  fullName: LogStore.StreamCount\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the number of log streams in this log store.\n  syntax:\n    content: public int StreamCount { get; }\n    return:\n      type: System.Int32\n      description: The number of log streams in this log store.\n  overload: System.IO.Log.LogStore.StreamCount*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.OutOfMemoryException\n  parent: System\n  isExternal: false\n  name: OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.IO.FileNotFoundException\n  parent: System.IO\n  isExternal: false\n  name: FileNotFoundException\n  nameWithType: FileNotFoundException\n  fullName: System.IO.FileNotFoundException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.IO.Log.SequenceFullException\n  parent: System.IO.Log\n  isExternal: false\n  name: SequenceFullException\n  nameWithType: SequenceFullException\n  fullName: System.IO.Log.SequenceFullException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.IO.Log.LogStore.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle)\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: LogStore(SafeFileHandle)\n  nameWithType: LogStore.LogStore(SafeFileHandle)\n  fullName: LogStore.LogStore(SafeFileHandle)\n- uid: Microsoft.Win32.SafeHandles.SafeFileHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeFileHandle\n  nameWithType: SafeFileHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle\n- uid: System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode)\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: LogStore(String, FileMode)\n  nameWithType: LogStore.LogStore(String, FileMode)\n  fullName: LogStore.LogStore(String, FileMode)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.FileMode\n  parent: System.IO\n  isExternal: false\n  name: FileMode\n  nameWithType: FileMode\n  fullName: System.IO.FileMode\n- uid: System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: LogStore(String, FileMode, FileAccess)\n  nameWithType: LogStore.LogStore(String, FileMode, FileAccess)\n  fullName: LogStore.LogStore(String, FileMode, FileAccess)\n- uid: System.IO.FileAccess\n  parent: System.IO\n  isExternal: false\n  name: FileAccess\n  nameWithType: FileAccess\n  fullName: System.IO.FileAccess\n- uid: System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: LogStore(String, FileMode, FileAccess, FileShare)\n  nameWithType: LogStore.LogStore(String, FileMode, FileAccess, FileShare)\n  fullName: LogStore.LogStore(String, FileMode, FileAccess, FileShare)\n- uid: System.IO.FileShare\n  parent: System.IO\n  isExternal: false\n  name: FileShare\n  nameWithType: FileShare\n  fullName: System.IO.FileShare\n- uid: System.IO.Log.LogStore.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Security.AccessControl.FileSecurity)\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: LogStore(String, FileMode, FileAccess, FileShare, FileSecurity)\n  nameWithType: LogStore.LogStore(String, FileMode, FileAccess, FileShare, FileSecurity)\n  fullName: LogStore.LogStore(String, FileMode, FileAccess, FileShare, FileSecurity)\n- uid: System.Security.AccessControl.FileSecurity\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: FileSecurity\n  nameWithType: FileSecurity\n  fullName: System.Security.AccessControl.FileSecurity\n- uid: System.IO.Log.LogStore.Archivable\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Archivable\n  nameWithType: LogStore.Archivable\n  fullName: LogStore.Archivable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Log.LogStore.BaseSequenceNumber\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: BaseSequenceNumber\n  nameWithType: LogStore.BaseSequenceNumber\n  fullName: LogStore.BaseSequenceNumber\n- uid: System.IO.Log.SequenceNumber\n  parent: System.IO.Log\n  isExternal: false\n  name: SequenceNumber\n  nameWithType: SequenceNumber\n  fullName: System.IO.Log.SequenceNumber\n- uid: System.IO.Log.LogStore.CreateLogArchiveSnapshot\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: CreateLogArchiveSnapshot()\n  nameWithType: LogStore.CreateLogArchiveSnapshot()\n  fullName: LogStore.CreateLogArchiveSnapshot()\n- uid: System.IO.Log.LogArchiveSnapshot\n  parent: System.IO.Log\n  isExternal: false\n  name: LogArchiveSnapshot\n  nameWithType: LogArchiveSnapshot\n  fullName: System.IO.Log.LogArchiveSnapshot\n- uid: System.IO.Log.LogStore.CreateLogArchiveSnapshot(System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: CreateLogArchiveSnapshot(SequenceNumber, SequenceNumber)\n  nameWithType: LogStore.CreateLogArchiveSnapshot(SequenceNumber, SequenceNumber)\n  fullName: LogStore.CreateLogArchiveSnapshot(SequenceNumber, SequenceNumber)\n- uid: System.IO.Log.LogStore.Delete(System.String)\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Delete(String)\n  nameWithType: LogStore.Delete(String)\n  fullName: LogStore.Delete(String)\n- uid: System.IO.Log.LogStore.Dispose\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Dispose()\n  nameWithType: LogStore.Dispose()\n  fullName: LogStore.Dispose()\n- uid: System.IO.Log.LogStore.Extents\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Extents\n  nameWithType: LogStore.Extents\n  fullName: LogStore.Extents\n- uid: System.IO.Log.LogExtentCollection\n  parent: System.IO.Log\n  isExternal: false\n  name: LogExtentCollection\n  nameWithType: LogExtentCollection\n  fullName: System.IO.Log.LogExtentCollection\n- uid: System.IO.Log.LogStore.FreeBytes\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: FreeBytes\n  nameWithType: LogStore.FreeBytes\n  fullName: LogStore.FreeBytes\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Log.LogStore.Handle\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Handle\n  nameWithType: LogStore.Handle\n  fullName: LogStore.Handle\n- uid: System.IO.Log.LogStore.LastSequenceNumber\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: LastSequenceNumber\n  nameWithType: LogStore.LastSequenceNumber\n  fullName: LogStore.LastSequenceNumber\n- uid: System.IO.Log.LogStore.Length\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Length\n  nameWithType: LogStore.Length\n  fullName: LogStore.Length\n- uid: System.IO.Log.LogStore.Policy\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Policy\n  nameWithType: LogStore.Policy\n  fullName: LogStore.Policy\n- uid: System.IO.Log.LogPolicy\n  parent: System.IO.Log\n  isExternal: false\n  name: LogPolicy\n  nameWithType: LogPolicy\n  fullName: System.IO.Log.LogPolicy\n- uid: System.IO.Log.LogStore.SetArchiveTail(System.IO.Log.SequenceNumber)\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: SetArchiveTail(SequenceNumber)\n  nameWithType: LogStore.SetArchiveTail(SequenceNumber)\n  fullName: LogStore.SetArchiveTail(SequenceNumber)\n- uid: System.IO.Log.LogStore.StreamCount\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: StreamCount\n  nameWithType: LogStore.StreamCount\n  fullName: LogStore.StreamCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Log.LogStore.#ctor*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: LogStore\n  nameWithType: LogStore.LogStore\n  fullName: LogStore.LogStore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.Archivable*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Archivable\n  nameWithType: LogStore.Archivable\n  fullName: LogStore.Archivable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.BaseSequenceNumber*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: BaseSequenceNumber\n  nameWithType: LogStore.BaseSequenceNumber\n  fullName: LogStore.BaseSequenceNumber\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.CreateLogArchiveSnapshot*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: CreateLogArchiveSnapshot\n  nameWithType: LogStore.CreateLogArchiveSnapshot\n  fullName: LogStore.CreateLogArchiveSnapshot\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.Delete*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Delete\n  nameWithType: LogStore.Delete\n  fullName: LogStore.Delete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.Dispose*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Dispose\n  nameWithType: LogStore.Dispose\n  fullName: LogStore.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.Extents*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Extents\n  nameWithType: LogStore.Extents\n  fullName: LogStore.Extents\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.FreeBytes*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: FreeBytes\n  nameWithType: LogStore.FreeBytes\n  fullName: LogStore.FreeBytes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.Handle*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Handle\n  nameWithType: LogStore.Handle\n  fullName: LogStore.Handle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.LastSequenceNumber*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: LastSequenceNumber\n  nameWithType: LogStore.LastSequenceNumber\n  fullName: LogStore.LastSequenceNumber\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.Length*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Length\n  nameWithType: LogStore.Length\n  fullName: LogStore.Length\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.Policy*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: Policy\n  nameWithType: LogStore.Policy\n  fullName: LogStore.Policy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.SetArchiveTail*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: SetArchiveTail\n  nameWithType: LogStore.SetArchiveTail\n  fullName: LogStore.SetArchiveTail\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.IO.Log.LogStore.StreamCount*\n  parent: System.IO.Log.LogStore\n  isExternal: false\n  name: StreamCount\n  nameWithType: LogStore.StreamCount\n  fullName: LogStore.StreamCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/LogStore.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}