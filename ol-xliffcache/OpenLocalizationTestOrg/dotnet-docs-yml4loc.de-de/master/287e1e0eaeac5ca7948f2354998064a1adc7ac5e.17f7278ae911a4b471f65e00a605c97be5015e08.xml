{"nodes":[{"content":"An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.","nodes":[{"pos":[0,113],"content":"An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.","nodes":[{"content":"An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.","pos":[0,113]}]}],"pos":[1063,1177],"yaml":true},{"content":"Derive a class from <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension> and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service. Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service. When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension>. If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service. If an extension is not found the default discovery service implementation is used.","nodes":[{"pos":[0,871],"content":"Derive a class from <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension> and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service. Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service. When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension>. If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service. If an extension is not found the default discovery service implementation is used.","nodes":[{"content":"Derive a class from <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension> and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service. Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service. When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension>. If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service. If an extension is not found the default discovery service implementation is used.","pos":[0,871],"nodes":[{"content":"Derive a class from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension&gt;</ph> and override the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A&gt;</ph> method to return your custom discovery service.","pos":[0,233],"source":"Derive a class from <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension> and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service."},{"content":"Add your derived class to the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> extensions that host your discoverable service.","pos":[234,350],"source":" Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A&gt;</ph> is called the behavior iterates through the extensions in the service host and looks for a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension&gt;</ph>.","pos":[351,635],"source":" When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension>."},{"content":"If one is found its <ph id=\"ph1\">&lt;xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A&gt;</ph> is called to get the custom discovery service.","pos":[636,788],"source":" If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service."},{"content":"If an extension is not found the default discovery service implementation is used.","pos":[789,871]}]}]}],"pos":[1188,2060],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Discovery.DiscoveryServiceExtension\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Discovery.DiscoveryServiceExtension\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Discovery.DiscoveryServiceExtension\"></xref> class."}],"pos":[3707,3825],"yaml":true},{"content":"Override this method to return your custom <xref href=\"System.ServiceModel.Discovery.DiscoveryService\"></xref> implementation.","nodes":[{"pos":[0,126],"content":"Override this method to return your custom <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Discovery.DiscoveryService\"&gt;&lt;/xref&gt;</ph> implementation.","source":"Override this method to return your custom <xref href=\"System.ServiceModel.Discovery.DiscoveryService\"></xref> implementation."}],"pos":[5107,5234],"yaml":true},{"content":"An <xref:System.InvalidOperationException> is thrown while opening the service host if this method returns `null`","nodes":[{"pos":[0,113],"content":"An <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown while opening the service host if this method returns <ph id=\"ph2\">`null`</ph>","source":"An <xref:System.InvalidOperationException> is thrown while opening the service host if this method returns `null`"}],"pos":[5245,5359],"yaml":true,"extradata":"MT"},{"content":"A custom discovery service implementation.","nodes":[{"pos":[0,42],"content":"A custom discovery service implementation.","nodes":[{"content":"A custom discovery service implementation.","pos":[0,42]}]}],"pos":[5581,5624],"yaml":true},{"content":"Gets a read-only collection of published endpoints.","nodes":[{"pos":[0,51],"content":"Gets a read-only collection of published endpoints.","nodes":[{"content":"Gets a read-only collection of published endpoints.","pos":[0,51]}]}],"pos":[6828,6880],"yaml":true},{"content":"The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened. When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState.Opening> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection.","nodes":[{"pos":[0,340],"content":"The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened. When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState.Opening> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection.","nodes":[{"content":"The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened. When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState.Opening> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection.","pos":[0,340],"nodes":[{"content":"The property should be accessed only after the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> has successfully opened.","pos":[0,110],"source":"The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened."},{"content":"When the <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> is in <ph id=\"ph2\">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state, the <ph id=\"ph3\">&lt;xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata&gt;</ph> is being generated and added to the collection.","pos":[111,340],"source":" When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState.Opening> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection."}]}]}],"pos":[6891,7232],"yaml":true,"extradata":"MT"},{"content":"A read-only collection of published endpoints.","nodes":[{"pos":[0,46],"content":"A read-only collection of published endpoints.","nodes":[{"content":"A read-only collection of published endpoints.","pos":[0,46]}]}],"pos":[7547,7594],"yaml":true},{"content":"Attaches the extension to the specified service host.","nodes":[{"pos":[0,53],"content":"Attaches the extension to the specified service host.","nodes":[{"content":"Attaches the extension to the specified service host.","pos":[0,53]}]}],"pos":[9187,9241],"yaml":true},{"content":"The service host to attach the extension to.","nodes":[{"pos":[0,44],"content":"The service host to attach the extension to.","nodes":[{"content":"The service host to attach the extension to.","pos":[0,44]}]}],"pos":[9448,9493],"yaml":true},{"content":"Overload this method to allow the extension to be detached from its service host.","nodes":[{"pos":[0,81],"content":"Overload this method to allow the extension to be detached from its service host.","nodes":[{"content":"Overload this method to allow the extension to be detached from its service host.","pos":[0,81]}]}],"pos":[11142,11224],"yaml":true},{"content":"The base class implementation of this method throws an <xref:System.InvalidOperationException> that indicates discovery service extensions cannot be detached.","nodes":[{"pos":[0,158],"content":"The base class implementation of this method throws an <xref:System.InvalidOperationException> that indicates discovery service extensions cannot be detached.","nodes":[{"content":"The base class implementation of this method throws an <ph id=\"ph1\">&lt;xref:System.InvalidOperationException&gt;</ph> that indicates discovery service extensions cannot be detached.","pos":[0,158],"source":"The base class implementation of this method throws an <xref:System.InvalidOperationException> that indicates discovery service extensions cannot be detached."}]}],"pos":[11235,11394],"yaml":true,"extradata":"MT"},{"content":"The service host to detach from.","nodes":[{"pos":[0,32],"content":"The service host to detach from.","nodes":[{"content":"The service host to detach from.","pos":[0,32]}]}],"pos":[11601,11634],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  commentId: T:System.ServiceModel.Discovery.DiscoveryServiceExtension\n  id: DiscoveryServiceExtension\n  children:\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)\n  - System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)\n  langs:\n  - csharp\n  name: DiscoveryServiceExtension\n  nameWithType: DiscoveryServiceExtension\n  fullName: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  type: Class\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: An abstract WCF extension class for specifying a custom discovery service or for getting the published endpoints.\n  remarks: Derive a class from <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension> and override the <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> method to return your custom discovery service. Add your derived class to the <xref:System.ServiceModel.ServiceHost> extensions that host your discoverable service. When the <xref:System.ServiceModel.ServiceBehaviorAttribute.System%23ServiceModel%23Description%23IServiceBehavior%23Validate%2A> is called the behavior iterates through the extensions in the service host and looks for a <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension>. If one is found its <xref:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService%2A> is called to get the custom discovery service. If an extension is not found the default discovery service implementation is used.\n  syntax:\n    content: 'public abstract class DiscoveryServiceExtension : System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.ServiceModel.IExtension{System.ServiceModel.ServiceHostBase}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor\n  commentId: M:System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: DiscoveryServiceExtension()\n  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension()\n  fullName: DiscoveryServiceExtension.DiscoveryServiceExtension()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Discovery.DiscoveryServiceExtension\"></xref> class.\n  syntax:\n    content: protected DiscoveryServiceExtension ();\n    parameters: []\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService\n  commentId: M:System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService\n  id: GetDiscoveryService\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: GetDiscoveryService()\n  nameWithType: DiscoveryServiceExtension.GetDiscoveryService()\n  fullName: DiscoveryServiceExtension.GetDiscoveryService()\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Override this method to return your custom <xref href=\"System.ServiceModel.Discovery.DiscoveryService\"></xref> implementation.\n  remarks: An <xref:System.InvalidOperationException> is thrown while opening the service host if this method returns `null`\n  syntax:\n    content: protected abstract System.ServiceModel.Discovery.DiscoveryService GetDiscoveryService ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Discovery.DiscoveryService\n      description: A custom discovery service implementation.\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints\n  commentId: P:System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints\n  id: PublishedEndpoints\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: PublishedEndpoints\n  nameWithType: DiscoveryServiceExtension.PublishedEndpoints\n  fullName: DiscoveryServiceExtension.PublishedEndpoints\n  type: Property\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Gets a read-only collection of published endpoints.\n  remarks: The property should be accessed only after the <xref:System.ServiceModel.ServiceHost> has successfully opened. When the <xref:System.ServiceModel.ServiceHost> is in <xref:System.ServiceModel.CommunicationState.Opening> state, the <xref:System.ServiceModel.Discovery.EndpointDiscoveryMetadata> is being generated and added to the collection.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata> PublishedEndpoints { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}\n      description: A read-only collection of published endpoints.\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)\n  commentId: M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Attach(System.ServiceModel.ServiceHostBase)\n  id: System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)\n  isEii: true\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: IExtension<ServiceHostBase>.Attach(ServiceHostBase)\n  nameWithType: DiscoveryServiceExtension.IExtension<ServiceHostBase>.Attach(ServiceHostBase)\n  fullName: DiscoveryServiceExtension.IExtension<ServiceHostBase>.Attach(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Attaches the extension to the specified service host.\n  syntax:\n    content: void IExtension<ServiceHostBase>.Attach (System.ServiceModel.ServiceHostBase owner);\n    parameters:\n    - id: owner\n      type: System.ServiceModel.ServiceHostBase\n      description: The service host to attach the extension to.\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)\n  commentId: M:System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension<System#ServiceModel#ServiceHostBase>#Detach(System.ServiceModel.ServiceHostBase)\n  id: System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)\n  isEii: true\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  langs:\n  - csharp\n  name: IExtension<ServiceHostBase>.Detach(ServiceHostBase)\n  nameWithType: DiscoveryServiceExtension.IExtension<ServiceHostBase>.Detach(ServiceHostBase)\n  fullName: DiscoveryServiceExtension.IExtension<ServiceHostBase>.Detach(ServiceHostBase)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Discovery\n  namespace: System.ServiceModel.Discovery\n  summary: Overload this method to allow the extension to be detached from its service host.\n  remarks: The base class implementation of this method throws an <xref:System.InvalidOperationException> that indicates discovery service extensions cannot be detached.\n  syntax:\n    content: void IExtension<ServiceHostBase>.Detach (System.ServiceModel.ServiceHostBase owner);\n    parameters:\n    - id: owner\n      type: System.ServiceModel.ServiceHostBase\n      description: The service host to detach from.\n  overload: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: DiscoveryServiceExtension()\n  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension()\n  fullName: DiscoveryServiceExtension.DiscoveryServiceExtension()\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: GetDiscoveryService()\n  nameWithType: DiscoveryServiceExtension.GetDiscoveryService()\n  fullName: DiscoveryServiceExtension.GetDiscoveryService()\n- uid: System.ServiceModel.Discovery.DiscoveryService\n  parent: System.ServiceModel.Discovery\n  isExternal: false\n  name: DiscoveryService\n  nameWithType: DiscoveryService\n  fullName: System.ServiceModel.Discovery.DiscoveryService\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: PublishedEndpoints\n  nameWithType: DiscoveryServiceExtension.PublishedEndpoints\n  fullName: DiscoveryServiceExtension.PublishedEndpoints\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.ServiceModel.Discovery.EndpointDiscoveryMetadata\n  name: EndpointDiscoveryMetadata\n  nameWithType: EndpointDiscoveryMetadata\n  fullName: System.ServiceModel.Discovery.EndpointDiscoveryMetadata\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Discovery.EndpointDiscoveryMetadata}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<EndpointDiscoveryMetadata>\n  nameWithType: ReadOnlyCollection<EndpointDiscoveryMetadata>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Discovery.EndpointDiscoveryMetadata>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.Discovery.EndpointDiscoveryMetadata\n    name: EndpointDiscoveryMetadata\n    nameWithType: EndpointDiscoveryMetadata\n    fullName: System.ServiceModel.Discovery.EndpointDiscoveryMetadata\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: IExtension<ServiceHostBase>.Attach(ServiceHostBase)\n  nameWithType: DiscoveryServiceExtension.IExtension<ServiceHostBase>.Attach(ServiceHostBase)\n  fullName: DiscoveryServiceExtension.IExtension<ServiceHostBase>.Attach(ServiceHostBase)\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: IExtension<ServiceHostBase>.Detach(ServiceHostBase)\n  nameWithType: DiscoveryServiceExtension.IExtension<ServiceHostBase>.Detach(ServiceHostBase)\n  fullName: DiscoveryServiceExtension.IExtension<ServiceHostBase>.Detach(ServiceHostBase)\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.#ctor*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: DiscoveryServiceExtension\n  nameWithType: DiscoveryServiceExtension.DiscoveryServiceExtension\n  fullName: DiscoveryServiceExtension.DiscoveryServiceExtension\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.GetDiscoveryService*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: GetDiscoveryService\n  nameWithType: DiscoveryServiceExtension.GetDiscoveryService\n  fullName: DiscoveryServiceExtension.GetDiscoveryService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.PublishedEndpoints*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: PublishedEndpoints\n  nameWithType: DiscoveryServiceExtension.PublishedEndpoints\n  fullName: DiscoveryServiceExtension.PublishedEndpoints\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Attach\n  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Attach\n  fullName: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Attach\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n- uid: System.ServiceModel.Discovery.DiscoveryServiceExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach*\n  parent: System.ServiceModel.Discovery.DiscoveryServiceExtension\n  isExternal: false\n  name: System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Detach\n  nameWithType: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Detach\n  fullName: DiscoveryServiceExtension.System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>.Detach\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Discovery/DiscoveryServiceExtension.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.IExtension`1\n  name: IExtension<T>\n  nameWithType: IExtension<T>\n  fullName: System.ServiceModel.IExtension<T>\n- uid: System.ServiceModel.IExtension{System.ServiceModel.ServiceHostBase}\n  parent: System.ServiceModel\n  isExternal: false\n  name: IExtension<ServiceHostBase>\n  nameWithType: IExtension<ServiceHostBase>\n  fullName: System.ServiceModel.IExtension<System.ServiceModel.ServiceHostBase>\n  spec.csharp:\n  - uid: System.ServiceModel.IExtension`1\n    name: IExtension\n    nameWithType: IExtension\n    fullName: System.ServiceModel.IExtension\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ServiceModel.ServiceHostBase\n    name: ServiceHostBase\n    nameWithType: ServiceHostBase\n    fullName: System.ServiceModel.ServiceHostBase\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}