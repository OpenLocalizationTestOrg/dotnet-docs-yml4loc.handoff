{"nodes":[{"content":"Represents a civic address. A civic address can include fields such as street address, postal code, state/province, and country or region.","nodes":[{"pos":[0,138],"content":"Represents a civic address. A civic address can include fields such as street address, postal code, state/province, and country or region.","nodes":[{"content":"Represents a civic address. A civic address can include fields such as street address, postal code, state/province, and country or region.","pos":[0,138],"nodes":[{"content":"Represents a civic address.","pos":[0,27]},{"content":"A civic address can include fields such as street address, postal code, state/province, and country or region.","pos":[28,138]}]}]}],"pos":[1085,1224],"yaml":true},{"content":"A civic address for a location can be obtained from a <xref:System.Device.Location.GeoCoordinate> by using a class that implements <xref:System.Device.Location.ICivicAddressResolver>.  \n  \n The <xref:System.Device.Location.CivicAddressResolver> class provides a default implementation that returns the civic address that corresponds to a <xref:System.Device.Location.GeoCoordinate>, if the location source provides both coordinate data as well as civic address data.  \n  \n <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a <xref:System.Device.Location.CivicAddress> for the current location.  If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned.","nodes":[{"pos":[0,183],"content":"A civic address for a location can be obtained from a <xref:System.Device.Location.GeoCoordinate> by using a class that implements <xref:System.Device.Location.ICivicAddressResolver>.","nodes":[{"content":"A civic address for a location can be obtained from a <ph id=\"ph1\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph> by using a class that implements <ph id=\"ph2\">&lt;xref:System.Device.Location.ICivicAddressResolver&gt;</ph>.","pos":[0,183],"source":"A civic address for a location can be obtained from a <xref:System.Device.Location.GeoCoordinate> by using a class that implements <xref:System.Device.Location.ICivicAddressResolver>."}]},{"pos":[190,466],"content":"The <xref:System.Device.Location.CivicAddressResolver> class provides a default implementation that returns the civic address that corresponds to a <xref:System.Device.Location.GeoCoordinate>, if the location source provides both coordinate data as well as civic address data.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Device.Location.CivicAddressResolver&gt;</ph> class provides a default implementation that returns the civic address that corresponds to a <ph id=\"ph2\">&lt;xref:System.Device.Location.GeoCoordinate&gt;</ph>, if the location source provides both coordinate data as well as civic address data.","pos":[0,276],"source":"The <xref:System.Device.Location.CivicAddressResolver> class provides a default implementation that returns the civic address that corresponds to a <xref:System.Device.Location.GeoCoordinate>, if the location source provides both coordinate data as well as civic address data."}]},{"pos":[473,773],"content":"<xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a <xref:System.Device.Location.CivicAddress> for the current location.  If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned.","nodes":[{"content":"<xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a <xref:System.Device.Location.CivicAddress> for the current location.  If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned.","pos":[0,300],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A&gt;</ph> returns a <ph id=\"ph2\">&lt;xref:System.Device.Location.CivicAddress&gt;</ph> for the current location.","pos":[0,147],"source":"<xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a <xref:System.Device.Location.CivicAddress> for the current location."},{"content":"If the location source is unable to resolve the coordinate position to a civic address, <ph id=\"ph1\">&lt;xref:System.Device.Location.CivicAddress.Unknown&gt;</ph> is returned.","pos":[149,300],"source":"  If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned."}]}]}],"pos":[1235,2015],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class."}],"pos":[4428,4526],"yaml":true},{"content":"All fields are initialized to <xref:System.String.Empty>.","nodes":[{"pos":[0,57],"content":"All fields are initialized to <xref:System.String.Empty>.","nodes":[{"content":"All fields are initialized to <ph id=\"ph1\">&lt;xref:System.String.Empty&gt;</ph>.","pos":[0,57],"source":"All fields are initialized to <xref:System.String.Empty>."}]}],"pos":[4537,4595],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class using address information.","nodes":[{"pos":[0,123],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;&lt;/xref&gt;</ph> class using address information.","source":"Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class using address information."}],"pos":[6146,6270],"yaml":true},{"content":"A string containing the first line of the street address.","nodes":[{"pos":[0,57],"content":"A string containing the first line of the street address.","nodes":[{"content":"A string containing the first line of the street address.","pos":[0,57]}]}],"pos":[6553,6611],"yaml":true},{"content":"A string containing the second line of the street address.","nodes":[{"pos":[0,58],"content":"A string containing the second line of the street address.","nodes":[{"content":"A string containing the second line of the street address.","pos":[0,58]}]}],"pos":[6679,6738],"yaml":true},{"content":"A string containing the building name or number.","nodes":[{"pos":[0,48],"content":"A string containing the building name or number.","nodes":[{"content":"A string containing the building name or number.","pos":[0,48]}]}],"pos":[6802,6851],"yaml":true},{"content":"A string containing the city.","nodes":[{"pos":[0,29],"content":"A string containing the city.","nodes":[{"content":"A string containing the city.","pos":[0,29]}]}],"pos":[6911,6941],"yaml":true},{"content":"A string containing the country or region.","nodes":[{"pos":[0,42],"content":"A string containing the country or region.","nodes":[{"content":"A string containing the country or region.","pos":[0,42]}]}],"pos":[7010,7053],"yaml":true},{"content":"A string containing the floor number.","nodes":[{"pos":[0,37],"content":"A string containing the floor number.","nodes":[{"content":"A string containing the floor number.","pos":[0,37]}]}],"pos":[7119,7157],"yaml":true},{"content":"A string containing the postal code.","nodes":[{"pos":[0,36],"content":"A string containing the postal code.","nodes":[{"content":"A string containing the postal code.","pos":[0,36]}]}],"pos":[7223,7260],"yaml":true},{"content":"A string containing the state or province.","nodes":[{"pos":[0,42],"content":"A string containing the state or province.","nodes":[{"content":"A string containing the state or province.","pos":[0,42]}]}],"pos":[7329,7372],"yaml":true},{"content":"At least one parameter must be a non-empty string.","nodes":[{"pos":[0,50],"content":"At least one parameter must be a non-empty string.","nodes":[{"content":"At least one parameter must be a non-empty string.","pos":[0,50]}]}],"pos":[7535,7586],"yaml":true},{"content":"Gets or sets the first line of the address.","nodes":[{"pos":[0,43],"content":"Gets or sets the first line of the address.","nodes":[{"content":"Gets or sets the first line of the address.","pos":[0,43]}]}],"pos":[8484,8528],"yaml":true},{"content":"Returns the first line of the address. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,117],"content":"Returns the first line of the address. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"Returns the first line of the address.","pos":[0,38]},{"content":"If the data is not provided, returns <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[39,117],"source":" If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[8649,8767],"yaml":true},{"content":"Gets or sets the second line of the address.","nodes":[{"pos":[0,44],"content":"Gets or sets the second line of the address.","nodes":[{"content":"Gets or sets the second line of the address.","pos":[0,44]}]}],"pos":[9744,9789],"yaml":true},{"content":"Returns the second line of the address. If the data is not provided, returns <xref href=\"System.String.Empty.\"></xref>","nodes":[{"pos":[0,118],"content":"Returns the second line of the address. If the data is not provided, returns <xref href=\"System.String.Empty.\"></xref>","nodes":[{"content":"Returns the second line of the address.","pos":[0,39]},{"content":"If the data is not provided, returns <ph id=\"ph1\">&lt;xref href=\"System.String.Empty.\"&gt;&lt;/xref&gt;</ph>","pos":[40,118],"source":" If the data is not provided, returns <xref href=\"System.String.Empty.\"></xref>"}]}],"pos":[9910,10029],"yaml":true},{"content":"Gets or sets the building name or number.","nodes":[{"pos":[0,41],"content":"Gets or sets the building name or number.","nodes":[{"content":"Gets or sets the building name or number.","pos":[0,41]}]}],"pos":[10982,11024],"yaml":true},{"content":"Returns the building name or number. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,115],"content":"Returns the building name or number. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"Returns the building name or number.","pos":[0,36]},{"content":"If the data is not provided, returns <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[37,115],"source":" If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[11141,11257],"yaml":true},{"content":"Gets or sets the name of the city.","nodes":[{"pos":[0,34],"content":"Gets or sets the name of the city.","nodes":[{"content":"Gets or sets the name of the city.","pos":[0,34]}]}],"pos":[12182,12217],"yaml":true},{"content":"Returns the name of the city. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,108],"content":"Returns the name of the city. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"Returns the name of the city.","pos":[0,29]},{"content":"If the data is not provided, returns <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[30,108],"source":" If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[12330,12439],"yaml":true},{"content":"Gets or sets the country or region of the location.","nodes":[{"pos":[0,51],"content":"Gets or sets the country or region of the location.","nodes":[{"content":"Gets or sets the country or region of the location.","pos":[0,51]}]}],"pos":[13414,13466],"yaml":true},{"content":"The country or region is typically represented by a two-letter ISO-3166 country code.","nodes":[{"pos":[0,85],"content":"The country or region is typically represented by a two-letter ISO-3166 country code.","nodes":[{"content":"The country or region is typically represented by a two-letter ISO-3166 country code.","pos":[0,85]}]}],"pos":[13477,13563],"yaml":true,"extradata":"MT"},{"content":"Returns the country or region code. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,114],"content":"Returns the country or region code. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"Returns the country or region code.","pos":[0,35]},{"content":"If the data is not provided, returns <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[36,114],"source":" If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[13685,13800],"yaml":true},{"content":"Gets or sets the floor level of the location.","nodes":[{"pos":[0,45],"content":"Gets or sets the floor level of the location.","nodes":[{"content":"Gets or sets the floor level of the location.","pos":[0,45]}]}],"pos":[14766,14812],"yaml":true},{"content":"Returns a string that contains the floor level. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,126],"content":"Returns a string that contains the floor level. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"Returns a string that contains the floor level.","pos":[0,47]},{"content":"If the data is not provided, returns <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[48,126],"source":" If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[14931,15058],"yaml":true},{"content":"Gets a value that indicates whether the <xref href=\"System.Device.Location.CivicAddress\"></xref> contains data.","nodes":[{"pos":[0,111],"content":"Gets a value that indicates whether the <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;&lt;/xref&gt;</ph> contains data.","source":"Gets a value that indicates whether the <xref href=\"System.Device.Location.CivicAddress\"></xref> contains data."}],"pos":[16015,16127],"yaml":true},{"content":"`true` if the <xref href=\"System.Device.Location.CivicAddress\"></xref> is equal to <xref href=\"System.Device.Location.CivicAddress.Unknown\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,168],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;&lt;/xref&gt;</ph> is equal to <ph id=\"ph3\">&lt;xref href=\"System.Device.Location.CivicAddress.Unknown\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Device.Location.CivicAddress\"></xref> is equal to <xref href=\"System.Device.Location.CivicAddress.Unknown\"></xref>; otherwise, `false`."}],"pos":[16928,17099],"yaml":true},{"content":"Gets or sets the postal code of the location.","nodes":[{"pos":[0,45],"content":"Gets or sets the postal code of the location.","nodes":[{"content":"Gets or sets the postal code of the location.","pos":[0,45]}]}],"pos":[18061,18107],"yaml":true},{"content":"Returns the postal code of the location. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,119],"content":"Returns the postal code of the location. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"Returns the postal code of the location.","pos":[0,40]},{"content":"If the data is not provided, returns <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[41,119],"source":" If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[18226,18346],"yaml":true},{"content":"Gets or sets the state or province of the location.","nodes":[{"pos":[0,51],"content":"Gets or sets the state or province of the location.","nodes":[{"content":"Gets or sets the state or province of the location.","pos":[0,51]}]}],"pos":[19327,19379],"yaml":true},{"content":"Returns the state or province of the location. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,125],"content":"Returns the state or province of the location. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"Returns the state or province of the location.","pos":[0,46]},{"content":"If the data is not provided, returns <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[47,125],"source":" If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[19501,19627],"yaml":true},{"content":"Represents a <xref href=\"System.Device.Location.CivicAddress\"></xref> that contains no data.","nodes":[{"pos":[0,92],"content":"Represents a <ph id=\"ph1\">&lt;xref href=\"System.Device.Location.CivicAddress\"&gt;&lt;/xref&gt;</ph> that contains no data.","source":"Represents a <xref href=\"System.Device.Location.CivicAddress\"></xref> that contains no data."}],"pos":[20572,20665],"yaml":true},{"content":"Use <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to verify whether a <xref:System.Device.Location.CivicAddress> contains data.","nodes":[{"pos":[0,137],"content":"Use <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to verify whether a <xref:System.Device.Location.CivicAddress> contains data.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Device.Location.CivicAddress.IsUnknown%2A&gt;</ph> to verify whether a <ph id=\"ph2\">&lt;xref:System.Device.Location.CivicAddress&gt;</ph> contains data.","pos":[0,137],"source":"Use <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to verify whether a <xref:System.Device.Location.CivicAddress> contains data."}]}],"pos":[20676,20814],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Device.Location.CivicAddress\n  commentId: T:System.Device.Location.CivicAddress\n  id: CivicAddress\n  children:\n  - System.Device.Location.CivicAddress.#ctor\n  - System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)\n  - System.Device.Location.CivicAddress.AddressLine1\n  - System.Device.Location.CivicAddress.AddressLine2\n  - System.Device.Location.CivicAddress.Building\n  - System.Device.Location.CivicAddress.City\n  - System.Device.Location.CivicAddress.CountryRegion\n  - System.Device.Location.CivicAddress.FloorLevel\n  - System.Device.Location.CivicAddress.IsUnknown\n  - System.Device.Location.CivicAddress.PostalCode\n  - System.Device.Location.CivicAddress.StateProvince\n  - System.Device.Location.CivicAddress.Unknown\n  langs:\n  - csharp\n  name: CivicAddress\n  nameWithType: CivicAddress\n  fullName: System.Device.Location.CivicAddress\n  type: Class\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Represents a civic address. A civic address can include fields such as street address, postal code, state/province, and country or region.\n  remarks: \"A civic address for a location can be obtained from a <xref:System.Device.Location.GeoCoordinate> by using a class that implements <xref:System.Device.Location.ICivicAddressResolver>.  \\n  \\n The <xref:System.Device.Location.CivicAddressResolver> class provides a default implementation that returns the civic address that corresponds to a <xref:System.Device.Location.GeoCoordinate>, if the location source provides both coordinate data as well as civic address data.  \\n  \\n <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> returns a <xref:System.Device.Location.CivicAddress> for the current location.  If the location source is unable to resolve the coordinate position to a civic address, <xref:System.Device.Location.CivicAddress.Unknown> is returned.\"\n  example:\n  - \"The following example shows how to resolve a <xref:System.Device.Location.CivicAddress> from a <xref:System.Device.Location.GeoCoordinate> location synchronously.  \\n  \\n [!code-csharp[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/cs/resolvecivicaddresssync.cs#1)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/vb/resolvecivicaddresssync.vb#1)]  \\n  \\n The following example shows how to resolve a <xref:System.Device.Location.CivicAddress> from a <xref:System.Device.Location.GeoCoordinate> location asynchronously.  \\n  \\n [!code-csharp[System.Device.Location.ResolveCivicAddressAsync#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/cs/resolvecivicaddressasync.cs#1)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressAsync#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddressasync/vb/resolvecivicaddressasync.vb#1)]\"\n  syntax:\n    content: public class CivicAddress\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.#ctor\n  commentId: M:System.Device.Location.CivicAddress.#ctor\n  id: '#ctor'\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: CivicAddress()\n  nameWithType: CivicAddress.CivicAddress()\n  fullName: CivicAddress.CivicAddress()\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class.\n  remarks: All fields are initialized to <xref:System.String.Empty>.\n  syntax:\n    content: public CivicAddress ();\n    parameters: []\n  overload: System.Device.Location.CivicAddress.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)\n  commentId: M:System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)'\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: CivicAddress(String, String, String, String, String, String, String, String)\n  nameWithType: CivicAddress.CivicAddress(String, String, String, String, String, String, String, String)\n  fullName: CivicAddress.CivicAddress(String, String, String, String, String, String, String, String)\n  type: Constructor\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Initializes a new instance of the <xref href=\"System.Device.Location.CivicAddress\"></xref> class using address information.\n  syntax:\n    content: public CivicAddress (string addressLine1, string addressLine2, string building, string city, string countryRegion, string floorLevel, string postalCode, string stateProvince);\n    parameters:\n    - id: addressLine1\n      type: System.String\n      description: A string containing the first line of the street address.\n    - id: addressLine2\n      type: System.String\n      description: A string containing the second line of the street address.\n    - id: building\n      type: System.String\n      description: A string containing the building name or number.\n    - id: city\n      type: System.String\n      description: A string containing the city.\n    - id: countryRegion\n      type: System.String\n      description: A string containing the country or region.\n    - id: floorLevel\n      type: System.String\n      description: A string containing the floor number.\n    - id: postalCode\n      type: System.String\n      description: A string containing the postal code.\n    - id: stateProvince\n      type: System.String\n      description: A string containing the state or province.\n  overload: System.Device.Location.CivicAddress.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: At least one parameter must be a non-empty string.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.AddressLine1\n  commentId: P:System.Device.Location.CivicAddress.AddressLine1\n  id: AddressLine1\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: AddressLine1\n  nameWithType: CivicAddress.AddressLine1\n  fullName: CivicAddress.AddressLine1\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the first line of the address.\n  syntax:\n    content: public string AddressLine1 { get; set; }\n    return:\n      type: System.String\n      description: Returns the first line of the address. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Device.Location.CivicAddress.AddressLine1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.AddressLine2\n  commentId: P:System.Device.Location.CivicAddress.AddressLine2\n  id: AddressLine2\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: AddressLine2\n  nameWithType: CivicAddress.AddressLine2\n  fullName: CivicAddress.AddressLine2\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the second line of the address.\n  syntax:\n    content: public string AddressLine2 { get; set; }\n    return:\n      type: System.String\n      description: Returns the second line of the address. If the data is not provided, returns <xref href=\"System.String.Empty.\"></xref>\n  overload: System.Device.Location.CivicAddress.AddressLine2*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.Building\n  commentId: P:System.Device.Location.CivicAddress.Building\n  id: Building\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: Building\n  nameWithType: CivicAddress.Building\n  fullName: CivicAddress.Building\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the building name or number.\n  syntax:\n    content: public string Building { get; set; }\n    return:\n      type: System.String\n      description: Returns the building name or number. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Device.Location.CivicAddress.Building*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.City\n  commentId: P:System.Device.Location.CivicAddress.City\n  id: City\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: City\n  nameWithType: CivicAddress.City\n  fullName: CivicAddress.City\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the name of the city.\n  syntax:\n    content: public string City { get; set; }\n    return:\n      type: System.String\n      description: Returns the name of the city. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Device.Location.CivicAddress.City*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.CountryRegion\n  commentId: P:System.Device.Location.CivicAddress.CountryRegion\n  id: CountryRegion\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: CountryRegion\n  nameWithType: CivicAddress.CountryRegion\n  fullName: CivicAddress.CountryRegion\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the country or region of the location.\n  remarks: The country or region is typically represented by a two-letter ISO-3166 country code.\n  syntax:\n    content: public string CountryRegion { get; set; }\n    return:\n      type: System.String\n      description: Returns the country or region code. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Device.Location.CivicAddress.CountryRegion*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.FloorLevel\n  commentId: P:System.Device.Location.CivicAddress.FloorLevel\n  id: FloorLevel\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: FloorLevel\n  nameWithType: CivicAddress.FloorLevel\n  fullName: CivicAddress.FloorLevel\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the floor level of the location.\n  syntax:\n    content: public string FloorLevel { get; set; }\n    return:\n      type: System.String\n      description: Returns a string that contains the floor level. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Device.Location.CivicAddress.FloorLevel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.IsUnknown\n  commentId: P:System.Device.Location.CivicAddress.IsUnknown\n  id: IsUnknown\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: IsUnknown\n  nameWithType: CivicAddress.IsUnknown\n  fullName: CivicAddress.IsUnknown\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets a value that indicates whether the <xref href=\"System.Device.Location.CivicAddress\"></xref> contains data.\n  remarks: ''\n  example:\n  - \"The following example uses <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to check the <xref:System.Device.Location.CivicAddress> that is returned from <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> before the civic address is printed out.  \\n  \\n [!code-csharp[System.Device.Location.ResolveCivicAddressSync#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/cs/resolvecivicaddresssync.cs#2)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/vb/resolvecivicaddresssync.vb#2)]\"\n  syntax:\n    content: public bool IsUnknown { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Device.Location.CivicAddress\"></xref> is equal to <xref href=\"System.Device.Location.CivicAddress.Unknown\"></xref>; otherwise, `false`.'\n  overload: System.Device.Location.CivicAddress.IsUnknown*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.PostalCode\n  commentId: P:System.Device.Location.CivicAddress.PostalCode\n  id: PostalCode\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: PostalCode\n  nameWithType: CivicAddress.PostalCode\n  fullName: CivicAddress.PostalCode\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the postal code of the location.\n  syntax:\n    content: public string PostalCode { get; set; }\n    return:\n      type: System.String\n      description: Returns the postal code of the location. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Device.Location.CivicAddress.PostalCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.StateProvince\n  commentId: P:System.Device.Location.CivicAddress.StateProvince\n  id: StateProvince\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: StateProvince\n  nameWithType: CivicAddress.StateProvince\n  fullName: CivicAddress.StateProvince\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Gets or sets the state or province of the location.\n  syntax:\n    content: public string StateProvince { get; set; }\n    return:\n      type: System.String\n      description: Returns the state or province of the location. If the data is not provided, returns <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Device.Location.CivicAddress.StateProvince*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\n- uid: System.Device.Location.CivicAddress.Unknown\n  commentId: F:System.Device.Location.CivicAddress.Unknown\n  id: Unknown\n  parent: System.Device.Location.CivicAddress\n  langs:\n  - csharp\n  name: Unknown\n  nameWithType: CivicAddress.Unknown\n  fullName: CivicAddress.Unknown\n  type: Field\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  summary: Represents a <xref href=\"System.Device.Location.CivicAddress\"></xref> that contains no data.\n  remarks: Use <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to verify whether a <xref:System.Device.Location.CivicAddress> contains data.\n  example:\n  - \"The following example uses <xref:System.Device.Location.CivicAddress.IsUnknown%2A> to check the <xref:System.Device.Location.CivicAddress> that is returned from <xref:System.Device.Location.CivicAddressResolver.ResolveAddress%2A> before the civic address is printed out.  \\n  \\n [!code-csharp[System.Device.Location.ResolveCivicAddressSync#2](~/samples/snippets/csharp/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/cs/resolvecivicaddresssync.cs#2)]\\n [!code-vb[System.Device.Location.ResolveCivicAddressSync#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.device.location.resolvecivicaddresssync/vb/resolvecivicaddresssync.vb#2)]\"\n  syntax:\n    content: public static readonly System.Device.Location.CivicAddress Unknown;\n    return:\n      type: System.Device.Location.CivicAddress\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n  ms.technology:\n  - dotnet-standard\n  manager: martinek\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Device.Location.CivicAddress.#ctor\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CivicAddress()\n  nameWithType: CivicAddress.CivicAddress()\n  fullName: CivicAddress.CivicAddress()\n- uid: System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CivicAddress(String, String, String, String, String, String, String, String)\n  nameWithType: CivicAddress.CivicAddress(String, String, String, String, String, String, String, String)\n  fullName: CivicAddress.CivicAddress(String, String, String, String, String, String, String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Device.Location.CivicAddress.AddressLine1\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: AddressLine1\n  nameWithType: CivicAddress.AddressLine1\n  fullName: CivicAddress.AddressLine1\n- uid: System.Device.Location.CivicAddress.AddressLine2\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: AddressLine2\n  nameWithType: CivicAddress.AddressLine2\n  fullName: CivicAddress.AddressLine2\n- uid: System.Device.Location.CivicAddress.Building\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: Building\n  nameWithType: CivicAddress.Building\n  fullName: CivicAddress.Building\n- uid: System.Device.Location.CivicAddress.City\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: City\n  nameWithType: CivicAddress.City\n  fullName: CivicAddress.City\n- uid: System.Device.Location.CivicAddress.CountryRegion\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CountryRegion\n  nameWithType: CivicAddress.CountryRegion\n  fullName: CivicAddress.CountryRegion\n- uid: System.Device.Location.CivicAddress.FloorLevel\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: FloorLevel\n  nameWithType: CivicAddress.FloorLevel\n  fullName: CivicAddress.FloorLevel\n- uid: System.Device.Location.CivicAddress.IsUnknown\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: IsUnknown\n  nameWithType: CivicAddress.IsUnknown\n  fullName: CivicAddress.IsUnknown\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Device.Location.CivicAddress.PostalCode\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: PostalCode\n  nameWithType: CivicAddress.PostalCode\n  fullName: CivicAddress.PostalCode\n- uid: System.Device.Location.CivicAddress.StateProvince\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: StateProvince\n  nameWithType: CivicAddress.StateProvince\n  fullName: CivicAddress.StateProvince\n- uid: System.Device.Location.CivicAddress.Unknown\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: Unknown\n  nameWithType: CivicAddress.Unknown\n  fullName: CivicAddress.Unknown\n- uid: System.Device.Location.CivicAddress\n  parent: System.Device.Location\n  isExternal: false\n  name: CivicAddress\n  nameWithType: CivicAddress\n  fullName: System.Device.Location.CivicAddress\n- uid: System.Device.Location.CivicAddress.#ctor*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CivicAddress\n  nameWithType: CivicAddress.CivicAddress\n  fullName: CivicAddress.CivicAddress\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Device.Location.CivicAddress.AddressLine1*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: AddressLine1\n  nameWithType: CivicAddress.AddressLine1\n  fullName: CivicAddress.AddressLine1\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Device.Location.CivicAddress.AddressLine2*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: AddressLine2\n  nameWithType: CivicAddress.AddressLine2\n  fullName: CivicAddress.AddressLine2\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Device.Location.CivicAddress.Building*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: Building\n  nameWithType: CivicAddress.Building\n  fullName: CivicAddress.Building\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Device.Location.CivicAddress.City*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: City\n  nameWithType: CivicAddress.City\n  fullName: CivicAddress.City\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Device.Location.CivicAddress.CountryRegion*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: CountryRegion\n  nameWithType: CivicAddress.CountryRegion\n  fullName: CivicAddress.CountryRegion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Device.Location.CivicAddress.FloorLevel*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: FloorLevel\n  nameWithType: CivicAddress.FloorLevel\n  fullName: CivicAddress.FloorLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Device.Location.CivicAddress.IsUnknown*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: IsUnknown\n  nameWithType: CivicAddress.IsUnknown\n  fullName: CivicAddress.IsUnknown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Device.Location.CivicAddress.PostalCode*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: PostalCode\n  nameWithType: CivicAddress.PostalCode\n  fullName: CivicAddress.PostalCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Device.Location.CivicAddress.StateProvince*\n  parent: System.Device.Location.CivicAddress\n  isExternal: false\n  name: StateProvince\n  nameWithType: CivicAddress.StateProvince\n  fullName: CivicAddress.StateProvince\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Device.Location/CivicAddress.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}